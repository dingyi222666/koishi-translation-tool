<?xml version="1.0" encoding="UTF-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2">
  <file id="31" original="/[koishijs.translator] main/packages/core/src/locales/zh-CN.yml" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="101" resname="commands.translate.description">
        <source>文本翻译</source>
        <target state="translated">文本翻譯</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; translate -&gt; description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="103" resname="commands.translate.options.source">
        <source>源语言 (默认为自动匹配)</source>
        <target state="translated">源語言 (默認為自動匹配)</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; translate -&gt; options -&gt; source</context>
        </context-group>
      </trans-unit>
      <trans-unit id="105" resname="commands.translate.options.target">
        <source>目标语言 (默认为中文)</source>
        <target state="translated">目標語言 (默認為中文)</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; translate -&gt; options -&gt; target</context>
        </context-group>
        <note from="Miemiemie" priority="4">如果是日语状态下 目标语言默认是日语还是依然是中文</note>
        <note from="Shigma" priority="4">@Miemiemie 所有待翻译的文本源语言都是中文</note>
      </trans-unit>
      <trans-unit id="107" resname="commands.translate.messages.expect-input">
        <source>请输入要翻译的文本。</source>
        <target state="translated">請輸入要翻譯的文本。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; translate -&gt; messages -&gt; expect-input</context>
        </context-group>
      </trans-unit>
      <trans-unit id="109" resname="commands.translate.messages.output">
        <source>原文本：{input}
语言：{source} -&gt; {target}
翻译结果：{output}</source>
        <target state="translated">原文本：{input}
語言：{source} -&gt; {target}
翻譯結果：{output}</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; translate -&gt; messages -&gt; output</context>
        </context-group>
      </trans-unit>
    </body>
  </file>
  <file id="33" original="/[koishijs.novelai-bot] main/src/locales/zh-CN.yml" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="111" resname="commands.novelai.description">
        <source>AI 画图</source>
        <target state="translated">AI 繪圖</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; novelai -&gt; description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="113" resname="commands.novelai.usage">
        <source>输入用逗号隔开的英文标签，例如 Mr.Quin, dark sword, red eyes。
查找标签可以使用 Danbooru。
快来给仓库点个 star 吧：https://github.com/koishijs/novelai-bot</source>
        <target state="translated">輸入以逗號分割的英文提示詞，例如 portrait, blonde hair, red eyes。
查找可用的提示詞標籤可以使用 Danbooru。
快來給專案標星收藏吧：https://github.com/koishijs/novelai-bot</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; novelai -&gt; usage</context>
        </context-group>
      </trans-unit>
      <trans-unit id="115" resname="commands.novelai.options.enhance">
        <source>图片增强模式</source>
        <target state="translated">圖像增強模式</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; novelai -&gt; options -&gt; enhance</context>
        </context-group>
      </trans-unit>
      <trans-unit id="117" resname="commands.novelai.options.model">
        <source>设定生成模型</source>
        <target state="translated">設定生成模型</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; novelai -&gt; options -&gt; model</context>
        </context-group>
      </trans-unit>
      <trans-unit id="119" resname="commands.novelai.options.resolution">
        <source>设定图片尺寸</source>
        <target state="translated">設定圖像尺寸</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; novelai -&gt; options -&gt; resolution</context>
        </context-group>
      </trans-unit>
      <trans-unit id="121" resname="commands.novelai.options.override">
        <source>禁用默认标签</source>
        <target state="translated">禁用預設標籤</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; novelai -&gt; options -&gt; override</context>
        </context-group>
      </trans-unit>
      <trans-unit id="123" resname="commands.novelai.options.sampler">
        <source>设置采样器</source>
        <target state="translated">設定採樣器</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; novelai -&gt; options -&gt; sampler</context>
        </context-group>
      </trans-unit>
      <trans-unit id="125" resname="commands.novelai.options.seed">
        <source>设置随机种子</source>
        <target state="translated">設定隨機種子</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; novelai -&gt; options -&gt; seed</context>
        </context-group>
      </trans-unit>
      <trans-unit id="127" resname="commands.novelai.options.steps">
        <source>设置迭代步数</source>
        <target state="translated">設定迭代步數</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; novelai -&gt; options -&gt; steps</context>
        </context-group>
      </trans-unit>
      <trans-unit id="129" resname="commands.novelai.options.scale">
        <source>设置对输入的服从度</source>
        <target state="translated">設定提示詞的相關性</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; novelai -&gt; options -&gt; scale</context>
        </context-group>
      </trans-unit>
      <trans-unit id="131" resname="commands.novelai.options.strength">
        <source>图片修改幅度</source>
        <target state="translated">圖像修改幅度</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; novelai -&gt; options -&gt; strength</context>
        </context-group>
      </trans-unit>
      <trans-unit id="133" resname="commands.novelai.options.noise">
        <source>图片噪声强度</source>
        <target state="translated">圖像雜訊強度</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; novelai -&gt; options -&gt; noise</context>
        </context-group>
      </trans-unit>
      <trans-unit id="341" resname="commands.novelai.options.hiresFix">
        <source>启用高分辨率修复</source>
        <target state="translated">啟用高分辨率修復</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; novelai -&gt; options -&gt; hiresFix</context>
        </context-group>
      </trans-unit>
      <trans-unit id="135" resname="commands.novelai.options.undesired">
        <source>排除标签</source>
        <target state="translated">反向提示詞</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; novelai -&gt; options -&gt; undesired</context>
        </context-group>
      </trans-unit>
      <trans-unit id="137" resname="commands.novelai.options.noTranslator">
        <source>禁用自动翻译</source>
        <target state="translated">禁用自動翻譯</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; novelai -&gt; options -&gt; noTranslator</context>
        </context-group>
      </trans-unit>
      <trans-unit id="139" resname="commands.novelai.options.iterations">
        <source>设置绘制次数</source>
        <target state="translated">設定繪畫次數</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; novelai -&gt; options -&gt; iterations</context>
        </context-group>
      </trans-unit>
      <trans-unit id="141" resname="commands.novelai.messages.exceed-max-iteration">
        <source>超过最大绘制次数。</source>
        <target state="translated">超過最大繪畫次數</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; novelai -&gt; messages -&gt; exceed-max-iteration</context>
        </context-group>
      </trans-unit>
      <trans-unit id="143" resname="commands.novelai.messages.expect-prompt">
        <source>请输入标签。</source>
        <target state="translated">請輸入提示詞。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; novelai -&gt; messages -&gt; expect-prompt</context>
        </context-group>
      </trans-unit>
      <trans-unit id="145" resname="commands.novelai.messages.expect-image">
        <source>请输入图片。</source>
        <target state="translated">請輸入圖像。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; novelai -&gt; messages -&gt; expect-image</context>
        </context-group>
      </trans-unit>
      <trans-unit id="147" resname="commands.novelai.messages.latin-only">
        <source>只接受英文输入。</source>
        <target state="translated">僅接受英文提示詞。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; novelai -&gt; messages -&gt; latin-only</context>
        </context-group>
      </trans-unit>
      <trans-unit id="149" resname="commands.novelai.messages.too-many-words">
        <source>输入的单词数量过多。</source>
        <target state="translated">輸入的提示詞數量過多</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; novelai -&gt; messages -&gt; too-many-words</context>
        </context-group>
      </trans-unit>
      <trans-unit id="151" resname="commands.novelai.messages.forbidden-word">
        <source>输入含有违禁词。</source>
        <target state="translated">提示詞中含有違禁詞彙。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; novelai -&gt; messages -&gt; forbidden-word</context>
        </context-group>
      </trans-unit>
      <trans-unit id="153" resname="commands.novelai.messages.concurrent-jobs">
        <source>&lt;random&gt;
&lt;&gt;等会再约稿吧，我已经忙不过来了……&lt;/&gt;
&lt;&gt;是数位板没电了，才…才不是我不想画呢！&lt;/&gt;
&lt;&gt;那你得先教我画画（理直气壮&lt;/&gt;
&lt;/random&gt;</source>
        <target state="translated">&lt;random&gt;
  &lt;&gt;等下再畫吧，我已經忙不過來了……&lt;/&gt;
  &lt;&gt;我…我纔不是不會畫畫，只是沒時間！&lt;/&gt;
  &lt;&gt;我先喝杯咖啡可以嗎，好睏～&lt;/&gt;
&lt;/random&gt;</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; novelai -&gt; messages -&gt; concurrent-jobs</context>
        </context-group>
      </trans-unit>
      <trans-unit id="155" resname="commands.novelai.messages.waiting">
        <source>&lt;random&gt;
&lt;&gt;少女绘画中……&lt;/&gt;
&lt;&gt;在画了在画了&lt;/&gt;
&lt;&gt;你就在此地不要走动，等我给你画一幅&lt;/&gt;
&lt;/random&gt;</source>
        <target state="translated">&lt;random&gt;
  &lt;&gt;少女繪畫中&lt;/&gt;
  &lt;&gt;莫行開，我即時來畫！&lt;/&gt;
&lt;/random&gt;</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; novelai -&gt; messages -&gt; waiting</context>
        </context-group>
      </trans-unit>
      <trans-unit id="157" resname="commands.novelai.messages.pending">
        <source>在画了在画了，不过前面还有 {0} 个稿……</source>
        <target state="translated">好酒沉甕底。您還需等我完成前面 {0} 個稿件。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; novelai -&gt; messages -&gt; pending</context>
        </context-group>
      </trans-unit>
      <trans-unit id="159" resname="commands.novelai.messages.invalid-size">
        <source>增强功能仅适用于被生成的图片。普通的 img2img 请直接使用「约稿」而不是「增强」。</source>
        <target state="translated">增強功能僅適用於 Novel AI 生成圖。若要使用 img2img 功能請直接使用「約稿」而非「增強」。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; novelai -&gt; messages -&gt; invalid-size</context>
        </context-group>
      </trans-unit>
      <trans-unit id="161" resname="commands.novelai.messages.invalid-resolution">
        <source>非法的图片尺寸。宽高必须都为 64 的倍数。</source>
        <target state="translated">圖像尺寸無效。寬度與高度都須爲 64 的倍數。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; novelai -&gt; messages -&gt; invalid-resolution</context>
        </context-group>
      </trans-unit>
      <trans-unit id="343" resname="commands.novelai.messages.custom-resolution-unsupported">
        <source>不支持自定义图片尺寸。</source>
        <target state="translated">不支援自訂圖像尺寸。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; novelai -&gt; messages -&gt; custom-resolution-unsupported</context>
        </context-group>
      </trans-unit>
      <trans-unit id="163" resname="commands.novelai.messages.file-too-large">
        <source>文件体积过大。</source>
        <target state="translated">文件體積過大。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; novelai -&gt; messages -&gt; file-too-large</context>
        </context-group>
      </trans-unit>
      <trans-unit id="165" resname="commands.novelai.messages.unsupported-file-type">
        <source>不支持的文件格式。</source>
        <target state="translated">不支援的檔案格式。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; novelai -&gt; messages -&gt; unsupported-file-type</context>
        </context-group>
      </trans-unit>
      <trans-unit id="167" resname="commands.novelai.messages.download-error">
        <source>图片解析失败。</source>
        <target state="translated">圖像解析失敗。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; novelai -&gt; messages -&gt; download-error</context>
        </context-group>
      </trans-unit>
      <trans-unit id="169" resname="commands.novelai.messages.unknown-error">
        <source>发生未知错误。</source>
        <target state="translated">發生未知的錯誤。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; novelai -&gt; messages -&gt; unknown-error</context>
        </context-group>
      </trans-unit>
      <trans-unit id="171" resname="commands.novelai.messages.response-error">
        <source>发生未知错误 ({0})。</source>
        <target state="translated">發生未知的錯誤 ({0})。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; novelai -&gt; messages -&gt; response-error</context>
        </context-group>
      </trans-unit>
      <trans-unit id="173" resname="commands.novelai.messages.empty-response">
        <source>服务器返回了空白图片，请稍后重试。</source>
        <target state="translated">伺服器返回了空圖像，請稍後重試。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; novelai -&gt; messages -&gt; empty-response</context>
        </context-group>
      </trans-unit>
      <trans-unit id="175" resname="commands.novelai.messages.request-failed">
        <source>请求失败 ({0})，请稍后重试。</source>
        <target state="translated">擷取資料失敗 ({0})，請稍後重試。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; novelai -&gt; messages -&gt; request-failed</context>
        </context-group>
      </trans-unit>
      <trans-unit id="177" resname="commands.novelai.messages.request-timeout">
        <source>请求超时。</source>
        <target state="translated">擷取資料超時。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; novelai -&gt; messages -&gt; request-timeout</context>
        </context-group>
      </trans-unit>
      <trans-unit id="179" resname="commands.novelai.messages.invalid-password">
        <source>邮箱或密码错误。</source>
        <target state="translated">電郵地址或密碼不正確。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; novelai -&gt; messages -&gt; invalid-password</context>
        </context-group>
      </trans-unit>
      <trans-unit id="181" resname="commands.novelai.messages.invalid-token">
        <source>令牌无效或已过期，请联系管理员。</source>
        <target state="translated">令牌無效或已過期，請聯繫管理員。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; novelai -&gt; messages -&gt; invalid-token</context>
        </context-group>
      </trans-unit>
      <trans-unit id="183" resname="commands.novelai.messages.unauthorized">
        <source>令牌未授权，可能需要续费，请联系管理员。</source>
        <target state="translated">令牌未經授權，可能關聯帳戶需要續費，請聯繫管理員。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; novelai -&gt; messages -&gt; unauthorized</context>
        </context-group>
      </trans-unit>
      <trans-unit id="215" resname="commands.&quot;novelai.upscale&quot;.description">
        <source>AI 放大图片</source>
        <target state="translated">AI 放大圖像</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; novelai.upscale -&gt; description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="217" resname="commands.&quot;novelai.upscale&quot;.options.scale">
        <source>设置放大倍数</source>
        <target state="translated">設定放大倍率</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; novelai.upscale -&gt; options -&gt; scale</context>
        </context-group>
      </trans-unit>
      <trans-unit id="219" resname="commands.&quot;novelai.upscale&quot;.options.resolution">
        <source>设定放大尺寸</source>
        <target state="translated">設定放大尺寸</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; novelai.upscale -&gt; options -&gt; resolution</context>
        </context-group>
      </trans-unit>
      <trans-unit id="221" resname="commands.&quot;novelai.upscale&quot;.options.crop">
        <source>是否裁剪以适应尺寸</source>
        <target state="translated">是否裁剪以適應尺寸</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; novelai.upscale -&gt; options -&gt; crop</context>
        </context-group>
      </trans-unit>
      <trans-unit id="223" resname="commands.&quot;novelai.upscale&quot;.options.upscaler">
        <source>设置放大模型</source>
        <target state="translated">設定放大模型</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; novelai.upscale -&gt; options -&gt; upscaler</context>
        </context-group>
      </trans-unit>
      <trans-unit id="225" resname="commands.&quot;novelai.upscale&quot;.options.upscaler2">
        <source>设置放大模型 2</source>
        <target state="translated">設定放大模型 2</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; novelai.upscale -&gt; options -&gt; upscaler2</context>
        </context-group>
      </trans-unit>
      <trans-unit id="227" resname="commands.&quot;novelai.upscale&quot;.options.upscaler2visibility">
        <source>设置放大模型 2 的可见度</source>
        <target state="translated">設定放大模型 2 的可視度</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; novelai.upscale -&gt; options -&gt; upscaler2visibility</context>
        </context-group>
      </trans-unit>
      <trans-unit id="229" resname="commands.&quot;novelai.upscale&quot;.options.upscaleFirst">
        <source>先放大再执行面部修复</source>
        <target state="translated">先放大再執行面部修復</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; novelai.upscale -&gt; options -&gt; upscaleFirst</context>
        </context-group>
      </trans-unit>
      <trans-unit id="231" resname="commands.&quot;novelai.upscale&quot;.messages.expect-image">
        <source>请输入图片。</source>
        <target state="translated">請輸入圖像。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; novelai.upscale -&gt; messages -&gt; expect-image</context>
        </context-group>
      </trans-unit>
      <trans-unit id="233" resname="commands.&quot;novelai.upscale&quot;.messages.download-error">
        <source>图片解析失败。</source>
        <target state="translated">圖像解析失敗。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; novelai.upscale -&gt; messages -&gt; download-error</context>
        </context-group>
      </trans-unit>
      <trans-unit id="235" resname="commands.&quot;novelai.upscale&quot;.messages.unknown-error">
        <source>发生未知错误。</source>
        <target state="translated">發生未知的錯誤。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; novelai.upscale -&gt; messages -&gt; unknown-error</context>
        </context-group>
      </trans-unit>
    </body>
  </file>
  <file id="41" original="/[koishijs.koishi-plugin-hangman] main/src/locales/zh-CN.yml" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="185" resname="commands.hangman.description">
        <source>猜单词</source>
        <target state="translated">猜單詞</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; hangman -&gt; description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="187" resname="commands.hangman.options.quit">
        <source>退出游戏</source>
        <target state="translated">退出遊戲</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; hangman -&gt; options -&gt; quit</context>
        </context-group>
      </trans-unit>
      <trans-unit id="189" resname="commands.hangman.usage">
        <source>系统将生成一个随机的英文词汇，玩家的目标是猜出这个词，共有 10 次尝试机会。
每次可以猜测一个字母，如果在词中出现则会提示出现位置，否则会消耗一次尝试机会。尝试机会用完则游戏失败。</source>
        <target state="translated">系統將生成一個隨機的英文詞匯，玩家的目標是猜出這個詞，共有 10 次嘗試機會。
每次可以猜測一個字母，如果在詞中出現則會提示出現位置，否則會消耗一次嘗試機會。嘗試機會用完則遊戲失敗。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; hangman -&gt; usage</context>
        </context-group>
      </trans-unit>
      <trans-unit id="191" resname="commands.hangman.messages.idle">
        <source>没有正在进行的吊死鬼游戏。输入“吊死鬼”开始一轮游戏。</source>
        <target state="translated">沒有正在進行的吊死鬼遊戲。輸入「吊死鬼」開始一輪遊戲。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; hangman -&gt; messages -&gt; idle</context>
        </context-group>
      </trans-unit>
      <trans-unit id="193" resname="commands.hangman.messages.start">
        <source>游戏开始，要猜的词为 {0}，剩余 10 次机会。</source>
        <target state="translated">遊戲開始，要猜的詞為 {0}，剩余 10 次機會。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; hangman -&gt; messages -&gt; start</context>
        </context-group>
      </trans-unit>
      <trans-unit id="195" resname="commands.hangman.messages.stop">
        <source>游戏结束。</source>
        <target state="translated">遊戲結束。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; hangman -&gt; messages -&gt; stop</context>
        </context-group>
      </trans-unit>
      <trans-unit id="197" resname="commands.hangman.messages.history-clean">
        <source>当前要猜的词为 {current}，剩余 {chances} 次机会。</source>
        <target state="translated">當前要猜的詞為 {current}，剩余 {chances} 次機會。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; hangman -&gt; messages -&gt; history-clean</context>
        </context-group>
      </trans-unit>
      <trans-unit id="199" resname="commands.hangman.messages.history">
        <source>当前要猜的词为 {current}，已使用的字母为 {history}，剩余 {chances} 次机会。</source>
        <target state="translated">當前要猜的詞為 {current}，已使用的字母為 {history}，剩余 {chances} 次機會。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; hangman -&gt; messages -&gt; history</context>
        </context-group>
      </trans-unit>
      <trans-unit id="201" resname="commands.hangman.messages.right">
        <source>尝试成功！剩余字母为 {current}，已使用的字母为 {history}，剩余 {chances} 次机会。</source>
        <target state="translated">嘗試成功！剩余字母為 {current}，已使用的字母為 {history}，剩余 {chances} 次機會。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; hangman -&gt; messages -&gt; right</context>
        </context-group>
      </trans-unit>
      <trans-unit id="203" resname="commands.hangman.messages.wrong">
        <source>尝试失败！剩余字母为 {current}，已使用的字母为 {history}，剩余 {chances} 次机会。</source>
        <target state="translated">嘗試失敗！剩余字母為 {current}，已使用的字母為 {history}，剩余 {chances} 次機會。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; hangman -&gt; messages -&gt; wrong</context>
        </context-group>
      </trans-unit>
      <trans-unit id="205" resname="commands.hangman.messages.answer">
        <source>{text}</source>
        <target state="translated">{text}</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; hangman -&gt; messages -&gt; answer</context>
        </context-group>
      </trans-unit>
      <trans-unit id="207" resname="commands.hangman.messages.win">
        <source>尝试成功！恭喜 {1} 回答正确！
正确答案为：{0}。</source>
        <target state="translated">嘗試成功！恭喜 {1} 回答正確！
正確答案為：{0}。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; hangman -&gt; messages -&gt; win</context>
        </context-group>
      </trans-unit>
      <trans-unit id="209" resname="commands.hangman.messages.lose">
        <source>尝试失败！由于机会已耗尽，游戏结束。
正确答案为：{0}。</source>
        <target state="translated">嘗試失敗！由於機會已耗盡，遊戲結束。
正確答案為：{0}。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; hangman -&gt; messages -&gt; lose</context>
        </context-group>
      </trans-unit>
      <trans-unit id="211" resname="commands.hangman.messages.char-used">
        <source>该字母已经使用过，换一个叭~</source>
        <target state="translated">該字母已經使用過，換一個叭~</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; hangman -&gt; messages -&gt; char-used</context>
        </context-group>
      </trans-unit>
      <trans-unit id="213" resname="commands.hangman.messages.char-invalid">
        <source>请输入英文字母进行猜测。</source>
        <target state="translated">請輸入英文字母進行猜測。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; hangman -&gt; messages -&gt; char-invalid</context>
        </context-group>
      </trans-unit>
    </body>
  </file>
  <file id="75" original="/[koishijs.koishi-plugin-switch] main/src/locales/zh-CN.yml" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="431" resname="commands.switch.description">
        <source>启用和禁用指令</source>
        <target state="translated">啟用和禁用指令</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; switch -&gt; description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="433" resname="commands.switch.messages.forbidden">
        <source>您无权修改 {0} 功能。</source>
        <target state="needs-translation">您无权修改 {0} 功能。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; switch -&gt; messages -&gt; forbidden</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65122" resname="commands.switch.messages.list-enabled">
        <source>当前启用的功能有：{0}</source>
        <target state="needs-translation">当前启用的功能有：{0}</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; switch -&gt; messages -&gt; list-enabled</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65124" resname="commands.switch.messages.list-disabled">
        <source>当前禁用的功能有：{0}</source>
        <target state="needs-translation">当前禁用的功能有：{0}</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; switch -&gt; messages -&gt; list-disabled</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65126" resname="commands.switch.messages.none">
        <source>当前没有启用或禁用功能。</source>
        <target state="needs-translation">当前没有启用或禁用功能。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; switch -&gt; messages -&gt; none</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63978" resname="commands.switch.messages.conflict">
        <source>选项冲突。</source>
        <target state="needs-translation">选项冲突。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; switch -&gt; messages -&gt; conflict</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63980" resname="commands.switch.messages.unchanged">
        <source>无任何更改。</source>
        <target state="needs-translation">无任何更改。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; switch -&gt; messages -&gt; unchanged</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65394" resname="commands.switch.messages.reset-ready">
        <source>要重置所有功能，使用-R参数。</source>
        <target state="needs-translation">要重置所有功能，使用-R参数。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; switch -&gt; messages -&gt; reset-ready</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65130" resname="commands.switch.messages.reset">
        <source>已重置所有功能。</source>
        <target state="needs-translation">已重置所有功能。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; switch -&gt; messages -&gt; reset</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65132" resname="commands.switch.messages.enabled">
        <source>启用 {0} 功能</source>
        <target state="needs-translation">启用 {0} 功能</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; switch -&gt; messages -&gt; enabled</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65134" resname="commands.switch.messages.disabled">
        <source>禁用 {0} 功能</source>
        <target state="needs-translation">禁用 {0} 功能</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; switch -&gt; messages -&gt; disabled</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65136" resname="commands.switch.messages.output">
        <source>已{0}。</source>
        <target state="needs-translation">已{0}。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; switch -&gt; messages -&gt; output</context>
        </context-group>
      </trans-unit>
    </body>
  </file>
  <file id="465" original="/koishi.tbx" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="13833">
        <source>频道</source>
        <target state="needs-translation">频道</target>
        <context-group purpose="information">
          <context context-type="source">可容纳多个用户的聊天上下文</context>
        </context-group>
      </trans-unit>
      <trans-unit id="13835">
        <source>Koishi</source>
        <target state="translated">Koishi</target>
      </trans-unit>
      <trans-unit id="13837">
        <source>聊天平台</source>
        <target state="needs-translation">聊天平台</target>
      </trans-unit>
      <trans-unit id="13839">
        <source>插件</source>
        <target state="needs-translation">插件</target>
      </trans-unit>
      <trans-unit id="13841">
        <source>适配器</source>
        <target state="needs-translation">适配器</target>
      </trans-unit>
      <trans-unit id="13843">
        <source>插件市场</source>
        <target state="needs-translation">插件市场</target>
      </trans-unit>
      <trans-unit id="13845">
        <source>服务</source>
        <target state="needs-translation">服务</target>
      </trans-unit>
      <trans-unit id="13847">
        <source>插件设置</source>
        <target state="needs-translation">插件设置</target>
      </trans-unit>
      <trans-unit id="13849">
        <source>指令</source>
        <target state="needs-translation">指令</target>
      </trans-unit>
      <trans-unit id="13851">
        <source>子指令</source>
        <target state="needs-translation">子指令</target>
      </trans-unit>
      <trans-unit id="13853">
        <source>参数</source>
        <target state="needs-translation">参数</target>
      </trans-unit>
      <trans-unit id="13855">
        <source>参数</source>
        <target state="needs-translation">参数</target>
      </trans-unit>
      <trans-unit id="13857">
        <source>函数</source>
        <target state="needs-translation">函数</target>
      </trans-unit>
      <trans-unit id="13859">
        <source>中间件</source>
        <target state="needs-translation">中间件</target>
      </trans-unit>
      <trans-unit id="13861">
        <source>古明地恋</source>
        <target state="needs-translation">古明地恋</target>
      </trans-unit>
      <trans-unit id="13863">
        <source>返回值</source>
        <target state="needs-translation">返回值</target>
      </trans-unit>
      <trans-unit id="13865">
        <source>用户</source>
        <target state="translated">使用者</target>
      </trans-unit>
      <trans-unit id="13867">
        <source>数据库</source>
        <target state="needs-translation">数据库</target>
      </trans-unit>
      <trans-unit id="13869">
        <source>群</source>
        <target state="needs-translation">群</target>
      </trans-unit>
      <trans-unit id="13871">
        <source>类型</source>
        <target state="needs-translation">类型</target>
      </trans-unit>
      <trans-unit id="13873">
        <source>飞书</source>
        <target state="needs-translation">飞书</target>
      </trans-unit>
      <trans-unit id="13875">
        <source>QQ 频道</source>
        <target state="translated">QQ 頻道</target>
      </trans-unit>
      <trans-unit id="13877">
        <source>受理人</source>
        <target state="needs-translation">受理人</target>
      </trans-unit>
      <trans-unit id="13879">
        <source>依赖</source>
        <target state="needs-translation">依赖</target>
      </trans-unit>
      <trans-unit id="13881">
        <source>接下来……</source>
        <target state="needs-translation">接下来……</target>
      </trans-unit>
      <trans-unit id="13883">
        <source>开发指南</source>
        <target state="needs-translation">开发指南</target>
      </trans-unit>
      <trans-unit id="13885">
        <source>聊天机器人</source>
        <target state="needs-translation">聊天机器人</target>
      </trans-unit>
      <trans-unit id="13897">
        <source>选项</source>
        <target state="needs-translation">选项</target>
      </trans-unit>
      <trans-unit id="14581">
        <source>安装包</source>
        <target state="needs-translation">安装包</target>
      </trans-unit>
      <trans-unit id="14583">
        <source>控制台</source>
        <target state="needs-translation">控制台</target>
      </trans-unit>
      <trans-unit id="15247">
        <source>热重载</source>
        <target state="needs-translation">热重载</target>
      </trans-unit>
      <trans-unit id="15455">
        <source>活动栏</source>
        <target state="needs-translation">活动栏</target>
      </trans-unit>
      <trans-unit id="15635">
        <source>废弃</source>
        <target state="needs-translation">废弃</target>
      </trans-unit>
      <trans-unit id="18287">
        <source>命令行工具</source>
        <target state="needs-translation">命令行工具</target>
      </trans-unit>
      <trans-unit id="18457">
        <source>可重用</source>
        <target state="needs-translation">可重用</target>
      </trans-unit>
      <trans-unit id="20353">
        <source>会话过滤器</source>
        <target state="needs-translation">会话过滤器</target>
      </trans-unit>
      <trans-unit id="20355">
        <source>会话</source>
        <target state="needs-translation">会话</target>
      </trans-unit>
      <trans-unit id="21589">
        <source>消息元素</source>
        <target state="needs-translation">消息元素</target>
      </trans-unit>
      <trans-unit id="25835">
        <source>内部接口</source>
        <target state="needs-translation">内部接口</target>
      </trans-unit>
      <trans-unit id="29591">
        <source>入门</source>
        <target state="translated">入門</target>
        <context-group purpose="information">
          <context context-type="x-crowdin-screenshot">https://crowdin.com/s/wrap/b3d383g3i4a3v6c3k5f605p485r4v443l405p4e4u46535r4l646a6l4i443k4i615n4?t=29591</context>
        </context-group>
      </trans-unit>
      <trans-unit id="29593">
        <source>启用</source>
        <target state="needs-translation">启用</target>
      </trans-unit>
      <trans-unit id="41188">
        <source>应用目录</source>
        <target state="needs-translation">应用目录</target>
      </trans-unit>
      <trans-unit id="41190">
        <source>启动脚本</source>
        <target state="translated">啟動指令碼</target>
        <context-group purpose="information">
          <context context-type="x-crowdin-screenshot">https://crowdin.com/s/wrap/b3d383g3i4a3v6i3k5f605p485r4v443l405p4e4q4s4c5r4h6i6j6u2l615d6?t=41190</context>
        </context-group>
      </trans-unit>
      <trans-unit id="41192">
        <source>模块热替换</source>
        <target state="needs-translation">模块热替换</target>
      </trans-unit>
      <trans-unit id="41194">
        <source>私域</source>
        <target state="needs-translation">私域</target>
      </trans-unit>
      <trans-unit id="41502">
        <source>实验性</source>
        <target state="needs-translation">实验性</target>
      </trans-unit>
    </body>
  </file>
  <file id="491" original="/[koishijs.koishi] master/packages/core/src/locales/zh-CN.yml" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="15249" resname="general.$">
        <source>通用设置</source>
        <target state="translated">通用設定</target>
        <context-group purpose="information">
          <context context-type="source">general -&gt; $</context>
        </context-group>
      </trans-unit>
      <trans-unit id="15251" resname="general.name">
        <source>中文</source>
        <target state="translated">中文</target>
        <context-group purpose="information">
          <context context-type="source">general -&amp;gt; name

翻译应当写当前语言的名字（注意首字母大写），如英语（美国）应当写 English，而法语应当写 Français。
You should write the capitalized name of the current language in the translation, for example, &amp;quot;English&amp;quot; for English (US) and &amp;quot;Français&amp;quot; for French.</context>
        </context-group>
      </trans-unit>
      <trans-unit id="15253" resname="general.paren">
        <source>（{0}）</source>
        <target state="translated">（{0}）</target>
        <context-group purpose="information">
          <context context-type="source">general -&gt; paren</context>
        </context-group>
      </trans-unit>
      <trans-unit id="15255" resname="general.quote">
        <source>“{0}”</source>
        <target state="translated">“{0}”</target>
        <context-group purpose="information">
          <context context-type="source">general -&gt; quote</context>
        </context-group>
      </trans-unit>
      <trans-unit id="15257" resname="general.comma">
        <source>，</source>
        <target state="translated">，</target>
        <context-group purpose="information">
          <context context-type="source">general -&gt; comma</context>
        </context-group>
      </trans-unit>
      <trans-unit id="15259" resname="general.and">
        <source>和</source>
        <target state="translated">和</target>
        <context-group purpose="information">
          <context context-type="source">general -&gt; and</context>
        </context-group>
      </trans-unit>
      <trans-unit id="15261" resname="general.or">
        <source>或</source>
        <target state="translated">或</target>
        <context-group purpose="information">
          <context context-type="source">general -&gt; or</context>
        </context-group>
      </trans-unit>
      <trans-unit id="15263" resname="general.day">
        <source>天</source>
        <target state="translated">天</target>
        <context-group purpose="information">
          <context context-type="source">general -&gt; day</context>
        </context-group>
      </trans-unit>
      <trans-unit id="15265" resname="general.hour">
        <source>小时</source>
        <target state="translated">小時</target>
        <context-group purpose="information">
          <context context-type="source">general -&gt; hour</context>
        </context-group>
      </trans-unit>
      <trans-unit id="15267" resname="general.minute">
        <source>分钟</source>
        <target state="translated">分鐘</target>
        <context-group purpose="information">
          <context context-type="source">general -&gt; minute</context>
        </context-group>
      </trans-unit>
      <trans-unit id="15269" resname="general.second">
        <source>秒</source>
        <target state="translated">秒</target>
        <context-group purpose="information">
          <context context-type="source">general -&gt; second</context>
        </context-group>
      </trans-unit>
      <trans-unit id="15271" resname="internal.$">
        <source>核心文本</source>
        <target state="translated">核心文本</target>
        <context-group purpose="information">
          <context context-type="source">internal -&gt; $</context>
        </context-group>
      </trans-unit>
      <trans-unit id="15273" resname="internal.error-encountered">
        <source>发生未知错误。</source>
        <target state="translated">發生未知的錯誤。</target>
        <context-group purpose="information">
          <context context-type="source">internal -&gt; error-encountered</context>
        </context-group>
      </trans-unit>
      <trans-unit id="15275" resname="internal.low-authority">
        <source>权限不足。</source>
        <target state="translated">權限不足。</target>
        <context-group purpose="information">
          <context context-type="source">internal -&gt; low-authority</context>
        </context-group>
      </trans-unit>
      <trans-unit id="37048" resname="internal.prompt-argument">
        <source>请发送{0}。</source>
        <target state="needs-translation">请发送{0}。</target>
        <context-group purpose="information">
          <context context-type="source">internal -&gt; prompt-argument</context>
        </context-group>
      </trans-unit>
      <trans-unit id="15277" resname="internal.insufficient-arguments">
        <source>缺少参数，输入帮助以查看用法。</source>
        <target state="translated">缺少參數，輸入幫助以查看用法。</target>
        <context-group purpose="information">
          <context context-type="source">internal -&gt; insufficient-arguments</context>
        </context-group>
      </trans-unit>
      <trans-unit id="15279" resname="internal.redunant-arguments">
        <source>存在多余参数，输入帮助以查看用法。</source>
        <target state="translated">存在多餘參數，輸入幫助以查看用法。</target>
        <context-group purpose="information">
          <context context-type="source">internal -&gt; redunant-arguments</context>
        </context-group>
      </trans-unit>
      <trans-unit id="15281" resname="internal.invalid-argument">
        <source>参数 {0} 输入无效，{1}</source>
        <target state="translated">參數 {0} 輸入無效，{1}</target>
        <context-group purpose="information">
          <context context-type="source">internal -&gt; invalid-argument</context>
        </context-group>
      </trans-unit>
      <trans-unit id="15283" resname="internal.unknown-option">
        <source>存在未知选项 {0}，输入帮助以查看用法。</source>
        <target state="translated">存在未知選項 {0}，輸入幫助以查看用法。</target>
        <context-group purpose="information">
          <context context-type="source">internal -&gt; unknown-option</context>
        </context-group>
      </trans-unit>
      <trans-unit id="15285" resname="internal.invalid-option">
        <source>选项 {0} 输入无效，{1}</source>
        <target state="translated">選項 {0} 輸入無效，{1}</target>
        <context-group purpose="information">
          <context context-type="source">internal -&gt; invalid-option</context>
        </context-group>
      </trans-unit>
      <trans-unit id="15287" resname="internal.check-syntax">
        <source>输入帮助以查看用法。</source>
        <target state="translated">輸入幫助以查看用法。</target>
        <context-group purpose="information">
          <context context-type="source">internal -&gt; check-syntax</context>
        </context-group>
      </trans-unit>
      <trans-unit id="15289" resname="internal.invalid-number">
        <source>请提供一个数字。</source>
        <target state="translated">請提供一個數字。</target>
        <context-group purpose="information">
          <context context-type="source">internal -&gt; invalid-number</context>
        </context-group>
      </trans-unit>
      <trans-unit id="15291" resname="internal.invalid-integer">
        <source>请提供一个整数。</source>
        <target state="translated">請提供一個整數。</target>
        <context-group purpose="information">
          <context context-type="source">internal -&gt; invalid-integer</context>
        </context-group>
      </trans-unit>
      <trans-unit id="15293" resname="internal.invalid-posint">
        <source>请提供一个正整数。</source>
        <target state="translated">請提供一個正整數。</target>
        <context-group purpose="information">
          <context context-type="source">internal -&gt; invalid-posint</context>
        </context-group>
      </trans-unit>
      <trans-unit id="15295" resname="internal.invalid-natural">
        <source>请提供一个非负整数。</source>
        <target state="translated">請提供一個非負整數。</target>
        <context-group purpose="information">
          <context context-type="source">internal -&gt; invalid-natural</context>
        </context-group>
      </trans-unit>
      <trans-unit id="15297" resname="internal.invalid-date">
        <source>请输入合法的时间。</source>
        <target state="translated">請輸入合法的時間。</target>
        <context-group purpose="information">
          <context context-type="source">internal -&gt; invalid-date</context>
        </context-group>
      </trans-unit>
      <trans-unit id="15299" resname="internal.invalid-user">
        <source>请指定正确的用户。</source>
        <target state="translated">請指定正確的使用者。</target>
        <context-group purpose="information">
          <context context-type="source">internal -&gt; invalid-user</context>
        </context-group>
      </trans-unit>
      <trans-unit id="15301" resname="internal.invalid-channel">
        <source>请指定正确的频道。</source>
        <target state="translated">請指定正確的頻道。</target>
        <context-group purpose="information">
          <context context-type="source">internal -&gt; invalid-channel</context>
        </context-group>
      </trans-unit>
      <trans-unit id="64144" resname="internal.invalid-image">
        <source>请输入图片。</source>
        <target state="translated">請輸入圖像。</target>
        <context-group purpose="information">
          <context context-type="source">internal -&gt; invalid-image</context>
        </context-group>
      </trans-unit>
      <trans-unit id="15303" resname="internal.suggest-hint">
        <source>您要找的是不是{0}？</source>
        <target state="translated">您要找的是不是{0}？</target>
        <context-group purpose="information">
          <context context-type="source">internal -&amp;gt; suggest-hint

当用户输入的指令有误的时候，提示用户正确的指令。</context>
        </context-group>
      </trans-unit>
      <trans-unit id="40888" resname="internal.suggest-command">
        <source>回复句号以使用推测的指令。</source>
        <target state="needs-translation">回复句号以使用推测的指令。</target>
        <context-group purpose="information">
          <context context-type="source">internal -&gt; suggest-command</context>
        </context-group>
      </trans-unit>
      <trans-unit id="15307" resname="commands.$">
        <source>指令系统</source>
        <target state="translated">指令系統</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; $</context>
        </context-group>
      </trans-unit>
    </body>
  </file>
  <file id="493" original="/[koishijs.koishi] master/plugins/common/help/src/locales/zh-CN.yml" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="15309" resname="commands.help.description">
        <source>显示帮助信息</source>
        <target state="translated">顯示幫助信息</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; help -&gt; description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="15311" resname="commands.help.shortcuts.help">
        <source>帮助</source>
        <target state="translated">幫助</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; help -&gt; shortcuts -&gt; help</context>
        </context-group>
      </trans-unit>
      <trans-unit id="15313" resname="commands.help.options.help">
        <source>显示此信息</source>
        <target state="translated">顯示此信息</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; help -&gt; options -&gt; help</context>
        </context-group>
      </trans-unit>
      <trans-unit id="15315" resname="commands.help.options.authority">
        <source>显示权限设置</source>
        <target state="translated">顯示權限設定</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; help -&gt; options -&gt; authority</context>
        </context-group>
      </trans-unit>
      <trans-unit id="15317" resname="commands.help.options.showHidden">
        <source>查看隐藏的选项和指令</source>
        <target state="translated">查看隱藏的選項和指令</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; help -&gt; options -&gt; showHidden</context>
        </context-group>
      </trans-unit>
      <trans-unit id="15319" resname="commands.help.messages.not-found">
        <source>指令未找到。</source>
        <target state="translated">指令未找到。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; help -&gt; messages -&gt; not-found</context>
        </context-group>
      </trans-unit>
      <trans-unit id="15321" resname="commands.help.messages.hint-authority">
        <source>括号内为对应的最低权限等级</source>
        <target state="translated">括號內為對應的最低權限等級</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; help -&gt; messages -&gt; hint-authority</context>
        </context-group>
      </trans-unit>
      <trans-unit id="15323" resname="commands.help.messages.hint-subcommand">
        <source>标有星号的表示含有子指令</source>
        <target state="translated">標有星號的表示含有子指令</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; help -&gt; messages -&gt; hint-subcommand</context>
        </context-group>
      </trans-unit>
      <trans-unit id="15325" resname="commands.help.messages.command-title">
        <source>指令：{0}</source>
        <target state="translated">指令：{0}</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; help -&gt; messages -&gt; command-title</context>
        </context-group>
      </trans-unit>
      <trans-unit id="15327" resname="commands.help.messages.command-aliases">
        <source>别名：{0}。</source>
        <target state="translated">別名：{0}。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; help -&gt; messages -&gt; command-aliases</context>
        </context-group>
      </trans-unit>
      <trans-unit id="15329" resname="commands.help.messages.command-examples">
        <source>使用示例：</source>
        <target state="translated">使用示例：</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; help -&gt; messages -&gt; command-examples</context>
        </context-group>
      </trans-unit>
      <trans-unit id="15331" resname="commands.help.messages.command-authority">
        <source>最低权限：{0} 级。</source>
        <target state="translated">最低權限：{0} 級。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; help -&gt; messages -&gt; command-authority</context>
        </context-group>
      </trans-unit>
      <trans-unit id="15333" resname="commands.help.messages.subcommand-prolog">
        <source>可用的子指令有{0}：</source>
        <target state="translated">可用的子指令有{0}：</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; help -&gt; messages -&gt; subcommand-prolog</context>
        </context-group>
      </trans-unit>
      <trans-unit id="15335" resname="commands.help.messages.global-prolog">
        <source>当前可用的指令有{0}：</source>
        <target state="translated">當前可用的指令有{0}：</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; help -&gt; messages -&gt; global-prolog</context>
        </context-group>
      </trans-unit>
      <trans-unit id="15337" resname="commands.help.messages.global-epilog">
        <source>输入“{0}help 指令名”查看特定指令的语法和使用示例。</source>
        <target state="translated">輸入“{0}help 指令名”查看特定指令的語法和使用示例。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; help -&gt; messages -&gt; global-epilog</context>
        </context-group>
      </trans-unit>
      <trans-unit id="15339" resname="commands.help.messages.available-options">
        <source>可用的选项有：</source>
        <target state="translated">可用的選項有：</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; help -&gt; messages -&gt; available-options</context>
        </context-group>
      </trans-unit>
      <trans-unit id="15341" resname="commands.help.messages.available-options-with-authority">
        <source>可用的选项有（括号内为额外要求的权限等级）：</source>
        <target state="translated">可用的選項有（括號內為額外要求的權限等級）：</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; help -&gt; messages -&gt; available-options-with-authority</context>
        </context-group>
      </trans-unit>
    </body>
  </file>
  <file id="519" original="/[koishijs.koishi] master/plugins/common/admin/src/locales/zh-CN.yml" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="15457" resname="commands.user.description">
        <source>用户管理</source>
        <target state="translated">使用者管理</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; user -&gt; description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="15459" resname="commands.channel.description">
        <source>频道管理</source>
        <target state="translated">頻道管理</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; channel -&gt; description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="15461" resname="commands.authorize.description">
        <source>权限管理</source>
        <target state="translated">權限管理</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; authorize -&gt; description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="15463" resname="commands.assign.description">
        <source>受理者账号</source>
        <target state="translated">受理者賬號</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; assign -&gt; description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="15465" resname="commands.&quot;user.locale&quot;.description">
        <source>语言偏好</source>
        <target state="translated">語言偏好</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; user.locale -&gt; description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="15469" resname="commands.&quot;channel.locale&quot;.description">
        <source>语言偏好</source>
        <target state="translated">語言偏好</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; channel.locale -&gt; description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="15473" resname="admin.user-option">
        <source>指定目标用户</source>
        <target state="translated">指定目標使用者</target>
        <context-group purpose="information">
          <context context-type="source">admin -&gt; user-option</context>
        </context-group>
      </trans-unit>
      <trans-unit id="15475" resname="admin.user-not-found">
        <source>未找到指定的用户。</source>
        <target state="translated">未找到指定的使用者。</target>
        <context-group purpose="information">
          <context context-type="source">admin -&gt; user-not-found</context>
        </context-group>
      </trans-unit>
      <trans-unit id="15477" resname="admin.user-unchanged">
        <source>用户数据未改动。</source>
        <target state="translated">使用者數據未改動。</target>
        <context-group purpose="information">
          <context context-type="source">admin -&gt; user-unchanged</context>
        </context-group>
      </trans-unit>
      <trans-unit id="15479" resname="admin.user-updated">
        <source>用户数据已修改。</source>
        <target state="translated">使用者數據已修改。</target>
        <context-group purpose="information">
          <context context-type="source">admin -&gt; user-updated</context>
        </context-group>
      </trans-unit>
      <trans-unit id="15481" resname="admin.channel-option">
        <source>指定目标频道</source>
        <target state="translated">指定目標頻道</target>
        <context-group purpose="information">
          <context context-type="source">admin -&gt; channel-option</context>
        </context-group>
      </trans-unit>
      <trans-unit id="15483" resname="admin.channel-not-found">
        <source>未找到指定的频道。</source>
        <target state="translated">未找到指定的頻道。</target>
        <context-group purpose="information">
          <context context-type="source">admin -&gt; channel-not-found</context>
        </context-group>
      </trans-unit>
      <trans-unit id="15485" resname="admin.channel-unchanged">
        <source>频道数据未改动。</source>
        <target state="translated">頻道數據未改動。</target>
        <context-group purpose="information">
          <context context-type="source">admin -&gt; channel-unchanged</context>
        </context-group>
      </trans-unit>
      <trans-unit id="15487" resname="admin.channel-updated">
        <source>频道数据已修改。</source>
        <target state="translated">頻道數據已修改。</target>
        <context-group purpose="information">
          <context context-type="source">admin -&gt; channel-updated</context>
        </context-group>
      </trans-unit>
      <trans-unit id="15489" resname="admin.not-in-group">
        <source>当前不在群组上下文中，请使用 -c 参数指定目标频道。</source>
        <target state="translated">當前不在群組上下文中，請使用 -c 參數指定目標頻道。</target>
        <context-group purpose="information">
          <context context-type="source">admin -&gt; not-in-group</context>
        </context-group>
      </trans-unit>
      <trans-unit id="15499" resname="admin.user-expected">
        <source>请指定目标用户。</source>
        <target state="translated">请指定目标使用者。</target>
        <context-group purpose="information">
          <context context-type="source">admin -&gt; user-expected</context>
        </context-group>
      </trans-unit>
      <trans-unit id="15501" resname="admin.channel-expected">
        <source>请指定目标频道。</source>
        <target state="translated">請指定目標頻道。</target>
        <context-group purpose="information">
          <context context-type="source">admin -&gt; channel-expected</context>
        </context-group>
      </trans-unit>
      <trans-unit id="15503" resname="admin.invalid-assignee-platform">
        <source>受理人应与目标频道属于同一平台。</source>
        <target state="translated">受理人應與目標頻道屬於同一平台。</target>
        <context-group purpose="information">
          <context context-type="source">admin -&gt; invalid-assignee-platform</context>
        </context-group>
      </trans-unit>
      <trans-unit id="15505" resname="admin.current-locale">
        <source>当前语言偏好为：{0}。</source>
        <target state="translated">當前語言偏好為：{0}。</target>
        <context-group purpose="information">
          <context context-type="source">admin -&gt; current-locale</context>
        </context-group>
      </trans-unit>
      <trans-unit id="15507" resname="admin.no-locale">
        <source>未设置语言偏好。</source>
        <target state="translated">未設定語言偏好。</target>
        <context-group purpose="information">
          <context context-type="source">admin -&gt; no-locale</context>
        </context-group>
      </trans-unit>
      <trans-unit id="15509" resname="admin.options.remove">
        <source>重置设置</source>
        <target state="translated">重置設定</target>
        <context-group purpose="information">
          <context context-type="source">admin -&gt; options -&gt; remove</context>
        </context-group>
      </trans-unit>
    </body>
  </file>
  <file id="521" original="/[koishijs.koishi] master/plugins/common/bind/src/locales/zh-CN.yml" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="15517" resname="&quot;commands.bind&quot;.description">
        <source>绑定到账号</source>
        <target state="translated">綁定到賬號</target>
        <context-group purpose="information">
          <context context-type="source">commands.bind -&gt; description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="15519" resname="&quot;commands.bind&quot;.options.remove">
        <source>解除绑定</source>
        <target state="translated">解除綁定</target>
        <context-group purpose="information">
          <context context-type="source">commands.bind -&gt; options -&gt; remove</context>
        </context-group>
      </trans-unit>
      <trans-unit id="15521" resname="&quot;commands.bind&quot;.messages.generated-1">
        <source>Bind 指令可用于在多个平台间绑定用户数据。绑定过程中，原始平台的用户数据将完全保留，而目标平台的用户数据将被原始平台的数据所覆盖。
请确认当前平台是你的目标平台，并在 5 分钟内使用你的账号在原始平台内向机器人发送以下文本：
{0}
绑定完成后，你可以随时使用「bind -r」来解除绑定状态。</source>
        <target state="translated">Bind 指令可用於在多個平台間綁定用戶數據。綁定過程中，原始平台的使用者數據將完全保留，而目標平台的使用者數據將被原始平台的數據所覆蓋。
請確認當前平台是你的目標平台，並在 5 分鐘內使用你的賬號在原始平台內向機器人發送以下文本：
{0}
綁定完成後，你可以隨時使用「bind -r」來解除綁定狀態。</target>
        <context-group purpose="information">
          <context context-type="source">commands.bind -&gt; messages -&gt; generated-1</context>
        </context-group>
      </trans-unit>
      <trans-unit id="15523" resname="&quot;commands.bind&quot;.messages.generated-2">
        <source>令牌核验成功！下面将进行第二步操作。
请在 5 分钟内使用你的账号在目标平台内向机器人发送以下文本：
{0}
注意：当前平台是你的原始平台，这里的用户数据将覆盖目标平台的数据。</source>
        <target state="translated">令牌核驗成功！下面將進行第二步操作。
請在 5 分鐘內使用你的賬號在目標平台內向機器人發送以下文本：
{0}
注意：當前平台是你的原始平台，這裡的使用者數據將覆蓋目標平台的數據。</target>
        <context-group purpose="information">
          <context context-type="source">commands.bind -&gt; messages -&gt; generated-2</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63932" resname="&quot;commands.bind&quot;.messages.self-1">
        <source>请前往原始平台输入。</source>
        <target state="needs-translation">请前往原始平台输入。</target>
        <context-group purpose="information">
          <context context-type="source">commands.bind -&gt; messages -&gt; self-1</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63934" resname="&quot;commands.bind&quot;.messages.self-2">
        <source>请前往目标平台输入。</source>
        <target state="needs-translation">请前往目标平台输入。</target>
        <context-group purpose="information">
          <context context-type="source">commands.bind -&gt; messages -&gt; self-2</context>
        </context-group>
      </trans-unit>
      <trans-unit id="15525" resname="&quot;commands.bind&quot;.messages.success">
        <source>账号绑定成功！</source>
        <target state="translated">帳號綁定成功！</target>
        <context-group purpose="information">
          <context context-type="source">commands.bind -&gt; messages -&gt; success</context>
        </context-group>
      </trans-unit>
      <trans-unit id="15527" resname="&quot;commands.bind&quot;.messages.remove-success">
        <source>账号解绑成功！</source>
        <target state="translated">賬號解綁成功！</target>
        <context-group purpose="information">
          <context context-type="source">commands.bind -&gt; messages -&gt; remove-success</context>
        </context-group>
      </trans-unit>
      <trans-unit id="15529" resname="&quot;commands.bind&quot;.messages.remove-original">
        <source>无法解除绑定：这是你的原始账号。</source>
        <target state="translated">無法解除綁定：這是你的原始賬號。</target>
        <context-group purpose="information">
          <context context-type="source">commands.bind -&gt; messages -&gt; remove-original</context>
        </context-group>
      </trans-unit>
    </body>
  </file>
  <file id="523" original="/[koishijs.koishi] master/plugins/common/echo/src/locales/zh-CN.yml" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="15531" resname="commands.echo.description">
        <source>发送消息</source>
        <target state="translated">發送消息</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; echo -&gt; description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="15533" resname="commands.echo.options.escape">
        <source>发送转义消息</source>
        <target state="translated">發送轉義消息</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; echo -&gt; options -&gt; escape</context>
        </context-group>
      </trans-unit>
      <trans-unit id="15535" resname="commands.echo.options.unescape">
        <source>发送反转义消息</source>
        <target state="translated">發送反轉義消息</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; echo -&gt; options -&gt; unescape</context>
        </context-group>
      </trans-unit>
      <trans-unit id="15537" resname="commands.echo.options.user">
        <source>发送到用户</source>
        <target state="translated">發送到使用者</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; echo -&gt; options -&gt; user</context>
        </context-group>
      </trans-unit>
      <trans-unit id="15539" resname="commands.echo.options.channel">
        <source>发送到频道</source>
        <target state="translated">發送到頻道</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; echo -&gt; options -&gt; channel</context>
        </context-group>
      </trans-unit>
      <trans-unit id="15541" resname="commands.echo.options.guild">
        <source>指定群组编号</source>
        <target state="translated">指定群組編號</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; echo -&gt; options -&gt; guild</context>
        </context-group>
      </trans-unit>
      <trans-unit id="15543" resname="commands.echo.messages.expect-text">
        <source>请输入要发送的文本。</source>
        <target state="translated">請輸入要發送的文本。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; echo -&gt; messages -&gt; expect-text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="15545" resname="commands.echo.messages.platform-not-found">
        <source>找不到指定的平台。</source>
        <target state="translated">找不到指定的平台。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; echo -&gt; messages -&gt; platform-not-found</context>
        </context-group>
      </trans-unit>
    </body>
  </file>
  <file id="525" original="/[koishijs.koishi] master/plugins/common/inspect/src/locales/zh-CN.yml" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="15547" resname="commands.inspect.description">
        <source>查看用户、频道或消息的详细信息</source>
        <target state="translated">查看使用者、頻道或消息的詳細信息</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; inspect -&gt; description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="15549" resname="commands.inspect.usage">
        <source>inspect @user
inspect #channel
inspect</source>
        <target state="translated">inspect @user
inspect #channel
inspect</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; inspect -&gt; usage</context>
        </context-group>
      </trans-unit>
      <trans-unit id="15551" resname="commands.inspect.messages.invalid">
        <source>参数无法解析。</source>
        <target state="translated">參數無法解析。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; inspect -&gt; messages -&gt; invalid</context>
        </context-group>
      </trans-unit>
      <trans-unit id="15553" resname="commands.inspect.messages.user">
        <source>用户 ID：{id}</source>
        <target state="translated">使用者 ID：{id}</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; inspect -&gt; messages -&gt; user</context>
        </context-group>
      </trans-unit>
      <trans-unit id="15555" resname="commands.inspect.messages.channel">
        <source>频道 ID：{id}</source>
        <target state="translated">頻道 ID：{id}</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; inspect -&gt; messages -&gt; channel</context>
        </context-group>
      </trans-unit>
      <trans-unit id="15557" resname="commands.inspect.messages.message">
        <source>平台名：{platform}
消息 ID：{messageId}
频道 ID：{channelId}
群组 ID：{guildId}
用户 ID：{userId}
自身 ID：{selfId}</source>
        <target state="translated">平台名：{platform}
消息 ID：{messageId}
頻道 ID：{channelId}
群組 ID：{guildId}
使用者 ID：{userId}
自身 ID：{selfId}</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; inspect -&gt; messages -&gt; message</context>
        </context-group>
      </trans-unit>
    </body>
  </file>
  <file id="531" original="/[koishijs.vitepress-theme] main/locales/zh-CN.json" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="15563" resname="label">
        <source>简体中文</source>
        <target state="needs-translation">简体中文</target>
        <context-group purpose="information">
          <context context-type="source"> -&gt; label</context>
        </context-group>
      </trans-unit>
      <trans-unit id="15565" resname="lang">
        <source>zh-CN</source>
        <target state="needs-translation">zh-CN</target>
        <context-group purpose="information">
          <context context-type="source"> -&gt; lang</context>
        </context-group>
      </trans-unit>
      <trans-unit id="15567" resname="themeConfig.outlineTitle">
        <source>目录</source>
        <target state="needs-translation">目录</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; outlineTitle</context>
          <context context-type="x-crowdin-screenshot">https://crowdin.com/s/wrap/b3d383g3i4a3v6e3k5f605p485r4v443l405p4e4v455a585k676o6j4p6s4l6g60313035525c6?t=15567</context>
        </context-group>
      </trans-unit>
      <trans-unit id="15569" resname="themeConfig.lastUpdatedText">
        <source>上次更新</source>
        <target state="needs-translation">上次更新</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; lastUpdatedText</context>
        </context-group>
      </trans-unit>
      <trans-unit id="15571" resname="themeConfig.editLink.text">
        <source>编辑此页面</source>
        <target state="needs-translation">编辑此页面</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; editLink -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="15573" resname="themeConfig.docFooter.prev">
        <source>上一页</source>
        <target state="needs-translation">上一页</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; docFooter -&gt; prev</context>
        </context-group>
      </trans-unit>
      <trans-unit id="15575" resname="themeConfig.docFooter.next">
        <source>下一页</source>
        <target state="needs-translation">下一页</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; docFooter -&gt; next</context>
        </context-group>
      </trans-unit>
      <trans-unit id="15577" resname="themeConfig.docsearch.placeholder">
        <source>搜索文档</source>
        <target state="needs-translation">搜索文档</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; docsearch -&gt; placeholder</context>
        </context-group>
      </trans-unit>
      <trans-unit id="15579" resname="themeConfig.docsearch.translations.button.buttonText">
        <source>搜索</source>
        <target state="needs-translation">搜索</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; docsearch -&gt; translations -&gt; button -&gt; buttonText</context>
        </context-group>
      </trans-unit>
      <trans-unit id="15581" resname="themeConfig.docsearch.translations.button.buttonAriaLabel">
        <source>搜索</source>
        <target state="needs-translation">搜索</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; docsearch -&gt; translations -&gt; button -&gt; buttonAriaLabel</context>
        </context-group>
      </trans-unit>
      <trans-unit id="15583" resname="themeConfig.docsearch.translations.modal.searchBox.resetButtonTitle">
        <source>清除查询条件</source>
        <target state="needs-translation">清除查询条件</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; docsearch -&gt; translations -&gt; modal -&gt; searchBox -&gt; resetButtonTitle</context>
        </context-group>
      </trans-unit>
      <trans-unit id="15585" resname="themeConfig.docsearch.translations.modal.searchBox.resetButtonAriaLabel">
        <source>清除查询条件</source>
        <target state="needs-translation">清除查询条件</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; docsearch -&gt; translations -&gt; modal -&gt; searchBox -&gt; resetButtonAriaLabel</context>
        </context-group>
      </trans-unit>
      <trans-unit id="15587" resname="themeConfig.docsearch.translations.modal.searchBox.cancelButtonText">
        <source>取消</source>
        <target state="needs-translation">取消</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; docsearch -&gt; translations -&gt; modal -&gt; searchBox -&gt; cancelButtonText</context>
        </context-group>
      </trans-unit>
      <trans-unit id="15589" resname="themeConfig.docsearch.translations.modal.searchBox.cancelButtonAriaLabel">
        <source>取消</source>
        <target state="needs-translation">取消</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; docsearch -&gt; translations -&gt; modal -&gt; searchBox -&gt; cancelButtonAriaLabel</context>
        </context-group>
      </trans-unit>
      <trans-unit id="15591" resname="themeConfig.docsearch.translations.modal.startScreen.recentSearchesTitle">
        <source>搜索历史</source>
        <target state="needs-translation">搜索历史</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; docsearch -&gt; translations -&gt; modal -&gt; startScreen -&gt; recentSearchesTitle</context>
        </context-group>
      </trans-unit>
      <trans-unit id="15593" resname="themeConfig.docsearch.translations.modal.startScreen.noRecentSearchesText">
        <source>没有搜索历史</source>
        <target state="needs-translation">没有搜索历史</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; docsearch -&gt; translations -&gt; modal -&gt; startScreen -&gt; noRecentSearchesText</context>
        </context-group>
      </trans-unit>
      <trans-unit id="15595" resname="themeConfig.docsearch.translations.modal.startScreen.saveRecentSearchButtonTitle">
        <source>保存至搜索历史</source>
        <target state="needs-translation">保存至搜索历史</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; docsearch -&gt; translations -&gt; modal -&gt; startScreen -&gt; saveRecentSearchButtonTitle</context>
        </context-group>
      </trans-unit>
      <trans-unit id="15597" resname="themeConfig.docsearch.translations.modal.startScreen.removeRecentSearchButtonTitle">
        <source>从搜索历史中移除</source>
        <target state="needs-translation">从搜索历史中移除</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; docsearch -&gt; translations -&gt; modal -&gt; startScreen -&gt; removeRecentSearchButtonTitle</context>
        </context-group>
      </trans-unit>
      <trans-unit id="15599" resname="themeConfig.docsearch.translations.modal.startScreen.favoriteSearchesTitle">
        <source>收藏</source>
        <target state="needs-translation">收藏</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; docsearch -&gt; translations -&gt; modal -&gt; startScreen -&gt; favoriteSearchesTitle</context>
        </context-group>
      </trans-unit>
      <trans-unit id="15601" resname="themeConfig.docsearch.translations.modal.startScreen.removeFavoriteSearchButtonTitle">
        <source>从收藏中移除</source>
        <target state="needs-translation">从收藏中移除</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; docsearch -&gt; translations -&gt; modal -&gt; startScreen -&gt; removeFavoriteSearchButtonTitle</context>
        </context-group>
      </trans-unit>
      <trans-unit id="15603" resname="themeConfig.docsearch.translations.modal.errorScreen.titleText">
        <source>无法获取结果</source>
        <target state="needs-translation">无法获取结果</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; docsearch -&gt; translations -&gt; modal -&gt; errorScreen -&gt; titleText</context>
        </context-group>
      </trans-unit>
      <trans-unit id="15605" resname="themeConfig.docsearch.translations.modal.errorScreen.helpText">
        <source>你可能需要检查你的网络连接</source>
        <target state="needs-translation">你可能需要检查你的网络连接</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; docsearch -&gt; translations -&gt; modal -&gt; errorScreen -&gt; helpText</context>
        </context-group>
      </trans-unit>
      <trans-unit id="15607" resname="themeConfig.docsearch.translations.modal.footer.selectText">
        <source>选择</source>
        <target state="needs-translation">选择</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; docsearch -&gt; translations -&gt; modal -&gt; footer -&gt; selectText</context>
        </context-group>
      </trans-unit>
      <trans-unit id="15609" resname="themeConfig.docsearch.translations.modal.footer.navigateText">
        <source>切换</source>
        <target state="needs-translation">切换</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; docsearch -&gt; translations -&gt; modal -&gt; footer -&gt; navigateText</context>
        </context-group>
      </trans-unit>
      <trans-unit id="15611" resname="themeConfig.docsearch.translations.modal.footer.closeText">
        <source>关闭</source>
        <target state="needs-translation">关闭</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; docsearch -&gt; translations -&gt; modal -&gt; footer -&gt; closeText</context>
        </context-group>
      </trans-unit>
      <trans-unit id="15613" resname="themeConfig.docsearch.translations.modal.footer.searchByText">
        <source>搜索提供者</source>
        <target state="needs-translation">搜索提供者</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; docsearch -&gt; translations -&gt; modal -&gt; footer -&gt; searchByText</context>
        </context-group>
      </trans-unit>
      <trans-unit id="15615" resname="themeConfig.docsearch.translations.modal.noResultsScreen.noResultsText">
        <source>无法找到相关结果</source>
        <target state="needs-translation">无法找到相关结果</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; docsearch -&gt; translations -&gt; modal -&gt; noResultsScreen -&gt; noResultsText</context>
        </context-group>
      </trans-unit>
      <trans-unit id="15617" resname="themeConfig.docsearch.translations.modal.noResultsScreen.suggestedQueryText">
        <source>你可以尝试查询</source>
        <target state="needs-translation">你可以尝试查询</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; docsearch -&gt; translations -&gt; modal -&gt; noResultsScreen -&gt; suggestedQueryText</context>
        </context-group>
      </trans-unit>
      <trans-unit id="15619" resname="themeConfig.docsearch.translations.modal.noResultsScreen.reportMissingResultsText">
        <source>你认为该查询应该有结果？</source>
        <target state="needs-translation">你认为该查询应该有结果？</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; docsearch -&gt; translations -&gt; modal -&gt; noResultsScreen -&gt; reportMissingResultsText</context>
        </context-group>
      </trans-unit>
      <trans-unit id="15621" resname="themeConfig.docsearch.translations.modal.noResultsScreen.reportMissingResultsLinkText">
        <source>点击反馈</source>
        <target state="needs-translation">点击反馈</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; docsearch -&gt; translations -&gt; modal -&gt; noResultsScreen -&gt; reportMissingResultsLinkText</context>
        </context-group>
      </trans-unit>
      <trans-unit id="15623" resname="themeConfig.darkModeSwitchLabel">
        <source>外观</source>
        <target state="needs-translation">外观</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; darkModeSwitchLabel</context>
        </context-group>
      </trans-unit>
      <trans-unit id="15625" resname="themeConfig.sidebarMenuLabel">
        <source>菜单</source>
        <target state="needs-translation">菜单</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebarMenuLabel</context>
        </context-group>
      </trans-unit>
      <trans-unit id="15627" resname="themeConfig.returnToTopLabel">
        <source>返回顶部</source>
        <target state="needs-translation">返回顶部</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; returnToTopLabel</context>
        </context-group>
      </trans-unit>
      <trans-unit id="15629" resname="themeConfig.langMenuLabel">
        <source>语言</source>
        <target state="needs-translation">语言</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; langMenuLabel</context>
        </context-group>
      </trans-unit>
    </body>
  </file>
  <file id="675" original="/[koishijs.koishi-plugin-lobby] main/packages/core/src/locales/zh-CN.yml" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="17369" resname="commands.game.description">
        <source>游戏列表</source>
        <target state="needs-translation">游戏列表</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; game -&gt; description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17371" resname="commands.lobby.description">
        <source>游戏大厅</source>
        <target state="needs-translation">游戏大厅</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; lobby -&gt; description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="18321" resname="commands.&quot;lobby.list&quot;.description">
        <source>房间列表</source>
        <target state="needs-translation">房间列表</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; lobby.list -&gt; description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="18323" resname="commands.&quot;lobby.list&quot;.messages.empty">
        <source>当前没有房间。</source>
        <target state="needs-translation">当前没有房间。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; lobby.list -&gt; messages -&gt; empty</context>
        </context-group>
      </trans-unit>
      <trans-unit id="18325" resname="commands.&quot;lobby.list&quot;.messages.status.playing">
        <source>游戏中</source>
        <target state="needs-translation">游戏中</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; lobby.list -&gt; messages -&gt; status -&gt; playing</context>
        </context-group>
      </trans-unit>
      <trans-unit id="18327" resname="commands.&quot;lobby.list&quot;.messages.status.waiting">
        <source>等待中</source>
        <target state="needs-translation">等待中</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; lobby.list -&gt; messages -&gt; status -&gt; waiting</context>
        </context-group>
      </trans-unit>
      <trans-unit id="18329" resname="commands.&quot;lobby.list&quot;.messages.status.idle">
        <source>闲置中</source>
        <target state="needs-translation">闲置中</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; lobby.list -&gt; messages -&gt; status -&gt; idle</context>
        </context-group>
      </trans-unit>
      <trans-unit id="18447" resname="commands.&quot;lobby.list&quot;.messages.header">
        <source>房号    名称    人数    房主    状态</source>
        <target state="needs-translation">房号    名称    人数    房主    状态</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; lobby.list -&gt; messages -&gt; header</context>
        </context-group>
      </trans-unit>
      <trans-unit id="18449" resname="commands.&quot;lobby.list&quot;.messages.room">
        <source>&lt;p&gt;{id}  {options.name || '未命名'}  {size}/{options.capacity}  {host.name}  &lt;i18n path={&quot;commands.lobby.list.messages.status.&quot; + status}/&gt;&lt;/p&gt;</source>
        <target state="needs-translation">&lt;p&gt;{id}  {options.name || '未命名'}  {size}/{options.capacity}  {host.name}  &lt;i18n path={&quot;commands.lobby.list.messages.status.&quot; + status}/&gt;&lt;/p&gt;</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; lobby.list -&gt; messages -&gt; room</context>
        </context-group>
      </trans-unit>
      <trans-unit id="18335" resname="commands.&quot;lobby.list&quot;.messages.footer">
        <source>私聊机器人输入「lobby create」创建房间，输入「lobby join 房间号」加入房间。</source>
        <target state="needs-translation">私聊机器人输入「lobby create」创建房间，输入「lobby join 房间号」加入房间。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; lobby.list -&gt; messages -&gt; footer</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17385" resname="commands.&quot;lobby.room&quot;.description">
        <source>查看房间</source>
        <target state="needs-translation">查看房间</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; lobby.room -&gt; description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17387" resname="commands.&quot;lobby.room&quot;.messages.overview">
        <source>房号：{id}
房主：{host}
成员列表：
{players}</source>
        <target state="needs-translation">房号：{id}
房主：{host}
成员列表：
{players}</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; lobby.room -&gt; messages -&gt; overview</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17389" resname="commands.&quot;lobby.room&quot;.messages.talk-free">
        <source>你发送的所有消息将在房间内广播。</source>
        <target state="needs-translation">你发送的所有消息将在房间内广播。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; lobby.room -&gt; messages -&gt; talk-free</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17391" resname="commands.&quot;lobby.room&quot;.messages.talk-prefix">
        <source>发送「{0}内容」可在房间内发言。</source>
        <target state="needs-translation">发送「{0}内容」可在房间内发言。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; lobby.room -&gt; messages -&gt; talk-prefix</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17393" resname="commands.&quot;lobby.create&quot;.description">
        <source>创建房间</source>
        <target state="needs-translation">创建房间</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; lobby.create -&gt; description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17395" resname="commands.&quot;lobby.create&quot;.options.capacity">
        <source>最大人数</source>
        <target state="needs-translation">最大人数</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; lobby.create -&gt; options -&gt; capacity</context>
        </context-group>
      </trans-unit>
      <trans-unit id="18451" resname="commands.&quot;lobby.create&quot;.options.name">
        <source>房间名称</source>
        <target state="needs-translation">房间名称</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; lobby.create -&gt; options -&gt; name</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17397" resname="commands.&quot;lobby.create&quot;.options.private">
        <source>私密房间</source>
        <target state="needs-translation">私密房间</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; lobby.create -&gt; options -&gt; private</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17399" resname="commands.&quot;lobby.create&quot;.options.&quot;private.false&quot;">
        <source>公开房间</source>
        <target state="needs-translation">公开房间</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; lobby.create -&gt; options -&gt; private.false</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17401" resname="commands.&quot;lobby.create&quot;.messages.success">
        <source>房间创建成功，编号为 {id}。</source>
        <target state="needs-translation">房间创建成功，编号为 {id}。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; lobby.create -&gt; messages -&gt; success</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17403" resname="commands.&quot;lobby.config&quot;.description">
        <source>房间设置</source>
        <target state="needs-translation">房间设置</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; lobby.config -&gt; description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17405" resname="commands.&quot;lobby.config&quot;.options.capacity">
        <source>最大人数</source>
        <target state="needs-translation">最大人数</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; lobby.config -&gt; options -&gt; capacity</context>
        </context-group>
      </trans-unit>
      <trans-unit id="18453" resname="commands.&quot;lobby.config&quot;.options.name">
        <source>房间名称</source>
        <target state="needs-translation">房间名称</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; lobby.config -&gt; options -&gt; name</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17407" resname="commands.&quot;lobby.config&quot;.options.private">
        <source>私密房间</source>
        <target state="needs-translation">私密房间</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; lobby.config -&gt; options -&gt; private</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17409" resname="commands.&quot;lobby.config&quot;.options.&quot;private.false&quot;">
        <source>公开房间</source>
        <target state="needs-translation">公开房间</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; lobby.config -&gt; options -&gt; private.false</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17411" resname="commands.&quot;lobby.config&quot;.messages.success">
        <source>设置修改成功！</source>
        <target state="needs-translation">设置修改成功！</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; lobby.config -&gt; messages -&gt; success</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17413" resname="commands.&quot;lobby.join&quot;.description">
        <source>加入房间</source>
        <target state="needs-translation">加入房间</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; lobby.join -&gt; description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17415" resname="commands.&quot;lobby.join&quot;.messages.success">
        <source>加入房间成功！</source>
        <target state="needs-translation">加入房间成功！</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; lobby.join -&gt; messages -&gt; success</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17417" resname="commands.&quot;lobby.join&quot;.messages.full">
        <source>该房间人数已满，无法加入。</source>
        <target state="needs-translation">该房间人数已满，无法加入。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; lobby.join -&gt; messages -&gt; full</context>
        </context-group>
      </trans-unit>
      <trans-unit id="18197" resname="commands.&quot;lobby.join&quot;.messages.locked">
        <source>该房间已被锁定，无法加入。</source>
        <target state="needs-translation">该房间已被锁定，无法加入。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; lobby.join -&gt; messages -&gt; locked</context>
        </context-group>
      </trans-unit>
      <trans-unit id="18199" resname="commands.&quot;lobby.join&quot;.messages.sync">
        <source>将同步推送房间 {0} 的消息。</source>
        <target state="needs-translation">将同步推送房间 {0} 的消息。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; lobby.join -&gt; messages -&gt; sync</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17419" resname="commands.&quot;lobby.leave&quot;.description">
        <source>离开房间</source>
        <target state="needs-translation">离开房间</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; lobby.leave -&gt; description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17421" resname="commands.&quot;lobby.leave&quot;.messages.success">
        <source>已成功离开房间。</source>
        <target state="needs-translation">已成功离开房间。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; lobby.leave -&gt; messages -&gt; success</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17423" resname="commands.&quot;lobby.leave&quot;.messages.transfer-or-destroy">
        <source>离开房间前可选择将房间转移给其他人：
{players}
请输入玩家编号以转移房主。输入 0 将直接解散房间。输入任何其他内容将取消操作。</source>
        <target state="needs-translation">离开房间前可选择将房间转移给其他人：
{players}
请输入玩家编号以转移房主。输入 0 将直接解散房间。输入任何其他内容将取消操作。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; lobby.leave -&gt; messages -&gt; transfer-or-destroy</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17425" resname="commands.&quot;lobby.leave&quot;.messages.timeout">
        <source>操作超时，已自动取消。</source>
        <target state="needs-translation">操作超时，已自动取消。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; lobby.leave -&gt; messages -&gt; timeout</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17427" resname="commands.&quot;lobby.kick&quot;.description">
        <source>踢出房间</source>
        <target state="needs-translation">踢出房间</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; lobby.kick -&gt; description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17429" resname="commands.&quot;lobby.kick&quot;.messages.expect-id">
        <source>请输入要踢出的玩家编号。</source>
        <target state="needs-translation">请输入要踢出的玩家编号。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; lobby.kick -&gt; messages -&gt; expect-id</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17431" resname="commands.&quot;lobby.transfer&quot;.description">
        <source>转移房主</source>
        <target state="needs-translation">转移房主</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; lobby.transfer -&gt; description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17433" resname="commands.&quot;lobby.transfer&quot;.messages.expect-id">
        <source>请输入要转移给的玩家编号。</source>
        <target state="needs-translation">请输入要转移给的玩家编号。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; lobby.transfer -&gt; messages -&gt; expect-id</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17435" resname="commands.&quot;lobby.destroy&quot;.description">
        <source>解散房间</source>
        <target state="needs-translation">解散房间</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; lobby.destroy -&gt; description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17437" resname="commands.&quot;lobby.start&quot;.description">
        <source>开始游戏</source>
        <target state="needs-translation">开始游戏</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; lobby.start -&gt; description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17439" resname="commands.talk.description">
        <source>房间内发言</source>
        <target state="needs-translation">房间内发言</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; talk -&gt; description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17441" resname="commands.talk.messages.disabled">
        <source>当前阶段房间内禁止发言。</source>
        <target state="needs-translation">当前阶段房间内禁止发言。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; talk -&gt; messages -&gt; disabled</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17443" resname="commands.talk.messages.expect-content">
        <source>请输入要发送的内容。</source>
        <target state="needs-translation">请输入要发送的内容。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; talk -&gt; messages -&gt; expect-content</context>
        </context-group>
      </trans-unit>
      <trans-unit id="18201" resname="lobby.exception.busy-1">
        <source>你已在房间 {id} 中。输入「room leave」以离开当前房间。</source>
        <target state="needs-translation">你已在房间 {id} 中。输入「room leave」以离开当前房间。</target>
        <context-group purpose="information">
          <context context-type="source">lobby -&gt; exception -&gt; busy-1</context>
        </context-group>
      </trans-unit>
      <trans-unit id="18203" resname="lobby.exception.busy-2">
        <source>你当前正在同步推送房间 {id} 的消息。输入「room leave」以离开当前房间。</source>
        <target state="needs-translation">你当前正在同步推送房间 {id} 的消息。输入「room leave」以离开当前房间。</target>
        <context-group purpose="information">
          <context context-type="source">lobby -&gt; exception -&gt; busy-2</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17447" resname="lobby.exception.not-in-room">
        <source>你并不在任何房间中。</source>
        <target state="needs-translation">你并不在任何房间中。</target>
        <context-group purpose="information">
          <context context-type="source">lobby -&gt; exception -&gt; not-in-room</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17449" resname="lobby.exception.room-not-found">
        <source>房间 {0} 不存在。</source>
        <target state="needs-translation">房间 {0} 不存在。</target>
        <context-group purpose="information">
          <context context-type="source">lobby -&gt; exception -&gt; room-not-found</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17451" resname="lobby.exception.player-not-found">
        <source>房间中没有编号为 {0} 的玩家。</source>
        <target state="needs-translation">房间中没有编号为 {0} 的玩家。</target>
        <context-group purpose="information">
          <context context-type="source">lobby -&gt; exception -&gt; player-not-found</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17453" resname="lobby.exception.expect-host">
        <source>只有房主可以进行此操作。</source>
        <target state="needs-translation">只有房主可以进行此操作。</target>
        <context-group purpose="information">
          <context context-type="source">lobby -&gt; exception -&gt; expect-host</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17455" resname="lobby.exception.target-host">
        <source>不能对房主进行此操作。</source>
        <target state="needs-translation">不能对房主进行此操作。</target>
        <context-group purpose="information">
          <context context-type="source">lobby -&gt; exception -&gt; target-host</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17457" resname="lobby.exception.game-not-found">
        <source>当前房间没有设置游戏内容。</source>
        <target state="needs-translation">当前房间没有设置游戏内容。</target>
        <context-group purpose="information">
          <context context-type="source">lobby -&gt; exception -&gt; game-not-found</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17459" resname="lobby.system.join">
        <source>系统消息：{0} 加入了房间。</source>
        <target state="needs-translation">系统消息：{0} 加入了房间。</target>
        <context-group purpose="information">
          <context context-type="source">lobby -&gt; system -&gt; join</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17461" resname="lobby.system.leave">
        <source>系统消息：{0} 离开了房间。</source>
        <target state="needs-translation">系统消息：{0} 离开了房间。</target>
        <context-group purpose="information">
          <context context-type="source">lobby -&gt; system -&gt; leave</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17463" resname="lobby.system.leave-transfer">
        <source>系统消息：{1} 离开了房间，并将房主转移给了 {0}。</source>
        <target state="needs-translation">系统消息：{1} 离开了房间，并将房主转移给了 {0}。</target>
        <context-group purpose="information">
          <context context-type="source">lobby -&gt; system -&gt; leave-transfer</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17465" resname="lobby.system.transfer">
        <source>系统消息：{1} 将房主转移给了 {0}。</source>
        <target state="needs-translation">系统消息：{1} 将房主转移给了 {0}。</target>
        <context-group purpose="information">
          <context context-type="source">lobby -&gt; system -&gt; transfer</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17467" resname="lobby.system.kick">
        <source>系统消息：{0} 被房主踢出了房间。</source>
        <target state="needs-translation">系统消息：{0} 被房主踢出了房间。</target>
        <context-group purpose="information">
          <context context-type="source">lobby -&gt; system -&gt; kick</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17469" resname="lobby.system.kick-self">
        <source>系统消息：你被房主踢出了房间。</source>
        <target state="needs-translation">系统消息：你被房主踢出了房间。</target>
        <context-group purpose="information">
          <context context-type="source">lobby -&gt; system -&gt; kick-self</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17471" resname="lobby.system.destroy">
        <source>系统消息：房间已解散。</source>
        <target state="needs-translation">系统消息：房间已解散。</target>
        <context-group purpose="information">
          <context context-type="source">lobby -&gt; system -&gt; destroy</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17473" resname="lobby.system.start">
        <source>系统消息：游戏开始。</source>
        <target state="needs-translation">系统消息：游戏开始。</target>
        <context-group purpose="information">
          <context context-type="source">lobby -&gt; system -&gt; start</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17475" resname="lobby.system.game">
        <source>系统消息：房间已设置游戏为 {0}。</source>
        <target state="needs-translation">系统消息：房间已设置游戏为 {0}。</target>
        <context-group purpose="information">
          <context context-type="source">lobby -&gt; system -&gt; game</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17991" resname="lobby.system.pause">
        <source>输入任意内容以继续。</source>
        <target state="needs-translation">输入任意内容以继续。</target>
        <context-group purpose="information">
          <context context-type="source">lobby -&gt; system -&gt; pause</context>
        </context-group>
      </trans-unit>
      <trans-unit id="18205" resname="lobby.system.pause-response">
        <source>等待其他玩家进行确认……</source>
        <target state="needs-translation">等待其他玩家进行确认……</target>
        <context-group purpose="information">
          <context context-type="source">lobby -&gt; system -&gt; pause-response</context>
        </context-group>
      </trans-unit>
      <trans-unit id="18207" resname="lobby.system.ready">
        <source>待所有玩家确认后游戏将正式开始。</source>
        <target state="needs-translation">待所有玩家确认后游戏将正式开始。</target>
        <context-group purpose="information">
          <context context-type="source">lobby -&gt; system -&gt; ready</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17995" resname="lobby.system.confirm">
        <source>输入「Y」以确认，输入「N」以取消。</source>
        <target state="needs-translation">输入「Y」以确认，输入「N」以取消。</target>
        <context-group purpose="information">
          <context context-type="source">lobby -&gt; system -&gt; confirm</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17479" resname="lobby.system.cancel">
        <source>系统消息：由于有玩家未确认，游戏已自动取消。</source>
        <target state="needs-translation">系统消息：由于有玩家未确认，游戏已自动取消。</target>
        <context-group purpose="information">
          <context context-type="source">lobby -&gt; system -&gt; cancel</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17481" resname="lobby.system.terminated">
        <source>系统消息：游戏因为异常而中止。</source>
        <target state="needs-translation">系统消息：游戏因为异常而中止。</target>
        <context-group purpose="information">
          <context context-type="source">lobby -&gt; system -&gt; terminated</context>
        </context-group>
      </trans-unit>
      <trans-unit id="18195" resname="lobby.speech.player">
        <source>{0}：</source>
        <target state="needs-translation">{0}：</target>
        <context-group purpose="information">
          <context context-type="source">lobby -&gt; speech -&gt; player</context>
        </context-group>
      </trans-unit>
    </body>
  </file>
  <file id="677" original="/[koishijs.koishi-plugin-lobby] main/packages/mahjong/src/locales/zh-CN.yml" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="17485" resname="commands.mahjong.description">
        <source>麻将</source>
        <target state="needs-translation">麻将</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; mahjong -&gt; description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17487" resname="&quot;lobby.game.mahjong&quot;.invalid-player-count">
        <source>游戏人数必须为 4 人。</source>
        <target state="needs-translation">游戏人数必须为 4 人。</target>
        <context-group purpose="information">
          <context context-type="source">lobby.game.mahjong -&gt; invalid-player-count</context>
        </context-group>
      </trans-unit>
    </body>
  </file>
  <file id="679" original="/[koishijs.koishi-plugin-lobby] main/packages/rps/src/locales/zh-CN.yml" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="17489" resname="commands.rps.description">
        <source>石头剪刀布</source>
        <target state="needs-translation">石头剪刀布</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; rps -&gt; description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17491" resname="commands.rps.options.rounds">
        <source>获胜局数</source>
        <target state="needs-translation">获胜局数</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; rps -&gt; options -&gt; rounds</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17493" resname="commands.rps.options.timeout">
        <source>出招限时</source>
        <target state="needs-translation">出招限时</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; rps -&gt; options -&gt; timeout</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17495" resname="&quot;lobby.game.rps&quot;.invalid-player-count">
        <source>游戏人数必须为 2 人。</source>
        <target state="needs-translation">游戏人数必须为 2 人。</target>
        <context-group purpose="information">
          <context context-type="source">lobby.game.rps -&gt; invalid-player-count</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17497" resname="&quot;lobby.game.rps&quot;.input">
        <source>第 {0} 轮
请输入字母进行选择：
[R] 石头
[P] 布
[S] 剪刀</source>
        <target state="needs-translation">第 {0} 轮
请输入字母进行选择：
[R] 石头
[P] 布
[S] 剪刀</target>
        <context-group purpose="information">
          <context context-type="source">lobby.game.rps -&gt; input</context>
        </context-group>
        <note from="Maiko Sinkyaet Tan (MaikoTan)" priority="4">@liulyxandy-codemao Shouldn't it be Rock and Paper and Scissors?</note>
        <note from="刘lyxAndy (liulyxandy-codemao)" priority="4">@MaikoTan It's a mistake and I'll fix it.</note>
      </trans-unit>
      <trans-unit id="17499" resname="&quot;lobby.game.rps&quot;.choice.r">
        <source>石头</source>
        <target state="needs-translation">石头</target>
        <context-group purpose="information">
          <context context-type="source">lobby.game.rps -&gt; choice -&gt; r</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17501" resname="&quot;lobby.game.rps&quot;.choice.p">
        <source>布</source>
        <target state="needs-translation">布</target>
        <context-group purpose="information">
          <context context-type="source">lobby.game.rps -&gt; choice -&gt; p</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17503" resname="&quot;lobby.game.rps&quot;.choice.s">
        <source>剪刀</source>
        <target state="needs-translation">剪刀</target>
        <context-group purpose="information">
          <context context-type="source">lobby.game.rps -&gt; choice -&gt; s</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17505" resname="&quot;lobby.game.rps&quot;.accepted">
        <source>你选择了{0}，请等待对方出招。</source>
        <target state="needs-translation">你选择了{0}，请等待对方出招。</target>
        <context-group purpose="information">
          <context context-type="source">lobby.game.rps -&gt; accepted</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17507" resname="&quot;lobby.game.rps&quot;.output">
        <source>{0} 出了{1}</source>
        <target state="needs-translation">{0} 出了{1}</target>
        <context-group purpose="information">
          <context context-type="source">lobby.game.rps -&gt; output</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17509" resname="&quot;lobby.game.rps&quot;.timeout">
        <source>{0} 没有在规定时间内出招</source>
        <target state="needs-translation">{0} 没有在规定时间内出招</target>
        <context-group purpose="information">
          <context context-type="source">lobby.game.rps -&gt; timeout</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17511" resname="&quot;lobby.game.rps&quot;.result-0">
        <source>{0}，{1}，此轮没有分出胜负。
&lt;p&gt;{2}&lt;/p&gt;</source>
        <target state="needs-translation">{0}，{1}，此轮没有分出胜负。
&lt;p&gt;{2}&lt;/p&gt;</target>
        <context-group purpose="information">
          <context context-type="source">lobby.game.rps -&gt; result-0</context>
        </context-group>
        <note from="Maiko Sinkyaet Tan (MaikoTan)" priority="4">@liulyxandy-codemao The &quot;{0}&quot; &quot;{1}&quot; here would be replaced by the hands that the players have shown. e.g.

Alice出了剪刀，Bob出了剪刀，此轮没有分出胜负。
当前比分为：Alice：1分；Bob：1分。</note>
        <note from="刘lyxAndy (liulyxandy-codemao)" priority="4">@MaikoTan 👌</note>
      </trans-unit>
      <trans-unit id="17513" resname="&quot;lobby.game.rps&quot;.result-1">
        <source>{0}，{1}，{2} 获胜！
&lt;p&gt;{3}&lt;/p&gt;</source>
        <target state="needs-translation">{0}，{1}，{2} 获胜！
&lt;p&gt;{3}&lt;/p&gt;</target>
        <context-group purpose="information">
          <context context-type="source">lobby.game.rps -&gt; result-1</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17515" resname="&quot;lobby.game.rps&quot;.score">
        <source>当前比分为：{0}：{1} 分；{2}：{3} 分。</source>
        <target state="needs-translation">当前比分为：{0}：{1} 分；{2}：{3} 分。</target>
        <context-group purpose="information">
          <context context-type="source">lobby.game.rps -&gt; score</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17517" resname="&quot;lobby.game.rps&quot;.finish">
        <source>游戏结束，{0} 获胜！</source>
        <target state="needs-translation">游戏结束，{0} 获胜！</target>
        <context-group purpose="information">
          <context context-type="source">lobby.game.rps -&gt; finish</context>
        </context-group>
      </trans-unit>
    </body>
  </file>
  <file id="681" original="/[koishijs.koishi-plugin-lobby] main/docs/zh-CN/index.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="17519">
        <source>介绍</source>
        <target state="translated">介紹</target>
        <context-group purpose="information">
          <context context-type="source">Headline 1&#13;
XPath: /h1</context>
        </context-group>
      </trans-unit>
    </body>
  </file>
  <file id="683" original="/[koishijs.koishi-plugin-lobby] main/docs/zh-CN/plugins/rps.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="17521" translate="no">
        <source>koishi-plugin-rps</source>
        <target>koishi-plugin-rps</target>
        <context-group purpose="information">
          <context context-type="source">Headline 1&#13;
XPath: /h1</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17523">
        <source>剪刀石头布游戏。</source>
        <target state="needs-translation">剪刀石头布游戏。</target>
        <context-group purpose="information">
          <context context-type="source">Paragraph text&#13;
XPath: /p</context>
        </context-group>
      </trans-unit>
    </body>
  </file>
  <file id="687" original="/[koishijs.koishi-plugin-lobby] main/docs/.vitepress/config/zh-CN.json" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="17545" resname="description">
        <source>基于 Koishi 的游戏大厅服务</source>
        <target state="needs-translation">基于 Koishi 的游戏大厅服务</target>
        <context-group purpose="information">
          <context context-type="source"> -&gt; description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17547" resname="head.0.0">
        <source>link</source>
        <target state="needs-translation">link</target>
        <context-group purpose="information">
          <context context-type="source">head -&gt; 0 -&gt; 0</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17549" resname="head.0.1.rel">
        <source>icon</source>
        <target state="needs-translation">icon</target>
        <context-group purpose="information">
          <context context-type="source">head -&gt; 0 -&gt; 1 -&gt; rel</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17551" resname="head.0.1.href" translate="no">
        <source>https://koishi.chat/logo.png</source>
        <target>https://koishi.chat/logo.png</target>
        <context-group purpose="information">
          <context context-type="source">head -&gt; 0 -&gt; 1 -&gt; href</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17553" resname="head.1.0">
        <source>link</source>
        <target state="needs-translation">link</target>
        <context-group purpose="information">
          <context context-type="source">head -&gt; 1 -&gt; 0</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17555" resname="head.1.1.rel">
        <source>manifest</source>
        <target state="needs-translation">manifest</target>
        <context-group purpose="information">
          <context context-type="source">head -&gt; 1 -&gt; 1 -&gt; rel</context>
        </context-group>
      </trans-unit>
      <trans-unit id="38708" resname="head.1.1.href" approved="yes">
        <source>/manifest/zh-CN.json</source>
        <target state="final">/manifest/zh-TW.json</target>
        <context-group purpose="information">
          <context context-type="source">head -&gt; 1 -&gt; 1 -&gt; href</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17559" resname="head.2.0">
        <source>meta</source>
        <target state="needs-translation">meta</target>
        <context-group purpose="information">
          <context context-type="source">head -&gt; 2 -&gt; 0</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17561" resname="head.2.1.name">
        <source>theme-color</source>
        <target state="needs-translation">theme-color</target>
        <context-group purpose="information">
          <context context-type="source">head -&gt; 2 -&gt; 1 -&gt; name</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17563" resname="head.2.1.content" translate="no">
        <source>#5546a3</source>
        <target>#5546a3</target>
        <context-group purpose="information">
          <context context-type="source">head -&gt; 2 -&gt; 1 -&gt; content</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17565" resname="themeConfig.editLink.text">
        <source>在 GitHub 编辑此页面</source>
        <target state="translated">在 Crowdin 上翻譯此頁面</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; editLink -&gt; text</context>
          <context context-type="x-crowdin-screenshot">https://crowdin.com/s/wrap/b3d383g3i4a3v6e3k5f605p485r4v443l405p4e4v455a585k676o6j4p6s4l6g60313035525c6?t=17565</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17567" resname="themeConfig.editLink.pattern" approved="yes">
        <source>https://github.com/koishijs/koishi-plugin-lobby/edit/main/docs/:path</source>
        <target state="final">https://crowdin.com/translate/koishi/:id/zhcn-zhtw</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; editLink -&gt; pattern</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17569" resname="themeConfig.sidebar./.0.text">
        <source>指南</source>
        <target state="needs-translation">指南</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; / -&gt; 0 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17571" resname="themeConfig.sidebar./.0.items.0.text">
        <source>介绍</source>
        <target state="translated">介紹</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; / -&gt; 0 -&gt; items -&gt; 0 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17573" resname="themeConfig.sidebar./.0.items.0.link" translate="no">
        <source>/</source>
        <target>/</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; / -&gt; 0 -&gt; items -&gt; 0 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17575" resname="themeConfig.sidebar./.1.text">
        <source>插件</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">插件</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; / -&gt; 1 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17577" resname="themeConfig.sidebar./.1.items.0.text">
        <source>剪刀石头布 (RPS)</source>
        <target state="needs-translation">剪刀石头布 (RPS)</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; / -&gt; 1 -&gt; items -&gt; 0 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17579" resname="themeConfig.sidebar./.1.items.0.link" translate="no">
        <source>/plugins/rps.md</source>
        <target>/plugins/rps.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; / -&gt; 1 -&gt; items -&gt; 0 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17581" resname="themeConfig.sidebar./.2.text">
        <source>更多</source>
        <target state="translated">更多</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; / -&gt; 2 -&gt; text</context>
          <context context-type="x-crowdin-screenshot">https://crowdin.com/s/wrap/b3d383g3i4a3v6c3k5f605p485r4v443l405p4e4u46535r4l646a6l4i443k4i615n4?t=17581</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17583" resname="themeConfig.sidebar./.2.items.0.text">
        <source>Koishi 官网</source>
        <target state="needs-translation">Koishi 官网</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; / -&gt; 2 -&gt; items -&gt; 0 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17585" resname="themeConfig.sidebar./.2.items.0.link" translate="no">
        <source>https://koishi.chat</source>
        <target>https://koishi.chat</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; / -&gt; 2 -&gt; items -&gt; 0 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17587" resname="themeConfig.sidebar./.2.items.1.text">
        <source>支持作者</source>
        <target state="needs-translation">支持作者</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; / -&gt; 2 -&gt; items -&gt; 1 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17589" resname="themeConfig.sidebar./.2.items.1.link" translate="no">
        <source>https://afdian.net/a/shigma</source>
        <target>https://afdian.net/a/shigma</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; / -&gt; 2 -&gt; items -&gt; 1 -&gt; link</context>
        </context-group>
      </trans-unit>
    </body>
  </file>
  <file id="701" original="/[koishijs.cache] main/docs/zh-CN/api.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="17591">
        <source>API</source>
        <target state="needs-translation">API</target>
        <context-group purpose="information">
          <context context-type="source">Headline 1&#13;
XPath: /h1</context>
        </context-group>
      </trans-unit>
      <trans-unit id="28689">
        <source>公开方法</source>
        <target state="needs-translation">公开方法</target>
        <context-group purpose="information">
          <context context-type="source">Headline 2&#13;
XPath: /h2</context>
        </context-group>
      </trans-unit>
      <trans-unit id="28691">
        <source>ctx.cache.get(table, key)</source>
        <target state="needs-translation">ctx.cache.get(table, key)</target>
        <context-group purpose="information">
          <context context-type="source">Headline 3&#13;
XPath: /h3[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="28693">
        <source>&lt;strong x-id=&quot;1&quot;&gt;table:&lt;/strong&gt; &lt;code&gt;string&lt;/code&gt; 表名</source>
        <target state="needs-translation">&lt;strong x-id=&quot;1&quot;&gt;table:&lt;/strong&gt; &lt;code&gt;string&lt;/code&gt; 表名</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[1]/li[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17613">
        <source>&lt;strong x-id=&quot;1&quot;&gt;key:&lt;/strong&gt; &lt;code&gt;string&lt;/code&gt; 键名</source>
        <target state="needs-translation">&lt;strong x-id=&quot;1&quot;&gt;key:&lt;/strong&gt; &lt;code&gt;string&lt;/code&gt; 键名</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[1]/li[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17615">
        <source>返回值: &lt;code&gt;Promise&amp;lt;any&amp;gt;&lt;/code&gt;</source>
        <target state="needs-translation">返回值: &lt;code&gt;Promise&amp;lt;any&amp;gt;&lt;/code&gt;</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[1]/li[3]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17617">
        <source>获取缓存数据。</source>
        <target state="needs-translation">获取缓存数据。</target>
        <context-group purpose="information">
          <context context-type="source">Paragraph text&#13;
XPath: /p[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="28695">
        <source>ctx.cache.set(table, key, value, maxAge?)</source>
        <target state="needs-translation">ctx.cache.set(table, key, value, maxAge?)</target>
        <context-group purpose="information">
          <context context-type="source">Headline 3&#13;
XPath: /h3[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="28697">
        <source>&lt;strong x-id=&quot;1&quot;&gt;table:&lt;/strong&gt; &lt;code&gt;string&lt;/code&gt; 表名</source>
        <target state="needs-translation">&lt;strong x-id=&quot;1&quot;&gt;table:&lt;/strong&gt; &lt;code&gt;string&lt;/code&gt; 表名</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[2]/li[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17621">
        <source>&lt;strong x-id=&quot;1&quot;&gt;key:&lt;/strong&gt; &lt;code&gt;string&lt;/code&gt; 键名</source>
        <target state="needs-translation">&lt;strong x-id=&quot;1&quot;&gt;key:&lt;/strong&gt; &lt;code&gt;string&lt;/code&gt; 键名</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[2]/li[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17623">
        <source>&lt;strong x-id=&quot;1&quot;&gt;value:&lt;/strong&gt; &lt;code&gt;any&lt;/code&gt; 缓存数据</source>
        <target state="needs-translation">&lt;strong x-id=&quot;1&quot;&gt;value:&lt;/strong&gt; &lt;code&gt;any&lt;/code&gt; 缓存数据</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[2]/li[3]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17625">
        <source>&lt;strong x-id=&quot;1&quot;&gt;maxAge:&lt;/strong&gt; &lt;code&gt;number&lt;/code&gt; 缓存时间 (毫秒)</source>
        <target state="needs-translation">&lt;strong x-id=&quot;1&quot;&gt;maxAge:&lt;/strong&gt; &lt;code&gt;number&lt;/code&gt; 缓存时间 (毫秒)</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[2]/li[4]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17637">
        <source>返回值: &lt;code&gt;Promise&amp;lt;void&amp;gt;&lt;/code&gt;</source>
        <target state="needs-translation">返回值: &lt;code&gt;Promise&amp;lt;void&amp;gt;&lt;/code&gt;</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[2]/li[5]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17629">
        <source>设置缓存数据。</source>
        <target state="needs-translation">设置缓存数据。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17631">
        <source>当未设置 &lt;code&gt;maxAge&lt;/code&gt; 时，将使用缓存表的设置。</source>
        <target state="needs-translation">当未设置 &lt;code&gt;maxAge&lt;/code&gt; 时，将使用缓存表的设置。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="28699">
        <source>ctx.cache.delete(table, key)</source>
        <target state="needs-translation">ctx.cache.delete(table, key)</target>
        <context-group purpose="information">
          <context context-type="source">Headline 3&#13;
XPath: /h3[3]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="28701">
        <source>&lt;strong x-id=&quot;1&quot;&gt;table:&lt;/strong&gt; &lt;code&gt;string&lt;/code&gt; 表名</source>
        <target state="needs-translation">&lt;strong x-id=&quot;1&quot;&gt;table:&lt;/strong&gt; &lt;code&gt;string&lt;/code&gt; 表名</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[3]/li[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17635">
        <source>&lt;strong x-id=&quot;1&quot;&gt;key:&lt;/strong&gt; &lt;code&gt;string&lt;/code&gt; 键名</source>
        <target state="needs-translation">&lt;strong x-id=&quot;1&quot;&gt;key:&lt;/strong&gt; &lt;code&gt;string&lt;/code&gt; 键名</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[3]/li[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="28703">
        <source>返回值: &lt;code&gt;Promise&amp;lt;void&amp;gt;&lt;/code&gt;</source>
        <target state="needs-translation">返回值: &lt;code&gt;Promise&amp;lt;void&amp;gt;&lt;/code&gt;</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[3]/li[3]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17639">
        <source>删除缓存数据。</source>
        <target state="needs-translation">删除缓存数据。</target>
        <context-group purpose="information">
          <context context-type="source">Paragraph text&#13;
XPath: /p[3]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="28705">
        <source>ctx.cache.clear(table)</source>
        <target state="needs-translation">ctx.cache.clear(table)</target>
        <context-group purpose="information">
          <context context-type="source">Headline 3&#13;
XPath: /h3[4]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="28707">
        <source>&lt;strong x-id=&quot;1&quot;&gt;table:&lt;/strong&gt; &lt;code&gt;string&lt;/code&gt; 表名</source>
        <target state="needs-translation">&lt;strong x-id=&quot;1&quot;&gt;table:&lt;/strong&gt; &lt;code&gt;string&lt;/code&gt; 表名</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[4]/li[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17643">
        <source>返回值: &lt;code&gt;Promise&amp;lt;void&amp;gt;&lt;/code&gt;</source>
        <target state="needs-translation">返回值: &lt;code&gt;Promise&amp;lt;void&amp;gt;&lt;/code&gt;</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[4]/li[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17645">
        <source>清空缓存表。</source>
        <target state="needs-translation">清空缓存表。</target>
        <context-group purpose="information">
          <context context-type="source">Paragraph text&#13;
XPath: /p[4]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="28709">
        <source>ctx.cache.keys(table)</source>
        <target state="needs-translation">ctx.cache.keys(table)</target>
        <context-group purpose="information">
          <context context-type="source">Headline 3&#13;
XPath: /h3[5]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="28711">
        <source>&lt;strong x-id=&quot;1&quot;&gt;table:&lt;/strong&gt; &lt;code&gt;string&lt;/code&gt; 表名</source>
        <target state="needs-translation">&lt;strong x-id=&quot;1&quot;&gt;table:&lt;/strong&gt; &lt;code&gt;string&lt;/code&gt; 表名</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[5]/li[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="28713">
        <source>返回值: &lt;code&gt;AsyncIterable&amp;lt;string&amp;gt;&lt;/code&gt;</source>
        <target state="needs-translation">返回值: &lt;code&gt;AsyncIterable&amp;lt;string&amp;gt;&lt;/code&gt;</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[5]/li[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="28715">
        <source>获取缓存表的所有键名。</source>
        <target state="needs-translation">获取缓存表的所有键名。</target>
        <context-group purpose="information">
          <context context-type="source">Paragraph text&#13;
XPath: /p[5]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="28717">
        <source>ctx.cache.values(table)</source>
        <target state="needs-translation">ctx.cache.values(table)</target>
        <context-group purpose="information">
          <context context-type="source">Headline 3&#13;
XPath: /h3[6]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="28719">
        <source>&lt;strong x-id=&quot;1&quot;&gt;table:&lt;/strong&gt; &lt;code&gt;string&lt;/code&gt; 表名</source>
        <target state="needs-translation">&lt;strong x-id=&quot;1&quot;&gt;table:&lt;/strong&gt; &lt;code&gt;string&lt;/code&gt; 表名</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[6]/li[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="28721">
        <source>返回值: &lt;code&gt;AsyncIterable&amp;lt;any&amp;gt;&lt;/code&gt;</source>
        <target state="needs-translation">返回值: &lt;code&gt;AsyncIterable&amp;lt;any&amp;gt;&lt;/code&gt;</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[6]/li[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="28723">
        <source>获取缓存表的所有值。</source>
        <target state="needs-translation">获取缓存表的所有值。</target>
        <context-group purpose="information">
          <context context-type="source">Paragraph text&#13;
XPath: /p[6]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="28725">
        <source>ctx.cache.entries(table)</source>
        <target state="needs-translation">ctx.cache.entries(table)</target>
        <context-group purpose="information">
          <context context-type="source">Headline 3&#13;
XPath: /h3[7]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="28727">
        <source>&lt;strong x-id=&quot;1&quot;&gt;table:&lt;/strong&gt; &lt;code&gt;string&lt;/code&gt; 表名</source>
        <target state="needs-translation">&lt;strong x-id=&quot;1&quot;&gt;table:&lt;/strong&gt; &lt;code&gt;string&lt;/code&gt; 表名</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[7]/li[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="28729">
        <source>返回值: &lt;code&gt;AsyncIterable&amp;lt;[string, any]&amp;gt;&lt;/code&gt;</source>
        <target state="needs-translation">返回值: &lt;code&gt;AsyncIterable&amp;lt;[string, any]&amp;gt;&lt;/code&gt;</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[7]/li[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="28731">
        <source>获取缓存表的所有键值对。</source>
        <target state="needs-translation">获取缓存表的所有键值对。</target>
        <context-group purpose="information">
          <context context-type="source">Paragraph text&#13;
XPath: /p[7]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="28733">
        <source>ctx.cache.forEach(table, callback)</source>
        <target state="needs-translation">ctx.cache.forEach(table, callback)</target>
        <context-group purpose="information">
          <context context-type="source">Headline 3&#13;
XPath: /h3[8]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="28735">
        <source>&lt;strong x-id=&quot;1&quot;&gt;table:&lt;/strong&gt; &lt;code&gt;string&lt;/code&gt; 表名</source>
        <target state="needs-translation">&lt;strong x-id=&quot;1&quot;&gt;table:&lt;/strong&gt; &lt;code&gt;string&lt;/code&gt; 表名</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[8]/li[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="28737">
        <source>&lt;strong x-id=&quot;1&quot;&gt;callback:&lt;/strong&gt; &lt;code&gt;(value: any, key: string) =&amp;gt; Awaitable&amp;lt;void&amp;gt;&lt;/code&gt;</source>
        <target state="needs-translation">&lt;strong x-id=&quot;1&quot;&gt;callback:&lt;/strong&gt; &lt;code&gt;(value: any, key: string) =&amp;gt; Awaitable&amp;lt;void&amp;gt;&lt;/code&gt;</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[8]/li[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="28739">
        <source>返回值: &lt;code&gt;Promise&amp;lt;void&amp;gt;&lt;/code&gt;</source>
        <target state="needs-translation">返回值: &lt;code&gt;Promise&amp;lt;void&amp;gt;&lt;/code&gt;</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[8]/li[3]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="28741">
        <source>遍历缓存表。</source>
        <target state="needs-translation">遍历缓存表。</target>
        <context-group purpose="information">
          <context context-type="source">Paragraph text&#13;
XPath: /p[8]</context>
        </context-group>
      </trans-unit>
    </body>
  </file>
  <file id="703" original="/[koishijs.cache] main/docs/zh-CN/index.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="17657">
        <source>介绍</source>
        <target state="translated">介紹</target>
        <context-group purpose="information">
          <context context-type="source">Headline 1&#13;
XPath: /h1</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17659">
        <source>@koishijs/cache 提供了统一的数据缓存服务。</source>
        <target state="needs-translation">@koishijs/cache 提供了统一的数据缓存服务。</target>
        <context-group purpose="information">
          <context context-type="source">Paragraph text&#13;
XPath: /p[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17661">
        <source>基本用法</source>
        <target state="needs-translation">基本用法</target>
        <context-group purpose="information">
          <context context-type="source">Headline 2&#13;
XPath: /h2[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17663">
        <source>缓存服务的用法非常简单：</source>
        <target state="needs-translation">缓存服务的用法非常简单：</target>
        <context-group purpose="information">
          <context context-type="source">Paragraph text&#13;
XPath: /p[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="28743">
        <source>// 扩展 foo 表
declare module '@koishijs/cache' {
  interface Tables {
    foo: number
  }
}

await ctx.cache.set('foo', 'bar', 114514)
await ctx.cache.get('foo', 'bar') // 114514</source>
        <target state="needs-translation">// 扩展 foo 表
declare module '@koishijs/cache' {
  interface Tables {
    foo: number
  }
}

await ctx.cache.set('foo', 'bar', 114514)
await ctx.cache.get('foo', 'bar') // 114514</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /pre/code</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17667">
        <source>在 &lt;a href=&quot;./api.md&quot;&gt;API&lt;/a&gt; 页面中可以查看更多用法。</source>
        <target state="needs-translation">在 &lt;a href=&quot;./api.md&quot;&gt;API&lt;/a&gt; 页面中可以查看更多用法。</target>
        <context-group purpose="information">
          <context context-type="source">Paragraph text&#13;
XPath: /p[3]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17669">
        <source>相关生态</source>
        <target state="needs-translation">相关生态</target>
        <context-group purpose="information">
          <context context-type="source">Headline 2&#13;
XPath: /h2[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17671">
        <source>数据缓存作为抽象服务，可以被多个插件实现。</source>
        <target state="needs-translation">数据缓存作为抽象服务，可以被多个插件实现。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[4]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17673">
        <source>以下是提供此服务的插件：</source>
        <target state="needs-translation">以下是提供此服务的插件：</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[4]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17675" translate="no">
        <source>./plugins/database.md</source>
        <target>./plugins/database.md</target>
        <context-group purpose="information">
          <context context-type="source">Link Resource&#13;
XPath: /ul/li[1]/a[@href]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17677" translate="no">
        <source>koishi-plugin-cache-database</source>
        <target>koishi-plugin-cache-database</target>
        <context-group purpose="information">
          <context context-type="source">Anchor Link&#13;
XPath: /ul/li[1]/a</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17679" translate="no">
        <source>./plugins/memory.md</source>
        <target>./plugins/memory.md</target>
        <context-group purpose="information">
          <context context-type="source">Link Resource&#13;
XPath: /ul/li[2]/a[@href]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17681" translate="no">
        <source>koishi-plugin-cache-memory</source>
        <target>koishi-plugin-cache-memory</target>
        <context-group purpose="information">
          <context context-type="source">Anchor Link&#13;
XPath: /ul/li[2]/a</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17683" translate="no">
        <source>./plugins/redis.md</source>
        <target>./plugins/redis.md</target>
        <context-group purpose="information">
          <context context-type="source">Link Resource&#13;
XPath: /ul/li[3]/a[@href]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17685" translate="no">
        <source>koishi-plugin-cache-redis</source>
        <target>koishi-plugin-cache-redis</target>
        <context-group purpose="information">
          <context context-type="source">Anchor Link&#13;
XPath: /ul/li[3]/a</context>
        </context-group>
      </trans-unit>
    </body>
  </file>
  <file id="705" original="/[koishijs.cache] main/docs/zh-CN/plugins/database.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="17687" translate="no">
        <source>koishi-plugin-cache-database</source>
        <target>koishi-plugin-cache-database</target>
        <context-group purpose="information">
          <context context-type="source">Headline 1&#13;
XPath: /h1</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17689">
        <source>配置项</source>
        <target state="needs-translation">配置项</target>
        <context-group purpose="information">
          <context context-type="source">Headline 2&#13;
XPath: /h2</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17691">
        <source>refreshInterval</source>
        <target state="needs-translation">refreshInterval</target>
        <context-group purpose="information">
          <context context-type="source">Headline 3&#13;
XPath: /h3</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17693">
        <source>类型: &lt;code&gt;number&lt;/code&gt;</source>
        <target state="needs-translation">类型: &lt;code&gt;number&lt;/code&gt;</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul/li[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17695">
        <source>默认值: &lt;code&gt;600000&lt;/code&gt;</source>
        <target state="needs-translation">默认值: &lt;code&gt;600000&lt;/code&gt;</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul/li[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17697">
        <source>缓存刷新时间 (毫秒)。</source>
        <target state="needs-translation">缓存刷新时间 (毫秒)。</target>
        <context-group purpose="information">
          <context context-type="source">Paragraph text&#13;
XPath: /p</context>
        </context-group>
      </trans-unit>
    </body>
  </file>
  <file id="707" original="/[koishijs.cache] main/docs/zh-CN/plugins/memory.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="17699" translate="no">
        <source>koishi-plugin-cache-memory</source>
        <target>koishi-plugin-cache-memory</target>
        <context-group purpose="information">
          <context context-type="source">Headline 1&#13;
XPath: /h1</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17701">
        <source>此插件无配置项。</source>
        <target state="needs-translation">此插件无配置项。</target>
        <context-group purpose="information">
          <context context-type="source">Paragraph text&#13;
XPath: /p</context>
        </context-group>
      </trans-unit>
    </body>
  </file>
  <file id="709" original="/[koishijs.cache] main/docs/zh-CN/plugins/redis.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="17703" translate="no">
        <source>koishi-plugin-cache-redis</source>
        <target>koishi-plugin-cache-redis</target>
        <context-group purpose="information">
          <context context-type="source">Headline 1&#13;
XPath: /h1</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17705">
        <source>配置项</source>
        <target state="needs-translation">配置项</target>
        <context-group purpose="information">
          <context context-type="source">Headline 2&#13;
XPath: /h2</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17707">
        <source>endpoint</source>
        <target state="needs-translation">endpoint</target>
        <context-group purpose="information">
          <context context-type="source">Headline 3&#13;
XPath: /h3[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17709">
        <source>类型: &lt;code&gt;string&lt;/code&gt;</source>
        <target state="needs-translation">类型: &lt;code&gt;string&lt;/code&gt;</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[1]/li[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17711">
        <source>默认值: &lt;code&gt;redis://localhost:6379&lt;/code&gt;</source>
        <target state="needs-translation">默认值: &lt;code&gt;redis://localhost:6379&lt;/code&gt;</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[1]/li[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17713">
        <source>Redis 服务器地址。</source>
        <target state="needs-translation">Redis 服务器地址。</target>
        <context-group purpose="information">
          <context context-type="source">Paragraph text&#13;
XPath: /p[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17715">
        <source>prefix</source>
        <target state="needs-translation">prefix</target>
        <context-group purpose="information">
          <context context-type="source">Headline 3&#13;
XPath: /h3[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17717">
        <source>类型: &lt;code&gt;string&lt;/code&gt;</source>
        <target state="needs-translation">类型: &lt;code&gt;string&lt;/code&gt;</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[2]/li[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17719">
        <source>默认值: &lt;code&gt;koishi:&lt;/code&gt;</source>
        <target state="needs-translation">默认值: &lt;code&gt;koishi:&lt;/code&gt;</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[2]/li[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17721">
        <source>Redis 键名前缀。</source>
        <target state="needs-translation">Redis 键名前缀。</target>
        <context-group purpose="information">
          <context context-type="source">Paragraph text&#13;
XPath: /p[2]</context>
        </context-group>
      </trans-unit>
    </body>
  </file>
  <file id="711" original="/[koishijs.cache] main/docs/zh-CN/manifest.json" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="17723" resname="name" translate="no">
        <source>@koishijs/cache</source>
        <target>@koishijs/cache</target>
        <context-group purpose="information">
          <context context-type="source"> -&gt; name</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17725" resname="short_name">
        <source>Cache</source>
        <target state="needs-translation">Cache</target>
        <context-group purpose="information">
          <context context-type="source"> -&gt; short_name</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17727" resname="description">
        <source>Koishi 缓存服务</source>
        <target state="needs-translation">Koishi 缓存服务</target>
        <context-group purpose="information">
          <context context-type="source"> -&gt; description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17729" resname="start_url">
        <source>/zh-CN/</source>
        <target state="needs-translation">/zh-CN/</target>
        <context-group purpose="information">
          <context context-type="source"> -&gt; start_url</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17731" resname="display">
        <source>standalone</source>
        <target state="needs-translation">standalone</target>
        <context-group purpose="information">
          <context context-type="source"> -&gt; display</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17733" resname="background_color" translate="no">
        <source>#ffffff</source>
        <target>#ffffff</target>
        <context-group purpose="information">
          <context context-type="source"> -&gt; background_color</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17735" resname="theme_color" translate="no">
        <source>#5546a3</source>
        <target>#5546a3</target>
        <context-group purpose="information">
          <context context-type="source"> -&gt; theme_color</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17737" resname="icons.0.src" translate="no">
        <source>https://koishi.chat/logo.png</source>
        <target>https://koishi.chat/logo.png</target>
        <context-group purpose="information">
          <context context-type="source">icons -&gt; 0 -&gt; src</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17739" resname="icons.0.sizes">
        <source>384x384</source>
        <target state="needs-translation">384x384</target>
        <context-group purpose="information">
          <context context-type="source">icons -&gt; 0 -&gt; sizes</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17741" resname="icons.0.type">
        <source>image/png</source>
        <target state="needs-translation">image/png</target>
        <context-group purpose="information">
          <context context-type="source">icons -&gt; 0 -&gt; type</context>
        </context-group>
      </trans-unit>
    </body>
  </file>
  <file id="713" original="/[koishijs.cache] main/docs/.vitepress/config/zh-CN.json" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="17743" resname="description">
        <source>Koishi 缓存服务</source>
        <target state="needs-translation">Koishi 缓存服务</target>
        <context-group purpose="information">
          <context context-type="source"> -&gt; description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="38756" resname="head.0.0">
        <source>link</source>
        <target state="needs-translation">link</target>
        <context-group purpose="information">
          <context context-type="source">head -&gt; 0 -&gt; 0</context>
        </context-group>
      </trans-unit>
      <trans-unit id="38758" resname="head.0.1.rel">
        <source>icon</source>
        <target state="needs-translation">icon</target>
        <context-group purpose="information">
          <context context-type="source">head -&gt; 0 -&gt; 1 -&gt; rel</context>
        </context-group>
      </trans-unit>
      <trans-unit id="38760" resname="head.0.1.href" translate="no">
        <source>https://koishi.chat/logo.png</source>
        <target>https://koishi.chat/logo.png</target>
        <context-group purpose="information">
          <context context-type="source">head -&gt; 0 -&gt; 1 -&gt; href</context>
        </context-group>
      </trans-unit>
      <trans-unit id="38762" resname="head.1.0">
        <source>link</source>
        <target state="needs-translation">link</target>
        <context-group purpose="information">
          <context context-type="source">head -&gt; 1 -&gt; 0</context>
        </context-group>
      </trans-unit>
      <trans-unit id="38764" resname="head.1.1.rel">
        <source>manifest</source>
        <target state="needs-translation">manifest</target>
        <context-group purpose="information">
          <context context-type="source">head -&gt; 1 -&gt; 1 -&gt; rel</context>
        </context-group>
      </trans-unit>
      <trans-unit id="38766" resname="head.1.1.href" approved="yes">
        <source>/manifest/zh-CN.json</source>
        <target state="final">/manifest/zh-TW.json</target>
        <context-group purpose="information">
          <context context-type="source">head -&gt; 1 -&gt; 1 -&gt; href</context>
        </context-group>
      </trans-unit>
      <trans-unit id="38768" resname="head.2.0">
        <source>meta</source>
        <target state="needs-translation">meta</target>
        <context-group purpose="information">
          <context context-type="source">head -&gt; 2 -&gt; 0</context>
        </context-group>
      </trans-unit>
      <trans-unit id="38770" resname="head.2.1.name">
        <source>theme-color</source>
        <target state="needs-translation">theme-color</target>
        <context-group purpose="information">
          <context context-type="source">head -&gt; 2 -&gt; 1 -&gt; name</context>
        </context-group>
      </trans-unit>
      <trans-unit id="38772" resname="head.2.1.content">
        <source>#5546a3</source>
        <target state="needs-translation">#5546a3</target>
        <context-group purpose="information">
          <context context-type="source">head -&gt; 2 -&gt; 1 -&gt; content</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17763" resname="themeConfig.editLink.text">
        <source>在 GitHub 编辑此页面</source>
        <target state="translated">在 Crowdin 上翻譯此頁面</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; editLink -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17765" resname="themeConfig.editLink.pattern" approved="yes">
        <source>https://github.com/koishijs/cache/edit/main/docs/:path</source>
        <target state="final">https://crowdin.com/translate/koishi/:id/zhcn-zhtw</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; editLink -&gt; pattern</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17767" resname="themeConfig.sidebar./.0.text">
        <source>指南</source>
        <target state="needs-translation">指南</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; / -&gt; 0 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17769" resname="themeConfig.sidebar./.0.items.0.text">
        <source>介绍</source>
        <target state="translated">介紹</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; / -&gt; 0 -&gt; items -&gt; 0 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17771" resname="themeConfig.sidebar./.0.items.0.link" translate="no">
        <source>/</source>
        <target>/</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; / -&gt; 0 -&gt; items -&gt; 0 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17773" resname="themeConfig.sidebar./.0.items.1.text">
        <source>API</source>
        <target state="needs-translation">API</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; / -&gt; 0 -&gt; items -&gt; 1 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17775" resname="themeConfig.sidebar./.0.items.1.link" translate="no">
        <source>/api</source>
        <target>/api</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; / -&gt; 0 -&gt; items -&gt; 1 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17777" resname="themeConfig.sidebar./.1.text">
        <source>插件</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">插件</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; / -&gt; 1 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17779" resname="themeConfig.sidebar./.1.items.0.text">
        <source>Database</source>
        <target state="needs-translation">Database</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; / -&gt; 1 -&gt; items -&gt; 0 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17781" resname="themeConfig.sidebar./.1.items.0.link" translate="no">
        <source>/plugins/database</source>
        <target>/plugins/database</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; / -&gt; 1 -&gt; items -&gt; 0 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17783" resname="themeConfig.sidebar./.1.items.1.text">
        <source>Memory</source>
        <target state="translated">Memory</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; / -&gt; 1 -&gt; items -&gt; 1 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17785" resname="themeConfig.sidebar./.1.items.1.link" translate="no">
        <source>/plugins/memory</source>
        <target>/plugins/memory</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; / -&gt; 1 -&gt; items -&gt; 1 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17787" resname="themeConfig.sidebar./.1.items.2.text">
        <source>Redis</source>
        <target state="needs-translation">Redis</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; / -&gt; 1 -&gt; items -&gt; 2 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17789" resname="themeConfig.sidebar./.1.items.2.link" translate="no">
        <source>/plugins/redis</source>
        <target>/plugins/redis</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; / -&gt; 1 -&gt; items -&gt; 2 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17791" resname="themeConfig.sidebar./.2.text">
        <source>更多</source>
        <target state="translated">更多</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; / -&gt; 2 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17793" resname="themeConfig.sidebar./.2.items.0.text">
        <source>Koishi 官网</source>
        <target state="needs-translation">Koishi 官网</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; / -&gt; 2 -&gt; items -&gt; 0 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="17795" resname="themeConfig.sidebar./.2.items.0.link" translate="no">
        <source>https://koishi.chat</source>
        <target>https://koishi.chat</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; / -&gt; 2 -&gt; items -&gt; 0 -&gt; link</context>
        </context-group>
      </trans-unit>
    </body>
  </file>
  <file id="755" original="/[koishijs.webui] main/packages/market/client/locales/zh-CN.yml" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="18209" resname="type.sort">
        <source>排序</source>
        <target state="translated">排序</target>
        <context-group purpose="information">
          <context context-type="source">type -&gt; sort</context>
        </context-group>
      </trans-unit>
      <trans-unit id="18211" resname="type.filter">
        <source>筛选</source>
        <target state="translated">篩選</target>
        <context-group purpose="information">
          <context context-type="source">type -&gt; filter</context>
        </context-group>
      </trans-unit>
      <trans-unit id="18213" resname="type.category">
        <source>分类</source>
        <target state="translated">分類</target>
        <context-group purpose="information">
          <context context-type="source">type -&gt; category</context>
        </context-group>
      </trans-unit>
      <trans-unit id="18215" resname="badge.installed">
        <source>已下载</source>
        <target state="translated">已下載</target>
        <context-group purpose="information">
          <context context-type="source">badge -&gt; installed</context>
        </context-group>
      </trans-unit>
      <trans-unit id="18217" resname="badge.verified">
        <source>官方认证</source>
        <target state="translated">官方認證</target>
        <context-group purpose="information">
          <context context-type="source">badge -&gt; verified</context>
        </context-group>
      </trans-unit>
      <trans-unit id="18219" resname="badge.insecure">
        <source>不安全</source>
        <target state="translated">不安全</target>
        <context-group purpose="information">
          <context context-type="source">badge -&gt; insecure</context>
        </context-group>
      </trans-unit>
      <trans-unit id="18221" resname="badge.preview">
        <source>开发中</source>
        <target state="translated">開發中</target>
        <context-group purpose="information">
          <context context-type="source">badge -&gt; preview</context>
        </context-group>
      </trans-unit>
      <trans-unit id="18223" resname="badge.newborn">
        <source>近期新增</source>
        <target state="translated">近期新增</target>
        <context-group purpose="information">
          <context context-type="source">badge -&gt; newborn</context>
        </context-group>
      </trans-unit>
      <trans-unit id="22153" resname="badge.portable">
        <source>快速体验</source>
        <target state="translated">快速體驗</target>
        <context-group purpose="information">
          <context context-type="source">badge -&gt; portable</context>
        </context-group>
      </trans-unit>
      <trans-unit id="18225" resname="sort.default">
        <source>综合</source>
        <target state="translated">綜合</target>
        <context-group purpose="information">
          <context context-type="source">sort -&gt; default</context>
        </context-group>
      </trans-unit>
      <trans-unit id="18227" resname="sort.rating">
        <source>按评分</source>
        <target state="translated">依評分</target>
        <context-group purpose="information">
          <context context-type="source">sort -&gt; rating</context>
        </context-group>
      </trans-unit>
      <trans-unit id="18229" resname="sort.download">
        <source>按下载量</source>
        <target state="translated">依下載量</target>
        <context-group purpose="information">
          <context context-type="source">sort -&gt; download</context>
        </context-group>
      </trans-unit>
      <trans-unit id="18231" resname="sort.created">
        <source>按创建时间</source>
        <target state="translated">依創建時間</target>
        <context-group purpose="information">
          <context context-type="source">sort -&gt; created</context>
        </context-group>
      </trans-unit>
      <trans-unit id="18233" resname="sort.updated">
        <source>按更新时间</source>
        <target state="translated">依更新時間</target>
        <context-group purpose="information">
          <context context-type="source">sort -&gt; updated</context>
        </context-group>
      </trans-unit>
      <trans-unit id="18459" resname="category.all">
        <source>所有插件</source>
        <target state="translated">所有外掛程式</target>
        <context-group purpose="information">
          <context context-type="source">category -&gt; all</context>
        </context-group>
      </trans-unit>
      <trans-unit id="18461" resname="category.other">
        <source>未分类</source>
        <target state="translated">未分類</target>
        <context-group purpose="information">
          <context context-type="source">category -&gt; other</context>
        </context-group>
      </trans-unit>
      <trans-unit id="18237" resname="category.adapter">
        <source>适配器</source>
        <target state="translated">適配器</target>
        <context-group purpose="information">
          <context context-type="source">category -&gt; adapter</context>
        </context-group>
      </trans-unit>
      <trans-unit id="64402" resname="category.general">
        <source>通用服务</source>
        <target state="needs-translation">通用服务</target>
        <context-group purpose="information">
          <context context-type="source">category -&gt; general</context>
        </context-group>
      </trans-unit>
      <trans-unit id="18241" resname="category.extension">
        <source>扩展功能</source>
        <target state="translated">擴展功能</target>
        <context-group purpose="information">
          <context context-type="source">category -&gt; extension</context>
        </context-group>
      </trans-unit>
      <trans-unit id="64404" resname="category.webui">
        <source>控制台</source>
        <target state="needs-translation">控制台</target>
        <context-group purpose="information">
          <context context-type="source">category -&gt; webui</context>
        </context-group>
      </trans-unit>
      <trans-unit id="18245" resname="category.manage">
        <source>管理工具</source>
        <target state="translated">管理工具</target>
        <context-group purpose="information">
          <context context-type="source">category -&gt; manage</context>
        </context-group>
      </trans-unit>
      <trans-unit id="18247" resname="category.preset">
        <source>行为预设</source>
        <target state="translated">行為預設</target>
        <context-group purpose="information">
          <context context-type="source">category -&gt; preset</context>
        </context-group>
      </trans-unit>
      <trans-unit id="18249" resname="category.image">
        <source>图片服务</source>
        <target state="translated">圖片服務</target>
        <context-group purpose="information">
          <context context-type="source">category -&gt; image</context>
        </context-group>
      </trans-unit>
      <trans-unit id="18251" resname="category.media">
        <source>资讯服务</source>
        <target state="translated">資訊服務</target>
        <context-group purpose="information">
          <context context-type="source">category -&gt; media</context>
        </context-group>
      </trans-unit>
      <trans-unit id="18253" resname="category.tool">
        <source>实用工具</source>
        <target state="translated">實用工具</target>
        <context-group purpose="information">
          <context context-type="source">category -&gt; tool</context>
        </context-group>
      </trans-unit>
      <trans-unit id="64406" resname="category.life">
        <source>生活指南</source>
        <target state="needs-translation">生活指南</target>
        <context-group purpose="information">
          <context context-type="source">category -&gt; life</context>
        </context-group>
      </trans-unit>
      <trans-unit id="18255" resname="category.ai">
        <source>人工智能</source>
        <target state="translated">人工智慧</target>
        <context-group purpose="information">
          <context context-type="source">category -&gt; ai</context>
        </context-group>
      </trans-unit>
      <trans-unit id="18257" resname="category.meme">
        <source>趣味交互</source>
        <target state="translated">趣味交互</target>
        <context-group purpose="information">
          <context context-type="source">category -&gt; meme</context>
        </context-group>
      </trans-unit>
      <trans-unit id="18259" resname="category.game">
        <source>娱乐玩法</source>
        <target state="translated">娛樂玩法</target>
        <context-group purpose="information">
          <context context-type="source">category -&gt; game</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21679" resname="category.gametool">
        <source>游戏辅助</source>
        <target state="translated">遊戲輔助</target>
        <context-group purpose="information">
          <context context-type="source">category -&gt; gametool</context>
        </context-group>
      </trans-unit>
      <trans-unit id="18263" resname="time.just-now">
        <source>刚刚</source>
        <target state="translated">剛剛</target>
        <context-group purpose="information">
          <context context-type="source">time -&gt; just-now</context>
        </context-group>
      </trans-unit>
      <trans-unit id="18265" resname="time.minutes-ago">
        <source>{0} 分钟前</source>
        <target state="translated">{0} 分鐘前</target>
        <context-group purpose="information">
          <context context-type="source">time -&gt; minutes-ago</context>
        </context-group>
      </trans-unit>
      <trans-unit id="18267" resname="time.hours-ago">
        <source>{0} 小时前</source>
        <target state="translated">{0} 小時前</target>
        <context-group purpose="information">
          <context context-type="source">time -&gt; hours-ago</context>
        </context-group>
      </trans-unit>
      <trans-unit id="18269" resname="time.days-ago">
        <source>{0} 天前</source>
        <target state="translated">{0} 天前</target>
        <context-group purpose="information">
          <context context-type="source">time -&gt; days-ago</context>
        </context-group>
      </trans-unit>
      <trans-unit id="18319" resname="search.placeholder">
        <source>输入想要查询的插件名</source>
        <target state="translated">輸入想要查詢的外掛程式名</target>
        <context-group purpose="information">
          <context context-type="source">search -&gt; placeholder</context>
        </context-group>
      </trans-unit>
    </body>
  </file>
  <file id="757" original="/[koishijs.webui] main/plugins/status/src/locales/zh-CN.yml" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="18271" resname="commands.status.description">
        <source>查看运行状态</source>
        <target state="translated">查看運行狀態</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; status -&gt; description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="36668" resname="commands.status.messages.status.1">
        <source>运行中</source>
        <target state="needs-translation">运行中</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; status -&gt; messages -&gt; status -&gt; 1</context>
        </context-group>
      </trans-unit>
      <trans-unit id="36670" resname="commands.status.messages.status.0">
        <source>离线</source>
        <target state="needs-translation">离线</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; status -&gt; messages -&gt; status -&gt; 0</context>
        </context-group>
      </trans-unit>
      <trans-unit id="36672" resname="commands.status.messages.status.2">
        <source>正在连接</source>
        <target state="needs-translation">正在连接</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; status -&gt; messages -&gt; status -&gt; 2</context>
        </context-group>
      </trans-unit>
      <trans-unit id="36674" resname="commands.status.messages.status.4">
        <source>正在重连</source>
        <target state="needs-translation">正在重连</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; status -&gt; messages -&gt; status -&gt; 4</context>
        </context-group>
      </trans-unit>
      <trans-unit id="36676" resname="commands.status.messages.status.3">
        <source>正在断开</source>
        <target state="needs-translation">正在断开</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; status -&gt; messages -&gt; status -&gt; 3</context>
        </context-group>
      </trans-unit>
      <trans-unit id="64146" resname="commands.status.messages.bot">
        <source>&lt;p&gt;[{platform}] {user.name}：&lt;i18n path={&quot;commands.status.messages.status.&quot; + status}/&gt;&lt;/p&gt;</source>
        <target state="needs-translation">&lt;p&gt;[{platform}] {user.name}：&lt;i18n path={&quot;commands.status.messages.status.&quot; + status}/&gt;&lt;/p&gt;</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; status -&gt; messages -&gt; bot</context>
        </context-group>
      </trans-unit>
      <trans-unit id="18285" resname="commands.status.messages.epilog">
        <source>==========
CPU 使用率：{ (cpu[0] * 100).toFixed() }% / { (cpu[1] * 100).toFixed() }%
内存使用率：{ (memory[0] * 100).toFixed() }% / { (memory[1] * 100).toFixed() }%</source>
        <target state="translated">==========
CPU 使用率：{ (cpu[0] * 100).toFixed() }% / { (cpu[1] * 100).toFixed() }%
內存使用率：{ (memory[0] * 100).toFixed() }% / { (memory[1] * 100).toFixed() }%</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; status -&gt; messages -&gt; epilog</context>
        </context-group>
      </trans-unit>
    </body>
  </file>
  <file id="773" original="/[koishijs.webui] main/plugins/console/src/node/locales/zh-CN.yml" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="18289" resname="root">
        <source>前端页面的根目录。</source>
        <target state="translated">前端頁面的根目錄。</target>
        <context-group purpose="information">
          <context context-type="source"> -&gt; root</context>
        </context-group>
      </trans-unit>
      <trans-unit id="18291" resname="uiPath">
        <source>前端页面呈现的路径。</source>
        <target state="translated">前端頁面呈現的路徑。</target>
        <context-group purpose="information">
          <context context-type="source"> -&gt; uiPath</context>
        </context-group>
      </trans-unit>
      <trans-unit id="18293" resname="apiPath">
        <source>后端 API 服务的路径。</source>
        <target state="translated">後端 API 服務的路徑。</target>
        <context-group purpose="information">
          <context context-type="source"> -&gt; apiPath</context>
        </context-group>
      </trans-unit>
      <trans-unit id="18295" resname="selfUrl">
        <source>Koishi 服务暴露在公网的地址。</source>
        <target state="translated">Koishi 服務暴露在公網的地址。</target>
        <context-group purpose="information">
          <context context-type="source"> -&gt; selfUrl</context>
        </context-group>
      </trans-unit>
      <trans-unit id="18297" resname="open">
        <source>在应用启动后自动在浏览器中打开控制台。</source>
        <target state="translated">在應用啟動後自動在瀏覽器中打開控制台。</target>
        <context-group purpose="information">
          <context context-type="source"> -&gt; open</context>
        </context-group>
      </trans-unit>
      <trans-unit id="64012" resname="head.$desc">
        <source>自定义页面头部信息。</source>
        <target state="needs-translation">自定义页面头部信息。</target>
        <context-group purpose="information">
          <context context-type="source">head -&gt; $desc</context>
        </context-group>
      </trans-unit>
      <trans-unit id="64328" resname="head.$inner.tag.$desc">
        <source>标签名。</source>
        <target state="needs-translation">标签名。</target>
        <context-group purpose="information">
          <context context-type="source">head -&gt; $inner -&gt; tag -&gt; $desc</context>
        </context-group>
      </trans-unit>
      <trans-unit id="64330" resname="head.$inner.tag.$inner.0">
        <source>title</source>
        <target state="needs-translation">title</target>
        <context-group purpose="information">
          <context context-type="source">head -&gt; $inner -&gt; tag -&gt; $inner -&gt; 0</context>
        </context-group>
      </trans-unit>
      <trans-unit id="64332" resname="head.$inner.tag.$inner.1">
        <source>link</source>
        <target state="needs-translation">link</target>
        <context-group purpose="information">
          <context context-type="source">head -&gt; $inner -&gt; tag -&gt; $inner -&gt; 1</context>
        </context-group>
      </trans-unit>
      <trans-unit id="64334" resname="head.$inner.tag.$inner.2">
        <source>meta</source>
        <target state="needs-translation">meta</target>
        <context-group purpose="information">
          <context context-type="source">head -&gt; $inner -&gt; tag -&gt; $inner -&gt; 2</context>
        </context-group>
      </trans-unit>
      <trans-unit id="64336" resname="head.$inner.tag.$inner.3">
        <source>script</source>
        <target state="needs-translation">script</target>
        <context-group purpose="information">
          <context context-type="source">head -&gt; $inner -&gt; tag -&gt; $inner -&gt; 3</context>
        </context-group>
      </trans-unit>
      <trans-unit id="64338" resname="head.$inner.tag.$inner.4">
        <source>style</source>
        <target state="needs-translation">style</target>
        <context-group purpose="information">
          <context context-type="source">head -&gt; $inner -&gt; tag -&gt; $inner -&gt; 4</context>
        </context-group>
      </trans-unit>
      <trans-unit id="64340" resname="head.$inner.tag.$inner.5">
        <source>自定义</source>
        <target state="needs-translation">自定义</target>
        <context-group purpose="information">
          <context context-type="source">head -&gt; $inner -&gt; tag -&gt; $inner -&gt; 5</context>
        </context-group>
      </trans-unit>
      <trans-unit id="64016" resname="head.$inner.attrs">
        <source>标签属性。</source>
        <target state="needs-translation">标签属性。</target>
        <context-group purpose="information">
          <context context-type="source">head -&gt; $inner -&gt; attrs</context>
        </context-group>
      </trans-unit>
      <trans-unit id="64018" resname="head.$inner.content">
        <source>标签内容。</source>
        <target state="needs-translation">标签内容。</target>
        <context-group purpose="information">
          <context context-type="source">head -&gt; $inner -&gt; content</context>
        </context-group>
      </trans-unit>
      <trans-unit id="18299" resname="heartbeat.interval">
        <source>心跳发送间隔 (单位毫秒)。</source>
        <target state="translated">心跳發送間隔 (單位毫秒)。</target>
        <context-group purpose="information">
          <context context-type="source">heartbeat -&gt; interval</context>
        </context-group>
      </trans-unit>
      <trans-unit id="18301" resname="heartbeat.timeout">
        <source>心跳超时时间 (单位毫秒)。</source>
        <target state="translated">心跳超時時間 (單位毫秒)。</target>
        <context-group purpose="information">
          <context context-type="source">heartbeat -&gt; timeout</context>
        </context-group>
      </trans-unit>
      <trans-unit id="18303" resname="devMode">
        <source>启用调试模式 (仅供开发者使用)。</source>
        <target state="translated">啟用調試模式 (僅供開發者使用)。</target>
        <context-group purpose="information">
          <context context-type="source"> -&gt; devMode</context>
        </context-group>
      </trans-unit>
      <trans-unit id="18305" resname="cacheDir">
        <source>调试服务器缓存目录。</source>
        <target state="translated">調試服務器緩存目錄。</target>
        <context-group purpose="information">
          <context context-type="source"> -&gt; cacheDir</context>
        </context-group>
      </trans-unit>
    </body>
  </file>
  <file id="775" original="/[koishijs.webui] main/packages/client/app/pages/welcome.zh-CN.yml" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="18307" resname="title">
        <source>欢迎使用 Koishi！</source>
        <target state="translated">歡迎使用 Koishi！</target>
        <context-group purpose="information">
          <context context-type="source"> -&gt; title</context>
        </context-group>
      </trans-unit>
      <trans-unit id="18309" resname="description">
        <source>你的机器人已经准备就绪。点击下面的任一选项，开启你的 Koishi 之旅吧。</source>
        <target state="translated">你的機械人已經準備就緒。點擊下面的任一選項，開啟你的 Koishi 之旅吧。</target>
        <context-group purpose="information">
          <context context-type="source"> -&gt; description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="18311" resname="action.docs.title">
        <source>阅读文档</source>
        <target state="translated">閱讀文檔</target>
        <context-group purpose="information">
          <context context-type="source">action -&gt; docs -&gt; title</context>
        </context-group>
      </trans-unit>
      <trans-unit id="18313" resname="action.docs.description">
        <source>开始阅读官方文档。官方文档里包含了你想要了解的全部内容。</source>
        <target state="translated">開始閱讀官方文檔。官方文檔裡包含了你想要了解的全部內容。</target>
        <context-group purpose="information">
          <context context-type="source">action -&gt; docs -&gt; description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="18315" resname="action.forum.title">
        <source>前往论坛</source>
        <target state="translated">前往論壇</target>
        <context-group purpose="information">
          <context context-type="source">action -&gt; forum -&gt; title</context>
        </context-group>
      </trans-unit>
      <trans-unit id="18317" resname="action.forum.description">
        <source>前往论坛与其他用户交流。如果你遇到了问题，可以在这里寻求帮助。</source>
        <target state="translated">前往論壇與其他使用者交流。如果你遇到了問題，可以在這裡尋求幫助。</target>
        <context-group purpose="information">
          <context context-type="source">action -&gt; forum -&gt; description</context>
        </context-group>
      </trans-unit>
    </body>
  </file>
  <file id="805" original="/[koishijs.koishi] master/plugins/database/mongo/src/locales/zh-CN.yml" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="18415" resname="protocol">
        <source>要使用的协议名。</source>
        <target state="translated">要使用的協議名。</target>
        <context-group purpose="information">
          <context context-type="source"> -&gt; protocol</context>
        </context-group>
      </trans-unit>
      <trans-unit id="18417" resname="host">
        <source>要连接到的主机名。</source>
        <target state="translated">要連接到的主機名。</target>
        <context-group purpose="information">
          <context context-type="source"> -&gt; host</context>
        </context-group>
      </trans-unit>
      <trans-unit id="18419" resname="port">
        <source>要连接到的端口号。</source>
        <target state="translated">要連接到的端口號。</target>
        <context-group purpose="information">
          <context context-type="source"> -&gt; port</context>
        </context-group>
      </trans-unit>
      <trans-unit id="18421" resname="username">
        <source>要使用的用户名。</source>
        <target state="translated">要使用的使用者名。</target>
        <context-group purpose="information">
          <context context-type="source"> -&gt; username</context>
        </context-group>
      </trans-unit>
      <trans-unit id="18423" resname="password">
        <source>要使用的密码。</source>
        <target state="translated">要使用的密碼。</target>
        <context-group purpose="information">
          <context context-type="source"> -&gt; password</context>
        </context-group>
      </trans-unit>
      <trans-unit id="18425" resname="database">
        <source>要访问的数据库名。</source>
        <target state="translated">要訪問的數據庫名。</target>
        <context-group purpose="information">
          <context context-type="source"> -&gt; database</context>
        </context-group>
      </trans-unit>
      <trans-unit id="39066" resname="writeConcern.$description">
        <source>Write Concern</source>
        <target state="needs-translation">Write Concern</target>
        <context-group purpose="information">
          <context context-type="source">writeConcern -&gt; $description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="39068" resname="writeConcern.w.$description">
        <source>The write concern.</source>
        <target state="needs-translation">The write concern.</target>
        <context-group purpose="information">
          <context context-type="source">writeConcern -&gt; w -&gt; $description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="39070" resname="writeConcern.w.$value.0">
        <source>Default</source>
        <target state="needs-translation">Default</target>
        <context-group purpose="information">
          <context context-type="source">writeConcern -&gt; w -&gt; $value -&gt; 0</context>
        </context-group>
      </trans-unit>
      <trans-unit id="39072" resname="writeConcern.w.$value.1">
        <source>Custom</source>
        <target state="needs-translation">Custom</target>
        <context-group purpose="information">
          <context context-type="source">writeConcern -&gt; w -&gt; $value -&gt; 1</context>
        </context-group>
      </trans-unit>
      <trans-unit id="39074" resname="writeConcern.w.$value.2">
        <source>Majority</source>
        <target state="needs-translation">Majority</target>
        <context-group purpose="information">
          <context context-type="source">writeConcern -&gt; w -&gt; $value -&gt; 2</context>
        </context-group>
      </trans-unit>
      <trans-unit id="39076" resname="writeConcern.wtimeoutMS">
        <source>The write concern timeout.</source>
        <target state="needs-translation">The write concern timeout.</target>
        <context-group purpose="information">
          <context context-type="source">writeConcern -&gt; wtimeoutMS</context>
        </context-group>
      </trans-unit>
      <trans-unit id="39078" resname="writeConcern.journal">
        <source>The journal write concern.</source>
        <target state="needs-translation">The journal write concern.</target>
        <context-group purpose="information">
          <context context-type="source">writeConcern -&gt; journal</context>
        </context-group>
      </trans-unit>
    </body>
  </file>
  <file id="807" original="/[koishijs.koishi] master/plugins/database/mysql/src/locales/zh-CN.yml" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="18427" resname="host">
        <source>要连接到的主机名。</source>
        <target state="translated">要連接到的主機名。</target>
        <context-group purpose="information">
          <context context-type="source"> -&gt; host</context>
        </context-group>
      </trans-unit>
      <trans-unit id="18429" resname="port">
        <source>要连接到的端口号。</source>
        <target state="translated">要連接到的端口號。</target>
        <context-group purpose="information">
          <context context-type="source"> -&gt; port</context>
        </context-group>
      </trans-unit>
      <trans-unit id="18431" resname="user">
        <source>要使用的用户名。</source>
        <target state="translated">要使用的使用者名。</target>
        <context-group purpose="information">
          <context context-type="source"> -&gt; user</context>
        </context-group>
      </trans-unit>
      <trans-unit id="18433" resname="password">
        <source>要使用的密码。</source>
        <target state="translated">要使用的密碼。</target>
        <context-group purpose="information">
          <context context-type="source"> -&gt; password</context>
        </context-group>
      </trans-unit>
      <trans-unit id="18435" resname="database">
        <source>要访问的数据库名。</source>
        <target state="translated">要訪問的數據庫名。</target>
        <context-group purpose="information">
          <context context-type="source"> -&gt; database</context>
        </context-group>
      </trans-unit>
      <trans-unit id="39058" resname="ssl.$description">
        <source>SSL 高级选项。</source>
        <target state="needs-translation">SSL 高级选项。</target>
        <context-group purpose="information">
          <context context-type="source">ssl -&gt; $description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="39060" resname="ssl.$value.0">
        <source>默认值</source>
        <target state="translated">預設值</target>
        <context-group purpose="information">
          <context context-type="source">ssl -&gt; $value -&gt; 0</context>
        </context-group>
      </trans-unit>
      <trans-unit id="39062" resname="ssl.$value.1.$description">
        <source>自定义</source>
        <target state="needs-translation">自定义</target>
        <context-group purpose="information">
          <context context-type="source">ssl -&gt; $value -&gt; 1 -&gt; $description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="39064" resname="ssl.$value.1.rejectUnauthorized">
        <source>拒绝使用无效证书的客户端。</source>
        <target state="needs-translation">拒绝使用无效证书的客户端。</target>
        <context-group purpose="information">
          <context context-type="source">ssl -&gt; $value -&gt; 1 -&gt; rejectUnauthorized</context>
        </context-group>
      </trans-unit>
    </body>
  </file>
  <file id="809" original="/[koishijs.koishi] master/plugins/database/sqlite/src/locales/zh-CN.yml" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="18437" resname="path">
        <source>数据库路径。</source>
        <target state="translated">數據庫路徑。</target>
        <context-group purpose="information">
          <context context-type="source"> -&gt; path</context>
        </context-group>
      </trans-unit>
    </body>
  </file>
  <file id="811" original="/[koishijs.koishi] master/plugins/hmr/src/locales/zh-CN.yml" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="18439" resname="base">
        <source>用户显示路径的根目录，默认为当前工作路径。</source>
        <target state="translated">使用者顯示路徑的根目錄，默認為當前工作路徑。</target>
        <context-group purpose="information">
          <context context-type="source"> -&gt; base</context>
        </context-group>
      </trans-unit>
      <trans-unit id="18441" resname="root">
        <source>要监听的文件或目录列表，相对于 `base` 路径。</source>
        <target state="translated">要監聽的文件或目錄列表，相對於 `base` 路徑。</target>
        <context-group purpose="information">
          <context context-type="source"> -&gt; root</context>
        </context-group>
      </trans-unit>
      <trans-unit id="18443" resname="ignored">
        <source>要忽略的文件或目录。支持 [Glob Patterns](https://github.com/micromatch/micromatch) 语法。</source>
        <target state="translated">要忽略的文件或目錄。支持 [Glob Patterns](https://github.com/micromatch/micromatch) 語法。</target>
        <context-group purpose="information">
          <context context-type="source"> -&gt; ignored</context>
        </context-group>
      </trans-unit>
      <trans-unit id="18445" resname="debounce">
        <source>延迟触发更新的等待时间。</source>
        <target state="translated">延遲觸發更新的等待時間。</target>
        <context-group purpose="information">
          <context context-type="source"> -&gt; debounce</context>
        </context-group>
      </trans-unit>
    </body>
  </file>
  <file id="819" original="/[koishijs.koishi-plugin-lobby] main/packages/uno/src/locales/zh-CN.yml" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="18455" resname="commands.uno.description">
        <source>UNO!</source>
        <target state="needs-translation">UNO!</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; uno -&gt; description</context>
        </context-group>
      </trans-unit>
    </body>
  </file>
  <file id="833" original="/[koishijs.webui] main/packages/theme-default/client/pages/welcome.zh-CN.yml" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="18515" resname="title">
        <source>欢迎使用 Koishi！</source>
        <target state="translated">歡迎使用 Koishi！</target>
        <context-group purpose="information">
          <context context-type="source"> -&gt; title</context>
        </context-group>
      </trans-unit>
      <trans-unit id="18517" resname="description">
        <source>你的机器人已经准备就绪。点击下面的任一选项，开启你的 Koishi 之旅吧。</source>
        <target state="translated">你的機械人已經準備就緒。點擊下面的任一選項，開啟你的 Koishi 之旅吧。</target>
        <context-group purpose="information">
          <context context-type="source"> -&gt; description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="18519" resname="action.docs.title">
        <source>阅读文档</source>
        <target state="translated">閱讀文檔</target>
        <context-group purpose="information">
          <context context-type="source">action -&gt; docs -&gt; title</context>
        </context-group>
      </trans-unit>
      <trans-unit id="18521" resname="action.docs.description">
        <source>开始阅读官方文档。官方文档里包含了你想要了解的全部内容。</source>
        <target state="translated">開始閱讀官方文檔。官方文檔裡包含了你想要了解的全部內容。</target>
        <context-group purpose="information">
          <context context-type="source">action -&gt; docs -&gt; description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="18523" resname="action.forum.title">
        <source>前往论坛</source>
        <target state="translated">前往論壇</target>
        <context-group purpose="information">
          <context context-type="source">action -&gt; forum -&gt; title</context>
        </context-group>
      </trans-unit>
      <trans-unit id="18525" resname="action.forum.description">
        <source>前往论坛与其他用户交流。如果你遇到了问题，可以在这里寻求帮助。</source>
        <target state="translated">前往論壇與其他使用者交流。如果你遇到了問題，可以在這裡尋求幫助。</target>
        <context-group purpose="information">
          <context context-type="source">action -&gt; forum -&gt; description</context>
        </context-group>
      </trans-unit>
    </body>
  </file>
  <file id="841" original="/[koishijs.webui] main/plugins/console/app/theme/pages/welcome.zh-CN.yml" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="18653" resname="title">
        <source>欢迎使用 Koishi！</source>
        <target state="translated">歡迎使用 Koishi！</target>
        <context-group purpose="information">
          <context context-type="source"> -&gt; title</context>
        </context-group>
      </trans-unit>
      <trans-unit id="18655" resname="description">
        <source>你的机器人已经准备就绪。点击下面的任一选项，开启你的 Koishi 之旅吧。</source>
        <target state="translated">你的機械人已經準備就緒。點擊下面的任一選項，開啟你的 Koishi 之旅吧。</target>
        <context-group purpose="information">
          <context context-type="source"> -&gt; description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="18657" resname="action.docs.title">
        <source>阅读文档</source>
        <target state="translated">閱讀文檔</target>
        <context-group purpose="information">
          <context context-type="source">action -&gt; docs -&gt; title</context>
        </context-group>
      </trans-unit>
      <trans-unit id="18659" resname="action.docs.description">
        <source>开始阅读官方文档。官方文档里包含了你想要了解的全部内容。</source>
        <target state="translated">開始閱讀官方文檔。官方文檔裡包含了你想要了解的全部內容。</target>
        <context-group purpose="information">
          <context context-type="source">action -&gt; docs -&gt; description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="18661" resname="action.forum.title">
        <source>前往论坛</source>
        <target state="translated">前往論壇</target>
        <context-group purpose="information">
          <context context-type="source">action -&gt; forum -&gt; title</context>
        </context-group>
      </trans-unit>
      <trans-unit id="18663" resname="action.forum.description">
        <source>前往论坛与其他用户交流。如果你遇到了问题，可以在这里寻求帮助。</source>
        <target state="translated">前往論壇與其他使用者交流。如果你遇到了問題，可以在這裡尋求幫助。</target>
        <context-group purpose="information">
          <context context-type="source">action -&gt; forum -&gt; description</context>
        </context-group>
      </trans-unit>
    </body>
  </file>
  <file id="845" original="/[koishijs.webui] main/packages/client/app/theme/pages/welcome.zh-CN.yml" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="18665" resname="title">
        <source>欢迎使用 Koishi！</source>
        <target state="translated">歡迎使用 Koishi！</target>
        <context-group purpose="information">
          <context context-type="source"> -&gt; title</context>
        </context-group>
      </trans-unit>
      <trans-unit id="18667" resname="description">
        <source>你的机器人已经准备就绪。点击下面的任一选项，开启你的 Koishi 之旅吧。</source>
        <target state="translated">你的機械人已經準備就緒。點擊下面的任一選項，開啟你的 Koishi 之旅吧。</target>
        <context-group purpose="information">
          <context context-type="source"> -&gt; description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="18669" resname="action.docs.title">
        <source>阅读文档</source>
        <target state="translated">閱讀文檔</target>
        <context-group purpose="information">
          <context context-type="source">action -&gt; docs -&gt; title</context>
        </context-group>
      </trans-unit>
      <trans-unit id="18671" resname="action.docs.description">
        <source>开始阅读官方文档。官方文档里包含了你想要了解的全部内容。</source>
        <target state="translated">開始閱讀官方文檔。官方文檔裡包含了你想要了解的全部內容。</target>
        <context-group purpose="information">
          <context context-type="source">action -&gt; docs -&gt; description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="18673" resname="action.forum.title">
        <source>前往论坛</source>
        <target state="translated">前往論壇</target>
        <context-group purpose="information">
          <context context-type="source">action -&gt; forum -&gt; title</context>
        </context-group>
      </trans-unit>
      <trans-unit id="18675" resname="action.forum.description">
        <source>前往论坛与其他用户交流。如果你遇到了问题，可以在这里寻求帮助。</source>
        <target state="translated">前往論壇與其他使用者交流。如果你遇到了問題，可以在這裡尋求幫助。</target>
        <context-group purpose="information">
          <context context-type="source">action -&gt; forum -&gt; description</context>
        </context-group>
      </trans-unit>
    </body>
  </file>
  <file id="877" original="/[koishijs.webui] main/plugins/auth/src/locales/zh-CN.yml" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="20603" resname="0.$description">
        <source>管理员设置</source>
        <target state="translated">管理員設定</target>
        <context-group purpose="information">
          <context context-type="source">0 -&gt; $description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="20605" resname="0.admin.enabled">
        <source>启用管理员账号。</source>
        <target state="translated">啟用管理員賬號。</target>
        <context-group purpose="information">
          <context context-type="source">0 -&gt; admin -&gt; enabled</context>
        </context-group>
      </trans-unit>
      <trans-unit id="20607" resname="0.admin.username">
        <source>管理员用户名。</source>
        <target state="translated">管理員用戶名。</target>
        <context-group purpose="information">
          <context context-type="source">0 -&gt; admin -&gt; username</context>
        </context-group>
      </trans-unit>
      <trans-unit id="20609" resname="0.admin.password">
        <source>管理员密码。</source>
        <target state="translated">管理員密碼。</target>
        <context-group purpose="information">
          <context context-type="source">0 -&gt; admin -&gt; password</context>
        </context-group>
      </trans-unit>
      <trans-unit id="20611" resname="1.$description">
        <source>高级设置</source>
        <target state="translated">高級設定</target>
        <context-group purpose="information">
          <context context-type="source">1 -&gt; $description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="20613" resname="1.authTokenExpire">
        <source>用户令牌有效期。</source>
        <target state="translated">用戶令牌有效期。</target>
        <context-group purpose="information">
          <context context-type="source">1 -&gt; authTokenExpire</context>
        </context-group>
      </trans-unit>
      <trans-unit id="20615" resname="1.loginTokenExpire">
        <source>登录令牌有效期。</source>
        <target state="translated">登錄令牌有效期。</target>
        <context-group purpose="information">
          <context context-type="source">1 -&gt; loginTokenExpire</context>
        </context-group>
      </trans-unit>
    </body>
  </file>
  <file id="887" original="/[koishijs.webui] main/plugins/market/src/node/locales/message.zh-CN.yml" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="20617" resname="&quot;commands.plugin&quot;.description">
        <source>插件管理</source>
        <target state="translated">外掛程式管理</target>
        <context-group purpose="information">
          <context context-type="source">commands.plugin -&gt; description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="20667" resname="&quot;commands.plugin.install&quot;.description">
        <source>安装插件</source>
        <target state="translated">安裝外掛程式</target>
        <context-group purpose="information">
          <context context-type="source">commands.plugin.install -&gt; description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="20669" resname="&quot;commands.plugin.install&quot;.messages.expect-name">
        <source>请输入插件名。</source>
        <target state="translated">请输入外掛程式名。</target>
        <context-group purpose="information">
          <context context-type="source">commands.plugin.install -&gt; messages -&gt; expect-name</context>
        </context-group>
      </trans-unit>
      <trans-unit id="20671" resname="&quot;commands.plugin.install&quot;.messages.already-installed">
        <source>该插件已安装。</source>
        <target state="translated">該外掛程式已安裝。</target>
        <context-group purpose="information">
          <context context-type="source">commands.plugin.install -&gt; messages -&gt; already-installed</context>
        </context-group>
      </trans-unit>
      <trans-unit id="20673" resname="&quot;commands.plugin.install&quot;.messages.not-found">
        <source>未找到该插件。</source>
        <target state="translated">未找到該外掛程式。</target>
        <context-group purpose="information">
          <context context-type="source">commands.plugin.install -&gt; messages -&gt; not-found</context>
        </context-group>
      </trans-unit>
      <trans-unit id="20627" resname="&quot;commands.plugin.install&quot;.messages.success">
        <source>安装成功！</source>
        <target state="translated">安裝成功！</target>
        <context-group purpose="information">
          <context context-type="source">commands.plugin.install -&gt; messages -&gt; success</context>
        </context-group>
      </trans-unit>
      <trans-unit id="20675" resname="&quot;commands.plugin.uninstall&quot;.description">
        <source>卸载插件</source>
        <target state="translated">卸載外掛程式</target>
        <context-group purpose="information">
          <context context-type="source">commands.plugin.uninstall -&gt; description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="20677" resname="&quot;commands.plugin.uninstall&quot;.messages.expect-name">
        <source>请输入插件名。</source>
        <target state="translated">请输入外掛程式名。</target>
        <context-group purpose="information">
          <context context-type="source">commands.plugin.uninstall -&gt; messages -&gt; expect-name</context>
        </context-group>
      </trans-unit>
      <trans-unit id="20679" resname="&quot;commands.plugin.uninstall&quot;.messages.not-installed">
        <source>该插件未安装。</source>
        <target state="translated">該外掛程式未安裝。</target>
        <context-group purpose="information">
          <context context-type="source">commands.plugin.uninstall -&gt; messages -&gt; not-installed</context>
        </context-group>
      </trans-unit>
      <trans-unit id="20637" resname="&quot;commands.plugin.uninstall&quot;.messages.success">
        <source>卸载成功！</source>
        <target state="translated">卸載成功！</target>
        <context-group purpose="information">
          <context context-type="source">commands.plugin.uninstall -&gt; messages -&gt; success</context>
        </context-group>
      </trans-unit>
      <trans-unit id="20681" resname="&quot;commands.plugin.upgrade&quot;.description">
        <source>升级插件</source>
        <target state="translated">升級外掛程式</target>
        <context-group purpose="information">
          <context context-type="source">commands.plugin.upgrade -&gt; description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="20683" resname="&quot;commands.plugin.upgrade&quot;.options.self">
        <source>升级 Koishi 本体</source>
        <target state="translated">升級 Koishi 本體</target>
        <context-group purpose="information">
          <context context-type="source">commands.plugin.upgrade -&gt; options -&gt; self</context>
        </context-group>
      </trans-unit>
      <trans-unit id="20685" resname="&quot;commands.plugin.upgrade&quot;.messages.all-updated">
        <source>所有插件已是最新版本。</source>
        <target state="translated">所有外掛程式已是最新版本。</target>
        <context-group purpose="information">
          <context context-type="source">commands.plugin.upgrade -&gt; messages -&gt; all-updated</context>
        </context-group>
      </trans-unit>
      <trans-unit id="20643" resname="&quot;commands.plugin.upgrade&quot;.messages.available">
        <source>有可用的依赖更新：</source>
        <target state="translated">有可用的依賴更新：</target>
        <context-group purpose="information">
          <context context-type="source">commands.plugin.upgrade -&gt; messages -&gt; available</context>
        </context-group>
      </trans-unit>
      <trans-unit id="20645" resname="&quot;commands.plugin.upgrade&quot;.messages.prompt">
        <source>输入「Y」升级全部依赖，输入「N」取消操作。</source>
        <target state="translated">輸入「Y」升級全部依賴，輸入「N」取消操作。</target>
        <context-group purpose="information">
          <context context-type="source">commands.plugin.upgrade -&gt; messages -&gt; prompt</context>
        </context-group>
      </trans-unit>
      <trans-unit id="20647" resname="&quot;commands.plugin.upgrade&quot;.messages.cancelled">
        <source>已取消操作。</source>
        <target state="translated">已取消操作。</target>
        <context-group purpose="information">
          <context context-type="source">commands.plugin.upgrade -&gt; messages -&gt; cancelled</context>
        </context-group>
      </trans-unit>
      <trans-unit id="20651" resname="&quot;commands.plugin.upgrade&quot;.messages.success">
        <source>升级成功！</source>
        <target state="translated">升級成功！</target>
        <context-group purpose="information">
          <context context-type="source">commands.plugin.upgrade -&gt; messages -&gt; success</context>
        </context-group>
      </trans-unit>
    </body>
  </file>
  <file id="889" original="/[koishijs.webui] main/plugins/market/src/node/locales/schema.zh-CN.yml" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="20653" resname="registry.$description">
        <source>插件源设置</source>
        <target state="translated">外掛程式源設定</target>
        <context-group purpose="information">
          <context context-type="source">registry -&gt; $description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="20655" resname="registry.endpoint">
        <source>插件的下载源。默认跟随当前项目的 npm config。</source>
        <target state="translated">外掛程式的下載源。默認跟隨當前項目的 npm config。</target>
        <context-group purpose="information">
          <context context-type="source">registry -&gt; endpoint</context>
        </context-group>
      </trans-unit>
      <trans-unit id="20657" resname="registry.timeout">
        <source>获取插件数据的超时时间。</source>
        <target state="translated">獲取外掛程式數據的超時時間。</target>
        <context-group purpose="information">
          <context context-type="source">registry -&gt; timeout</context>
        </context-group>
      </trans-unit>
      <trans-unit id="20659" resname="search.$description">
        <source>搜索设置</source>
        <target state="translated">搜尋設定</target>
        <context-group purpose="information">
          <context context-type="source">search -&gt; $description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="20661" resname="search.endpoint">
        <source>用于搜索插件市场的网址。默认跟随插件源设置。</source>
        <target state="translated">用於搜尋外掛程式市場的網址。默認跟隨外掛程式源設置。</target>
        <context-group purpose="information">
          <context context-type="source">search -&gt; endpoint</context>
        </context-group>
      </trans-unit>
      <trans-unit id="20663" resname="search.timeout">
        <source>搜索插件市场的超时时间。</source>
        <target state="translated">搜尋外掛程式市場的超時時間。</target>
        <context-group purpose="information">
          <context context-type="source">search -&gt; timeout</context>
        </context-group>
      </trans-unit>
      <trans-unit id="20665" resname="search.proxyAgent">
        <source>用于搜索插件市场的代理。</source>
        <target state="translated">用於搜尋外掛程式市場的代理。</target>
        <context-group purpose="information">
          <context context-type="source">search -&gt; proxyAgent</context>
        </context-group>
      </trans-unit>
    </body>
  </file>
  <file id="907" original="/[koishijs.webui] main/plugins/logger/src/locales/zh-CN.yml" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="21005" resname="root">
        <source>存放输出日志的本地目录。</source>
        <target state="translated">存放輸出日誌的本地目錄。</target>
        <context-group purpose="information">
          <context context-type="source"> -&gt; root</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21007" resname="maxAge">
        <source>日志文件保存的最大天数。</source>
        <target state="translated">日誌文件保存的最大天數。</target>
        <context-group purpose="information">
          <context context-type="source"> -&gt; maxAge</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21009" resname="maxSize">
        <source>单个日志文件的最大大小。</source>
        <target state="translated">單個日誌文件的最大大小。</target>
        <context-group purpose="information">
          <context context-type="source"> -&gt; maxSize</context>
        </context-group>
      </trans-unit>
    </body>
  </file>
  <file id="929" original="/[koishijs.common] main/packages/sudo/src/locales/zh-CN.yml" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="21029" resname="commands.sudo.description">
        <source>在特定上下文中触发指令</source>
        <target state="translated">在特定上下文中觸發指令</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; sudo -&gt; description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="27205" resname="commands.sudo.options.user">
        <source>切换用户身份</source>
        <target state="needs-translation">切换用户身份</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; sudo -&gt; options -&gt; user</context>
        </context-group>
      </trans-unit>
      <trans-unit id="27207" resname="commands.sudo.options.channel">
        <source>切换触发频道</source>
        <target state="needs-translation">切换触发频道</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; sudo -&gt; options -&gt; channel</context>
        </context-group>
      </trans-unit>
      <trans-unit id="27209" resname="commands.sudo.options.direct">
        <source>模拟私聊触发</source>
        <target state="needs-translation">模拟私聊触发</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; sudo -&gt; options -&gt; direct</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21037" resname="commands.sudo.messages.expect-command">
        <source>请输入要触发的指令。</source>
        <target state="translated">請輸入要觸發的指令。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; sudo -&gt; messages -&gt; expect-command</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21039" resname="commands.sudo.messages.expect-context">
        <source>请提供新的上下文。</source>
        <target state="translated">請提供新的上下文。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; sudo -&gt; messages -&gt; expect-context</context>
        </context-group>
      </trans-unit>
      <trans-unit id="27211" resname="commands.sudo.messages.direct-channel">
        <source>--channel 和 --direct 无法同时使用。</source>
        <target state="needs-translation">--channel 和 --direct 无法同时使用。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; sudo -&gt; messages -&gt; direct-channel</context>
        </context-group>
      </trans-unit>
    </body>
  </file>
  <file id="931" original="/[koishijs.common] main/docs/zh-CN/index.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="21043">
        <source>介绍</source>
        <target state="translated">介紹</target>
        <context-group purpose="information">
          <context context-type="source">Headline 1&#13;
XPath: /h1</context>
        </context-group>
      </trans-unit>
      <trans-unit id="24563">
        <source>这里包含了一系列常用 Koishi 插件的集合。</source>
        <target state="needs-translation">这里包含了一系列常用 Koishi 插件的集合。</target>
        <context-group purpose="information">
          <context context-type="source">Paragraph text&#13;
XPath: /p[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="24565">
        <source>这些插件的功能都十分简单，我们因此将它们放到同一个仓库管理，以便于用户查阅。</source>
        <target state="needs-translation">这些插件的功能都十分简单，我们因此将它们放到同一个仓库管理，以便于用户查阅。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="24567">
        <source>你也可以将这里理解成一个插件的示例仓库——如果你有与这些插件类似的需求，可以参考这里的代码。</source>
        <target state="needs-translation">你也可以将这里理解成一个插件的示例仓库——如果你有与这些插件类似的需求，可以参考这里的代码。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="24569">
        <source>插件</source>
        <target state="needs-translation">插件</target>
        <context-group purpose="information">
          <context context-type="source">Headline 2&#13;
XPath: /h2[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="37386" translate="no">
        <source>./plugins/alias.md</source>
        <target>./plugins/alias.md</target>
        <context-group purpose="information">
          <context context-type="source">Link Resource&#13;
XPath: /ul/li[1]/a[@href]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="37388">
        <source>别名指令 (Alias)</source>
        <target state="needs-translation">别名指令 (Alias)</target>
        <context-group purpose="information">
          <context context-type="source">Anchor Link&#13;
XPath: /ul/li[1]/a</context>
        </context-group>
      </trans-unit>
      <trans-unit id="39128" translate="no">
        <source>./plugins/at-command.md</source>
        <target>./plugins/at-command.md</target>
        <context-group purpose="information">
          <context context-type="source">Link Resource&#13;
XPath: /ul/li[2]/a[@href]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="39130">
        <source>@ 指令 (At Command)</source>
        <target state="needs-translation">@ 指令 (At Command)</target>
        <context-group purpose="information">
          <context context-type="source">Anchor Link&#13;
XPath: /ul/li[2]/a</context>
        </context-group>
      </trans-unit>
      <trans-unit id="24571" translate="no">
        <source>./plugins/feedback.md</source>
        <target>./plugins/feedback.md</target>
        <context-group purpose="information">
          <context context-type="source">Link Resource&#13;
XPath: /ul/li[3]/a[@href]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="24573">
        <source>发送反馈 (Feedback)</source>
        <target state="needs-translation">发送反馈 (Feedback)</target>
        <context-group purpose="information">
          <context context-type="source">Anchor Link&#13;
XPath: /ul/li[3]/a</context>
        </context-group>
      </trans-unit>
      <trans-unit id="24575" translate="no">
        <source>./plugins/forward.md</source>
        <target>./plugins/forward.md</target>
        <context-group purpose="information">
          <context context-type="source">Link Resource&#13;
XPath: /ul/li[4]/a[@href]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="24577">
        <source>消息转发 (Forward)</source>
        <target state="needs-translation">消息转发 (Forward)</target>
        <context-group purpose="information">
          <context context-type="source">Anchor Link&#13;
XPath: /ul/li[4]/a</context>
        </context-group>
      </trans-unit>
      <trans-unit id="24579" translate="no">
        <source>./plugins/rate-limit.md</source>
        <target>./plugins/rate-limit.md</target>
        <context-group purpose="information">
          <context context-type="source">Link Resource&#13;
XPath: /ul/li[5]/a[@href]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="24581">
        <source>速率限制 (Rate Limit)</source>
        <target state="needs-translation">速率限制 (Rate Limit)</target>
        <context-group purpose="information">
          <context context-type="source">Anchor Link&#13;
XPath: /ul/li[5]/a</context>
        </context-group>
      </trans-unit>
      <trans-unit id="24583" translate="no">
        <source>./plugins/recall.md</source>
        <target>./plugins/recall.md</target>
        <context-group purpose="information">
          <context context-type="source">Link Resource&#13;
XPath: /ul/li[6]/a[@href]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="24585">
        <source>撤回消息 (Recall)</source>
        <target state="needs-translation">撤回消息 (Recall)</target>
        <context-group purpose="information">
          <context context-type="source">Anchor Link&#13;
XPath: /ul/li[6]/a</context>
        </context-group>
      </trans-unit>
      <trans-unit id="24587" translate="no">
        <source>./plugins/repeater.md</source>
        <target>./plugins/repeater.md</target>
        <context-group purpose="information">
          <context context-type="source">Link Resource&#13;
XPath: /ul/li[7]/a[@href]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="24589">
        <source>复读机 (Repeater)</source>
        <target state="needs-translation">复读机 (Repeater)</target>
        <context-group purpose="information">
          <context context-type="source">Anchor Link&#13;
XPath: /ul/li[7]/a</context>
        </context-group>
      </trans-unit>
      <trans-unit id="24591" translate="no">
        <source>./plugins/respondent.md</source>
        <target>./plugins/respondent.md</target>
        <context-group purpose="information">
          <context context-type="source">Link Resource&#13;
XPath: /ul/li[8]/a[@href]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="24593">
        <source>自定义回复 (Respondent)</source>
        <target state="needs-translation">自定义回复 (Respondent)</target>
        <context-group purpose="information">
          <context context-type="source">Anchor Link&#13;
XPath: /ul/li[8]/a</context>
        </context-group>
      </trans-unit>
      <trans-unit id="24595" translate="no">
        <source>./plugins/schedule.md</source>
        <target>./plugins/schedule.md</target>
        <context-group purpose="information">
          <context context-type="source">Link Resource&#13;
XPath: /ul/li[9]/a[@href]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="24597">
        <source>计划任务 (Schedule)</source>
        <target state="needs-translation">计划任务 (Schedule)</target>
        <context-group purpose="information">
          <context context-type="source">Anchor Link&#13;
XPath: /ul/li[9]/a</context>
        </context-group>
      </trans-unit>
      <trans-unit id="24599" translate="no">
        <source>./plugins/shutdown.md</source>
        <target>./plugins/shutdown.md</target>
        <context-group purpose="information">
          <context context-type="source">Link Resource&#13;
XPath: /ul/li[10]/a[@href]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="24601">
        <source>关闭与重启 (Shutdown)</source>
        <target state="needs-translation">关闭与重启 (Shutdown)</target>
        <context-group purpose="information">
          <context context-type="source">Anchor Link&#13;
XPath: /ul/li[10]/a</context>
        </context-group>
      </trans-unit>
      <trans-unit id="24603" translate="no">
        <source>./plugins/spawn.md</source>
        <target>./plugins/spawn.md</target>
        <context-group purpose="information">
          <context context-type="source">Link Resource&#13;
XPath: /ul/li[11]/a[@href]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="24605">
        <source>执行命令 (Spawn)</source>
        <target state="needs-translation">执行命令 (Spawn)</target>
        <context-group purpose="information">
          <context context-type="source">Anchor Link&#13;
XPath: /ul/li[11]/a</context>
        </context-group>
      </trans-unit>
      <trans-unit id="24607" translate="no">
        <source>./plugins/sudo.md</source>
        <target>./plugins/sudo.md</target>
        <context-group purpose="information">
          <context context-type="source">Link Resource&#13;
XPath: /ul/li[12]/a[@href]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="24609">
        <source>模拟调用 (Sudo)</source>
        <target state="needs-translation">模拟调用 (Sudo)</target>
        <context-group purpose="information">
          <context context-type="source">Anchor Link&#13;
XPath: /ul/li[12]/a</context>
        </context-group>
      </trans-unit>
      <trans-unit id="24611" translate="no">
        <source>./plugins/verifier.md</source>
        <target>./plugins/verifier.md</target>
        <context-group purpose="information">
          <context context-type="source">Link Resource&#13;
XPath: /ul/li[13]/a[@href]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="24613">
        <source>处理申请 (Verifier)</source>
        <target state="needs-translation">处理申请 (Verifier)</target>
        <context-group purpose="information">
          <context context-type="source">Anchor Link&#13;
XPath: /ul/li[13]/a</context>
        </context-group>
      </trans-unit>
      <trans-unit id="24615">
        <source>历史</source>
        <target state="needs-translation">历史</target>
        <context-group purpose="information">
          <context context-type="source">Headline 2&#13;
XPath: /h2[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="24617">
        <source>这里的插件大都来自于 &lt;a href=&quot;https://github.com/koishijs/koishi&quot;&gt;Koishi 官方仓库&lt;/a&gt;，有些甚至是早期版本 Koishi 的内置功能。</source>
        <target state="needs-translation">这里的插件大都来自于 &lt;a href=&quot;https://github.com/koishijs/koishi&quot;&gt;Koishi 官方仓库&lt;/a&gt;，有些甚至是早期版本 Koishi 的内置功能。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[3]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="24619">
        <source>自 v4 版本起，Koishi 逐步将许多内置功能移至独立的插件中，以便于用户自由选择需要的功能。</source>
        <target state="needs-translation">自 v4 版本起，Koishi 逐步将许多内置功能移至独立的插件中，以便于用户自由选择需要的功能。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[3]</context>
        </context-group>
      </trans-unit>
    </body>
  </file>
  <file id="933" original="/[koishijs.common] main/docs/zh-CN/plugins/sudo.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="21045" translate="no">
        <source>koishi-plugin-sudo</source>
        <target>koishi-plugin-sudo</target>
        <context-group purpose="information">
          <context context-type="source">Headline 1&#13;
XPath: /h1</context>
        </context-group>
      </trans-unit>
      <trans-unit id="23445">
        <source>::: tip&lt;br x-id=&quot;2&quot; /&gt;
要使用本插件，你需要安装数据库支持。</source>
        <target state="needs-translation">::: tip&lt;br x-id=&quot;2&quot; /&gt;
要使用本插件，你需要安装数据库支持。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21079" translate="no">
        <source>:::</source>
        <target>:::</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21047">
        <source>koishi-plugin-sudo 提供了名为 sudo 的指令，允许管理员模拟其他用户调用指令。</source>
        <target state="needs-translation">koishi-plugin-sudo 提供了名为 sudo 的指令，允许管理员模拟其他用户调用指令。</target>
        <context-group purpose="information">
          <context context-type="source">Paragraph text&#13;
XPath: /p[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21049">
        <source>指令：sudo</source>
        <target state="needs-translation">指令：sudo</target>
        <context-group purpose="information">
          <context context-type="source">Headline 2&#13;
XPath: /h2</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21051">
        <source>基本语法：&lt;code&gt;sudo &amp;lt;command&amp;gt;&lt;/code&gt;</source>
        <target state="needs-translation">基本语法：&lt;code&gt;sudo &amp;lt;command&amp;gt;&lt;/code&gt;</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul/li[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21053">
        <source>最低权限：3</source>
        <target state="needs-translation">最低权限：3</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul/li[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21055">
        <source>选项：</source>
        <target state="needs-translation">选项：</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /ul/li[3]/text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21057">
        <source>&lt;code&gt;-u, --user [@user]&lt;/code&gt; 目标用户（私聊）</source>
        <target state="needs-translation">&lt;code&gt;-u, --user [@user]&lt;/code&gt; 目标用户（私聊）</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul/li[3]/ul/li[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21059">
        <source>&lt;code&gt;-m, --member [@user]&lt;/code&gt; 目标用户（群聊）</source>
        <target state="needs-translation">&lt;code&gt;-m, --member [@user]&lt;/code&gt; 目标用户（群聊）</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul/li[3]/ul/li[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21061">
        <source>&lt;code&gt;-c, --channel [#channel]&lt;/code&gt; 目标频道</source>
        <target state="needs-translation">&lt;code&gt;-c, --channel [#channel]&lt;/code&gt; 目标频道</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul/li[3]/ul/li[3]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21063">
        <source>sudo 指令允许你模拟其他用户调用指令。</source>
        <target state="needs-translation">sudo 指令允许你模拟其他用户调用指令。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[3]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21065">
        <source>例如当你在私聊上下文时：</source>
        <target state="needs-translation">例如当你在私聊上下文时：</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[3]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21067">
        <source>teach foo bar                       # 无效，因为 teach 指令只对群上下文生效
sudo -g #456 teach foo bar          # 有效，相当于在群 456 调用 teach foo bar</source>
        <target state="needs-translation">teach foo bar                       # 无效，因为 teach 指令只对群上下文生效
sudo -g #456 teach foo bar          # 有效，相当于在群 456 调用 teach foo bar</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /pre[1]/code</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21069">
        <source>除此以外，你还可以模拟在其他频道中调用（假设你现在在频道 123 中调用指令）：</source>
        <target state="needs-translation">除此以外，你还可以模拟在其他频道中调用（假设你现在在频道 123 中调用指令）：</target>
        <context-group purpose="information">
          <context context-type="source">Paragraph text&#13;
XPath: /p[4]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21071">
        <source>sudo -g #456 command                # 模拟你在群 456 的上下文
sudo -u @789 command                # 模拟用户 789 的私聊上下文
sudo -m @789 command                # 模拟用户 789 在当前频道的上下文
sudo -u @789 -g #456 command        # 模拟用户 789 在频道 456 的上下文</source>
        <target state="needs-translation">sudo -g #456 command                # 模拟你在群 456 的上下文
sudo -u @789 command                # 模拟用户 789 的私聊上下文
sudo -m @789 command                # 模拟用户 789 在当前频道的上下文
sudo -u @789 -g #456 command        # 模拟用户 789 在频道 456 的上下文</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /pre[2]/code</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21073">
        <source>尽管切换了调用上下文，但 sudo 指令的输出仍然产生在原上下文中。</source>
        <target state="needs-translation">尽管切换了调用上下文，但 sudo 指令的输出仍然产生在原上下文中。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[5]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21075">
        <source>这在你想调用群指令的时候是很有用的。</source>
        <target state="needs-translation">这在你想调用群指令的时候是很有用的。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[5]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63972">
        <source>::: tip&lt;br x-id=&quot;2&quot; /&gt;
为了安全性考虑，sudo 命令设计的最低使用权限为 3 级，同时切换的用户等级不能高于或等于调用者自身。</source>
        <target state="needs-translation">::: tip&lt;br x-id=&quot;2&quot; /&gt;
为了安全性考虑，sudo 命令设计的最低使用权限为 3 级，同时切换的用户等级不能高于或等于调用者自身。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[6]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="23447" translate="no">
        <source>:::</source>
        <target>:::</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[6]</context>
        </context-group>
      </trans-unit>
    </body>
  </file>
  <file id="935" original="/[koishijs.common] main/docs/.vitepress/config/zh-CN.json" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="21081" resname="description">
        <source>常用 Koishi 插件合集</source>
        <target state="needs-translation">常用 Koishi 插件合集</target>
        <context-group purpose="information">
          <context context-type="source"> -&gt; description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="38778" resname="head.0.0">
        <source>link</source>
        <target state="needs-translation">link</target>
        <context-group purpose="information">
          <context context-type="source">head -&gt; 0 -&gt; 0</context>
        </context-group>
      </trans-unit>
      <trans-unit id="38780" resname="head.0.1.rel">
        <source>icon</source>
        <target state="needs-translation">icon</target>
        <context-group purpose="information">
          <context context-type="source">head -&gt; 0 -&gt; 1 -&gt; rel</context>
        </context-group>
      </trans-unit>
      <trans-unit id="38782" resname="head.0.1.href" translate="no">
        <source>https://koishi.chat/logo.png</source>
        <target>https://koishi.chat/logo.png</target>
        <context-group purpose="information">
          <context context-type="source">head -&gt; 0 -&gt; 1 -&gt; href</context>
        </context-group>
      </trans-unit>
      <trans-unit id="38784" resname="head.1.0">
        <source>link</source>
        <target state="needs-translation">link</target>
        <context-group purpose="information">
          <context context-type="source">head -&gt; 1 -&gt; 0</context>
        </context-group>
      </trans-unit>
      <trans-unit id="38786" resname="head.1.1.rel">
        <source>manifest</source>
        <target state="needs-translation">manifest</target>
        <context-group purpose="information">
          <context context-type="source">head -&gt; 1 -&gt; 1 -&gt; rel</context>
        </context-group>
      </trans-unit>
      <trans-unit id="38788" resname="head.1.1.href" approved="yes">
        <source>/manifest/zh-CN.json</source>
        <target state="final">/manifest/zh-TW.json</target>
        <context-group purpose="information">
          <context context-type="source">head -&gt; 1 -&gt; 1 -&gt; href</context>
        </context-group>
      </trans-unit>
      <trans-unit id="38790" resname="head.2.0">
        <source>meta</source>
        <target state="needs-translation">meta</target>
        <context-group purpose="information">
          <context context-type="source">head -&gt; 2 -&gt; 0</context>
        </context-group>
      </trans-unit>
      <trans-unit id="38792" resname="head.2.1.name">
        <source>theme-color</source>
        <target state="needs-translation">theme-color</target>
        <context-group purpose="information">
          <context context-type="source">head -&gt; 2 -&gt; 1 -&gt; name</context>
        </context-group>
      </trans-unit>
      <trans-unit id="38794" resname="head.2.1.content">
        <source>#5546a3</source>
        <target state="needs-translation">#5546a3</target>
        <context-group purpose="information">
          <context context-type="source">head -&gt; 2 -&gt; 1 -&gt; content</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21083" resname="themeConfig.sidebar.0.text">
        <source>指南</source>
        <target state="needs-translation">指南</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; 0 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21085" resname="themeConfig.sidebar.0.items.0.text">
        <source>总览</source>
        <target state="translated">總覽</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; 0 -&gt; items -&gt; 0 -&gt; text</context>
          <context context-type="x-crowdin-screenshot">https://crowdin.com/s/wrap/b3d383g3i4a3v6i3k5f605p485r4v443l405p4e4q4s4c5r4h6i6j6u2l615d6?t=21085</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21149" resname="themeConfig.sidebar.0.items.0.link">
        <source>/index.md</source>
        <target state="needs-translation">/index.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; 0 -&gt; items -&gt; 0 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21089" resname="themeConfig.sidebar.1.text">
        <source>插件</source>
        <target state="needs-translation">插件</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; 1 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="37338" resname="themeConfig.sidebar.1.items.0.text">
        <source>别名指令 (Alias)</source>
        <target state="needs-translation">别名指令 (Alias)</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; 1 -&gt; items -&gt; 0 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="37340" resname="themeConfig.sidebar.1.items.0.link">
        <source>/plugins/alias.md</source>
        <target state="needs-translation">/plugins/alias.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; 1 -&gt; items -&gt; 0 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="39080" resname="themeConfig.sidebar.1.items.1.text">
        <source>@ 指令 (At Command)</source>
        <target state="needs-translation">@ 指令 (At Command)</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; 1 -&gt; items -&gt; 1 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="39082" resname="themeConfig.sidebar.1.items.1.link">
        <source>/plugins/at-command.md</source>
        <target state="needs-translation">/plugins/at-command.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; 1 -&gt; items -&gt; 1 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="39084" resname="themeConfig.sidebar.1.items.2.text">
        <source>发送反馈 (Feedback)</source>
        <target state="needs-translation">发送反馈 (Feedback)</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; 1 -&gt; items -&gt; 2 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="39086" resname="themeConfig.sidebar.1.items.2.link">
        <source>/plugins/feedback.md</source>
        <target state="needs-translation">/plugins/feedback.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; 1 -&gt; items -&gt; 2 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="39088" resname="themeConfig.sidebar.1.items.3.text">
        <source>消息转发 (Forward)</source>
        <target state="needs-translation">消息转发 (Forward)</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; 1 -&gt; items -&gt; 3 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="39090" resname="themeConfig.sidebar.1.items.3.link">
        <source>/plugins/forward.md</source>
        <target state="needs-translation">/plugins/forward.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; 1 -&gt; items -&gt; 3 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="39092" resname="themeConfig.sidebar.1.items.4.text">
        <source>速率限制 (Rate Limit)</source>
        <target state="needs-translation">速率限制 (Rate Limit)</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; 1 -&gt; items -&gt; 4 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="39094" resname="themeConfig.sidebar.1.items.4.link">
        <source>/plugins/rate-limit.md</source>
        <target state="needs-translation">/plugins/rate-limit.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; 1 -&gt; items -&gt; 4 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="39096" resname="themeConfig.sidebar.1.items.5.text">
        <source>撤回消息 (Recall)</source>
        <target state="needs-translation">撤回消息 (Recall)</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; 1 -&gt; items -&gt; 5 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="39098" resname="themeConfig.sidebar.1.items.5.link">
        <source>/plugins/recall.md</source>
        <target state="needs-translation">/plugins/recall.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; 1 -&gt; items -&gt; 5 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="39100" resname="themeConfig.sidebar.1.items.6.text">
        <source>复读机 (Repeater)</source>
        <target state="needs-translation">复读机 (Repeater)</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; 1 -&gt; items -&gt; 6 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="39102" resname="themeConfig.sidebar.1.items.6.link">
        <source>/plugins/repeater.md</source>
        <target state="needs-translation">/plugins/repeater.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; 1 -&gt; items -&gt; 6 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="39104" resname="themeConfig.sidebar.1.items.7.text">
        <source>自定义回复 (Respondent)</source>
        <target state="needs-translation">自定义回复 (Respondent)</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; 1 -&gt; items -&gt; 7 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="39106" resname="themeConfig.sidebar.1.items.7.link">
        <source>/plugins/respondent.md</source>
        <target state="needs-translation">/plugins/respondent.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; 1 -&gt; items -&gt; 7 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="39108" resname="themeConfig.sidebar.1.items.8.text">
        <source>计划任务 (Schedule)</source>
        <target state="needs-translation">计划任务 (Schedule)</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; 1 -&gt; items -&gt; 8 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="39110" resname="themeConfig.sidebar.1.items.8.link">
        <source>/plugins/schedule.md</source>
        <target state="needs-translation">/plugins/schedule.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; 1 -&gt; items -&gt; 8 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="39112" resname="themeConfig.sidebar.1.items.9.text">
        <source>关闭与重启 (Shutdown)</source>
        <target state="needs-translation">关闭与重启 (Shutdown)</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; 1 -&gt; items -&gt; 9 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="39114" resname="themeConfig.sidebar.1.items.9.link">
        <source>/plugins/shutdown.md</source>
        <target state="needs-translation">/plugins/shutdown.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; 1 -&gt; items -&gt; 9 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="39116" resname="themeConfig.sidebar.1.items.10.text">
        <source>执行命令 (Spawn)</source>
        <target state="needs-translation">执行命令 (Spawn)</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; 1 -&gt; items -&gt; 10 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="39118" resname="themeConfig.sidebar.1.items.10.link">
        <source>/plugins/spawn.md</source>
        <target state="needs-translation">/plugins/spawn.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; 1 -&gt; items -&gt; 10 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="39120" resname="themeConfig.sidebar.1.items.11.text">
        <source>模拟调用 (Sudo)</source>
        <target state="needs-translation">模拟调用 (Sudo)</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; 1 -&gt; items -&gt; 11 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="39122" resname="themeConfig.sidebar.1.items.11.link">
        <source>/plugins/sudo.md</source>
        <target state="needs-translation">/plugins/sudo.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; 1 -&gt; items -&gt; 11 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="39124" resname="themeConfig.sidebar.1.items.12.text">
        <source>处理申请 (Verifier)</source>
        <target state="needs-translation">处理申请 (Verifier)</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; 1 -&gt; items -&gt; 12 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="39126" resname="themeConfig.sidebar.1.items.12.link">
        <source>/plugins/verifier.md</source>
        <target state="needs-translation">/plugins/verifier.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; 1 -&gt; items -&gt; 12 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21095" resname="themeConfig.sidebar.2.text">
        <source>更多</source>
        <target state="translated">更多</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; 2 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21097" resname="themeConfig.sidebar.2.items.0.text">
        <source>Koishi 官网</source>
        <target state="needs-translation">Koishi 官网</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; 2 -&gt; items -&gt; 0 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21099" resname="themeConfig.sidebar.2.items.0.link">
        <source>https://koishi.chat</source>
        <target state="needs-translation">https://koishi.chat</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; 2 -&gt; items -&gt; 0 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21101" resname="themeConfig.sidebar.2.items.1.text">
        <source>支持作者</source>
        <target state="needs-translation">支持作者</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; 2 -&gt; items -&gt; 1 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21103" resname="themeConfig.sidebar.2.items.1.link">
        <source>https://afdian.net/a/shigma</source>
        <target state="needs-translation">https://afdian.net/a/shigma</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; 2 -&gt; items -&gt; 1 -&gt; link</context>
        </context-group>
      </trans-unit>
    </body>
  </file>
  <file id="943" original="/[koishijs.common] main/docs/zh-CN/plugins/feedback.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="21105" translate="no">
        <source>koishi-plugin-feedback</source>
        <target>koishi-plugin-feedback</target>
        <context-group purpose="information">
          <context context-type="source">Headline 1&#13;
XPath: /h1</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21107">
        <source>指令：feedback</source>
        <target state="needs-translation">指令：feedback</target>
        <context-group purpose="information">
          <context context-type="source">Headline 2&#13;
XPath: /h2[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="37168">
        <source>基本语法：&lt;code&gt;feedback &amp;lt;message&amp;gt;&lt;/code&gt;</source>
        <target state="needs-translation">基本语法：&lt;code&gt;feedback &amp;lt;message&amp;gt;&lt;/code&gt;</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[1]/li[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="37170">
        <source>选项：</source>
        <target state="needs-translation">选项：</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /ul[1]/li[2]/text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="37172">
        <source>&lt;code&gt;-r, --receive&lt;/code&gt; 添加到反馈频道列表 (需要 3 级权限)</source>
        <target state="needs-translation">&lt;code&gt;-r, --receive&lt;/code&gt; 添加到反馈频道列表 (需要 3 级权限)</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[1]/li[2]/ul/li[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="37174">
        <source>&lt;code&gt;-R&lt;/code&gt; 从反馈频道列表移除 (需要 3 级权限)</source>
        <target state="needs-translation">&lt;code&gt;-R&lt;/code&gt; 从反馈频道列表移除 (需要 3 级权限)</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[1]/li[2]/ul/li[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="37176">
        <source>feedback 指令用于向开发者反馈信息。</source>
        <target state="needs-translation">feedback 指令用于向开发者反馈信息。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="37178">
        <source>当有人调用 feedback 指令时，传入的 message 就会自动被发送给所有监听反馈的频道。</source>
        <target state="needs-translation">当有人调用 feedback 指令时，传入的 message 就会自动被发送给所有监听反馈的频道。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="37180">
        <source>你可以直接回复收到的反馈信息，机器人会把这些消息重新发回到调用 feedback 指令的上下文。</source>
        <target state="needs-translation">你可以直接回复收到的反馈信息，机器人会把这些消息重新发回到调用 feedback 指令的上下文。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="37182">
        <source>这里的用法类似于 &lt;a href=&quot;./forward.md&quot;&gt;消息转发&lt;/a&gt;。</source>
        <target state="needs-translation">这里的用法类似于 &lt;a href=&quot;./forward.md&quot;&gt;消息转发&lt;/a&gt;。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21121">
        <source>收到来自 Alice 的反馈信息：</source>
        <target state="needs-translation">收到来自 Alice 的反馈信息：</target>
        <context-group purpose="information">
          <context context-type="source">Paragraph text&#13;
XPath: /chat-panel/chat-message[1]/p[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21123">
        <source>我也不知道该写什么总之这是一句话</source>
        <target state="needs-translation">我也不知道该写什么总之这是一句话</target>
        <context-group purpose="information">
          <context context-type="source">Paragraph text&#13;
XPath: /chat-panel/chat-message[1]/p[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="37184">
        <source>收到来自 Alice 的反馈信息：</source>
        <target state="needs-translation">收到来自 Alice 的反馈信息：</target>
        <context-group purpose="information">
          <context context-type="source">Paragraph text&#13;
XPath: /chat-panel/chat-message[2]/blockquote/p[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="37186">
        <source>我也不知道该写什么总之这是一句话</source>
        <target state="needs-translation">我也不知道该写什么总之这是一句话</target>
        <context-group purpose="information">
          <context context-type="source">Paragraph text&#13;
XPath: /chat-panel/chat-message[2]/blockquote/p[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21129">
        <source>那么这是一句回复</source>
        <target state="needs-translation">那么这是一句回复</target>
        <context-group purpose="information">
          <context context-type="source">Paragraph text&#13;
XPath: /chat-panel/chat-message[2]/p</context>
        </context-group>
      </trans-unit>
      <trans-unit id="37188">
        <source>要管理接收反馈的频道，你可以使用 &lt;code&gt;-r&lt;/code&gt; 和 &lt;code&gt;-R&lt;/code&gt; 选项。</source>
        <target state="needs-translation">要管理接收反馈的频道，你可以使用 &lt;code&gt;-r&lt;/code&gt; 和 &lt;code&gt;-R&lt;/code&gt; 选项。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="37190">
        <source>在任何频道中使用 &lt;code&gt;-r&lt;/code&gt; 选项，都会将该频道添加到反馈频道列表中；使用 &lt;code&gt;-R&lt;/code&gt; 选项，会将该频道从反馈频道列表中移除。</source>
        <target state="needs-translation">在任何频道中使用 &lt;code&gt;-r&lt;/code&gt; 选项，都会将该频道添加到反馈频道列表中；使用 &lt;code&gt;-R&lt;/code&gt; 选项，会将该频道从反馈频道列表中移除。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21131">
        <source>配置项</source>
        <target state="needs-translation">配置项</target>
        <context-group purpose="information">
          <context context-type="source">Headline 2&#13;
XPath: /h2[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="37192">
        <source>replyTimeout</source>
        <target state="needs-translation">replyTimeout</target>
        <context-group purpose="information">
          <context context-type="source">Headline 3&#13;
XPath: /h3</context>
        </context-group>
      </trans-unit>
      <trans-unit id="37194">
        <source>类型：&lt;code&gt;number&lt;/code&gt;</source>
        <target state="needs-translation">类型：&lt;code&gt;number&lt;/code&gt;</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[2]/li[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="37196">
        <source>默认值：&lt;code&gt;Time.day&lt;/code&gt;</source>
        <target state="needs-translation">默认值：&lt;code&gt;Time.day&lt;/code&gt;</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[2]/li[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="37198">
        <source>反馈回复时限 (单位毫秒)。</source>
        <target state="needs-translation">反馈回复时限 (单位毫秒)。</target>
        <context-group purpose="information">
          <context context-type="source">Paragraph text&#13;
XPath: /p[3]</context>
        </context-group>
      </trans-unit>
    </body>
  </file>
  <file id="945" original="/[koishijs.common] main/packages/feedback/src/locales/zh-CN.yml" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="21141" resname="commands.feedback.description">
        <source>发送反馈信息给作者</source>
        <target state="needs-translation">发送反馈信息给作者</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; feedback -&gt; description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="37200" resname="commands.feedback.options.&quot;receive.true&quot;">
        <source>添加到反馈频道列表</source>
        <target state="needs-translation">添加到反馈频道列表</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; feedback -&gt; options -&gt; receive.true</context>
        </context-group>
      </trans-unit>
      <trans-unit id="37202" resname="commands.feedback.options.&quot;receive.false&quot;">
        <source>从反馈频道列表移除</source>
        <target state="needs-translation">从反馈频道列表移除</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; feedback -&gt; options -&gt; receive.false</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21143" resname="commands.feedback.messages.expect-text">
        <source>请输入要发送的文本。</source>
        <target state="translated">請輸入要發送的文本。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; feedback -&gt; messages -&gt; expect-text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21145" resname="commands.feedback.messages.receive">
        <source>收到来自 {0} 的反馈信息：
{1}</source>
        <target state="needs-translation">收到来自 {0} 的反馈信息：
{1}</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; feedback -&gt; messages -&gt; receive</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21147" resname="commands.feedback.messages.success">
        <source>反馈信息发送成功！</source>
        <target state="needs-translation">反馈信息发送成功！</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; feedback -&gt; messages -&gt; success</context>
        </context-group>
      </trans-unit>
      <trans-unit id="37204" resname="commands.feedback.messages.updated">
        <source>反馈频道更新成功！</source>
        <target state="needs-translation">反馈频道更新成功！</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; feedback -&gt; messages -&gt; updated</context>
        </context-group>
      </trans-unit>
      <trans-unit id="37206" resname="commands.feedback.messages.not-modified">
        <source>反馈频道没有改动。</source>
        <target state="needs-translation">反馈频道没有改动。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; feedback -&gt; messages -&gt; not-modified</context>
        </context-group>
      </trans-unit>
    </body>
  </file>
  <file id="953" original="/[koishijs.common] main/docs/zh-CN/plugins/forward.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="21165" translate="no">
        <source>koishi-plugin-forward</source>
        <target>koishi-plugin-forward</target>
        <context-group purpose="information">
          <context context-type="source">Headline 1&#13;
XPath: /h1</context>
        </context-group>
      </trans-unit>
      <trans-unit id="23443">
        <source>koishi-plugin-forward 支持在不同的频道之间转发消息。</source>
        <target state="needs-translation">koishi-plugin-forward 支持在不同的频道之间转发消息。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21169">
        <source>它有两种使用方法：</source>
        <target state="needs-translation">它有两种使用方法：</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21171">
        <source>无数据库模式</source>
        <target state="needs-translation">无数据库模式</target>
        <context-group purpose="information">
          <context context-type="source">Headline 2&#13;
XPath: /h2[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21173">
        <source>当没有加载数据库服务时，你需要手动提供转发规则数组。</source>
        <target state="needs-translation">当没有加载数据库服务时，你需要手动提供转发规则数组。</target>
        <context-group purpose="information">
          <context context-type="source">Paragraph text&#13;
XPath: /p[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="38796">
        <source>plugins:
  forward:
    # 请使用 {platform}:{channelId} 的格式
    - source: qq:123456789
      target: discord:987654321
      selfId: '33557799'</source>
        <target state="needs-translation">plugins:
  forward:
    # 请使用 {platform}:{channelId} 的格式
    - source: qq:123456789
      target: discord:987654321
      selfId: '33557799'</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /pre/code</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21177">
        <source>当用户 Alice 在频道 &lt;code&gt;source&lt;/code&gt; 中发送消息 foo 的时候，&lt;code&gt;selfId&lt;/code&gt; 对应的机器人就会在频道 &lt;code&gt;target&lt;/code&gt; 中发送如下的内容。</source>
        <target state="needs-translation">当用户 Alice 在频道 &lt;code&gt;source&lt;/code&gt; 中发送消息 foo 的时候，&lt;code&gt;selfId&lt;/code&gt; 对应的机器人就会在频道 &lt;code&gt;target&lt;/code&gt; 中发送如下的内容。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[3]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21179">
        <source>接着，频道 &lt;code&gt;target&lt;/code&gt; 中的用户 Bob 也可以通过引用回复这条消息的方式将自己想说的话发回到频道 &lt;code&gt;source&lt;/code&gt; 中去。</source>
        <target state="needs-translation">接着，频道 &lt;code&gt;target&lt;/code&gt; 中的用户 Bob 也可以通过引用回复这条消息的方式将自己想说的话发回到频道 &lt;code&gt;source&lt;/code&gt; 中去。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[3]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21181">
        <source>Alice: foo</source>
        <target state="needs-translation">Alice: foo</target>
        <context-group purpose="information">
          <context context-type="source">Paragraph text&#13;
XPath: /chat-panel/chat-message[1]/p</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21183">
        <source>Alice: foo</source>
        <target state="needs-translation">Alice: foo</target>
        <context-group purpose="information">
          <context context-type="source">Paragraph text&#13;
XPath: /chat-panel/chat-message[2]/blockquote/p</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21185">
        <source>bar</source>
        <target state="needs-translation">bar</target>
        <context-group purpose="information">
          <context context-type="source">Paragraph text&#13;
XPath: /chat-panel/chat-message[2]/p</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21187">
        <source>有数据库模式</source>
        <target state="needs-translation">有数据库模式</target>
        <context-group purpose="information">
          <context context-type="source">Headline 2&#13;
XPath: /h2[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21189">
        <source>如果已经加载了数据库服务，那么上述规则列表将失效。</source>
        <target state="needs-translation">如果已经加载了数据库服务，那么上述规则列表将失效。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[4]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21191">
        <source>此时插件会提供指令来管理转发规则。</source>
        <target state="needs-translation">此时插件会提供指令来管理转发规则。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[4]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21193">
        <source>指令语法</source>
        <target state="needs-translation">指令语法</target>
        <context-group purpose="information">
          <context context-type="source">Table Header&#13;
XPath: /table/thead/tr/th[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21195">
        <source>简写形式</source>
        <target state="needs-translation">简写形式</target>
        <context-group purpose="information">
          <context context-type="source">Table Header&#13;
XPath: /table/thead/tr/th[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21197">
        <source>功能描述</source>
        <target state="needs-translation">功能描述</target>
        <context-group purpose="information">
          <context context-type="source">Table Header&#13;
XPath: /table/thead/tr/th[3]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21199">
        <source>forward add &amp;lt;channel&amp;gt;</source>
        <target state="needs-translation">forward add &amp;lt;channel&amp;gt;</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /table/tbody/tr[1]/td[1]/code</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21201">
        <source>fwd add</source>
        <target state="needs-translation">fwd add</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /table/tbody/tr[1]/td[2]/code</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21203">
        <source>添加目标频道</source>
        <target state="translated">添加目標頻道</target>
        <context-group purpose="information">
          <context context-type="source">Table Data&#13;
XPath: /table/tbody/tr[1]/td[3]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21205">
        <source>forward remove &amp;lt;channel&amp;gt;</source>
        <target state="needs-translation">forward remove &amp;lt;channel&amp;gt;</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /table/tbody/tr[2]/td[1]/code</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21207">
        <source>fwd rm</source>
        <target state="needs-translation">fwd rm</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /table/tbody/tr[2]/td[2]/code</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21209">
        <source>移除目标频道</source>
        <target state="translated">移除目標頻道</target>
        <context-group purpose="information">
          <context context-type="source">Table Data&#13;
XPath: /table/tbody/tr[2]/td[3]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21211">
        <source>forward clear</source>
        <target state="needs-translation">forward clear</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /table/tbody/tr[3]/td[1]/code</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21213">
        <source>fwd clear</source>
        <target state="needs-translation">fwd clear</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /table/tbody/tr[3]/td[2]/code</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21215">
        <source>移除全部目标频道</source>
        <target state="translated">移除全部目標頻道</target>
        <context-group purpose="information">
          <context context-type="source">Table Data&#13;
XPath: /table/tbody/tr[3]/td[3]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21217">
        <source>forward list</source>
        <target state="needs-translation">forward list</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /table/tbody/tr[4]/td[1]/code</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21219">
        <source>fwd ls</source>
        <target state="needs-translation">fwd ls</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /table/tbody/tr[4]/td[2]/code</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21221">
        <source>查看目标频道列表</source>
        <target state="translated">查看目標頻道列表</target>
        <context-group purpose="information">
          <context context-type="source">Table Data&#13;
XPath: /table/tbody/tr[4]/td[3]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21223">
        <source>::: warning&lt;br x-id=&quot;2&quot; /&gt;
上述 &lt;code&gt;&amp;lt;channel&amp;gt;&lt;/code&gt; 的语法是 &lt;code&gt;#{platform}:{channelId}&lt;/code&gt;，前置的 &lt;code&gt;#&lt;/code&gt; 字符不可忽略，请注意与配置项的不同。</source>
        <target state="needs-translation">::: warning&lt;br x-id=&quot;2&quot; /&gt;
上述 &lt;code&gt;&amp;lt;channel&amp;gt;&lt;/code&gt; 的语法是 &lt;code&gt;#{platform}:{channelId}&lt;/code&gt;，前置的 &lt;code&gt;#&lt;/code&gt; 字符不可忽略，请注意与配置项的不同。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[5]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21225" translate="no">
        <source>:::</source>
        <target>:::</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[5]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21227">
        <source>配置项</source>
        <target state="needs-translation">配置项</target>
        <context-group purpose="information">
          <context context-type="source">Headline 2&#13;
XPath: /h2[3]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21229">
        <source>storage</source>
        <target state="needs-translation">storage</target>
        <context-group purpose="information">
          <context context-type="source">Headline 3&#13;
XPath: /h3[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21231">
        <source>类型：&lt;code&gt;'database' | 'config'&lt;/code&gt;</source>
        <target state="needs-translation">类型：&lt;code&gt;'database' | 'config'&lt;/code&gt;</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[1]/li[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21233">
        <source>默认值：&lt;code&gt;'config'&lt;/code&gt;</source>
        <target state="needs-translation">默认值：&lt;code&gt;'config'&lt;/code&gt;</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[1]/li[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21235">
        <source>转发规则的存储方式。</source>
        <target state="needs-translation">转发规则的存储方式。</target>
        <context-group purpose="information">
          <context context-type="source">Paragraph text&#13;
XPath: /p[6]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21237">
        <source>rules</source>
        <target state="needs-translation">rules</target>
        <context-group purpose="information">
          <context context-type="source">Headline 3&#13;
XPath: /h3[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21239">
        <source>类型：&lt;code&gt;Rule[]&lt;/code&gt;</source>
        <target state="needs-translation">类型：&lt;code&gt;Rule[]&lt;/code&gt;</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[2]/li</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21241">
        <source>转发规则列表。</source>
        <target state="needs-translation">转发规则列表。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[7]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21243">
        <source>详见 &lt;a href=&quot;#转发规则&quot;&gt;转发规则&lt;/a&gt;。</source>
        <target state="needs-translation">详见 &lt;a href=&quot;#转发规则&quot;&gt;转发规则&lt;/a&gt;。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[7]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21245">
        <source>replyTimeout</source>
        <target state="needs-translation">replyTimeout</target>
        <context-group purpose="information">
          <context context-type="source">Headline 3&#13;
XPath: /h3[3]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21247">
        <source>类型：&lt;code&gt;number&lt;/code&gt;</source>
        <target state="needs-translation">类型：&lt;code&gt;number&lt;/code&gt;</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[3]/li[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21249">
        <source>默认值：&lt;code&gt;3600000&lt;/code&gt;</source>
        <target state="needs-translation">默认值：&lt;code&gt;3600000&lt;/code&gt;</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[3]/li[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21251">
        <source>转发消息不再响应回复的时间 (毫秒)。</source>
        <target state="needs-translation">转发消息不再响应回复的时间 (毫秒)。</target>
        <context-group purpose="information">
          <context context-type="source">Paragraph text&#13;
XPath: /p[8]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21253">
        <source>转发规则</source>
        <target state="needs-translation">转发规则</target>
        <context-group purpose="information">
          <context context-type="source">Headline 2&#13;
XPath: /h2[4]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21255">
        <source>rule.source</source>
        <target state="needs-translation">rule.source</target>
        <context-group purpose="information">
          <context context-type="source">Headline 3&#13;
XPath: /h3[4]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21257">
        <source>类型：&lt;code&gt;string&lt;/code&gt;</source>
        <target state="needs-translation">类型：&lt;code&gt;string&lt;/code&gt;</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[4]/li[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21259">
        <source>必须参数</source>
        <target state="needs-translation">必须参数</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[4]/li[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21261">
        <source>来源频道。</source>
        <target state="needs-translation">来源频道。</target>
        <context-group purpose="information">
          <context context-type="source">Paragraph text&#13;
XPath: /p[9]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21263">
        <source>rule.target</source>
        <target state="needs-translation">rule.target</target>
        <context-group purpose="information">
          <context context-type="source">Headline 3&#13;
XPath: /h3[5]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21265">
        <source>类型：&lt;code&gt;string&lt;/code&gt;</source>
        <target state="needs-translation">类型：&lt;code&gt;string&lt;/code&gt;</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[5]/li[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21267">
        <source>必须参数</source>
        <target state="needs-translation">必须参数</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[5]/li[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21269">
        <source>目标频道。</source>
        <target state="needs-translation">目标频道。</target>
        <context-group purpose="information">
          <context context-type="source">Paragraph text&#13;
XPath: /p[10]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21271">
        <source>rule.selfId</source>
        <target state="needs-translation">rule.selfId</target>
        <context-group purpose="information">
          <context context-type="source">Headline 3&#13;
XPath: /h3[6]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21273">
        <source>类型：&lt;code&gt;string&lt;/code&gt;</source>
        <target state="needs-translation">类型：&lt;code&gt;string&lt;/code&gt;</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[6]/li[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21275">
        <source>必须参数</source>
        <target state="needs-translation">必须参数</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[6]/li[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21277">
        <source>负责推送的机器人账号。</source>
        <target state="needs-translation">负责推送的机器人账号。</target>
        <context-group purpose="information">
          <context context-type="source">Paragraph text&#13;
XPath: /p[11]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21279">
        <source>rule.guildId</source>
        <target state="needs-translation">rule.guildId</target>
        <context-group purpose="information">
          <context context-type="source">Headline 3&#13;
XPath: /h3[7]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21281">
        <source>类型：&lt;code&gt;string&lt;/code&gt;</source>
        <target state="needs-translation">类型：&lt;code&gt;string&lt;/code&gt;</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[7]/li[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21283">
        <source>必须参数</source>
        <target state="needs-translation">必须参数</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[7]/li[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21285">
        <source>目标频道的群组编号。</source>
        <target state="needs-translation">目标频道的群组编号。</target>
        <context-group purpose="information">
          <context context-type="source">Paragraph text&#13;
XPath: /p[12]</context>
        </context-group>
      </trans-unit>
    </body>
  </file>
  <file id="955" original="/[koishijs.common] main/packages/forward/src/locales/zh-CN.yml" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="21287" resname="commands.forward.description">
        <source>设置消息转发</source>
        <target state="translated">設置消息轉發</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; forward -&gt; description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21289" resname="commands.forward.usage">
        <source>当前频道 ID：{cid}</source>
        <target state="translated">當前頻道 ID：{cid}</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; forward -&gt; usage</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21291" resname="commands.&quot;forward.add&quot;.description">
        <source>添加目标频道</source>
        <target state="translated">添加目標頻道</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; forward.add -&gt; description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21293" resname="commands.&quot;forward.add&quot;.messages.unchanged">
        <source>{0} 已经是当前频道的目标频道。</source>
        <target state="translated">{0} 已經是當前頻道的目標頻道。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; forward.add -&gt; messages -&gt; unchanged</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21295" resname="commands.&quot;forward.add&quot;.messages.updated">
        <source>已成功添加目标频道 {0}。</source>
        <target state="translated">已成功添加目標頻道 {0}。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; forward.add -&gt; messages -&gt; updated</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21297" resname="commands.&quot;forward.remove&quot;.description">
        <source>移除目标频道</source>
        <target state="translated">移除目標頻道</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; forward.remove -&gt; description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21299" resname="commands.&quot;forward.remove&quot;.messages.unchanged">
        <source>{0} 不是当前频道的目标频道。</source>
        <target state="translated">{0} 不是當前頻道的目標頻道。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; forward.remove -&gt; messages -&gt; unchanged</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21301" resname="commands.&quot;forward.remove&quot;.messages.updated">
        <source>已成功移除目标频道 {0}。</source>
        <target state="translated">已成功移除目標頻道 {0}。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; forward.remove -&gt; messages -&gt; updated</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21303" resname="commands.&quot;forward.clear&quot;.description">
        <source>移除全部目标频道</source>
        <target state="translated">移除全部目標頻道</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; forward.clear -&gt; description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21305" resname="commands.&quot;forward.clear&quot;.messages.updated">
        <source>已成功移除全部目标频道。</source>
        <target state="translated">已成功移除全部目標頻道。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; forward.clear -&gt; messages -&gt; updated</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21307" resname="commands.&quot;forward.list&quot;.description">
        <source>查看目标频道列表</source>
        <target state="translated">查看目標頻道列表</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; forward.list -&gt; description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21309" resname="commands.&quot;forward.list&quot;.messages.empty">
        <source>当前频道没有设置目标频道。</source>
        <target state="translated">當前頻道沒有設置目標頻道。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; forward.list -&gt; messages -&gt; empty</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21311" resname="commands.&quot;forward.list&quot;.messages.header">
        <source>当前频道的目标频道列表为：</source>
        <target state="translated">當前頻道的目標頻道列表為：</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; forward.list -&gt; messages -&gt; header</context>
        </context-group>
      </trans-unit>
    </body>
  </file>
  <file id="957" original="/[koishijs.common] main/docs/zh-CN/plugins/repeater.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="21321" translate="no">
        <source>koishi-plugin-repeater</source>
        <target>koishi-plugin-repeater</target>
        <context-group purpose="information">
          <context context-type="source">Headline 1&#13;
XPath: /h1</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21323">
        <source>复读功能一直是很多机器人的传统艺能，但是 Koishi 敢说自己能做得更多。</source>
        <target state="needs-translation">复读功能一直是很多机器人的传统艺能，但是 Koishi 敢说自己能做得更多。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21325">
        <source>利用内置的复读插件，你的机器人不仅可以实现概率复读，还可以概率打断，甚至可以检测他人重复复读或打断复读的行为并做出回应。</source>
        <target state="needs-translation">利用内置的复读插件，你的机器人不仅可以实现概率复读，还可以概率打断，甚至可以检测他人重复复读或打断复读的行为并做出回应。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21327">
        <source>让我们开始吧！</source>
        <target state="needs-translation">让我们开始吧！</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21329">
        <source>控制复读时机和概率</source>
        <target state="needs-translation">控制复读时机和概率</target>
        <context-group purpose="information">
          <context context-type="source">Headline 2&#13;
XPath: /h2[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21331">
        <source>通过提供 &lt;code&gt;onRepeat&lt;/code&gt; 参数，我们可以定义机器人在检测到复读时进行怎样的行为，是跟着复读，还是进行打断，甚至是出警。</source>
        <target state="needs-translation">通过提供 &lt;code&gt;onRepeat&lt;/code&gt; 参数，我们可以定义机器人在检测到复读时进行怎样的行为，是跟着复读，还是进行打断，甚至是出警。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21333">
        <source>首先让我们看一个最简单的例子：</source>
        <target state="needs-translation">首先让我们看一个最简单的例子：</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21335">
        <source>plugins:
  repeater:
    onRepeat:
      minTimes: 3
      probability: 0.5</source>
        <target state="needs-translation">plugins:
  repeater:
    onRepeat:
      minTimes: 3
      probability: 0.5</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /pre[1]/code</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21337">
        <source>foo</source>
        <target state="needs-translation">foo</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /chat-panel[1]/chat-message[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21339">
        <source>foo</source>
        <target state="needs-translation">foo</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /chat-panel[1]/chat-message[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21341">
        <source>foo</source>
        <target state="needs-translation">foo</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /chat-panel[1]/chat-message[3]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21343">
        <source>foo</source>
        <target state="needs-translation">foo</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /chat-panel[1]/chat-message[4]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21345">
        <source>foo</source>
        <target state="needs-translation">foo</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /chat-panel[1]/chat-message[5]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21347">
        <source>在这种配置下，当复读语句达到 3 句后，每一次其他人的复读都有 50% 的概率触发机器人的复读行为。</source>
        <target state="needs-translation">在这种配置下，当复读语句达到 3 句后，每一次其他人的复读都有 50% 的概率触发机器人的复读行为。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[3]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21349">
        <source>而一旦复读后，机器人将不再重复复读。</source>
        <target state="needs-translation">而一旦复读后，机器人将不再重复复读。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[3]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21351">
        <source>&lt;code&gt;onRepeat&lt;/code&gt; 除了可以接受一个对象作为参数以外，也支持接受一个函数来自定义当机器人检测到复读时执行的具体行为。</source>
        <target state="needs-translation">&lt;code&gt;onRepeat&lt;/code&gt; 除了可以接受一个对象作为参数以外，也支持接受一个函数来自定义当机器人检测到复读时执行的具体行为。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[4]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21353">
        <source>下面我们来举几个例子。</source>
        <target state="needs-translation">下面我们来举几个例子。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[4]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21355">
        <source>自动打断复读</source>
        <target state="needs-translation">自动打断复读</target>
        <context-group purpose="information">
          <context context-type="source">Headline 2&#13;
XPath: /h2[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21357">
        <source>&lt;code&gt;onRepeat&lt;/code&gt; 函数可以接受两个参数。</source>
        <target state="needs-translation">&lt;code&gt;onRepeat&lt;/code&gt; 函数可以接受两个参数。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[5]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21359">
        <source>第一个参数为当前复读行为的状态 state，其中包含目前复读次数 times, 复读语句内容 content，参与复读的用户与他们的复读次数 users，机器人是否已经复读 repeated；第二个参数是当前的会话 session。</source>
        <target state="needs-translation">第一个参数为当前复读行为的状态 state，其中包含目前复读次数 times, 复读语句内容 content，参与复读的用户与他们的复读次数 users，机器人是否已经复读 repeated；第二个参数是当前的会话 session。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[5]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21361">
        <source>当我们也不希望机器人复读所有的内容，我们可以通过如下配置让机器人自动打断某些复读：</source>
        <target state="needs-translation">当我们也不希望机器人复读所有的内容，我们可以通过如下配置让机器人自动打断某些复读：</target>
        <context-group purpose="information">
          <context context-type="source">Paragraph text&#13;
XPath: /p[6]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21363">
        <source>export default {
  plugins: {
    repeater: {
      onRepeat: (state) =&amp;gt;
        state.times &amp;gt;= 2 &amp;amp;&amp;amp;
        state.content === &quot;这机器人又开始复读了&quot; &amp;amp;&amp;amp;
        &quot;打断复读！&quot;,
    }
  }
}</source>
        <target state="needs-translation">export default {
  plugins: {
    repeater: {
      onRepeat: (state) =&amp;gt;
        state.times &amp;gt;= 2 &amp;amp;&amp;amp;
        state.content === &quot;这机器人又开始复读了&quot; &amp;amp;&amp;amp;
        &quot;打断复读！&quot;,
    }
  }
}</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /pre[2]/code</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21365">
        <source>这机器人又开始复读了</source>
        <target state="needs-translation">这机器人又开始复读了</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /chat-panel[2]/chat-message[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21367">
        <source>这机器人又开始复读了</source>
        <target state="needs-translation">这机器人又开始复读了</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /chat-panel[2]/chat-message[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21369">
        <source>打断复读！</source>
        <target state="needs-translation">打断复读！</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /chat-panel[2]/chat-message[3]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21371">
        <source>检测重复复读</source>
        <target state="needs-translation">检测重复复读</target>
        <context-group purpose="information">
          <context context-type="source">Headline 2&#13;
XPath: /h2[3]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21373">
        <source>来看一个更复杂的例子。</source>
        <target state="needs-translation">来看一个更复杂的例子。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[7]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21375">
        <source>我们还可以让 Koishi 对所有将同一句话复读 2 次的用户作出警告。</source>
        <target state="needs-translation">我们还可以让 Koishi 对所有将同一句话复读 2 次的用户作出警告。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[7]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21377">
        <source>你可以这样配置：</source>
        <target state="needs-translation">你可以这样配置：</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[7]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21379">
        <source>export default {
  plugins: {
    repeater: {
      onRepeat: (state, session) =&amp;gt;
        state.users[session.userId] &amp;gt; 1 &amp;amp;&amp;amp;
        segment.at(session.userId) + &quot;不许重复复读！&quot;
    },
  },
}</source>
        <target state="needs-translation">export default {
  plugins: {
    repeater: {
      onRepeat: (state, session) =&amp;gt;
        state.users[session.userId] &amp;gt; 1 &amp;amp;&amp;amp;
        segment.at(session.userId) + &quot;不许重复复读！&quot;
    },
  },
}</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /pre[3]/code</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21381">
        <source>foo</source>
        <target state="needs-translation">foo</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /chat-panel[3]/chat-message[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21383">
        <source>foo</source>
        <target state="needs-translation">foo</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /chat-panel[3]/chat-message[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21385">
        <source>foo</source>
        <target state="needs-translation">foo</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /chat-panel[3]/chat-message[3]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21387">
        <source>不许重复复读！</source>
        <target state="needs-translation">不许重复复读！</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /chat-panel[3]/chat-message[4]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21389">
        <source>检测打断复读</source>
        <target state="needs-translation">检测打断复读</target>
        <context-group purpose="information">
          <context context-type="source">Headline 2&#13;
XPath: /h2[4]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21391">
        <source>复读机插件支持的另一个参数 &lt;code&gt;onInterrupt&lt;/code&gt; 可以定义机器人在检测到复读被其他人打断时的行为。</source>
        <target state="needs-translation">复读机插件支持的另一个参数 &lt;code&gt;onInterrupt&lt;/code&gt; 可以定义机器人在检测到复读被其他人打断时的行为。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[8]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21393">
        <source>可以传入一个函数来定义此行为，函数签名与 &lt;code&gt;onRepeat&lt;/code&gt; 一致。</source>
        <target state="needs-translation">可以传入一个函数来定义此行为，函数签名与 &lt;code&gt;onRepeat&lt;/code&gt; 一致。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[8]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21395">
        <source>例如，如果你想让你的机器人在一条信息已经复读过 5 次以上，且自己也已经复读过后，对任何打断复读的人以 50% 的概率出警。</source>
        <target state="needs-translation">例如，如果你想让你的机器人在一条信息已经复读过 5 次以上，且自己也已经复读过后，对任何打断复读的人以 50% 的概率出警。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[9]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21397">
        <source>你可以这样配置：</source>
        <target state="needs-translation">你可以这样配置：</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[9]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21399">
        <source>export default {
  plugins: {
    repeater: {
      onRepeat:{
        minTimes: 2
      },
      onInterrupt: (state, session) =&amp;gt;
        state.repeated &amp;amp;&amp;amp;
        state.times &amp;gt;= 3 &amp;amp;&amp;amp;
        Math.random() &amp;gt; 0.5 &amp;amp;&amp;amp;
        segment.at(session.userId) + &quot;在？</source>
        <target state="needs-translation">export default {
  plugins: {
    repeater: {
      onRepeat:{
        minTimes: 2
      },
      onInterrupt: (state, session) =&amp;gt;
        state.repeated &amp;amp;&amp;amp;
        state.times &amp;gt;= 3 &amp;amp;&amp;amp;
        Math.random() &amp;gt; 0.5 &amp;amp;&amp;amp;
        segment.at(session.userId) + &quot;在？</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /pre[4]/code</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21401">
        <source>为什么打断复读？&quot;,
    },
  },
}</source>
        <target state="needs-translation">为什么打断复读？&quot;,
    },
  },
}</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /pre[4]/code</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21403">
        <source>bar</source>
        <target state="needs-translation">bar</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /chat-panel[4]/chat-message[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21405">
        <source>bar</source>
        <target state="needs-translation">bar</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /chat-panel[4]/chat-message[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21407">
        <source>bar</source>
        <target state="needs-translation">bar</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /chat-panel[4]/chat-message[3]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21409">
        <source>打断复读</source>
        <target state="needs-translation">打断复读</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /chat-panel[4]/chat-message[4]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21411">
        <source>在？</source>
        <target state="needs-translation">在？</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /chat-panel[4]/chat-message[5]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21413">
        <source>为什么打断复读？</source>
        <target state="needs-translation">为什么打断复读？</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /chat-panel[4]/chat-message[5]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21415">
        <source>配置项</source>
        <target state="needs-translation">配置项</target>
        <context-group purpose="information">
          <context context-type="source">Headline 2&#13;
XPath: /h2[5]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21417">
        <source>interface RepeatState {
  content: string
  repeated: boolean
  times: number
  users: Record&amp;lt;number, number&amp;gt;
}

type StateCallback = (state: RepeatState, session: Session) =&amp;gt; void | string

interface RepeatHandler {
  minTimes: number
  probability?: number
}

interface RepeaterOptions {
  onRepeat?: RepeatHandler | StateCallback
  onInterrupt?: StateCallback
}</source>
        <target state="needs-translation">interface RepeatState {
  content: string
  repeated: boolean
  times: number
  users: Record&amp;lt;number, number&amp;gt;
}

type StateCallback = (state: RepeatState, session: Session) =&amp;gt; void | string

interface RepeatHandler {
  minTimes: number
  probability?: number
}

interface RepeaterOptions {
  onRepeat?: RepeatHandler | StateCallback
  onInterrupt?: StateCallback
}</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /pre[5]/code</context>
        </context-group>
      </trans-unit>
    </body>
  </file>
  <file id="965" original="/[koishijs.common] main/packages/shutdown/src/locales/zh-CN.yml" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="21427" resname="commands.shutdown.description">
        <source>关闭或重启 Koishi</source>
        <target state="needs-translation">关闭或重启 Koishi</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; shutdown -&gt; description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21429" resname="commands.shutdown.usage">
        <source>此指令可用于关闭或重启 Koishi。
第一个参数是一个时间字符串 (通常是“now”)。
时间字符串用于指定执行关机的时间。可以是“hh:mm”格式的小时/分钟，也可以直接通过“+m”中表示从现在开始指定的分钟数 m。
“now”是“+0”的别名，即触发立即关闭。如果未指定时间参数，则默认“+1”。
可选地，这之后可能会在关闭之前向所有登录用户发送一条墙消息。</source>
        <target state="needs-translation">此指令可用于关闭或重启 Koishi。
第一个参数是一个时间字符串 (通常是“now”)。
时间字符串用于指定执行关机的时间。可以是“hh:mm”格式的小时/分钟，也可以直接通过“+m”中表示从现在开始指定的分钟数 m。
“now”是“+0”的别名，即触发立即关闭。如果未指定时间参数，则默认“+1”。
可选地，这之后可能会在关闭之前向所有登录用户发送一条墙消息。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; shutdown -&gt; usage</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21431" resname="commands.shutdown.options.reboot">
        <source>软重启</source>
        <target state="needs-translation">软重启</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; shutdown -&gt; options -&gt; reboot</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21433" resname="commands.shutdown.options.rebootHard">
        <source>硬重启</source>
        <target state="needs-translation">硬重启</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; shutdown -&gt; options -&gt; rebootHard</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21435" resname="commands.shutdown.options.wall">
        <source>发送提示信息</source>
        <target state="needs-translation">发送提示信息</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; shutdown -&gt; options -&gt; wall</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21437" resname="commands.shutdown.options.clear">
        <source>清除所有计划中的关闭</source>
        <target state="needs-translation">清除所有计划中的关闭</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; shutdown -&gt; options -&gt; clear</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21439" resname="commands.shutdown.options.show">
        <source>列出计划中的关闭操作</source>
        <target state="needs-translation">列出计划中的关闭操作</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; shutdown -&gt; options -&gt; show</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21441" resname="commands.shutdown.messages.no-pending">
        <source>没有计划中的关闭</source>
        <target state="needs-translation">没有计划中的关闭</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; shutdown -&gt; messages -&gt; no-pending</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21443" resname="commands.shutdown.messages.list-header">
        <source>计划中的关闭：</source>
        <target state="needs-translation">计划中的关闭：</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; shutdown -&gt; messages -&gt; list-header</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21445" resname="commands.shutdown.messages.list-item.reboot">
        <source>重启计划于：{0}</source>
        <target state="needs-translation">重启计划于：{0}</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; shutdown -&gt; messages -&gt; list-item -&gt; reboot</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21447" resname="commands.shutdown.messages.list-item.poweroff">
        <source>关闭计划于：{0}</source>
        <target state="needs-translation">关闭计划于：{0}</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; shutdown -&gt; messages -&gt; list-item -&gt; poweroff</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21449" resname="commands.shutdown.messages.invalid-time">
        <source>无法解析时间：{0}</source>
        <target state="needs-translation">无法解析时间：{0}</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; shutdown -&gt; messages -&gt; invalid-time</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21451" resname="commands.shutdown.messages.clear">
        <source>已清除所有计划中的关闭。</source>
        <target state="needs-translation">已清除所有计划中的关闭。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; shutdown -&gt; messages -&gt; clear</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21453" resname="commands.shutdown.messages.reboot">
        <source>计划于 {0} 重启，使用“shutdown -c”以取消。</source>
        <target state="needs-translation">计划于 {0} 重启，使用“shutdown -c”以取消。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; shutdown -&gt; messages -&gt; reboot</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21455" resname="commands.shutdown.messages.poweroff">
        <source>计划于 {0} 关闭，使用“shutdown -c”以取消。</source>
        <target state="needs-translation">计划于 {0} 关闭，使用“shutdown -c”以取消。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; shutdown -&gt; messages -&gt; poweroff</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21457" resname="commands.shutdown.messages.restarted">
        <source>机器人已重新启动。</source>
        <target state="needs-translation">机器人已重新启动。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; shutdown -&gt; messages -&gt; restarted</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21459" resname="commands.shutdown.wall-messages.clear">
        <source>关闭已经取消。</source>
        <target state="needs-translation">关闭已经取消。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; shutdown -&gt; wall-messages -&gt; clear</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21461" resname="commands.shutdown.wall-messages.reboot">
        <source>系统将在 {0} 重启。</source>
        <target state="needs-translation">系统将在 {0} 重启。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; shutdown -&gt; wall-messages -&gt; reboot</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21463" resname="commands.shutdown.wall-messages.poweroff">
        <source>系统将在 {0} 关闭。</source>
        <target state="needs-translation">系统将在 {0} 关闭。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; shutdown -&gt; wall-messages -&gt; poweroff</context>
        </context-group>
      </trans-unit>
    </body>
  </file>
  <file id="973" original="/[koishijs.common] main/docs/zh-CN/plugins/spawn.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="21465" translate="no">
        <source>koishi-plugin-spawn</source>
        <target>koishi-plugin-spawn</target>
        <context-group purpose="information">
          <context context-type="source">Headline 1&#13;
XPath: /h1</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21467">
        <source>使用 Koishi 运行终端命令。</source>
        <target state="needs-translation">使用 Koishi 运行终端命令。</target>
        <context-group purpose="information">
          <context context-type="source">Paragraph text&#13;
XPath: /p[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21469">
        <source>功能展示</source>
        <target state="needs-translation">功能展示</target>
        <context-group purpose="information">
          <context context-type="source">Headline 2&#13;
XPath: /h2[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21471">
        <source>exec echo hello</source>
        <target state="needs-translation">exec echo hello</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /chat-panel/chat-message[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21473">
        <source>[运行开始] echo hello</source>
        <target state="needs-translation">[运行开始] echo hello</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /chat-panel/chat-message[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21475">
        <source>[运行完毕] echo hello&lt;br/&gt;hello</source>
        <target state="needs-translation">[运行完毕] echo hello&lt;br/&gt;hello</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /chat-panel/chat-message[3]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21477">
        <source>配置项</source>
        <target state="needs-translation">配置项</target>
        <context-group purpose="information">
          <context context-type="source">Headline 2&#13;
XPath: /h2[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21479">
        <source>root</source>
        <target state="needs-translation">root</target>
        <context-group purpose="information">
          <context context-type="source">Headline 3&#13;
XPath: /h3[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21481">
        <source>类型：&lt;code&gt;string&lt;/code&gt;</source>
        <target state="needs-translation">类型：&lt;code&gt;string&lt;/code&gt;</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[1]/li[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21483">
        <source>默认值：Koishi 应用目录</source>
        <target state="needs-translation">默认值：Koishi 应用目录</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[1]/li[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21485">
        <source>工作路径。</source>
        <target state="needs-translation">工作路径。</target>
        <context-group purpose="information">
          <context context-type="source">Paragraph text&#13;
XPath: /p[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21487">
        <source>shell</source>
        <target state="needs-translation">shell</target>
        <context-group purpose="information">
          <context context-type="source">Headline 3&#13;
XPath: /h3[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21489">
        <source>类型：&lt;code&gt;string&lt;/code&gt;</source>
        <target state="needs-translation">类型：&lt;code&gt;string&lt;/code&gt;</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[2]/li</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21491">
        <source>运行命令的程序。</source>
        <target state="needs-translation">运行命令的程序。</target>
        <context-group purpose="information">
          <context context-type="source">Paragraph text&#13;
XPath: /p[3]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21493">
        <source>encoding</source>
        <target state="needs-translation">encoding</target>
        <context-group purpose="information">
          <context context-type="source">Headline 3&#13;
XPath: /h3[3]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21495">
        <source>类型：&lt;code&gt;string&lt;/code&gt;</source>
        <target state="needs-translation">类型：&lt;code&gt;string&lt;/code&gt;</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[3]/li[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21497">
        <source>默认值：&lt;code&gt;utf8&lt;/code&gt;</source>
        <target state="needs-translation">默认值：&lt;code&gt;utf8&lt;/code&gt;</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[3]/li[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21499">
        <source>输出内容编码。</source>
        <target state="needs-translation">输出内容编码。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[4]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21501">
        <source>如果您的系统文本编码不是 &lt;code&gt;utf8&lt;/code&gt;，可以修改此项以避免乱码。</source>
        <target state="needs-translation">如果您的系统文本编码不是 &lt;code&gt;utf8&lt;/code&gt;，可以修改此项以避免乱码。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[4]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21503">
        <source>timeout</source>
        <target state="needs-translation">timeout</target>
        <context-group purpose="information">
          <context context-type="source">Headline 3&#13;
XPath: /h3[4]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21505">
        <source>类型：&lt;code&gt;number&lt;/code&gt;</source>
        <target state="needs-translation">类型：&lt;code&gt;number&lt;/code&gt;</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[4]/li[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21507">
        <source>默认值：&lt;code&gt;60000&lt;/code&gt;</source>
        <target state="needs-translation">默认值：&lt;code&gt;60000&lt;/code&gt;</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[4]/li[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21509">
        <source>最长运行时间 (毫秒)。</source>
        <target state="needs-translation">最长运行时间 (毫秒)。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[5]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21511">
        <source>超时后将会强制终止进程。</source>
        <target state="needs-translation">超时后将会强制终止进程。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[5]</context>
        </context-group>
      </trans-unit>
    </body>
  </file>
  <file id="975" original="/[koishijs.common] main/packages/spawn/src/locales/zh-CN.yml" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="21513" resname="commands.exec.description">
        <source>执行命令</source>
        <target state="needs-translation">执行命令</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; exec -&gt; description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21515" resname="commands.exec.messages.expect-input">
        <source>请输入要运行的命令。</source>
        <target state="needs-translation">请输入要运行的命令。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; exec -&gt; messages -&gt; expect-input</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21517" resname="commands.exec.messages.started">
        <source>[运行开始] {command}</source>
        <target state="needs-translation">[运行开始] {command}</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; exec -&gt; messages -&gt; started</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21519" resname="commands.exec.messages.finished">
        <source>[运行完毕] {command}
{output}</source>
        <target state="needs-translation">[运行完毕] {command}
{output}</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; exec -&gt; messages -&gt; finished</context>
        </context-group>
      </trans-unit>
    </body>
  </file>
  <file id="995" original="/[koishijs.koishi] master/plugins/common/broadcast/src/locales/zh.yml" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="21591" resname="commands.broadcast.description">
        <source>全服广播</source>
        <target state="translated">全服廣播</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; broadcast -&gt; description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21593" resname="commands.broadcast.options.forced">
        <source>无视 silent 标签进行广播</source>
        <target state="translated">無視 silent 標籤進行廣播</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; broadcast -&gt; options -&gt; forced</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21595" resname="commands.broadcast.options.only">
        <source>仅向当前账号负责的群进行广播</source>
        <target state="translated">僅向當前賬號負責的群進行廣播</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; broadcast -&gt; options -&gt; only</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21597" resname="commands.broadcast.messages.expect-text">
        <source>请输入要发送的文本。</source>
        <target state="translated">請輸入要發送的文本。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; broadcast -&gt; messages -&gt; expect-text</context>
        </context-group>
      </trans-unit>
    </body>
  </file>
  <file id="997" original="/[koishijs.koishi] master/plugins/common/callme/src/locales/zh.yml" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="21599" resname="commands.callme.description">
        <source>修改自己的称呼</source>
        <target state="translated">修改自己的稱呼</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; callme -&gt; description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21601" resname="commands.callme.messages.current">
        <source>好的呢，{0}！</source>
        <target state="translated">好的呢，{0}！</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; callme -&gt; messages -&gt; current</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21603" resname="commands.callme.messages.unnamed">
        <source>你还没有给自己起一个称呼呢~</source>
        <target state="translated">你還沒有給自己起一個稱呼呢~</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; callme -&gt; messages -&gt; unnamed</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21605" resname="commands.callme.messages.unchanged">
        <source>称呼未发生变化。</source>
        <target state="translated">稱呼未發生變化。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; callme -&gt; messages -&gt; unchanged</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21607" resname="commands.callme.messages.empty">
        <source>称呼不能为空。</source>
        <target state="translated">稱呼不能為空。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; callme -&gt; messages -&gt; empty</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21609" resname="commands.callme.messages.invalid">
        <source>称呼中禁止包含纯文本以外的内容。</source>
        <target state="translated">稱呼中禁止包含純文本以外的內容。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; callme -&gt; messages -&gt; invalid</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21611" resname="commands.callme.messages.duplicate">
        <source>禁止与其他用户重名。</source>
        <target state="translated">禁止與其他使用者重名。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; callme -&gt; messages -&gt; duplicate</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21613" resname="commands.callme.messages.updated">
        <source>好的，{0}，请多指教！</source>
        <target state="translated">好的，{0}，請多指教！</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; callme -&gt; messages -&gt; updated</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21615" resname="commands.callme.messages.failed">
        <source>修改称呼失败。</source>
        <target state="translated">修改稱呼失敗。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; callme -&gt; messages -&gt; failed</context>
        </context-group>
      </trans-unit>
    </body>
  </file>
  <file id="999" original="/[koishijs.koishi] master/plugins/common/rate-limit/src/locales/zh.yml" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="21617" resname="internal.usage-exhausted">
        <source>调用次数已达上限。</source>
        <target state="translated">調用次數已達上限。</target>
        <context-group purpose="information">
          <context context-type="source">internal -&gt; usage-exhausted</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21619" resname="internal.too-frequent">
        <source>调用过于频繁，请稍后再试。</source>
        <target state="translated">調用過於頻繁，請稍後再試。</target>
        <context-group purpose="information">
          <context context-type="source">internal -&gt; too-frequent</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21621" resname="internal.option-not-usage">
        <source> (不计入调用)</source>
        <target state="translated"> (不計入調用)</target>
        <context-group purpose="information">
          <context context-type="source">internal -&gt; option-not-usage</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21623" resname="internal.command-max-usage">
        <source>已调用次数：{0}/{1}。</source>
        <target state="translated">已調用次數：{0}/{1}。</target>
        <context-group purpose="information">
          <context context-type="source">internal -&gt; command-max-usage</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21625" resname="internal.command-min-interval">
        <source>距离下次调用还需：{0}/{1} 秒。</source>
        <target state="translated">距離下次調用還需：{0}/{1} 秒。</target>
        <context-group purpose="information">
          <context context-type="source">internal -&gt; command-min-interval</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21627" resname="commands.usage.description">
        <source>调用次数信息</source>
        <target state="translated">調用次數訊息</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; usage -&gt; description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21629" resname="commands.usage.options.set">
        <source>设置调用次数</source>
        <target state="translated">設定調用次數</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; usage -&gt; options -&gt; set</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21631" resname="commands.usage.options.clear">
        <source>清空调用次数</source>
        <target state="translated">清空調用次數</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; usage -&gt; options -&gt; clear</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21633" resname="commands.usage.messages.present">
        <source>今日 {0} 功能的调用次数为：{1}</source>
        <target state="translated">今日 {0} 功能的調用次數為：{1}</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; usage -&gt; messages -&gt; present</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21635" resname="commands.usage.messages.list">
        <source>今日各功能的调用次数为：</source>
        <target state="translated">今日各功能的調用次數為：</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; usage -&gt; messages -&gt; list</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21637" resname="commands.usage.messages.none">
        <source>今日没有调用过消耗次数的功能。</source>
        <target state="translated">今日沒有調用過消耗次數的功能。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; usage -&gt; messages -&gt; none</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21639" resname="commands.timer.description">
        <source>定时器信息</source>
        <target state="translated">定時器訊息</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; timer -&gt; description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21641" resname="commands.timer.options.set">
        <source>设置定时器</source>
        <target state="translated">設定定時器</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; timer -&gt; options -&gt; set</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21643" resname="commands.timer.options.clear">
        <source>清空定时器</source>
        <target state="translated">清空定時器</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; timer -&gt; options -&gt; clear</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21645" resname="commands.timer.messages.present">
        <source>定时器 {0} 的生效时间为：剩余 &lt;i18n:time value={1}/&gt;</source>
        <target state="translated">定時器 {0} 的生效時間為：剩餘 &lt;i18n:time value={1}/&gt;</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; timer -&gt; messages -&gt; present</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21647" resname="commands.timer.messages.absent">
        <source>定时器 {0} 当前并未生效。</source>
        <target state="translated">定時器 {0} 當前並未生效。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; timer -&gt; messages -&gt; absent</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21649" resname="commands.timer.messages.list">
        <source>各定时器的生效时间为：</source>
        <target state="translated">各定時器的生效時間為：</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; timer -&gt; messages -&gt; list</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21651" resname="commands.timer.messages.item">
        <source>{0}：剩余 &lt;i18n:time value={1}/&gt;</source>
        <target state="translated">{0}：剩餘 &lt;i18n:time value={1}/&gt;</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; timer -&gt; messages -&gt; item</context>
        </context-group>
      </trans-unit>
      <trans-unit id="21653" resname="commands.timer.messages.none">
        <source>当前没有生效的定时器。</source>
        <target state="translated">當前沒有生效的定時器。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; timer -&gt; messages -&gt; none</context>
        </context-group>
      </trans-unit>
    </body>
  </file>
  <file id="1009" original="/[koishijs.webui] main/plugins/sandbox/src/locales/zh.yml" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="21681" resname="commands.clear.description">
        <source>清空聊天记录</source>
        <target state="translated">清空聊天記錄</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; clear -&gt; description</context>
        </context-group>
      </trans-unit>
    </body>
  </file>
  <file id="1017" original="/[koishijs.webui] main/plugins/explorer/src/locales/zh-CN.yml" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="22155" resname="root">
        <source>资源管理器的根目录，默认为当前工作路径。</source>
        <target state="translated">資源管理器的根目錄，默認為當前工作路徑。</target>
        <context-group purpose="information">
          <context context-type="source"> -&gt; root</context>
        </context-group>
      </trans-unit>
      <trans-unit id="22157" resname="ignored">
        <source>要忽略的文件或目录。支持 [Glob Patterns](https://github.com/micromatch/micromatch) 语法。</source>
        <target state="translated">要忽略的文件或目錄。支援 [Glob Patterns](https://github.com/micromatch/micromatch) 語法。</target>
        <context-group purpose="information">
          <context context-type="source"> -&gt; ignored</context>
        </context-group>
      </trans-unit>
    </body>
  </file>
  <file id="1035" original="/[koishijs.webui] main/plugins/admin/src/locales/zh-CN.yml" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="23081" resname="commands.user.description">
        <source>用户管理</source>
        <target state="translated">使用者管理</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; user -&gt; description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="23083" resname="commands.channel.description">
        <source>频道管理</source>
        <target state="translated">頻道管理</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; channel -&gt; description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="23085" resname="commands.authorize.description">
        <source>权限管理</source>
        <target state="translated">權限管理</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; authorize -&gt; description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="23087" resname="commands.assign.description">
        <source>受理者账号</source>
        <target state="translated">受理者賬號</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; assign -&gt; description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="23089" resname="commands.&quot;user.locale&quot;.description">
        <source>语言偏好</source>
        <target state="translated">語言偏好</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; user.locale -&gt; description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="23091" resname="commands.&quot;channel.locale&quot;.description">
        <source>语言偏好</source>
        <target state="translated">語言偏好</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; channel.locale -&gt; description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="23093" resname="admin.user-option">
        <source>指定目标用户</source>
        <target state="translated">指定目標使用者</target>
        <context-group purpose="information">
          <context context-type="source">admin -&gt; user-option</context>
        </context-group>
      </trans-unit>
      <trans-unit id="23095" resname="admin.user-not-found">
        <source>未找到指定的用户。</source>
        <target state="translated">未找到指定的使用者。</target>
        <context-group purpose="information">
          <context context-type="source">admin -&gt; user-not-found</context>
        </context-group>
      </trans-unit>
      <trans-unit id="23097" resname="admin.user-unchanged">
        <source>用户数据未改动。</source>
        <target state="translated">使用者數據未改動。</target>
        <context-group purpose="information">
          <context context-type="source">admin -&gt; user-unchanged</context>
        </context-group>
      </trans-unit>
      <trans-unit id="23099" resname="admin.user-updated">
        <source>用户数据已修改。</source>
        <target state="translated">使用者資料已修改。</target>
        <context-group purpose="information">
          <context context-type="source">admin -&gt; user-updated</context>
        </context-group>
      </trans-unit>
      <trans-unit id="23101" resname="admin.channel-option">
        <source>指定目标频道</source>
        <target state="translated">指定目標頻道</target>
        <context-group purpose="information">
          <context context-type="source">admin -&gt; channel-option</context>
        </context-group>
      </trans-unit>
      <trans-unit id="23103" resname="admin.channel-not-found">
        <source>未找到指定的频道。</source>
        <target state="translated">未找到指定的頻道。</target>
        <context-group purpose="information">
          <context context-type="source">admin -&gt; channel-not-found</context>
        </context-group>
      </trans-unit>
      <trans-unit id="23105" resname="admin.channel-unchanged">
        <source>频道数据未改动。</source>
        <target state="translated">頻道數據未改動。</target>
        <context-group purpose="information">
          <context context-type="source">admin -&gt; channel-unchanged</context>
        </context-group>
      </trans-unit>
      <trans-unit id="23107" resname="admin.channel-updated">
        <source>频道数据已修改。</source>
        <target state="translated">頻道數據已修改。</target>
        <context-group purpose="information">
          <context context-type="source">admin -&gt; channel-updated</context>
        </context-group>
      </trans-unit>
      <trans-unit id="23109" resname="admin.not-in-group">
        <source>当前不在群组上下文中，请使用 -c 参数指定目标频道。</source>
        <target state="translated">當前不在群組上下文中，請使用 -c 參數指定目標頻道。</target>
        <context-group purpose="information">
          <context context-type="source">admin -&gt; not-in-group</context>
        </context-group>
      </trans-unit>
      <trans-unit id="23111" resname="admin.user-expected">
        <source>请指定目标用户。</source>
        <target state="translated">请指定目标使用者。</target>
        <context-group purpose="information">
          <context context-type="source">admin -&gt; user-expected</context>
        </context-group>
      </trans-unit>
      <trans-unit id="23113" resname="admin.channel-expected">
        <source>请指定目标频道。</source>
        <target state="translated">請指定目標頻道。</target>
        <context-group purpose="information">
          <context context-type="source">admin -&gt; channel-expected</context>
        </context-group>
      </trans-unit>
      <trans-unit id="23115" resname="admin.invalid-assignee-platform">
        <source>受理人应与目标频道属于同一平台。</source>
        <target state="translated">受理人應與目標頻道屬於同一平台。</target>
        <context-group purpose="information">
          <context context-type="source">admin -&gt; invalid-assignee-platform</context>
        </context-group>
      </trans-unit>
      <trans-unit id="23117" resname="admin.current-locale">
        <source>当前语言偏好为：{0}。</source>
        <target state="translated">當前語言偏好為：{0}。</target>
        <context-group purpose="information">
          <context context-type="source">admin -&gt; current-locale</context>
        </context-group>
      </trans-unit>
      <trans-unit id="23119" resname="admin.no-locale">
        <source>未设置语言偏好。</source>
        <target state="translated">未設定語言偏好。</target>
        <context-group purpose="information">
          <context context-type="source">admin -&gt; no-locale</context>
        </context-group>
      </trans-unit>
      <trans-unit id="23121" resname="admin.options.remove">
        <source>重置设置</source>
        <target state="translated">重置設定</target>
        <context-group purpose="information">
          <context context-type="source">admin -&gt; options -&gt; remove</context>
        </context-group>
      </trans-unit>
    </body>
  </file>
  <file id="1043" original="/[koishijs.common] main/packages/rate-limit/src/locales/zh-CN.yml" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="23333" resname="internal.usage-exhausted">
        <source>调用次数已达上限。</source>
        <target state="translated">調用次數已達上限。</target>
        <context-group purpose="information">
          <context context-type="source">internal -&gt; usage-exhausted</context>
        </context-group>
      </trans-unit>
      <trans-unit id="23335" resname="internal.too-frequent">
        <source>调用过于频繁，请稍后再试。</source>
        <target state="translated">調用過於頻繁，請稍後再試。</target>
        <context-group purpose="information">
          <context context-type="source">internal -&gt; too-frequent</context>
        </context-group>
      </trans-unit>
      <trans-unit id="23337" resname="internal.option-not-usage">
        <source> (不计入调用)</source>
        <target state="translated"> (不計入調用)</target>
        <context-group purpose="information">
          <context context-type="source">internal -&gt; option-not-usage</context>
        </context-group>
      </trans-unit>
      <trans-unit id="23339" resname="internal.command-max-usage">
        <source>已调用次数：{0}/{1}。</source>
        <target state="translated">已調用次數：{0}/{1}。</target>
        <context-group purpose="information">
          <context context-type="source">internal -&gt; command-max-usage</context>
        </context-group>
      </trans-unit>
      <trans-unit id="23341" resname="internal.command-min-interval">
        <source>距离下次调用还需：{0}/{1} 秒。</source>
        <target state="translated">距離下次調用還需：{0}/{1} 秒。</target>
        <context-group purpose="information">
          <context context-type="source">internal -&gt; command-min-interval</context>
        </context-group>
      </trans-unit>
      <trans-unit id="23343" resname="commands.usage.description">
        <source>调用次数信息</source>
        <target state="translated">調用次數訊息</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; usage -&gt; description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="23345" resname="commands.usage.options.set">
        <source>设置调用次数</source>
        <target state="translated">設定調用次數</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; usage -&gt; options -&gt; set</context>
        </context-group>
      </trans-unit>
      <trans-unit id="23347" resname="commands.usage.options.clear">
        <source>清空调用次数</source>
        <target state="translated">清空調用次數</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; usage -&gt; options -&gt; clear</context>
        </context-group>
      </trans-unit>
      <trans-unit id="23349" resname="commands.usage.messages.present">
        <source>今日 {0} 功能的调用次数为：{1}</source>
        <target state="translated">今日 {0} 功能的調用次數為：{1}</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; usage -&gt; messages -&gt; present</context>
        </context-group>
      </trans-unit>
      <trans-unit id="23351" resname="commands.usage.messages.list">
        <source>今日各功能的调用次数为：</source>
        <target state="translated">今日各功能的調用次數為：</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; usage -&gt; messages -&gt; list</context>
        </context-group>
      </trans-unit>
      <trans-unit id="23353" resname="commands.usage.messages.none">
        <source>今日没有调用过消耗次数的功能。</source>
        <target state="translated">今日沒有調用過消耗次數的功能。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; usage -&gt; messages -&gt; none</context>
        </context-group>
      </trans-unit>
      <trans-unit id="27213" resname="commands.usage.messages.updated">
        <source>设置成功。</source>
        <target state="needs-translation">设置成功。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; usage -&gt; messages -&gt; updated</context>
        </context-group>
      </trans-unit>
      <trans-unit id="23355" resname="commands.timer.description">
        <source>定时器信息</source>
        <target state="translated">定時器訊息</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; timer -&gt; description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="23357" resname="commands.timer.options.set">
        <source>设置定时器</source>
        <target state="translated">設定定時器</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; timer -&gt; options -&gt; set</context>
        </context-group>
      </trans-unit>
      <trans-unit id="23359" resname="commands.timer.options.clear">
        <source>清空定时器</source>
        <target state="translated">清空定時器</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; timer -&gt; options -&gt; clear</context>
        </context-group>
      </trans-unit>
      <trans-unit id="23361" resname="commands.timer.messages.present">
        <source>定时器 {0} 的生效时间为：剩余 &lt;i18n:time value={1}/&gt;</source>
        <target state="translated">定時器 {0} 的生效時間為：剩餘 &lt;i18n:time value={1}/&gt;</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; timer -&gt; messages -&gt; present</context>
        </context-group>
      </trans-unit>
      <trans-unit id="23363" resname="commands.timer.messages.absent">
        <source>定时器 {0} 当前并未生效。</source>
        <target state="translated">定時器 {0} 當前並未生效。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; timer -&gt; messages -&gt; absent</context>
        </context-group>
      </trans-unit>
      <trans-unit id="23365" resname="commands.timer.messages.list">
        <source>各定时器的生效时间为：</source>
        <target state="translated">各定時器的生效時間為：</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; timer -&gt; messages -&gt; list</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65046" resname="commands.timer.messages.item">
        <source>&lt;p&gt;{0}：剩余 &lt;i18n:time value={1}/&gt;&lt;/p&gt;</source>
        <target state="needs-translation">&lt;p&gt;{0}：剩余 &lt;i18n:time value={1}/&gt;&lt;/p&gt;</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; timer -&gt; messages -&gt; item</context>
        </context-group>
      </trans-unit>
      <trans-unit id="23369" resname="commands.timer.messages.none">
        <source>当前没有生效的定时器。</source>
        <target state="translated">當前沒有生效的定時器。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; timer -&gt; messages -&gt; none</context>
        </context-group>
      </trans-unit>
      <trans-unit id="27215" resname="commands.timer.messages.updated">
        <source>设置成功。</source>
        <target state="needs-translation">设置成功。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; timer -&gt; messages -&gt; updated</context>
        </context-group>
      </trans-unit>
    </body>
  </file>
  <file id="1045" original="/[koishijs.common] main/docs/zh-CN/plugins/rate-limit.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="23371" translate="no">
        <source>koishi-plugin-rate-limit</source>
        <target>koishi-plugin-rate-limit</target>
        <context-group purpose="information">
          <context context-type="source">Headline 1&#13;
XPath: /h1</context>
        </context-group>
      </trans-unit>
      <trans-unit id="23373">
        <source>::: tip&lt;br x-id=&quot;2&quot; /&gt;
要使用本插件，你需要安装数据库支持，并配合 &lt;a href=&quot;https://koishi.chat/manual/usage/command.html#指令管理&quot;&gt;@koishijs/plugin-commands&lt;/a&gt; 使用。</source>
        <target state="needs-translation">::: tip&lt;br x-id=&quot;2&quot; /&gt;
要使用本插件，你需要安装数据库支持，并配合 &lt;a href=&quot;https://koishi.chat/manual/usage/command.html#指令管理&quot;&gt;@koishijs/plugin-commands&lt;/a&gt; 使用。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="23375" translate="no">
        <source>:::</source>
        <target>:::</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="23377">
        <source>koishi-plugin-rate-limit 可用于限制指令调用频率。</source>
        <target state="needs-translation">koishi-plugin-rate-limit 可用于限制指令调用频率。</target>
        <context-group purpose="information">
          <context context-type="source">Paragraph text&#13;
XPath: /p[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="23379">
        <source>基本用法</source>
        <target state="needs-translation">基本用法</target>
        <context-group purpose="information">
          <context context-type="source">Headline 2&#13;
XPath: /h2[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="23381">
        <source>安装此插件后，控制台的「指令管理」页面将会增加一些配置项。</source>
        <target state="needs-translation">安装此插件后，控制台的「指令管理」页面将会增加一些配置项。</target>
        <context-group purpose="information">
          <context context-type="source">Paragraph text&#13;
XPath: /p[3]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="23383">
        <source>有些指令 (例如签到抽卡，限制次数的 API 调用等) 我们并不希望被无限调用，这时我们可以通过 &lt;code&gt;maxUsage&lt;/code&gt; 设置每天访问额度的上限。</source>
        <target state="translated">有些指令 (例如簽到抽卡，限制次數的 API 呼叫等) 我們並不希望被無限呼叫，這時我們可以透過 &lt;code&gt;maxUsage&lt;/code&gt; 設定每天訪問額度的上限。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[4]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="23385">
        <source>当超出总次数后，机器人将回复「调用次数已达上限」。</source>
        <target state="translated">當超出總次數後，機器人將回復「呼叫次數已達上限」。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[4]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="23387">
        <source>另一些指令 (例如高强度刷屏，需要等待一定时间才有结果的功能) 我们并不希望被短时间内重复调用，这时我们可以通过 &lt;code&gt;minInterval&lt;/code&gt; 设置最短触发间隔。</source>
        <target state="translated">另一些指令 (例如高強度刷屏，需要等待一定時間才有結果的功能) 我們並不希望被短時間內重複呼叫，這時我們可以透過 &lt;code&gt;minInterval&lt;/code&gt; 設定最短觸發間隔。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[5]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="23389">
        <source>如果一个处于冷却中的指令再次被调用，机器人将会提示「调用过于频繁，请稍后再试」。</source>
        <target state="translated">如果一個處於冷卻中的指令再次被呼叫，機器人將會提示「呼叫過於頻繁，請稍後再試」。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[5]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="23391">
        <source>如果你希望某些选项不计入总次数，可以使用选项配置中的 &lt;code&gt;notUsage&lt;/code&gt;。</source>
        <target state="translated">如果你希望某些選項不計入總次數，可以使用選項配置中的 &lt;code&gt;notUsage&lt;/code&gt;。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[6]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="23393">
        <source>启用此项后，当指令调用含有对应的选项时，将不会收到 &lt;code&gt;maxUsage&lt;/code&gt; 和 &lt;code&gt;minInterval&lt;/code&gt; 的限制。</source>
        <target state="translated">啟用此項後，當指令呼叫含有對應的選項時，將不會收到 &lt;code&gt;maxUsage&lt;/code&gt; 和 &lt;code&gt;minInterval&lt;/code&gt; 的限制。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[6]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="23395">
        <source>最后，如果我们希望让多个指令共同同一套速率限制，可以通过 &lt;code&gt;usageName&lt;/code&gt; 来进行管理。</source>
        <target state="translated">最後，如果我們希望讓多個指令共同同一套速率限制，可以透過 &lt;code&gt;usageName&lt;/code&gt; 來進行管理。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[7]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="23397">
        <source>只需将这些指令的 &lt;code&gt;usageName&lt;/code&gt; 设置为相同的值即可。</source>
        <target state="translated">只需將這些指令的 &lt;code&gt;usageName&lt;/code&gt; 設定為相同的值即可。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[7]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="23399">
        <source>扩展用户字段</source>
        <target state="needs-translation">扩展用户字段</target>
        <context-group purpose="information">
          <context context-type="source">Headline 2&#13;
XPath: /h2[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="23401">
        <source>&lt;strong x-id=&quot;1&quot;&gt;usage:&lt;/strong&gt; &lt;code&gt;Record&amp;lt;string, number&amp;gt;&lt;/code&gt; 指令调用次数</source>
        <target state="needs-translation">&lt;strong x-id=&quot;1&quot;&gt;usage:&lt;/strong&gt; &lt;code&gt;Record&amp;lt;string, number&amp;gt;&lt;/code&gt; 指令调用次数</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[1]/li[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="23403">
        <source>&lt;strong x-id=&quot;1&quot;&gt;timers:&lt;/strong&gt; &lt;code&gt;Record&amp;lt;string, number&amp;gt;&lt;/code&gt; 指令调用时间</source>
        <target state="needs-translation">&lt;strong x-id=&quot;1&quot;&gt;timers:&lt;/strong&gt; &lt;code&gt;Record&amp;lt;string, number&amp;gt;&lt;/code&gt; 指令调用时间</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[1]/li[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="23405">
        <source>指令：user.usage / user.timer</source>
        <target state="needs-translation">指令：user.usage / user.timer</target>
        <context-group purpose="information">
          <context context-type="source">Headline 2&#13;
XPath: /h2[3]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="23407">
        <source>基本语法：&lt;code&gt;user.xxx [key] [value]&lt;/code&gt;</source>
        <target state="needs-translation">基本语法：&lt;code&gt;user.xxx [key] [value]&lt;/code&gt;</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[2]/li[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="23409">
        <source>选项：</source>
        <target state="needs-translation">选项：</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /ul[2]/li[2]/text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="23411">
        <source>&lt;code&gt;-s, --set&lt;/code&gt; 设置访问记录（需要 4 级权限）</source>
        <target state="needs-translation">&lt;code&gt;-s, --set&lt;/code&gt; 设置访问记录（需要 4 级权限）</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[2]/li[2]/ul/li[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="23413">
        <source>&lt;code&gt;-c, --clear&lt;/code&gt; 清除访问记录（需要 4 级权限）</source>
        <target state="needs-translation">&lt;code&gt;-c, --clear&lt;/code&gt; 清除访问记录（需要 4 级权限）</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[2]/li[2]/ul/li[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="23415">
        <source>&lt;code&gt;-t, --target [@user]&lt;/code&gt; 目标用户（需要 3 级权限）</source>
        <target state="needs-translation">&lt;code&gt;-t, --target [@user]&lt;/code&gt; 目标用户（需要 3 级权限）</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[2]/li[2]/ul/li[3]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="23417">
        <source>如果不提供 &lt;code&gt;-s&lt;/code&gt; 和 &lt;code&gt;-c&lt;/code&gt; 选项，则会显示当前的访问记录。</source>
        <target state="needs-translation">如果不提供 &lt;code&gt;-s&lt;/code&gt; 和 &lt;code&gt;-c&lt;/code&gt; 选项，则会显示当前的访问记录。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[8]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="23419">
        <source>如果使用了 &lt;code&gt;-s&lt;/code&gt;，就会设置名为 &lt;code&gt;key&lt;/code&gt; 的访问记录为 &lt;code&gt;value&lt;/code&gt;。</source>
        <target state="needs-translation">如果使用了 &lt;code&gt;-s&lt;/code&gt;，就会设置名为 &lt;code&gt;key&lt;/code&gt; 的访问记录为 &lt;code&gt;value&lt;/code&gt;。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[8]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="23421">
        <source>如果使用了 &lt;code&gt;-c&lt;/code&gt; 且提供了 &lt;code&gt;key&lt;/code&gt;，就会清除名为 &lt;code&gt;key&lt;/code&gt; 的访问记录；否则会清除所有的访问记录。</source>
        <target state="needs-translation">如果使用了 &lt;code&gt;-c&lt;/code&gt; 且提供了 &lt;code&gt;key&lt;/code&gt;，就会清除名为 &lt;code&gt;key&lt;/code&gt; 的访问记录；否则会清除所有的访问记录。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[8]</context>
        </context-group>
      </trans-unit>
    </body>
  </file>
  <file id="1055" original="/[koishijs.common] main/docs/zh-CN/plugins/recall.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="23573" translate="no">
        <source>koishi-plugin-recall</source>
        <target>koishi-plugin-recall</target>
        <context-group purpose="information">
          <context context-type="source">Headline 1&#13;
XPath: /h1</context>
        </context-group>
      </trans-unit>
      <trans-unit id="23575">
        <source>koishi-plugin-recall 可用于在群聊中撤回已发送的消息。</source>
        <target state="needs-translation">koishi-plugin-recall 可用于在群聊中撤回已发送的消息。</target>
        <context-group purpose="information">
          <context context-type="source">Paragraph text&#13;
XPath: /p[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="23577">
        <source>指令：recall</source>
        <target state="needs-translation">指令：recall</target>
        <context-group purpose="information">
          <context context-type="source">Headline 2&#13;
XPath: /h2[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="23579">
        <source>基本语法：&lt;code&gt;recall [count]&lt;/code&gt;</source>
        <target state="needs-translation">基本语法：&lt;code&gt;recall [count]&lt;/code&gt;</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[1]/li[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="23581">
        <source>最低权限：2</source>
        <target state="needs-translation">最低权限：2</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[1]/li[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="23583">
        <source>recall 指令有两种用法：</source>
        <target state="needs-translation">recall 指令有两种用法：</target>
        <context-group purpose="information">
          <context context-type="source">Paragraph text&#13;
XPath: /p[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="23585">
        <source>直接调用时，撤回机器人在当前频道发送的最后几条消息</source>
        <target state="needs-translation">直接调用时，撤回机器人在当前频道发送的最后几条消息</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ol/li[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="23587">
        <source>引用回复调用时，撤回引用的消息</source>
        <target state="needs-translation">引用回复调用时，撤回引用的消息</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ol/li[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="23589">
        <source>&lt;code&gt;count&lt;/code&gt; 是要撤回的消息的数量，缺省时为 1。</source>
        <target state="needs-translation">&lt;code&gt;count&lt;/code&gt; 是要撤回的消息的数量，缺省时为 1。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[3]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="23591">
        <source>与 broadcast 类似，为了避免风控，每撤回一条消息后 Koishi 也会等待一段时间，同样可以通过 &lt;a href=&quot;htrtps://koishi.chat/api/core/app.md#options-delay&quot;&gt;&lt;code&gt;delay.broadcast&lt;/code&gt;&lt;/a&gt; 进行配置。</source>
        <target state="needs-translation">与 broadcast 类似，为了避免风控，每撤回一条消息后 Koishi 也会等待一段时间，同样可以通过 &lt;a href=&quot;htrtps://koishi.chat/api/core/app.md#options-delay&quot;&gt;&lt;code&gt;delay.broadcast&lt;/code&gt;&lt;/a&gt; 进行配置。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[3]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="23593">
        <source>配置项</source>
        <target state="needs-translation">配置项</target>
        <context-group purpose="information">
          <context context-type="source">Headline 2&#13;
XPath: /h2[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="23595">
        <source>timeout</source>
        <target state="needs-translation">timeout</target>
        <context-group purpose="information">
          <context context-type="source">Headline 3&#13;
XPath: /h3</context>
        </context-group>
      </trans-unit>
      <trans-unit id="39054">
        <source>类型：&lt;code&gt;number&lt;/code&gt;</source>
        <target state="needs-translation">类型：&lt;code&gt;number&lt;/code&gt;</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[2]/li[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="23599">
        <source>默认值：&lt;code&gt;Time.hour&lt;/code&gt;</source>
        <target state="needs-translation">默认值：&lt;code&gt;Time.hour&lt;/code&gt;</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[2]/li[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="39056">
        <source>保存已发送消息的时间 (毫秒)。</source>
        <target state="needs-translation">保存已发送消息的时间 (毫秒)。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[4]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="23603">
        <source>超时的消息将被清除。</source>
        <target state="needs-translation">超时的消息将被清除。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[4]</context>
        </context-group>
      </trans-unit>
    </body>
  </file>
  <file id="1057" original="/[koishijs.common] main/packages/recall/src/locales/zh-CN.yml" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="23605" resname="commands.recall.description">
        <source>撤回机器人发送的消息</source>
        <target state="needs-translation">撤回机器人发送的消息</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; recall -&gt; description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="23607" resname="commands.recall.messages.no-recent">
        <source>近期没有发送消息。</source>
        <target state="needs-translation">近期没有发送消息。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; recall -&gt; messages -&gt; no-recent</context>
        </context-group>
      </trans-unit>
    </body>
  </file>
  <file id="1059" original="/[koishijs.common] main/docs/zh-CN/plugins/verifier.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="23625" translate="no">
        <source>koishi-plugin-verifier</source>
        <target>koishi-plugin-verifier</target>
        <context-group purpose="information">
          <context context-type="source">Headline 1&#13;
XPath: /h1</context>
        </context-group>
      </trans-unit>
      <trans-unit id="23627">
        <source>koishi-plugin-verifier 可用于处理机器人接收到的各类申请。</source>
        <target state="needs-translation">koishi-plugin-verifier 可用于处理机器人接收到的各类申请。</target>
        <context-group purpose="information">
          <context context-type="source">Paragraph text&#13;
XPath: /p[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="23629">
        <source>可选行为</source>
        <target state="needs-translation">可选行为</target>
        <context-group purpose="information">
          <context context-type="source">Headline 2&#13;
XPath: /h2[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="23631">
        <source>RequestHandler 可以包含以下行为：</source>
        <target state="needs-translation">RequestHandler 可以包含以下行为：</target>
        <context-group purpose="information">
          <context context-type="source">Paragraph text&#13;
XPath: /p[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="23633">
        <source>无操作，可留待人工判断</source>
        <target state="needs-translation">无操作，可留待人工判断</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[1]/li[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="23635">
        <source>通过全部此类申请</source>
        <target state="needs-translation">通过全部此类申请</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[1]/li[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="23637">
        <source>拒绝全部此类申请</source>
        <target state="needs-translation">拒绝全部此类申请</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[1]/li[3]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="23639">
        <source>当申请者打到某个权限等级时通过，否则无操作 (需要额外填写这里的权限等级)</source>
        <target state="needs-translation">当申请者打到某个权限等级时通过，否则无操作 (需要额外填写这里的权限等级)</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[1]/li[4]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="23641">
        <source>你可以在配置界面的下拉菜单中选择其中的行为。</source>
        <target state="needs-translation">你可以在配置界面的下拉菜单中选择其中的行为。</target>
        <context-group purpose="information">
          <context context-type="source">Paragraph text&#13;
XPath: /p[3]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="23643">
        <source>配置项</source>
        <target state="needs-translation">配置项</target>
        <context-group purpose="information">
          <context context-type="source">Headline 2&#13;
XPath: /h2[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="23645">
        <source>onFriendRequest</source>
        <target state="needs-translation">onFriendRequest</target>
        <context-group purpose="information">
          <context context-type="source">Headline 3&#13;
XPath: /h3[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="23647">
        <source>类型: &lt;a href=&quot;#可选行为&quot;&gt;&lt;code&gt;RequestHandler&lt;/code&gt;&lt;/a&gt;</source>
        <target state="needs-translation">类型: &lt;a href=&quot;#可选行为&quot;&gt;&lt;code&gt;RequestHandler&lt;/code&gt;&lt;/a&gt;</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[2]/li</context>
        </context-group>
      </trans-unit>
      <trans-unit id="23649">
        <source>如何响应好友请求？</source>
        <target state="needs-translation">如何响应好友请求？</target>
        <context-group purpose="information">
          <context context-type="source">Paragraph text&#13;
XPath: /p[4]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="23651">
        <source>onGuildMemberRequest</source>
        <target state="needs-translation">onGuildMemberRequest</target>
        <context-group purpose="information">
          <context context-type="source">Headline 3&#13;
XPath: /h3[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="23653">
        <source>类型: &lt;a href=&quot;#可选行为&quot;&gt;&lt;code&gt;RequestHandler&lt;/code&gt;&lt;/a&gt;</source>
        <target state="needs-translation">类型: &lt;a href=&quot;#可选行为&quot;&gt;&lt;code&gt;RequestHandler&lt;/code&gt;&lt;/a&gt;</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[3]/li</context>
        </context-group>
      </trans-unit>
      <trans-unit id="23655">
        <source>如何响应入群申请？</source>
        <target state="needs-translation">如何响应入群申请？</target>
        <context-group purpose="information">
          <context context-type="source">Paragraph text&#13;
XPath: /p[5]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="23657">
        <source>onGuildRequest</source>
        <target state="needs-translation">onGuildRequest</target>
        <context-group purpose="information">
          <context context-type="source">Headline 3&#13;
XPath: /h3[3]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="23659">
        <source>类型: &lt;a href=&quot;#可选行为&quot;&gt;&lt;code&gt;RequestHandler&lt;/code&gt;&lt;/a&gt;</source>
        <target state="needs-translation">类型: &lt;a href=&quot;#可选行为&quot;&gt;&lt;code&gt;RequestHandler&lt;/code&gt;&lt;/a&gt;</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[4]/li</context>
        </context-group>
      </trans-unit>
      <trans-unit id="23661">
        <source>如何响应入群邀请？</source>
        <target state="needs-translation">如何响应入群邀请？</target>
        <context-group purpose="information">
          <context context-type="source">Paragraph text&#13;
XPath: /p[6]</context>
        </context-group>
      </trans-unit>
    </body>
  </file>
  <file id="1069" original="/[koishijs.common] main/docs/zh-CN/plugins/respondent.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="24333" translate="no">
        <source>koishi-plugin-respondent</source>
        <target>koishi-plugin-respondent</target>
        <context-group purpose="information">
          <context context-type="source">Headline 1&#13;
XPath: /h1</context>
        </context-group>
      </trans-unit>
      <trans-unit id="24335">
        <source>自动回复插件，允许设置一套自定义问答规则。</source>
        <target state="needs-translation">自动回复插件，允许设置一套自定义问答规则。</target>
        <context-group purpose="information">
          <context context-type="source">Paragraph text&#13;
XPath: /p[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="24337">
        <source>如果想要通过指令设置和管理问答，以及更多的功能，可以使用 &lt;a href=&quot;https://dialogue.koishi.chat&quot;&gt;koishi-plugin-dialogue&lt;/a&gt;。</source>
        <target state="needs-translation">如果想要通过指令设置和管理问答，以及更多的功能，可以使用 &lt;a href=&quot;https://dialogue.koishi.chat&quot;&gt;koishi-plugin-dialogue&lt;/a&gt;。</target>
        <context-group purpose="information">
          <context context-type="source">Paragraph text&#13;
XPath: /p[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="24339">
        <source>配置项</source>
        <target state="needs-translation">配置项</target>
        <context-group purpose="information">
          <context context-type="source">Headline 2&#13;
XPath: /h2</context>
        </context-group>
      </trans-unit>
      <trans-unit id="24341">
        <source>rules[].match</source>
        <target state="needs-translation">rules[].match</target>
        <context-group purpose="information">
          <context context-type="source">Headline 3&#13;
XPath: /h3[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="24343">
        <source>类型: &lt;code&gt;string&lt;/code&gt;</source>
        <target state="needs-translation">类型: &lt;code&gt;string&lt;/code&gt;</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[1]/li[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="24345">
        <source>必需参数</source>
        <target state="needs-translation">必需参数</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[1]/li[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="24347">
        <source>要匹配的输入。</source>
        <target state="needs-translation">要匹配的输入。</target>
        <context-group purpose="information">
          <context context-type="source">Paragraph text&#13;
XPath: /p[3]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="24349">
        <source>rules[].reply</source>
        <target state="needs-translation">rules[].reply</target>
        <context-group purpose="information">
          <context context-type="source">Headline 3&#13;
XPath: /h3[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="24351">
        <source>类型: &lt;code&gt;string&lt;/code&gt;</source>
        <target state="needs-translation">类型: &lt;code&gt;string&lt;/code&gt;</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[2]/li[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="24353">
        <source>必需参数</source>
        <target state="needs-translation">必需参数</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[2]/li[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="24355">
        <source>要回复的内容。</source>
        <target state="needs-translation">要回复的内容。</target>
        <context-group purpose="information">
          <context context-type="source">Paragraph text&#13;
XPath: /p[4]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="24357">
        <source>rules[].regexp</source>
        <target state="needs-translation">rules[].regexp</target>
        <context-group purpose="information">
          <context context-type="source">Headline 3&#13;
XPath: /h3[3]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="24359">
        <source>类型: &lt;code&gt;boolean&lt;/code&gt;</source>
        <target state="needs-translation">类型: &lt;code&gt;boolean&lt;/code&gt;</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[3]/li</context>
        </context-group>
      </trans-unit>
      <trans-unit id="24361">
        <source>是否使用正则表达式匹配。</source>
        <target state="needs-translation">是否使用正则表达式匹配。</target>
        <context-group purpose="information">
          <context context-type="source">Paragraph text&#13;
XPath: /p[5]</context>
        </context-group>
      </trans-unit>
    </body>
  </file>
  <file id="1071" original="/[koishijs.common] main/docs/zh-CN/plugins/shutdown.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="24363" translate="no">
        <source>koishi-plugin-shutdown</source>
        <target>koishi-plugin-shutdown</target>
        <context-group purpose="information">
          <context context-type="source">Headline 1&#13;
XPath: /h1</context>
        </context-group>
      </trans-unit>
      <trans-unit id="24365">
        <source>koishi-plugin-shutdown 提供了适用于 Koishi 的 &lt;a href=&quot;https://www.freedesktop.org/software/systemd/man/shutdown.html&quot;&gt;shutdown(8)&lt;/a&gt;。</source>
        <target state="needs-translation">koishi-plugin-shutdown 提供了适用于 Koishi 的 &lt;a href=&quot;https://www.freedesktop.org/software/systemd/man/shutdown.html&quot;&gt;shutdown(8)&lt;/a&gt;。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="24621">
        <source>通过指令关闭和重启机器人，支持定时和取消。</source>
        <target state="needs-translation">通过指令关闭和重启机器人，支持定时和取消。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="24369">
        <source>指令：shutdown</source>
        <target state="needs-translation">指令：shutdown</target>
        <context-group purpose="information">
          <context context-type="source">Headline 2&#13;
XPath: /h2</context>
        </context-group>
      </trans-unit>
      <trans-unit id="24371">
        <source>基本语法：&lt;code&gt;shutdown [time] [wall]&lt;/code&gt;</source>
        <target state="needs-translation">基本语法：&lt;code&gt;shutdown [time] [wall]&lt;/code&gt;</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul/li[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="24373">
        <source>别名：&lt;code&gt;exit&lt;/code&gt;</source>
        <target state="needs-translation">别名：&lt;code&gt;exit&lt;/code&gt;</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul/li[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="24375">
        <source>最低权限：3</source>
        <target state="needs-translation">最低权限：3</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul/li[3]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="24377">
        <source>选项：</source>
        <target state="needs-translation">选项：</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /ul/li[4]/text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="24379">
        <source>&lt;code&gt;-r, --reboot&lt;/code&gt; 软重启</source>
        <target state="needs-translation">&lt;code&gt;-r, --reboot&lt;/code&gt; 软重启</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul/li[4]/ul/li[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="24381">
        <source>&lt;code&gt;-R, --reboot-hard&lt;/code&gt; 硬重启</source>
        <target state="needs-translation">&lt;code&gt;-R, --reboot-hard&lt;/code&gt; 硬重启</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul/li[4]/ul/li[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="24383">
        <source>&lt;code&gt;-c, --clear&lt;/code&gt; 清空计划中的关闭</source>
        <target state="needs-translation">&lt;code&gt;-c, --clear&lt;/code&gt; 清空计划中的关闭</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul/li[4]/ul/li[3]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="24385">
        <source>&lt;code&gt;-s, --show&lt;/code&gt; 列出计划中的关闭</source>
        <target state="needs-translation">&lt;code&gt;-s, --show&lt;/code&gt; 列出计划中的关闭</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul/li[4]/ul/li[4]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="24387">
        <source>&lt;code&gt;-w, --wall&lt;/code&gt; 发送广播消息</source>
        <target state="needs-translation">&lt;code&gt;-w, --wall&lt;/code&gt; 发送广播消息</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul/li[4]/ul/li[5]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="24389">
        <source>shutdown 指令可用于关闭或重启 Koishi。</source>
        <target state="needs-translation">shutdown 指令可用于关闭或重启 Koishi。</target>
        <context-group purpose="information">
          <context context-type="source">Paragraph text&#13;
XPath: /p[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="24391">
        <source>&lt;code&gt;-r&lt;/code&gt; 和 &lt;code&gt;-R&lt;/code&gt; 选项可用于重启机器人。</source>
        <target state="needs-translation">&lt;code&gt;-r&lt;/code&gt; 和 &lt;code&gt;-R&lt;/code&gt; 选项可用于重启机器人。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[3]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="24393">
        <source>其中软重启用于从 Koishi CLI 侧重启，硬重启用于从 Koishi Launcher (例如 Koishi Desktop 或 Koishi Android) 侧重启。</source>
        <target state="needs-translation">其中软重启用于从 Koishi CLI 侧重启，硬重启用于从 Koishi Launcher (例如 Koishi Desktop 或 Koishi Android) 侧重启。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[3]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="24395">
        <source>&lt;code&gt;-c&lt;/code&gt; 和 &lt;code&gt;-s&lt;/code&gt; 选项可用于取消或查看计划中的关闭。</source>
        <target state="needs-translation">&lt;code&gt;-c&lt;/code&gt; 和 &lt;code&gt;-s&lt;/code&gt; 选项可用于取消或查看计划中的关闭。</target>
        <context-group purpose="information">
          <context context-type="source">Paragraph text&#13;
XPath: /p[4]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="24397">
        <source>当传入了 &lt;code&gt;wall&lt;/code&gt; 参数或使用 &lt;code&gt;-w&lt;/code&gt; 选项时，将会发送广播消息。</source>
        <target state="needs-translation">当传入了 &lt;code&gt;wall&lt;/code&gt; 参数或使用 &lt;code&gt;-w&lt;/code&gt; 选项时，将会发送广播消息。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[5]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="24399">
        <source>该消息会发送给&lt;strong x-id=&quot;1&quot;&gt;全部&lt;/strong&gt; Koishi 接入的频道。</source>
        <target state="needs-translation">该消息会发送给&lt;strong x-id=&quot;1&quot;&gt;全部&lt;/strong&gt; Koishi 接入的频道。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[5]</context>
        </context-group>
      </trans-unit>
    </body>
  </file>
  <file id="1079" original="/[koishijs.common] main/docs/zh-CN/plugins/schedule.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="24421" translate="no">
        <source>koishi-plugin-schedule</source>
        <target>koishi-plugin-schedule</target>
        <context-group purpose="information">
          <context context-type="source">Headline 1&#13;
XPath: /h1</context>
        </context-group>
      </trans-unit>
      <trans-unit id="24423">
        <source>koishi-plugin-schedule 用于在用户侧设置计划任务。</source>
        <target state="needs-translation">koishi-plugin-schedule 用于在用户侧设置计划任务。</target>
        <context-group purpose="information">
          <context context-type="source">Paragraph text&#13;
XPath: /p[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="24425">
        <source>::: tip&lt;br x-id=&quot;2&quot; /&gt;
如果想要在开发者侧设置计划任务，可以使用 &lt;a href=&quot;https://cron.koishi.chat&quot;&gt;koishi-plugin-cron&lt;/a&gt;。</source>
        <target state="needs-translation">::: tip&lt;br x-id=&quot;2&quot; /&gt;
如果想要在开发者侧设置计划任务，可以使用 &lt;a href=&quot;https://cron.koishi.chat&quot;&gt;koishi-plugin-cron&lt;/a&gt;。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="24427" translate="no">
        <source>:::</source>
        <target>:::</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="24429">
        <source>schedule 1m -- echo 233</source>
        <target state="needs-translation">schedule 1m -- echo 233</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /chat-panel/chat-message[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="24431">
        <source>日程已创建，编号为 1。</source>
        <target state="needs-translation">日程已创建，编号为 1。</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /chat-panel/chat-message[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="24433">
        <source>schedule -l</source>
        <target state="needs-translation">schedule -l</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /chat-panel/chat-message[3]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="24435">
        <source>1. 今天 10:01：echo 233</source>
        <target state="needs-translation">1. 今天 10:01：echo 233</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /chat-panel/chat-message[4]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="24437">
        <source>——— 1 分钟后 ———</source>
        <target state="needs-translation">——— 1 分钟后 ———</target>
        <context-group purpose="information">
          <context context-type="source">Paragraph text&#13;
XPath: /chat-panel/p</context>
        </context-group>
      </trans-unit>
      <trans-unit id="24439">
        <source>233</source>
        <target state="needs-translation">233</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /chat-panel/chat-message[5]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="24441">
        <source>指令：schedule</source>
        <target state="needs-translation">指令：schedule</target>
        <context-group purpose="information">
          <context context-type="source">Headline 2&#13;
XPath: /h2[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="24443">
        <source>添加或查找计划任务。</source>
        <target state="needs-translation">添加或查找计划任务。</target>
        <context-group purpose="information">
          <context context-type="source">Paragraph text&#13;
XPath: /p[3]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="24445">
        <source>基本语法：&lt;code&gt;schedule [time] -- [command]&lt;/code&gt;</source>
        <target state="needs-translation">基本语法：&lt;code&gt;schedule [time] -- [command]&lt;/code&gt;</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[1]/li[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="24447">
        <source>选项列表：</source>
        <target state="needs-translation">选项列表：</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /ul[1]/li[2]/text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="24449">
        <source>&lt;code&gt;/ &amp;lt;interval&amp;gt;&lt;/code&gt; 设置触发的间隔秒数</source>
        <target state="needs-translation">&lt;code&gt;/ &amp;lt;interval&amp;gt;&lt;/code&gt; 设置触发的间隔秒数</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[1]/li[2]/ul/li[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="24451">
        <source>&lt;code&gt;-l, --list&lt;/code&gt; 查看已经设置的日程</source>
        <target state="needs-translation">&lt;code&gt;-l, --list&lt;/code&gt; 查看已经设置的日程</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[1]/li[2]/ul/li[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="24453">
        <source>&lt;code&gt;-e, --ensure&lt;/code&gt; 错过时间也确保执行</source>
        <target state="needs-translation">&lt;code&gt;-e, --ensure&lt;/code&gt; 错过时间也确保执行</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[1]/li[2]/ul/li[3]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="24455">
        <source>&lt;code&gt;-f, --full&lt;/code&gt; 查找全部上下文</source>
        <target state="needs-translation">&lt;code&gt;-f, --full&lt;/code&gt; 查找全部上下文</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[1]/li[2]/ul/li[4]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="24457">
        <source>&lt;code&gt;-d, --delete &amp;lt;id&amp;gt;&lt;/code&gt; 删除已经设置的日程</source>
        <target state="needs-translation">&lt;code&gt;-d, --delete &amp;lt;id&amp;gt;&lt;/code&gt; 删除已经设置的日程</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[1]/li[2]/ul/li[5]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="24459">
        <source>定时器语法</source>
        <target state="needs-translation">定时器语法</target>
        <context-group purpose="information">
          <context context-type="source">Headline 3&#13;
XPath: /h3[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="24461">
        <source>&lt;code&gt;1m&lt;/code&gt;: 1 分钟后触发</source>
        <target state="needs-translation">&lt;code&gt;1m&lt;/code&gt;: 1 分钟后触发</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[2]/li[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="24463">
        <source>&lt;code&gt;2h30m&lt;/code&gt;: 2 小时 30 分钟后触发</source>
        <target state="needs-translation">&lt;code&gt;2h30m&lt;/code&gt;: 2 小时 30 分钟后触发</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[2]/li[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="24465">
        <source>&lt;code&gt;10:00&lt;/code&gt;: 今天 10 点触发</source>
        <target state="needs-translation">&lt;code&gt;10:00&lt;/code&gt;: 今天 10 点触发</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[2]/li[3]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="24467">
        <source>&lt;code&gt;1m / 10s&lt;/code&gt;: 1 分钟后每隔 10 秒触发</source>
        <target state="needs-translation">&lt;code&gt;1m / 10s&lt;/code&gt;: 1 分钟后每隔 10 秒触发</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[2]/li[4]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="24469">
        <source>&lt;code&gt;10:00 / 1d&lt;/code&gt;: 从今天起每天 10 点触发</source>
        <target state="needs-translation">&lt;code&gt;10:00 / 1d&lt;/code&gt;: 从今天起每天 10 点触发</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[2]/li[5]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="24471">
        <source>配置项</source>
        <target state="needs-translation">配置项</target>
        <context-group purpose="information">
          <context context-type="source">Headline 2&#13;
XPath: /h2[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="24473">
        <source>minInterval</source>
        <target state="needs-translation">minInterval</target>
        <context-group purpose="information">
          <context context-type="source">Headline 3&#13;
XPath: /h3[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="24475">
        <source>类型: &lt;code&gt;number&lt;/code&gt;</source>
        <target state="needs-translation">类型: &lt;code&gt;number&lt;/code&gt;</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[3]/li[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="24477">
        <source>默认值: &lt;code&gt;60000&lt;/code&gt;</source>
        <target state="needs-translation">默认值: &lt;code&gt;60000&lt;/code&gt;</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[3]/li[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="24479">
        <source>允许的最短时间间隔，单位为毫秒。</source>
        <target state="needs-translation">允许的最短时间间隔，单位为毫秒。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[4]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="24481">
        <source>如果传入的 interval 参数小于这个值，将会提示“时间间隔过短”。</source>
        <target state="needs-translation">如果传入的 interval 参数小于这个值，将会提示“时间间隔过短”。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[4]</context>
        </context-group>
      </trans-unit>
    </body>
  </file>
  <file id="1081" original="/[koishijs.common] main/packages/schedule/src/locales/zh-CN.yml" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="24483" resname="general.days.0">
        <source>日</source>
        <target state="translated">日</target>
        <context-group purpose="information">
          <context context-type="source">general -&gt; days -&gt; 0</context>
        </context-group>
      </trans-unit>
      <trans-unit id="24485" resname="general.days.1">
        <source>一</source>
        <target state="translated">一</target>
        <context-group purpose="information">
          <context context-type="source">general -&gt; days -&gt; 1</context>
        </context-group>
      </trans-unit>
      <trans-unit id="24487" resname="general.days.2">
        <source>二</source>
        <target state="translated">二</target>
        <context-group purpose="information">
          <context context-type="source">general -&gt; days -&gt; 2</context>
        </context-group>
      </trans-unit>
      <trans-unit id="24489" resname="general.days.3">
        <source>三</source>
        <target state="translated">三</target>
        <context-group purpose="information">
          <context context-type="source">general -&gt; days -&gt; 3</context>
        </context-group>
      </trans-unit>
      <trans-unit id="24491" resname="general.days.4">
        <source>四</source>
        <target state="translated">四</target>
        <context-group purpose="information">
          <context context-type="source">general -&gt; days -&gt; 4</context>
        </context-group>
      </trans-unit>
      <trans-unit id="24493" resname="general.days.5">
        <source>五</source>
        <target state="translated">五</target>
        <context-group purpose="information">
          <context context-type="source">general -&gt; days -&gt; 5</context>
        </context-group>
      </trans-unit>
      <trans-unit id="24495" resname="general.days.6">
        <source>六</source>
        <target state="translated">六</target>
        <context-group purpose="information">
          <context context-type="source">general -&gt; days -&gt; 6</context>
        </context-group>
      </trans-unit>
      <trans-unit id="24497" resname="general.everyday">
        <source>每天 {0}</source>
        <target state="translated">每天 {0}</target>
        <context-group purpose="information">
          <context context-type="source">general -&gt; everyday</context>
        </context-group>
      </trans-unit>
      <trans-unit id="24499" resname="general.everyweek">
        <source>每周{0} {1}</source>
        <target state="translated">每周{0} {1}</target>
        <context-group purpose="information">
          <context context-type="source">general -&gt; everyweek</context>
        </context-group>
      </trans-unit>
      <trans-unit id="24501" resname="general.interval">
        <source>每隔 &lt;i18n:time value={0}/&gt; (剩余 &lt;i18n:time value={1}/&gt;)</source>
        <target state="translated">每隔 &lt;i18n:time value={0}/&gt; (剩余 &lt;i18n:time value={1}/&gt;)</target>
        <context-group purpose="information">
          <context context-type="source">general -&gt; interval</context>
        </context-group>
      </trans-unit>
      <trans-unit id="24503" resname="commands.schedule.description">
        <source>设置定时命令</source>
        <target state="translated">設置定時命令</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; schedule -&gt; description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="24505" resname="commands.schedule.options.rest">
        <source>要执行的指令</source>
        <target state="translated">要執行的指令</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; schedule -&gt; options -&gt; rest</context>
        </context-group>
      </trans-unit>
      <trans-unit id="24507" resname="commands.schedule.options.interval">
        <source>设置触发的间隔秒数</source>
        <target state="translated">設置觸發的間隔秒數</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; schedule -&gt; options -&gt; interval</context>
        </context-group>
      </trans-unit>
      <trans-unit id="24509" resname="commands.schedule.options.list">
        <source>查看已经设置的日程</source>
        <target state="translated">查看已經設置的日程</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; schedule -&gt; options -&gt; list</context>
        </context-group>
      </trans-unit>
      <trans-unit id="24511" resname="commands.schedule.options.ensure">
        <source>错过时间也确保执行</source>
        <target state="translated">錯過時間也確保執行</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; schedule -&gt; options -&gt; ensure</context>
        </context-group>
      </trans-unit>
      <trans-unit id="24513" resname="commands.schedule.options.full">
        <source>查找全部上下文</source>
        <target state="needs-translation">查找全部上下文</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; schedule -&gt; options -&gt; full</context>
        </context-group>
      </trans-unit>
      <trans-unit id="24515" resname="commands.schedule.options.delete">
        <source>删除已经设置的日程</source>
        <target state="needs-translation">删除已经设置的日程</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; schedule -&gt; options -&gt; delete</context>
        </context-group>
      </trans-unit>
      <trans-unit id="24517" resname="commands.schedule.messages.context">
        <source>，上下文：{0}</source>
        <target state="needs-translation">，上下文：{0}</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; schedule -&gt; messages -&gt; context</context>
        </context-group>
      </trans-unit>
      <trans-unit id="36680" resname="commands.schedule.messages.&quot;context.private&quot;">
        <source>私聊 {user.id}</source>
        <target state="needs-translation">私聊 {user.id}</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; schedule -&gt; messages -&gt; context.private</context>
        </context-group>
      </trans-unit>
      <trans-unit id="36682" resname="commands.schedule.messages.&quot;context.guild&quot;">
        <source>频道 {channel.id}</source>
        <target state="needs-translation">频道 {channel.id}</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; schedule -&gt; messages -&gt; context.guild</context>
        </context-group>
      </trans-unit>
      <trans-unit id="24523" resname="commands.schedule.messages.delete-success">
        <source>日程 {0} 已删除。</source>
        <target state="needs-translation">日程 {0} 已删除。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; schedule -&gt; messages -&gt; delete-success</context>
        </context-group>
      </trans-unit>
      <trans-unit id="24525" resname="commands.schedule.messages.create-success">
        <source>日程已创建，编号为 {0}。</source>
        <target state="needs-translation">日程已创建，编号为 {0}。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; schedule -&gt; messages -&gt; create-success</context>
        </context-group>
      </trans-unit>
      <trans-unit id="24527" resname="commands.schedule.messages.list-empty">
        <source>当前没有等待执行的日程。</source>
        <target state="needs-translation">当前没有等待执行的日程。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; schedule -&gt; messages -&gt; list-empty</context>
        </context-group>
      </trans-unit>
      <trans-unit id="24529" resname="commands.schedule.messages.command-expected">
        <source>请输入要执行的指令。</source>
        <target state="needs-translation">请输入要执行的指令。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; schedule -&gt; messages -&gt; command-expected</context>
        </context-group>
      </trans-unit>
      <trans-unit id="24531" resname="commands.schedule.messages.date-invalid">
        <source>请输入合法的日期。</source>
        <target state="needs-translation">请输入合法的日期。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; schedule -&gt; messages -&gt; date-invalid</context>
        </context-group>
      </trans-unit>
      <trans-unit id="24533" resname="commands.schedule.messages.date-invalid-suggestion">
        <source>请输入合法的日期。你要输入的是不是 {0}s？</source>
        <target state="needs-translation">请输入合法的日期。你要输入的是不是 {0}s？</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; schedule -&gt; messages -&gt; date-invalid-suggestion</context>
        </context-group>
      </trans-unit>
      <trans-unit id="24535" resname="commands.schedule.messages.date-expected">
        <source>请输入执行时间。</source>
        <target state="needs-translation">请输入执行时间。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; schedule -&gt; messages -&gt; date-expected</context>
        </context-group>
      </trans-unit>
      <trans-unit id="24537" resname="commands.schedule.messages.date-past">
        <source>不能指定过去的时间为执行时间。</source>
        <target state="needs-translation">不能指定过去的时间为执行时间。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; schedule -&gt; messages -&gt; date-past</context>
        </context-group>
      </trans-unit>
      <trans-unit id="24539" resname="commands.schedule.messages.interval-invalid">
        <source>请输入合法的时间间隔。</source>
        <target state="needs-translation">请输入合法的时间间隔。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; schedule -&gt; messages -&gt; interval-invalid</context>
        </context-group>
      </trans-unit>
      <trans-unit id="24541" resname="commands.schedule.messages.interval-too-short">
        <source>时间间隔过短。</source>
        <target state="needs-translation">时间间隔过短。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; schedule -&gt; messages -&gt; interval-too-short</context>
        </context-group>
      </trans-unit>
    </body>
  </file>
  <file id="1139" original="/[koishijs.koishi-plugin-dialogue] main/packages/author/src/locales/zh-CN.yml" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="25945" resname="commands.teach.options.&quot;frozen.true&quot;">
        <source>锁定这个问答</source>
        <target state="needs-translation">锁定这个问答</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; options -&gt; frozen.true</context>
        </context-group>
      </trans-unit>
      <trans-unit id="25947" resname="commands.teach.options.&quot;frozen.false&quot;">
        <source>解锁这个问答</source>
        <target state="needs-translation">解锁这个问答</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; options -&gt; frozen.false</context>
        </context-group>
      </trans-unit>
      <trans-unit id="25949" resname="commands.teach.options.writer">
        <source>添加或设置问题的作者</source>
        <target state="needs-translation">添加或设置问题的作者</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; options -&gt; writer</context>
        </context-group>
      </trans-unit>
      <trans-unit id="25951" resname="commands.teach.options.&quot;writer.&quot;">
        <source>添加或设置匿名问题</source>
        <target state="needs-translation">添加或设置匿名问题</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; options -&gt; writer.</context>
        </context-group>
      </trans-unit>
      <trans-unit id="25953" resname="commands.teach.options.&quot;substitute.true&quot;">
        <source>由教学者完成问答的执行</source>
        <target state="needs-translation">由教学者完成问答的执行</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; options -&gt; substitute.true</context>
        </context-group>
      </trans-unit>
      <trans-unit id="25955" resname="commands.teach.options.&quot;substitute.false&quot;">
        <source>由触发者完成问答的执行</source>
        <target state="needs-translation">由触发者完成问答的执行</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; options -&gt; substitute.false</context>
        </context-group>
      </trans-unit>
      <trans-unit id="25957" resname="commands.teach.messages.writer.target-not-exist">
        <source>指定的目标用户不存在。</source>
        <target state="needs-translation">指定的目标用户不存在。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; messages -&gt; writer -&gt; target-not-exist</context>
        </context-group>
      </trans-unit>
      <trans-unit id="25959" resname="commands.teach.messages.writer.detail.writer">
        <source>来源：{0}</source>
        <target state="needs-translation">来源：{0}</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; messages -&gt; writer -&gt; detail -&gt; writer</context>
        </context-group>
      </trans-unit>
      <trans-unit id="25961" resname="commands.teach.messages.writer.detail.unknown">
        <source>未知用户</source>
        <target state="needs-translation">未知用户</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; messages -&gt; writer -&gt; detail -&gt; unknown</context>
        </context-group>
      </trans-unit>
      <trans-unit id="25963" resname="commands.teach.messages.writer.detail.frozen">
        <source>此问答已锁定。</source>
        <target state="needs-translation">此问答已锁定。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; messages -&gt; writer -&gt; detail -&gt; frozen</context>
        </context-group>
      </trans-unit>
      <trans-unit id="25965" resname="commands.teach.messages.writer.detail.substitute">
        <source>回答中的指令由教学者代行。</source>
        <target state="needs-translation">回答中的指令由教学者代行。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; messages -&gt; writer -&gt; detail -&gt; substitute</context>
        </context-group>
      </trans-unit>
      <trans-unit id="25967" resname="commands.teach.messages.writer.abstract.frozen">
        <source>锁定</source>
        <target state="needs-translation">锁定</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; messages -&gt; writer -&gt; abstract -&gt; frozen</context>
        </context-group>
      </trans-unit>
      <trans-unit id="25969" resname="commands.teach.messages.writer.abstract.substitute">
        <source>代行</source>
        <target state="needs-translation">代行</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; messages -&gt; writer -&gt; abstract -&gt; substitute</context>
        </context-group>
      </trans-unit>
    </body>
  </file>
  <file id="1141" original="/[koishijs.koishi-plugin-dialogue] main/packages/context/src/locales/zh-CN.yml" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="25971" resname="commands.teach.options.disable">
        <source>在当前环境下禁用问答</source>
        <target state="needs-translation">在当前环境下禁用问答</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; options -&gt; disable</context>
        </context-group>
      </trans-unit>
      <trans-unit id="25973" resname="commands.teach.options.disableGlobal">
        <source>在所有环境下禁用问答</source>
        <target state="needs-translation">在所有环境下禁用问答</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; options -&gt; disableGlobal</context>
        </context-group>
      </trans-unit>
      <trans-unit id="25975" resname="commands.teach.options.enable">
        <source>在当前环境下启用问答</source>
        <target state="needs-translation">在当前环境下启用问答</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; options -&gt; enable</context>
        </context-group>
      </trans-unit>
      <trans-unit id="25977" resname="commands.teach.options.enableGlobal">
        <source>在所有环境下启用问答</source>
        <target state="needs-translation">在所有环境下启用问答</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; options -&gt; enableGlobal</context>
        </context-group>
      </trans-unit>
      <trans-unit id="25979" resname="commands.teach.options.guilds">
        <source>设置具体的生效环境</source>
        <target state="needs-translation">设置具体的生效环境</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; options -&gt; guilds</context>
        </context-group>
      </trans-unit>
      <trans-unit id="25981" resname="commands.teach.options.global">
        <source>无视上下文搜索</source>
        <target state="needs-translation">无视上下文搜索</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; options -&gt; global</context>
        </context-group>
      </trans-unit>
      <trans-unit id="25983" resname="commands.teach.messages.context.modifier-expected">
        <source>选项 -g, --guilds 必须与 -d/-D/-e/-E 之一同时使用。</source>
        <target state="needs-translation">选项 -g, --guilds 必须与 -d/-D/-e/-E 之一同时使用。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; messages -&gt; context -&gt; modifier-expected</context>
        </context-group>
      </trans-unit>
      <trans-unit id="25985" resname="commands.teach.messages.context.private-context">
        <source>非群聊上下文中请使用 -E/-D 进行操作或指定 -g, --guilds 选项。</source>
        <target state="needs-translation">非群聊上下文中请使用 -E/-D 进行操作或指定 -g, --guilds 选项。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; messages -&gt; context -&gt; private-context</context>
        </context-group>
      </trans-unit>
      <trans-unit id="25987" resname="commands.teach.messages.context.enable-all">
        <source>生效环境：全局</source>
        <target state="needs-translation">生效环境：全局</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; messages -&gt; context -&gt; enable-all</context>
        </context-group>
      </trans-unit>
      <trans-unit id="25989" resname="commands.teach.messages.context.enable-except-some">
        <source>生效环境：除 {0} 个群外的所有群</source>
        <target state="needs-translation">生效环境：除 {0} 个群外的所有群</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; messages -&gt; context -&gt; enable-except-some</context>
        </context-group>
      </trans-unit>
      <trans-unit id="25991" resname="commands.teach.messages.context.enable-except-current-only">
        <source>生效环境：除本群</source>
        <target state="needs-translation">生效环境：除本群</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; messages -&gt; context -&gt; enable-except-current-only</context>
        </context-group>
      </trans-unit>
      <trans-unit id="25993" resname="commands.teach.messages.context.enable-except-current-and-more">
        <source>生效环境：除本群等 {0} 个群外的所有群</source>
        <target state="needs-translation">生效环境：除本群等 {0} 个群外的所有群</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; messages -&gt; context -&gt; enable-except-current-and-more</context>
        </context-group>
      </trans-unit>
      <trans-unit id="25995" resname="commands.teach.messages.context.disable-all">
        <source>生效环境：全局禁止</source>
        <target state="needs-translation">生效环境：全局禁止</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; messages -&gt; context -&gt; disable-all</context>
        </context-group>
      </trans-unit>
      <trans-unit id="25997" resname="commands.teach.messages.context.disable-except-some">
        <source>生效环境：{0} 个群</source>
        <target state="needs-translation">生效环境：{0} 个群</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; messages -&gt; context -&gt; disable-except-some</context>
        </context-group>
      </trans-unit>
      <trans-unit id="25999" resname="commands.teach.messages.context.disable-except-current-only">
        <source>生效环境：仅本群</source>
        <target state="needs-translation">生效环境：仅本群</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; messages -&gt; context -&gt; disable-except-current-only</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26001" resname="commands.teach.messages.context.disable-except-current-and-more">
        <source>生效环境：本群等 {0} 个群</source>
        <target state="needs-translation">生效环境：本群等 {0} 个群</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; messages -&gt; context -&gt; disable-except-current-and-more</context>
        </context-group>
      </trans-unit>
    </body>
  </file>
  <file id="1143" original="/[koishijs.koishi-plugin-dialogue] main/packages/core/src/locales/zh-CN.yml" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="26003" resname="commands.teach.description">
        <source>添加教学对话</source>
        <target state="needs-translation">添加教学对话</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26005" resname="commands.teach.options.search">
        <source>搜索已有问答</source>
        <target state="needs-translation">搜索已有问答</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; options -&gt; search
search</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26007" resname="commands.teach.options.page">
        <source>设置搜索结果的页码</source>
        <target state="needs-translation">设置搜索结果的页码</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; options -&gt; page</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26009" resname="commands.teach.options.autoMerge">
        <source>自动合并相同的问题和回答</source>
        <target state="needs-translation">自动合并相同的问题和回答</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; options -&gt; autoMerge</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26011" resname="commands.teach.options.recursive">
        <source>禁用递归查询</source>
        <target state="needs-translation">禁用递归查询</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; options -&gt; recursive</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26013" resname="commands.teach.options.pipe">
        <source>对每个搜索结果执行操作</source>
        <target state="needs-translation">对每个搜索结果执行操作</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; options -&gt; pipe</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26015" resname="commands.teach.options.review">
        <source>查看最近的修改</source>
        <target state="needs-translation">查看最近的修改</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; options -&gt; review
update</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26017" resname="commands.teach.options.revert">
        <source>回退最近的修改</source>
        <target state="needs-translation">回退最近的修改</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; options -&gt; revert</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26019" resname="commands.teach.options.includeLast">
        <source>包含最近的修改数量</source>
        <target state="needs-translation">包含最近的修改数量</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; options -&gt; includeLast</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26021" resname="commands.teach.options.excludeLast">
        <source>排除最近的修改数量</source>
        <target state="needs-translation">排除最近的修改数量</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; options -&gt; excludeLast</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26023" resname="commands.teach.options.target">
        <source>查看或修改已有问题</source>
        <target state="needs-translation">查看或修改已有问题</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; options -&gt; target</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26025" resname="commands.teach.options.remove">
        <source>彻底删除问答</source>
        <target state="needs-translation">彻底删除问答</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; options -&gt; remove</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26027" resname="commands.teach.options.ignoreHint">
        <source>忽略智能提示</source>
        <target state="needs-translation">忽略智能提示</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; options -&gt; ignoreHint
internal</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26029" resname="commands.teach.options.&quot;regexp.true&quot;">
        <source>使用正则表达式匹配</source>
        <target state="needs-translation">使用正则表达式匹配</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; options -&gt; regexp.true</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26031" resname="commands.teach.options.&quot;regexp.false&quot;">
        <source>取消使用正则表达式匹配</source>
        <target state="needs-translation">取消使用正则表达式匹配</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; options -&gt; regexp.false</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26033" resname="commands.teach.options.redirect">
        <source>重定向到其他问答</source>
        <target state="needs-translation">重定向到其他问答</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; options -&gt; redirect</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26035" resname="commands.teach.options.probabilityStrict">
        <source>设置问题的触发权重</source>
        <target state="needs-translation">设置问题的触发权重</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; options -&gt; probabilityStrict
probability</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26037" resname="commands.teach.options.probabilityAppellative">
        <source>设置被称呼时问题的触发权重</source>
        <target state="needs-translation">设置被称呼时问题的触发权重</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; options -&gt; probabilityAppellative</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26039" resname="commands.teach.messages.options-conflict">
        <source>选项 {0} 不能同时使用。</source>
        <target state="needs-translation">选项 {0} 不能同时使用。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; messages -&gt; options-conflict</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26041" resname="commands.teach.messages.too-many-arguments">
        <source>存在多余的参数，请检查指令语法或将含有空格或换行的问答置于一对引号内。</source>
        <target state="needs-translation">存在多余的参数，请检查指令语法或将含有空格或换行的问答置于一对引号内。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; messages -&gt; too-many-arguments</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26043" resname="commands.teach.messages.missing-question-or-answer">
        <source>缺少问题或回答，请检查指令语法。</source>
        <target state="needs-translation">缺少问题或回答，请检查指令语法。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; messages -&gt; missing-question-or-answer</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26045" resname="commands.teach.messages.prohibited-command">
        <source>禁止在教学回答中插值调用 {0} 指令。</source>
        <target state="needs-translation">禁止在教学回答中插值调用 {0} 指令。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; messages -&gt; prohibited-command</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26047" resname="commands.teach.messages.prohibited-cq-code">
        <source>问题必须是纯文本。</source>
        <target state="needs-translation">问题必须是纯文本。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; messages -&gt; prohibited-cq-code</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26049" resname="commands.teach.messages.illegal-regexp">
        <source>问题含有错误的或不支持的正则表达式语法。</source>
        <target state="needs-translation">问题含有错误的或不支持的正则表达式语法。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; messages -&gt; illegal-regexp</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26051" resname="commands.teach.messages.probably-modify-answer">
        <source>推测你想修改的是回答而不是问题。发送句号以修改回答，使用 -I 选项以忽略本提示。</source>
        <target state="needs-translation">推测你想修改的是回答而不是问题。发送句号以修改回答，使用 -I 选项以忽略本提示。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; messages -&gt; probably-modify-answer</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26053" resname="commands.teach.messages.probably-regexp">
        <source>推测你想{0}的问题是正则表达式。发送句号以添加 -x 选项，使用 -I 选项以忽略本提示。</source>
        <target state="needs-translation">推测你想{0}的问题是正则表达式。发送句号以添加 -x 选项，使用 -I 选项以忽略本提示。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; messages -&gt; probably-regexp</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26055" resname="commands.teach.messages.upload-failed">
        <source>上传资源时发生错误。</source>
        <target state="needs-translation">上传资源时发生错误。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; messages -&gt; upload-failed</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26057" resname="commands.teach.messages.redirections">
        <source>重定向到：</source>
        <target state="needs-translation">重定向到：</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; messages -&gt; redirections</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26059" resname="commands.teach.messages.create-success">
        <source>问答已添加，编号为 {0}。</source>
        <target state="needs-translation">问答已添加，编号为 {0}。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; messages -&gt; create-success</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26061" resname="commands.teach.messages.modify-success">
        <source>问答 {0} 已成功修改。</source>
        <target state="needs-translation">问答 {0} 已成功修改。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; messages -&gt; modify-success</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26063" resname="commands.teach.messages.remove-success">
        <source>问答 {0} 已成功删除。</source>
        <target state="needs-translation">问答 {0} 已成功删除。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; messages -&gt; remove-success</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26065" resname="commands.teach.messages.revert-success">
        <source>问答 {0} 已回退完成。</source>
        <target state="needs-translation">问答 {0} 已回退完成。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; messages -&gt; revert-success</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26067" resname="commands.teach.messages.unchanged">
        <source>问答 {0} 没有发生改动。</source>
        <target state="needs-translation">问答 {0} 没有发生改动。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; messages -&gt; unchanged</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26069" resname="commands.teach.messages.create-modified">
        <source>修改了已存在的问答，编号为 {0}。</source>
        <target state="needs-translation">修改了已存在的问答，编号为 {0}。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; messages -&gt; create-modified</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26071" resname="commands.teach.messages.create-unchanged">
        <source>问答已存在，编号为 {0}，如要修改请尝试使用 {1} 指令。</source>
        <target state="needs-translation">问答已存在，编号为 {0}，如要修改请尝试使用 {1} 指令。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; messages -&gt; create-unchanged</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26073" resname="commands.teach.messages.revert-unknown">
        <source>最近无人修改过编号为 {0} 的问答。</source>
        <target state="needs-translation">最近无人修改过编号为 {0} 的问答。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; messages -&gt; revert-unknown</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26075" resname="commands.teach.messages.modify-unknown">
        <source>没有搜索到编号为 {0} 的问答。</source>
        <target state="needs-translation">没有搜索到编号为 {0} 的问答。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; messages -&gt; modify-unknown</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26077" resname="commands.teach.messages.permission-denied">
        <source>问答 {0} 因权限过低无法{1}。</source>
        <target state="needs-translation">问答 {0} 因权限过低无法{1}。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; messages -&gt; permission-denied</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26079" resname="commands.teach.messages.low-permission">
        <source>该问答因权限过低无法添加。</source>
        <target state="needs-translation">该问答因权限过低无法添加。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; messages -&gt; low-permission</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26081" resname="commands.teach.messages.unknown-error">
        <source>{0}问答时遇到错误。</source>
        <target state="needs-translation">{0}问答时遇到错误。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; messages -&gt; unknown-error</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26083" resname="commands.teach.messages.no-history">
        <source>没有搜索到满足条件的教学操作。</source>
        <target state="needs-translation">没有搜索到满足条件的教学操作。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; messages -&gt; no-history</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26085" resname="commands.teach.messages.recent-history">
        <source>近期执行的教学操作有：</source>
        <target state="needs-translation">近期执行的教学操作有：</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; messages -&gt; recent-history</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26087" resname="commands.teach.messages.max-previews">
        <source>一次最多同时预览 {0} 个问答。</source>
        <target state="needs-translation">一次最多同时预览 {0} 个问答。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; messages -&gt; max-previews</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26089" resname="commands.teach.messages.review">
        <source>{0}于：&lt;i18n:time value={1}/&gt;前</source>
        <target state="needs-translation">{0}于：&lt;i18n:time value={1}/&gt;前</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; messages -&gt; review</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26091" resname="commands.teach.messages.detail-header">
        <source>问答 {0} 的{1}：</source>
        <target state="needs-translation">问答 {0} 的{1}：</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; messages -&gt; detail-header</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26093" resname="commands.teach.messages.detail">
        <source>{0}：{1}</source>
        <target state="needs-translation">{0}：{1}</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; messages -&gt; detail</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26095" resname="commands.teach.messages.entity.question">
        <source>问题</source>
        <target state="needs-translation">问题</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; messages -&gt; entity -&gt; question</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26097" resname="commands.teach.messages.entity.answer">
        <source>回答</source>
        <target state="needs-translation">回答</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; messages -&gt; entity -&gt; answer</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26099" resname="commands.teach.messages.entity.regexp">
        <source>正则</source>
        <target state="needs-translation">正则</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; messages -&gt; entity -&gt; regexp</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26101" resname="commands.teach.messages.entity.detail">
        <source>详细信息</source>
        <target state="needs-translation">详细信息</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; messages -&gt; entity -&gt; detail</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26103" resname="commands.teach.messages.entity.history">
        <source>历史版本</source>
        <target state="needs-translation">历史版本</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; messages -&gt; entity -&gt; history</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26105" resname="commands.teach.messages.operation.create">
        <source>添加</source>
        <target state="needs-translation">添加</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; messages -&gt; operation -&gt; create</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26107" resname="commands.teach.messages.operation.modify">
        <source>修改</source>
        <target state="needs-translation">修改</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; messages -&gt; operation -&gt; modify</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26109" resname="commands.teach.messages.operation.remove">
        <source>删除</source>
        <target state="needs-translation">删除</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; messages -&gt; operation -&gt; remove</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26111" resname="commands.teach.messages.operation.revert">
        <source>回退</source>
        <target state="needs-translation">回退</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; messages -&gt; operation -&gt; revert</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26113" resname="commands.teach.messages.search.count">
        <source>共 {0} 个</source>
        <target state="needs-translation">共 {0} 个</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; messages -&gt; search -&gt; count</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26115" resname="commands.teach.messages.search.empty">
        <source>没有搜索到任何问答。</source>
        <target state="needs-translation">没有搜索到任何问答。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; messages -&gt; search -&gt; empty</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26117" resname="commands.teach.messages.search.regexp">
        <source>正则</source>
        <target state="needs-translation">正则</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; messages -&gt; search -&gt; regexp</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26119" resname="commands.teach.messages.search.regexp-hint">
        <source>，请尝试使用正则表达式匹配</source>
        <target state="needs-translation">，请尝试使用正则表达式匹配</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; messages -&gt; search -&gt; regexp-hint</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26121" resname="commands.teach.messages.search.probability">
        <source>实际触发概率：</source>
        <target state="needs-translation">实际触发概率：</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; messages -&gt; search -&gt; probability</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26123" resname="commands.teach.messages.search.result-all">
        <source>全部问答如下{2}：</source>
        <target state="needs-translation">全部问答如下{2}：</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; messages -&gt; search -&gt; result-all</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26125" resname="commands.teach.messages.search.result-answer">
        <source>回答“{1}”的问题如下{2}：</source>
        <target state="needs-translation">回答“{1}”的问题如下{2}：</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; messages -&gt; search -&gt; result-answer</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26127" resname="commands.teach.messages.search.result-question">
        <source>问题“{0}”的回答如下{2}：</source>
        <target state="needs-translation">问题“{0}”的回答如下{2}：</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; messages -&gt; search -&gt; result-question</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26129" resname="commands.teach.messages.search.result-dialogue">
        <source>“{0}”“{1}”匹配的回答如下{2}：</source>
        <target state="needs-translation">“{0}”“{1}”匹配的回答如下{2}：</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; messages -&gt; search -&gt; result-dialogue</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26131" resname="commands.teach.messages.search.result-regexp-answer">
        <source>回答正则表达式“{1}”的搜索结果如下{2}：</source>
        <target state="needs-translation">回答正则表达式“{1}”的搜索结果如下{2}：</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; messages -&gt; search -&gt; result-regexp-answer</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26133" resname="commands.teach.messages.search.result-regexp-question">
        <source>问题正则表达式“{0}”的搜索结果如下{2}：</source>
        <target state="needs-translation">问题正则表达式“{0}”的搜索结果如下{2}：</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; messages -&gt; search -&gt; result-regexp-question</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26135" resname="commands.teach.messages.search.result-regexp-dialogue">
        <source>问答正则表达式“{0}”“{1}”的搜索结果如下{2}：</source>
        <target state="needs-translation">问答正则表达式“{0}”“{1}”的搜索结果如下{2}：</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; messages -&gt; search -&gt; result-regexp-dialogue</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26137" resname="commands.teach.messages.search.empty-all">
        <source>没有搜索到任何回答，尝试切换到其他环境。</source>
        <target state="needs-translation">没有搜索到任何回答，尝试切换到其他环境。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; messages -&gt; search -&gt; empty-all</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26139" resname="commands.teach.messages.search.empty-answer">
        <source>没有搜索到回答“{1}”{2}。</source>
        <target state="needs-translation">没有搜索到回答“{1}”{2}。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; messages -&gt; search -&gt; empty-answer</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26141" resname="commands.teach.messages.search.empty-question">
        <source>没有搜索到问题“{0}”{2}。</source>
        <target state="needs-translation">没有搜索到问题“{0}”{2}。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; messages -&gt; search -&gt; empty-question</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26143" resname="commands.teach.messages.search.empty-dialogue">
        <source>没有搜索到问答“{0}”“{1}”{2}。</source>
        <target state="needs-translation">没有搜索到问答“{0}”“{1}”{2}。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; messages -&gt; search -&gt; empty-dialogue</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26145" resname="commands.teach.messages.search.empty-regexp-answer">
        <source>没有搜索到含有正则表达式“{1}”的回答。</source>
        <target state="needs-translation">没有搜索到含有正则表达式“{1}”的回答。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; messages -&gt; search -&gt; empty-regexp-answer</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26147" resname="commands.teach.messages.search.empty-regexp-question">
        <source>没有搜索到含有正则表达式“{0}”的问题。</source>
        <target state="needs-translation">没有搜索到含有正则表达式“{0}”的问题。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; messages -&gt; search -&gt; empty-regexp-question</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26149" resname="commands.teach.messages.search.empty-regexp-dialogue">
        <source>没有搜索到含有正则表达式“{0}”“{1}”的问答。</source>
        <target state="needs-translation">没有搜索到含有正则表达式“{0}”“{1}”的问答。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; messages -&gt; search -&gt; empty-regexp-dialogue</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26151" resname="commands.teach.messages.search.page-hint">
        <source> (第 {0}/{1} 页)</source>
        <target state="needs-translation"> (第 {0}/{1} 页)</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; messages -&gt; search -&gt; page-hint</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26153" resname="commands.teach.messages.search.page-footer">
        <source>可以使用 /+页码 以调整输出的条目页数。</source>
        <target state="needs-translation">可以使用 /+页码 以调整输出的条目页数。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; messages -&gt; search -&gt; page-footer</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26155" resname="commands.teach.messages.probability.detail">
        <source>触发权重：p={probS}, P={probA}</source>
        <target state="needs-translation">触发权重：p={probS}, P={probA}</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; messages -&gt; probability -&gt; detail</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26157" resname="commands.teach.messages.probability.zero-to-one">
        <source>应为不超过 1 的正数。</source>
        <target state="needs-translation">应为不超过 1 的正数。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; messages -&gt; probability -&gt; zero-to-one</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26159" resname="commands.dialogue.description">
        <source>触发教学对话</source>
        <target state="needs-translation">触发教学对话</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; dialogue -&gt; description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26161" resname="commands.dialogue.stats.messages.output">
        <source>共收录了 {questions} 个问题和 {dialogues} 个回答。</source>
        <target state="needs-translation">共收录了 {questions} 个问题和 {dialogues} 个回答。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; dialogue -&gt; stats -&gt; messages -&gt; output</context>
        </context-group>
      </trans-unit>
    </body>
  </file>
  <file id="1145" original="/[koishijs.koishi-plugin-dialogue] main/packages/flow/src/locales/zh-CN.yml" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="26163" resname="commands.teach.options.setPred">
        <source>设置前置问题</source>
        <target state="needs-translation">设置前置问题</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; options -&gt; setPred</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26165" resname="commands.teach.options.addPred">
        <source>添加前置问题</source>
        <target state="needs-translation">添加前置问题</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; options -&gt; addPred</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26167" resname="commands.teach.options.setSucc">
        <source>设置后置问题</source>
        <target state="needs-translation">设置后置问题</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; options -&gt; setSucc</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26169" resname="commands.teach.options.addSucc">
        <source>添加后置问题</source>
        <target state="needs-translation">添加后置问题</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; options -&gt; addSucc</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26171" resname="commands.teach.options.createSuccessor">
        <source>创建并添加后继问答</source>
        <target state="needs-translation">创建并添加后继问答</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; options -&gt; createSuccessor</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26173" resname="commands.teach.options.successorTimeout">
        <source>设置允许触发后继的时间</source>
        <target state="needs-translation">设置允许触发后继的时间</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; options -&gt; successorTimeout</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26175" resname="commands.teach.options.&quot;context.true&quot;">
        <source>允许后继问答被任何人触发</source>
        <target state="needs-translation">允许后继问答被任何人触发</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; options -&gt; context.true</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26177" resname="commands.teach.options.&quot;context.false&quot;">
        <source>后继问答只能被同一人触发</source>
        <target state="needs-translation">后继问答只能被同一人触发</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; options -&gt; context.false</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26179" resname="commands.teach.messages.flowgraph.not-found">
        <source>没有搜索到任何问答。</source>
        <target state="needs-translation">没有搜索到任何问答。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; messages -&gt; flowgraph -&gt; not-found</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26181" resname="commands.teach.messages.flowgraph.detail.context-mode">
        <source>后继问答可以被上下文内任何人触发</source>
        <target state="needs-translation">后继问答可以被上下文内任何人触发</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; messages -&gt; flowgraph -&gt; detail -&gt; context-mode</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26183" resname="commands.teach.messages.flowgraph.detail.timeout">
        <source>可触发后继时间：&lt;i18n:time value={successorTimeout}/&gt;</source>
        <target state="needs-translation">可触发后继时间：&lt;i18n:time value={successorTimeout}/&gt;</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; messages -&gt; flowgraph -&gt; detail -&gt; timeout</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26185" resname="commands.teach.messages.flowgraph.detail.predecessors">
        <source>前置问答：</source>
        <target state="needs-translation">前置问答：</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; messages -&gt; flowgraph -&gt; detail -&gt; predecessors</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26187" resname="commands.teach.messages.flowgraph.detail.successors">
        <source>后继问答：</source>
        <target state="needs-translation">后继问答：</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; messages -&gt; flowgraph -&gt; detail -&gt; successors</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26189" resname="commands.teach.messages.flowgraph.abstract.has-pred">
        <source>存在前置</source>
        <target state="needs-translation">存在前置</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; messages -&gt; flowgraph -&gt; abstract -&gt; has-pred</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26191" resname="commands.teach.messages.flowgraph.abstract.context-mode">
        <source>上下文后置</source>
        <target state="needs-translation">上下文后置</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; messages -&gt; flowgraph -&gt; abstract -&gt; context-mode</context>
        </context-group>
      </trans-unit>
    </body>
  </file>
  <file id="1147" original="/[koishijs.koishi-plugin-dialogue] main/packages/time/src/locales/zh-CN.yml" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="26193" resname="commands.teach.options.startTime">
        <source>起始时间</source>
        <target state="needs-translation">起始时间</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; options -&gt; startTime</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26195" resname="commands.teach.options.endTime">
        <source>结束时间</source>
        <target state="needs-translation">结束时间</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; options -&gt; endTime</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26197" resname="commands.teach.messages.time.detail">
        <source>触发时段：</source>
        <target state="needs-translation">触发时段：</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; messages -&gt; time -&gt; detail</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26199" resname="commands.teach.messages.time.invalid-input">
        <source>请输入正确的时间。</source>
        <target state="needs-translation">请输入正确的时间。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; teach -&gt; messages -&gt; time -&gt; invalid-input</context>
        </context-group>
      </trans-unit>
    </body>
  </file>
  <file id="1149" original="/[koishijs.koishi-plugin-dialogue] main/docs/zh-CN/config.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="26201">
        <source>配置项</source>
        <target state="needs-translation">配置项</target>
        <context-group purpose="information">
          <context context-type="source">Headline 1&#13;
XPath: /h1</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26203">
        <source>prefix</source>
        <target state="needs-translation">prefix</target>
        <context-group purpose="information">
          <context context-type="source">Headline 2&#13;
XPath: /h2[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26205">
        <source>类型: &lt;code&gt;string&lt;/code&gt;</source>
        <target state="needs-translation">类型: &lt;code&gt;string&lt;/code&gt;</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[1]/li[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26207">
        <source>默认值: &lt;code&gt;'#'&lt;/code&gt;</source>
        <target state="needs-translation">默认值: &lt;code&gt;'#'&lt;/code&gt;</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[1]/li[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26209">
        <source>教学指令的前缀。</source>
        <target state="needs-translation">教学指令的前缀。</target>
        <context-group purpose="information">
          <context context-type="source">Paragraph text&#13;
XPath: /p[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26211">
        <source>authority</source>
        <target state="needs-translation">authority</target>
        <context-group purpose="information">
          <context context-type="source">Headline 2&#13;
XPath: /h2[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26213">
        <source>类型: &lt;code&gt;AuthorityConfig&lt;/code&gt;</source>
        <target state="needs-translation">类型: &lt;code&gt;AuthorityConfig&lt;/code&gt;</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[2]/li[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26215">
        <source>默认值: &lt;code&gt;{}&lt;/code&gt;</source>
        <target state="needs-translation">默认值: &lt;code&gt;{}&lt;/code&gt;</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[2]/li[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26217">
        <source>教学系统各功能的权限设置。</source>
        <target state="needs-translation">教学系统各功能的权限设置。</target>
        <context-group purpose="information">
          <context context-type="source">Paragraph text&#13;
XPath: /p[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26219">
        <source>interface AuthorityConfig {
  base?: number     // 可访问教学系统，默认值为 2
  admin?: number    // 可修改非自己创建的问答，默认值为 3
  context?: number  // 可修改上下文设置，默认值为 3
  frozen?: number   // 可修改锁定的问答，默认值为 4
  regExp?: number   // 可使用正则表达式，默认值为 3
  writer?: number   // 可设置作者或匿名，默认值为 2
}</source>
        <target state="needs-translation">interface AuthorityConfig {
  base?: number     // 可访问教学系统，默认值为 2
  admin?: number    // 可修改非自己创建的问答，默认值为 3
  context?: number  // 可修改上下文设置，默认值为 3
  frozen?: number   // 可修改锁定的问答，默认值为 4
  regExp?: number   // 可使用正则表达式，默认值为 3
  writer?: number   // 可设置作者或匿名，默认值为 2
}</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /pre[1]/code</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26221">
        <source>historyTimeout</source>
        <target state="needs-translation">historyTimeout</target>
        <context-group purpose="information">
          <context context-type="source">Headline 2&#13;
XPath: /h2[3]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26223">
        <source>类型: &lt;code&gt;number&lt;/code&gt;</source>
        <target state="needs-translation">类型: &lt;code&gt;number&lt;/code&gt;</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[3]/li[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26225">
        <source>默认值: &lt;code&gt;60000&lt;/code&gt;</source>
        <target state="needs-translation">默认值: &lt;code&gt;60000&lt;/code&gt;</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[3]/li[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26227">
        <source>教学记录的保存时长，单位为毫秒。</source>
        <target state="needs-translation">教学记录的保存时长，单位为毫秒。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[3]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26229">
        <source>参见 &lt;a href=&quot;./#查询近期操作&quot;&gt;查询近期操作&lt;/a&gt;。</source>
        <target state="needs-translation">参见 &lt;a href=&quot;./#查询近期操作&quot;&gt;查询近期操作&lt;/a&gt;。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[3]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26231">
        <source>nickname</source>
        <target state="needs-translation">nickname</target>
        <context-group purpose="information">
          <context context-type="source">Headline 2&#13;
XPath: /h2[4]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26233">
        <source>类型: &lt;code&gt;string | string[]&lt;/code&gt;</source>
        <target state="needs-translation">类型: &lt;code&gt;string | string[]&lt;/code&gt;</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[4]/li[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26235">
        <source>默认值: &lt;a href=&quot;https://koishi.chat/api/core/app.md#options-nickname&quot;&gt;&lt;code&gt;app.config.nickname&lt;/code&gt;&lt;/a&gt;</source>
        <target state="needs-translation">默认值: &lt;a href=&quot;https://koishi.chat/api/core/app.md#options-nickname&quot;&gt;&lt;code&gt;app.config.nickname&lt;/code&gt;&lt;/a&gt;</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[4]/li[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26237">
        <source>问答中使用的昵称。</source>
        <target state="needs-translation">问答中使用的昵称。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[4]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26239">
        <source>参见 &lt;a href=&quot;./prob.md#称呼匹配&quot;&gt;称呼匹配&lt;/a&gt;。</source>
        <target state="needs-translation">参见 &lt;a href=&quot;./prob.md#称呼匹配&quot;&gt;称呼匹配&lt;/a&gt;。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[4]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26241">
        <source>appellationTimeout</source>
        <target state="needs-translation">appellationTimeout</target>
        <context-group purpose="information">
          <context context-type="source">Headline 2&#13;
XPath: /h2[5]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26243">
        <source>类型: &lt;code&gt;number&lt;/code&gt;</source>
        <target state="needs-translation">类型: &lt;code&gt;number&lt;/code&gt;</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[5]/li[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26245">
        <source>默认值: &lt;code&gt;60000&lt;/code&gt;</source>
        <target state="needs-translation">默认值: &lt;code&gt;60000&lt;/code&gt;</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[5]/li[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26247">
        <source>&lt;a href=&quot;./prob.md#称呼本身作为问题触发&quot;&gt;称呼本身作为问题触发&lt;/a&gt; 的后续效果持续时间，单位为毫秒。</source>
        <target state="needs-translation">&lt;a href=&quot;./prob.md#称呼本身作为问题触发&quot;&gt;称呼本身作为问题触发&lt;/a&gt; 的后续效果持续时间，单位为毫秒。</target>
        <context-group purpose="information">
          <context context-type="source">Paragraph text&#13;
XPath: /p[5]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26249">
        <source>maxRedirections</source>
        <target state="needs-translation">maxRedirections</target>
        <context-group purpose="information">
          <context context-type="source">Headline 2&#13;
XPath: /h2[6]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26251">
        <source>类型: &lt;code&gt;number&lt;/code&gt;</source>
        <target state="needs-translation">类型: &lt;code&gt;number&lt;/code&gt;</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[6]/li[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26253">
        <source>默认值: &lt;code&gt;3&lt;/code&gt;</source>
        <target state="needs-translation">默认值: &lt;code&gt;3&lt;/code&gt;</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[6]/li[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26255">
        <source>&lt;a href=&quot;./interp.md#问题重定向&quot;&gt;问题重定向&lt;/a&gt; 的次数上限。</source>
        <target state="needs-translation">&lt;a href=&quot;./interp.md#问题重定向&quot;&gt;问题重定向&lt;/a&gt; 的次数上限。</target>
        <context-group purpose="information">
          <context context-type="source">Paragraph text&#13;
XPath: /p[6]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26257">
        <source>previewDelay</source>
        <target state="needs-translation">previewDelay</target>
        <context-group purpose="information">
          <context context-type="source">Headline 2&#13;
XPath: /h2[7]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26259">
        <source>类型: &lt;code&gt;number&lt;/code&gt;</source>
        <target state="needs-translation">类型: &lt;code&gt;number&lt;/code&gt;</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[7]/li[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26261">
        <source>默认值: &lt;code&gt;500&lt;/code&gt;</source>
        <target state="needs-translation">默认值: &lt;code&gt;500&lt;/code&gt;</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[7]/li[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26263">
        <source>显示两个问答之间的时间间隔。</source>
        <target state="needs-translation">显示两个问答之间的时间间隔。</target>
        <context-group purpose="information">
          <context context-type="source">Paragraph text&#13;
XPath: /p[7]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26265">
        <source>maxPreviews</source>
        <target state="needs-translation">maxPreviews</target>
        <context-group purpose="information">
          <context context-type="source">Headline 2&#13;
XPath: /h2[8]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26267">
        <source>类型: &lt;code&gt;number&lt;/code&gt;</source>
        <target state="needs-translation">类型: &lt;code&gt;number&lt;/code&gt;</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[8]/li[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26269">
        <source>默认值: &lt;code&gt;10&lt;/code&gt;</source>
        <target state="needs-translation">默认值: &lt;code&gt;10&lt;/code&gt;</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[8]/li[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26271">
        <source>同时查看的最大问答数量。</source>
        <target state="needs-translation">同时查看的最大问答数量。</target>
        <context-group purpose="information">
          <context context-type="source">Paragraph text&#13;
XPath: /p[8]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26273">
        <source>itemsPerPage</source>
        <target state="needs-translation">itemsPerPage</target>
        <context-group purpose="information">
          <context context-type="source">Headline 2&#13;
XPath: /h2[9]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26275">
        <source>类型: &lt;code&gt;number&lt;/code&gt;</source>
        <target state="needs-translation">类型: &lt;code&gt;number&lt;/code&gt;</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[9]/li</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26277">
        <source>mergeThreshold</source>
        <target state="needs-translation">mergeThreshold</target>
        <context-group purpose="information">
          <context context-type="source">Headline 2&#13;
XPath: /h2[10]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26279">
        <source>类型: &lt;code&gt;number&lt;/code&gt;</source>
        <target state="needs-translation">类型: &lt;code&gt;number&lt;/code&gt;</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[10]/li</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26281">
        <source>maxAnswerLength</source>
        <target state="needs-translation">maxAnswerLength</target>
        <context-group purpose="information">
          <context context-type="source">Headline 2&#13;
XPath: /h2[11]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26283">
        <source>类型: &lt;code&gt;number&lt;/code&gt;</source>
        <target state="needs-translation">类型: &lt;code&gt;number&lt;/code&gt;</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[11]/li</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26285">
        <source>preventLoop</source>
        <target state="needs-translation">preventLoop</target>
        <context-group purpose="information">
          <context context-type="source">Headline 2&#13;
XPath: /h2[12]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26287">
        <source>类型: &lt;code&gt;number | LoopConfig | LoopConfig[]&lt;/code&gt;</source>
        <target state="needs-translation">类型: &lt;code&gt;number | LoopConfig | LoopConfig[]&lt;/code&gt;</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[12]/li</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26289">
        <source>控制防循环行为，参见 &lt;a href=&quot;./misc.md#防刷屏机制&quot;&gt;防刷屏机制&lt;/a&gt;。</source>
        <target state="needs-translation">控制防循环行为，参见 &lt;a href=&quot;./misc.md#防刷屏机制&quot;&gt;防刷屏机制&lt;/a&gt;。</target>
        <context-group purpose="information">
          <context context-type="source">Paragraph text&#13;
XPath: /p[9]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26291">
        <source>export interface LoopConfig {
  participants: number
  length: number
  debounce?: number
}</source>
        <target state="needs-translation">export interface LoopConfig {
  participants: number
  length: number
  debounce?: number
}</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /pre[2]/code</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26293">
        <source>throttle</source>
        <target state="needs-translation">throttle</target>
        <context-group purpose="information">
          <context context-type="source">Headline 2&#13;
XPath: /h2[13]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26295">
        <source>类型: &lt;code&gt;ThrottleConfig | ThrottleConfig[]&lt;/code&gt;</source>
        <target state="needs-translation">类型: &lt;code&gt;ThrottleConfig | ThrottleConfig[]&lt;/code&gt;</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[13]/li</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26297">
        <source>控制节流行为，参见 &lt;a href=&quot;./misc.md#防刷屏机制&quot;&gt;防刷屏机制&lt;/a&gt;。</source>
        <target state="needs-translation">控制节流行为，参见 &lt;a href=&quot;./misc.md#防刷屏机制&quot;&gt;防刷屏机制&lt;/a&gt;。</target>
        <context-group purpose="information">
          <context context-type="source">Paragraph text&#13;
XPath: /p[10]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26299">
        <source>export interface ThrottleConfig {
  interval: number
  responses: number
}</source>
        <target state="needs-translation">export interface ThrottleConfig {
  interval: number
  responses: number
}</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /pre[3]/code</context>
        </context-group>
      </trans-unit>
    </body>
  </file>
  <file id="1151" original="/[koishijs.koishi-plugin-dialogue] main/docs/zh-CN/context.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="26301">
        <source>上下文机制</source>
        <target state="needs-translation">上下文机制</target>
        <context-group purpose="information">
          <context context-type="source">Headline 1&#13;
XPath: /h1</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26303">
        <source>::: warning 提示&lt;br x-id=&quot;2&quot; /&gt;
-D, -E, -g 三个选项的最低使用权限为 3 级。</source>
        <target state="needs-translation">::: warning 提示&lt;br x-id=&quot;2&quot; /&gt;
-D, -E, -g 三个选项的最低使用权限为 3 级。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26305">
        <source>你可以通过配置 &lt;a href=&quot;./config.md#authority&quot;&gt;authority.context&lt;/a&gt; 修改这个行为。</source>
        <target state="needs-translation">你可以通过配置 &lt;a href=&quot;./config.md#authority&quot;&gt;authority.context&lt;/a&gt; 修改这个行为。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26307" translate="no">
        <source>:::</source>
        <target>:::</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26309">
        <source>Koishi 的所有问答都是被存储在一起的，但是我们往往需要让某些问题在特定的频道生效，同时让另一些问题在所有频道生效。</source>
        <target state="needs-translation">Koishi 的所有问答都是被存储在一起的，但是我们往往需要让某些问题在特定的频道生效，同时让另一些问题在所有频道生效。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26311">
        <source>上下文机制就是为了解决这类问题而出现的。</source>
        <target state="needs-translation">上下文机制就是为了解决这类问题而出现的。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26313">
        <source>基本用法</source>
        <target state="needs-translation">基本用法</target>
        <context-group purpose="information">
          <context context-type="source">Headline 2&#13;
XPath: /h2[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26315">
        <source>当修改现有的问答时，你可以通过以下参数完成相应的设置：</source>
        <target state="needs-translation">当修改现有的问答时，你可以通过以下参数完成相应的设置：</target>
        <context-group purpose="information">
          <context context-type="source">Paragraph text&#13;
XPath: /p[3]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26317">
        <source>&lt;code&gt;-e&lt;/code&gt;：在已有基础上允许当前频道</source>
        <target state="needs-translation">&lt;code&gt;-e&lt;/code&gt;：在已有基础上允许当前频道</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[1]/li[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26319">
        <source>&lt;code&gt;-E&lt;/code&gt;：设置为全局允许</source>
        <target state="needs-translation">&lt;code&gt;-E&lt;/code&gt;：设置为全局允许</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[1]/li[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26321">
        <source>&lt;code&gt;-d&lt;/code&gt;：在已有基础上禁止当前频道</source>
        <target state="needs-translation">&lt;code&gt;-d&lt;/code&gt;：在已有基础上禁止当前频道</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[1]/li[3]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26323">
        <source>&lt;code&gt;-D&lt;/code&gt;：设置为全局禁止</source>
        <target state="needs-translation">&lt;code&gt;-D&lt;/code&gt;：设置为全局禁止</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[1]/li[4]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26325">
        <source>&lt;code&gt;-De&lt;/code&gt;：设置为只允许当前频道</source>
        <target state="needs-translation">&lt;code&gt;-De&lt;/code&gt;：设置为只允许当前频道</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[1]/li[5]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26327">
        <source>&lt;code&gt;-Ed&lt;/code&gt;：设置为只禁止当前频道</source>
        <target state="needs-translation">&lt;code&gt;-Ed&lt;/code&gt;：设置为只禁止当前频道</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[1]/li[6]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26329">
        <source>如果你想控制一个一般的频道而不是当前频道，你可以使用下面的语法：</source>
        <target state="needs-translation">如果你想控制一个一般的频道而不是当前频道，你可以使用下面的语法：</target>
        <context-group purpose="information">
          <context context-type="source">Paragraph text&#13;
XPath: /p[4]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26331">
        <source>&lt;code&gt;-eg 123&lt;/code&gt;：在已有基础上允许频道 123</source>
        <target state="needs-translation">&lt;code&gt;-eg 123&lt;/code&gt;：在已有基础上允许频道 123</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[2]/li[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26333">
        <source>&lt;code&gt;-Eg 123&lt;/code&gt;：设置为全局允许，除了频道 123</source>
        <target state="needs-translation">&lt;code&gt;-Eg 123&lt;/code&gt;：设置为全局允许，除了频道 123</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[2]/li[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26335">
        <source>&lt;code&gt;-dg 123&lt;/code&gt;：在已有基础上禁止频道 123</source>
        <target state="needs-translation">&lt;code&gt;-dg 123&lt;/code&gt;：在已有基础上禁止频道 123</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[2]/li[3]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26337">
        <source>&lt;code&gt;-Dg 123&lt;/code&gt;：设置为全局禁止，除了频道 123</source>
        <target state="needs-translation">&lt;code&gt;-Dg 123&lt;/code&gt;：设置为全局禁止，除了频道 123</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[2]/li[4]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26339">
        <source>这里的 &lt;code&gt;-g&lt;/code&gt; 也可以替换成由半角逗号隔开的多个&lt;strong x-id=&quot;1&quot;&gt;频道标识符&lt;/strong&gt;（例如 QQ 中的&lt;strong x-id=&quot;1&quot;&gt;群号&lt;/strong&gt;，开黑啦中的 &lt;strong x-id=&quot;1&quot;&gt;#频道名&lt;/strong&gt;），效果类似不再赘述。</source>
        <target state="needs-translation">这里的 &lt;code&gt;-g&lt;/code&gt; 也可以替换成由半角逗号隔开的多个&lt;strong x-id=&quot;1&quot;&gt;频道标识符&lt;/strong&gt;（例如 QQ 中的&lt;strong x-id=&quot;1&quot;&gt;群号&lt;/strong&gt;，开黑啦中的 &lt;strong x-id=&quot;1&quot;&gt;#频道名&lt;/strong&gt;），效果类似不再赘述。</target>
        <context-group purpose="information">
          <context context-type="source">Paragraph text&#13;
XPath: /p[5]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26341">
        <source>最后，如果不进行任何设置则不会修改原问答的上下文。</source>
        <target state="needs-translation">最后，如果不进行任何设置则不会修改原问答的上下文。</target>
        <context-group purpose="information">
          <context context-type="source">Paragraph text&#13;
XPath: /p[6]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26343">
        <source>当添加新的问答时，默认情况下的行为相当于 &lt;code&gt;-e&lt;/code&gt;，即如果原问答不存在，则创建一个只允许当前频道的新问答，否则在原问答的基础上额外允许当前频道。</source>
        <target state="needs-translation">当添加新的问答时，默认情况下的行为相当于 &lt;code&gt;-e&lt;/code&gt;，即如果原问答不存在，则创建一个只允许当前频道的新问答，否则在原问答的基础上额外允许当前频道。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[7]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26345">
        <source>你也可以手动覆盖这个默认行为，例如 &lt;code&gt;# 问题 回答 -E&lt;/code&gt; 的效果是添加一个全局允许的问答。</source>
        <target state="needs-translation">你也可以手动覆盖这个默认行为，例如 &lt;code&gt;# 问题 回答 -E&lt;/code&gt; 的效果是添加一个全局允许的问答。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[7]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26347">
        <source>在搜索问答时，上面的语法依然有效，不过意义不同：</source>
        <target state="needs-translation">在搜索问答时，上面的语法依然有效，不过意义不同：</target>
        <context-group purpose="information">
          <context context-type="source">Paragraph text&#13;
XPath: /p[8]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26349">
        <source>&lt;code&gt;-e&lt;/code&gt;：匹配允许当前频道的问答</source>
        <target state="needs-translation">&lt;code&gt;-e&lt;/code&gt;：匹配允许当前频道的问答</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[3]/li[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26351">
        <source>&lt;code&gt;-E&lt;/code&gt;：匹配全局允许的问答</source>
        <target state="needs-translation">&lt;code&gt;-E&lt;/code&gt;：匹配全局允许的问答</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[3]/li[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26353">
        <source>&lt;code&gt;-d&lt;/code&gt;：匹配禁止当前频道的问答</source>
        <target state="needs-translation">&lt;code&gt;-d&lt;/code&gt;：匹配禁止当前频道的问答</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[3]/li[3]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26355">
        <source>&lt;code&gt;-D&lt;/code&gt;：匹配全局禁止的问答</source>
        <target state="needs-translation">&lt;code&gt;-D&lt;/code&gt;：匹配全局禁止的问答</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[3]/li[4]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26357">
        <source>&lt;code&gt;-G&lt;/code&gt;：忽略上下文机制</source>
        <target state="needs-translation">&lt;code&gt;-G&lt;/code&gt;：忽略上下文机制</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[3]/li[5]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26359">
        <source>此时默认情况下的行为仍然相当于 &lt;code&gt;-e&lt;/code&gt;。</source>
        <target state="needs-translation">此时默认情况下的行为仍然相当于 &lt;code&gt;-e&lt;/code&gt;。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[9]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26361">
        <source>如果你希望搜索所有的问答，忽略上下文造成的影响，可以使用 &lt;code&gt;-G&lt;/code&gt; 参数。</source>
        <target state="needs-translation">如果你希望搜索所有的问答，忽略上下文造成的影响，可以使用 &lt;code&gt;-G&lt;/code&gt; 参数。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[9]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26363">
        <source>此外，在私聊时，由于没有“频道”的概念，因此 &lt;code&gt;-e&lt;/code&gt; 的默认行为将失效，你需要手动指定（或忽略）上下文。</source>
        <target state="needs-translation">此外，在私聊时，由于没有“频道”的概念，因此 &lt;code&gt;-e&lt;/code&gt; 的默认行为将失效，你需要手动指定（或忽略）上下文。</target>
        <context-group purpose="information">
          <context context-type="source">Paragraph text&#13;
XPath: /p[10]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26365">
        <source>深入原理</source>
        <target state="needs-translation">深入原理</target>
        <context-group purpose="information">
          <context context-type="source">Headline 2&#13;
XPath: /h2[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26367">
        <source>::: tip&lt;br x-id=&quot;2&quot; /&gt;
本节将介绍上述上下文机制的内部原理。</source>
        <target state="needs-translation">::: tip&lt;br x-id=&quot;2&quot; /&gt;
本节将介绍上述上下文机制的内部原理。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[11]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26369">
        <source>如果对此不感兴趣可以跳过。</source>
        <target state="needs-translation">如果对此不感兴趣可以跳过。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[11]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26371" translate="no">
        <source>:::</source>
        <target>:::</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[11]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26373">
        <source>在 Koishi 的教学系统中，任何问答的上下文都可以被理解为两个参数：groups 和 reversed。</source>
        <target state="needs-translation">在 Koishi 的教学系统中，任何问答的上下文都可以被理解为两个参数：groups 和 reversed。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[12]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26375">
        <source>前者表示&lt;strong x-id=&quot;1&quot;&gt;生效或者不生效的频道列表&lt;/strong&gt;，而后者表示&lt;strong x-id=&quot;1&quot;&gt;是否对匹配结果取反&lt;/strong&gt;。</source>
        <target state="needs-translation">前者表示&lt;strong x-id=&quot;1&quot;&gt;生效或者不生效的频道列表&lt;/strong&gt;，而后者表示&lt;strong x-id=&quot;1&quot;&gt;是否对匹配结果取反&lt;/strong&gt;。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[12]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26377">
        <source>举个例子，如果一个问答只允许两个频道 123, 456，则其对应的 groups 为 &lt;code&gt;123,456&lt;/code&gt;，reversed 为假。</source>
        <target state="needs-translation">举个例子，如果一个问答只允许两个频道 123, 456，则其对应的 groups 为 &lt;code&gt;123,456&lt;/code&gt;，reversed 为假。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[12]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26379">
        <source>如果一个问答全局允许，则其对应的 groups 为空，reversed 为真。</source>
        <target state="needs-translation">如果一个问答全局允许，则其对应的 groups 为空，reversed 为真。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[12]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26381">
        <source>而当我们需要修改或者查询问答时，还涉及第三个参数 partial。</source>
        <target state="needs-translation">而当我们需要修改或者查询问答时，还涉及第三个参数 partial。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[13]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26383">
        <source>这个参数表示&lt;strong x-id=&quot;1&quot;&gt;是否部分匹配&lt;/strong&gt;。</source>
        <target state="needs-translation">这个参数表示&lt;strong x-id=&quot;1&quot;&gt;是否部分匹配&lt;/strong&gt;。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[13]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26385">
        <source>当 partial 为真时，对搜索请求进行完全匹配，对修改请求进行覆盖操作；当 partial 为假时，对搜索请求进行部分匹配，对修改请求进行调整操作。</source>
        <target state="needs-translation">当 partial 为真时，对搜索请求进行完全匹配，对修改请求进行覆盖操作；当 partial 为假时，对搜索请求进行部分匹配，对修改请求进行调整操作。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[13]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26387">
        <source>例如，如果原问答的 groups 为 &lt;code&gt;123,456&lt;/code&gt;，reversed 为假（即只允许 123, 456 两个频道），修改请求的 groups 为 &lt;code&gt;456,789&lt;/code&gt;，reversed 为真，partial 为真（即在已有的基础上禁用 456, 789 两个频道），那么得到的新回答的 groups 为 &lt;code&gt;123&lt;/code&gt;，reversed 为假（即只允许 123 一个频道），这与正常的思维相一致。</source>
        <target state="needs-translation">例如，如果原问答的 groups 为 &lt;code&gt;123,456&lt;/code&gt;，reversed 为假（即只允许 123, 456 两个频道），修改请求的 groups 为 &lt;code&gt;456,789&lt;/code&gt;，reversed 为真，partial 为真（即在已有的基础上禁用 456, 789 两个频道），那么得到的新回答的 groups 为 &lt;code&gt;123&lt;/code&gt;，reversed 为假（即只允许 123 一个频道），这与正常的思维相一致。</target>
        <context-group purpose="information">
          <context context-type="source">Paragraph text&#13;
XPath: /p[14]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26389">
        <source>现在我们已经可以理解，上面介绍的 &lt;code&gt;-g&lt;/code&gt; 选项，表达的就是 groups 的含义。</source>
        <target state="needs-translation">现在我们已经可以理解，上面介绍的 &lt;code&gt;-g&lt;/code&gt; 选项，表达的就是 groups 的含义。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[15]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26391">
        <source>但是我们在大部分情况下都不需要使用这个选项，因为这个选项的默认值足以覆盖绝大部分需求：</source>
        <target state="needs-translation">但是我们在大部分情况下都不需要使用这个选项，因为这个选项的默认值足以覆盖绝大部分需求：</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[15]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26393">
        <source>选项</source>
        <target state="needs-translation">选项</target>
        <context-group purpose="information">
          <context context-type="source">Table Header&#13;
XPath: /table/thead/tr/th[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26395">
        <source>reversed</source>
        <target state="needs-translation">reversed</target>
        <context-group purpose="information">
          <context context-type="source">Table Header&#13;
XPath: /table/thead/tr/th[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26397">
        <source>partial</source>
        <target state="needs-translation">partial</target>
        <context-group purpose="information">
          <context context-type="source">Table Header&#13;
XPath: /table/thead/tr/th[3]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26399">
        <source>groups</source>
        <target state="needs-translation">groups</target>
        <context-group purpose="information">
          <context context-type="source">Table Header&#13;
XPath: /table/thead/tr/th[4]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26401">
        <source>-e</source>
        <target state="needs-translation">-e</target>
        <context-group purpose="information">
          <context context-type="source">Table Data&#13;
XPath: /table/tbody/tr[1]/td[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26403">
        <source>false</source>
        <target state="needs-translation">false</target>
        <context-group purpose="information">
          <context context-type="source">Table Data&#13;
XPath: /table/tbody/tr[1]/td[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26405">
        <source>true</source>
        <target state="needs-translation">true</target>
        <context-group purpose="information">
          <context context-type="source">Table Data&#13;
XPath: /table/tbody/tr[1]/td[3]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26407">
        <source>当前频道</source>
        <target state="needs-translation">当前频道</target>
        <context-group purpose="information">
          <context context-type="source">Table Data&#13;
XPath: /table/tbody/tr[1]/td[4]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26409">
        <source>-E</source>
        <target state="needs-translation">-E</target>
        <context-group purpose="information">
          <context context-type="source">Table Data&#13;
XPath: /table/tbody/tr[2]/td[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26411">
        <source>false</source>
        <target state="needs-translation">false</target>
        <context-group purpose="information">
          <context context-type="source">Table Data&#13;
XPath: /table/tbody/tr[2]/td[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26413">
        <source>false</source>
        <target state="needs-translation">false</target>
        <context-group purpose="information">
          <context context-type="source">Table Data&#13;
XPath: /table/tbody/tr[2]/td[3]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26415">
        <source>全部频道</source>
        <target state="needs-translation">全部频道</target>
        <context-group purpose="information">
          <context context-type="source">Table Data&#13;
XPath: /table/tbody/tr[2]/td[4]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26417">
        <source>-d</source>
        <target state="needs-translation">-d</target>
        <context-group purpose="information">
          <context context-type="source">Table Data&#13;
XPath: /table/tbody/tr[3]/td[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26419">
        <source>true</source>
        <target state="needs-translation">true</target>
        <context-group purpose="information">
          <context context-type="source">Table Data&#13;
XPath: /table/tbody/tr[3]/td[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26421">
        <source>true</source>
        <target state="needs-translation">true</target>
        <context-group purpose="information">
          <context context-type="source">Table Data&#13;
XPath: /table/tbody/tr[3]/td[3]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26423">
        <source>当前频道</source>
        <target state="needs-translation">当前频道</target>
        <context-group purpose="information">
          <context context-type="source">Table Data&#13;
XPath: /table/tbody/tr[3]/td[4]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26425">
        <source>-D</source>
        <target state="needs-translation">-D</target>
        <context-group purpose="information">
          <context context-type="source">Table Data&#13;
XPath: /table/tbody/tr[4]/td[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26427">
        <source>true</source>
        <target state="needs-translation">true</target>
        <context-group purpose="information">
          <context context-type="source">Table Data&#13;
XPath: /table/tbody/tr[4]/td[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26429">
        <source>false</source>
        <target state="needs-translation">false</target>
        <context-group purpose="information">
          <context context-type="source">Table Data&#13;
XPath: /table/tbody/tr[4]/td[3]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26431">
        <source>全部频道</source>
        <target state="needs-translation">全部频道</target>
        <context-group purpose="information">
          <context context-type="source">Table Data&#13;
XPath: /table/tbody/tr[4]/td[4]</context>
        </context-group>
      </trans-unit>
    </body>
  </file>
  <file id="1153" original="/[koishijs.koishi-plugin-dialogue] main/docs/zh-CN/events.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="26433">
        <source>扩展事件</source>
        <target state="needs-translation">扩展事件</target>
        <context-group purpose="information">
          <context context-type="source">Headline 1&#13;
XPath: /h1</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26435">
        <source>基础事件</source>
        <target state="needs-translation">基础事件</target>
        <context-group purpose="information">
          <context context-type="source">Headline 2&#13;
XPath: /h2[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26437">
        <source>dialogue/execute</source>
        <target state="needs-translation">dialogue/execute</target>
        <context-group purpose="information">
          <context context-type="source">Headline 3&#13;
XPath: /h3[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26439">
        <source>dialogue/before-execute</source>
        <target state="needs-translation">dialogue/before-execute</target>
        <context-group purpose="information">
          <context context-type="source">Headline 3&#13;
XPath: /h3[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26441">
        <source>触发相关</source>
        <target state="needs-translation">触发相关</target>
        <context-group purpose="information">
          <context context-type="source">Headline 2&#13;
XPath: /h2[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26443">
        <source>dialogue/before-search</source>
        <target state="needs-translation">dialogue/before-search</target>
        <context-group purpose="information">
          <context context-type="source">Headline 3&#13;
XPath: /h3[3]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26445">
        <source>dialogue/receive</source>
        <target state="needs-translation">dialogue/receive</target>
        <context-group purpose="information">
          <context context-type="source">Headline 3&#13;
XPath: /h3[4]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26447">
        <source>dialogue/query</source>
        <target state="needs-translation">dialogue/query</target>
        <context-group purpose="information">
          <context context-type="source">Headline 3&#13;
XPath: /h3[5]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26449">
        <source>&lt;strong x-id=&quot;1&quot;&gt;test:&lt;/strong&gt; &lt;code&gt;DialogueTest&lt;/code&gt; 条件对象</source>
        <target state="needs-translation">&lt;strong x-id=&quot;1&quot;&gt;test:&lt;/strong&gt; &lt;code&gt;DialogueTest&lt;/code&gt; 条件对象</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[1]/li[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26451">
        <source>&lt;strong x-id=&quot;1&quot;&gt;query:&lt;/strong&gt; &lt;code&gt;Query&lt;/code&gt; 查询对象</source>
        <target state="needs-translation">&lt;strong x-id=&quot;1&quot;&gt;query:&lt;/strong&gt; &lt;code&gt;Query&lt;/code&gt; 查询对象</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[1]/li[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26453">
        <source>&lt;strong x-id=&quot;1&quot;&gt;触发方式:&lt;/strong&gt; emit</source>
        <target state="needs-translation">&lt;strong x-id=&quot;1&quot;&gt;触发方式:&lt;/strong&gt; emit</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[1]/li[3]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26455">
        <source>将条件信息转化为 minato 可用的查询对象。</source>
        <target state="needs-translation">将条件信息转化为 minato 可用的查询对象。</target>
        <context-group purpose="information">
          <context context-type="source">Paragraph text&#13;
XPath: /p[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26457">
        <source>显示相关</source>
        <target state="needs-translation">显示相关</target>
        <context-group purpose="information">
          <context context-type="source">Headline 2&#13;
XPath: /h2[3]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26459">
        <source>dialogue/abstract</source>
        <target state="needs-translation">dialogue/abstract</target>
        <context-group purpose="information">
          <context context-type="source">Headline 3&#13;
XPath: /h3[6]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26461">
        <source>&lt;strong x-id=&quot;1&quot;&gt;dialogue:&lt;/strong&gt; &lt;code&gt;Dialogue&lt;/code&gt; 问答对象</source>
        <target state="needs-translation">&lt;strong x-id=&quot;1&quot;&gt;dialogue:&lt;/strong&gt; &lt;code&gt;Dialogue&lt;/code&gt; 问答对象</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[2]/li[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26463">
        <source>&lt;strong x-id=&quot;1&quot;&gt;output:&lt;/strong&gt; &lt;code&gt;Output&lt;/code&gt; 摘要对象</source>
        <target state="needs-translation">&lt;strong x-id=&quot;1&quot;&gt;output:&lt;/strong&gt; &lt;code&gt;Output&lt;/code&gt; 摘要对象</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[2]/li[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26465">
        <source>&lt;strong x-id=&quot;1&quot;&gt;session:&lt;/strong&gt; &lt;code&gt;Session&lt;/code&gt; 会话对象</source>
        <target state="needs-translation">&lt;strong x-id=&quot;1&quot;&gt;session:&lt;/strong&gt; &lt;code&gt;Session&lt;/code&gt; 会话对象</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[2]/li[3]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26467">
        <source>&lt;strong x-id=&quot;1&quot;&gt;触发方式:&lt;/strong&gt; emit</source>
        <target state="needs-translation">&lt;strong x-id=&quot;1&quot;&gt;触发方式:&lt;/strong&gt; emit</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[2]/li[4]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26469">
        <source>渲染问答的摘要信息。</source>
        <target state="needs-translation">渲染问答的摘要信息。</target>
        <context-group purpose="information">
          <context context-type="source">Paragraph text&#13;
XPath: /p[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26471">
        <source>dialogue/detail</source>
        <target state="needs-translation">dialogue/detail</target>
        <context-group purpose="information">
          <context context-type="source">Headline 3&#13;
XPath: /h3[7]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26473">
        <source>&lt;strong x-id=&quot;1&quot;&gt;dialogue:&lt;/strong&gt; &lt;code&gt;Dialogue&lt;/code&gt; 问答对象</source>
        <target state="needs-translation">&lt;strong x-id=&quot;1&quot;&gt;dialogue:&lt;/strong&gt; &lt;code&gt;Dialogue&lt;/code&gt; 问答对象</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[3]/li[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26475">
        <source>&lt;strong x-id=&quot;1&quot;&gt;output:&lt;/strong&gt; &lt;code&gt;string[]&lt;/code&gt; 细节信息</source>
        <target state="needs-translation">&lt;strong x-id=&quot;1&quot;&gt;output:&lt;/strong&gt; &lt;code&gt;string[]&lt;/code&gt; 细节信息</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[3]/li[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26477">
        <source>&lt;strong x-id=&quot;1&quot;&gt;session:&lt;/strong&gt; &lt;code&gt;Session&lt;/code&gt; 会话对象</source>
        <target state="needs-translation">&lt;strong x-id=&quot;1&quot;&gt;session:&lt;/strong&gt; &lt;code&gt;Session&lt;/code&gt; 会话对象</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[3]/li[3]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26479">
        <source>&lt;strong x-id=&quot;1&quot;&gt;触发方式:&lt;/strong&gt; emit</source>
        <target state="needs-translation">&lt;strong x-id=&quot;1&quot;&gt;触发方式:&lt;/strong&gt; emit</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[3]/li[4]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26481">
        <source>渲染问答的细节信息。</source>
        <target state="needs-translation">渲染问答的细节信息。</target>
        <context-group purpose="information">
          <context context-type="source">Paragraph text&#13;
XPath: /p[3]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26483">
        <source>dialogue/appendix</source>
        <target state="needs-translation">dialogue/appendix</target>
        <context-group purpose="information">
          <context context-type="source">Headline 3&#13;
XPath: /h3[8]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26485">
        <source>操作相关</source>
        <target state="needs-translation">操作相关</target>
        <context-group purpose="information">
          <context context-type="source">Headline 2&#13;
XPath: /h2[4]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26487">
        <source>dialogue/permit</source>
        <target state="needs-translation">dialogue/permit</target>
        <context-group purpose="information">
          <context context-type="source">Headline 3&#13;
XPath: /h3[9]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26489">
        <source>dialogue/modify</source>
        <target state="needs-translation">dialogue/modify</target>
        <context-group purpose="information">
          <context context-type="source">Headline 3&#13;
XPath: /h3[10]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26491">
        <source>dialogue/after-modify</source>
        <target state="needs-translation">dialogue/after-modify</target>
        <context-group purpose="information">
          <context context-type="source">Headline 3&#13;
XPath: /h3[11]</context>
        </context-group>
      </trans-unit>
    </body>
  </file>
  <file id="1155" original="/[koishijs.koishi-plugin-dialogue] main/docs/zh-CN/flow.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="26493">
        <source>前置与后继问答</source>
        <target state="needs-translation">前置与后继问答</target>
        <context-group purpose="information">
          <context context-type="source">Headline 1&#13;
XPath: /h1</context>
        </context-group>
      </trans-unit>
    </body>
  </file>
  <file id="1157" original="/[koishijs.koishi-plugin-dialogue] main/docs/zh-CN/index.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="26495">
        <source>基本用法</source>
        <target state="needs-translation">基本用法</target>
        <context-group purpose="information">
          <context context-type="source">Headline 1&#13;
XPath: /h1</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26497">
        <source>::: tip 提示&lt;br x-id=&quot;2&quot; /&gt;
本章介绍的功能都由 koishi-plugin-dialogue 插件提供。</source>
        <target state="needs-translation">::: tip 提示&lt;br x-id=&quot;2&quot; /&gt;
本章介绍的功能都由 koishi-plugin-dialogue 插件提供。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26499" translate="no">
        <source>:::</source>
        <target>:::</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26501">
        <source>&lt;strong x-id=&quot;1&quot;&gt;问答&lt;/strong&gt;是 Koishi 教学系统中的基本单位。</source>
        <target state="needs-translation">&lt;strong x-id=&quot;1&quot;&gt;问答&lt;/strong&gt;是 Koishi 教学系统中的基本单位。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26503">
        <source>一个问答包含一个问题、其对应的回答以及其他相关的设置。</source>
        <target state="needs-translation">一个问答包含一个问题、其对应的回答以及其他相关的设置。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26505">
        <source>&lt;strong x-id=&quot;1&quot;&gt;问题&lt;/strong&gt;用于匹配 Bot 收到的消息，如果匹配成功，则会将&lt;strong x-id=&quot;1&quot;&gt;回答&lt;/strong&gt;作为该消息的响应。</source>
        <target state="needs-translation">&lt;strong x-id=&quot;1&quot;&gt;问题&lt;/strong&gt;用于匹配 Bot 收到的消息，如果匹配成功，则会将&lt;strong x-id=&quot;1&quot;&gt;回答&lt;/strong&gt;作为该消息的响应。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26507">
        <source>一个问题可以对应多种回答，每种回答也可能包含多条消息。</source>
        <target state="needs-translation">一个问题可以对应多种回答，每种回答也可能包含多条消息。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26509">
        <source>但无论如何这都可以用一条问答来表示。</source>
        <target state="needs-translation">但无论如何这都可以用一条问答来表示。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26511">
        <source>&lt;strong x-id=&quot;1&quot;&gt;问答编号&lt;/strong&gt;是每个问答特有的编号，你可以用其修改问答本身或是设置前置和后继问题。</source>
        <target state="needs-translation">&lt;strong x-id=&quot;1&quot;&gt;问答编号&lt;/strong&gt;是每个问答特有的编号，你可以用其修改问答本身或是设置前置和后继问题。</target>
        <context-group purpose="information">
          <context context-type="source">Paragraph text&#13;
XPath: /p[3]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26513">
        <source>添加问答</source>
        <target state="needs-translation">添加问答</target>
        <context-group purpose="information">
          <context context-type="source">Headline 2&#13;
XPath: /h2[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26515">
        <source>使用 &lt;code&gt;# 问题 回答&lt;/code&gt; 的语法来添加问答。</source>
        <target state="needs-translation">使用 &lt;code&gt;# 问题 回答&lt;/code&gt; 的语法来添加问答。</target>
        <context-group purpose="information">
          <context context-type="source">Paragraph text&#13;
XPath: /p[4]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26517">
        <source># foo bar</source>
        <target state="needs-translation"># foo bar</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /chat-panel[1]/chat-message[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26519">
        <source>问答已添加，编号为 1001。</source>
        <target state="needs-translation">问答已添加，编号为 1001。</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /chat-panel[1]/chat-message[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26521">
        <source>foo</source>
        <target state="needs-translation">foo</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /chat-panel[1]/chat-message[3]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26523">
        <source>bar</source>
        <target state="needs-translation">bar</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /chat-panel[1]/chat-message[4]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26525">
        <source>如果问题或回答中包含空白字符（空格，换行等），应该将对应的部分用引号包裹起来（半角全角均可）：</source>
        <target state="needs-translation">如果问题或回答中包含空白字符（空格，换行等），应该将对应的部分用引号包裹起来（半角全角均可）：</target>
        <context-group purpose="information">
          <context context-type="source">Paragraph text&#13;
XPath: /p[5]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26527">
        <source># “有空格 的问题” “有换行&lt;br&gt;的回答”</source>
        <target state="needs-translation"># “有空格 的问题” “有换行&lt;br&gt;的回答”</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /chat-panel[2]/chat-message[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26529">
        <source>问答已添加，编号为 1002。</source>
        <target state="needs-translation">问答已添加，编号为 1002。</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /chat-panel[2]/chat-message[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26531">
        <source>有空格 的问题</source>
        <target state="needs-translation">有空格 的问题</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /chat-panel[2]/chat-message[3]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26533">
        <source>有换行&lt;br&gt;的回答</source>
        <target state="needs-translation">有换行&lt;br&gt;的回答</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /chat-panel[2]/chat-message[4]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26535">
        <source>如果要添加的问答已经存在，且拥有修改权限，则会使用额外传入的参数对现有的问答进行修改。</source>
        <target state="needs-translation">如果要添加的问答已经存在，且拥有修改权限，则会使用额外传入的参数对现有的问答进行修改。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[6]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26537">
        <source>添加或修改完成后会提示该问答的编号。</source>
        <target state="needs-translation">添加或修改完成后会提示该问答的编号。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[6]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26539">
        <source>搜索问答</source>
        <target state="needs-translation">搜索问答</target>
        <context-group purpose="information">
          <context context-type="source">Headline 2&#13;
XPath: /h2[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26541">
        <source>使用 &lt;code&gt;## 问题 回答&lt;/code&gt; 的语法来搜索问答的编号。</source>
        <target state="needs-translation">使用 &lt;code&gt;## 问题 回答&lt;/code&gt; 的语法来搜索问答的编号。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[7]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26543">
        <source>如果只搜索特定问题的所有回答，可以使用 &lt;code&gt;## 问题&lt;/code&gt;。</source>
        <target state="needs-translation">如果只搜索特定问题的所有回答，可以使用 &lt;code&gt;## 问题&lt;/code&gt;。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[7]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26545">
        <source>反之，如果只搜索特定回答的所有问题，可以使用 &lt;code&gt;## ~ 回答&lt;/code&gt;。</source>
        <target state="needs-translation">反之，如果只搜索特定回答的所有问题，可以使用 &lt;code&gt;## ~ 回答&lt;/code&gt;。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[7]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26547">
        <source>这里的 &lt;code&gt;~&lt;/code&gt; 充当占位符的作用。</source>
        <target state="needs-translation">这里的 &lt;code&gt;~&lt;/code&gt; 充当占位符的作用。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[7]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26549">
        <source>## foo</source>
        <target state="needs-translation">## foo</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /chat-panel[3]/chat-message[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26551">
        <source>问题“foo”的回答如下：&lt;br&gt;1001. bar</source>
        <target state="needs-translation">问题“foo”的回答如下：&lt;br&gt;1001. bar</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /chat-panel[3]/chat-message[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26553">
        <source>## ~ bar</source>
        <target state="needs-translation">## ~ bar</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /chat-panel[3]/chat-message[3]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26555">
        <source>回答“bar”的问题如下：&lt;br&gt;1001. foo</source>
        <target state="needs-translation">回答“bar”的问题如下：&lt;br&gt;1001. foo</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /chat-panel[3]/chat-message[4]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26557">
        <source>由于过长的文本容易带来刷屏的不良体验，因此 Koishi 一次只会提供不超过 30 条搜索结果。</source>
        <target state="needs-translation">由于过长的文本容易带来刷屏的不良体验，因此 Koishi 一次只会提供不超过 30 条搜索结果。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[8]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26559">
        <source>如果搜索结果超过这个数字则会进行分页，同时只显示第一页的内容。</source>
        <target state="needs-translation">如果搜索结果超过这个数字则会进行分页，同时只显示第一页的内容。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[8]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26561">
        <source>可以通过 &lt;code&gt;/ 页码&lt;/code&gt; 调整要查看的页码。</source>
        <target state="needs-translation">可以通过 &lt;code&gt;/ 页码&lt;/code&gt; 调整要查看的页码。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[8]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26563">
        <source>查看和修改问答</source>
        <target state="needs-translation">查看和修改问答</target>
        <context-group purpose="information">
          <context context-type="source">Headline 2&#13;
XPath: /h2[3]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26565">
        <source>::: tip 提示&lt;br x-id=&quot;2&quot; /&gt;
为了避免刷屏，一次查看的问答数量不能超过 10。</source>
        <target state="needs-translation">::: tip 提示&lt;br x-id=&quot;2&quot; /&gt;
为了避免刷屏，一次查看的问答数量不能超过 10。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[9]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26567">
        <source>批量修改问答则没有这个限制。</source>
        <target state="needs-translation">批量修改问答则没有这个限制。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[9]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26569">
        <source>你可以通过配置 &lt;a href=&quot;./config.md#max-previews&quot;&gt;maxPreviews&lt;/a&gt; 修改这个行为。</source>
        <target state="needs-translation">你可以通过配置 &lt;a href=&quot;./config.md#max-previews&quot;&gt;maxPreviews&lt;/a&gt; 修改这个行为。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[9]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26571" translate="no">
        <source>:::</source>
        <target>:::</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[9]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26573">
        <source>使用 &lt;code&gt;#id&lt;/code&gt; 查看一个问答的具体设置。</source>
        <target state="needs-translation">使用 &lt;code&gt;#id&lt;/code&gt; 查看一个问答的具体设置。</target>
        <context-group purpose="information">
          <context context-type="source">Paragraph text&#13;
XPath: /p[10]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26575">
        <source>#1001</source>
        <target state="needs-translation">#1001</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /chat-panel[4]/chat-message[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26577">
        <source>编号为 1001 的问答信息：&lt;br&gt;问题：foo&lt;br&gt;回答：bar</source>
        <target state="needs-translation">编号为 1001 的问答信息：&lt;br&gt;问题：foo&lt;br&gt;回答：bar</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /chat-panel[4]/chat-message[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26579">
        <source>如果传入了额外的选项和参数，则会视为对该问题的修改。</source>
        <target state="needs-translation">如果传入了额外的选项和参数，则会视为对该问题的修改。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[11]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26581">
        <source>例如，&lt;code&gt;#id 问题&lt;/code&gt; 用于修改该问答的问题，&lt;code&gt;#id ~ 回答&lt;/code&gt; 用于修改该问答的回答，&lt;code&gt;#id -p 0.5&lt;/code&gt; 用于设置问答的概率为 0.5（参见 &lt;a href=&quot;./prob.md&quot;&gt;概率机制&lt;/a&gt; 一节），&lt;code&gt;#id -e&lt;/code&gt; 用于使该问答在本群生效（参见 &lt;a href=&quot;./context.md&quot;&gt;上下文机制&lt;/a&gt; 一节）等等。</source>
        <target state="needs-translation">例如，&lt;code&gt;#id 问题&lt;/code&gt; 用于修改该问答的问题，&lt;code&gt;#id ~ 回答&lt;/code&gt; 用于修改该问答的回答，&lt;code&gt;#id -p 0.5&lt;/code&gt; 用于设置问答的概率为 0.5（参见 &lt;a href=&quot;./prob.md&quot;&gt;概率机制&lt;/a&gt; 一节），&lt;code&gt;#id -e&lt;/code&gt; 用于使该问答在本群生效（参见 &lt;a href=&quot;./context.md&quot;&gt;上下文机制&lt;/a&gt; 一节）等等。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[11]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26583">
        <source>#1001 ~ baz</source>
        <target state="needs-translation">#1001 ~ baz</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /chat-panel[5]/chat-message[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26585">
        <source>问答 1001 已成功修改。</source>
        <target state="needs-translation">问答 1001 已成功修改。</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /chat-panel[5]/chat-message[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26587">
        <source>foo</source>
        <target state="needs-translation">foo</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /chat-panel[5]/chat-message[3]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26589">
        <source>baz</source>
        <target state="needs-translation">baz</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /chat-panel[5]/chat-message[4]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26591">
        <source>特别地，&lt;code&gt;#id -r&lt;/code&gt; 用于彻底删除一个问答，之后无法恢复。</source>
        <target state="needs-translation">特别地，&lt;code&gt;#id -r&lt;/code&gt; 用于彻底删除一个问答，之后无法恢复。</target>
        <context-group purpose="information">
          <context context-type="source">Paragraph text&#13;
XPath: /p[12]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26593">
        <source>#1002 -r</source>
        <target state="needs-translation">#1002 -r</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /chat-panel[6]/chat-message[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26595">
        <source>问答 1002 已成功删除。</source>
        <target state="needs-translation">问答 1002 已成功删除。</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /chat-panel[6]/chat-message[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26597">
        <source>有空格 的问题</source>
        <target state="needs-translation">有空格 的问题</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /chat-panel[6]/chat-message[3]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26599">
        <source>'——— 无事发生 ———',</source>
        <target state="needs-translation">'——— 无事发生 ———',</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /chat-panel[6]/text[4]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26601">
        <source>你也可以将上面的 &lt;code&gt;id&lt;/code&gt; 替换成由半角逗号隔开的多个问答编号，这样就可以同时查看或者修改多个问答了，例如 &lt;code&gt;#123,456&lt;/code&gt;。</source>
        <target state="needs-translation">你也可以将上面的 &lt;code&gt;id&lt;/code&gt; 替换成由半角逗号隔开的多个问答编号，这样就可以同时查看或者修改多个问答了，例如 &lt;code&gt;#123,456&lt;/code&gt;。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[13]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26603">
        <source>更特别地，如果你要查看或修改的多个问答有着连续的编号，你还可以使用 &lt;code&gt;#123..126&lt;/code&gt; 表示 &lt;code&gt;#123,124,125,126&lt;/code&gt;。</source>
        <target state="needs-translation">更特别地，如果你要查看或修改的多个问答有着连续的编号，你还可以使用 &lt;code&gt;#123..126&lt;/code&gt; 表示 &lt;code&gt;#123,124,125,126&lt;/code&gt;。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[13]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26605">
        <source>模糊匹配</source>
        <target state="needs-translation">模糊匹配</target>
        <context-group purpose="information">
          <context context-type="source">Headline 2&#13;
XPath: /h2[4]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26607">
        <source>为了提高教学问答的覆盖面，Koishi 有一套默认的模糊匹配机制。</source>
        <target state="needs-translation">为了提高教学问答的覆盖面，Koishi 有一套默认的模糊匹配机制。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[14]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26609">
        <source>对于每个添加的问题，Koishi 会对其做以下处理：</source>
        <target state="needs-translation">对于每个添加的问题，Koishi 会对其做以下处理：</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[14]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26611">
        <source>繁体字转简体字，大写转小写，全角转半角</source>
        <target state="needs-translation">繁体字转简体字，大写转小写，全角转半角</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[1]/li[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26613">
        <source>去除开头和结尾处的标点符号</source>
        <target state="needs-translation">去除开头和结尾处的标点符号</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[1]/li[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26615">
        <source>去除问题中间的空白字符</source>
        <target state="needs-translation">去除问题中间的空白字符</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[1]/li[3]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26617">
        <source>去除问题开头的称呼前缀（这里的机制较为复杂，会在后面专门介绍）</source>
        <target state="needs-translation">去除问题开头的称呼前缀（这里的机制较为复杂，会在后面专门介绍）</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[1]/li[4]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26619">
        <source>因此，“我喜欢你”和“我 喜 歡 你！”会被认为是相同的问题。</source>
        <target state="needs-translation">因此，“我喜欢你”和“我 喜 歡 你！”会被认为是相同的问题。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[15]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26621">
        <source>但是尽管如此，处理过后的问题往往失去了较高的可读性，因此 Koishi 实际上会保存你教学时使用的原问题，当显示搜索结果和查看问题时显示原问题，而当真正匹配时才使用处理过后的版本。</source>
        <target state="needs-translation">但是尽管如此，处理过后的问题往往失去了较高的可读性，因此 Koishi 实际上会保存你教学时使用的原问题，当显示搜索结果和查看问题时显示原问题，而当真正匹配时才使用处理过后的版本。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[15]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26623">
        <source>特殊语法</source>
        <target state="needs-translation">特殊语法</target>
        <context-group purpose="information">
          <context context-type="source">Headline 2&#13;
XPath: /h2[5]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26625">
        <source>最后，在回答中可以使用一些特殊语法：</source>
        <target state="needs-translation">最后，在回答中可以使用一些特殊语法：</target>
        <context-group purpose="information">
          <context context-type="source">Paragraph text&#13;
XPath: /p[16]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26627">
        <source>&lt;strong x-id=&quot;1&quot;&gt;$$&lt;/strong&gt;：一个普通的 $ 字符</source>
        <target state="needs-translation">&lt;strong x-id=&quot;1&quot;&gt;$$&lt;/strong&gt;：一个普通的 $ 字符</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[2]/li[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26629">
        <source>&lt;strong x-id=&quot;1&quot;&gt;$0&lt;/strong&gt;：收到的原文本</source>
        <target state="needs-translation">&lt;strong x-id=&quot;1&quot;&gt;$0&lt;/strong&gt;：收到的原文本</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[2]/li[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26631">
        <source>&lt;strong x-id=&quot;1&quot;&gt;$n&lt;/strong&gt;：分条发送</source>
        <target state="needs-translation">&lt;strong x-id=&quot;1&quot;&gt;$n&lt;/strong&gt;：分条发送</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[2]/li[3]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26633">
        <source>&lt;strong x-id=&quot;1&quot;&gt;$A&lt;/strong&gt;：@所有人</source>
        <target state="needs-translation">&lt;strong x-id=&quot;1&quot;&gt;$A&lt;/strong&gt;：@所有人</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[2]/li[4]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26635">
        <source>&lt;strong x-id=&quot;1&quot;&gt;$a&lt;/strong&gt;：@说话人</source>
        <target state="needs-translation">&lt;strong x-id=&quot;1&quot;&gt;$a&lt;/strong&gt;：@说话人</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[2]/li[5]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26637">
        <source>&lt;strong x-id=&quot;1&quot;&gt;$m&lt;/strong&gt;：@机器人</source>
        <target state="needs-translation">&lt;strong x-id=&quot;1&quot;&gt;$m&lt;/strong&gt;：@机器人</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[2]/li[6]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26639">
        <source>&lt;strong x-id=&quot;1&quot;&gt;$s&lt;/strong&gt;：说话人的名字</source>
        <target state="needs-translation">&lt;strong x-id=&quot;1&quot;&gt;$s&lt;/strong&gt;：说话人的名字</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[2]/li[7]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26641">
        <source>下面是一个简单的例子：</source>
        <target state="needs-translation">下面是一个简单的例子：</target>
        <context-group purpose="information">
          <context context-type="source">Paragraph text&#13;
XPath: /p[17]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26643">
        <source># 你好啊 $s，你好啊~</source>
        <target state="needs-translation"># 你好啊 $s，你好啊~</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /chat-panel[7]/chat-message[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26645">
        <source>问答已添加，编号为 1003。</source>
        <target state="needs-translation">问答已添加，编号为 1003。</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /chat-panel[7]/chat-message[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26647">
        <source>你好啊！</source>
        <target state="needs-translation">你好啊！</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /chat-panel[7]/chat-message[3]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26649">
        <source>Alice，你好啊~</source>
        <target state="needs-translation">Alice，你好啊~</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /chat-panel[7]/chat-message[4]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26651">
        <source>管道操作</source>
        <target state="needs-translation">管道操作</target>
        <context-group purpose="information">
          <context context-type="source">Headline 2&#13;
XPath: /h2[6]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26653">
        <source>可以使用 &lt;code&gt;## 查询内容 | 修改操作&lt;/code&gt; 来进行问答的批量修改。</source>
        <target state="needs-translation">可以使用 &lt;code&gt;## 查询内容 | 修改操作&lt;/code&gt; 来进行问答的批量修改。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[18]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26655">
        <source>它的功能是对查询到的每一个问答执行后面的修改操作。</source>
        <target state="needs-translation">它的功能是对查询到的每一个问答执行后面的修改操作。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[18]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26657">
        <source>例如：&lt;code&gt;## 摸摸 | -p 0.5&lt;/code&gt; 将会把所有问题为摸摸的问答的概率修改为 0.5。</source>
        <target state="needs-translation">例如：&lt;code&gt;## 摸摸 | -p 0.5&lt;/code&gt; 将会把所有问题为摸摸的问答的概率修改为 0.5。</target>
        <context-group purpose="information">
          <context context-type="source">Paragraph text&#13;
XPath: /p[19]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26659">
        <source>当然，如果查询到的问答没有足够的修改权限，还是会提示无法修改的。</source>
        <target state="needs-translation">当然，如果查询到的问答没有足够的修改权限，还是会提示无法修改的。</target>
        <context-group purpose="information">
          <context context-type="source">Paragraph text&#13;
XPath: /p[20]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26661">
        <source>查询近期操作</source>
        <target state="needs-translation">查询近期操作</target>
        <context-group purpose="information">
          <context context-type="source">Headline 2&#13;
XPath: /h2[7]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26663">
        <source>可以使用 &lt;code&gt;## -v&lt;/code&gt; 来查询近期的教学操作：</source>
        <target state="needs-translation">可以使用 &lt;code&gt;## -v&lt;/code&gt; 来查询近期的教学操作：</target>
        <context-group purpose="information">
          <context context-type="source">Paragraph text&#13;
XPath: /p[21]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26665">
        <source>## -v</source>
        <target state="needs-translation">## -v</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /chat-panel[8]/chat-message[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26667">
        <source>1003. [添加-25s] 问题：你好啊，回答：$s，你好啊~</source>
        <target state="needs-translation">1003. [添加-25s] 问题：你好啊，回答：$s，你好啊~</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /chat-panel[8]/chat-message[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26669">
        <source>或者使用 &lt;code&gt;#id -v&lt;/code&gt; 来查看特定问答近期的教学操作（这里会显示修改前的版本）：</source>
        <target state="needs-translation">或者使用 &lt;code&gt;#id -v&lt;/code&gt; 来查看特定问答近期的教学操作（这里会显示修改前的版本）：</target>
        <context-group purpose="information">
          <context context-type="source">Paragraph text&#13;
XPath: /p[22]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26671">
        <source>#1001 -v</source>
        <target state="needs-translation">#1001 -v</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /chat-panel[9]/chat-message[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26673">
        <source>编号为 1001 的问答信息：&lt;br&gt;问题：foo&lt;br&gt;回答：bar&lt;br&gt;修改于：15 秒前</source>
        <target state="needs-translation">编号为 1001 的问答信息：&lt;br&gt;问题：foo&lt;br&gt;回答：bar&lt;br&gt;修改于：15 秒前</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /chat-panel[9]/chat-message[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26675">
        <source>回退近期操作</source>
        <target state="needs-translation">回退近期操作</target>
        <context-group purpose="information">
          <context context-type="source">Headline 2&#13;
XPath: /h2[8]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26677">
        <source>可以使用 &lt;code&gt;#id -V&lt;/code&gt; 来回退特定问答近期的教学操作：</source>
        <target state="needs-translation">可以使用 &lt;code&gt;#id -V&lt;/code&gt; 来回退特定问答近期的教学操作：</target>
        <context-group purpose="information">
          <context context-type="source">Paragraph text&#13;
XPath: /p[23]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26679">
        <source>#1001 -V</source>
        <target state="needs-translation">#1001 -V</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /chat-panel[10]/chat-message[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26681">
        <source>问答 1001 已回退完成。</source>
        <target state="needs-translation">问答 1001 已回退完成。</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /chat-panel[10]/chat-message[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26683">
        <source>foo</source>
        <target state="needs-translation">foo</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /chat-panel[10]/chat-message[3]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26685">
        <source>bar</source>
        <target state="needs-translation">bar</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /chat-panel[10]/chat-message[4]</context>
        </context-group>
      </trans-unit>
    </body>
  </file>
  <file id="1159" original="/[koishijs.koishi-plugin-dialogue] main/docs/zh-CN/interp.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="26687">
        <source>插值调用</source>
        <target state="needs-translation">插值调用</target>
        <context-group purpose="information">
          <context context-type="source">Headline 1&#13;
XPath: /h1</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26689">
        <source>基本用法</source>
        <target state="needs-translation">基本用法</target>
        <context-group purpose="information">
          <context context-type="source">Headline 2&#13;
XPath: /h2[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26691">
        <source>你可以使用 &lt;code&gt;$()&lt;/code&gt; 的高级语法来在回答中插入指令调用的结果：</source>
        <target state="needs-translation">你可以使用 &lt;code&gt;$()&lt;/code&gt; 的高级语法来在回答中插入指令调用的结果：</target>
        <context-group purpose="information">
          <context context-type="source">Paragraph text&#13;
XPath: /p[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26693">
        <source># 我的回合，抽卡！</source>
        <target state="needs-translation"># 我的回合，抽卡！</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /chat-panel[1]/chat-message[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26695">
        <source>$(lottery)</source>
        <target state="needs-translation">$(lottery)</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /chat-panel[1]/chat-message[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26697">
        <source>问答已添加，编号为 1201。</source>
        <target state="needs-translation">问答已添加，编号为 1201。</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /chat-panel[1]/chat-message[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26699">
        <source>我的回合，抽卡！</source>
        <target state="needs-translation">我的回合，抽卡！</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /chat-panel[1]/chat-message[3]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26701">
        <source>恭喜 Alice 获得了国士无双之药（SR）！</source>
        <target state="needs-translation">恭喜 Alice 获得了国士无双之药（SR）！</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /chat-panel[1]/chat-message[4]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26703">
        <source>&lt;br&gt;月之贤者为了测试这瓶药的效果，曾给某只兔子强行灌了一桶。</source>
        <target state="needs-translation">&lt;br&gt;月之贤者为了测试这瓶药的效果，曾给某只兔子强行灌了一桶。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /chat-panel[1]/chat-message[4]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26705">
        <source>当然你也可以在回答中插入多条指令，它们会逐一完成调用后统一输出：</source>
        <target state="needs-translation">当然你也可以在回答中插入多条指令，它们会逐一完成调用后统一输出：</target>
        <context-group purpose="information">
          <context context-type="source">Paragraph text&#13;
XPath: /p[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26707">
        <source># 吊死鬼元音开局 &amp;quot;$(hangman)&lt;br&gt;$(hangman aeiou)&amp;quot;</source>
        <target state="needs-translation"># 吊死鬼元音开局 &amp;quot;$(hangman)&lt;br&gt;$(hangman aeiou)&amp;quot;</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /chat-panel[2]/chat-message[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26709">
        <source>问答已添加，编号为 1202。</source>
        <target state="needs-translation">问答已添加，编号为 1202。</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /chat-panel[2]/chat-message[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26711">
        <source>吊死鬼元音开局</source>
        <target state="needs-translation">吊死鬼元音开局</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /chat-panel[2]/chat-message[3]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26713">
        <source>游戏开始，要猜的词尾 ???????，剩余 10 次机会。</source>
        <target state="needs-translation">游戏开始，要猜的词尾 ???????，剩余 10 次机会。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /chat-panel[2]/chat-message[4]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26715">
        <source>&lt;br&gt;尝试成功！</source>
        <target state="needs-translation">&lt;br&gt;尝试成功！</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /chat-panel[2]/chat-message[4]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26717">
        <source>剩余字母为 ?i?u?e?，已使用的字母为 aeiou，剩余 8 次机会。</source>
        <target state="needs-translation">剩余字母为 ?i?u?e?，已使用的字母为 aeiou，剩余 8 次机会。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /chat-panel[2]/chat-message[4]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26719">
        <source>问题重定向</source>
        <target state="needs-translation">问题重定向</target>
        <context-group purpose="information">
          <context context-type="source">Headline 2&#13;
XPath: /h2[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26721">
        <source>::: tip&lt;br x-id=&quot;2&quot; /&gt;
为了安全性考虑，问题重定向的次数上限为 3 次，超过这个次数将视为触发失败。</source>
        <target state="needs-translation">::: tip&lt;br x-id=&quot;2&quot; /&gt;
为了安全性考虑，问题重定向的次数上限为 3 次，超过这个次数将视为触发失败。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[3]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26723">
        <source>你可以通过配置 &lt;a href=&quot;./config.md#max-redirections&quot;&gt;maxRedirections&lt;/a&gt; 修改这个行为。</source>
        <target state="needs-translation">你可以通过配置 &lt;a href=&quot;./config.md#max-redirections&quot;&gt;maxRedirections&lt;/a&gt; 修改这个行为。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[3]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26725" translate="no">
        <source>:::</source>
        <target>:::</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[3]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26727">
        <source>Koishi 也支持将问题重定向到其他问题。</source>
        <target state="needs-translation">Koishi 也支持将问题重定向到其他问题。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[4]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26729">
        <source>使用 &lt;code&gt;# 问题1 =&amp;gt; 问题2&lt;/code&gt; 以进行问题的重定向。</source>
        <target state="needs-translation">使用 &lt;code&gt;# 问题1 =&amp;gt; 问题2&lt;/code&gt; 以进行问题的重定向。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[4]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26731">
        <source>来看下面的例子：</source>
        <target state="needs-translation">来看下面的例子：</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[4]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26733">
        <source># 你可以一天不吃饭 但不能一天不背单词 -p 0.6</source>
        <target state="needs-translation"># 你可以一天不吃饭 但不能一天不背单词 -p 0.6</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /chat-panel[3]/chat-message[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26735">
        <source>问答已添加，编号为 1203。</source>
        <target state="needs-translation">问答已添加，编号为 1203。</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /chat-panel[3]/chat-message[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26737">
        <source># 人可以一天不吃饭 =&amp;gt; 你可以一天不吃饭 -p 0.8</source>
        <target state="needs-translation"># 人可以一天不吃饭 =&amp;gt; 你可以一天不吃饭 -p 0.8</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /chat-panel[3]/chat-message[3]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26739">
        <source>问答已添加，编号为 1204。</source>
        <target state="needs-translation">问答已添加，编号为 1204。</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /chat-panel[3]/chat-message[4]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26741">
        <source>由于重定向问答是一个独立的问答，因此它也拥有完全独立的上下文、好感度、概率、后继问题等机制。</source>
        <target state="needs-translation">由于重定向问答是一个独立的问答，因此它也拥有完全独立的上下文、好感度、概率、后继问题等机制。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[5]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26743">
        <source>例如当输入“人可以一天不吃饭”时，将以 0.8 的概率重定向为问题“你可以一天不吃饭”，因此会以 0.6×0.8=0.48 的概率触发回答“但不能一天不背单词”。</source>
        <target state="needs-translation">例如当输入“人可以一天不吃饭”时，将以 0.8 的概率重定向为问题“你可以一天不吃饭”，因此会以 0.6×0.8=0.48 的概率触发回答“但不能一天不背单词”。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[5]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26745">
        <source>实际上，&lt;strong x-id=&quot;1&quot;&gt;重定向到问题也是通过指令来实现的&lt;/strong&gt;，它的原理很简单。</source>
        <target state="needs-translation">实际上，&lt;strong x-id=&quot;1&quot;&gt;重定向到问题也是通过指令来实现的&lt;/strong&gt;，它的原理很简单。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[6]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26747">
        <source>我们加入了一个叫做 dialogue 的指令，功能是在当前上下文尝试触发一次问答。</source>
        <target state="needs-translation">我们加入了一个叫做 dialogue 的指令，功能是在当前上下文尝试触发一次问答。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[6]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26749">
        <source>因此 &lt;code&gt;# 问题1 =&amp;gt; 问题2&lt;/code&gt; 会被系统转换为 &lt;code&gt;# 问题1 &quot;$(dialogue 问题2)&quot;&lt;/code&gt; 来处理。</source>
        <target state="needs-translation">因此 &lt;code&gt;# 问题1 =&amp;gt; 问题2&lt;/code&gt; 会被系统转换为 &lt;code&gt;# 问题1 &quot;$(dialogue 问题2)&quot;&lt;/code&gt; 来处理。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[6]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26751">
        <source>递归搜索</source>
        <target state="needs-translation">递归搜索</target>
        <context-group purpose="information">
          <context context-type="source">Headline 2&#13;
XPath: /h2[3]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26753">
        <source>首先让我们看一个简单的例子：</source>
        <target state="needs-translation">首先让我们看一个简单的例子：</target>
        <context-group purpose="information">
          <context context-type="source">Paragraph text&#13;
XPath: /p[7]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26755">
        <source># 我可以做什么 抽卡</source>
        <target state="needs-translation"># 我可以做什么 抽卡</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /chat-panel[4]/chat-message[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26757">
        <source>问答已添加，编号为 1205。</source>
        <target state="needs-translation">问答已添加，编号为 1205。</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /chat-panel[4]/chat-message[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26759">
        <source># 我可以做什么 钓鱼</source>
        <target state="needs-translation"># 我可以做什么 钓鱼</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /chat-panel[4]/chat-message[3]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26761">
        <source>问答已添加，编号为 1206。</source>
        <target state="needs-translation">问答已添加，编号为 1206。</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /chat-panel[4]/chat-message[4]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26763">
        <source>## 我可以做什么</source>
        <target state="needs-translation">## 我可以做什么</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /chat-panel[4]/chat-message[5]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26765">
        <source>问题“我可以做什么”的回答如下：&lt;br&gt;1205. 抽卡&lt;br&gt;1206. 钓鱼</source>
        <target state="needs-translation">问题“我可以做什么”的回答如下：&lt;br&gt;1205. 抽卡&lt;br&gt;1206. 钓鱼</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /chat-panel[4]/chat-message[6]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26767">
        <source>如果我们对添加一个重定向到上述问题的问答，则此时在搜索结果中将自动展开其重定向的结果：</source>
        <target state="needs-translation">如果我们对添加一个重定向到上述问题的问答，则此时在搜索结果中将自动展开其重定向的结果：</target>
        <context-group purpose="information">
          <context context-type="source">Paragraph text&#13;
XPath: /p[8]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26769">
        <source># 我能做什么 =&amp;gt; 我可以做什么</source>
        <target state="needs-translation"># 我能做什么 =&amp;gt; 我可以做什么</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /chat-panel[5]/chat-message[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26771">
        <source>问答已添加，编号为 1207。</source>
        <target state="needs-translation">问答已添加，编号为 1207。</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /chat-panel[5]/chat-message[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26773">
        <source>## 我能做什么</source>
        <target state="needs-translation">## 我能做什么</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /chat-panel[5]/chat-message[3]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26775">
        <source>问题“我可以做什么”的回答如下：&lt;br&gt;1207. $(dialogue 我可以做什么)&lt;br&gt;= 1205. 抽卡&lt;br&gt;= 1206. 钓鱼</source>
        <target state="needs-translation">问题“我可以做什么”的回答如下：&lt;br&gt;1207. $(dialogue 我可以做什么)&lt;br&gt;= 1205. 抽卡&lt;br&gt;= 1206. 钓鱼</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /chat-panel[5]/chat-message[4]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26777">
        <source>这是因为调用 &lt;code&gt;##&lt;/code&gt; 进行搜索时程序会自动递归地搜索所有回答的重定向。</source>
        <target state="needs-translation">这是因为调用 &lt;code&gt;##&lt;/code&gt; 进行搜索时程序会自动递归地搜索所有回答的重定向。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[9]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26779">
        <source>你也可以使用 &lt;code&gt;-R&lt;/code&gt; 来让 Koishi 不显示上面的重定向结果：</source>
        <target state="needs-translation">你也可以使用 &lt;code&gt;-R&lt;/code&gt; 来让 Koishi 不显示上面的重定向结果：</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[9]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26781">
        <source>## 我能做什么 -R</source>
        <target state="needs-translation">## 我能做什么 -R</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /chat-panel[6]/chat-message[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26783">
        <source>问题“我可以做什么”的回答如下：&lt;br&gt;1207. $(dialogue 我可以做什么)</source>
        <target state="needs-translation">问题“我可以做什么”的回答如下：&lt;br&gt;1207. $(dialogue 我可以做什么)</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /chat-panel[6]/chat-message[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26785">
        <source>处理分条消息</source>
        <target state="needs-translation">处理分条消息</target>
        <context-group purpose="information">
          <context context-type="source">Headline 2&#13;
XPath: /h2[4]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26787">
        <source>::: tip 提示&lt;br x-id=&quot;2&quot; /&gt;
本节将深入讨论问答的消息分条和延时机制，如果仅想了解教学系统的基本用法可以略过。</source>
        <target state="needs-translation">::: tip 提示&lt;br x-id=&quot;2&quot; /&gt;
本节将深入讨论问答的消息分条和延时机制，如果仅想了解教学系统的基本用法可以略过。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[10]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26789" translate="no">
        <source>:::</source>
        <target>:::</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[10]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26791">
        <source>Koishi 有着各种各样的指令，它们本身在输出上就具有截然不同的行为。</source>
        <target state="needs-translation">Koishi 有着各种各样的指令，它们本身在输出上就具有截然不同的行为。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[11]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26793">
        <source>但教学功能提供了一个统一的接口来组织所有的插值调用。</source>
        <target state="needs-translation">但教学功能提供了一个统一的接口来组织所有的插值调用。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[11]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26795">
        <source>因此有必要介绍一下当一个问答再被触发时是如何进行输出的。</source>
        <target state="needs-translation">因此有必要介绍一下当一个问答再被触发时是如何进行输出的。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[11]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26797">
        <source>首先我们将机器人发送的信息分为三种：</source>
        <target state="needs-translation">首先我们将机器人发送的信息分为三种：</target>
        <context-group purpose="information">
          <context context-type="source">Paragraph text&#13;
XPath: /p[12]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26799">
        <source>直接发送（适用于可能不在当前会话的情况，如全服广播）</source>
        <target state="needs-translation">直接发送（适用于可能不在当前会话的情况，如全服广播）</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ol/li[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26801">
        <source>在当前会话发送（绝大部分功能）</source>
        <target state="needs-translation">在当前会话发送（绝大部分功能）</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ol/li[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26803">
        <source>在当前会话发送并等待（适用于可能依次发送多条消息的情况，如剧情输出和 dialogue 指令）</source>
        <target state="needs-translation">在当前会话发送并等待（适用于可能依次发送多条消息的情况，如剧情输出和 dialogue 指令）</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ol/li[3]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26805">
        <source>为了表述方便，我们将这三种发送方式分别简记为 sendNative，send 和 sendQueued。</source>
        <target state="needs-translation">为了表述方便，我们将这三种发送方式分别简记为 sendNative，send 和 sendQueued。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[13]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26807">
        <source>我们可以将 send 理解成对 sendNative 的封装，将 sendQueued 理解成对 send 的封装。</source>
        <target state="needs-translation">我们可以将 send 理解成对 sendNative 的封装，将 sendQueued 理解成对 send 的封装。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[13]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26809">
        <source>为什么需要最后一种方式呢？</source>
        <target state="needs-translation">为什么需要最后一种方式呢？</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[14]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26811">
        <source>这是因为在需要分批发送多段文本的情况下，如果同时发送不仅会导致大量刷屏，还可能导致各段落以错误的顺序被接收，造成阅读困难。</source>
        <target state="needs-translation">这是因为在需要分批发送多段文本的情况下，如果同时发送不仅会导致大量刷屏，还可能导致各段落以错误的顺序被接收，造成阅读困难。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[14]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26813">
        <source>因此，Koishi 会对每一段文本自行计算出一个“阅读时间”，并在发送该段文本后阻塞当前会话的发送通道。</source>
        <target state="needs-translation">因此，Koishi 会对每一段文本自行计算出一个“阅读时间”，并在发送该段文本后阻塞当前会话的发送通道。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[14]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26815">
        <source>如果期间有其他消息试图通过第三种方式发送，就会强制挂起直到这段时间结束。</source>
        <target state="needs-translation">如果期间有其他消息试图通过第三种方式发送，就会强制挂起直到这段时间结束。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[14]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26817">
        <source>在实际的使用中，很少会直接用到 sendNative，因此教学系统完全不会处理 sendNative 发送的信息。</source>
        <target state="needs-translation">在实际的使用中，很少会直接用到 sendNative，因此教学系统完全不会处理 sendNative 发送的信息。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[15]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26819">
        <source>但由于大部分功能都是通过 send 发送的，如果不进行妥善处理的话就会发生上面所描述的种种问题。</source>
        <target state="needs-translation">但由于大部分功能都是通过 send 发送的，如果不进行妥善处理的话就会发生上面所描述的种种问题。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[15]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26821">
        <source>因此，在一个问答被触发的时候，Koishi 会对 send 和 sendQueued 进行代理，通过缓冲来实现更好的输出。</source>
        <target state="needs-translation">因此，在一个问答被触发的时候，Koishi 会对 send 和 sendQueued 进行代理，通过缓冲来实现更好的输出。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[15]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26823">
        <source>教学问答的输出本身是一个很复杂的过程，但是这里将简化绝大部分细节，只专注于其分条发送的原理。</source>
        <target state="needs-translation">教学问答的输出本身是一个很复杂的过程，但是这里将简化绝大部分细节，只专注于其分条发送的原理。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[16]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26825">
        <source>我们已经知道教学问答的 $n 分段转义符可以用于分条发送一段文本，$() 插值转义符可以用于在回答中插入指令调用。</source>
        <target state="needs-translation">我们已经知道教学问答的 $n 分段转义符可以用于分条发送一段文本，$() 插值转义符可以用于在回答中插入指令调用。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[16]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26827">
        <source>现在我们假定回答已经被切分成若干段，每段都是 &lt;strong x-id=&quot;1&quot;&gt;纯文本/分段/插值&lt;/strong&gt; 这三种中的一种，且不存在连续两段纯文本。</source>
        <target state="needs-translation">现在我们假定回答已经被切分成若干段，每段都是 &lt;strong x-id=&quot;1&quot;&gt;纯文本/分段/插值&lt;/strong&gt; 这三种中的一种，且不存在连续两段纯文本。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[16]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26829">
        <source>对于纯文本，Koishi 会向缓冲尾端添加文本；对于分段转义符，Koishi 会使用 sendQueued 输出并清空缓冲区；对于插值调用，Koishi 会将修饰过的 send 和 sendQueued 传入指令进行执行。</source>
        <target state="needs-translation">对于纯文本，Koishi 会向缓冲尾端添加文本；对于分段转义符，Koishi 会使用 sendQueued 输出并清空缓冲区；对于插值调用，Koishi 会将修饰过的 send 和 sendQueued 传入指令进行执行。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[17]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26831">
        <source>其中，修饰过的 send 功能相当于向缓冲尾端添加文本；修饰过的 sendQueued 相当于向缓冲尾端添加文本，之后使用原版的 sendQueued 输出并清空缓冲区。</source>
        <target state="needs-translation">其中，修饰过的 send 功能相当于向缓冲尾端添加文本；修饰过的 sendQueued 相当于向缓冲尾端添加文本，之后使用原版的 sendQueued 输出并清空缓冲区。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[17]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26833">
        <source>举个例子，如果 A 指令的相当于 send(1)，B 指令的效果相当于 sendQueued(2)，那么回答 4$(A)5$n6$(B)7 的效果就相当于分三次输出 415，62 和 7。</source>
        <target state="needs-translation">举个例子，如果 A 指令的相当于 send(1)，B 指令的效果相当于 sendQueued(2)，那么回答 4$(A)5$n6$(B)7 的效果就相当于分三次输出 415，62 和 7。</target>
        <context-group purpose="information">
          <context context-type="source">Paragraph text&#13;
XPath: /p[18]</context>
        </context-group>
      </trans-unit>
    </body>
  </file>
  <file id="1161" original="/[koishijs.koishi-plugin-dialogue] main/docs/zh-CN/misc.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="26835">
        <source>其他机制</source>
        <target state="needs-translation">其他机制</target>
        <context-group purpose="information">
          <context context-type="source">Headline 1&#13;
XPath: /h1</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26837">
        <source>钩子问答</source>
        <target state="needs-translation">钩子问答</target>
        <context-group purpose="information">
          <context context-type="source">Headline 2&#13;
XPath: /h2[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26839">
        <source>对于特定的事件，Koishi 还提供了&lt;strong x-id=&quot;1&quot;&gt;钩子问答&lt;/strong&gt;机制。</source>
        <target state="needs-translation">对于特定的事件，Koishi 还提供了&lt;strong x-id=&quot;1&quot;&gt;钩子问答&lt;/strong&gt;机制。</target>
        <context-group purpose="information">
          <context context-type="source">Paragraph text&#13;
XPath: /p[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26841">
        <source>署名机制</source>
        <target state="needs-translation">署名机制</target>
        <context-group purpose="information">
          <context context-type="source">Headline 2&#13;
XPath: /h2[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26843">
        <source>为了方便管理，教学系统中的每个问答都是可以被署名的。</source>
        <target state="needs-translation">为了方便管理，教学系统中的每个问答都是可以被署名的。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26845">
        <source>当一个问答被添加时，添加者将被默认标记为问答的作者。</source>
        <target state="needs-translation">当一个问答被添加时，添加者将被默认标记为问答的作者。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26847">
        <source>&lt;strong x-id=&quot;1&quot;&gt;作者可以完全控制自己所署名的问答（修改和删除），但想要控制其他用户署名的问答就必须拥有 3 级权限&lt;/strong&gt;。</source>
        <target state="needs-translation">&lt;strong x-id=&quot;1&quot;&gt;作者可以完全控制自己所署名的问答（修改和删除），但想要控制其他用户署名的问答就必须拥有 3 级权限&lt;/strong&gt;。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26849">
        <source>如果想要手动设置作者，可以使用 &lt;code&gt;-w uid&lt;/code&gt; 或者 &lt;code&gt;-w @user&lt;/code&gt; 的方式。</source>
        <target state="needs-translation">如果想要手动设置作者，可以使用 &lt;code&gt;-w uid&lt;/code&gt; 或者 &lt;code&gt;-w @user&lt;/code&gt; 的方式。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[3]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26851">
        <source>除此以外，Koishi 也允许匿名教学。</source>
        <target state="needs-translation">除此以外，Koishi 也允许匿名教学。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[3]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26853">
        <source>任何用户都可以通过 &lt;code&gt;-W&lt;/code&gt; 来设置匿名问答（但是如果没有 3 级权限，即使是作者本人也无法修改）。</source>
        <target state="needs-translation">任何用户都可以通过 &lt;code&gt;-W&lt;/code&gt; 来设置匿名问答（但是如果没有 3 级权限，即使是作者本人也无法修改）。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[3]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26855">
        <source>这两个选项在搜索中也可以使用，例如用 &lt;code&gt;-W&lt;/code&gt; 表示只搜索匿名添加的问答。</source>
        <target state="needs-translation">这两个选项在搜索中也可以使用，例如用 &lt;code&gt;-W&lt;/code&gt; 表示只搜索匿名添加的问答。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[3]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26857">
        <source>除此以外，还有极少数的题目被标记为&lt;strong x-id=&quot;1&quot;&gt;锁定&lt;/strong&gt;。</source>
        <target state="needs-translation">除此以外，还有极少数的题目被标记为&lt;strong x-id=&quot;1&quot;&gt;锁定&lt;/strong&gt;。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[4]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26859">
        <source>标记为锁定的问题无论是否匿名，必须 4 级权限才能修改。</source>
        <target state="needs-translation">标记为锁定的问题无论是否匿名，必须 4 级权限才能修改。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[4]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26861">
        <source>可以使用 &lt;code&gt;-f&lt;/code&gt; 将一个问答标记为锁定，使用 &lt;code&gt;-F&lt;/code&gt; 进行解锁。</source>
        <target state="needs-translation">可以使用 &lt;code&gt;-f&lt;/code&gt; 将一个问答标记为锁定，使用 &lt;code&gt;-F&lt;/code&gt; 进行解锁。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[4]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26863">
        <source>不过这个功能只是为了保护核心问答不被篡改而设计的，使用这两个选项本身的最低权限也是 4 级，绝大部分玩家都不会有这个权限。</source>
        <target state="needs-translation">不过这个功能只是为了保护核心问答不被篡改而设计的，使用这两个选项本身的最低权限也是 4 级，绝大部分玩家都不会有这个权限。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[4]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26865">
        <source>设置触发时段</source>
        <target state="needs-translation">设置触发时段</target>
        <context-group purpose="information">
          <context context-type="source">Headline 2&#13;
XPath: /h2[3]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26867">
        <source>我们有时也希望问答仅在一定的时间段被触发。</source>
        <target state="needs-translation">我们有时也希望问答仅在一定的时间段被触发。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[5]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26869">
        <source>此时，可以使用 &lt;code&gt;-t&lt;/code&gt; 和 &lt;code&gt;-T&lt;/code&gt; 来控制触发的时段。</source>
        <target state="needs-translation">此时，可以使用 &lt;code&gt;-t&lt;/code&gt; 和 &lt;code&gt;-T&lt;/code&gt; 来控制触发的时段。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[5]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26871">
        <source>下面给出一些简单的示例：</source>
        <target state="needs-translation">下面给出一些简单的示例：</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[5]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26873">
        <source>命令</source>
        <target state="needs-translation">命令</target>
        <context-group purpose="information">
          <context context-type="source">Table Header&#13;
XPath: /table/thead/tr/th[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26875">
        <source>效果</source>
        <target state="needs-translation">效果</target>
        <context-group purpose="information">
          <context context-type="source">Table Header&#13;
XPath: /table/thead/tr/th[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26877">
        <source># 问题 回答 -t 10:00 -T 12:30</source>
        <target state="needs-translation"># 问题 回答 -t 10:00 -T 12:30</target>
        <context-group purpose="information">
          <context context-type="source">Table Data&#13;
XPath: /table/tbody/tr[1]/td[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26879">
        <source>添加在每天 10:00~12:30 触发的问答</source>
        <target state="needs-translation">添加在每天 10:00~12:30 触发的问答</target>
        <context-group purpose="information">
          <context context-type="source">Table Data&#13;
XPath: /table/tbody/tr[1]/td[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26881">
        <source># 问题 回答 -t 22 -T 4</source>
        <target state="needs-translation"># 问题 回答 -t 22 -T 4</target>
        <context-group purpose="information">
          <context context-type="source">Table Data&#13;
XPath: /table/tbody/tr[2]/td[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26883">
        <source>添加在每天 22 时到次日 4 时触发的问答</source>
        <target state="needs-translation">添加在每天 22 时到次日 4 时触发的问答</target>
        <context-group purpose="information">
          <context context-type="source">Table Data&#13;
XPath: /table/tbody/tr[2]/td[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26885">
        <source>#123 -t 12:00</source>
        <target state="needs-translation">#123 -t 12:00</target>
        <context-group purpose="information">
          <context context-type="source">Table Data&#13;
XPath: /table/tbody/tr[3]/td[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26887">
        <source>将问题 123 的触发时段起始时间设置为每天 12:00</source>
        <target state="needs-translation">将问题 123 的触发时段起始时间设置为每天 12:00</target>
        <context-group purpose="information">
          <context context-type="source">Table Data&#13;
XPath: /table/tbody/tr[3]/td[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26889">
        <source>同样与好感度类似，上述定义为前闭后开区间，且如果 t=T 则认为所有时间都允许触发。</source>
        <target state="needs-translation">同样与好感度类似，上述定义为前闭后开区间，且如果 t=T 则认为所有时间都允许触发。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[6]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26891">
        <source>在搜索时，我们也用 &lt;code&gt;-t&lt;/code&gt; 和 &lt;code&gt;-T&lt;/code&gt; 表示允许触发和不允许触发的时间节点。</source>
        <target state="needs-translation">在搜索时，我们也用 &lt;code&gt;-t&lt;/code&gt; 和 &lt;code&gt;-T&lt;/code&gt; 表示允许触发和不允许触发的时间节点。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[6]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26893">
        <source>例如，t=15, T=1 可以匹配 t=10, T=20 的问题，但是不能匹配 t=10, T=4 或 t=23, T=11 的问题。</source>
        <target state="needs-translation">例如，t=15, T=1 可以匹配 t=10, T=20 的问题，但是不能匹配 t=10, T=4 或 t=23, T=11 的问题。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[6]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26895">
        <source>防刷屏机制</source>
        <target state="needs-translation">防刷屏机制</target>
        <context-group purpose="information">
          <context context-type="source">Headline 2&#13;
XPath: /h2[4]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26897">
        <source>为了控制机器人在单一群触发教学问答的频率，我们可以设定当机器人在 1 分钟内在某个群中触发过超过 10 次问答，则 Koishi 将忽略该群内的消息直到这个数字降低到 10 以下为止。</source>
        <target state="needs-translation">为了控制机器人在单一群触发教学问答的频率，我们可以设定当机器人在 1 分钟内在某个群中触发过超过 10 次问答，则 Koishi 将忽略该群内的消息直到这个数字降低到 10 以下为止。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[7]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26899">
        <source>这里的数值都是可以配置的：</source>
        <target state="needs-translation">这里的数值都是可以配置的：</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[7]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26901">
        <source>plugins:
  teach:
    throttle:
      responses: 10
      interval: 60000</source>
        <target state="needs-translation">plugins:
  teach:
    throttle:
      responses: 10
      interval: 60000</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /pre[1]/code</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26903">
        <source>为了防止多个机器人之间的循环触发，以及部分用户的攻击性刷屏行为，我们可以设定如果最近的 5 次教学问答都由某 1 个用户触发，则 Koishi 将不会继续响应来自该用户的教学问答。</source>
        <target state="needs-translation">为了防止多个机器人之间的循环触发，以及部分用户的攻击性刷屏行为，我们可以设定如果最近的 5 次教学问答都由某 1 个用户触发，则 Koishi 将不会继续响应来自该用户的教学问答。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[8]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26905">
        <source>该效果会在该用户没有发送除指令调用以外消息之后的 5 分钟内被解除。</source>
        <target state="needs-translation">该效果会在该用户没有发送除指令调用以外消息之后的 5 分钟内被解除。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[8]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26907">
        <source>这里的数值也都是可以配置的：</source>
        <target state="needs-translation">这里的数值也都是可以配置的：</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[8]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26909">
        <source>plugins:
  teach:
    preventLoop:
      length: 5
      participants: 1
      debounce: 300000</source>
        <target state="needs-translation">plugins:
  teach:
    preventLoop:
      length: 5
      participants: 1
      debounce: 300000</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /pre[2]/code</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26911">
        <source>使用静态图片服务</source>
        <target state="needs-translation">使用静态图片服务</target>
        <context-group purpose="information">
          <context context-type="source">Headline 2&#13;
XPath: /h2[5]</context>
        </context-group>
      </trans-unit>
    </body>
  </file>
  <file id="1163" original="/[koishijs.koishi-plugin-dialogue] main/docs/zh-CN/prob.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="26913">
        <source>概率机制</source>
        <target state="needs-translation">概率机制</target>
        <context-group purpose="information">
          <context context-type="source">Headline 1&#13;
XPath: /h1</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26915">
        <source>::: tip&lt;br x-id=&quot;2&quot; /&gt;
本页中默认机器人的昵称为“四季酱”。</source>
        <target state="needs-translation">::: tip&lt;br x-id=&quot;2&quot; /&gt;
本页中默认机器人的昵称为“四季酱”。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26917" translate="no">
        <source>:::</source>
        <target>:::</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26919">
        <source>基本用法</source>
        <target state="needs-translation">基本用法</target>
        <context-group purpose="information">
          <context context-type="source">Headline 2&#13;
XPath: /h2[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26921">
        <source>我们有时也希望某些回答按照特定的概率进行触发。</source>
        <target state="needs-translation">我们有时也希望某些回答按照特定的概率进行触发。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26923">
        <source>这个时候我们可以使用 &lt;code&gt;-p prob&lt;/code&gt; 的语法进行设置。</source>
        <target state="needs-translation">这个时候我们可以使用 &lt;code&gt;-p prob&lt;/code&gt; 的语法进行设置。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26925">
        <source>例如 &lt;code&gt;# 问题 回答 -p 0.2&lt;/code&gt; 设置的问题的触发概率即为 20%。</source>
        <target state="needs-translation">例如 &lt;code&gt;# 问题 回答 -p 0.2&lt;/code&gt; 设置的问题的触发概率即为 20%。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26927">
        <source>那么如果一个问题存在多个回答，每个回答的触发概率又是如何计算的呢？</source>
        <target state="needs-translation">那么如果一个问题存在多个回答，每个回答的触发概率又是如何计算的呢？</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[3]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26929">
        <source>Koishi 会求出所有问答的触发概率之和，因此得到两种处理方式：</source>
        <target state="needs-translation">Koishi 会求出所有问答的触发概率之和，因此得到两种处理方式：</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[3]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26931">
        <source>如果总和不大于 1，则按照各自的概率触发各个问题</source>
        <target state="needs-translation">如果总和不大于 1，则按照各自的概率触发各个问题</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[1]/li[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26933">
        <source>如果总和大于 1，则各个问答的概率将被除以这个总和后以各自的概率触发这个问题</source>
        <target state="needs-translation">如果总和大于 1，则各个问答的概率将被除以这个总和后以各自的概率触发这个问题</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[1]/li[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26935">
        <source>举个例子。</source>
        <target state="needs-translation">举个例子。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[4]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26937">
        <source>如果一个问题有两个回答，概率分别为 0.3 和 0.5，则实际操作中这两个回答的触发概率就是 0.3 和 0.5。</source>
        <target state="needs-translation">如果一个问题有两个回答，概率分别为 0.3 和 0.5，则实际操作中这两个回答的触发概率就是 0.3 和 0.5。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[4]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26939">
        <source>但是如果一个问题有两个回答，概率分别是 0.6 和 1，因为总概率超过 1，因此两个问答的触发概率将被标准化，实际操作中它们的触发概率分别为 0.375 和 0.625 以保证总概率正好为 1。</source>
        <target state="needs-translation">但是如果一个问题有两个回答，概率分别是 0.6 和 1，因为总概率超过 1，因此两个问答的触发概率将被标准化，实际操作中它们的触发概率分别为 0.375 和 0.625 以保证总概率正好为 1。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[4]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26941">
        <source>称呼匹配</source>
        <target state="needs-translation">称呼匹配</target>
        <context-group purpose="information">
          <context context-type="source">Headline 2&#13;
XPath: /h2[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26943">
        <source>Koishi 的指令可以通过 @bot 或使用昵称进行调用。</source>
        <target state="needs-translation">Koishi 的指令可以通过 @bot 或使用昵称进行调用。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[5]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26945">
        <source>同理，教学系统中也有一套类似的机制用于匹配含有称呼的指令。</source>
        <target state="needs-translation">同理，教学系统中也有一套类似的机制用于匹配含有称呼的指令。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[5]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26947">
        <source>我们认为，每一个问题都拥有两个概率，一个是&lt;strong x-id=&quot;1&quot;&gt;严格匹配&lt;/strong&gt;（说是严格实际上包含了上文所介绍的 &lt;a href=&quot;#模糊匹配&quot;&gt;模糊匹配&lt;/a&gt; 机制），我们称为概率 S；另一个是&lt;strong x-id=&quot;1&quot;&gt;称呼匹配&lt;/strong&gt;，我们称之为概率 A。</source>
        <target state="needs-translation">我们认为，每一个问题都拥有两个概率，一个是&lt;strong x-id=&quot;1&quot;&gt;严格匹配&lt;/strong&gt;（说是严格实际上包含了上文所介绍的 &lt;a href=&quot;#模糊匹配&quot;&gt;模糊匹配&lt;/a&gt; 机制），我们称为概率 S；另一个是&lt;strong x-id=&quot;1&quot;&gt;称呼匹配&lt;/strong&gt;，我们称之为概率 A。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[6]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26949">
        <source>我们举一些例子：</source>
        <target state="needs-translation">我们举一些例子：</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[6]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26951">
        <source>早上好：无论是对机器人说，还是对其他群友说，机器人响应这个问题都是正常的，因此适合 S=1，A=1。</source>
        <target state="needs-translation">早上好：无论是对机器人说，还是对其他群友说，机器人响应这个问题都是正常的，因此适合 S=1，A=1。</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[2]/li[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26953">
        <source>我喜欢你：如果这个问题不是对机器人说的，那么机器人不应该响应它，因此适合 S=0，A=1。</source>
        <target state="needs-translation">我喜欢你：如果这个问题不是对机器人说的，那么机器人不应该响应它，因此适合 S=0，A=1。</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[2]/li[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26955">
        <source>荭茶：如果这个问题被加上了机器人前缀，这句话的意思就发生了改变，因此适合 S=1，A=0。</source>
        <target state="needs-translation">荭茶：如果这个问题被加上了机器人前缀，这句话的意思就发生了改变，因此适合 S=1，A=0。</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[2]/li[3]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26957">
        <source>这里对&lt;strong x-id=&quot;1&quot;&gt;前缀&lt;/strong&gt;的严格定义是，一个问题&lt;strong x-id=&quot;1&quot;&gt;以称呼开头，且之后还有其他字符&lt;/strong&gt;。</source>
        <target state="needs-translation">这里对&lt;strong x-id=&quot;1&quot;&gt;前缀&lt;/strong&gt;的严格定义是，一个问题&lt;strong x-id=&quot;1&quot;&gt;以称呼开头，且之后还有其他字符&lt;/strong&gt;。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[7]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26959">
        <source>因此昵称本身不属于含有前缀的问题。</source>
        <target state="needs-translation">因此昵称本身不属于含有前缀的问题。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[7]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26961">
        <source>当一个问题被创建或修改时，-p 会被理解成概率 S，-P 会被理解成概率 A。</source>
        <target state="needs-translation">当一个问题被创建或修改时，-p 会被理解成概率 S，-P 会被理解成概率 A。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[8]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26963">
        <source>如果问题存在前缀，则其将被删除，且默认概率为 p=0, P=1；否则默认概率为 p=1, P=0。</source>
        <target state="needs-translation">如果问题存在前缀，则其将被删除，且默认概率为 p=0, P=1；否则默认概率为 p=1, P=0。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[8]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26965">
        <source>当机器人收到一条消息时，如果该消息含有前缀，则其将被删除。</source>
        <target state="needs-translation">当机器人收到一条消息时，如果该消息含有前缀，则其将被删除。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[8]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26967">
        <source>之后正常获取可能触发的问答列表。</source>
        <target state="needs-translation">之后正常获取可能触发的问答列表。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[8]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26969">
        <source>如果之前没有删除前缀，则使用这些问答的概率 S 执行上文中的概率机制；否则使用这些问答的概率 A 执行上文中的概率机制。</source>
        <target state="needs-translation">如果之前没有删除前缀，则使用这些问答的概率 S 执行上文中的概率机制；否则使用这些问答的概率 A 执行上文中的概率机制。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[8]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26971">
        <source>举个例子，假设问答 1 和问答 2 的问题都是“早上好”，且问答 1 的触发概率为 S=0.6，A=0.8，问答 2 的触发概率为 S=1，A=0。</source>
        <target state="needs-translation">举个例子，假设问答 1 和问答 2 的问题都是“早上好”，且问答 1 的触发概率为 S=0.6，A=0.8，问答 2 的触发概率为 S=1，A=0。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[9]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26973">
        <source>则输入“早上好”时，问答 1, 2 分别取概率 0.6, 1，最终经过标准化，以 0.375 的概率触发问答 1，以 0.625 的概率触发问答 2。</source>
        <target state="needs-translation">则输入“早上好”时，问答 1, 2 分别取概率 0.6, 1，最终经过标准化，以 0.375 的概率触发问答 1，以 0.625 的概率触发问答 2。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[9]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26975">
        <source>输入“@bot，早上好”时，问答 1, 2 分别取概率 0.8, 0，最终以 0.8 的概率触发问答 1。</source>
        <target state="needs-translation">输入“@bot，早上好”时，问答 1, 2 分别取概率 0.8, 0，最终以 0.8 的概率触发问答 1。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[9]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26977">
        <source>称呼本身作为问题触发</source>
        <target state="needs-translation">称呼本身作为问题触发</target>
        <context-group purpose="information">
          <context context-type="source">Headline 2&#13;
XPath: /h2[3]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26979">
        <source>上面已经介绍过了，昵称本身不属于含有前缀的问题，因此比较特殊。</source>
        <target state="needs-translation">上面已经介绍过了，昵称本身不属于含有前缀的问题，因此比较特殊。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[10]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26981">
        <source>如果它本身作为问题被触发，则该会话的短时间内，即使没有前缀，获得的问题也会取 S, A 两个概率的最大值为最终概率。</source>
        <target state="needs-translation">如果它本身作为问题被触发，则该会话的短时间内，即使没有前缀，获得的问题也会取 S, A 两个概率的最大值为最终概率。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[10]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26983">
        <source>为什么这样设计呢？</source>
        <target state="needs-translation">为什么这样设计呢？</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[10]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26985">
        <source>因为现实中，许多人会把话拆开说。</source>
        <target state="needs-translation">因为现实中，许多人会把话拆开说。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[10]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26987">
        <source>举下面的例子：</source>
        <target state="needs-translation">举下面的例子：</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[10]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26989">
        <source>四季酱，我喜欢你</source>
        <target state="needs-translation">四季酱，我喜欢你</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /chat-panel[1]/chat-message[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26991">
        <source>你就是桃饱网大会员？</source>
        <target state="needs-translation">你就是桃饱网大会员？</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /chat-panel[1]/chat-message[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26993">
        <source>四季酱</source>
        <target state="needs-translation">四季酱</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /chat-panel[2]/chat-message[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26995">
        <source>有什么事吗？</source>
        <target state="needs-translation">有什么事吗？</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /chat-panel[2]/chat-message[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26997">
        <source>我喜欢你</source>
        <target state="needs-translation">我喜欢你</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /chat-panel[2]/chat-message[3]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="26999">
        <source>你就是桃饱网大会员？</source>
        <target state="needs-translation">你就是桃饱网大会员？</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /chat-panel[2]/chat-message[4]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="27001">
        <source>我们可以看到，虽然单独的“我喜欢你”不能触发“你就是桃饱网大会员”的回应（S=0），但是如果“我喜欢你”紧跟在一句“四季酱”之后，显然这句话是对机器人说的。</source>
        <target state="needs-translation">我们可以看到，虽然单独的“我喜欢你”不能触发“你就是桃饱网大会员”的回应（S=0），但是如果“我喜欢你”紧跟在一句“四季酱”之后，显然这句话是对机器人说的。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[11]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="27003">
        <source>因此在 Koishi 的教学系统中，称呼问题本身能够激活当前会话的 A 概率。</source>
        <target state="needs-translation">因此在 Koishi 的教学系统中，称呼问题本身能够激活当前会话的 A 概率。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[11]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="27005">
        <source>重定向到称呼匹配问答</source>
        <target state="needs-translation">重定向到称呼匹配问答</target>
        <context-group purpose="information">
          <context context-type="source">Headline 2&#13;
XPath: /h2[4]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="27007">
        <source>如果要重定向到称呼匹配的问答时，请&lt;strong x-id=&quot;1&quot;&gt;在目标问题上也加上前缀&lt;/strong&gt;，否则将无法触发下一个问题。</source>
        <target state="needs-translation">如果要重定向到称呼匹配的问答时，请&lt;strong x-id=&quot;1&quot;&gt;在目标问题上也加上前缀&lt;/strong&gt;，否则将无法触发下一个问题。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[12]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="27009">
        <source>例如，下面的例子将&lt;strong x-id=&quot;1&quot;&gt;无法工作&lt;/strong&gt;：</source>
        <target state="needs-translation">例如，下面的例子将&lt;strong x-id=&quot;1&quot;&gt;无法工作&lt;/strong&gt;：</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[12]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="27011">
        <source># 四季酱，自我介绍 大家好，我叫古明地恋！</source>
        <target state="needs-translation"># 四季酱，自我介绍 大家好，我叫古明地恋！</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /chat-panel[3]/chat-message[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="27013">
        <source>问答已添加，编号为 1001。</source>
        <target state="needs-translation">问答已添加，编号为 1001。</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /chat-panel[3]/chat-message[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="27015">
        <source># 四季酱，你能做什么 =&amp;gt; 自我介绍</source>
        <target state="needs-translation"># 四季酱，你能做什么 =&amp;gt; 自我介绍</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /chat-panel[3]/chat-message[3]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="27017">
        <source>问答已添加，编号为 1002。</source>
        <target state="needs-translation">问答已添加，编号为 1002。</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /chat-panel[3]/chat-message[4]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="27019">
        <source>反过来，利用这种特性，我们也可以实现一些更加高级的效果。</source>
        <target state="needs-translation">反过来，利用这种特性，我们也可以实现一些更加高级的效果。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[13]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="27021">
        <source>假如我们希望构造一个问答，使得其在正常情况下只能带称呼触发；但是在特定问题触发后可以不带称呼触发（参见 &lt;a href=&quot;./flow.md&quot;&gt;前置和后继机制&lt;/a&gt;）。</source>
        <target state="needs-translation">假如我们希望构造一个问答，使得其在正常情况下只能带称呼触发；但是在特定问题触发后可以不带称呼触发（参见 &lt;a href=&quot;./flow.md&quot;&gt;前置和后继机制&lt;/a&gt;）。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[13]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="27023">
        <source>在正常情况下这是做不到的，因为 Koishi 不会接受问题和回答都相同的两个教学问答。</source>
        <target state="needs-translation">在正常情况下这是做不到的，因为 Koishi 不会接受问题和回答都相同的两个教学问答。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[13]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="27025">
        <source>但有了重定向语法之后，只需结合重定向语法和后继机制就可以实现这种需求：</source>
        <target state="needs-translation">但有了重定向语法之后，只需结合重定向语法和后继机制就可以实现这种需求：</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[13]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="27027">
        <source># 四季酱爬 你才爬（指</source>
        <target state="needs-translation"># 四季酱爬 你才爬（指</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /chat-panel[4]/chat-message[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="27029">
        <source>问答已添加，编号为 1011。</source>
        <target state="needs-translation">问答已添加，编号为 1011。</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /chat-panel[4]/chat-message[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="27031">
        <source># 捕捉 捕捉失败，野生的四季酱跑掉了 &amp;gt;# 爬 =&amp;gt; 四季酱爬</source>
        <target state="needs-translation"># 捕捉 捕捉失败，野生的四季酱跑掉了 &amp;gt;# 爬 =&amp;gt; 四季酱爬</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /chat-panel[4]/chat-message[3]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="27033">
        <source>问答已添加，编号为 1013。</source>
        <target state="needs-translation">问答已添加，编号为 1013。</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /chat-panel[4]/chat-message[4]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="27035">
        <source>捕捉</source>
        <target state="needs-translation">捕捉</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /chat-panel[4]/chat-message[5]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="27037">
        <source>捕捉失败，野生的四季酱跑掉了</source>
        <target state="needs-translation">捕捉失败，野生的四季酱跑掉了</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /chat-panel[4]/chat-message[6]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="27039">
        <source>爬</source>
        <target state="needs-translation">爬</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /chat-panel[4]/chat-message[7]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="27041">
        <source>你才爬（指</source>
        <target state="needs-translation">你才爬（指</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /chat-panel[4]/chat-message[8]</context>
        </context-group>
      </trans-unit>
    </body>
  </file>
  <file id="1165" original="/[koishijs.koishi-plugin-dialogue] main/docs/zh-CN/regexp.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="27043">
        <source>正则匹配</source>
        <target state="needs-translation">正则匹配</target>
        <context-group purpose="information">
          <context context-type="source">Headline 1&#13;
XPath: /h1</context>
        </context-group>
      </trans-unit>
      <trans-unit id="27045">
        <source>::: warning&lt;br x-id=&quot;2&quot; /&gt;
正则匹配功能的最低使用权限为 3 级。</source>
        <target state="needs-translation">::: warning&lt;br x-id=&quot;2&quot; /&gt;
正则匹配功能的最低使用权限为 3 级。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="27047">
        <source>你可以通过配置 &lt;a href=&quot;./config.md#authority&quot;&gt;authority.regExp&lt;/a&gt; 修改这个行为。</source>
        <target state="needs-translation">你可以通过配置 &lt;a href=&quot;./config.md#authority&quot;&gt;authority.regExp&lt;/a&gt; 修改这个行为。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="27049" translate="no">
        <source>:::</source>
        <target>:::</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="27051">
        <source>基本用法</source>
        <target state="needs-translation">基本用法</target>
        <context-group purpose="information">
          <context context-type="source">Headline 2&#13;
XPath: /h2[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="27053">
        <source>如果你希望匹配问题中的某些特征而不是问题整体，你可以使用 &lt;code&gt;-x&lt;/code&gt; 进行正则表达式匹配。</source>
        <target state="needs-translation">如果你希望匹配问题中的某些特征而不是问题整体，你可以使用 &lt;code&gt;-x&lt;/code&gt; 进行正则表达式匹配。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="27055">
        <source>下面是一个例子：</source>
        <target state="needs-translation">下面是一个例子：</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="27057">
        <source># ^(.+)一时爽$ 一直$1一直爽 -x</source>
        <target state="needs-translation"># ^(.+)一时爽$ 一直$1一直爽 -x</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /chat-panel[1]/chat-message[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="27059">
        <source>问答已添加，编号为 1001。</source>
        <target state="needs-translation">问答已添加，编号为 1001。</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /chat-panel[1]/chat-message[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="27061">
        <source>挖坑一时爽</source>
        <target state="needs-translation">挖坑一时爽</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /chat-panel[1]/chat-message[3]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="27063">
        <source>一直挖坑一直爽</source>
        <target state="needs-translation">一直挖坑一直爽</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /chat-panel[1]/chat-message[4]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="27065">
        <source>在这个例子中，&lt;code&gt;^&lt;/code&gt; 和 &lt;code&gt;$&lt;/code&gt; 分别匹配问答的起始和结尾，&lt;code&gt;.+&lt;/code&gt; 匹配若干个非换行字符，&lt;code&gt;$1&lt;/code&gt; 表示第一个括号内的文本。</source>
        <target state="needs-translation">在这个例子中，&lt;code&gt;^&lt;/code&gt; 和 &lt;code&gt;$&lt;/code&gt; 分别匹配问答的起始和结尾，&lt;code&gt;.+&lt;/code&gt; 匹配若干个非换行字符，&lt;code&gt;$1&lt;/code&gt; 表示第一个括号内的文本。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[3]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="27067">
        <source>这样的语法极大地提升了问答捕获的自由度。</source>
        <target state="needs-translation">这样的语法极大地提升了问答捕获的自由度。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[3]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="27069">
        <source>对于已有的问答，我们也可以使用 &lt;code&gt;-X&lt;/code&gt; 来取消使用正则表达式匹配。</source>
        <target state="needs-translation">对于已有的问答，我们也可以使用 &lt;code&gt;-X&lt;/code&gt; 来取消使用正则表达式匹配。</target>
        <context-group purpose="information">
          <context context-type="source">Paragraph text&#13;
XPath: /p[4]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="27071">
        <source>此外，我们约定在实际触发时，如果一个问题同时能够触发正则匹配和非正则匹配的回答，会优先触发非正则匹配的问答。</source>
        <target state="needs-translation">此外，我们约定在实际触发时，如果一个问题同时能够触发正则匹配和非正则匹配的回答，会优先触发非正则匹配的问答。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[5]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="27073">
        <source>因此不必担心正则匹配的教学会影响已有问答的触发效果。</source>
        <target state="needs-translation">因此不必担心正则匹配的教学会影响已有问答的触发效果。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[5]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="27075">
        <source>支持的语法</source>
        <target state="needs-translation">支持的语法</target>
        <context-group purpose="information">
          <context context-type="source">Headline 2&#13;
XPath: /h2[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="27077">
        <source>下面是教学功能所支持的正则表达式语法：</source>
        <target state="needs-translation">下面是教学功能所支持的正则表达式语法：</target>
        <context-group purpose="information">
          <context context-type="source">Paragraph text&#13;
XPath: /p[6]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="27079">
        <source>&lt;code&gt;\&lt;/code&gt;：对后面的字符进行转义</source>
        <target state="needs-translation">&lt;code&gt;\&lt;/code&gt;：对后面的字符进行转义</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[1]/li[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="27081">
        <source>&lt;code&gt;.&lt;/code&gt;：匹配除换行以外的任意字符</source>
        <target state="needs-translation">&lt;code&gt;.&lt;/code&gt;：匹配除换行以外的任意字符</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[1]/li[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="27083">
        <source>, &lt;code&gt;$&lt;/code&gt;：匹配开头 / 结尾位置</source>
        <target state="needs-translation">, &lt;code&gt;$&lt;/code&gt;：匹配开头 / 结尾位置</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[1]/li[3]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="27085">
        <source>&lt;code&gt;[abx-z]&lt;/code&gt;, &lt;code&gt;[^abx-z]&lt;/code&gt;：匹配正值 / 负值字符集合</source>
        <target state="needs-translation">&lt;code&gt;[abx-z]&lt;/code&gt;, &lt;code&gt;[^abx-z]&lt;/code&gt;：匹配正值 / 负值字符集合</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[1]/li[4]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="27087">
        <source>：匹配前面的子式任意次</source>
        <target state="needs-translation">：匹配前面的子式任意次</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[1]/li[5]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="27089">
        <source>：匹配前面的子式至少 1 次</source>
        <target state="needs-translation">：匹配前面的子式至少 1 次</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[1]/li[6]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="27091">
        <source>&lt;code&gt;?&lt;/code&gt;：匹配前面的子式 0 次或 1 次</source>
        <target state="needs-translation">&lt;code&gt;?&lt;/code&gt;：匹配前面的子式 0 次或 1 次</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[1]/li[7]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="27093">
        <source>&lt;code&gt;{n}&lt;/code&gt;：匹配前面的子式 n 次</source>
        <target state="needs-translation">&lt;code&gt;{n}&lt;/code&gt;：匹配前面的子式 n 次</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[1]/li[8]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="27095">
        <source>&lt;code&gt;{m,n}&lt;/code&gt;：匹配前面的子式至少 m 最多 n 次</source>
        <target state="needs-translation">&lt;code&gt;{m,n}&lt;/code&gt;：匹配前面的子式至少 m 最多 n 次</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[1]/li[9]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="27097">
        <source>&lt;code&gt;x|y&lt;/code&gt;：匹配 x 或 y</source>
        <target state="needs-translation">&lt;code&gt;x|y&lt;/code&gt;：匹配 x 或 y</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[1]/li[10]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="27099">
        <source>&lt;code&gt;(patt)&lt;/code&gt;：匹配 patt 并捕获</source>
        <target state="needs-translation">&lt;code&gt;(patt)&lt;/code&gt;：匹配 patt 并捕获</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[1]/li[11]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="27101">
        <source>::: danger 警告&lt;br x-id=&quot;2&quot; /&gt;
MySQL 5.7 使用的正则表达式规范是 POSIX 1003.2，这是一个很落后的版本。</source>
        <target state="needs-translation">::: danger 警告&lt;br x-id=&quot;2&quot; /&gt;
MySQL 5.7 使用的正则表达式规范是 POSIX 1003.2，这是一个很落后的版本。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[7]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="27103">
        <source>下面的语法都是&lt;strong x-id=&quot;1&quot;&gt;不被支持&lt;/strong&gt;的：</source>
        <target state="needs-translation">下面的语法都是&lt;strong x-id=&quot;1&quot;&gt;不被支持&lt;/strong&gt;的：</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[7]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="27105">
        <source>&lt;code&gt;\d&lt;/code&gt;, &lt;code&gt;\D&lt;/code&gt;：转义字符集</source>
        <target state="needs-translation">&lt;code&gt;\d&lt;/code&gt;, &lt;code&gt;\D&lt;/code&gt;：转义字符集</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[2]/li[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="27107">
        <source>&lt;code&gt;\b&lt;/code&gt;, &lt;code&gt;\B&lt;/code&gt;：单词边界</source>
        <target state="needs-translation">&lt;code&gt;\b&lt;/code&gt;, &lt;code&gt;\B&lt;/code&gt;：单词边界</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[2]/li[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="27109">
        <source>&lt;code&gt;+?&lt;/code&gt;, &lt;code&gt;*?&lt;/code&gt;：非贪婪匹配</source>
        <target state="needs-translation">&lt;code&gt;+?&lt;/code&gt;, &lt;code&gt;*?&lt;/code&gt;：非贪婪匹配</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[2]/li[3]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="27111">
        <source>&lt;code&gt;(?:&lt;/code&gt;, &lt;code&gt;(?=&lt;/code&gt;：非捕获组</source>
        <target state="needs-translation">&lt;code&gt;(?:&lt;/code&gt;, &lt;code&gt;(?=&lt;/code&gt;：非捕获组</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[2]/li[4]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="27113">
        <source>因此我们建议你使用 mariadb 10.5 以上的版本以取代 MySQL。</source>
        <target state="needs-translation">因此我们建议你使用 mariadb 10.5 以上的版本以取代 MySQL。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[8]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="27115" translate="no">
        <source>:::</source>
        <target>:::</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[8]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="27117">
        <source>正则表达式与称呼匹配问答</source>
        <target state="needs-translation">正则表达式与称呼匹配问答</target>
        <context-group purpose="information">
          <context context-type="source">Headline 2&#13;
XPath: /h2[3]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="27119">
        <source>TODO</source>
        <target state="needs-translation">TODO</target>
        <context-group purpose="information">
          <context context-type="source">Paragraph text&#13;
XPath: /p[9]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="27121">
        <source>搜索中的正则匹配</source>
        <target state="needs-translation">搜索中的正则匹配</target>
        <context-group purpose="information">
          <context context-type="source">Headline 2&#13;
XPath: /h2[4]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="27123">
        <source>默认情况下，使用搜索功能的效果与实际触发时类似。</source>
        <target state="needs-translation">默认情况下，使用搜索功能的效果与实际触发时类似。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[10]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="27125">
        <source>换言之，当你使用问答搜索时，无论正则匹配还是非正则匹配到的问答都会被显示。</source>
        <target state="needs-translation">换言之，当你使用问答搜索时，无论正则匹配还是非正则匹配到的问答都会被显示。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[10]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="27127">
        <source>但在一些情况下，我们可能会有其他不同的需求。</source>
        <target state="needs-translation">但在一些情况下，我们可能会有其他不同的需求。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[10]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="27129">
        <source>最常见的情况就是我们希望用正则表达式来搜索问答原文（这听起来与普通的搜索有点类似，但实际上这里的匹配关系是相反的）。</source>
        <target state="needs-translation">最常见的情况就是我们希望用正则表达式来搜索问答原文（这听起来与普通的搜索有点类似，但实际上这里的匹配关系是相反的）。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[11]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="27131">
        <source>对于这种情况，只需在搜索时附带一个 &lt;code&gt;-x&lt;/code&gt; 即可。</source>
        <target state="needs-translation">对于这种情况，只需在搜索时附带一个 &lt;code&gt;-x&lt;/code&gt; 即可。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[11]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="27133">
        <source>而此时的搜索结果也会显示完整的问题和回答（如果不使用正则匹配，由于你已经提供了完整的问题或回答，则不会重复显示）：</source>
        <target state="needs-translation">而此时的搜索结果也会显示完整的问题和回答（如果不使用正则匹配，由于你已经提供了完整的问题或回答，则不会重复显示）：</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[11]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="27135">
        <source>## 一时 -x</source>
        <target state="needs-translation">## 一时 -x</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /chat-panel[2]/chat-message[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="27137">
        <source>问题正则表达式“一时”的搜索结果如下：</source>
        <target state="needs-translation">问题正则表达式“一时”的搜索结果如下：</target>
        <context-group purpose="information">
          <context context-type="source">Paragraph text&#13;
XPath: /chat-panel[2]/chat-message[2]/p[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="27139">
        <source>1001. 正则：^(.+)一时爽$，回答：一直$1一直爽</source>
        <target state="needs-translation">1001. 正则：^(.+)一时爽$，回答：一直$1一直爽</target>
        <context-group purpose="information">
          <context context-type="source">Paragraph text&#13;
XPath: /chat-panel[2]/chat-message[2]/p[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="27141">
        <source>另一种情况则是我们希望只显示那些非正则匹配到的结果。</source>
        <target state="needs-translation">另一种情况则是我们希望只显示那些非正则匹配到的结果。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[12]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="27143">
        <source>此时只需在搜索时附带一个 &lt;code&gt;-X&lt;/code&gt; 即可。</source>
        <target state="needs-translation">此时只需在搜索时附带一个 &lt;code&gt;-X&lt;/code&gt; 即可。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[12]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="27145">
        <source>我们来对比一下搜索结果：</source>
        <target state="needs-translation">我们来对比一下搜索结果：</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[12]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="27147">
        <source>## 挖坑一时爽</source>
        <target state="needs-translation">## 挖坑一时爽</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /chat-panel[3]/chat-message[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="27149">
        <source>问题“挖坑一时爽”的回答如下：&lt;br&gt;1001. [正则] 一直$1一直爽</source>
        <target state="needs-translation">问题“挖坑一时爽”的回答如下：&lt;br&gt;1001. [正则] 一直$1一直爽</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /chat-panel[3]/chat-message[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="27151">
        <source>## 挖坑一时爽 -X</source>
        <target state="needs-translation">## 挖坑一时爽 -X</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /chat-panel[3]/chat-message[3]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="27153">
        <source>没有搜索到问题“挖坑一时爽”。</source>
        <target state="needs-translation">没有搜索到问题“挖坑一时爽”。</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /chat-panel[3]/chat-message[4]</context>
        </context-group>
      </trans-unit>
    </body>
  </file>
  <file id="1167" original="/[koishijs.koishi-plugin-dialogue] main/docs/zh-CN/service.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="27155">
        <source>服务 API</source>
        <target state="needs-translation">服务 API</target>
        <context-group purpose="information">
          <context context-type="source">Headline 1&#13;
XPath: /h1</context>
        </context-group>
      </trans-unit>
      <trans-unit id="27157">
        <source>dialogue.flag()</source>
        <target state="needs-translation">dialogue.flag()</target>
        <context-group purpose="information">
          <context context-type="source">Headline 2&#13;
XPath: /h2</context>
        </context-group>
      </trans-unit>
    </body>
  </file>
  <file id="1169" original="/[koishijs.koishi-plugin-dialogue] main/docs/.vitepress/config/zh-CN.json" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="27159" resname="description">
        <source>基于 Koishi 的对话系统</source>
        <target state="needs-translation">基于 Koishi 的对话系统</target>
        <context-group purpose="information">
          <context context-type="source"> -&gt; description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="27161" resname="themeConfig.sidebar.0.text">
        <source>指南</source>
        <target state="needs-translation">指南</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; 0 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="27163" resname="themeConfig.sidebar.0.items.0.text">
        <source>基本用法</source>
        <target state="needs-translation">基本用法</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; 0 -&gt; items -&gt; 0 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="27165" resname="themeConfig.sidebar.0.items.0.link">
        <source>/</source>
        <target state="needs-translation">/</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; 0 -&gt; items -&gt; 0 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="27167" resname="themeConfig.sidebar.0.items.1.text">
        <source>插值调用</source>
        <target state="needs-translation">插值调用</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; 0 -&gt; items -&gt; 1 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="27169" resname="themeConfig.sidebar.0.items.1.link">
        <source>/interp.md</source>
        <target state="needs-translation">/interp.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; 0 -&gt; items -&gt; 1 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="27171" resname="themeConfig.sidebar.0.items.2.text">
        <source>概率机制</source>
        <target state="needs-translation">概率机制</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; 0 -&gt; items -&gt; 2 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="27173" resname="themeConfig.sidebar.0.items.2.link">
        <source>/prob.md</source>
        <target state="needs-translation">/prob.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; 0 -&gt; items -&gt; 2 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="27175" resname="themeConfig.sidebar.0.items.3.text">
        <source>正则匹配</source>
        <target state="needs-translation">正则匹配</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; 0 -&gt; items -&gt; 3 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="27177" resname="themeConfig.sidebar.0.items.3.link">
        <source>/regexp.md</source>
        <target state="needs-translation">/regexp.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; 0 -&gt; items -&gt; 3 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="27179" resname="themeConfig.sidebar.0.items.4.text">
        <source>上下文机制</source>
        <target state="needs-translation">上下文机制</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; 0 -&gt; items -&gt; 4 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="27181" resname="themeConfig.sidebar.0.items.4.link">
        <source>/context.md</source>
        <target state="needs-translation">/context.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; 0 -&gt; items -&gt; 4 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="27183" resname="themeConfig.sidebar.0.items.5.text">
        <source>前置与后继问答</source>
        <target state="needs-translation">前置与后继问答</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; 0 -&gt; items -&gt; 5 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="27185" resname="themeConfig.sidebar.0.items.5.link">
        <source>/flow.md</source>
        <target state="needs-translation">/flow.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; 0 -&gt; items -&gt; 5 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="27187" resname="themeConfig.sidebar.0.items.6.text">
        <source>其他机制</source>
        <target state="needs-translation">其他机制</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; 0 -&gt; items -&gt; 6 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="27189" resname="themeConfig.sidebar.0.items.6.link">
        <source>/misc.md</source>
        <target state="needs-translation">/misc.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; 0 -&gt; items -&gt; 6 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="27191" resname="themeConfig.sidebar.0.items.7.text">
        <source>配置项</source>
        <target state="needs-translation">配置项</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; 0 -&gt; items -&gt; 7 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="27193" resname="themeConfig.sidebar.0.items.7.link">
        <source>/config.md</source>
        <target state="needs-translation">/config.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; 0 -&gt; items -&gt; 7 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="27195" resname="themeConfig.sidebar.1.text">
        <source>更多</source>
        <target state="translated">更多</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; 1 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="27197" resname="themeConfig.sidebar.1.items.0.text">
        <source>Koishi 官网</source>
        <target state="needs-translation">Koishi 官网</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; 1 -&gt; items -&gt; 0 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="27199" resname="themeConfig.sidebar.1.items.0.link" translate="no">
        <source>https://koishi.chat</source>
        <target>https://koishi.chat</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; 1 -&gt; items -&gt; 0 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="27201" resname="themeConfig.sidebar.1.items.1.text">
        <source>支持作者</source>
        <target state="needs-translation">支持作者</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; 1 -&gt; items -&gt; 1 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="27203" resname="themeConfig.sidebar.1.items.1.link">
        <source>https://afdian.net/a/shigma</source>
        <target state="needs-translation">https://afdian.net/a/shigma</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; 1 -&gt; items -&gt; 1 -&gt; link</context>
        </context-group>
      </trans-unit>
    </body>
  </file>
  <file id="1200" original="/[koishijs.koishi] master/plugins/common/broadcast/src/locales/zh-CN.yml" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="37050" resname="commands.broadcast.description">
        <source>全服广播</source>
        <target state="translated">全服廣播</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; broadcast -&gt; description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="37052" resname="commands.broadcast.options.forced">
        <source>无视 silent 标签进行广播</source>
        <target state="translated">無視 silent 標籤進行廣播</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; broadcast -&gt; options -&gt; forced</context>
        </context-group>
      </trans-unit>
      <trans-unit id="37054" resname="commands.broadcast.options.only">
        <source>仅向当前账号负责的群进行广播</source>
        <target state="translated">僅向當前賬號負責的群進行廣播</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; broadcast -&gt; options -&gt; only</context>
        </context-group>
      </trans-unit>
      <trans-unit id="37056" resname="commands.broadcast.messages.expect-text">
        <source>请输入要发送的文本。</source>
        <target state="translated">請輸入要傳送的文字。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; broadcast -&gt; messages -&gt; expect-text</context>
        </context-group>
      </trans-unit>
    </body>
  </file>
  <file id="1202" original="/[koishijs.koishi] master/plugins/common/callme/src/locales/zh-CN.yml" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="37058" resname="commands.callme.description">
        <source>修改自己的称呼</source>
        <target state="translated">修改自己的稱呼</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; callme -&gt; description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="37060" resname="commands.callme.messages.current">
        <source>好的呢，{0}！</source>
        <target state="translated">好的呢，{0}！</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; callme -&gt; messages -&gt; current</context>
        </context-group>
      </trans-unit>
      <trans-unit id="37062" resname="commands.callme.messages.unnamed">
        <source>你还没有给自己起一个称呼呢~</source>
        <target state="translated">你還沒有給自己起一個稱呼呢~</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; callme -&gt; messages -&gt; unnamed</context>
        </context-group>
      </trans-unit>
      <trans-unit id="37064" resname="commands.callme.messages.unchanged">
        <source>称呼未发生变化。</source>
        <target state="translated">稱呼未發生變化。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; callme -&gt; messages -&gt; unchanged</context>
        </context-group>
      </trans-unit>
      <trans-unit id="37066" resname="commands.callme.messages.empty">
        <source>称呼不能为空。</source>
        <target state="translated">稱呼不能為空。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; callme -&gt; messages -&gt; empty</context>
        </context-group>
      </trans-unit>
      <trans-unit id="37068" resname="commands.callme.messages.invalid">
        <source>称呼中禁止包含纯文本以外的内容。</source>
        <target state="translated">稱呼中禁止包含純文本以外的內容。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; callme -&gt; messages -&gt; invalid</context>
        </context-group>
      </trans-unit>
      <trans-unit id="37070" resname="commands.callme.messages.duplicate">
        <source>禁止与其他用户重名。</source>
        <target state="translated">禁止與其他使用者重名。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; callme -&gt; messages -&gt; duplicate</context>
        </context-group>
      </trans-unit>
      <trans-unit id="37072" resname="commands.callme.messages.updated">
        <source>好的，{0}，请多指教！</source>
        <target state="translated">好的，{0}，請多指教！</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; callme -&gt; messages -&gt; updated</context>
        </context-group>
      </trans-unit>
      <trans-unit id="37074" resname="commands.callme.messages.failed">
        <source>修改称呼失败。</source>
        <target state="translated">修改稱呼失敗。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; callme -&gt; messages -&gt; failed</context>
        </context-group>
      </trans-unit>
    </body>
  </file>
  <file id="1210" original="/[koishijs.webui] main/plugins/commands/src/locales/zh-CN.yml" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="37208" resname="&quot;commands.command&quot;.description">
        <source>指令管理</source>
        <target state="needs-translation">指令管理</target>
        <context-group purpose="information">
          <context context-type="source">commands.command -&gt; description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="37210" resname="&quot;commands.command&quot;.options.create">
        <source>创建指令</source>
        <target state="needs-translation">创建指令</target>
        <context-group purpose="information">
          <context context-type="source">commands.command -&gt; options -&gt; create</context>
        </context-group>
      </trans-unit>
      <trans-unit id="37212" resname="&quot;commands.command&quot;.options.alias">
        <source>添加指令别名</source>
        <target state="needs-translation">添加指令别名</target>
        <context-group purpose="information">
          <context context-type="source">commands.command -&gt; options -&gt; alias</context>
        </context-group>
      </trans-unit>
      <trans-unit id="37844" resname="&quot;commands.command&quot;.options.unalias">
        <source>移除指令别名</source>
        <target state="needs-translation">移除指令别名</target>
        <context-group purpose="information">
          <context context-type="source">commands.command -&gt; options -&gt; unalias</context>
        </context-group>
      </trans-unit>
      <trans-unit id="37216" resname="&quot;commands.command&quot;.options.name">
        <source>修改显示名称</source>
        <target state="needs-translation">修改显示名称</target>
        <context-group purpose="information">
          <context context-type="source">commands.command -&gt; options -&gt; name</context>
        </context-group>
      </trans-unit>
      <trans-unit id="37218" resname="&quot;commands.command&quot;.options.parent">
        <source>设置父指令</source>
        <target state="needs-translation">设置父指令</target>
        <context-group purpose="information">
          <context context-type="source">commands.command -&gt; options -&gt; parent</context>
        </context-group>
      </trans-unit>
      <trans-unit id="37220" resname="&quot;commands.command&quot;.options.&quot;parent.&quot;">
        <source>移除父指令</source>
        <target state="needs-translation">移除父指令</target>
        <context-group purpose="information">
          <context context-type="source">commands.command -&gt; options -&gt; parent.</context>
        </context-group>
      </trans-unit>
      <trans-unit id="37222" resname="&quot;commands.command&quot;.options.option">
        <source>修改选项</source>
        <target state="needs-translation">修改选项</target>
        <context-group purpose="information">
          <context context-type="source">commands.command -&gt; options -&gt; option</context>
        </context-group>
      </trans-unit>
      <trans-unit id="37224" resname="&quot;commands.command&quot;.messages.not-found">
        <source>指令不存在。</source>
        <target state="needs-translation">指令不存在。</target>
        <context-group purpose="information">
          <context context-type="source">commands.command -&gt; messages -&gt; not-found</context>
        </context-group>
      </trans-unit>
      <trans-unit id="37226" resname="&quot;commands.command&quot;.messages.created">
        <source>已创建指令。</source>
        <target state="needs-translation">已创建指令。</target>
        <context-group purpose="information">
          <context context-type="source">commands.command -&gt; messages -&gt; created</context>
        </context-group>
      </trans-unit>
      <trans-unit id="37228" resname="&quot;commands.command&quot;.messages.updated">
        <source>已更新指令配置。</source>
        <target state="needs-translation">已更新指令配置。</target>
        <context-group purpose="information">
          <context context-type="source">commands.command -&gt; messages -&gt; updated</context>
        </context-group>
      </trans-unit>
    </body>
  </file>
  <file id="1218" original="/[koishijs.common] main/packages/alias/src/locales/zh-CN.yml" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="37272" resname="commands.alias.description">
        <source>创建别名指令</source>
        <target state="needs-translation">创建别名指令</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; alias -&gt; description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="37274" resname="commands.alias.messages.created">
        <source>已成功创建别名指令 {0}。</source>
        <target state="needs-translation">已成功创建别名指令 {0}。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; alias -&gt; messages -&gt; created</context>
        </context-group>
      </trans-unit>
      <trans-unit id="37276" resname="commands.alias.messages.updated">
        <source>已成功更新别名指令 {0}。</source>
        <target state="needs-translation">已成功更新别名指令 {0}。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; alias -&gt; messages -&gt; updated</context>
        </context-group>
      </trans-unit>
      <trans-unit id="37278" resname="commands.unalias.description">
        <source>删除别名指令</source>
        <target state="needs-translation">删除别名指令</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; unalias -&gt; description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="37280" resname="commands.unalias.messages.deleted">
        <source>已成功删除别名指令 {0}。</source>
        <target state="needs-translation">已成功删除别名指令 {0}。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; unalias -&gt; messages -&gt; deleted</context>
        </context-group>
      </trans-unit>
      <trans-unit id="37282" resname="commands.unalias.messages.not-found">
        <source>未找到别名指令 {0}。</source>
        <target state="needs-translation">未找到别名指令 {0}。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; unalias -&gt; messages -&gt; not-found</context>
        </context-group>
      </trans-unit>
    </body>
  </file>
  <file id="1220" original="/[koishijs.common] main/docs/zh-CN/plugins/alias.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="37284" translate="no">
        <source>koishi-plugin-alias</source>
        <target>koishi-plugin-alias</target>
        <context-group purpose="information">
          <context context-type="source">Headline 1&#13;
XPath: /h1</context>
        </context-group>
      </trans-unit>
      <trans-unit id="37286">
        <source>koishi-plugin-alias 可用于创建和删除别名指令。</source>
        <target state="needs-translation">koishi-plugin-alias 可用于创建和删除别名指令。</target>
        <context-group purpose="information">
          <context context-type="source">Paragraph text&#13;
XPath: /p[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="37288">
        <source>基本用法</source>
        <target state="needs-translation">基本用法</target>
        <context-group purpose="information">
          <context context-type="source">Headline 2&#13;
XPath: /h2[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="37290">
        <source>alias about echo</source>
        <target state="needs-translation">alias about echo</target>
        <context-group purpose="information">
          <context context-type="source">Paragraph text&#13;
XPath: /chat-panel/chat-message[1]/p[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="37292">
        <source>Koishi 是一个跨平台、可扩展、高性能的聊天机器人框架。</source>
        <target state="translated">Koishi 是一個跨平臺、可擴充套件、高效能的聊天機器人框架。</target>
        <context-group purpose="information">
          <context context-type="source">Paragraph text&#13;
XPath: /chat-panel/chat-message[1]/p[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="37294">
        <source>官方网站：https://koishi.chat</source>
        <target state="needs-translation">官方网站：https://koishi.chat</target>
        <context-group purpose="information">
          <context context-type="source">Paragraph text&#13;
XPath: /chat-panel/chat-message[1]/p[3]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="37296">
        <source>已成功创建别名指令 about。</source>
        <target state="needs-translation">已成功创建别名指令 about。</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /chat-panel/chat-message[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="37298">
        <source>about</source>
        <target state="needs-translation">about</target>
        <context-group purpose="information">
          <context context-type="source">Text&#13;
XPath: /chat-panel/chat-message[3]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="37300">
        <source>Koishi 是一个跨平台、可扩展、高性能的聊天机器人框架。</source>
        <target state="translated">Koishi 是一個跨平臺、可擴充套件、高效能的聊天機器人框架。</target>
        <context-group purpose="information">
          <context context-type="source">Paragraph text&#13;
XPath: /chat-panel/chat-message[4]/p[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="37302">
        <source>官方网站：https://koishi.chat</source>
        <target state="needs-translation">官方网站：https://koishi.chat</target>
        <context-group purpose="information">
          <context context-type="source">Paragraph text&#13;
XPath: /chat-panel/chat-message[4]/p[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="37304">
        <source>指令：alias</source>
        <target state="needs-translation">指令：alias</target>
        <context-group purpose="information">
          <context context-type="source">Headline 3&#13;
XPath: /h3[1]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="37306">
        <source>基本语法：&lt;code&gt;alias &amp;lt;name&amp;gt; &amp;lt;command&amp;gt;&lt;/code&gt;</source>
        <target state="needs-translation">基本语法：&lt;code&gt;alias &amp;lt;name&amp;gt; &amp;lt;command&amp;gt;&lt;/code&gt;</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[1]/li</context>
        </context-group>
      </trans-unit>
      <trans-unit id="37308">
        <source>alias 指令用于创建别名指令。</source>
        <target state="needs-translation">alias 指令用于创建别名指令。</target>
        <context-group purpose="information">
          <context context-type="source">Paragraph text&#13;
XPath: /p[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="37310">
        <source>指令：unalias</source>
        <target state="needs-translation">指令：unalias</target>
        <context-group purpose="information">
          <context context-type="source">Headline 3&#13;
XPath: /h3[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="37312">
        <source>基本语法：&lt;code&gt;unalias &amp;lt;name&amp;gt;&lt;/code&gt;</source>
        <target state="needs-translation">基本语法：&lt;code&gt;unalias &amp;lt;name&amp;gt;&lt;/code&gt;</target>
        <context-group purpose="information">
          <context context-type="source">List Item&#13;
XPath: /ul[2]/li</context>
        </context-group>
      </trans-unit>
      <trans-unit id="37314">
        <source>unalias 指令用于删除别名指令。</source>
        <target state="needs-translation">unalias 指令用于删除别名指令。</target>
        <context-group purpose="information">
          <context context-type="source">Paragraph text&#13;
XPath: /p[3]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="37316">
        <source>功能对比</source>
        <target state="needs-translation">功能对比</target>
        <context-group purpose="information">
          <context context-type="source">Headline 2&#13;
XPath: /h2[2]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="37318">
        <source>一些其他插件也可以实现类似的功能，但是它们之间有一些区别。</source>
        <target state="needs-translation">一些其他插件也可以实现类似的功能，但是它们之间有一些区别。</target>
        <context-group purpose="information">
          <context context-type="source">Paragraph text&#13;
XPath: /p[4]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="37320">
        <source>commands</source>
        <target state="needs-translation">commands</target>
        <context-group purpose="information">
          <context context-type="source">Headline 3&#13;
XPath: /h3[3]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="37322">
        <source>&lt;a href=&quot;https://koishi.chat/zh-CN/plugins/console/commands.html&quot;&gt;@koishijs/plugin-commands&lt;/a&gt; 插件提供了 &lt;code&gt;command&lt;/code&gt; 指令，可以通过 &lt;code&gt;--alias&lt;/code&gt; 和 &lt;code&gt;--unalias&lt;/code&gt; 选项来创建和删除别名。</source>
        <target state="needs-translation">&lt;a href=&quot;https://koishi.chat/zh-CN/plugins/console/commands.html&quot;&gt;@koishijs/plugin-commands&lt;/a&gt; 插件提供了 &lt;code&gt;command&lt;/code&gt; 指令，可以通过 &lt;code&gt;--alias&lt;/code&gt; 和 &lt;code&gt;--unalias&lt;/code&gt; 选项来创建和删除别名。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[5]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="37324">
        <source>与本插件的区别在于，commands 插件创建的只是已有指令的别名，必须依附于某一条指令存在；而本插件创建的指令是独立存在的，因此可以实现多指令的顺序或嵌套调用，在使用上更加灵活。</source>
        <target state="needs-translation">与本插件的区别在于，commands 插件创建的只是已有指令的别名，必须依附于某一条指令存在；而本插件创建的指令是独立存在的，因此可以实现多指令的顺序或嵌套调用，在使用上更加灵活。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[5]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="37326">
        <source>当然，@koishijs/plugin-commands 还提供了其他能力，例如修改父指令、修改指令配置等。</source>
        <target state="needs-translation">当然，@koishijs/plugin-commands 还提供了其他能力，例如修改父指令、修改指令配置等。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[6]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="37328">
        <source>你可以同时使用两个插件，以便充分发挥它们的功能。</source>
        <target state="needs-translation">你可以同时使用两个插件，以便充分发挥它们的功能。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[6]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="37330">
        <source>dialogue</source>
        <target state="needs-translation">dialogue</target>
        <context-group purpose="information">
          <context context-type="source">Headline 3&#13;
XPath: /h3[4]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="37332">
        <source>&lt;a href=&quot;https://dialogue.koishi.chat/zh-CN/&quot;&gt;koishi-plugin-dialogue&lt;/a&gt; 插件功能十分强大。</source>
        <target state="needs-translation">&lt;a href=&quot;https://dialogue.koishi.chat/zh-CN/&quot;&gt;koishi-plugin-dialogue&lt;/a&gt; 插件功能十分强大。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[7]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="37334">
        <source>借助于其自带的指令插值语法，本插件所能实现的功能它都能实现。</source>
        <target state="needs-translation">借助于其自带的指令插值语法，本插件所能实现的功能它都能实现。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[7]</context>
        </context-group>
      </trans-unit>
      <trans-unit id="37336">
        <source>不过它的语法更复杂，且依赖数据库服务。</source>
        <target state="needs-translation">不过它的语法更复杂，且依赖数据库服务。</target>
        <context-group purpose="information">
          <context context-type="source">XPath: /p[7]</context>
        </context-group>
      </trans-unit>
    </body>
  </file>
  <file id="1246" original="/[koishijs.common] main/docs/zh-CN/plugins/at-command.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="39030" translate="no">
        <source>koishi-plugin-at-command</source>
        <target>koishi-plugin-at-command</target>
      </trans-unit>
      <trans-unit id="39032">
        <source>koishi-plugin-at-command 可用于在有人发送「@机器人」时触发特定指令。</source>
        <target state="needs-translation">koishi-plugin-at-command 可用于在有人发送「@机器人」时触发特定指令。</target>
      </trans-unit>
      <trans-unit id="39034">
        <source>@Koishi</source>
        <target state="needs-translation">@Koishi</target>
      </trans-unit>
      <trans-unit id="39036">
        <source>当前可用的指令有：</source>
        <target state="needs-translation">当前可用的指令有：</target>
      </trans-unit>
      <trans-unit id="39038">
        <source>……</source>
        <target state="needs-translation">……</target>
      </trans-unit>
      <trans-unit id="39040">
        <source>配置项</source>
        <target state="needs-translation">配置项</target>
      </trans-unit>
      <trans-unit id="39042">
        <source>config.execute</source>
        <target state="needs-translation">config.execute</target>
      </trans-unit>
      <trans-unit id="39044">
        <source>类型：`string`</source>
        <target state="needs-translation">类型：`string`</target>
      </trans-unit>
      <trans-unit id="39046">
        <source>默认值：`'help'`</source>
        <target state="needs-translation">默认值：`'help'`</target>
      </trans-unit>
      <trans-unit id="39048">
        <source>要调用的指令。</source>
        <target state="needs-translation">要调用的指令。</target>
      </trans-unit>
      <trans-unit id="39050">
        <source>替代方案</source>
        <target state="needs-translation">替代方案</target>
      </trans-unit>
      <trans-unit id="39052">
        <source>可以使用 [koishi-plugin-dialogue](https://dialogue.koishi.chat/zh-CN/) 实现此插件的全部功能。</source>
        <target state="needs-translation">可以使用 [koishi-plugin-dialogue](https://dialogue.koishi.chat/zh-CN/) 实现此插件的全部功能。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1254" original="/[koishijs.koishi] master/plugins/database/postgres/src/locales/zh-CN.yml" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="39136" resname="host">
        <source>要连接到的主机名。</source>
        <target state="translated">要連接到的主機名。</target>
        <context-group purpose="information">
          <context context-type="source"> -&gt; host</context>
        </context-group>
      </trans-unit>
      <trans-unit id="39138" resname="port">
        <source>要连接到的端口号。</source>
        <target state="translated">要連接到的端口號。</target>
        <context-group purpose="information">
          <context context-type="source"> -&gt; port</context>
        </context-group>
      </trans-unit>
      <trans-unit id="39140" resname="username">
        <source>要使用的用户名。</source>
        <target state="translated">要使用的使用者名。</target>
        <context-group purpose="information">
          <context context-type="source"> -&gt; username</context>
        </context-group>
      </trans-unit>
      <trans-unit id="39142" resname="password">
        <source>要使用的密码。</source>
        <target state="translated">要使用的密碼。</target>
        <context-group purpose="information">
          <context context-type="source"> -&gt; password</context>
        </context-group>
      </trans-unit>
      <trans-unit id="39144" resname="database">
        <source>要访问的数据库名。</source>
        <target state="translated">要訪問的數據庫名。</target>
        <context-group purpose="information">
          <context context-type="source"> -&gt; database</context>
        </context-group>
      </trans-unit>
    </body>
  </file>
  <file id="1388" original="/[koishijs.docs] main/zh-CN/about/community.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="43080">
        <source>社区资源</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">社區資源</target>
      </trans-unit>
      <trans-unit id="43082">
        <source>此页面中总结了一些优秀的社区资源可供学习。</source>
        <target state="needs-translation">此页面中总结了一些优秀的社区资源可供学习。</target>
      </trans-unit>
      <trans-unit id="43084">
        <source>如果你也想在此页面中展示你的项目，请在点击页面底部的编辑按钮后创建 Pull Request。</source>
        <target state="needs-translation">如果你也想在此页面中展示你的项目，请在点击页面底部的编辑按钮后创建 Pull Request。</target>
      </trans-unit>
      <trans-unit id="63912">
        <source>社群</source>
        <target state="needs-translation">社群</target>
      </trans-unit>
      <trans-unit id="63914">
        <source>QQ 群</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">QQ 群</target>
      </trans-unit>
      <trans-unit id="63916">
        <source>[590104798](https://qm.qq.com/q/vJ0kcQePCM)：Koishi 非官方交流群</source>
        <target state="needs-translation">[590104798](https://qm.qq.com/q/vJ0kcQePCM)：Koishi 非官方交流群</target>
      </trans-unit>
      <trans-unit id="67032">
        <source>论坛</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">論壇</target>
      </trans-unit>
      <trans-unit id="67034">
        <source>[Koishi Unofficial](https://forum.itzdrli.cc): Koishi 非官方论坛</source>
        <target state="needs-translation">[Koishi Unofficial](https://forum.itzdrli.cc): Koishi 非官方论坛</target>
      </trans-unit>
      <trans-unit id="43086">
        <source>文档</source>
        <target state="needs-translation">文档</target>
      </trans-unit>
      <trans-unit id="43088">
        <source>[Koishi 插件开发入门教程](https://mp.weixin.qq.com/mp/appmsgalbum?action=getalbum&amp;album_id=2700565655187865601) (沐辰-TimeBather)</source>
        <target state="needs-translation">[Koishi 插件开发入门教程](https://mp.weixin.qq.com/mp/appmsgalbum?action=getalbum&amp;album_id=2700565655187865601) (沐辰-TimeBather)</target>
      </trans-unit>
      <trans-unit id="43090">
        <source>视频</source>
        <target state="needs-translation">视频</target>
      </trans-unit>
      <trans-unit id="43092">
        <source>[合集] [Koishi 机器人教程](https://space.bilibili.com/23224916/channel/collectiondetail?sid=1049866) (Il Harper)</source>
        <target state="needs-translation">[合集] [Koishi 机器人教程](https://space.bilibili.com/23224916/channel/collectiondetail?sid=1049866) (Il Harper)</target>
      </trans-unit>
    </body>
  </file>
  <file id="1390" original="/[koishijs.docs] main/zh-CN/about/contact.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="43094">
        <source>参与讨论</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">參與討論</target>
      </trans-unit>
      <trans-unit id="43096">
        <source>如果你在 Koishi 使用中遇到了问题，或者有新奇的点子想与其他人讨论，欢迎参与我们的社区。</source>
        <target state="needs-translation">如果你在 Koishi 使用中遇到了问题，或者有新奇的点子想与其他人讨论，欢迎参与我们的社区。</target>
      </trans-unit>
      <trans-unit id="43098">
        <source>QQ 群</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">QQ 群</target>
      </trans-unit>
      <trans-unit id="43100">
        <source>用户群</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">用戶群</target>
      </trans-unit>
      <trans-unit id="43102" translate="no">
        <source>[948266958](https://qm.qq.com/q/7C9E9rjR0Q)</source>
        <target>[948266958](https://qm.qq.com/q/7C9E9rjR0Q)</target>
      </trans-unit>
      <trans-unit id="43104">
        <source>本群适用于刚刚入门 Koishi，或者在 Koishi 的使用过程中遇到了问题，希望得到解答的用户——这里有热情的群友随时解答你的问题！</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">本群適用於剛剛入門 Koishi，或者在 Koishi 的使用過程中遇到了問題，希望得到解答的用戶——這裏有熱情的群友隨時解答你的問題！</target>
      </trans-unit>
      <trans-unit id="43106">
        <source>开发者群</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">開發者群</target>
      </trans-unit>
      <trans-unit id="43108">
        <source>[426230045](https://jq.qq.com/?_wv=1027&amp;k=6FDoxQ6g)</source>
        <target state="needs-translation">[426230045](https://jq.qq.com/?_wv=1027&amp;k=6FDoxQ6g)</target>
      </trans-unit>
      <trans-unit id="43110">
        <source>本群适用于已经有一定 Node.js / TypeScript 基础，并对 Koishi 开发感兴趣的用户——你可以在这里参与 Koishi 以及其他相关话题的深度讨论。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">本群適用於已經有一定 Node,js / TypeScript 基礎，并對 Koishi 開發感興趣的用戶——你可以在這裏參與 Koishi 以及其他相關話題的深度討論。</target>
      </trans-unit>
      <trans-unit id="43112">
        <source>Discord</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">Discord</target>
      </trans-unit>
      <trans-unit id="43114">
        <source>[加入服务器](https://discord.com/invite/xfxYwmd284)</source>
        <target state="needs-translation">[加入服务器](https://discord.com/invite/xfxYwmd284)</target>
      </trans-unit>
      <trans-unit id="43116">
        <source>我们的 Discord 服务器内设有版本发布、开发交流和问题反馈等不同功能的频道，你也可以在这里参与讨论。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">我們的 Discord 服務器內設有版本發布、開發交流和問題反饋等不同功能的頻道，你也可以在這裏參與討論。</target>
      </trans-unit>
      <trans-unit id="43118">
        <source>Telegram</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">Telegram</target>
      </trans-unit>
      <trans-unit id="43120">
        <source>[加入闲聊群](https://t.me/koishichat) / [加入通知频道](https://t.me/koishichannel)</source>
        <target state="needs-translation">[加入闲聊群](https://t.me/koishichat) / [加入通知频道](https://t.me/koishichannel)</target>
      </trans-unit>
      <trans-unit id="43122">
        <source>欢迎加入我们的 Telegram 群聊，你可以在这里参与讨论，或者在 Telegram 通知群中接收版本更新通知。</source>
        <target state="needs-translation">欢迎加入我们的 Telegram 群聊，你可以在这里参与讨论，或者在 Telegram 通知群中接收版本更新通知。</target>
      </trans-unit>
      <trans-unit id="43124">
        <source>论坛</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">論壇</target>
      </trans-unit>
      <trans-unit id="43126" translate="no">
        <source>&lt;https://forum.koishi.xyz&gt;</source>
        <target>&lt;https://forum.koishi.xyz&gt;</target>
      </trans-unit>
      <trans-unit id="43128">
        <source>论坛是一种特别的讨论方式，它允许你的问题、想法、反馈被永久的保存下来，并且可以同时进行不同的讨论。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">論壇是一種特別的討論方式，它允許你的問題、想法、反饋被永久的保存下來，並且可以同時進行不同的討論。</target>
      </trans-unit>
      <trans-unit id="43130">
        <source>你的问题在论坛有更大的可能性获得解答，并且能够保存下来让他人也受益。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">你的問題在論壇有更大的可能性獲得解答，並且能夠保存下來讓他人也受益。</target>
      </trans-unit>
      <trans-unit id="43132">
        <source>企业支持</source>
        <target state="needs-translation">企业支持</target>
      </trans-unit>
      <trans-unit id="43134">
        <source>QQ：[2953529126](https://qm.qq.com/q/P8eMJkP5yI) / 微信：ilharp</source>
        <target state="needs-translation">QQ：[2953529126](https://qm.qq.com/q/P8eMJkP5yI) / 微信：ilharp</target>
      </trans-unit>
      <trans-unit id="43136">
        <source>我们为企业用户提供专属支持。</source>
        <target state="needs-translation">我们为企业用户提供专属支持。</target>
      </trans-unit>
      <trans-unit id="43138">
        <source>如果您是企业用户，除了通过上面的方式参与讨论以外，还可以添加客服，获得一对一专属支持。</source>
        <target state="needs-translation">如果您是企业用户，除了通过上面的方式参与讨论以外，还可以添加客服，获得一对一专属支持。</target>
      </trans-unit>
      <trans-unit id="63918">
        <source>非官方渠道</source>
        <target state="needs-translation">非官方渠道</target>
      </trans-unit>
      <trans-unit id="63920">
        <source>活跃的社区成员自发地创建了一些非官方的讨论渠道，你也可以在这里参与讨论。</source>
        <target state="needs-translation">活跃的社区成员自发地创建了一些非官方的讨论渠道，你也可以在这里参与讨论。</target>
      </trans-unit>
      <trans-unit id="63922">
        <source>前往 [社区资源](./community.md) 页面查看更多非官方渠道。</source>
        <target state="needs-translation">前往 [社区资源](./community.md) 页面查看更多非官方渠道。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1394" original="/[koishijs.docs] main/zh-CN/about/contribute/structure.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="43254">
        <source>项目结构</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">專案結構</target>
      </trans-unit>
    </body>
  </file>
  <file id="1396" original="/[koishijs.docs] main/zh-CN/about/events.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="43256">
        <source>大事件</source>
        <target state="needs-translation">大事件</target>
      </trans-unit>
      <trans-unit id="43258">
        <source>开源之夏 2023</source>
        <target state="needs-translation">开源之夏 2023</target>
      </trans-unit>
      <trans-unit id="43260">
        <source>开源之夏是由中科院软件所“开源软件供应链点亮计划”发起并长期支持的一项暑期开源活动，旨在鼓励在校学生积极参与开源软件的开发维护，培养和发掘更多优秀的开发者，促进优秀开源软件社区的蓬勃发展，助力开源软件供应链建设。</source>
        <target state="needs-translation">开源之夏是由中科院软件所“开源软件供应链点亮计划”发起并长期支持的一项暑期开源活动，旨在鼓励在校学生积极参与开源软件的开发维护，培养和发掘更多优秀的开发者，促进优秀开源软件社区的蓬勃发展，助力开源软件供应链建设。</target>
      </trans-unit>
      <trans-unit id="43262">
        <source>Koishi 有幸作为开源社区 [参与](https://summer-ospp.ac.cn/org/orgdetail/90fe7a64-0ec0-4c60-963d-becc7e95f977?lang=zh) 了开源之夏 2023 活动，并完成了以下两个项目的开发：</source>
        <target state="needs-translation">Koishi 有幸作为开源社区 [参与](https://summer-ospp.ac.cn/org/orgdetail/90fe7a64-0ec0-4c60-963d-becc7e95f977?lang=zh) 了开源之夏 2023 活动，并完成了以下两个项目的开发：</target>
      </trans-unit>
      <trans-unit id="43264">
        <source>[Koishi 通用平台聊天插件](https://summer-ospp.ac.cn/org/prodetail/2390f0169?list=org&amp;navpage=org)</source>
        <target state="needs-translation">[Koishi 通用平台聊天插件](https://summer-ospp.ac.cn/org/prodetail/2390f0169?list=org&amp;navpage=org)</target>
      </trans-unit>
      <trans-unit id="43266">
        <source>[Koishi Android 客户端](https://summer-ospp.ac.cn/org/prodetail/2390f0170?list=org&amp;navpage=org)</source>
        <target state="needs-translation">[Koishi Android 客户端](https://summer-ospp.ac.cn/org/prodetail/2390f0170?list=org&amp;navpage=org)</target>
      </trans-unit>
    </body>
  </file>
  <file id="1398" original="/[koishijs.docs] main/zh-CN/about/faq.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="43268">
        <source>常见问题</source>
        <target state="needs-translation">常见问题</target>
      </trans-unit>
      <trans-unit id="43270">
        <source>谁在维护 Koishi？</source>
        <target state="needs-translation">谁在维护 Koishi？</target>
      </trans-unit>
      <trans-unit id="43272">
        <source>Koishi 是一个由 Shigma 创立的开源项目。</source>
        <target state="needs-translation">Koishi 是一个由 Shigma 创立的开源项目。</target>
      </trans-unit>
      <trans-unit id="43274">
        <source>它于 2020 年 1 月发布了第一个正式版本。</source>
        <target state="needs-translation">它于 2020 年 1 月发布了第一个正式版本。</target>
      </trans-unit>
      <trans-unit id="43276">
        <source>如今，Koishi 由其核心团队维护，并由 Shigma 担任主要负责人。</source>
        <target state="needs-translation">如今，Koishi 由其核心团队维护，并由 Shigma 担任主要负责人。</target>
      </trans-unit>
      <trans-unit id="43278">
        <source>更多信息请参阅 [团队成员](./team.md)。</source>
        <target state="needs-translation">更多信息请参阅 [团队成员](./team.md)。</target>
      </trans-unit>
      <trans-unit id="43280">
        <source>谁在使用 Koishi？</source>
        <target state="needs-translation">谁在使用 Koishi？</target>
      </trans-unit>
      <trans-unit id="43282">
        <source>接触 Koishi 的人按照场景可以大致分为三种角色：</source>
        <target state="needs-translation">接触 Koishi 的人按照场景可以大致分为三种角色：</target>
      </trans-unit>
      <trans-unit id="43284">
        <source>开发者：他们实际编写了 Koishi 插件</source>
        <target state="needs-translation">开发者：他们实际编写了 Koishi 插件</target>
      </trans-unit>
      <trans-unit id="43286">
        <source>搭建者：他们使用 Koishi 搭建了机器人</source>
        <target state="needs-translation">搭建者：他们使用 Koishi 搭建了机器人</target>
      </trans-unit>
      <trans-unit id="43288">
        <source>使用者：他们与 Koishi 机器人进行交互</source>
        <target state="needs-translation">使用者：他们与 Koishi 机器人进行交互</target>
      </trans-unit>
      <trans-unit id="43290">
        <source>目前，在 Koishi 的插件市场中能看到超过 1000 个插件，这些插件由超过 500 位开发者维护。</source>
        <target state="needs-translation">目前，在 Koishi 的插件市场中能看到超过 1000 个插件，这些插件由超过 500 位开发者维护。</target>
      </trans-unit>
      <trans-unit id="43292">
        <source>在 GitHub 上，Koishi 有超过 3000 个星标。</source>
        <target state="needs-translation">在 GitHub 上，Koishi 有超过 3000 个星标。</target>
      </trans-unit>
      <trans-unit id="43294">
        <source>在官方提供的各种讨论频道中，有着数千位活跃的搭建者。</source>
        <target state="needs-translation">在官方提供的各种讨论频道中，有着数千位活跃的搭建者。</target>
      </trans-unit>
      <trans-unit id="43296">
        <source>其中许多搭建者仅一个机器人就能覆盖数万活跃用户。</source>
        <target state="needs-translation">其中许多搭建者仅一个机器人就能覆盖数万活跃用户。</target>
      </trans-unit>
      <trans-unit id="43298">
        <source>Koishi 体积小吗？</source>
        <target state="needs-translation">Koishi 体积小吗？</target>
      </trans-unit>
      <trans-unit id="43300">
        <source>Koishi 通过 Cordis 架构实现了模块化的设计，因此它的体积非常小。</source>
        <target state="needs-translation">Koishi 通过 Cordis 架构实现了模块化的设计，因此它的体积非常小。</target>
      </trans-unit>
      <trans-unit id="43302">
        <source>Koishi 的核心体积不到 [350 KB](https://bundlephobia.com/package/@koishijs/core)，而一个完整的项目连同包管理器的体积也仅仅在 [10 MB](https://github.com/koishijs/boilerplate/releases) 左右。</source>
        <target state="needs-translation">Koishi 的核心体积不到 [350 KB](https://bundlephobia.com/package/@koishijs/core)，而一个完整的项目连同包管理器的体积也仅仅在 [10 MB](https://github.com/koishijs/boilerplate/releases) 左右。</target>
      </trans-unit>
      <trans-unit id="43304">
        <source>未来，我们还会引入新的插件加载机制，这将近一步优化 Koishi 的体积。</source>
        <target state="needs-translation">未来，我们还会引入新的插件加载机制，这将近一步优化 Koishi 的体积。</target>
      </trans-unit>
      <trans-unit id="43306">
        <source>Koishi 能胜任大型项目吗？</source>
        <target state="needs-translation">Koishi 能胜任大型项目吗？</target>
      </trans-unit>
      <trans-unit id="43308">
        <source>可以。</source>
        <target state="needs-translation">可以。</target>
      </trans-unit>
      <trans-unit id="43310">
        <source>Koishi 中的绝大多数功能都通过 [服务](../guide/plugin/service.md) 的形式提供，这意味着你随时可以将一些轻量级服务替换为更专业的实现。</source>
        <target state="needs-translation">Koishi 中的绝大多数功能都通过 [服务](../guide/plugin/service.md) 的形式提供，这意味着你随时可以将一些轻量级服务替换为更专业的实现。</target>
      </trans-unit>
      <trans-unit id="43312">
        <source>例如，尽管模板项目中使用 SQLite 作为数据库，但你可以随时将其替换为 MongoDB, MySQL, PostgreSQL 等专业数据库。</source>
        <target state="needs-translation">例如，尽管模板项目中使用 SQLite 作为数据库，但你可以随时将其替换为 MongoDB, MySQL, PostgreSQL 等专业数据库。</target>
      </trans-unit>
      <trans-unit id="43314">
        <source>此外，Koishi 为插件开发提供了全面的文档 (超过 15 万字) 和工具链支持，这将显著降低新手开发者的入门和学习成本，并确保开发体验在应用规模增长的过程中依旧保持丝滑。</source>
        <target state="needs-translation">此外，Koishi 为插件开发提供了全面的文档 (超过 15 万字) 和工具链支持，这将显著降低新手开发者的入门和学习成本，并确保开发体验在应用规模增长的过程中依旧保持丝滑。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1400" original="/[koishijs.docs] main/zh-CN/about/history.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="43316">
        <source>发展史</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">發展史</target>
      </trans-unit>
      <trans-unit id="43318">
        <source>2019 年 8 月，我开始编写我的第一个基于 Node.js 的聊天机器人，名为四季酱。</source>
        <target state="needs-translation">2019 年 8 月，我开始编写我的第一个基于 Node.js 的聊天机器人，名为四季酱。</target>
      </trans-unit>
      <trans-unit id="43320">
        <source>当时我浏览各种聊天机器人框架，发现并没有自己真正想要的，遂决定从零开始编写。</source>
        <target state="needs-translation">当时我浏览各种聊天机器人框架，发现并没有自己真正想要的，遂决定从零开始编写。</target>
      </trans-unit>
      <trans-unit id="43322">
        <source>一开始这个机器人只包含了很少的功能，但随着其更多功能的加入，我开始调整起底层架构，并计划逐步将其开源出来。</source>
        <target state="needs-translation">一开始这个机器人只包含了很少的功能，但随着其更多功能的加入，我开始调整起底层架构，并计划逐步将其开源出来。</target>
      </trans-unit>
      <trans-unit id="43324">
        <source>直到 v4 发布之前，Koishi 大约每 8 个月发布一个大版本。</source>
        <target state="needs-translation">直到 v4 发布之前，Koishi 大约每 8 个月发布一个大版本。</target>
      </trans-unit>
      <trans-unit id="43326">
        <source>可以说 Koishi 的发展完全是由需求推动的，在迭代中形成了一套聊天机器人开发的最佳实践。</source>
        <target state="needs-translation">可以说 Koishi 的发展完全是由需求推动的，在迭代中形成了一套聊天机器人开发的最佳实践。</target>
      </trans-unit>
      <trans-unit id="43328">
        <source>v1 时期</source>
        <target state="needs-translation">v1 时期</target>
      </trans-unit>
      <trans-unit id="43330">
        <source>Koishi v1 发布于 2020 年 1 月。</source>
        <target state="needs-translation">Koishi v1 发布于 2020 年 1 月。</target>
      </trans-unit>
      <trans-unit id="43332">
        <source>此时的 Koishi 虽然体量尚小，但已具备了许多一直沿袭至今的特征：通过插件系统实现了功能的模块化，通过事件模型和中间件处理各种输入，上下文负责对输入的事件进行过滤，以及一个通过链式调用进行开发的指令系统等等。</source>
        <target state="needs-translation">此时的 Koishi 虽然体量尚小，但已具备了许多一直沿袭至今的特征：通过插件系统实现了功能的模块化，通过事件模型和中间件处理各种输入，上下文负责对输入的事件进行过滤，以及一个通过链式调用进行开发的指令系统等等。</target>
      </trans-unit>
      <trans-unit id="43334">
        <source>目前可追溯的 v1 官方插件只有 common, schedule 和 teach，其他在这个时期开发的插件大都已经弃用了。</source>
        <target state="needs-translation">目前可追溯的 v1 官方插件只有 common, schedule 和 teach，其他在这个时期开发的插件大都已经弃用了。</target>
      </trans-unit>
      <trans-unit id="43336">
        <source>v2 时期</source>
        <target state="needs-translation">v2 时期</target>
      </trans-unit>
      <trans-unit id="43338">
        <source>Koishi v2 发布于 2020 年 9 月，主要改动存在于应用层设计上。</source>
        <target state="needs-translation">Koishi v2 发布于 2020 年 9 月，主要改动存在于应用层设计上。</target>
      </trans-unit>
      <trans-unit id="43340">
        <source>在这个大版本中，应用作为程序的入口对所需的资源统一管理，第一次有了生命周期钩子的概念，也将 v1 时期的元信息对象进化为了会话对象。</source>
        <target state="needs-translation">在这个大版本中，应用作为程序的入口对所需的资源统一管理，第一次有了生命周期钩子的概念，也将 v1 时期的元信息对象进化为了会话对象。</target>
      </trans-unit>
      <trans-unit id="43342">
        <source>这些改动将许多底层的接口进行了封装，允许插件开发者通过更为现代化的方式组织业务逻辑。</source>
        <target state="needs-translation">这些改动将许多底层的接口进行了封装，允许插件开发者通过更为现代化的方式组织业务逻辑。</target>
      </trans-unit>
      <trans-unit id="43344">
        <source>v2 时期也是官方插件发展迅猛的时期，许多功能强大的插件如 eval, github, image-search 和 puppeteer 等都是在这个阶段被开发出来的。</source>
        <target state="needs-translation">v2 时期也是官方插件发展迅猛的时期，许多功能强大的插件如 eval, github, image-search 和 puppeteer 等都是在这个阶段被开发出来的。</target>
      </trans-unit>
      <trans-unit id="43346">
        <source>v3 时期</source>
        <target state="needs-translation">v3 时期</target>
      </trans-unit>
      <trans-unit id="43348">
        <source>Koishi v3 发布于 2021 年 5 月。</source>
        <target state="needs-translation">Koishi v3 发布于 2021 年 5 月。</target>
      </trans-unit>
      <trans-unit id="43350">
        <source>这个版本最核心的变化是我们抽象出了 Adapter / Bot 的概念，并成功将 Koishi 适配到 Discord 和 Telegram 等其他主流聊天平台中。</source>
        <target state="needs-translation">这个版本最核心的变化是我们抽象出了 Adapter / Bot 的概念，并成功将 Koishi 适配到 Discord 和 Telegram 等其他主流聊天平台中。</target>
      </trans-unit>
      <trans-unit id="43352">
        <source>另一个值得一提的改动则是我们实现了插件的热重载，并由此催生了网页控制台和插件市场的发展。</source>
        <target state="needs-translation">另一个值得一提的改动则是我们实现了插件的热重载，并由此催生了网页控制台和插件市场的发展。</target>
      </trans-unit>
      <trans-unit id="43354">
        <source>在此期间社区开发者贡献了大量或有趣或实用的插件，也意味着 Koishi 在功能模块化的推行上取得了令人满意的成效。</source>
        <target state="needs-translation">在此期间社区开发者贡献了大量或有趣或实用的插件，也意味着 Koishi 在功能模块化的推行上取得了令人满意的成效。</target>
      </trans-unit>
      <trans-unit id="43356">
        <source>v4 时期</source>
        <target state="needs-translation">v4 时期</target>
      </trans-unit>
      <trans-unit id="43358">
        <source>Koishi v4 发布于 2022 年 1 月，在底层架构中进行了大幅优化。</source>
        <target state="needs-translation">Koishi v4 发布于 2022 年 1 月，在底层架构中进行了大幅优化。</target>
      </trans-unit>
      <trans-unit id="43360">
        <source>我们引入了 Service 的概念，这将使我们得以通过类似于 IoC / DI 的方式管理 Koishi 的各项功能。</source>
        <target state="needs-translation">我们引入了 Service 的概念，这将使我们得以通过类似于 IoC / DI 的方式管理 Koishi 的各项功能。</target>
      </trans-unit>
      <trans-unit id="43362">
        <source>同时对于数据库，我们也提供了一个 ORM 解决方案，这大幅优化了插件的开发体验。</source>
        <target state="needs-translation">同时对于数据库，我们也提供了一个 ORM 解决方案，这大幅优化了插件的开发体验。</target>
      </trans-unit>
      <trans-unit id="43364">
        <source>此外，我们正式围绕 Service 确立了 Assets 和 Cache 等接口，并提供了许多官方插件实现。</source>
        <target state="needs-translation">此外，我们正式围绕 Service 确立了 Assets 和 Cache 等接口，并提供了许多官方插件实现。</target>
      </trans-unit>
      <trans-unit id="43366">
        <source>在这个版本中，我们出于维护性的考虑将一些官方插件移出了 koishijs/koishi。</source>
        <target state="needs-translation">在这个版本中，我们出于维护性的考虑将一些官方插件移出了 koishijs/koishi。</target>
      </trans-unit>
      <trans-unit id="43368">
        <source>即便如此，官方插件的数量也较上一个大版本有了一个激增。</source>
        <target state="needs-translation">即便如此，官方插件的数量也较上一个大版本有了一个激增。</target>
      </trans-unit>
      <trans-unit id="43370">
        <source>以插件市场为核心的生态也正在被快速完善起来。</source>
        <target state="needs-translation">以插件市场为核心的生态也正在被快速完善起来。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1402" original="/[koishijs.docs] main/zh-CN/about/license.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="43372">
        <source>许可证</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">許可證</target>
      </trans-unit>
      <trans-unit id="43374">
        <source>Koishi 开发团队致力于维护良好的开源生态。</source>
        <target state="needs-translation">Koishi 开发团队致力于维护良好的开源生态。</target>
      </trans-unit>
      <trans-unit id="43376">
        <source>Koishi 所使用的许可证</source>
        <target state="needs-translation">Koishi 所使用的许可证</target>
      </trans-unit>
      <trans-unit id="43378">
        <source>Koishi 本体及其核心插件全部使用 MIT 许可证开源 ([仓库链接](https://github.com/koishijs/koishi))</source>
        <target state="needs-translation">Koishi 本体及其核心插件全部使用 MIT 许可证开源 ([仓库链接](https://github.com/koishijs/koishi))</target>
      </trans-unit>
      <trans-unit id="43380">
        <source>与控制台相关的官方插件均使用 AGPL-3.0 许可证开源 ([仓库链接](https://github.com/koishijs/webui))</source>
        <target state="needs-translation">与控制台相关的官方插件均使用 AGPL-3.0 许可证开源 ([仓库链接](https://github.com/koishijs/webui))</target>
      </trans-unit>
      <trans-unit id="43382">
        <source>根据许可证条款，使用了官方控制台插件的软件必须以相同许可证开源</source>
        <target state="needs-translation">根据许可证条款，使用了官方控制台插件的软件必须以相同许可证开源</target>
      </trans-unit>
      <trans-unit id="43384">
        <source>以服务形式扩展控制台功能的插件不受此限制</source>
        <target state="needs-translation">以服务形式扩展控制台功能的插件不受此限制</target>
      </trans-unit>
      <trans-unit id="43386">
        <source>本文档所使用的许可证</source>
        <target state="needs-translation">本文档所使用的许可证</target>
      </trans-unit>
      <trans-unit id="43388">
        <source>本文档所依赖的主题使用 MIT 许可证开源 ([仓库链接](https://github.com/koishijs/theme))</source>
        <target state="needs-translation">本文档所依赖的主题使用 MIT 许可证开源 ([仓库链接](https://github.com/koishijs/theme))</target>
      </trans-unit>
      <trans-unit id="43390">
        <source>本文档仓库使用 CC-BY-SA-4.0 和 AGPL-3.0 许可证开源 ([仓库链接](https://github.com/koishijs/docs))</source>
        <target state="needs-translation">本文档仓库使用 CC-BY-SA-4.0 和 AGPL-3.0 许可证开源 ([仓库链接](https://github.com/koishijs/docs))</target>
      </trans-unit>
      <trans-unit id="43392">
        <source>文档内容以 CC-BY-SA-4.0 许可证开源 (`.vitepress` 目录以外的部分)</source>
        <target state="needs-translation">文档内容以 CC-BY-SA-4.0 许可证开源 (`.vitepress` 目录以外的部分)</target>
      </trans-unit>
      <trans-unit id="43394">
        <source>对原主题库进行的扩展使用 AGPL-3.0 许可证开源 (`.vitepress` 目录中的部分)</source>
        <target state="needs-translation">对原主题库进行的扩展使用 AGPL-3.0 许可证开源 (`.vitepress` 目录中的部分)</target>
      </trans-unit>
    </body>
  </file>
  <file id="1404" original="/[koishijs.docs] main/zh-CN/about/releases.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="43396">
        <source>更新计划</source>
        <target state="needs-translation">更新计划</target>
      </trans-unit>
      <trans-unit id="43398">
        <source>发布周期</source>
        <target state="needs-translation">发布周期</target>
      </trans-unit>
      <trans-unit id="43400">
        <source>Koishi 目前采用 Cordis 架构，绝大多数功能都以插件的形式提供。</source>
        <target state="needs-translation">Koishi 目前采用 Cordis 架构，绝大多数功能都以插件的形式提供。</target>
      </trans-unit>
      <trans-unit id="43402">
        <source>这些插件的更新会按需进行，且都遵循 [语义化版本](https://semver.org/lang/zh-CN/) 规范：</source>
        <target state="needs-translation">这些插件的更新会按需进行，且都遵循 [语义化版本](https://semver.org/lang/zh-CN/) 规范：</target>
      </trans-unit>
      <trans-unit id="43404">
        <source>补丁版本 (patch) 只用于修复 bug，不会引入新的功能。</source>
        <target state="needs-translation">补丁版本 (patch) 只用于修复 bug，不会引入新的功能。</target>
      </trans-unit>
      <trans-unit id="43406">
        <source>次版本 (minor) 会包含新特性，但不会破坏现有功能。</source>
        <target state="needs-translation">次版本 (minor) 会包含新特性，但不会破坏现有功能。</target>
      </trans-unit>
      <trans-unit id="43408">
        <source>主版本 (major) 会引入破坏性变更。</source>
        <target state="needs-translation">主版本 (major) 会引入破坏性变更。</target>
      </trans-unit>
      <trans-unit id="43410">
        <source>在语义化版本的界定上，一切对预期行为的定义，以 Koishi 官方文档为准。</source>
        <target state="needs-translation">在语义化版本的界定上，一切对预期行为的定义，以 Koishi 官方文档为准。</target>
      </trans-unit>
      <trans-unit id="43412">
        <source>Koishi 本体大约每 1-2 周发布一个新版本。</source>
        <target state="needs-translation">Koishi 本体大约每 1-2 周发布一个新版本。</target>
      </trans-unit>
      <trans-unit id="43414">
        <source>这些版本根据 Koishi 自身的依赖确定是补丁版本还是次版本。</source>
        <target state="needs-translation">这些版本根据 Koishi 自身的依赖确定是补丁版本还是次版本。</target>
      </trans-unit>
      <trans-unit id="43416">
        <source>目前 Koishi 的主版本是 v4，且没有改动主版本的计划。</source>
        <target state="needs-translation">目前 Koishi 的主版本是 v4，且没有改动主版本的计划。</target>
      </trans-unit>
      <trans-unit id="43418">
        <source>从 v4 的较低版本升级时，可以参考此 [迁移指南](./upgrade.md)。</source>
        <target state="needs-translation">从 v4 的较低版本升级时，可以参考此 [迁移指南](./upgrade.md)。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1406" original="/[koishijs.docs] main/zh-CN/about/team.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="43420">
        <source>认识团队</source>
        <target state="needs-translation">认识团队</target>
      </trans-unit>
      <trans-unit id="43422">
        <source>核心成员</source>
        <target state="needs-translation">核心成员</target>
      </trans-unit>
      <trans-unit id="43424">
        <source>Shigma</source>
        <target state="needs-translation">Shigma</target>
      </trans-unit>
      <trans-unit id="43426">
        <source>创始人，koishijs/\*，satorijs/\*</source>
        <target state="needs-translation">创始人，koishijs/\*，satorijs/\*</target>
      </trans-unit>
      <trans-unit id="43428" translate="no">
        <source>https://github.com/shigma</source>
        <target>https://github.com/shigma</target>
      </trans-unit>
      <trans-unit id="43430">
        <source>Il Harper</source>
        <target state="needs-translation">Il Harper</target>
      </trans-unit>
      <trans-unit id="43432">
        <source>Koishi Desktop</source>
        <target state="needs-translation">Koishi Desktop</target>
      </trans-unit>
      <trans-unit id="43434">
        <source>Koishi Handbook</source>
        <target state="needs-translation">Koishi Handbook</target>
      </trans-unit>
      <trans-unit id="43436" translate="no">
        <source>https://github.com/ilharp</source>
        <target>https://github.com/ilharp</target>
      </trans-unit>
      <trans-unit id="43438">
        <source>Anillc</source>
        <target state="needs-translation">Anillc</target>
      </trans-unit>
      <trans-unit id="43440">
        <source>koishijs/core, satorijs/adapter-telegram</source>
        <target state="needs-translation">koishijs/core, satorijs/adapter-telegram</target>
      </trans-unit>
      <trans-unit id="43442">
        <source>Koishi Android</source>
        <target state="needs-translation">Koishi Android</target>
      </trans-unit>
      <trans-unit id="43444" translate="no">
        <source>https://github.com/anillc</source>
        <target>https://github.com/anillc</target>
      </trans-unit>
      <trans-unit id="43446">
        <source>MaikoTan</source>
        <target state="needs-translation">MaikoTan</target>
      </trans-unit>
      <trans-unit id="43448">
        <source>Translations</source>
        <target state="needs-translation">Translations</target>
      </trans-unit>
      <trans-unit id="43450">
        <source>satorijs/adapter-lark</source>
        <target state="needs-translation">satorijs/adapter-lark</target>
      </trans-unit>
      <trans-unit id="43452" translate="no">
        <source>https://github.com/maikotan</source>
        <target>https://github.com/maikotan</target>
      </trans-unit>
      <trans-unit id="43454">
        <source>团队成员</source>
        <target state="needs-translation">团队成员</target>
      </trans-unit>
      <trans-unit id="43456">
        <source>NWYLZW</source>
        <target state="needs-translation">NWYLZW</target>
      </trans-unit>
      <trans-unit id="43458">
        <source>H4M5TER</source>
        <target state="needs-translation">H4M5TER</target>
      </trans-unit>
      <trans-unit id="43460">
        <source>undefined</source>
        <target state="needs-translation">undefined</target>
      </trans-unit>
      <trans-unit id="43462">
        <source>LittleC</source>
        <target state="needs-translation">LittleC</target>
      </trans-unit>
      <trans-unit id="43464">
        <source>社区贡献者</source>
        <target state="needs-translation">社区贡献者</target>
      </trans-unit>
      <trans-unit id="43466">
        <source>i'DLisT</source>
        <target state="needs-translation">i'DLisT</target>
      </trans-unit>
      <trans-unit id="43468">
        <source>Dragon-Fish</source>
        <target state="needs-translation">Dragon-Fish</target>
      </trans-unit>
      <trans-unit id="43470">
        <source>purerosefallen</source>
        <target state="needs-translation">purerosefallen</target>
      </trans-unit>
    </body>
  </file>
  <file id="1408" original="/[koishijs.docs] main/zh-CN/about/upgrade.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="43472">
        <source>从低版本迁移</source>
        <target state="needs-translation">从低版本迁移</target>
      </trans-unit>
      <trans-unit id="43474">
        <source>JSX 支持 &lt;badge&gt;v4.10.3&lt;/badge&gt;</source>
        <target state="needs-translation">JSX 支持 &lt;badge&gt;v4.10.3&lt;/badge&gt;</target>
      </trans-unit>
      <trans-unit id="43476">
        <source>在 4.10.3 版本中，我们正式引入了 JSX 支持。</source>
        <target state="needs-translation">在 4.10.3 版本中，我们正式引入了 JSX 支持。</target>
      </trans-unit>
      <trans-unit id="43478">
        <source>这意味着你可以在插件中使用 JSX 语法来构造消息元素了。</source>
        <target state="needs-translation">这意味着你可以在插件中使用 JSX 语法来构造消息元素了。</target>
      </trans-unit>
      <trans-unit id="43480">
        <source>要实现这一点，你需要对你的项目进行一些配置：</source>
        <target state="needs-translation">要实现这一点，你需要对你的项目进行一些配置：</target>
      </trans-unit>
      <trans-unit id="43482">
        <source>打开 `tsconfig.base.json` 文件并加入以下配置：</source>
        <target state="needs-translation">打开 `tsconfig.base.json` 文件并加入以下配置：</target>
      </trans-unit>
      <trans-unit id="43484">
        <source>{
  &quot;compilerOptions&quot;: {
    &quot;jsx&quot;: &quot;react-jsx&quot;,
    &quot;jsxImportSource&quot;: &quot;@satorijs/element&quot;,
  },
}</source>
        <target state="needs-translation">{
  &quot;compilerOptions&quot;: {
    &quot;jsx&quot;: &quot;react-jsx&quot;,
    &quot;jsxImportSource&quot;: &quot;@satorijs/element&quot;,
  },
}</target>
      </trans-unit>
      <trans-unit id="43486">
        <source>将要使用 JSX 的文件后缀名修改为 `.tsx`。</source>
        <target state="needs-translation">将要使用 JSX 的文件后缀名修改为 `.tsx`。</target>
      </trans-unit>
      <trans-unit id="64354">
        <source>心跳更新 &lt;badge&gt;v4.10.4&lt;/badge&gt;</source>
        <target state="needs-translation">心跳更新 &lt;badge&gt;v4.10.4&lt;/badge&gt;</target>
      </trans-unit>
      <trans-unit id="43490">
        <source>在 4.10.4 版本中，我们调整了默认的心跳行为，这可能导致老用户升级时遭遇无限重启问题。</source>
        <target state="needs-translation">在 4.10.4 版本中，我们调整了默认的心跳行为，这可能导致老用户升级时遭遇无限重启问题。</target>
      </trans-unit>
      <trans-unit id="43492">
        <source>可以执行下列操作进行升级：</source>
        <target state="needs-translation">可以执行下列操作进行升级：</target>
      </trans-unit>
      <trans-unit id="43494">
        <source>先将 market 插件更新到最新版本 (最新版本支持批量更新)</source>
        <target state="needs-translation">先将 market 插件更新到最新版本 (最新版本支持批量更新)</target>
      </trans-unit>
      <trans-unit id="43496">
        <source>(非 v4.10.3 用户忽略此步骤) 在控制台中修改全局设置，将 `heartbeatInterval` 项的值改为 `6000`，`heartbeatTimeout` 项的值改为 `600000`，并点击「重载配置」按钮</source>
        <target state="needs-translation">(非 v4.10.3 用户忽略此步骤) 在控制台中修改全局设置，将 `heartbeatInterval` 项的值改为 `6000`，`heartbeatTimeout` 项的值改为 `600000`，并点击「重载配置」按钮</target>
      </trans-unit>
      <trans-unit id="43498">
        <source>在依赖管理中，通过下拉菜单将全部官方依赖修改为最新版本 (如果有 suggest 和 assets-* 依赖则选择移除)，并点击「应用更改」按钮</source>
        <target state="needs-translation">在依赖管理中，通过下拉菜单将全部官方依赖修改为最新版本 (如果有 suggest 和 assets-* 依赖则选择移除)，并点击「应用更改」按钮</target>
      </trans-unit>
      <trans-unit id="43500">
        <source>更新完成后重启实例</source>
        <target state="needs-translation">更新完成后重启实例</target>
      </trans-unit>
      <trans-unit id="43502">
        <source>在控制台中修改全局设置，将 `heartbeatInterval` 和 `heartbeatTimeout` 项的值均改为 `0`，并点击「重载配置」按钮</source>
        <target state="needs-translation">在控制台中修改全局设置，将 `heartbeatInterval` 和 `heartbeatTimeout` 项的值均改为 `0`，并点击「重载配置」按钮</target>
      </trans-unit>
      <trans-unit id="43504">
        <source>再次重启实例</source>
        <target state="needs-translation">再次重启实例</target>
      </trans-unit>
      <trans-unit id="43506">
        <source>如果之前移除了 assets-* 插件，请重新前往插件市场进行安装</source>
        <target state="needs-translation">如果之前移除了 assets-* 插件，请重新前往插件市场进行安装</target>
      </trans-unit>
      <trans-unit id="64356">
        <source>CLI 更新 &lt;badge&gt;v4.11.0&lt;/badge&gt;</source>
        <target state="needs-translation">CLI 更新 &lt;badge&gt;v4.11.0&lt;/badge&gt;</target>
      </trans-unit>
      <trans-unit id="43510">
        <source>在 4.11.0 版本中我们移除了 @koishijs/cli 包，将其合并到了 koishi 中。</source>
        <target state="needs-translation">在 4.11.0 版本中我们移除了 @koishijs/cli 包，将其合并到了 koishi 中。</target>
      </trans-unit>
      <trans-unit id="43512">
        <source>这意味着你每次升级时不再需要同时升级两边了。</source>
        <target state="needs-translation">这意味着你每次升级时不再需要同时升级两边了。</target>
      </trans-unit>
      <trans-unit id="43514">
        <source>但对于已经安装了 @koishijs/cli 的用户，你需要执行下列操作完成升级：</source>
        <target state="needs-translation">但对于已经安装了 @koishijs/cli 的用户，你需要执行下列操作完成升级：</target>
      </trans-unit>
      <trans-unit id="43516">
        <source>先完成 4.10.4 版本的更新，确保自己的版本号不小于 4.10.4</source>
        <target state="needs-translation">先完成 4.10.4 版本的更新，确保自己的版本号不小于 4.10.4</target>
      </trans-unit>
      <trans-unit id="67010">
        <source>在依赖管理中，修改 koishi 的版本号到 4.11.0，并移除 @koishijs/cli</source>
        <target state="needs-translation">在依赖管理中，修改 koishi 的版本号到 4.11.0，并移除 @koishijs/cli</target>
      </trans-unit>
      <trans-unit id="43520">
        <source>点击「应用更改」按钮</source>
        <target state="needs-translation">点击「应用更改」按钮</target>
      </trans-unit>
      <trans-unit id="64358">
        <source>HMR 更新 &lt;badge&gt;v4.12.0&lt;/badge&gt;</source>
        <target state="needs-translation">HMR 更新 &lt;badge&gt;v4.12.0&lt;/badge&gt;</target>
      </trans-unit>
      <trans-unit id="43524">
        <source>在 4.12.0 版本中，我们将模块热替换相关功能移至专门的插件 @koishijs/plugin-hmr 中。</source>
        <target state="needs-translation">在 4.12.0 版本中，我们将模块热替换相关功能移至专门的插件 @koishijs/plugin-hmr 中。</target>
      </trans-unit>
      <trans-unit id="67012">
        <source>如果你使用了 hmr 插件，你需要执行下列操作完成升级：</source>
        <target state="needs-translation">如果你使用了 hmr 插件，你需要执行下列操作完成升级：</target>
      </trans-unit>
      <trans-unit id="43530">
        <source>安装最新版本的 @koishijs/plugin-hmr</source>
        <target state="needs-translation">安装最新版本的 @koishijs/plugin-hmr</target>
      </trans-unit>
      <trans-unit id="67014">
        <source>修改你的配置文件，加上 [模块热替换](../guide/develop/script.md#hmr) 中提到的部分</source>
        <target state="needs-translation">修改你的配置文件，加上 [模块热替换](../guide/develop/script.md#hmr) 中提到的部分</target>
      </trans-unit>
      <trans-unit id="43534">
        <source>移除 `package.json` 文件中 `scripts.dev` 的 `--watch` 参数</source>
        <target state="needs-translation">移除 `package.json` 文件中 `scripts.dev` 的 `--watch` 参数</target>
      </trans-unit>
      <trans-unit id="64360">
        <source>插件市场更新 &lt;badge&gt;v4.13.0&lt;/badge&gt;</source>
        <target state="needs-translation">插件市场更新 &lt;badge&gt;v4.13.0&lt;/badge&gt;</target>
      </trans-unit>
      <trans-unit id="43538">
        <source>在 4.13.0 版本中，我们将 @koishijs/plugin-market 插件分拆为了两个插件 market 和 config。</source>
        <target state="needs-translation">在 4.13.0 版本中，我们将 @koishijs/plugin-market 插件分拆为了两个插件 market 和 config。</target>
      </trans-unit>
      <trans-unit id="43540">
        <source>其中 market 负责「插件市场」和「依赖管理」页面，而 config 则负责「插件配置」页面。</source>
        <target state="needs-translation">其中 market 负责「插件市场」和「依赖管理」页面，而 config 则负责「插件配置」页面。</target>
      </trans-unit>
      <trans-unit id="43542">
        <source>直接将 market 插件更新到 2.0.0 或以上版本的用户会发现自己的「插件配置」页面消失，此时你需要执行下列操作完成升级：</source>
        <target state="needs-translation">直接将 market 插件更新到 2.0.0 或以上版本的用户会发现自己的「插件配置」页面消失，此时你需要执行下列操作完成升级：</target>
      </trans-unit>
      <trans-unit id="43544">
        <source>首先确保你的 market 插件是最新版 (应该是 2.0.0 以上版本)</source>
        <target state="needs-translation">首先确保你的 market 插件是最新版 (应该是 2.0.0 以上版本)</target>
      </trans-unit>
      <trans-unit id="43546">
        <source>打开「插件市场」页面，安装最新版的 config 插件</source>
        <target state="needs-translation">打开「插件市场」页面，安装最新版的 config 插件</target>
      </trans-unit>
      <trans-unit id="67016">
        <source>打开「资源管理器」页面，找到 `koishi.yml` 文件，打开并编辑：</source>
        <target state="needs-translation">打开「资源管理器」页面，找到 `koishi.yml` 文件，打开并编辑：</target>
      </trans-unit>
      <trans-unit id="43550">
        <source>host: 127.0.0.1
port: 5140
maxPort: 5149
plugins:
  ...
    ...
    config: {}         # 加一行在这里，注意左侧缩进与 market 对齐
    market:
      ...
    ...</source>
        <target state="needs-translation">host: 127.0.0.1
port: 5140
maxPort: 5149
plugins:
  ...
    ...
    config: {}         # 加一行在这里，注意左侧缩进与 market 对齐
    market:
      ...
    ...</target>
      </trans-unit>
      <trans-unit id="43552">
        <source>点击右上角的保存按钮</source>
        <target state="needs-translation">点击右上角的保存按钮</target>
      </trans-unit>
      <trans-unit id="43554">
        <source>重新启动 Koishi 实例</source>
        <target state="needs-translation">重新启动 Koishi 实例</target>
      </trans-unit>
      <trans-unit id="64362">
        <source>国际化更新 &lt;badge&gt;v4.13.0&lt;/badge&gt;</source>
        <target state="needs-translation">国际化更新 &lt;badge&gt;v4.13.0&lt;/badge&gt;</target>
      </trans-unit>
      <trans-unit id="43558">
        <source>在 4.13.0 版本中，我们也引入了多语言的回退机制。</source>
        <target state="needs-translation">在 4.13.0 版本中，我们也引入了多语言的回退机制。</target>
      </trans-unit>
      <trans-unit id="43560">
        <source>这意味者，所有涉及语言配置的地方都需要从单一的语言字符串修改为数组。</source>
        <target state="needs-translation">这意味者，所有涉及语言配置的地方都需要从单一的语言字符串修改为数组。</target>
      </trans-unit>
      <trans-unit id="43562">
        <source>具体包括以下几个地方：</source>
        <target state="needs-translation">具体包括以下几个地方：</target>
      </trans-unit>
      <trans-unit id="43564">
        <source>应用配置项 `locale` → `i18n.locales`</source>
        <target state="needs-translation">应用配置项 `locale` → `i18n.locales`</target>
      </trans-unit>
      <trans-unit id="43566">
        <source>用户和频道的数据结构 `locale` → `locales`</source>
        <target state="needs-translation">用户和频道的数据结构 `locale` → `locales`</target>
      </trans-unit>
      <trans-unit id="43568">
        <source>会话对象的属性 `locale` → `locales`</source>
        <target state="needs-translation">会话对象的属性 `locale` → `locales`</target>
      </trans-unit>
      <trans-unit id="43570">
        <source>用户无需留意这些改动，但开发者如果使用了上述 API 则需要进行迁移。</source>
        <target state="needs-translation">用户无需留意这些改动，但开发者如果使用了上述 API 则需要进行迁移。</target>
      </trans-unit>
      <trans-unit id="43572">
        <source>协议更新 &lt;badge&gt;v4.14.5&lt;/badge&gt;</source>
        <target state="needs-translation">协议更新 &lt;badge&gt;v4.14.5&lt;/badge&gt;</target>
      </trans-unit>
      <trans-unit id="43574">
        <source>在 4.14.5 版本中，我们将协议库 Satori 升级到了 v3 alpha 版本。</source>
        <target state="needs-translation">在 4.14.5 版本中，我们将协议库 Satori 升级到了 v3 alpha 版本。</target>
      </trans-unit>
      <trans-unit id="43576">
        <source>新版本引入了与分页 API 相关的不兼容更新。</source>
        <target state="needs-translation">新版本引入了与分页 API 相关的不兼容更新。</target>
      </trans-unit>
      <trans-unit id="43578">
        <source>具体受影响的 API 如下：</source>
        <target state="needs-translation">具体受影响的 API 如下：</target>
      </trans-unit>
      <trans-unit id="43580">
        <source>`bot.getChannelList()`</source>
        <target state="needs-translation">`bot.getChannelList()`</target>
      </trans-unit>
      <trans-unit id="43582">
        <source>`bot.getFriendList()`</source>
        <target state="needs-translation">`bot.getFriendList()`</target>
      </trans-unit>
      <trans-unit id="43584">
        <source>`bot.getGuildList()`</source>
        <target state="needs-translation">`bot.getGuildList()`</target>
      </trans-unit>
      <trans-unit id="43586">
        <source>`bot.getGuildMemberList()`</source>
        <target state="needs-translation">`bot.getGuildMemberList()`</target>
      </trans-unit>
      <trans-unit id="43588">
        <source>`bot.getGuildRoleList()`</source>
        <target state="needs-translation">`bot.getGuildRoleList()`</target>
      </trans-unit>
      <trans-unit id="43590">
        <source>`bot.getMessageList()`</source>
        <target state="needs-translation">`bot.getMessageList()`</target>
      </trans-unit>
      <trans-unit id="43592">
        <source>`bot.getReactionList()`</source>
        <target state="needs-translation">`bot.getReactionList()`</target>
      </trans-unit>
      <trans-unit id="43594">
        <source>上述 API 将不再返回 `Promise&lt;T[]&gt;` 而是返回一个 `Promise&lt;List&lt;T&gt;&gt;`，包含 `data` 属性和可选的 `next` 属性。</source>
        <target state="needs-translation">上述 API 将不再返回 `Promise&lt;T[]&gt;` 而是返回一个 `Promise&lt;List&lt;T&gt;&gt;`，包含 `data` 属性和可选的 `next` 属性。</target>
      </trans-unit>
      <trans-unit id="43596">
        <source>`data` 包含了当前页的数据，`next` 则表示下一页的分页令牌。</source>
        <target state="needs-translation">`data` 包含了当前页的数据，`next` 则表示下一页的分页令牌。</target>
      </trans-unit>
      <trans-unit id="43598">
        <source>此外，对于上述每一个 API，我们还额外提供了返回异步迭代器的版本：</source>
        <target state="needs-translation">此外，对于上述每一个 API，我们还额外提供了返回异步迭代器的版本：</target>
      </trans-unit>
      <trans-unit id="43600">
        <source>for (const item of await bot.getChannelList())  // old
for await (const item of bot.getChannelIter())  // new</source>
        <target state="needs-translation">for (const item of await bot.getChannelList())  // old
for await (const item of bot.getChannelIter())  // new</target>
      </trans-unit>
      <trans-unit id="43602">
        <source>协议更新 &lt;badge&gt;v4.15.0&lt;/badge&gt;</source>
        <target state="needs-translation">协议更新 &lt;badge&gt;v4.15.0&lt;/badge&gt;</target>
      </trans-unit>
      <trans-unit id="43604">
        <source>在 4.15.0 版本中，我们将协议库 Satori 升级到了 v3 正式版本。</source>
        <target state="needs-translation">在 4.15.0 版本中，我们将协议库 Satori 升级到了 v3 正式版本。</target>
      </trans-unit>
      <trans-unit id="43606">
        <source>新版本引入了一系列涉及平台资源不兼容更新。</source>
        <target state="needs-translation">新版本引入了一系列涉及平台资源不兼容更新。</target>
      </trans-unit>
      <trans-unit id="43608">
        <source>[`User`](../api/resources/user.md) 类型的 `userId` 属性改为 `id`，同理对于 [`Channel`](../api/resources/channel.md), [`Guild`](../api/resources/guild.md), [`Message`](../api/resources/message.md) 也是如此。</source>
        <target state="needs-translation">[`User`](../api/resources/user.md) 类型的 `userId` 属性改为 `id`，同理对于 [`Channel`](../api/resources/channel.md), [`Guild`](../api/resources/guild.md), [`Message`](../api/resources/message.md) 也是如此。</target>
      </trans-unit>
      <trans-unit id="43610">
        <source>此外，`Author` 被重构为了 `User` 和 `Member` 两个部分。</source>
        <target state="needs-translation">此外，`Author` 被重构为了 `User` 和 `Member` 两个部分。</target>
      </trans-unit>
      <trans-unit id="43612">
        <source>[`Session`](../api/core/session.md) 引入了 `event` 属性用于存放所有事件相关的资源。</source>
        <target state="needs-translation">[`Session`](../api/core/session.md) 引入了 `event` 属性用于存放所有事件相关的资源。</target>
      </trans-unit>
      <trans-unit id="67018">
        <source>尽管我们在会话中提供了 [访问器属性](../api/core/session.md#accessor-property) 以保证了大部分 API 的向下兼容，但对于没有提供访问器的事件属性，或是在使用 Bot API 的返回值时，你都需要手动修改代码。</source>
        <target state="needs-translation">尽管我们在会话中提供了 [访问器属性](../api/core/session.md#accessor-property) 以保证了大部分 API 的向下兼容，但对于没有提供访问器的事件属性，或是在使用 Bot API 的返回值时，你都需要手动修改代码。</target>
      </trans-unit>
      <trans-unit id="43616">
        <source>`Adapter.Server` 和 `Adapter.Client` 两个基类被移除。</source>
        <target state="needs-translation">`Adapter.Server` 和 `Adapter.Client` 两个基类被移除。</target>
      </trans-unit>
      <trans-unit id="43618">
        <source>现在可以直接使用 [`Adapter`](../api/core/adapter.md) 基类，并通过 `reusable` 属性决定其是否可重用。</source>
        <target state="needs-translation">现在可以直接使用 [`Adapter`](../api/core/adapter.md) 基类，并通过 `reusable` 属性决定其是否可重用。</target>
      </trans-unit>
      <trans-unit id="43620">
        <source>[`Bot`](../api/core/bot.md) 将实现 [`Login`](../api/resources/login.md) 资源，因此其上的用户数据将存放在 `bot.user` 中。</source>
        <target state="needs-translation">[`Bot`](../api/core/bot.md) 将实现 [`Login`](../api/resources/login.md) 资源，因此其上的用户数据将存放在 `bot.user` 中。</target>
      </trans-unit>
      <trans-unit id="43622">
        <source>此外，[`status`](../api/resources/login.md) 属性由字符串变为数值枚举。</source>
        <target state="needs-translation">此外，[`status`](../api/resources/login.md) 属性由字符串变为数值枚举。</target>
      </trans-unit>
      <trans-unit id="43624">
        <source>[`encoder.results`](../api/message/encoder.md#encoder-results) 的类型由 `string[]` 变为 `Message[]`。</source>
        <target state="needs-translation">[`encoder.results`](../api/message/encoder.md#encoder-results) 的类型由 `string[]` 变为 `Message[]`。</target>
      </trans-unit>
      <trans-unit id="43626">
        <source>新增用于创建私聊频道的 [`bot.createDirectChannel()`](../api/resources/channel.md)，因此不再需要实现 [`bot.sendPrivateMessage()`](../api/resources/message.md#bot-sendprivatemessage)。</source>
        <target state="needs-translation">新增用于创建私聊频道的 [`bot.createDirectChannel()`](../api/resources/channel.md)，因此不再需要实现 [`bot.sendPrivateMessage()`](../api/resources/message.md#bot-sendprivatemessage)。</target>
      </trans-unit>
      <trans-unit id="65226">
        <source>Server 插件独立 &lt;badge&gt;v4.16.0&lt;/badge&gt;</source>
        <target state="needs-translation">Server 插件独立 &lt;badge&gt;v4.16.0&lt;/badge&gt;</target>
      </trans-unit>
      <trans-unit id="65228">
        <source>在 4.16.0 版本中，我们将 `Server` 服务从 Koishi 中分离出来，独立成了 [@koishijs/plugin-server](../plugins/develop/server.md) 插件。</source>
        <target state="needs-translation">在 4.16.0 版本中，我们将 `Server` 服务从 Koishi 中分离出来，独立成了 [@koishijs/plugin-server](../plugins/develop/server.md) 插件。</target>
      </trans-unit>
      <trans-unit id="65230">
        <source>Koishi CLI 提供了自动迁移机制，因此任何使用 CLI 启动 Koishi 的用户无需进行任何操作。</source>
        <target state="needs-translation">Koishi CLI 提供了自动迁移机制，因此任何使用 CLI 启动 Koishi 的用户无需进行任何操作。</target>
      </trans-unit>
      <trans-unit id="65232">
        <source>如果你是将 Koishi 作为依赖调用的进阶开发者，你需要执行下列操作完成升级：</source>
        <target state="needs-translation">如果你是将 Koishi 作为依赖调用的进阶开发者，你需要执行下列操作完成升级：</target>
      </trans-unit>
      <trans-unit id="65234">
        <source>安装最新版本的 [@koishijs/plugin-server](../plugins/develop/server.md) 插件；</source>
        <target state="needs-translation">安装最新版本的 [@koishijs/plugin-server](../plugins/develop/server.md) 插件；</target>
      </trans-unit>
      <trans-unit id="65236">
        <source>在你的代码中手动导入并加载该插件；</source>
        <target state="needs-translation">在你的代码中手动导入并加载该插件；</target>
      </trans-unit>
      <trans-unit id="65238">
        <source>将你过去的 `host`, `port`, `maxPort`, `selfUrl` 全局设置移动至 server 插件的配置项。</source>
        <target state="needs-translation">将你过去的 `host`, `port`, `maxPort`, `selfUrl` 全局设置移动至 server 插件的配置项。</target>
      </trans-unit>
      <trans-unit id="64364">
        <source>消息元素更新 &lt;badge&gt;v4.16.4&lt;/badge&gt;</source>
        <target state="needs-translation">消息元素更新 &lt;badge&gt;v4.16.4&lt;/badge&gt;</target>
      </trans-unit>
      <trans-unit id="64366">
        <source>在 4.16.4 版本中，我们将 Koishi 内部的消息元素实现与 Satori 协议规范进行了对齐。</source>
        <target state="needs-translation">在 4.16.4 版本中，我们将 Koishi 内部的消息元素实现与 Satori 协议规范进行了对齐。</target>
      </trans-unit>
      <trans-unit id="64368">
        <source>涉及到以下 API 的变动：</source>
        <target state="needs-translation">涉及到以下 API 的变动：</target>
      </trans-unit>
      <trans-unit id="64370">
        <source>`&lt;image&gt;` 元素更名为 `&lt;img&gt;`</source>
        <target state="needs-translation">`&lt;image&gt;` 元素更名为 `&lt;img&gt;`</target>
      </trans-unit>
      <trans-unit id="64372">
        <source>`&lt;img&gt;`, `&lt;audio&gt;`, `&lt;video&gt;`, `&lt;file&gt;` 元素的 `url` 属性改为 `src`</source>
        <target state="needs-translation">`&lt;img&gt;`, `&lt;audio&gt;`, `&lt;video&gt;`, `&lt;file&gt;` 元素的 `url` 属性改为 `src`</target>
      </trans-unit>
      <trans-unit id="64374">
        <source>如果你的插件用到了相关的特性，请参考下面的迁移指南：</source>
        <target state="needs-translation">如果你的插件用到了相关的特性，请参考下面的迁移指南：</target>
      </trans-unit>
      <trans-unit id="64376">
        <source>如果你的插件**发送**了上述消息元素，你不需要进行任何修改</source>
        <target state="needs-translation">如果你的插件**发送**了上述消息元素，你不需要进行任何修改</target>
      </trans-unit>
      <trans-unit id="64378">
        <source>官方适配器插件 (和积极维护的社区适配器插件) 都进行了向下兼容</source>
        <target state="needs-translation">官方适配器插件 (和积极维护的社区适配器插件) 都进行了向下兼容</target>
      </trans-unit>
      <trans-unit id="64380">
        <source>如果你使用了非官方的适配器并发现升级后无法发送图片，请联系适配器作者进行更新</source>
        <target state="needs-translation">如果你使用了非官方的适配器并发现升级后无法发送图片，请联系适配器作者进行更新</target>
      </trans-unit>
      <trans-unit id="64382">
        <source>如果你的插件**接收并解析**了上述消息元素，你可能需要调整你的解析逻辑</source>
        <target state="needs-translation">如果你的插件**接收并解析**了上述消息元素，你可能需要调整你的解析逻辑</target>
      </trans-unit>
      <trans-unit id="64384">
        <source>要从给定的消息中提取图片，可以使用 [`h.select()`](../api/message/api.md#h-select) 方法</source>
        <target state="needs-translation">要从给定的消息中提取图片，可以使用 [`h.select()`](../api/message/api.md#h-select) 方法</target>
      </trans-unit>
      <trans-unit id="64386">
        <source>如果你的指令接受图片作为参数，可以直接使用 [`image`](../guide/basic/command.md#argument-type) 参数类型</source>
        <target state="needs-translation">如果你的指令接受图片作为参数，可以直接使用 [`image`](../guide/basic/command.md#argument-type) 参数类型</target>
      </trans-unit>
      <trans-unit id="64388">
        <source>对于适配器作者，请参考下面的迁移指南：</source>
        <target state="needs-translation">对于适配器作者，请参考下面的迁移指南：</target>
      </trans-unit>
      <trans-unit id="64390">
        <source>接收侧 (`Adapter`)：请确保创建的会话中的消息元素均符合最新标准</source>
        <target state="needs-translation">接收侧 (`Adapter`)：请确保创建的会话中的消息元素均符合最新标准</target>
      </trans-unit>
      <trans-unit id="64392">
        <source>发送侧 (`MessageEncoder`)：请尽量同时支持新旧标准，例如使用以下代码：</source>
        <target state="needs-translation">发送侧 (`MessageEncoder`)：请尽量同时支持新旧标准，例如使用以下代码：</target>
      </trans-unit>
      <trans-unit id="64394">
        <source>if (type === 'image' || type === 'img') {
  await sendImage(attrs.src || attrs.url)
}</source>
        <target state="needs-translation">if (type === 'image' || type === 'img') {
  await sendImage(attrs.src || attrs.url)
}</target>
      </trans-unit>
      <trans-unit id="65240">
        <source>HTTP 插件独立 &lt;badge&gt;v4.17.6&lt;/badge&gt;</source>
        <target state="needs-translation">HTTP 插件独立 &lt;badge&gt;v4.17.6&lt;/badge&gt;</target>
      </trans-unit>
      <trans-unit id="65242">
        <source>在 4.17.6 版本中，我们将 HTTP 服务从 Koishi 中分离出来，独立成了 [@koishijs/plugin-http](../plugins/develop/http.md) 插件。</source>
        <target state="needs-translation">在 4.17.6 版本中，我们将 HTTP 服务从 Koishi 中分离出来，独立成了 [@koishijs/plugin-http](../plugins/develop/http.md) 插件。</target>
      </trans-unit>
      <trans-unit id="65244">
        <source>Koishi CLI 提供了自动迁移机制，因此任何使用 CLI 启动 Koishi 的用户无需进行任何操作。</source>
        <target state="needs-translation">Koishi CLI 提供了自动迁移机制，因此任何使用 CLI 启动 Koishi 的用户无需进行任何操作。</target>
      </trans-unit>
      <trans-unit id="65246">
        <source>如果你是将 Koishi 作为依赖调用的进阶开发者，你需要执行下列操作完成升级：</source>
        <target state="needs-translation">如果你是将 Koishi 作为依赖调用的进阶开发者，你需要执行下列操作完成升级：</target>
      </trans-unit>
      <trans-unit id="65248">
        <source>安装最新版本的 [@koishijs/plugin-http](../plugins/develop/http.md) 插件；</source>
        <target state="needs-translation">安装最新版本的 [@koishijs/plugin-http](../plugins/develop/http.md) 插件；</target>
      </trans-unit>
      <trans-unit id="65250">
        <source>(可选，如果你使用网络代理工具) 安装最新版本的 [@koishijs/plugin-proxy-agent](../plugins/develop/proxy-agent.md) 插件；</source>
        <target state="needs-translation">(可选，如果你使用网络代理工具) 安装最新版本的 [@koishijs/plugin-proxy-agent](../plugins/develop/proxy-agent.md) 插件；</target>
      </trans-unit>
      <trans-unit id="65252">
        <source>在你的代码中手动导入并加载这两个插件；</source>
        <target state="needs-translation">在你的代码中手动导入并加载这两个插件；</target>
      </trans-unit>
      <trans-unit id="65254">
        <source>将你过去的 `request` 全局设置移动至 http 插件的配置项；</source>
        <target state="needs-translation">将你过去的 `request` 全局设置移动至 http 插件的配置项；</target>
      </trans-unit>
      <trans-unit id="65256">
        <source>(可选) 将你过去的 `request.proxyAgent` 全局设置移动至 proxy-agent 插件的配置项。</source>
        <target state="needs-translation">(可选) 将你过去的 `request.proxyAgent` 全局设置移动至 proxy-agent 插件的配置项。</target>
      </trans-unit>
      <trans-unit id="65298">
        <source>`tsconfig` 更新 &lt;badge&gt;v4.17.8&lt;/badge&gt;</source>
        <target state="needs-translation">`tsconfig` 更新 &lt;badge&gt;v4.17.8&lt;/badge&gt;</target>
      </trans-unit>
      <trans-unit id="65300">
        <source>在 4.17.8 版本中，由于部分依赖的更新，我们对推荐的 `tsconfig.json` 配置进行了调整。</source>
        <target state="needs-translation">在 4.17.8 版本中，由于部分依赖的更新，我们对推荐的 `tsconfig.json` 配置进行了调整。</target>
      </trans-unit>
      <trans-unit id="65302">
        <source>如果你的项目使用了 TypeScript，并且在升级后发现无法通过编译，你可以打开 `tsconfig.json` 文件，并尝试执行下列修改以完成升级：</source>
        <target state="needs-translation">如果你的项目使用了 TypeScript，并且在升级后发现无法通过编译，你可以打开 `tsconfig.json` 文件，并尝试执行下列修改以完成升级：</target>
      </trans-unit>
      <trans-unit id="65304">
        <source>将 `module` 属性改为 `esnext`；</source>
        <target state="needs-translation">将 `module` 属性改为 `esnext`；</target>
      </trans-unit>
      <trans-unit id="65306">
        <source>将 `moduleResolution` 属性改为 `bundler`；</source>
        <target state="needs-translation">将 `moduleResolution` 属性改为 `bundler`；</target>
      </trans-unit>
      <trans-unit id="65308">
        <source>将 `emitDeclarationOnly` 属性改为 `true` (或者添加这个属性)。</source>
        <target state="needs-translation">将 `emitDeclarationOnly` 属性改为 `true` (或者添加这个属性)。</target>
      </trans-unit>
      <trans-unit id="65310">
        <source>{
  &quot;compilerOptions&quot;: {
    &quot;module&quot;: &quot;esnext&quot;,
    &quot;moduleResolution&quot;: &quot;bundler&quot;,
    &quot;emitDeclarationOnly&quot;: true,
  },
}</source>
        <target state="needs-translation">{
  &quot;compilerOptions&quot;: {
    &quot;module&quot;: &quot;esnext&quot;,
    &quot;moduleResolution&quot;: &quot;bundler&quot;,
    &quot;emitDeclarationOnly&quot;: true,
  },
}</target>
      </trans-unit>
      <trans-unit id="65312">
        <source>注意，如果你的项目中存在多个 `tsconfig.json` 文件，你需要对每一个文件都进行上述修改 (通过 `extends` 继承其他文件中配置的除外)。</source>
        <target state="needs-translation">注意，如果你的项目中存在多个 `tsconfig.json` 文件，你需要对每一个文件都进行上述修改 (通过 `extends` 继承其他文件中配置的除外)。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1410" original="/[koishijs.docs] main/zh-CN/api/console/component.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="43628">
        <source>内置组件</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">內建元件</target>
      </trans-unit>
      <trans-unit id="63546">
        <source>参见：[开发 &gt; 控制台 &gt; 客户端开发](../../guide/console/client.md)</source>
        <target state="needs-translation">参见：[开发 &gt; 控制台 &gt; 客户端开发](../../guide/console/client.md)</target>
      </trans-unit>
      <trans-unit id="43630">
        <source>`&lt;k-comment&gt;`</source>
        <target state="needs-translation">`&lt;k-comment&gt;`</target>
      </trans-unit>
      <trans-unit id="43632">
        <source>**props.type:** `'info' | 'success' | 'warning' | 'danger'` 提示类型</source>
        <target state="needs-translation">**props.type:** `'info' | 'success' | 'warning' | 'danger'` 提示类型</target>
      </trans-unit>
      <trans-unit id="43634">
        <source>**slots.default:** 提示内容</source>
        <target state="needs-translation">**slots.default:** 提示内容</target>
      </trans-unit>
      <trans-unit id="43636">
        <source>提示信息组件。</source>
        <target state="needs-translation">提示信息组件。</target>
      </trans-unit>
      <trans-unit id="43638">
        <source>`&lt;k-empty&gt;`</source>
        <target state="needs-translation">`&lt;k-empty&gt;`</target>
      </trans-unit>
      <trans-unit id="43640">
        <source>空白内容组件。</source>
        <target state="needs-translation">空白内容组件。</target>
      </trans-unit>
      <trans-unit id="43642">
        <source>`&lt;k-form&gt;`</source>
        <target state="needs-translation">`&lt;k-form&gt;`</target>
      </trans-unit>
      <trans-unit id="43644">
        <source>**props.schema:** `Schema` 配置构型</source>
        <target state="needs-translation">**props.schema:** `Schema` 配置构型</target>
      </trans-unit>
      <trans-unit id="43646">
        <source>**props.modelValue:** `any` 当前配置</source>
        <target state="needs-translation">**props.modelValue:** `any` 当前配置</target>
      </trans-unit>
      <trans-unit id="43648">
        <source>**props.initial:** `any` 初始配置</source>
        <target state="needs-translation">**props.initial:** `any` 初始配置</target>
      </trans-unit>
      <trans-unit id="43650">
        <source>**props.disabled:** `boolean?` 是否禁用</source>
        <target state="needs-translation">**props.disabled:** `boolean?` 是否禁用</target>
      </trans-unit>
      <trans-unit id="43652">
        <source>配置表单。</source>
        <target state="needs-translation">配置表单。</target>
      </trans-unit>
      <trans-unit id="43654">
        <source>`&lt;k-layout&gt;`</source>
        <target state="needs-translation">`&lt;k-layout&gt;`</target>
      </trans-unit>
      <trans-unit id="43656">
        <source>**props.menu:** `string?` 菜单标识符</source>
        <target state="needs-translation">**props.menu:** `string?` 菜单标识符</target>
      </trans-unit>
      <trans-unit id="43658">
        <source>**slots.header:** 标题栏</source>
        <target state="needs-translation">**slots.header:** 标题栏</target>
      </trans-unit>
      <trans-unit id="43660">
        <source>**slots.left:** 侧边栏</source>
        <target state="needs-translation">**slots.left:** 侧边栏</target>
      </trans-unit>
      <trans-unit id="43662">
        <source>**slots.default:** 页面主体</source>
        <target state="needs-translation">**slots.default:** 页面主体</target>
      </trans-unit>
      <trans-unit id="43664">
        <source>布局组件。</source>
        <target state="needs-translation">布局组件。</target>
      </trans-unit>
      <trans-unit id="43666">
        <source>`&lt;k-slot&gt;`</source>
        <target state="needs-translation">`&lt;k-slot&gt;`</target>
      </trans-unit>
      <trans-unit id="43668">
        <source>**props.name:** `string` 插槽名称</source>
        <target state="needs-translation">**props.name:** `string` 插槽名称</target>
      </trans-unit>
      <trans-unit id="43670">
        <source>插槽组件。</source>
        <target state="needs-translation">插槽组件。</target>
      </trans-unit>
      <trans-unit id="43672">
        <source>`&lt;k-status&gt;`</source>
        <target state="needs-translation">`&lt;k-status&gt;`</target>
      </trans-unit>
      <trans-unit id="43674">
        <source>**slots.default:** 显示内容</source>
        <target state="needs-translation">**slots.default:** 显示内容</target>
      </trans-unit>
      <trans-unit id="43676">
        <source>显示在状态栏中的组件。</source>
        <target state="needs-translation">显示在状态栏中的组件。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1412" original="/[koishijs.docs] main/zh-CN/api/console/composition.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="43678">
        <source>组合式 API</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">組合式 API</target>
      </trans-unit>
      <trans-unit id="63548">
        <source>参见：[开发 &gt; 控制台 &gt; 客户端开发](../../guide/console/client.md)</source>
        <target state="needs-translation">参见：[开发 &gt; 控制台 &gt; 客户端开发](../../guide/console/client.md)</target>
      </trans-unit>
      <trans-unit id="43680">
        <source>本节中所涉及的 API 都在 @koishijs/client 中导出。</source>
        <target state="needs-translation">本节中所涉及的 API 都在 @koishijs/client 中导出。</target>
      </trans-unit>
      <trans-unit id="43682">
        <source>useConfig()</source>
        <target state="needs-translation">useConfig()</target>
      </trans-unit>
      <trans-unit id="43684">
        <source>返回值: `Ref&lt;any&gt;`</source>
        <target state="needs-translation">返回值: `Ref&lt;any&gt;`</target>
      </trans-unit>
      <trans-unit id="43686">
        <source>获取用户设置。</source>
        <target state="needs-translation">获取用户设置。</target>
      </trans-unit>
      <trans-unit id="43688">
        <source>useContext()</source>
        <target state="needs-translation">useContext()</target>
      </trans-unit>
      <trans-unit id="43690">
        <source>返回值: [`Context`](./context.md)</source>
        <target state="needs-translation">返回值: [`Context`](./context.md)</target>
      </trans-unit>
      <trans-unit id="43692">
        <source>获取当前组件所在的插件上下文。</source>
        <target state="needs-translation">获取当前组件所在的插件上下文。</target>
      </trans-unit>
      <trans-unit id="43694">
        <source>useMenu(id)</source>
        <target state="needs-translation">useMenu(id)</target>
      </trans-unit>
      <trans-unit id="43696">
        <source>**id:** `string` 菜单标识符</source>
        <target state="needs-translation">**id:** `string` 菜单标识符</target>
      </trans-unit>
      <trans-unit id="43698">
        <source>返回值: `(el: HTMLElement, data: any) =&gt; void`</source>
        <target state="needs-translation">返回值: `(el: HTMLElement, data: any) =&gt; void`</target>
      </trans-unit>
      <trans-unit id="43700">
        <source>获得一个触发上下文菜单的事件监听器。</source>
        <target state="needs-translation">获得一个触发上下文菜单的事件监听器。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1414" original="/[koishijs.docs] main/zh-CN/api/console/context.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="43702">
        <source>上下文 API</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">上下文 API</target>
      </trans-unit>
      <trans-unit id="63550">
        <source>参见：[开发 &gt; 控制台 &gt; 客户端开发](../../guide/console/client.md)</source>
        <target state="needs-translation">参见：[开发 &gt; 控制台 &gt; 客户端开发](../../guide/console/client.md)</target>
      </trans-unit>
      <trans-unit id="63552">
        <source>消歧义：本文档介绍的是控制台客户端的 `Context`，而非 Koishi 本身的 `Context`。</source>
        <target state="needs-translation">消歧义：本文档介绍的是控制台客户端的 `Context`，而非 Koishi 本身的 `Context`。</target>
      </trans-unit>
      <trans-unit id="43706">
        <source>要查看后者的 API 文档请 [前往这里](../core/context.md)。</source>
        <target state="needs-translation">要查看后者的 API 文档请 [前往这里](../core/context.md)。</target>
      </trans-unit>
      <trans-unit id="43708">
        <source>Koishi 的控制台客户端一样通过插件化的方式加载，因此我们也实现了一套类似的 `Context` 机制。</source>
        <target state="needs-translation">Koishi 的控制台客户端一样通过插件化的方式加载，因此我们也实现了一套类似的 `Context` 机制。</target>
      </trans-unit>
      <trans-unit id="43710">
        <source>许多你熟悉的底层 API 在客户端是依然可用的 (例如生命周期事件、服务的定义与使用等等)。</source>
        <target state="needs-translation">许多你熟悉的底层 API 在客户端是依然可用的 (例如生命周期事件、服务的定义与使用等等)。</target>
      </trans-unit>
      <trans-unit id="43712">
        <source>此外，我们还提供了一些与客户端相关的 API 来帮助你更方便地开发控制台插件。</source>
        <target state="needs-translation">此外，我们还提供了一些与客户端相关的 API 来帮助你更方便地开发控制台插件。</target>
      </trans-unit>
      <trans-unit id="43714">
        <source>混入属性和方法</source>
        <target state="needs-translation">混入属性和方法</target>
      </trans-unit>
      <trans-unit id="43716">
        <source>以下的属性和方法是由服务混入的。</source>
        <target state="needs-translation">以下的属性和方法是由服务混入的。</target>
      </trans-unit>
      <trans-unit id="43718">
        <source>你可以就像使用实例属性和方法一样使用它们。</source>
        <target state="needs-translation">你可以就像使用实例属性和方法一样使用它们。</target>
      </trans-unit>
      <trans-unit id="43720">
        <source>这些 API 的具体用法在对应的服务文档中详细介绍，你可以点击链接前往查看。</source>
        <target state="needs-translation">这些 API 的具体用法在对应的服务文档中详细介绍，你可以点击链接前往查看。</target>
      </trans-unit>
      <trans-unit id="43722">
        <source>[ctx.bail](../service/events.md#ctx-bail)</source>
        <target state="needs-translation">[ctx.bail](../service/events.md#ctx-bail)</target>
      </trans-unit>
      <trans-unit id="43724">
        <source>[ctx.before](../service/events.md#ctx-before)</source>
        <target state="needs-translation">[ctx.before](../service/events.md#ctx-before)</target>
      </trans-unit>
      <trans-unit id="43726">
        <source>[ctx.emit](../service/events.md#ctx-emit)</source>
        <target state="needs-translation">[ctx.emit](../service/events.md#ctx-emit)</target>
      </trans-unit>
      <trans-unit id="43728">
        <source>[ctx.middleware](../service/events.md#ctx-middleware)</source>
        <target state="needs-translation">[ctx.middleware](../service/events.md#ctx-middleware)</target>
      </trans-unit>
      <trans-unit id="43730">
        <source>[ctx.off](../service/events.md#ctx-off)</source>
        <target state="needs-translation">[ctx.off](../service/events.md#ctx-off)</target>
      </trans-unit>
      <trans-unit id="43732">
        <source>[ctx.on](../service/events.md#ctx-on)</source>
        <target state="needs-translation">[ctx.on](../service/events.md#ctx-on)</target>
      </trans-unit>
      <trans-unit id="43734">
        <source>[ctx.once](../service/events.md#ctx-once)</source>
        <target state="needs-translation">[ctx.once](../service/events.md#ctx-once)</target>
      </trans-unit>
      <trans-unit id="43736">
        <source>[ctx.parallel](../service/events.md#ctx-parallel)</source>
        <target state="needs-translation">[ctx.parallel](../service/events.md#ctx-parallel)</target>
      </trans-unit>
      <trans-unit id="43738">
        <source>[ctx.plugin](../service/registry.md#ctx-plugin)</source>
        <target state="needs-translation">[ctx.plugin](../service/registry.md#ctx-plugin)</target>
      </trans-unit>
      <trans-unit id="43740">
        <source>[ctx.scope](../service/registry.md#ctx-scope)</source>
        <target state="needs-translation">[ctx.scope](../service/registry.md#ctx-scope)</target>
      </trans-unit>
      <trans-unit id="43742">
        <source>[ctx.serial](../service/events.md#ctx-serial)</source>
        <target state="needs-translation">[ctx.serial](../service/events.md#ctx-serial)</target>
      </trans-unit>
      <trans-unit id="43744">
        <source>[ctx.using](../service/registry.md#ctx-using)</source>
        <target state="needs-translation">[ctx.using](../service/registry.md#ctx-using)</target>
      </trans-unit>
      <trans-unit id="43746">
        <source>实例方法</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">實體方法</target>
      </trans-unit>
      <trans-unit id="43748">
        <source>ctx.action(id, options) &lt;badge type=&quot;warning&quot;&gt;实验性&lt;/badge&gt;</source>
        <target state="needs-translation">ctx.action(id, options) &lt;badge type=&quot;warning&quot;&gt;实验性&lt;/badge&gt;</target>
      </trans-unit>
      <trans-unit id="43750">
        <source>**id:** `string` 动作标识符</source>
        <target state="needs-translation">**id:** `string` 动作标识符</target>
      </trans-unit>
      <trans-unit id="43752">
        <source>**options.disabled:** `(() =&gt; boolean)?` 是否隐藏</source>
        <target state="needs-translation">**options.disabled:** `(() =&gt; boolean)?` 是否隐藏</target>
      </trans-unit>
      <trans-unit id="43754">
        <source>**options.action:** `Function` 回调函数函数</source>
        <target state="needs-translation">**options.action:** `Function` 回调函数函数</target>
      </trans-unit>
      <trans-unit id="43756">
        <source>注册一个动作。</source>
        <target state="needs-translation">注册一个动作。</target>
      </trans-unit>
      <trans-unit id="43758">
        <source>ctx.menu(id, items) &lt;badge type=&quot;warning&quot;&gt;实验性&lt;/badge&gt;</source>
        <target state="needs-translation">ctx.menu(id, items) &lt;badge type=&quot;warning&quot;&gt;实验性&lt;/badge&gt;</target>
      </trans-unit>
      <trans-unit id="43760">
        <source>**id:** `string` 菜单标识符</source>
        <target state="needs-translation">**id:** `string` 菜单标识符</target>
      </trans-unit>
      <trans-unit id="43762">
        <source>**items:** `MenuItem[]` 菜单项列表</source>
        <target state="needs-translation">**items:** `MenuItem[]` 菜单项列表</target>
      </trans-unit>
      <trans-unit id="43764">
        <source>**items[].id:** `string` 动作标识符</source>
        <target state="needs-translation">**items[].id:** `string` 动作标识符</target>
      </trans-unit>
      <trans-unit id="43766">
        <source>**items[].label:** `MaybeGetter&lt;string&gt;?` 菜单项名称</source>
        <target state="needs-translation">**items[].label:** `MaybeGetter&lt;string&gt;?` 菜单项名称</target>
      </trans-unit>
      <trans-unit id="43768">
        <source>**items[].type:** `MaybeGetter&lt;string&gt;?` 菜单项类型</source>
        <target state="needs-translation">**items[].type:** `MaybeGetter&lt;string&gt;?` 菜单项类型</target>
      </trans-unit>
      <trans-unit id="43770">
        <source>**items[].icon:** `MaybeGetter&lt;string&gt;?` 菜单项图标</source>
        <target state="needs-translation">**items[].icon:** `MaybeGetter&lt;string&gt;?` 菜单项图标</target>
      </trans-unit>
      <trans-unit id="43772">
        <source>**items[].order:** `number?` 排列优先级</source>
        <target state="needs-translation">**items[].order:** `number?` 排列优先级</target>
      </trans-unit>
      <trans-unit id="43774">
        <source>注册一个菜单。</source>
        <target state="needs-translation">注册一个菜单。</target>
      </trans-unit>
      <trans-unit id="43776">
        <source>ctx.page(options)</source>
        <target state="needs-translation">ctx.page(options)</target>
      </trans-unit>
      <trans-unit id="43778">
        <source>**options.id:** `string?` 页面标识符</source>
        <target state="needs-translation">**options.id:** `string?` 页面标识符</target>
      </trans-unit>
      <trans-unit id="43780">
        <source>**options.path:** `string` 页面路由</source>
        <target state="needs-translation">**options.path:** `string` 页面路由</target>
      </trans-unit>
      <trans-unit id="43782">
        <source>**options.name:** `MaybeRefOrGetter&lt;string&gt;` 页面名称</source>
        <target state="needs-translation">**options.name:** `MaybeRefOrGetter&lt;string&gt;` 页面名称</target>
      </trans-unit>
      <trans-unit id="43784">
        <source>**options.desc:** `MaybeRefOrGetter&lt;string&gt;?` 页面描述</source>
        <target state="needs-translation">**options.desc:** `MaybeRefOrGetter&lt;string&gt;?` 页面描述</target>
      </trans-unit>
      <trans-unit id="43786">
        <source>**options.icon:** `MaybeRefOrGetter&lt;string&gt;?` 页面图标</source>
        <target state="needs-translation">**options.icon:** `MaybeRefOrGetter&lt;string&gt;?` 页面图标</target>
      </trans-unit>
      <trans-unit id="43788">
        <source>**options.position:** `'top' | 'bottom'` 图标在活动栏中的位置</source>
        <target state="needs-translation">**options.position:** `'top' | 'bottom'` 图标在活动栏中的位置</target>
      </trans-unit>
      <trans-unit id="43790">
        <source>**options.order:** `number?` 排列优先级</source>
        <target state="needs-translation">**options.order:** `number?` 排列优先级</target>
      </trans-unit>
      <trans-unit id="43792">
        <source>**options.disabled:** `(() =&gt; boolean)?` 是否隐藏</source>
        <target state="needs-translation">**options.disabled:** `(() =&gt; boolean)?` 是否隐藏</target>
      </trans-unit>
      <trans-unit id="43794">
        <source>**options.component:** `Component` 页面组件</source>
        <target state="needs-translation">**options.component:** `Component` 页面组件</target>
      </trans-unit>
      <trans-unit id="43796">
        <source>注册一个页面。</source>
        <target state="needs-translation">注册一个页面。</target>
      </trans-unit>
      <trans-unit id="43798">
        <source>ctx.settings(options) &lt;badge type=&quot;warning&quot;&gt;实验性&lt;/badge&gt;</source>
        <target state="needs-translation">ctx.settings(options) &lt;badge type=&quot;warning&quot;&gt;实验性&lt;/badge&gt;</target>
      </trans-unit>
      <trans-unit id="43800">
        <source>**options.type:** `string` 所属类别</source>
        <target state="needs-translation">**options.type:** `string` 所属类别</target>
      </trans-unit>
      <trans-unit id="43802">
        <source>**options.title:** `string?` 类别名称</source>
        <target state="needs-translation">**options.title:** `string?` 类别名称</target>
      </trans-unit>
      <trans-unit id="43804">
        <source>**options.order:** `number?` 排列优先级</source>
        <target state="needs-translation">**options.order:** `number?` 排列优先级</target>
      </trans-unit>
      <trans-unit id="43806">
        <source>**options.disabled:** `(() =&gt; boolean)?` 是否隐藏</source>
        <target state="needs-translation">**options.disabled:** `(() =&gt; boolean)?` 是否隐藏</target>
      </trans-unit>
      <trans-unit id="43808">
        <source>**options.schema:** `Schema?` 配置构型</source>
        <target state="needs-translation">**options.schema:** `Schema?` 配置构型</target>
      </trans-unit>
      <trans-unit id="43810">
        <source>**options.component:** `Component?` 配置组件</source>
        <target state="needs-translation">**options.component:** `Component?` 配置组件</target>
      </trans-unit>
      <trans-unit id="43812">
        <source>扩展用户设置。</source>
        <target state="needs-translation">扩展用户设置。</target>
      </trans-unit>
      <trans-unit id="43814">
        <source>当使用了 `component` 时，`schema` 会被忽略。</source>
        <target state="needs-translation">当使用了 `component` 时，`schema` 会被忽略。</target>
      </trans-unit>
      <trans-unit id="43816">
        <source>ctx.slot(options)</source>
        <target state="needs-translation">ctx.slot(options)</target>
      </trans-unit>
      <trans-unit id="43818">
        <source>**options.type:** `string` 插槽名称</source>
        <target state="needs-translation">**options.type:** `string` 插槽名称</target>
      </trans-unit>
      <trans-unit id="43820">
        <source>**options.order:** `number?` 排列优先级</source>
        <target state="needs-translation">**options.order:** `number?` 排列优先级</target>
      </trans-unit>
      <trans-unit id="43822">
        <source>**options.disabled:** `(() =&gt; boolean)?` 是否隐藏</source>
        <target state="needs-translation">**options.disabled:** `(() =&gt; boolean)?` 是否隐藏</target>
      </trans-unit>
      <trans-unit id="43824">
        <source>**options.component:** `Component` 注入组件</source>
        <target state="needs-translation">**options.component:** `Component` 注入组件</target>
      </trans-unit>
      <trans-unit id="43826">
        <source>向特定插槽注入组件。</source>
        <target state="needs-translation">向特定插槽注入组件。</target>
      </trans-unit>
      <trans-unit id="43828">
        <source>ctx.theme(options)</source>
        <target state="needs-translation">ctx.theme(options)</target>
      </trans-unit>
      <trans-unit id="43830">
        <source>**options.id:** `string` 主题标识符 (必须以 `-dark` 或 `-light` 结尾)</source>
        <target state="needs-translation">**options.id:** `string` 主题标识符 (必须以 `-dark` 或 `-light` 结尾)</target>
      </trans-unit>
      <trans-unit id="43832">
        <source>**options.name:** `string` 主题名称</source>
        <target state="needs-translation">**options.name:** `string` 主题名称</target>
      </trans-unit>
      <trans-unit id="43834">
        <source>**options.components:** `Dict&lt;Component&gt;?` 主题提供的布局组件</source>
        <target state="needs-translation">**options.components:** `Dict&lt;Component&gt;?` 主题提供的布局组件</target>
      </trans-unit>
      <trans-unit id="43836">
        <source>定义一个新的主题。</source>
        <target state="needs-translation">定义一个新的主题。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1416" original="/[koishijs.docs] main/zh-CN/api/console/server.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="43838">
        <source>服务端 API</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">服務端 API</target>
      </trans-unit>
      <trans-unit id="63554">
        <source>参见：[开发 &gt; 控制台 &gt; 基本用法](../../guide/console/)</source>
        <target state="needs-translation">参见：[开发 &gt; 控制台 &gt; 基本用法](../../guide/console/)</target>
      </trans-unit>
      <trans-unit id="43840">
        <source>本节中所涉及的 API 都在 @koishijs/plugin-console 中导出。</source>
        <target state="needs-translation">本节中所涉及的 API 都在 @koishijs/plugin-console 中导出。</target>
      </trans-unit>
      <trans-unit id="43842">
        <source>类：Console</source>
        <target state="needs-translation">类：Console</target>
      </trans-unit>
      <trans-unit id="43844">
        <source>`Console` 类封装了控制台服务的所有功能，你可以通过 `ctx.console` 来访问它。</source>
        <target state="needs-translation">`Console` 类封装了控制台服务的所有功能，你可以通过 `ctx.console` 来访问它。</target>
      </trans-unit>
      <trans-unit id="63556">
        <source>ctx.console.addEntry(entry)</source>
        <target state="needs-translation">ctx.console.addEntry(entry)</target>
      </trans-unit>
      <trans-unit id="43848">
        <source>**entry:** `Entry` 要添加的入口</source>
        <target state="needs-translation">**entry:** `Entry` 要添加的入口</target>
      </trans-unit>
      <trans-unit id="43850">
        <source>interface Entry {
  dev: string
  prod: string | string[]
}</source>
        <target state="needs-translation">interface Entry {
  dev: string
  prod: string | string[]
}</target>
      </trans-unit>
      <trans-unit id="43852">
        <source>添加客户端入口文件。</source>
        <target state="needs-translation">添加客户端入口文件。</target>
      </trans-unit>
      <trans-unit id="63558">
        <source>ctx.console.addListener(event, callback, options) &lt;badge type=&quot;warning&quot;&gt;实验性&lt;/badge&gt;</source>
        <target state="needs-translation">ctx.console.addListener(event, callback, options) &lt;badge type=&quot;warning&quot;&gt;实验性&lt;/badge&gt;</target>
      </trans-unit>
      <trans-unit id="43856">
        <source>**event:** `string` 事件名称</source>
        <target state="needs-translation">**event:** `string` 事件名称</target>
      </trans-unit>
      <trans-unit id="43858">
        <source>**callback:** `Function` 回调函数，其中 `this` 指向 [`Client`](#类-client) 对象</source>
        <target state="needs-translation">**callback:** `Function` 回调函数，其中 `this` 指向 [`Client`](#类-client) 对象</target>
      </trans-unit>
      <trans-unit id="43860">
        <source>注册一个事件监听器。</source>
        <target state="needs-translation">注册一个事件监听器。</target>
      </trans-unit>
      <trans-unit id="63560">
        <source>ctx.console.broadcast(event, body, options)</source>
        <target state="needs-translation">ctx.console.broadcast(event, body, options)</target>
      </trans-unit>
      <trans-unit id="43864">
        <source>**event:** `string` 事件名称</source>
        <target state="needs-translation">**event:** `string` 事件名称</target>
      </trans-unit>
      <trans-unit id="43866">
        <source>**body:** `any` 事件内容</source>
        <target state="needs-translation">**body:** `any` 事件内容</target>
      </trans-unit>
      <trans-unit id="43868">
        <source>向所有客户端广播一个事件。</source>
        <target state="needs-translation">向所有客户端广播一个事件。</target>
      </trans-unit>
      <trans-unit id="43870">
        <source>类：Client</source>
        <target state="needs-translation">类：Client</target>
      </trans-unit>
      <trans-unit id="43872">
        <source>`Client` 类代表一个客户端连接。</source>
        <target state="needs-translation">`Client` 类代表一个客户端连接。</target>
      </trans-unit>
      <trans-unit id="43874">
        <source>client.socket</source>
        <target state="needs-translation">client.socket</target>
      </trans-unit>
      <trans-unit id="43876">
        <source>类型: `WebSocket`</source>
        <target state="needs-translation">类型: `WebSocket`</target>
      </trans-unit>
      <trans-unit id="43878">
        <source>客户端连接的 WebSocket 对象。</source>
        <target state="needs-translation">客户端连接的 WebSocket 对象。</target>
      </trans-unit>
      <trans-unit id="43880">
        <source>client.request</source>
        <target state="needs-translation">client.request</target>
      </trans-unit>
      <trans-unit id="43882">
        <source>类型: `IncomingMessage`</source>
        <target state="needs-translation">类型: `IncomingMessage`</target>
      </trans-unit>
      <trans-unit id="43884">
        <source>客户端发出的 HTTP 请求对象。</source>
        <target state="needs-translation">客户端发出的 HTTP 请求对象。</target>
      </trans-unit>
      <trans-unit id="43886">
        <source>client.send(data)</source>
        <target state="needs-translation">client.send(data)</target>
      </trans-unit>
      <trans-unit id="43888">
        <source>**data:** `any` 要发送的数据</source>
        <target state="needs-translation">**data:** `any` 要发送的数据</target>
      </trans-unit>
      <trans-unit id="43890">
        <source>向客户端发送数据。</source>
        <target state="needs-translation">向客户端发送数据。</target>
      </trans-unit>
      <trans-unit id="43892">
        <source>`data` 会被序列化为 JSON 字符串。</source>
        <target state="needs-translation">`data` 会被序列化为 JSON 字符串。</target>
      </trans-unit>
      <trans-unit id="43894">
        <source>类：DataService &lt;badge&gt;抽象&lt;/badge&gt;</source>
        <target state="needs-translation">类：DataService &lt;badge&gt;抽象&lt;/badge&gt;</target>
      </trans-unit>
      <trans-unit id="43896">
        <source>`DataService` 类封装了一些与客户端进行 [数据通信](../../guide/console/data.md) 的实用方法。</source>
        <target state="needs-translation">`DataService` 类封装了一些与客户端进行 [数据通信](../../guide/console/data.md) 的实用方法。</target>
      </trans-unit>
      <trans-unit id="43898">
        <source>new DataService(ctx, key, options)</source>
        <target state="needs-translation">new DataService(ctx, key, options)</target>
      </trans-unit>
      <trans-unit id="43900">
        <source>**ctx:** `Context` 上下文对象</source>
        <target state="needs-translation">**ctx:** `Context` 上下文对象</target>
      </trans-unit>
      <trans-unit id="43902">
        <source>**key:** `string` 服务的唯一标识符</source>
        <target state="needs-translation">**key:** `string` 服务的唯一标识符</target>
      </trans-unit>
      <trans-unit id="43904">
        <source>构造一个数据服务。</source>
        <target state="needs-translation">构造一个数据服务。</target>
      </trans-unit>
      <trans-unit id="43906">
        <source>service.refresh()</source>
        <target state="needs-translation">service.refresh()</target>
      </trans-unit>
      <trans-unit id="43908">
        <source>向全体客户端重新发布该服务的数据。</source>
        <target state="needs-translation">向全体客户端重新发布该服务的数据。</target>
      </trans-unit>
      <trans-unit id="43910">
        <source>service.get() &lt;badge&gt;抽象&lt;/badge&gt;</source>
        <target state="needs-translation">service.get() &lt;badge&gt;抽象&lt;/badge&gt;</target>
      </trans-unit>
      <trans-unit id="43912">
        <source>实现此方法以返回该服务的数据。</source>
        <target state="needs-translation">实现此方法以返回该服务的数据。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1418" original="/[koishijs.docs] main/zh-CN/api/core/adapter.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="43914">
        <source>适配器 (Adapter)</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">配接器 (Adapter)</target>
      </trans-unit>
      <trans-unit id="43916">
        <source>参见：[开发 &gt; 跨平台 &gt; 实现适配器](../../guide/adapter/adapter.md)</source>
        <target state="needs-translation">参见：[开发 &gt; 跨平台 &gt; 实现适配器](../../guide/adapter/adapter.md)</target>
      </trans-unit>
      <trans-unit id="43918">
        <source>本章将介绍与适配器相关的内容，这是一个相当底层的概念，因此如果你并不打算编写一个平台实现，你完全可以跳过本章节。</source>
        <target state="needs-translation">本章将介绍与适配器相关的内容，这是一个相当底层的概念，因此如果你并不打算编写一个平台实现，你完全可以跳过本章节。</target>
      </trans-unit>
      <trans-unit id="43920">
        <source>标有 &lt;badge&gt;抽象&lt;/badge&gt; 的方法需要由适配器插件自行实现。</source>
        <target state="needs-translation">标有 &lt;badge&gt;抽象&lt;/badge&gt; 的方法需要由适配器插件自行实现。</target>
      </trans-unit>
      <trans-unit id="43922">
        <source>类：Adapter</source>
        <target state="needs-translation">类：Adapter</target>
      </trans-unit>
      <trans-unit id="43924">
        <source>适配器基类。</source>
        <target state="needs-translation">适配器基类。</target>
      </trans-unit>
      <trans-unit id="43926">
        <source>new Adapter()</source>
        <target state="needs-translation">new Adapter()</target>
      </trans-unit>
      <trans-unit id="43928">
        <source>构造一个适配器实例。</source>
        <target state="needs-translation">构造一个适配器实例。</target>
      </trans-unit>
      <trans-unit id="43930">
        <source>adapter.bots</source>
        <target state="needs-translation">adapter.bots</target>
      </trans-unit>
      <trans-unit id="43932">
        <source>类型: `Bot[]`</source>
        <target state="needs-translation">类型: `Bot[]`</target>
      </trans-unit>
      <trans-unit id="43934">
        <source>当前适配器下的全部机器人实例。</source>
        <target state="needs-translation">当前适配器下的全部机器人实例。</target>
      </trans-unit>
      <trans-unit id="43936">
        <source>adapter.connect(bot) &lt;badge&gt;抽象&lt;/badge&gt;</source>
        <target state="needs-translation">adapter.connect(bot) &lt;badge&gt;抽象&lt;/badge&gt;</target>
      </trans-unit>
      <trans-unit id="43938">
        <source>**bot:** `Bot` 机器人实例</source>
        <target state="needs-translation">**bot:** `Bot` 机器人实例</target>
      </trans-unit>
      <trans-unit id="43940">
        <source>返回值: `Promise&lt;void&gt;`</source>
        <target state="needs-translation">返回值: `Promise&lt;void&gt;`</target>
      </trans-unit>
      <trans-unit id="43942">
        <source>连接 Bot 所需的操作，将在 `bot.start()` 中被调用。</source>
        <target state="needs-translation">连接 Bot 所需的操作，将在 `bot.start()` 中被调用。</target>
      </trans-unit>
      <trans-unit id="43944">
        <source>adapter.disconnect(bot) &lt;badge&gt;抽象&lt;/badge&gt;</source>
        <target state="needs-translation">adapter.disconnect(bot) &lt;badge&gt;抽象&lt;/badge&gt;</target>
      </trans-unit>
      <trans-unit id="43946">
        <source>**bot:** `Bot` 机器人实例</source>
        <target state="needs-translation">**bot:** `Bot` 机器人实例</target>
      </trans-unit>
      <trans-unit id="43948">
        <source>返回值: `Promise&lt;void&gt;`</source>
        <target state="needs-translation">返回值: `Promise&lt;void&gt;`</target>
      </trans-unit>
      <trans-unit id="43950">
        <source>停止连接 Bot 所需的操作，将在 `bot.stop()` 中被调用。</source>
        <target state="needs-translation">停止连接 Bot 所需的操作，将在 `bot.stop()` 中被调用。</target>
      </trans-unit>
      <trans-unit id="43952">
        <source>类：Adapter.WsClient</source>
        <target state="needs-translation">类：Adapter.WsClient</target>
      </trans-unit>
      <trans-unit id="43954">
        <source>一个用于 WebSocket 通信方式的实用适配器基类。</source>
        <target state="needs-translation">一个用于 WebSocket 通信方式的实用适配器基类。</target>
      </trans-unit>
      <trans-unit id="43956">
        <source>其中的机器人需要接受以下配置项：</source>
        <target state="needs-translation">其中的机器人需要接受以下配置项：</target>
      </trans-unit>
      <trans-unit id="43958">
        <source>export interface WsClientConfig {
  retryLazy?: number
  retryTimes?: number
  retryInterval?: number
}</source>
        <target state="needs-translation">export interface WsClientConfig {
  retryLazy?: number
  retryTimes?: number
  retryInterval?: number
}</target>
      </trans-unit>
      <trans-unit id="43960">
        <source>new WsClient(ctx, bot)</source>
        <target state="needs-translation">new WsClient(ctx, bot)</target>
      </trans-unit>
      <trans-unit id="43962">
        <source>**ctx:** `Context` 上下文</source>
        <target state="needs-translation">**ctx:** `Context` 上下文</target>
      </trans-unit>
      <trans-unit id="43964">
        <source>**bot:** `Bot` 机器人实例</source>
        <target state="needs-translation">**bot:** `Bot` 机器人实例</target>
      </trans-unit>
      <trans-unit id="43966">
        <source>创建一个 WsClient 适配器实例。</source>
        <target state="needs-translation">创建一个 WsClient 适配器实例。</target>
      </trans-unit>
      <trans-unit id="43968">
        <source>client.bot</source>
        <target state="needs-translation">client.bot</target>
      </trans-unit>
      <trans-unit id="43970">
        <source>类型: `Bot`</source>
        <target state="needs-translation">类型: `Bot`</target>
      </trans-unit>
      <trans-unit id="43972">
        <source>当前适配器下的机器人实例。</source>
        <target state="needs-translation">当前适配器下的机器人实例。</target>
      </trans-unit>
      <trans-unit id="43974">
        <source>client.socket</source>
        <target state="needs-translation">client.socket</target>
      </trans-unit>
      <trans-unit id="43976">
        <source>类型: `WebSocket`</source>
        <target state="needs-translation">类型: `WebSocket`</target>
      </trans-unit>
      <trans-unit id="43978">
        <source>当前适配器下的 WebSocket 实例。</source>
        <target state="needs-translation">当前适配器下的 WebSocket 实例。</target>
      </trans-unit>
      <trans-unit id="43980">
        <source>client.prepare() &lt;badge&gt;抽象&lt;/badge&gt;</source>
        <target state="needs-translation">client.prepare() &lt;badge&gt;抽象&lt;/badge&gt;</target>
      </trans-unit>
      <trans-unit id="43982">
        <source>返回值: `WebSocket | Promise&lt;WebSocket&gt;`</source>
        <target state="needs-translation">返回值: `WebSocket | Promise&lt;WebSocket&gt;`</target>
      </trans-unit>
      <trans-unit id="43984">
        <source>根据机器人实例生成一个 WebSocket 对象。</source>
        <target state="needs-translation">根据机器人实例生成一个 WebSocket 对象。</target>
      </trans-unit>
      <trans-unit id="43986">
        <source>client.accept() &lt;badge&gt;抽象&lt;/badge&gt;</source>
        <target state="needs-translation">client.accept() &lt;badge&gt;抽象&lt;/badge&gt;</target>
      </trans-unit>
      <trans-unit id="43988">
        <source>WebSocket 连接成功建立后的回调函数。</source>
        <target state="needs-translation">WebSocket 连接成功建立后的回调函数。</target>
      </trans-unit>
      <trans-unit id="43990">
        <source>你需要实现这个方法，并在其中手动调用 `bot.resolve()` 回调函数表示已经连接成功。</source>
        <target state="needs-translation">你需要实现这个方法，并在其中手动调用 `bot.resolve()` 回调函数表示已经连接成功。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1420" original="/[koishijs.docs] main/zh-CN/api/core/app.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="43992">
        <source>应用 (App)</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">應用 (App)</target>
      </trans-unit>
      <trans-unit id="43994">
        <source>**应用 (App)** 是程序的入口。</source>
        <target state="needs-translation">**应用 (App)** 是程序的入口。</target>
      </trans-unit>
      <trans-unit id="43996">
        <source>可以通过 `new Context()` 构造或通过 `ctx.root` 访问。</source>
        <target state="needs-translation">可以通过 `new Context()` 构造或通过 `ctx.root` 访问。</target>
      </trans-unit>
      <trans-unit id="43998">
        <source>本节中介绍的配置项可用于传入构造函数，也可以在配置文件或控制台中进行修改。</source>
        <target state="needs-translation">本节中介绍的配置项可用于传入构造函数，也可以在配置文件或控制台中进行修改。</target>
      </trans-unit>
      <trans-unit id="44034">
        <source>基础设置</source>
        <target state="needs-translation">基础设置</target>
      </trans-unit>
      <trans-unit id="44036">
        <source>options.prefix</source>
        <target state="needs-translation">options.prefix</target>
      </trans-unit>
      <trans-unit id="44038">
        <source>类型：`Computed&lt;string | string[]&gt;`</source>
        <target state="needs-translation">类型：`Computed&lt;string | string[]&gt;`</target>
      </trans-unit>
      <trans-unit id="44040">
        <source>默认值：`['']`</source>
        <target state="needs-translation">默认值：`['']`</target>
      </trans-unit>
      <trans-unit id="44042">
        <source>指令前缀字符，可以是字符串或字符串数组。</source>
        <target state="needs-translation">指令前缀字符，可以是字符串或字符串数组。</target>
      </trans-unit>
      <trans-unit id="44044">
        <source>将用于指令前缀的匹配。</source>
        <target state="needs-translation">将用于指令前缀的匹配。</target>
      </trans-unit>
      <trans-unit id="44046">
        <source>例如，如果配置该选项为 `.`，则你可以通过 `.help` 来进行 help 指令的调用。</source>
        <target state="needs-translation">例如，如果配置该选项为 `.`，则你可以通过 `.help` 来进行 help 指令的调用。</target>
      </trans-unit>
      <trans-unit id="44048">
        <source>参见 [触发前缀](../../manual/usage/command.md#触发前缀) 一节。</source>
        <target state="needs-translation">参见 [触发前缀](../../manual/usage/command.md#触发前缀) 一节。</target>
      </trans-unit>
      <trans-unit id="44050">
        <source>options.nickname</source>
        <target state="needs-translation">options.nickname</target>
      </trans-unit>
      <trans-unit id="44052">
        <source>类型：`string | string[]`</source>
        <target state="needs-translation">类型：`string | string[]`</target>
      </trans-unit>
      <trans-unit id="44054">
        <source>默认值：`[]`</source>
        <target state="needs-translation">默认值：`[]`</target>
      </trans-unit>
      <trans-unit id="44056">
        <source>机器人的昵称，可以是字符串或字符串数组。</source>
        <target state="needs-translation">机器人的昵称，可以是字符串或字符串数组。</target>
      </trans-unit>
      <trans-unit id="44058">
        <source>将用于指令前缀的匹配。</source>
        <target state="needs-translation">将用于指令前缀的匹配。</target>
      </trans-unit>
      <trans-unit id="44060">
        <source>例如，如果配置该选项为 `'恋恋'`，则你可以通过 `恋恋，help` 来进行 help 指令的调用。</source>
        <target state="needs-translation">例如，如果配置该选项为 `'恋恋'`，则你可以通过 `恋恋，help` 来进行 help 指令的调用。</target>
      </trans-unit>
      <trans-unit id="44062">
        <source>参见 [触发前缀](../../manual/usage/command.md#触发前缀) 一节。</source>
        <target state="needs-translation">参见 [触发前缀](../../manual/usage/command.md#触发前缀) 一节。</target>
      </trans-unit>
      <trans-unit id="44064">
        <source>options.autoAssign</source>
        <target state="needs-translation">options.autoAssign</target>
      </trans-unit>
      <trans-unit id="44066">
        <source>类型：`Computed&lt;boolean&gt;`</source>
        <target state="needs-translation">类型：`Computed&lt;boolean&gt;`</target>
      </trans-unit>
      <trans-unit id="44068">
        <source>默认值：`true`</source>
        <target state="needs-translation">默认值：`true`</target>
      </trans-unit>
      <trans-unit id="44070">
        <source>当获取不到频道数据时，是否将接收到消息的机器人设置为该频道的受理人。</source>
        <target state="needs-translation">当获取不到频道数据时，是否将接收到消息的机器人设置为该频道的受理人。</target>
      </trans-unit>
      <trans-unit id="44072">
        <source>options.autoAuthorize</source>
        <target state="needs-translation">options.autoAuthorize</target>
      </trans-unit>
      <trans-unit id="44074">
        <source>类型：`Computed&lt;number&gt;`</source>
        <target state="needs-translation">类型：`Computed&lt;number&gt;`</target>
      </trans-unit>
      <trans-unit id="44076">
        <source>默认值：`1`</source>
        <target state="needs-translation">默认值：`1`</target>
      </trans-unit>
      <trans-unit id="44078">
        <source>当获取不到用户数据时默认使用的权限等级。</source>
        <target state="needs-translation">当获取不到用户数据时默认使用的权限等级。</target>
      </trans-unit>
      <trans-unit id="44080">
        <source>options.minSimilarity</source>
        <target state="needs-translation">options.minSimilarity</target>
      </trans-unit>
      <trans-unit id="44014">
        <source>类型：`number`</source>
        <target state="needs-translation">类型：`number`</target>
      </trans-unit>
      <trans-unit id="44084">
        <source>默认值：`1`</source>
        <target state="needs-translation">默认值：`1`</target>
      </trans-unit>
      <trans-unit id="44086">
        <source>用于模糊匹配的相似系数，应该是一个 0 到 1 之间的数值。</source>
        <target state="needs-translation">用于模糊匹配的相似系数，应该是一个 0 到 1 之间的数值。</target>
      </trans-unit>
      <trans-unit id="44088">
        <source>数值越高，模糊匹配越严格。</source>
        <target state="needs-translation">数值越高，模糊匹配越严格。</target>
      </trans-unit>
      <trans-unit id="44090">
        <source>设置为 1 可以完全禁用模糊匹配。</source>
        <target state="needs-translation">设置为 1 可以完全禁用模糊匹配。</target>
      </trans-unit>
      <trans-unit id="44092">
        <source>参见 [模糊匹配](../../manual/recipe/execution.md#模糊匹配) 一节。</source>
        <target state="needs-translation">参见 [模糊匹配](../../manual/recipe/execution.md#模糊匹配) 一节。</target>
      </trans-unit>
      <trans-unit id="44094">
        <source>options.delay</source>
        <target state="needs-translation">options.delay</target>
      </trans-unit>
      <trans-unit id="44096">
        <source>类型：`DelayOptions`</source>
        <target state="needs-translation">类型：`DelayOptions`</target>
      </trans-unit>
      <trans-unit id="44098">
        <source>// 所有配置项的单位均为毫秒
interface DelayOptions {
  // 调用 session.sendQueued() 时消息间发送的最小延迟，按前一条消息的字数计算，默认值为 0
  character?: number
  // 调用 session.sendQueued() 时消息间发送的最小延迟，按固定值计算，默认值为 100
  message?: number
  // 调用 session.cancelQueued() 时默认的延迟，默认值为 0
  cancel?: number
  // 调用 bot.broadcast() 时默认的延迟，默认值为 500
  broadcast?: number
  // 调用 session.prompt() 是默认的等待时间，默认值为 60000
  prompt?: number
}</source>
        <target state="needs-translation">// 所有配置项的单位均为毫秒
interface DelayOptions {
  // 调用 session.sendQueued() 时消息间发送的最小延迟，按前一条消息的字数计算，默认值为 0
  character?: number
  // 调用 session.sendQueued() 时消息间发送的最小延迟，按固定值计算，默认值为 100
  message?: number
  // 调用 session.cancelQueued() 时默认的延迟，默认值为 0
  cancel?: number
  // 调用 bot.broadcast() 时默认的延迟，默认值为 500
  broadcast?: number
  // 调用 session.prompt() 是默认的等待时间，默认值为 60000
  prompt?: number
}</target>
      </trans-unit>
      <trans-unit id="44100">
        <source>国际化设置</source>
        <target state="needs-translation">国际化设置</target>
      </trans-unit>
      <trans-unit id="44102">
        <source>options.i18n.locales {#i18n-locales}</source>
        <target state="needs-translation">options.i18n.locales {#i18n-locales}</target>
      </trans-unit>
      <trans-unit id="44104">
        <source>类型：`string[]`</source>
        <target state="needs-translation">类型：`string[]`</target>
      </trans-unit>
      <trans-unit id="44106">
        <source>可用的语言列表。</source>
        <target state="needs-translation">可用的语言列表。</target>
      </trans-unit>
      <trans-unit id="44108">
        <source>按照回退顺序排列。</source>
        <target state="needs-translation">按照回退顺序排列。</target>
      </trans-unit>
      <trans-unit id="44110">
        <source>options.i18n.output {#i18n-output}</source>
        <target state="needs-translation">options.i18n.output {#i18n-output}</target>
      </trans-unit>
      <trans-unit id="44004">
        <source>类型：`string`</source>
        <target state="needs-translation">类型：`string`</target>
      </trans-unit>
      <trans-unit id="44114">
        <source>输出语言偏好设置。</source>
        <target state="needs-translation">输出语言偏好设置。</target>
      </trans-unit>
      <trans-unit id="44116">
        <source>可选值包括：</source>
        <target state="needs-translation">可选值包括：</target>
      </trans-unit>
      <trans-unit id="44118">
        <source>`prefer-user`: 优先使用用户语言</source>
        <target state="needs-translation">`prefer-user`: 优先使用用户语言</target>
      </trans-unit>
      <trans-unit id="44120">
        <source>`prefer-channel`: 优先使用频道语言</source>
        <target state="needs-translation">`prefer-channel`: 优先使用频道语言</target>
      </trans-unit>
      <trans-unit id="44130">
        <source>配置文件选项</source>
        <target state="needs-translation">配置文件选项</target>
      </trans-unit>
      <trans-unit id="44132">
        <source>下面的配置项来自 Koishi 的命令行工具，仅可在配置文件中编辑，不支持在控制台中修改。</source>
        <target state="needs-translation">下面的配置项来自 Koishi 的命令行工具，仅可在配置文件中编辑，不支持在控制台中修改。</target>
      </trans-unit>
      <trans-unit id="44134">
        <source>options.plugins</source>
        <target state="needs-translation">options.plugins</target>
      </trans-unit>
      <trans-unit id="44136">
        <source>类型：`Record&lt;string, any&gt;`</source>
        <target state="needs-translation">类型：`Record&lt;string, any&gt;`</target>
      </trans-unit>
      <trans-unit id="44138">
        <source>要安装的插件列表。</source>
        <target state="needs-translation">要安装的插件列表。</target>
      </trans-unit>
      <trans-unit id="44140">
        <source>以传入的对象的键为插件名，值为插件的选项进行安装。</source>
        <target state="needs-translation">以传入的对象的键为插件名，值为插件的选项进行安装。</target>
      </trans-unit>
      <trans-unit id="44142">
        <source>参见：</source>
        <target state="needs-translation">参见：</target>
      </trans-unit>
      <trans-unit id="44144">
        <source>[开发 &gt; 开发起步 &gt; 配置文件](../../guide/develop/config.md)</source>
        <target state="needs-translation">[开发 &gt; 开发起步 &gt; 配置文件](../../guide/develop/config.md)</target>
      </trans-unit>
      <trans-unit id="44146">
        <source>[开发 &gt; 模块化 &gt; 认识插件](../../guide/plugin/index.md)</source>
        <target state="needs-translation">[开发 &gt; 模块化 &gt; 认识插件](../../guide/plugin/index.md)</target>
      </trans-unit>
      <trans-unit id="44148">
        <source>options.logger</source>
        <target state="needs-translation">options.logger</target>
      </trans-unit>
      <trans-unit id="44150">
        <source>类型：`Logger.Config`</source>
        <target state="needs-translation">类型：`Logger.Config`</target>
      </trans-unit>
      <trans-unit id="44152">
        <source>参见 [输出日志](../utils/logger.md) 一节。</source>
        <target state="needs-translation">参见 [输出日志](../utils/logger.md) 一节。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1422" original="/[koishijs.docs] main/zh-CN/api/core/bot.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="44154">
        <source>机器人 (Bot)</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">機器人 (Bot)</target>
      </trans-unit>
      <trans-unit id="44156">
        <source>参见：[开发 &gt; 跨平台 &gt; 实现机器人](../../guide/adapter/bot.md)</source>
        <target state="needs-translation">参见：[开发 &gt; 跨平台 &gt; 实现机器人](../../guide/adapter/bot.md)</target>
      </trans-unit>
      <trans-unit id="44158">
        <source>**机器人 (Bot)** 是适配器的核心，它将不同平台的 API 封装成统一的格式供 Koishi 使用。</source>
        <target state="needs-translation">**机器人 (Bot)** 是适配器的核心，它将不同平台的 API 封装成统一的格式供 Koishi 使用。</target>
      </trans-unit>
      <trans-unit id="44160">
        <source>而不同的适配器也可以自行扩展 Bot 实例上的属性和方法。</source>
        <target state="needs-translation">而不同的适配器也可以自行扩展 Bot 实例上的属性和方法。</target>
      </trans-unit>
      <trans-unit id="44162">
        <source>实例属性</source>
        <target state="needs-translation">实例属性</target>
      </trans-unit>
      <trans-unit id="44164">
        <source>bot.adapter</source>
        <target state="needs-translation">bot.adapter</target>
      </trans-unit>
      <trans-unit id="44166">
        <source>类型: [`Adapter`](./adapter.md)</source>
        <target state="needs-translation">类型: [`Adapter`](./adapter.md)</target>
      </trans-unit>
      <trans-unit id="44168">
        <source>当前 `Bot` 所在的 [Adapter](./adapter.md) 实例。</source>
        <target state="needs-translation">当前 `Bot` 所在的 [Adapter](./adapter.md) 实例。</target>
      </trans-unit>
      <trans-unit id="44170">
        <source>bot.config</source>
        <target state="needs-translation">bot.config</target>
      </trans-unit>
      <trans-unit id="44172">
        <source>类型: `object`</source>
        <target state="needs-translation">类型: `object`</target>
      </trans-unit>
      <trans-unit id="44174">
        <source>构造 `Bot` 实例时所使用的配置项。</source>
        <target state="needs-translation">构造 `Bot` 实例时所使用的配置项。</target>
      </trans-unit>
      <trans-unit id="44176">
        <source>bot.ctx</source>
        <target state="needs-translation">bot.ctx</target>
      </trans-unit>
      <trans-unit id="44178">
        <source>类型: [`Context`](./context.md)</source>
        <target state="needs-translation">类型: [`Context`](./context.md)</target>
      </trans-unit>
      <trans-unit id="44180">
        <source>当前 `Bot` 所在的 [Context](./context.md) 实例。</source>
        <target state="needs-translation">当前 `Bot` 所在的 [Context](./context.md) 实例。</target>
      </trans-unit>
      <trans-unit id="44182">
        <source>bot.internal</source>
        <target state="needs-translation">bot.internal</target>
      </trans-unit>
      <trans-unit id="44184">
        <source>类型: `object`</source>
        <target state="needs-translation">类型: `object`</target>
      </trans-unit>
      <trans-unit id="44186">
        <source>当前机器人的 [内部接口](../../guide/adapter/bot.md#实现内部接口)。</source>
        <target state="needs-translation">当前机器人的 [内部接口](../../guide/adapter/bot.md#实现内部接口)。</target>
      </trans-unit>
      <trans-unit id="44188">
        <source>bot.platform</source>
        <target state="needs-translation">bot.platform</target>
      </trans-unit>
      <trans-unit id="44190">
        <source>类型: `string`</source>
        <target state="needs-translation">类型: `string`</target>
      </trans-unit>
      <trans-unit id="63562">
        <source>当前 `Bot` 的 [平台名称](../glossary.md#platform)。</source>
        <target state="needs-translation">当前 `Bot` 的 [平台名称](../glossary.md#platform)。</target>
      </trans-unit>
      <trans-unit id="44194">
        <source>bot.selfId</source>
        <target state="needs-translation">bot.selfId</target>
      </trans-unit>
      <trans-unit id="44196">
        <source>类型: `string`</source>
        <target state="needs-translation">类型: `string`</target>
      </trans-unit>
      <trans-unit id="44198">
        <source>当前 `Bot` 的平台账号。</source>
        <target state="needs-translation">当前 `Bot` 的平台账号。</target>
      </trans-unit>
      <trans-unit id="44200">
        <source>bot.status</source>
        <target state="needs-translation">bot.status</target>
      </trans-unit>
      <trans-unit id="44202">
        <source>类型: [`Status`](../resources/login.md)</source>
        <target state="needs-translation">类型: [`Status`](../resources/login.md)</target>
      </trans-unit>
      <trans-unit id="44204">
        <source>当前 `Bot` 的登录状态。</source>
        <target state="needs-translation">当前 `Bot` 的登录状态。</target>
      </trans-unit>
      <trans-unit id="44206">
        <source>bot.user</source>
        <target state="needs-translation">bot.user</target>
      </trans-unit>
      <trans-unit id="44208">
        <source>类型: [`User`](../resources/user.md)</source>
        <target state="needs-translation">类型: [`User`](../resources/user.md)</target>
      </trans-unit>
      <trans-unit id="44210">
        <source>当前 `Bot` 的用户信息。</source>
        <target state="needs-translation">当前 `Bot` 的用户信息。</target>
      </trans-unit>
      <trans-unit id="44212">
        <source>适配器相关</source>
        <target state="needs-translation">适配器相关</target>
      </trans-unit>
      <trans-unit id="44214">
        <source>bot.start()</source>
        <target state="needs-translation">bot.start()</target>
      </trans-unit>
      <trans-unit id="44216">
        <source>返回值: `Promise&lt;void&gt;`</source>
        <target state="needs-translation">返回值: `Promise&lt;void&gt;`</target>
      </trans-unit>
      <trans-unit id="44218">
        <source>启动机器人。</source>
        <target state="needs-translation">启动机器人。</target>
      </trans-unit>
      <trans-unit id="44220">
        <source>这个方法会在插件被加载时自动被调用，通常你不需要手动调用它。</source>
        <target state="needs-translation">这个方法会在插件被加载时自动被调用，通常你不需要手动调用它。</target>
      </trans-unit>
      <trans-unit id="44222">
        <source>bot.stop()</source>
        <target state="needs-translation">bot.stop()</target>
      </trans-unit>
      <trans-unit id="44224">
        <source>返回值: `Promise&lt;void&gt;`</source>
        <target state="needs-translation">返回值: `Promise&lt;void&gt;`</target>
      </trans-unit>
      <trans-unit id="44226">
        <source>停止机器人的运行，但不移除该实例。</source>
        <target state="needs-translation">停止机器人的运行，但不移除该实例。</target>
      </trans-unit>
      <trans-unit id="44228">
        <source>你可以后续通过 `bot.start()` 重新启动机器人。</source>
        <target state="needs-translation">你可以后续通过 `bot.start()` 重新启动机器人。</target>
      </trans-unit>
      <trans-unit id="44230">
        <source>这个方法会在插件被卸载时自动被调用，通常你不需要手动调用它。</source>
        <target state="needs-translation">这个方法会在插件被卸载时自动被调用，通常你不需要手动调用它。</target>
      </trans-unit>
      <trans-unit id="44232">
        <source>bot.dispatch(session)</source>
        <target state="needs-translation">bot.dispatch(session)</target>
      </trans-unit>
      <trans-unit id="44234">
        <source>**session:** [`Session`](./session.md) 会话实例</source>
        <target state="needs-translation">**session:** [`Session`](./session.md) 会话实例</target>
      </trans-unit>
      <trans-unit id="44236">
        <source>触发一个会话事件。</source>
        <target state="needs-translation">触发一个会话事件。</target>
      </trans-unit>
      <trans-unit id="44238">
        <source>bot.session(event?)</source>
        <target state="needs-translation">bot.session(event?)</target>
      </trans-unit>
      <trans-unit id="44240">
        <source>**event:** [`Event`](./session.md#session-event) 会话数据</source>
        <target state="needs-translation">**event:** [`Event`](./session.md#session-event) 会话数据</target>
      </trans-unit>
      <trans-unit id="44242">
        <source>返回值: [`Session`](./session.md)</source>
        <target state="needs-translation">返回值: [`Session`](./session.md)</target>
      </trans-unit>
      <trans-unit id="44244">
        <source>创建一个新的会话实例。</source>
        <target state="needs-translation">创建一个新的会话实例。</target>
      </trans-unit>
      <trans-unit id="44246">
        <source>bot.online()</source>
        <target state="needs-translation">bot.online()</target>
      </trans-unit>
      <trans-unit id="44248">
        <source>修改机器人的状态为在线。</source>
        <target state="needs-translation">修改机器人的状态为在线。</target>
      </trans-unit>
      <trans-unit id="44250">
        <source>bot.offline(error?)</source>
        <target state="needs-translation">bot.offline(error?)</target>
      </trans-unit>
      <trans-unit id="44252">
        <source>**error:** `Error` 错误信息</source>
        <target state="needs-translation">**error:** `Error` 错误信息</target>
      </trans-unit>
      <trans-unit id="44254">
        <source>修改机器人的状态为离线，并记录错误信息。</source>
        <target state="needs-translation">修改机器人的状态为离线，并记录错误信息。</target>
      </trans-unit>
      <trans-unit id="44256">
        <source>通用 API</source>
        <target state="needs-translation">通用 API</target>
      </trans-unit>
      <trans-unit id="44258">
        <source>通用 API 由适配器实现。</source>
        <target state="needs-translation">通用 API 由适配器实现。</target>
      </trans-unit>
      <trans-unit id="44260">
        <source>它们会在相应的资源页面中介绍。</source>
        <target state="needs-translation">它们会在相应的资源页面中介绍。</target>
      </trans-unit>
      <trans-unit id="44262" translate="no">
        <source>[`bot.broadcast()`](../resources/message.md#bot-broadcast)</source>
        <target>[`bot.broadcast()`](../resources/message.md#bot-broadcast)</target>
      </trans-unit>
      <trans-unit id="44264" translate="no">
        <source>[`bot.clearReaction()`](../resources/reaction.md#bot-clearreaction)</source>
        <target>[`bot.clearReaction()`](../resources/reaction.md#bot-clearreaction)</target>
      </trans-unit>
      <trans-unit id="44266" translate="no">
        <source>[`bot.createChannel()`](../resources/channel.md#bot-createchannel)</source>
        <target>[`bot.createChannel()`](../resources/channel.md#bot-createchannel)</target>
      </trans-unit>
      <trans-unit id="44268" translate="no">
        <source>[`bot.createDirectChannel()`](../resources/channel.md#bot-createdirectchannel)</source>
        <target>[`bot.createDirectChannel()`](../resources/channel.md#bot-createdirectchannel)</target>
      </trans-unit>
      <trans-unit id="44270" translate="no">
        <source>[`bot.createGuildRole()`](../resources/role.md#bot-createguildrole)</source>
        <target>[`bot.createGuildRole()`](../resources/role.md#bot-createguildrole)</target>
      </trans-unit>
      <trans-unit id="44272" translate="no">
        <source>[`bot.createReaction()`](../resources/reaction.md#bot-createreaction)</source>
        <target>[`bot.createReaction()`](../resources/reaction.md#bot-createreaction)</target>
      </trans-unit>
      <trans-unit id="44274" translate="no">
        <source>[`bot.deleteChannel()`](../resources/role.md#bot-deletechannel)</source>
        <target>[`bot.deleteChannel()`](../resources/role.md#bot-deletechannel)</target>
      </trans-unit>
      <trans-unit id="44276" translate="no">
        <source>[`bot.deleteGuildRole()`](../resources/role.md#bot-deleteguildrole)</source>
        <target>[`bot.deleteGuildRole()`](../resources/role.md#bot-deleteguildrole)</target>
      </trans-unit>
      <trans-unit id="44278" translate="no">
        <source>[`bot.deleteReaction()`](../resources/reaction.md#bot-deletereaction)</source>
        <target>[`bot.deleteReaction()`](../resources/reaction.md#bot-deletereaction)</target>
      </trans-unit>
      <trans-unit id="44280" translate="no">
        <source>[`bot.deleteMessage()`](../resources/message.md#bot-deletemessage)</source>
        <target>[`bot.deleteMessage()`](../resources/message.md#bot-deletemessage)</target>
      </trans-unit>
      <trans-unit id="44282" translate="no">
        <source>[`bot.editMessage()`](../resources/message.md#bot-editmessage)</source>
        <target>[`bot.editMessage()`](../resources/message.md#bot-editmessage)</target>
      </trans-unit>
      <trans-unit id="44284" translate="no">
        <source>[`bot.getChannel()`](../resources/channel.md#bot-getchannel)</source>
        <target>[`bot.getChannel()`](../resources/channel.md#bot-getchannel)</target>
      </trans-unit>
      <trans-unit id="44286" translate="no">
        <source>[`bot.getChannelIter()`](../resources/channel.md#bot-getchanneliter)</source>
        <target>[`bot.getChannelIter()`](../resources/channel.md#bot-getchanneliter)</target>
      </trans-unit>
      <trans-unit id="44288" translate="no">
        <source>[`bot.getChannelList()`](../resources/channel.md#bot-getchannellist)</source>
        <target>[`bot.getChannelList()`](../resources/channel.md#bot-getchannellist)</target>
      </trans-unit>
      <trans-unit id="44290" translate="no">
        <source>[`bot.getFriendIter()`](../resources/user.md#bot-getfrienditer)</source>
        <target>[`bot.getFriendIter()`](../resources/user.md#bot-getfrienditer)</target>
      </trans-unit>
      <trans-unit id="44292" translate="no">
        <source>[`bot.getFriendList()`](../resources/user.md#bot-getfriendlist)</source>
        <target>[`bot.getFriendList()`](../resources/user.md#bot-getfriendlist)</target>
      </trans-unit>
      <trans-unit id="44294" translate="no">
        <source>[`bot.getGuild()`](../resources/guild.md#bot-getguild)</source>
        <target>[`bot.getGuild()`](../resources/guild.md#bot-getguild)</target>
      </trans-unit>
      <trans-unit id="44296" translate="no">
        <source>[`bot.getGuildIter()`](../resources/guild.md#bot-getguilditer)</source>
        <target>[`bot.getGuildIter()`](../resources/guild.md#bot-getguilditer)</target>
      </trans-unit>
      <trans-unit id="44298" translate="no">
        <source>[`bot.getGuildList()`](../resources/guild.md#bot-getguildlist)</source>
        <target>[`bot.getGuildList()`](../resources/guild.md#bot-getguildlist)</target>
      </trans-unit>
      <trans-unit id="44300" translate="no">
        <source>[`bot.getGuildMember()`](../resources/member.md#bot-getguildmember)</source>
        <target>[`bot.getGuildMember()`](../resources/member.md#bot-getguildmember)</target>
      </trans-unit>
      <trans-unit id="44302" translate="no">
        <source>[`bot.getGuildMemberIter()`](../resources/member.md#bot-getguildmemberiter)</source>
        <target>[`bot.getGuildMemberIter()`](../resources/member.md#bot-getguildmemberiter)</target>
      </trans-unit>
      <trans-unit id="44304" translate="no">
        <source>[`bot.getGuildMemberList()`](../resources/member.md#bot-getguildmemberlist)</source>
        <target>[`bot.getGuildMemberList()`](../resources/member.md#bot-getguildmemberlist)</target>
      </trans-unit>
      <trans-unit id="44306" translate="no">
        <source>[`bot.getGuildRoleIter()`](../resources/role.md#bot-getguildroleiter)</source>
        <target>[`bot.getGuildRoleIter()`](../resources/role.md#bot-getguildroleiter)</target>
      </trans-unit>
      <trans-unit id="44308" translate="no">
        <source>[`bot.getGuildRoleList()`](../resources/role.md#bot-getguildrolelist)</source>
        <target>[`bot.getGuildRoleList()`](../resources/role.md#bot-getguildrolelist)</target>
      </trans-unit>
      <trans-unit id="44310" translate="no">
        <source>[`bot.getLogin()`](../resources/login.md#bot-getlogin)</source>
        <target>[`bot.getLogin()`](../resources/login.md#bot-getlogin)</target>
      </trans-unit>
      <trans-unit id="44312" translate="no">
        <source>[`bot.getMessage()`](../resources/message.md#bot-getmessage)</source>
        <target>[`bot.getMessage()`](../resources/message.md#bot-getmessage)</target>
      </trans-unit>
      <trans-unit id="44314" translate="no">
        <source>[`bot.getMessageIter()`](../resources/message.md#bot-getmessageiter)</source>
        <target>[`bot.getMessageIter()`](../resources/message.md#bot-getmessageiter)</target>
      </trans-unit>
      <trans-unit id="44316" translate="no">
        <source>[`bot.getMessageList()`](../resources/message.md#bot-getmessagelist)</source>
        <target>[`bot.getMessageList()`](../resources/message.md#bot-getmessagelist)</target>
      </trans-unit>
      <trans-unit id="44318" translate="no">
        <source>[`bot.getReactionIter()`](../resources/reaction.md#bot-getreactioniter)</source>
        <target>[`bot.getReactionIter()`](../resources/reaction.md#bot-getreactioniter)</target>
      </trans-unit>
      <trans-unit id="44320" translate="no">
        <source>[`bot.getReactionList()`](../resources/reaction.md#bot-getreactionlist)</source>
        <target>[`bot.getReactionList()`](../resources/reaction.md#bot-getreactionlist)</target>
      </trans-unit>
      <trans-unit id="44322" translate="no">
        <source>[`bot.getUser()`](../resources/user.md#bot-getuser)</source>
        <target>[`bot.getUser()`](../resources/user.md#bot-getuser)</target>
      </trans-unit>
      <trans-unit id="44324" translate="no">
        <source>[`bot.handleFriendRequest()`](../resources/user.md#bot-handlefriendrequest)</source>
        <target>[`bot.handleFriendRequest()`](../resources/user.md#bot-handlefriendrequest)</target>
      </trans-unit>
      <trans-unit id="44326" translate="no">
        <source>[`bot.handleGuildMemberRequest()`](../resources/member.md#bot-handleguildmemberrequest)</source>
        <target>[`bot.handleGuildMemberRequest()`](../resources/member.md#bot-handleguildmemberrequest)</target>
      </trans-unit>
      <trans-unit id="44328" translate="no">
        <source>[`bot.handleGuildRequest()`](../resources/guild.md#bot-handleguildrequest)</source>
        <target>[`bot.handleGuildRequest()`](../resources/guild.md#bot-handleguildrequest)</target>
      </trans-unit>
      <trans-unit id="44330" translate="no">
        <source>[`bot.kickGuildMember()`](../resources/member.md#bot-kickguildmember)</source>
        <target>[`bot.kickGuildMember()`](../resources/member.md#bot-kickguildmember)</target>
      </trans-unit>
      <trans-unit id="44332" translate="no">
        <source>[`bot.muteGuildMember()`](../resources/member.md#bot-muteguildmember)</source>
        <target>[`bot.muteGuildMember()`](../resources/member.md#bot-muteguildmember)</target>
      </trans-unit>
      <trans-unit id="44334" translate="no">
        <source>[`bot.sendMessage()`](../resources/message.md#bot-sendmessage)</source>
        <target>[`bot.sendMessage()`](../resources/message.md#bot-sendmessage)</target>
      </trans-unit>
      <trans-unit id="44336" translate="no">
        <source>[`bot.sendPrivateMessage()`](../resources/message.md#bot-sendprivatemessage)</source>
        <target>[`bot.sendPrivateMessage()`](../resources/message.md#bot-sendprivatemessage)</target>
      </trans-unit>
      <trans-unit id="44338" translate="no">
        <source>[`bot.setGuildMemberRole()`](../resources/role.md#bot-setguildmemberrole)</source>
        <target>[`bot.setGuildMemberRole()`](../resources/role.md#bot-setguildmemberrole)</target>
      </trans-unit>
      <trans-unit id="44340" translate="no">
        <source>[`bot.unsetGuildMemberRole()`](../resources/role.md#bot-unsetguildmemberrole)</source>
        <target>[`bot.unsetGuildMemberRole()`](../resources/role.md#bot-unsetguildmemberrole)</target>
      </trans-unit>
      <trans-unit id="44342" translate="no">
        <source>[`bot.updateChannel()`](../resources/role.md#bot-updatechannel)</source>
        <target>[`bot.updateChannel()`](../resources/role.md#bot-updatechannel)</target>
      </trans-unit>
      <trans-unit id="44344" translate="no">
        <source>[`bot.updateGuildRole()`](../resources/role.md#bot-updateguildrole)</source>
        <target>[`bot.updateGuildRole()`](../resources/role.md#bot-updateguildrole)</target>
      </trans-unit>
    </body>
  </file>
  <file id="1424" original="/[koishijs.docs] main/zh-CN/api/core/command.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="44346">
        <source>指令 (Command)</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">指令 (Command)</target>
      </trans-unit>
      <trans-unit id="44348">
        <source>参见：[开发 &gt; 交互基础 &gt; 指令开发](../../guide/basic/command.md)</source>
        <target state="needs-translation">参见：[开发 &gt; 交互基础 &gt; 指令开发](../../guide/basic/command.md)</target>
      </trans-unit>
      <trans-unit id="44350">
        <source>指令系统是 Koishi 的核心功能之一。</source>
        <target state="needs-translation">指令系统是 Koishi 的核心功能之一。</target>
      </trans-unit>
      <trans-unit id="44352">
        <source>通过 `ctx.command()` 方法获得的是指令的实例，它含有下面的方法：</source>
        <target state="needs-translation">通过 `ctx.command()` 方法获得的是指令的实例，它含有下面的方法：</target>
      </trans-unit>
      <trans-unit id="44354">
        <source>Argv 对象</source>
        <target state="needs-translation">Argv 对象</target>
      </trans-unit>
      <trans-unit id="44356">
        <source>Argv 对象会作为 `cmd.action()`, `cmd.userFields()` 等方法的回调函数中的第一个参数。</source>
        <target state="needs-translation">Argv 对象会作为 `cmd.action()`, `cmd.userFields()` 等方法的回调函数中的第一个参数。</target>
      </trans-unit>
      <trans-unit id="44358">
        <source>它具有以下的属性：</source>
        <target state="needs-translation">它具有以下的属性：</target>
      </trans-unit>
      <trans-unit id="44360">
        <source>**args:** `any[]` 参数列表</source>
        <target state="needs-translation">**args:** `any[]` 参数列表</target>
      </trans-unit>
      <trans-unit id="44362">
        <source>**options:** `{}` 选项列表</source>
        <target state="needs-translation">**options:** `{}` 选项列表</target>
      </trans-unit>
      <trans-unit id="44364">
        <source>**next:** `Next` 中间件的 next 回调函数</source>
        <target state="needs-translation">**next:** `Next` 中间件的 next 回调函数</target>
      </trans-unit>
      <trans-unit id="44366">
        <source>**session:** [`Session`](./session.md) 所在的会话对象</source>
        <target state="needs-translation">**session:** [`Session`](./session.md) 所在的会话对象</target>
      </trans-unit>
      <trans-unit id="44368">
        <source>实例方法</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">實體方法</target>
      </trans-unit>
      <trans-unit id="44370">
        <source>cmd.option(name, desc?, config?)</source>
        <target state="needs-translation">cmd.option(name, desc?, config?)</target>
      </trans-unit>
      <trans-unit id="44372">
        <source>**name:** `string` 选项的名字</source>
        <target state="needs-translation">**name:** `string` 选项的名字</target>
      </trans-unit>
      <trans-unit id="44374">
        <source>**desc:** `string` 选项的描述</source>
        <target state="needs-translation">**desc:** `string` 选项的描述</target>
      </trans-unit>
      <trans-unit id="44376">
        <source>**config:** `OptionConfig`</source>
        <target state="needs-translation">**config:** `OptionConfig`</target>
      </trans-unit>
      <trans-unit id="44378">
        <source>**config.fallback:** `any` 选项的[默认值](../../guide/basic/command.md#选项的默认值)</source>
        <target state="needs-translation">**config.fallback:** `any` 选项的[默认值](../../guide/basic/command.md#选项的默认值)</target>
      </trans-unit>
      <trans-unit id="44380">
        <source>**config.value:** `any` 选项的[重载值](../../guide/basic/command.md#选项的重载)</source>
        <target state="needs-translation">**config.value:** `any` 选项的[重载值](../../guide/basic/command.md#选项的重载)</target>
      </trans-unit>
      <trans-unit id="44382">
        <source>**config.type:** `DomainType` 选项的[类型定义](../../guide/basic/command.md#选项的临时类型)</source>
        <target state="needs-translation">**config.type:** `DomainType` 选项的[类型定义](../../guide/basic/command.md#选项的临时类型)</target>
      </trans-unit>
      <trans-unit id="44384">
        <source>**config.hidden:** `boolean` 是否[隐藏选项](../../guide/basic/command.md#隐藏指令和选项)</source>
        <target state="needs-translation">**config.hidden:** `boolean` 是否[隐藏选项](../../guide/basic/command.md#隐藏指令和选项)</target>
      </trans-unit>
      <trans-unit id="44386">
        <source>**config.notUsage:** `boolean` 是否[计入调用](../../manual/usage/command.md#速率限制)</source>
        <target state="needs-translation">**config.notUsage:** `boolean` 是否[计入调用](../../manual/usage/command.md#速率限制)</target>
      </trans-unit>
      <trans-unit id="44388">
        <source>**config.authority:** `number` 选项的[权限等级](../../manual/usage/command.md#权限管理)</source>
        <target state="needs-translation">**config.authority:** `number` 选项的[权限等级](../../manual/usage/command.md#权限管理)</target>
      </trans-unit>
      <trans-unit id="44390">
        <source>返回值: `this`</source>
        <target state="needs-translation">返回值: `this`</target>
      </trans-unit>
      <trans-unit id="44392">
        <source>为指令添加一个选项。</source>
        <target state="needs-translation">为指令添加一个选项。</target>
      </trans-unit>
      <trans-unit id="44394">
        <source>type DomainType = string | RegExp | ((source: string) =&gt; any)</source>
        <target state="needs-translation">type DomainType = string | RegExp | ((source: string) =&gt; any)</target>
      </trans-unit>
      <trans-unit id="44396">
        <source>cmd.removeOption(name)</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">cmd.removeOption(name)</target>
      </trans-unit>
      <trans-unit id="44398">
        <source>**name:** `string` 指令的名称</source>
        <target state="needs-translation">**name:** `string` 指令的名称</target>
      </trans-unit>
      <trans-unit id="44400">
        <source>返回值: `this`</source>
        <target state="needs-translation">返回值: `this`</target>
      </trans-unit>
      <trans-unit id="44402">
        <source>删除一个选项。</source>
        <target state="needs-translation">删除一个选项。</target>
      </trans-unit>
      <trans-unit id="44404">
        <source>注意：如果你为一个选项注册了多个别名，则删除任何一个别名都相当于删除整个选项。</source>
        <target state="needs-translation">注意：如果你为一个选项注册了多个别名，则删除任何一个别名都相当于删除整个选项。</target>
      </trans-unit>
      <trans-unit id="44406">
        <source>cmd.usage(text)</source>
        <target state="needs-translation">cmd.usage(text)</target>
      </trans-unit>
      <trans-unit id="44408">
        <source>**text:** `string` 使用方法说明</source>
        <target state="needs-translation">**text:** `string` 使用方法说明</target>
      </trans-unit>
      <trans-unit id="44410">
        <source>返回值: `this`</source>
        <target state="needs-translation">返回值: `this`</target>
      </trans-unit>
      <trans-unit id="44412">
        <source>为指令添加使用方法。</source>
        <target state="needs-translation">为指令添加使用方法。</target>
      </trans-unit>
      <trans-unit id="44414">
        <source>多次调用此方法只会保留最后一次的定义。</source>
        <target state="needs-translation">多次调用此方法只会保留最后一次的定义。</target>
      </trans-unit>
      <trans-unit id="44416">
        <source>cmd.example(example)</source>
        <target state="needs-translation">cmd.example(example)</target>
      </trans-unit>
      <trans-unit id="44418">
        <source>**example:** `text` 使用示例</source>
        <target state="needs-translation">**example:** `text` 使用示例</target>
      </trans-unit>
      <trans-unit id="44420">
        <source>返回值: `this`</source>
        <target state="needs-translation">返回值: `this`</target>
      </trans-unit>
      <trans-unit id="44422">
        <source>为指令添加使用示例。</source>
        <target state="needs-translation">为指令添加使用示例。</target>
      </trans-unit>
      <trans-unit id="44424">
        <source>多次调用此方法会一并保留并显示在帮助的最后面。</source>
        <target state="needs-translation">多次调用此方法会一并保留并显示在帮助的最后面。</target>
      </trans-unit>
      <trans-unit id="44426">
        <source>cmd.action(action, prepend?)</source>
        <target state="needs-translation">cmd.action(action, prepend?)</target>
      </trans-unit>
      <trans-unit id="44428">
        <source>**action:** `CommandAction` 执行函数</source>
        <target state="needs-translation">**action:** `CommandAction` 执行函数</target>
      </trans-unit>
      <trans-unit id="44430">
        <source>**prepend:** `boolean` 是否前置</source>
        <target state="needs-translation">**prepend:** `boolean` 是否前置</target>
      </trans-unit>
      <trans-unit id="44432">
        <source>返回值: `this`</source>
        <target state="needs-translation">返回值: `this`</target>
      </trans-unit>
      <trans-unit id="44434">
        <source>为指令添加执行函数。</source>
        <target state="needs-translation">为指令添加执行函数。</target>
      </trans-unit>
      <trans-unit id="44436">
        <source>type Awaitable&lt;T&gt; = [T] extends [Promise&lt;unknown&gt;] ? T : T | Promise&lt;T&gt;
type CommandAction = (argv: Argv, ...args: any[]) =&gt; Awaitable&lt;string | void&gt;</source>
        <target state="needs-translation">type Awaitable&lt;T&gt; = [T] extends [Promise&lt;unknown&gt;] ? T : T | Promise&lt;T&gt;
type CommandAction = (argv: Argv, ...args: any[]) =&gt; Awaitable&lt;string | void&gt;</target>
      </trans-unit>
      <trans-unit id="44438">
        <source>cmd.before(action, append?)</source>
        <target state="needs-translation">cmd.before(action, append?)</target>
      </trans-unit>
      <trans-unit id="44440">
        <source>**action:** `CommandAction` 执行函数</source>
        <target state="needs-translation">**action:** `CommandAction` 执行函数</target>
      </trans-unit>
      <trans-unit id="44442">
        <source>**append:** `boolean` 是否后置</source>
        <target state="needs-translation">**append:** `boolean` 是否后置</target>
      </trans-unit>
      <trans-unit id="44444">
        <source>返回值: `this`</source>
        <target state="needs-translation">返回值: `this`</target>
      </trans-unit>
      <trans-unit id="44446">
        <source>为指令添加检测函数。</source>
        <target state="needs-translation">为指令添加检测函数。</target>
      </trans-unit>
      <trans-unit id="44448">
        <source>cmd.userFields(fields)</source>
        <target state="needs-translation">cmd.userFields(fields)</target>
      </trans-unit>
      <trans-unit id="44450">
        <source>**fields:** `FieldCollector&lt;UserField&gt;` 要请求的用户字段</source>
        <target state="needs-translation">**fields:** `FieldCollector&lt;UserField&gt;` 要请求的用户字段</target>
      </trans-unit>
      <trans-unit id="44452">
        <source>返回值: `this`</source>
        <target state="needs-translation">返回值: `this`</target>
      </trans-unit>
      <trans-unit id="44454">
        <source>如果指令需要用到用户数据，你可以提前声明，这样有助于合并多次请求，从而提高性能。</source>
        <target state="needs-translation">如果指令需要用到用户数据，你可以提前声明，这样有助于合并多次请求，从而提高性能。</target>
      </trans-unit>
      <trans-unit id="44456">
        <source>参见[按需加载](../../guide/database/builtin.md#声明所需字段)章节。</source>
        <target state="needs-translation">参见[按需加载](../../guide/database/builtin.md#声明所需字段)章节。</target>
      </trans-unit>
      <trans-unit id="44458">
        <source>type FieldCollector&lt;K extends string&gt; =
  | Iterable&lt;K&gt;
  | ((argv: Argv, fields: Set&lt;K&gt;) =&gt; void)</source>
        <target state="needs-translation">type FieldCollector&lt;K extends string&gt; =
  | Iterable&lt;K&gt;
  | ((argv: Argv, fields: Set&lt;K&gt;) =&gt; void)</target>
      </trans-unit>
      <trans-unit id="44460">
        <source>cmd.channelFields(fields)</source>
        <target state="needs-translation">cmd.channelFields(fields)</target>
      </trans-unit>
      <trans-unit id="44462">
        <source>**fields:** `FieldCollector&lt;ChannelField&gt;` 要请求的频道字段</source>
        <target state="needs-translation">**fields:** `FieldCollector&lt;ChannelField&gt;` 要请求的频道字段</target>
      </trans-unit>
      <trans-unit id="44464">
        <source>返回值: `this`</source>
        <target state="needs-translation">返回值: `this`</target>
      </trans-unit>
      <trans-unit id="44466">
        <source>如果指令需要用到频道数据，你可以提前声明，这样有助于合并多次请求，从而提高性能。</source>
        <target state="needs-translation">如果指令需要用到频道数据，你可以提前声明，这样有助于合并多次请求，从而提高性能。</target>
      </trans-unit>
      <trans-unit id="44468">
        <source>参见[按需加载](../../guide/database/builtin.md#声明所需字段)章节。</source>
        <target state="needs-translation">参见[按需加载](../../guide/database/builtin.md#声明所需字段)章节。</target>
      </trans-unit>
      <trans-unit id="64000">
        <source>cmd.alias(name, config?)</source>
        <target state="needs-translation">cmd.alias(name, config?)</target>
      </trans-unit>
      <trans-unit id="64002">
        <source>**name:** `string` 要设置的别名</source>
        <target state="needs-translation">**name:** `string` 要设置的别名</target>
      </trans-unit>
      <trans-unit id="64004">
        <source>**config:** `Command.Alias`</source>
        <target state="needs-translation">**config:** `Command.Alias`</target>
      </trans-unit>
      <trans-unit id="44490">
        <source>**config.args:** `any[]` 要带的参数列表，将与传入的参数合并</source>
        <target state="needs-translation">**config.args:** `any[]` 要带的参数列表，将与传入的参数合并</target>
      </trans-unit>
      <trans-unit id="64006">
        <source>**config.options:** `Dict` 要带的选项列表，将与传入的选项合并</source>
        <target state="needs-translation">**config.options:** `Dict` 要带的选项列表，将与传入的选项合并</target>
      </trans-unit>
      <trans-unit id="44474">
        <source>返回值: `this`</source>
        <target state="needs-translation">返回值: `this`</target>
      </trans-unit>
      <trans-unit id="44476">
        <source>设置指令别名。</source>
        <target state="needs-translation">设置指令别名。</target>
      </trans-unit>
      <trans-unit id="44498">
        <source>cmd.subcommand(name, desc?, config?)</source>
        <target state="needs-translation">cmd.subcommand(name, desc?, config?)</target>
      </trans-unit>
      <trans-unit id="44500">
        <source>**name:** `string` 指令名以及可能的参数</source>
        <target state="needs-translation">**name:** `string` 指令名以及可能的参数</target>
      </trans-unit>
      <trans-unit id="44502">
        <source>**desc:** `string` 指令的描述</source>
        <target state="needs-translation">**desc:** `string` 指令的描述</target>
      </trans-unit>
      <trans-unit id="64008">
        <source>**config:** [`Command.Config`](./context.md#ctx-command) 指令的配置</source>
        <target state="needs-translation">**config:** [`Command.Config`](./context.md#ctx-command) 指令的配置</target>
      </trans-unit>
      <trans-unit id="44506">
        <source>返回值：`Command` 注册或修改的指令</source>
        <target state="needs-translation">返回值：`Command` 注册或修改的指令</target>
      </trans-unit>
      <trans-unit id="44508">
        <source>注册或修改子指令。</source>
        <target state="needs-translation">注册或修改子指令。</target>
      </trans-unit>
      <trans-unit id="44510">
        <source>子指令会继承当期指令的上下文。</source>
        <target state="needs-translation">子指令会继承当期指令的上下文。</target>
      </trans-unit>
      <trans-unit id="64618">
        <source>参见 [子指令](../../manual/usage/command.md#子指令) 和 [注册子指令](../../guide/basic/command.md#注册子指令) 章节。</source>
        <target state="needs-translation">参见 [子指令](../../manual/usage/command.md#子指令) 和 [注册子指令](../../guide/basic/command.md#注册子指令) 章节。</target>
      </trans-unit>
      <trans-unit id="44514">
        <source>cmd.parse(input)</source>
        <target state="needs-translation">cmd.parse(input)</target>
      </trans-unit>
      <trans-unit id="44516">
        <source>**input:** `Argv` 令牌化的输入，通常是 `Argv.parse()` 的返回值</source>
        <target state="needs-translation">**input:** `Argv` 令牌化的输入，通常是 `Argv.parse()` 的返回值</target>
      </trans-unit>
      <trans-unit id="44518">
        <source>返回值: `Argv` 解析结果，包含了 `args` 和 `options` 等属性</source>
        <target state="needs-translation">返回值: `Argv` 解析结果，包含了 `args` 和 `options` 等属性</target>
      </trans-unit>
      <trans-unit id="44520">
        <source>解析一段指令调用文本。</source>
        <target state="needs-translation">解析一段指令调用文本。</target>
      </trans-unit>
      <trans-unit id="44522">
        <source>cmd.execute(argv, next?)</source>
        <target state="needs-translation">cmd.execute(argv, next?)</target>
      </trans-unit>
      <trans-unit id="44524">
        <source>**argv:** `Argv` 执行配置</source>
        <target state="needs-translation">**argv:** `Argv` 执行配置</target>
      </trans-unit>
      <trans-unit id="44526">
        <source>**argv.args:** `any[]` 指令的参数列表</source>
        <target state="needs-translation">**argv.args:** `any[]` 指令的参数列表</target>
      </trans-unit>
      <trans-unit id="44528">
        <source>**argv.options:** `Record&lt;string, any&gt;` 指令的选项</source>
        <target state="needs-translation">**argv.options:** `Record&lt;string, any&gt;` 指令的选项</target>
      </trans-unit>
      <trans-unit id="44530">
        <source>**argv.session:** [`Session`](./session.md) 当前的会话对象</source>
        <target state="needs-translation">**argv.session:** [`Session`](./session.md) 当前的会话对象</target>
      </trans-unit>
      <trans-unit id="44532">
        <source>**next:** [`Next`](../../guide/basic/middleware.md) 所处的中间件的 `next` 回调函数</source>
        <target state="needs-translation">**next:** [`Next`](../../guide/basic/middleware.md) 所处的中间件的 `next` 回调函数</target>
      </trans-unit>
      <trans-unit id="44534">
        <source>返回值: `Promise&lt;string&gt;` 执行函数的返回结果，可用于指令插值</source>
        <target state="needs-translation">返回值: `Promise&lt;string&gt;` 执行函数的返回结果，可用于指令插值</target>
      </trans-unit>
      <trans-unit id="44536">
        <source>执行当前指令。</source>
        <target state="needs-translation">执行当前指令。</target>
      </trans-unit>
      <trans-unit id="44538">
        <source>cmd.dispose()</source>
        <target state="needs-translation">cmd.dispose()</target>
      </trans-unit>
      <trans-unit id="44540">
        <source>返回值: `void`</source>
        <target state="needs-translation">返回值: `void`</target>
      </trans-unit>
      <trans-unit id="44542">
        <source>移除当前指令及其所有子指令。</source>
        <target state="needs-translation">移除当前指令及其所有子指令。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1426" original="/[koishijs.docs] main/zh-CN/api/core/context.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="44556">
        <source>上下文 (Context)</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">上下文 (Context)</target>
      </trans-unit>
      <trans-unit id="44558">
        <source>**上下文 (Context)** 是 Koishi 的核心概念。</source>
        <target state="needs-translation">**上下文 (Context)** 是 Koishi 的核心概念。</target>
      </trans-unit>
      <trans-unit id="44560">
        <source>Koishi 的绝大多数功能也直接通过上下文提供，包括插件、中间件、监听器和指令等。</source>
        <target state="needs-translation">Koishi 的绝大多数功能也直接通过上下文提供，包括插件、中间件、监听器和指令等。</target>
      </trans-unit>
      <trans-unit id="44562">
        <source>服务与混入</source>
        <target state="needs-translation">服务与混入</target>
      </trans-unit>
      <trans-unit id="44564">
        <source>Koishi 使用了组合 (Compose) 的开发方式，绝大部分上下文属性和方法都通过混入的方式搭载在了服务上。</source>
        <target state="needs-translation">Koishi 使用了组合 (Compose) 的开发方式，绝大部分上下文属性和方法都通过混入的方式搭载在了服务上。</target>
      </trans-unit>
      <trans-unit id="44566">
        <source>以下的属性和方法是由内置服务提供的，你可以像使用实例属性和方法一样使用它们。</source>
        <target state="needs-translation">以下的属性和方法是由内置服务提供的，你可以像使用实例属性和方法一样使用它们。</target>
      </trans-unit>
      <trans-unit id="44568">
        <source>这些 API 的具体用法在服务文档中详细介绍，你可以点击对应的链接前往查看。</source>
        <target state="needs-translation">这些 API 的具体用法在服务文档中详细介绍，你可以点击对应的链接前往查看。</target>
      </trans-unit>
      <trans-unit id="44570">
        <source>[ctx.any](../service/filter.md#ctx-any)</source>
        <target state="needs-translation">[ctx.any](../service/filter.md#ctx-any)</target>
      </trans-unit>
      <trans-unit id="44572">
        <source>[ctx.bail](../service/events.md#ctx-bail)</source>
        <target state="needs-translation">[ctx.bail](../service/events.md#ctx-bail)</target>
      </trans-unit>
      <trans-unit id="44574">
        <source>[ctx.before](../service/events.md#ctx-before)</source>
        <target state="needs-translation">[ctx.before](../service/events.md#ctx-before)</target>
      </trans-unit>
      <trans-unit id="64304">
        <source>[ctx.debounce](../service/timer.md#ctx-debounce)</source>
        <target state="needs-translation">[ctx.debounce](../service/timer.md#ctx-debounce)</target>
      </trans-unit>
      <trans-unit id="44578">
        <source>[ctx.emit](../service/events.md#ctx-emit)</source>
        <target state="needs-translation">[ctx.emit](../service/events.md#ctx-emit)</target>
      </trans-unit>
      <trans-unit id="64306">
        <source>[ctx.events](../service/events.md)</source>
        <target state="needs-translation">[ctx.events](../service/events.md)</target>
      </trans-unit>
      <trans-unit id="44580">
        <source>[ctx.exclude](../service/filter.md#ctx-exclude)</source>
        <target state="needs-translation">[ctx.exclude](../service/filter.md#ctx-exclude)</target>
      </trans-unit>
      <trans-unit id="44582">
        <source>[ctx.filter](../service/filter.md#ctx-filter)</source>
        <target state="needs-translation">[ctx.filter](../service/filter.md#ctx-filter)</target>
      </trans-unit>
      <trans-unit id="44584">
        <source>[ctx.http](../service/http.md)</source>
        <target state="needs-translation">[ctx.http](../service/http.md)</target>
      </trans-unit>
      <trans-unit id="44586">
        <source>[ctx.i18n](../service/i18n.md)</source>
        <target state="needs-translation">[ctx.i18n](../service/i18n.md)</target>
      </trans-unit>
      <trans-unit id="63564">
        <source>[ctx.inject](../service/registry.md#ctx-inject)</source>
        <target state="needs-translation">[ctx.inject](../service/registry.md#ctx-inject)</target>
      </trans-unit>
      <trans-unit id="44588">
        <source>[ctx.intersect](../service/filter.md#ctx-intersect)</source>
        <target state="needs-translation">[ctx.intersect](../service/filter.md#ctx-intersect)</target>
      </trans-unit>
      <trans-unit id="44590">
        <source>[ctx.loader](../service/loader.md)</source>
        <target state="needs-translation">[ctx.loader](../service/loader.md)</target>
      </trans-unit>
      <trans-unit id="44592">
        <source>[ctx.middleware](../service/events.md#ctx-middleware)</source>
        <target state="needs-translation">[ctx.middleware](../service/events.md#ctx-middleware)</target>
      </trans-unit>
      <trans-unit id="44594">
        <source>[ctx.model](../database/model.md)</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">[ctx.model](../database/model.md)</target>
      </trans-unit>
      <trans-unit id="44596">
        <source>[ctx.never](../service/filter.md#ctx-never)</source>
        <target state="needs-translation">[ctx.never](../service/filter.md#ctx-never)</target>
      </trans-unit>
      <trans-unit id="44598">
        <source>[ctx.off](../service/events.md#ctx-off)</source>
        <target state="needs-translation">[ctx.off](../service/events.md#ctx-off)</target>
      </trans-unit>
      <trans-unit id="44600">
        <source>[ctx.on](../service/events.md#ctx-on)</source>
        <target state="needs-translation">[ctx.on](../service/events.md#ctx-on)</target>
      </trans-unit>
      <trans-unit id="44602">
        <source>[ctx.once](../service/events.md#ctx-once)</source>
        <target state="needs-translation">[ctx.once](../service/events.md#ctx-once)</target>
      </trans-unit>
      <trans-unit id="44604">
        <source>[ctx.parallel](../service/events.md#ctx-parallel)</source>
        <target state="needs-translation">[ctx.parallel](../service/events.md#ctx-parallel)</target>
      </trans-unit>
      <trans-unit id="44606">
        <source>[ctx.permissions](../service/permissions.md)</source>
        <target state="needs-translation">[ctx.permissions](../service/permissions.md)</target>
      </trans-unit>
      <trans-unit id="44608">
        <source>[ctx.plugin](../service/registry.md#ctx-plugin)</source>
        <target state="needs-translation">[ctx.plugin](../service/registry.md#ctx-plugin)</target>
      </trans-unit>
      <trans-unit id="64308">
        <source>[ctx.registry](../service/registry.md)</source>
        <target state="needs-translation">[ctx.registry](../service/registry.md)</target>
      </trans-unit>
      <trans-unit id="44612">
        <source>[ctx.scope](../service/registry.md#ctx-scope)</source>
        <target state="needs-translation">[ctx.scope](../service/registry.md#ctx-scope)</target>
      </trans-unit>
      <trans-unit id="44614">
        <source>[ctx.serial](../service/events.md#ctx-serial)</source>
        <target state="needs-translation">[ctx.serial](../service/events.md#ctx-serial)</target>
      </trans-unit>
      <trans-unit id="65314">
        <source>[ctx.server](../service/server.md)</source>
        <target state="needs-translation">[ctx.server](../service/server.md)</target>
      </trans-unit>
      <trans-unit id="64310">
        <source>[ctx.setInterval](../service/timer.md#ctx-setinterval)</source>
        <target state="needs-translation">[ctx.setInterval](../service/timer.md#ctx-setinterval)</target>
      </trans-unit>
      <trans-unit id="64312">
        <source>[ctx.setTimeout](../service/timer.md#ctx-settimeout)</source>
        <target state="needs-translation">[ctx.setTimeout](../service/timer.md#ctx-settimeout)</target>
      </trans-unit>
      <trans-unit id="64314">
        <source>[ctx.sleep](../service/timer.md#ctx-sleep)</source>
        <target state="needs-translation">[ctx.sleep](../service/timer.md#ctx-sleep)</target>
      </trans-unit>
      <trans-unit id="44616">
        <source>[ctx.start](../service/registry.md#ctx-start)</source>
        <target state="needs-translation">[ctx.start](../service/registry.md#ctx-start)</target>
      </trans-unit>
      <trans-unit id="44618">
        <source>[ctx.stop](../service/registry.md#ctx-stop)</source>
        <target state="needs-translation">[ctx.stop](../service/registry.md#ctx-stop)</target>
      </trans-unit>
      <trans-unit id="64316">
        <source>[ctx.throttle](../service/timer.md#ctx-throttle)</source>
        <target state="needs-translation">[ctx.throttle](../service/timer.md#ctx-throttle)</target>
      </trans-unit>
      <trans-unit id="64318">
        <source>[ctx.timer](../service/timer.md)</source>
        <target state="needs-translation">[ctx.timer](../service/timer.md)</target>
      </trans-unit>
      <trans-unit id="44620">
        <source>[ctx.union](../service/filter.md#ctx-union)</source>
        <target state="needs-translation">[ctx.union](../service/filter.md#ctx-union)</target>
      </trans-unit>
      <trans-unit id="63566">
        <source>除此以外，以下服务由官方插件提供，因此使用时需要 [声明依赖](../../guide/plugin/service.md#inject)：</source>
        <target state="needs-translation">除此以外，以下服务由官方插件提供，因此使用时需要 [声明依赖](../../guide/plugin/service.md#inject)：</target>
      </trans-unit>
      <trans-unit id="63568">
        <source>[ctx.console](../console/server.md)</source>
        <target state="needs-translation">[ctx.console](../console/server.md)</target>
      </trans-unit>
      <trans-unit id="44576">
        <source>[ctx.database](../database/database.md)</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">[ctx.database](../database/database.md)</target>
      </trans-unit>
      <trans-unit id="63570">
        <source>[ctx.mock](../../plugins/develop/mock.md)</source>
        <target state="needs-translation">[ctx.mock](../../plugins/develop/mock.md)</target>
      </trans-unit>
      <trans-unit id="63572">
        <source>[ctx.server](../../plugins/develop/server.md)</source>
        <target state="needs-translation">[ctx.server](../../plugins/develop/server.md)</target>
      </trans-unit>
      <trans-unit id="44624">
        <source>实例属性</source>
        <target state="needs-translation">实例属性</target>
      </trans-unit>
      <trans-unit id="44626">
        <source>ctx.root.config</source>
        <target state="needs-translation">ctx.root.config</target>
      </trans-unit>
      <trans-unit id="44628">
        <source>类型: [`Context.Config`](./app.md)</source>
        <target state="needs-translation">类型: [`Context.Config`](./app.md)</target>
      </trans-unit>
      <trans-unit id="44630">
        <source>当前的 Koishi 全局配置，相当于配置文件中的配置经过默认值处理后的结果。</source>
        <target state="needs-translation">当前的 Koishi 全局配置，相当于配置文件中的配置经过默认值处理后的结果。</target>
      </trans-unit>
      <trans-unit id="44632">
        <source>ctx.baseDir</source>
        <target state="needs-translation">ctx.baseDir</target>
      </trans-unit>
      <trans-unit id="44634">
        <source>类型: `string`</source>
        <target state="needs-translation">类型: `string`</target>
      </trans-unit>
      <trans-unit id="44636">
        <source>当前的 Koishi 默认路径。</source>
        <target state="needs-translation">当前的 Koishi 默认路径。</target>
      </trans-unit>
      <trans-unit id="44638">
        <source>如果你使用配置文件，则这个路径是配置文件所在的路径；否则这个路径是当前工作路径。</source>
        <target state="needs-translation">如果你使用配置文件，则这个路径是配置文件所在的路径；否则这个路径是当前工作路径。</target>
      </trans-unit>
      <trans-unit id="44640">
        <source>ctx.bots</source>
        <target state="needs-translation">ctx.bots</target>
      </trans-unit>
      <trans-unit id="44642">
        <source>类型: `Bot[]`</source>
        <target state="needs-translation">类型: `Bot[]`</target>
      </trans-unit>
      <trans-unit id="44644">
        <source>当前应用的全部机器人实例。</source>
        <target state="needs-translation">当前应用的全部机器人实例。</target>
      </trans-unit>
      <trans-unit id="44646">
        <source>实例方法</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">實體方法</target>
      </trans-unit>
      <trans-unit id="44648">
        <source>ctx.extend(meta)</source>
        <target state="needs-translation">ctx.extend(meta)</target>
      </trans-unit>
      <trans-unit id="44650">
        <source>**meta:** `Partial&lt;Context.Meta&gt;` 要覆盖的属性</source>
        <target state="needs-translation">**meta:** `Partial&lt;Context.Meta&gt;` 要覆盖的属性</target>
      </trans-unit>
      <trans-unit id="44652">
        <source>返回值: `this` 新的上下文</source>
        <target state="needs-translation">返回值: `this` 新的上下文</target>
      </trans-unit>
      <trans-unit id="44654">
        <source>以当前上下文为原型创建一个新上下文。</source>
        <target state="needs-translation">以当前上下文为原型创建一个新上下文。</target>
      </trans-unit>
      <trans-unit id="44656">
        <source>`meta` 中的属性将覆盖当前上下文的属性。</source>
        <target state="needs-translation">`meta` 中的属性将覆盖当前上下文的属性。</target>
      </trans-unit>
      <trans-unit id="44658">
        <source>ctx.command(def, desc?, config?)</source>
        <target state="needs-translation">ctx.command(def, desc?, config?)</target>
      </trans-unit>
      <trans-unit id="44660">
        <source>**def:** `string` 指令名以及可能的参数</source>
        <target state="needs-translation">**def:** `string` 指令名以及可能的参数</target>
      </trans-unit>
      <trans-unit id="44662">
        <source>**desc:** `string` 指令的描述</source>
        <target state="needs-translation">**desc:** `string` 指令的描述</target>
      </trans-unit>
      <trans-unit id="44664">
        <source>**config:** `CommandConfig` 指令的配置</source>
        <target state="needs-translation">**config:** `CommandConfig` 指令的配置</target>
      </trans-unit>
      <trans-unit id="44666">
        <source>**checkUnknown:** `boolean` 是否对未知选项进行检测，默认为 `false`</source>
        <target state="needs-translation">**checkUnknown:** `boolean` 是否对未知选项进行检测，默认为 `false`</target>
      </trans-unit>
      <trans-unit id="44668">
        <source>**checkArgCount:** `boolean` 是否对参数个数进行检测，默认为 `false`</source>
        <target state="needs-translation">**checkArgCount:** `boolean` 是否对参数个数进行检测，默认为 `false`</target>
      </trans-unit>
      <trans-unit id="44670">
        <source>**authority:** `number` 最低调用权限，默认为 `1`</source>
        <target state="needs-translation">**authority:** `number` 最低调用权限，默认为 `1`</target>
      </trans-unit>
      <trans-unit id="44672">
        <source>**showWarning:** `boolean` 当小于最短间隔时是否进行提醒，默认为 `true`</source>
        <target state="needs-translation">**showWarning:** `boolean` 当小于最短间隔时是否进行提醒，默认为 `true`</target>
      </trans-unit>
      <trans-unit id="44674">
        <source>返回值：[`Command`](./command.md) 注册或修改的指令</source>
        <target state="needs-translation">返回值：[`Command`](./command.md) 注册或修改的指令</target>
      </trans-unit>
      <trans-unit id="44676">
        <source>在当前上下文中注册或修改一个指令。</source>
        <target state="needs-translation">在当前上下文中注册或修改一个指令。</target>
      </trans-unit>
      <trans-unit id="64476">
        <source>ctx.broadcast(channels?, content) &lt;badge&gt;需要数据库&lt;/badge&gt;</source>
        <target state="needs-translation">ctx.broadcast(channels?, content) &lt;badge&gt;需要数据库&lt;/badge&gt;</target>
      </trans-unit>
      <trans-unit id="64342">
        <source>**channels:** `string[]` 频道列表，格式为 `{platform}:{channelId}` (如 `discord:1234567890`)</source>
        <target state="needs-translation">**channels:** `string[]` 频道列表，格式为 `{platform}:{channelId}` (如 `discord:1234567890`)</target>
      </trans-unit>
      <trans-unit id="44682">
        <source>**content:** `string` 要发送的内容</source>
        <target state="needs-translation">**content:** `string` 要发送的内容</target>
      </trans-unit>
      <trans-unit id="44686">
        <source>返回值: `Promise&lt;string[]&gt;` 成功发送的消息 ID 列表</source>
        <target state="needs-translation">返回值: `Promise&lt;string[]&gt;` 成功发送的消息 ID 列表</target>
      </trans-unit>
      <trans-unit id="64480">
        <source>所有机器人向自己分配的频道广播消息。</source>
        <target state="needs-translation">所有机器人向自己分配的频道广播消息。</target>
      </trans-unit>
      <trans-unit id="64482">
        <source>如果传入的频道不存在，会输出一个警告。</source>
        <target state="needs-translation">如果传入的频道不存在，会输出一个警告。</target>
      </trans-unit>
      <trans-unit id="44692">
        <source>ctx.logger(scope?)</source>
        <target state="needs-translation">ctx.logger(scope?)</target>
      </trans-unit>
      <trans-unit id="44694">
        <source>**scope:** `string` 要指定的类型，默认为 `''`</source>
        <target state="needs-translation">**scope:** `string` 要指定的类型，默认为 `''`</target>
      </trans-unit>
      <trans-unit id="44696">
        <source>返回值: [`Logger`](../utils/logger.md)</source>
        <target state="needs-translation">返回值: [`Logger`](../utils/logger.md)</target>
      </trans-unit>
      <trans-unit id="44698">
        <source>根据命名空间生成一个 [Logger](../utils/logger.md) 对象。</source>
        <target state="needs-translation">根据命名空间生成一个 [Logger](../utils/logger.md) 对象。</target>
      </trans-unit>
      <trans-unit id="44700">
        <source>静态属性和方法</source>
        <target state="needs-translation">静态属性和方法</target>
      </trans-unit>
      <trans-unit id="44702">
        <source>Context.filter</source>
        <target state="needs-translation">Context.filter</target>
      </trans-unit>
      <trans-unit id="44704">
        <source>类型: `symbol`</source>
        <target state="needs-translation">类型: `symbol`</target>
      </trans-unit>
      <trans-unit id="44710">
        <source>Context.current</source>
        <target state="needs-translation">Context.current</target>
      </trans-unit>
      <trans-unit id="44708">
        <source>类型: `symbol`</source>
        <target state="needs-translation">类型: `symbol`</target>
      </trans-unit>
      <trans-unit id="44714">
        <source>特殊的键值，可以在通用上下文属性对象的方法上访问。</source>
        <target state="needs-translation">特殊的键值，可以在通用上下文属性对象的方法上访问。</target>
      </trans-unit>
      <trans-unit id="44716">
        <source>参见 [声明通用上下文属性](../../guide/plugin/service.md#声明通用上下文属性)。</source>
        <target state="needs-translation">参见 [声明通用上下文属性](../../guide/plugin/service.md#声明通用上下文属性)。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1428" original="/[koishijs.docs] main/zh-CN/api/core/events.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="44718">
        <source>事件 (Events)</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">事件 (Events)</target>
      </trans-unit>
      <trans-unit id="44720">
        <source>参见：[开发 &gt; 交互基础 &gt; 事件系统](../../guide/basic/events.md)
&lt;br&gt;参见：[开发 &gt; 模块化 &gt; 生命周期](../../guide/plugin/lifecycle.md)</source>
        <target state="needs-translation">参见：[开发 &gt; 交互基础 &gt; 事件系统](../../guide/basic/events.md)
&lt;br&gt;参见：[开发 &gt; 模块化 &gt; 生命周期](../../guide/plugin/lifecycle.md)</target>
      </trans-unit>
      <trans-unit id="44722">
        <source>本节介绍 Koishi 的内置事件。</source>
        <target state="needs-translation">本节介绍 Koishi 的内置事件。</target>
      </trans-unit>
      <trans-unit id="44724">
        <source>如果想了解事件 API，请前往 [API &gt; 内置服务 &gt; 事件](../service/events.md)。</source>
        <target state="needs-translation">如果想了解事件 API，请前往 [API &gt; 内置服务 &gt; 事件](../service/events.md)。</target>
      </trans-unit>
      <trans-unit id="44726">
        <source>通用会话事件</source>
        <target state="needs-translation">通用会话事件</target>
      </trans-unit>
      <trans-unit id="44728">
        <source>通用会话事件由适配器实现，它们均包含一个 [`session`](./session.md) 参数，触发方式均为 `emit`。</source>
        <target state="needs-translation">通用会话事件由适配器实现，它们均包含一个 [`session`](./session.md) 参数，触发方式均为 `emit`。</target>
      </trans-unit>
      <trans-unit id="44730">
        <source>各事件会在相应的资源页面中介绍。</source>
        <target state="needs-translation">各事件会在相应的资源页面中介绍。</target>
      </trans-unit>
      <trans-unit id="44732">
        <source>[friend-request](../resources/user.md#friend-request)</source>
        <target state="needs-translation">[friend-request](../resources/user.md#friend-request)</target>
      </trans-unit>
      <trans-unit id="44734">
        <source>[guild-added](../resources/guild.md#guild-added)</source>
        <target state="needs-translation">[guild-added](../resources/guild.md#guild-added)</target>
      </trans-unit>
      <trans-unit id="44736">
        <source>[guild-member-added](../resources/member.md#guild-member-added)</source>
        <target state="needs-translation">[guild-member-added](../resources/member.md#guild-member-added)</target>
      </trans-unit>
      <trans-unit id="44738">
        <source>[guild-member-removed](../resources/member.md#guild-member-removed)</source>
        <target state="needs-translation">[guild-member-removed](../resources/member.md#guild-member-removed)</target>
      </trans-unit>
      <trans-unit id="44740">
        <source>[guild-member-request](../resources/member.md#guild-member-request)</source>
        <target state="needs-translation">[guild-member-request](../resources/member.md#guild-member-request)</target>
      </trans-unit>
      <trans-unit id="44742">
        <source>[guild-member-updated](../resources/member.md#guild-member-updated)</source>
        <target state="needs-translation">[guild-member-updated](../resources/member.md#guild-member-updated)</target>
      </trans-unit>
      <trans-unit id="44744">
        <source>[guild-removed](../resources/guild.md#guild-removed)</source>
        <target state="needs-translation">[guild-removed](../resources/guild.md#guild-removed)</target>
      </trans-unit>
      <trans-unit id="44746">
        <source>[guild-request](../resources/guild.md#guild-request)</source>
        <target state="needs-translation">[guild-request](../resources/guild.md#guild-request)</target>
      </trans-unit>
      <trans-unit id="44748">
        <source>[guild-role-created](../resources/role.md#guild-role-created)</source>
        <target state="needs-translation">[guild-role-created](../resources/role.md#guild-role-created)</target>
      </trans-unit>
      <trans-unit id="44750">
        <source>[guild-role-deleted](../resources/role.md#guild-role-deleted)</source>
        <target state="needs-translation">[guild-role-deleted](../resources/role.md#guild-role-deleted)</target>
      </trans-unit>
      <trans-unit id="44752">
        <source>[guild-role-updated](../resources/role.md#guild-role-updated)</source>
        <target state="needs-translation">[guild-role-updated](../resources/role.md#guild-role-updated)</target>
      </trans-unit>
      <trans-unit id="44754">
        <source>[guild-updated](../resources/guild.md#guild-updated)</source>
        <target state="needs-translation">[guild-updated](../resources/guild.md#guild-updated)</target>
      </trans-unit>
      <trans-unit id="44756">
        <source>[login-added](../resources/login.md#login-added)</source>
        <target state="needs-translation">[login-added](../resources/login.md#login-added)</target>
      </trans-unit>
      <trans-unit id="44758">
        <source>[login-removed](../resources/login.md#login-removed)</source>
        <target state="needs-translation">[login-removed](../resources/login.md#login-removed)</target>
      </trans-unit>
      <trans-unit id="44760">
        <source>[login-updated](../resources/login.md#login-updated)</source>
        <target state="needs-translation">[login-updated](../resources/login.md#login-updated)</target>
      </trans-unit>
      <trans-unit id="44762">
        <source>[message-created (message)](../resources/message.md#message-created)</source>
        <target state="needs-translation">[message-created (message)](../resources/message.md#message-created)</target>
      </trans-unit>
      <trans-unit id="44764">
        <source>[message-deleted](../resources/message.md#message-deleted)</source>
        <target state="needs-translation">[message-deleted](../resources/message.md#message-deleted)</target>
      </trans-unit>
      <trans-unit id="44766">
        <source>[message-updated](../resources/message.md#message-updated)</source>
        <target state="needs-translation">[message-updated](../resources/message.md#message-updated)</target>
      </trans-unit>
      <trans-unit id="44768">
        <source>[reaction-added](../resources/reaction.md#reaction-added)</source>
        <target state="needs-translation">[reaction-added](../resources/reaction.md#reaction-added)</target>
      </trans-unit>
      <trans-unit id="44770">
        <source>[reaction-removed](../resources/reaction.md#reaction-removed)</source>
        <target state="needs-translation">[reaction-removed](../resources/reaction.md#reaction-removed)</target>
      </trans-unit>
      <trans-unit id="44772">
        <source>内置会话事件</source>
        <target state="needs-translation">内置会话事件</target>
      </trans-unit>
      <trans-unit id="44774">
        <source>与上面介绍的通用会话事件不同，这里的事件都是 Koishi 自身实现的，它们有不同的触发方式，但是都会支持上下文选择器。</source>
        <target state="needs-translation">与上面介绍的通用会话事件不同，这里的事件都是 Koishi 自身实现的，它们有不同的触发方式，但是都会支持上下文选择器。</target>
      </trans-unit>
      <trans-unit id="44776">
        <source>事件：middleware</source>
        <target state="needs-translation">事件：middleware</target>
      </trans-unit>
      <trans-unit id="44778">
        <source>**session:** `Session` 当前会话</source>
        <target state="needs-translation">**session:** `Session` 当前会话</target>
      </trans-unit>
      <trans-unit id="44780">
        <source>**触发方式:** emit</source>
        <target state="needs-translation">**触发方式:** emit</target>
      </trans-unit>
      <trans-unit id="44782">
        <source>在执行完全部中间件后会在对应的上下文触发。</source>
        <target state="needs-translation">在执行完全部中间件后会在对应的上下文触发。</target>
      </trans-unit>
      <trans-unit id="44784">
        <source>事件：before-parse</source>
        <target state="needs-translation">事件：before-parse</target>
      </trans-unit>
      <trans-unit id="44786">
        <source>**content:** `string` 要解析的文本</source>
        <target state="needs-translation">**content:** `string` 要解析的文本</target>
      </trans-unit>
      <trans-unit id="44788">
        <source>**session:** `Session` 当前会话</source>
        <target state="needs-translation">**session:** `Session` 当前会话</target>
      </trans-unit>
      <trans-unit id="44790">
        <source>**触发方式:** bail</source>
        <target state="needs-translation">**触发方式:** bail</target>
      </trans-unit>
      <trans-unit id="44792">
        <source>尝试将文本解析成 Argv 对象时调用。</source>
        <target state="needs-translation">尝试将文本解析成 Argv 对象时调用。</target>
      </trans-unit>
      <trans-unit id="44794">
        <source>你可以在回调函数中返回一个 Argv 对象以覆盖默认的解析行为。</source>
        <target state="needs-translation">你可以在回调函数中返回一个 Argv 对象以覆盖默认的解析行为。</target>
      </trans-unit>
      <trans-unit id="44796">
        <source>事件：parse</source>
        <target state="needs-translation">事件：parse</target>
      </trans-unit>
      <trans-unit id="44798">
        <source>**argv:** `Argv` 运行时参数</source>
        <target state="needs-translation">**argv:** `Argv` 运行时参数</target>
      </trans-unit>
      <trans-unit id="44800">
        <source>**触发方式:** bail</source>
        <target state="needs-translation">**触发方式:** bail</target>
      </trans-unit>
      <trans-unit id="44802">
        <source>尝试将一个未识别出指令的 Argv 对象识别成指令调用时使用。</source>
        <target state="needs-translation">尝试将一个未识别出指令的 Argv 对象识别成指令调用时使用。</target>
      </trans-unit>
      <trans-unit id="44804">
        <source>你可以在回调函数中修改传入的 Argv 对象，或者返回一个字符串表示识别出的指令。</source>
        <target state="needs-translation">你可以在回调函数中修改传入的 Argv 对象，或者返回一个字符串表示识别出的指令。</target>
      </trans-unit>
      <trans-unit id="44806">
        <source>事件：before-attach-channel</source>
        <target state="needs-translation">事件：before-attach-channel</target>
      </trans-unit>
      <trans-unit id="44808">
        <source>事件：before-attach-user</source>
        <target state="needs-translation">事件：before-attach-user</target>
      </trans-unit>
      <trans-unit id="44810">
        <source>**session:** `Session` 当前会话</source>
        <target state="needs-translation">**session:** `Session` 当前会话</target>
      </trans-unit>
      <trans-unit id="44812">
        <source>**fields:** `Set&lt;string&gt;` 要获取的字段列表</source>
        <target state="needs-translation">**fields:** `Set&lt;string&gt;` 要获取的字段列表</target>
      </trans-unit>
      <trans-unit id="44814">
        <source>**触发方式:** emit</source>
        <target state="needs-translation">**触发方式:** emit</target>
      </trans-unit>
      <trans-unit id="44816">
        <source>当 Koishi 试图从数据库获取频道 / 用户信息前触发。</source>
        <target state="needs-translation">当 Koishi 试图从数据库获取频道 / 用户信息前触发。</target>
      </trans-unit>
      <trans-unit id="44818">
        <source>你可以在回调函数中通过 `fields.add()` 修改传入的字段集合，增加的字段将可以被指令以及之后的中间件获取到。</source>
        <target state="needs-translation">你可以在回调函数中通过 `fields.add()` 修改传入的字段集合，增加的字段将可以被指令以及之后的中间件获取到。</target>
      </trans-unit>
      <trans-unit id="44820">
        <source>这两个事件的触发于内置中间件中。</source>
        <target state="needs-translation">这两个事件的触发于内置中间件中。</target>
      </trans-unit>
      <trans-unit id="44822">
        <source>如果没有配置数据库，则两个事件都不会触发；如果不是群聊消息，则 before-attach-channel 事件不会触发。</source>
        <target state="needs-translation">如果没有配置数据库，则两个事件都不会触发；如果不是群聊消息，则 before-attach-channel 事件不会触发。</target>
      </trans-unit>
      <trans-unit id="44824">
        <source>事件：attach-channel</source>
        <target state="needs-translation">事件：attach-channel</target>
      </trans-unit>
      <trans-unit id="44826">
        <source>事件：attach-user</source>
        <target state="needs-translation">事件：attach-user</target>
      </trans-unit>
      <trans-unit id="44828">
        <source>**session:** `Session` 当前会话</source>
        <target state="needs-translation">**session:** `Session` 当前会话</target>
      </trans-unit>
      <trans-unit id="44830">
        <source>**触发方式:** serial</source>
        <target state="needs-translation">**触发方式:** serial</target>
      </trans-unit>
      <trans-unit id="44832">
        <source>当 Koishi 完成频道 / 用户数据获取后触发。</source>
        <target state="needs-translation">当 Koishi 完成频道 / 用户数据获取后触发。</target>
      </trans-unit>
      <trans-unit id="44834">
        <source>调用时会传入一个 Session 对象，将会拥有 `channel`/`user` 属性。</source>
        <target state="needs-translation">调用时会传入一个 Session 对象，将会拥有 `channel`/`user` 属性。</target>
      </trans-unit>
      <trans-unit id="44836">
        <source>你可以在回调函数中修改这两个属性，这些修改会在后续过程中自动更新到数据库。</source>
        <target state="needs-translation">你可以在回调函数中修改这两个属性，这些修改会在后续过程中自动更新到数据库。</target>
      </trans-unit>
      <trans-unit id="44838">
        <source>如果你在回调函数中返回一个 truthy 值，则该会话不会触发指令以及之后的中间件。</source>
        <target state="needs-translation">如果你在回调函数中返回一个 truthy 值，则该会话不会触发指令以及之后的中间件。</target>
      </trans-unit>
      <trans-unit id="44840">
        <source>如果没有配置数据库，则两个事件都不会触发；如果不是群聊消息，则 attach-channel 事件不会触发。</source>
        <target state="needs-translation">如果没有配置数据库，则两个事件都不会触发；如果不是群聊消息，则 attach-channel 事件不会触发。</target>
      </trans-unit>
      <trans-unit id="44842">
        <source>事件：command/before-attach-channel</source>
        <target state="needs-translation">事件：command/before-attach-channel</target>
      </trans-unit>
      <trans-unit id="44844">
        <source>事件：command/before-attach-user</source>
        <target state="needs-translation">事件：command/before-attach-user</target>
      </trans-unit>
      <trans-unit id="44846">
        <source>**session:** `Argv` 运行时参数</source>
        <target state="needs-translation">**session:** `Argv` 运行时参数</target>
      </trans-unit>
      <trans-unit id="44848">
        <source>**fields:** `Set&lt;string&gt;` 要获取的字段列表</source>
        <target state="needs-translation">**fields:** `Set&lt;string&gt;` 要获取的字段列表</target>
      </trans-unit>
      <trans-unit id="44850">
        <source>**触发方式:** emit</source>
        <target state="needs-translation">**触发方式:** emit</target>
      </trans-unit>
      <trans-unit id="44852">
        <source>当 Koishi 试图从数据库获取频道 / 用户信息前触发。</source>
        <target state="needs-translation">当 Koishi 试图从数据库获取频道 / 用户信息前触发。</target>
      </trans-unit>
      <trans-unit id="44854">
        <source>你可以在回调函数中通过 `fields.add()` 修改传入的字段集合，增加的字段将可以被指令以及之后的中间件获取到。</source>
        <target state="needs-translation">你可以在回调函数中通过 `fields.add()` 修改传入的字段集合，增加的字段将可以被指令以及之后的中间件获取到。</target>
      </trans-unit>
      <trans-unit id="44856">
        <source>这两个事件触发于任意指令调用前。</source>
        <target state="needs-translation">这两个事件触发于任意指令调用前。</target>
      </trans-unit>
      <trans-unit id="44858">
        <source>如果没有配置数据库，则两个事件都不会触发；如果不是群聊消息，则 before-attach-channel 事件不会触发。</source>
        <target state="needs-translation">如果没有配置数据库，则两个事件都不会触发；如果不是群聊消息，则 before-attach-channel 事件不会触发。</target>
      </trans-unit>
      <trans-unit id="44860">
        <source>事件：before-send</source>
        <target state="needs-translation">事件：before-send</target>
      </trans-unit>
      <trans-unit id="44862">
        <source>**session:** `Session` 消息会话</source>
        <target state="needs-translation">**session:** `Session` 消息会话</target>
      </trans-unit>
      <trans-unit id="44864">
        <source>**触发方式:** bail</source>
        <target state="needs-translation">**触发方式:** bail</target>
      </trans-unit>
      <trans-unit id="44866">
        <source>即将发送信息时会在对应的上下文触发。</source>
        <target state="needs-translation">即将发送信息时会在对应的上下文触发。</target>
      </trans-unit>
      <trans-unit id="44868">
        <source>调用时会传入一个事件类型为 [send](#消息类事件) 的会话实例。</source>
        <target state="needs-translation">调用时会传入一个事件类型为 [send](#消息类事件) 的会话实例。</target>
      </trans-unit>
      <trans-unit id="44870">
        <source>由于该消息还未发送，这个会话并没有 `messageId` 属性。</source>
        <target state="needs-translation">由于该消息还未发送，这个会话并没有 `messageId` 属性。</target>
      </trans-unit>
      <trans-unit id="44872">
        <source>你可以通过修改 `session.content` 改变发送的内容，或者返回一个 truthy 值以取消该消息的发送。</source>
        <target state="needs-translation">你可以通过修改 `session.content` 改变发送的内容，或者返回一个 truthy 值以取消该消息的发送。</target>
      </trans-unit>
      <trans-unit id="44874">
        <source>事件：command/before-execute</source>
        <target state="needs-translation">事件：command/before-execute</target>
      </trans-unit>
      <trans-unit id="44876">
        <source>**argv:** `Argv` 运行时参数</source>
        <target state="needs-translation">**argv:** `Argv` 运行时参数</target>
      </trans-unit>
      <trans-unit id="44878">
        <source>**触发方式:** serial</source>
        <target state="needs-translation">**触发方式:** serial</target>
      </trans-unit>
      <trans-unit id="44880">
        <source>调用指令前会在对应的上下文触发。</source>
        <target state="needs-translation">调用指令前会在对应的上下文触发。</target>
      </trans-unit>
      <trans-unit id="44882">
        <source>此时指令的可用性还未经检测，因此可能出现参数错误、权限不足、超过使用次数等情况。</source>
        <target state="needs-translation">此时指令的可用性还未经检测，因此可能出现参数错误、权限不足、超过使用次数等情况。</target>
      </trans-unit>
      <trans-unit id="44884">
        <source>你可以通过在回调函数中返回一个字符串以取消该指令的执行。</source>
        <target state="needs-translation">你可以通过在回调函数中返回一个字符串以取消该指令的执行。</target>
      </trans-unit>
      <trans-unit id="44886">
        <source>进一步，如果该字符串非空，则会作为此指令执行的结果。</source>
        <target state="needs-translation">进一步，如果该字符串非空，则会作为此指令执行的结果。</target>
      </trans-unit>
      <trans-unit id="44888">
        <source>事件：command</source>
        <target state="needs-translation">事件：command</target>
      </trans-unit>
      <trans-unit id="44890">
        <source>**argv:** `Argv` 运行时参数</source>
        <target state="needs-translation">**argv:** `Argv` 运行时参数</target>
      </trans-unit>
      <trans-unit id="44892">
        <source>**触发方式:** parallel</source>
        <target state="needs-translation">**触发方式:** parallel</target>
      </trans-unit>
      <trans-unit id="44894">
        <source>指令调用完毕后会在对应的上下文触发。</source>
        <target state="needs-translation">指令调用完毕后会在对应的上下文触发。</target>
      </trans-unit>
      <trans-unit id="44896">
        <source>生命周期事件</source>
        <target state="needs-translation">生命周期事件</target>
      </trans-unit>
      <trans-unit id="44898">
        <source>这里的所有事件在全体上下文触发的 (即上下文选择器对这些事件无效)。</source>
        <target state="needs-translation">这里的所有事件在全体上下文触发的 (即上下文选择器对这些事件无效)。</target>
      </trans-unit>
      <trans-unit id="44900">
        <source>事件：ready</source>
        <target state="needs-translation">事件：ready</target>
      </trans-unit>
      <trans-unit id="44902">
        <source>**触发方式:** parallel</source>
        <target state="needs-translation">**触发方式:** parallel</target>
      </trans-unit>
      <trans-unit id="44904">
        <source>应用启动时触发。</source>
        <target state="needs-translation">应用启动时触发。</target>
      </trans-unit>
      <trans-unit id="44906">
        <source>如果应用已经处于启动状态，则会立即触发。</source>
        <target state="needs-translation">如果应用已经处于启动状态，则会立即触发。</target>
      </trans-unit>
      <trans-unit id="44908">
        <source>参见 [异步加载](../../guide/plugin/lifecycle.md#异步加载与-ready-事件)。</source>
        <target state="needs-translation">参见 [异步加载](../../guide/plugin/lifecycle.md#异步加载与-ready-事件)。</target>
      </trans-unit>
      <trans-unit id="44910">
        <source>事件：dispose</source>
        <target state="needs-translation">事件：dispose</target>
      </trans-unit>
      <trans-unit id="44912">
        <source>**触发方式:** parallel</source>
        <target state="needs-translation">**触发方式:** parallel</target>
      </trans-unit>
      <trans-unit id="44914">
        <source>插件被卸载时触发。</source>
        <target state="needs-translation">插件被卸载时触发。</target>
      </trans-unit>
      <trans-unit id="44916">
        <source>参见 [清除副作用](../../guide/plugin/lifecycle.md#清除副作用)。</source>
        <target state="needs-translation">参见 [清除副作用](../../guide/plugin/lifecycle.md#清除副作用)。</target>
      </trans-unit>
      <trans-unit id="44918">
        <source>请注意，`dispose` 事件的目的是清理副作用而不是确保数据保存。</source>
        <target state="needs-translation">请注意，`dispose` 事件的目的是清理副作用而不是确保数据保存。</target>
      </trans-unit>
      <trans-unit id="44920">
        <source>当 Koishi 进程崩溃或是被强行中止时，`dispose` 事件都可能不会触发。</source>
        <target state="needs-translation">当 Koishi 进程崩溃或是被强行中止时，`dispose` 事件都可能不会触发。</target>
      </trans-unit>
      <trans-unit id="44922">
        <source>为了保护你的数据，你应当在每一次修改后立即上传数据，而不是在 `dispose` 中处理收尾工作。</source>
        <target state="needs-translation">为了保护你的数据，你应当在每一次修改后立即上传数据，而不是在 `dispose` 中处理收尾工作。</target>
      </trans-unit>
      <trans-unit id="44924">
        <source>事件：service</source>
        <target state="needs-translation">事件：service</target>
      </trans-unit>
      <trans-unit id="44926">
        <source>**name:** `string` 服务名称</source>
        <target state="needs-translation">**name:** `string` 服务名称</target>
      </trans-unit>
      <trans-unit id="44928">
        <source>**触发方式:** emit</source>
        <target state="needs-translation">**触发方式:** emit</target>
      </trans-unit>
      <trans-unit id="44930">
        <source>有服务被修改时触发。</source>
        <target state="needs-translation">有服务被修改时触发。</target>
      </trans-unit>
      <trans-unit id="44932">
        <source>事件：model</source>
        <target state="needs-translation">事件：model</target>
      </trans-unit>
      <trans-unit id="44934">
        <source>**name:** `string` 被扩展的表名</source>
        <target state="needs-translation">**name:** `string` 被扩展的表名</target>
      </trans-unit>
      <trans-unit id="44936">
        <source>**触发方式:** emit</source>
        <target state="needs-translation">**触发方式:** emit</target>
      </trans-unit>
      <trans-unit id="44938">
        <source>调用 `model.extend()` 时触发。</source>
        <target state="needs-translation">调用 `model.extend()` 时触发。</target>
      </trans-unit>
      <trans-unit id="44940">
        <source>事件：login-added</source>
        <target state="needs-translation">事件：login-added</target>
      </trans-unit>
      <trans-unit id="44942">
        <source>**bot:** [`Bot`](./bot.md) 机器人实例</source>
        <target state="needs-translation">**bot:** [`Bot`](./bot.md) 机器人实例</target>
      </trans-unit>
      <trans-unit id="44944">
        <source>**触发方式:** emit</source>
        <target state="needs-translation">**触发方式:** emit</target>
      </trans-unit>
      <trans-unit id="44946">
        <source>添加机器人时触发。</source>
        <target state="needs-translation">添加机器人时触发。</target>
      </trans-unit>
      <trans-unit id="44948">
        <source>事件：login-removed</source>
        <target state="needs-translation">事件：login-removed</target>
      </trans-unit>
      <trans-unit id="44950">
        <source>**bot:** [`Bot`](./bot.md) 机器人实例</source>
        <target state="needs-translation">**bot:** [`Bot`](./bot.md) 机器人实例</target>
      </trans-unit>
      <trans-unit id="44952">
        <source>**触发方式:** emit</source>
        <target state="needs-translation">**触发方式:** emit</target>
      </trans-unit>
      <trans-unit id="44954">
        <source>移除机器人时触发。</source>
        <target state="needs-translation">移除机器人时触发。</target>
      </trans-unit>
      <trans-unit id="44956">
        <source>事件：login-updated</source>
        <target state="needs-translation">事件：login-updated</target>
      </trans-unit>
      <trans-unit id="44958">
        <source>**bot:** [`Bot`](./bot.md) 机器人实例</source>
        <target state="needs-translation">**bot:** [`Bot`](./bot.md) 机器人实例</target>
      </trans-unit>
      <trans-unit id="44960">
        <source>**触发方式:** emit</source>
        <target state="needs-translation">**触发方式:** emit</target>
      </trans-unit>
      <trans-unit id="44962">
        <source>机器人状态发生改变时触发。</source>
        <target state="needs-translation">机器人状态发生改变时触发。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1430" original="/[koishijs.docs] main/zh-CN/api/core/session.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="44964">
        <source>会话 (Session)</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">會話 (Session)</target>
      </trans-unit>
      <trans-unit id="44966">
        <source>会话来源于 Koishi v1 的元信息对象，并在后续的版本中发展成了专门的类并大幅扩展了功能。</source>
        <target state="needs-translation">会话来源于 Koishi v1 的元信息对象，并在后续的版本中发展成了专门的类并大幅扩展了功能。</target>
      </trans-unit>
      <trans-unit id="44968">
        <source>目前的会话已经参与到了 Koishi 的绝大部分工作。</source>
        <target state="needs-translation">目前的会话已经参与到了 Koishi 的绝大部分工作。</target>
      </trans-unit>
      <trans-unit id="44970">
        <source>通用属性</source>
        <target state="needs-translation">通用属性</target>
      </trans-unit>
      <trans-unit id="44972">
        <source>对于会话事件，我们抽象出了一套通用的属性：</source>
        <target state="needs-translation">对于会话事件，我们抽象出了一套通用的属性：</target>
      </trans-unit>
      <trans-unit id="44974">
        <source>session.app</source>
        <target state="needs-translation">session.app</target>
      </trans-unit>
      <trans-unit id="44976">
        <source>类型: [`Context`](./context.md)</source>
        <target state="needs-translation">类型: [`Context`](./context.md)</target>
      </trans-unit>
      <trans-unit id="44978">
        <source>当前会话的根上下文。</source>
        <target state="needs-translation">当前会话的根上下文。</target>
      </trans-unit>
      <trans-unit id="44980">
        <source>session.bot</source>
        <target state="needs-translation">session.bot</target>
      </trans-unit>
      <trans-unit id="44982">
        <source>类型: [`Bot`](./bot.md)</source>
        <target state="needs-translation">类型: [`Bot`](./bot.md)</target>
      </trans-unit>
      <trans-unit id="44984">
        <source>当前会话绑定的机器人实例。</source>
        <target state="needs-translation">当前会话绑定的机器人实例。</target>
      </trans-unit>
      <trans-unit id="44986">
        <source>session.channel</source>
        <target state="needs-translation">session.channel</target>
      </trans-unit>
      <trans-unit id="44988">
        <source>类型: [`Channel`](../database/built-in.md#channel)</source>
        <target state="needs-translation">类型: [`Channel`](../database/built-in.md#channel)</target>
      </trans-unit>
      <trans-unit id="44990">
        <source>只能在中间件或指令内部使用</source>
        <target state="needs-translation">只能在中间件或指令内部使用</target>
      </trans-unit>
      <trans-unit id="44992">
        <source>当前会话绑定的频道数据，是一个可观测对象。</source>
        <target state="needs-translation">当前会话绑定的频道数据，是一个可观测对象。</target>
      </trans-unit>
      <trans-unit id="44994">
        <source>这个属性对应的是 Koishi 内置数据结构中的频道数据，而不是平台的频道数据。</source>
        <target state="needs-translation">这个属性对应的是 Koishi 内置数据结构中的频道数据，而不是平台的频道数据。</target>
      </trans-unit>
      <trans-unit id="44996">
        <source>如果你需要访问平台频道数据，请使用 `session.event.channel`。</source>
        <target state="needs-translation">如果你需要访问平台频道数据，请使用 `session.event.channel`。</target>
      </trans-unit>
      <trans-unit id="44998">
        <source>session.event</source>
        <target state="needs-translation">session.event</target>
      </trans-unit>
      <trans-unit id="45000">
        <source>会话事件数据。</source>
        <target state="needs-translation">会话事件数据。</target>
      </trans-unit>
      <trans-unit id="45002">
        <source>包含了会话中全部可以序列化的资源。</source>
        <target state="needs-translation">包含了会话中全部可以序列化的资源。</target>
      </trans-unit>
      <trans-unit id="45004">
        <source>含有以下属性：</source>
        <target state="needs-translation">含有以下属性：</target>
      </trans-unit>
      <trans-unit id="45006">
        <source>**id:** `number` 事件 ID</source>
        <target state="needs-translation">**id:** `number` 事件 ID</target>
      </trans-unit>
      <trans-unit id="45008">
        <source>**type:** `string` 事件类型</source>
        <target state="needs-translation">**type:** `string` 事件类型</target>
      </trans-unit>
      <trans-unit id="45010">
        <source>**platform:** `string` 接收者的平台名称</source>
        <target state="needs-translation">**platform:** `string` 接收者的平台名称</target>
      </trans-unit>
      <trans-unit id="45012">
        <source>**selfId:** `string` 接收者的平台账号</source>
        <target state="needs-translation">**selfId:** `string` 接收者的平台账号</target>
      </trans-unit>
      <trans-unit id="45014">
        <source>**timestamp:** `number` 事件的时间戳</source>
        <target state="needs-translation">**timestamp:** `number` 事件的时间戳</target>
      </trans-unit>
      <trans-unit id="45016">
        <source>**channel:** [`Channel`](../resources/channel.md) 事件所属的频道</source>
        <target state="needs-translation">**channel:** [`Channel`](../resources/channel.md) 事件所属的频道</target>
      </trans-unit>
      <trans-unit id="45018">
        <source>**guild:** [`Guild`](../resources/guild.md) 事件所属的群组</source>
        <target state="needs-translation">**guild:** [`Guild`](../resources/guild.md) 事件所属的群组</target>
      </trans-unit>
      <trans-unit id="45020">
        <source>**login:** [`Login`](../resources/login.md) 事件的登录信息</source>
        <target state="needs-translation">**login:** [`Login`](../resources/login.md) 事件的登录信息</target>
      </trans-unit>
      <trans-unit id="45022">
        <source>**member:** [`GuildMember`](../resources/member.md) 事件的目标成员</source>
        <target state="needs-translation">**member:** [`GuildMember`](../resources/member.md) 事件的目标成员</target>
      </trans-unit>
      <trans-unit id="45024">
        <source>**message:** [`Message`](../resources/message.md) 事件的消息</source>
        <target state="needs-translation">**message:** [`Message`](../resources/message.md) 事件的消息</target>
      </trans-unit>
      <trans-unit id="45026">
        <source>**operator:** [`User`](../resources/user.md) 事件的操作者</source>
        <target state="needs-translation">**operator:** [`User`](../resources/user.md) 事件的操作者</target>
      </trans-unit>
      <trans-unit id="45028">
        <source>**role:** [`GuildRole`](../resources/role.md) 事件的目标角色</source>
        <target state="needs-translation">**role:** [`GuildRole`](../resources/role.md) 事件的目标角色</target>
      </trans-unit>
      <trans-unit id="45030">
        <source>**user:** [`User`](../resources/user.md) 事件的目标用户</source>
        <target state="needs-translation">**user:** [`User`](../resources/user.md) 事件的目标用户</target>
      </trans-unit>
      <trans-unit id="45032">
        <source>事件中的各属性遵循**资源提升**规则：资源对象的某个字段可以是另一个资源对象，例如消息对象中的 `user` 字段就是一个用户对象。</source>
        <target state="needs-translation">事件中的各属性遵循**资源提升**规则：资源对象的某个字段可以是另一个资源对象，例如消息对象中的 `user` 字段就是一个用户对象。</target>
      </trans-unit>
      <trans-unit id="45034">
        <source>当资源对象出现多级嵌套时，内层的资源将会被统一提升到最外层。</source>
        <target state="needs-translation">当资源对象出现多级嵌套时，内层的资源将会被统一提升到最外层。</target>
      </trans-unit>
      <trans-unit id="45036">
        <source>例如，当接收到消息事件时，事件体中可以访问到 `message`, `member`, `user`, `channel` 等资源，但 `message` 中就不再存在 `member` 和 `user` 字段了。</source>
        <target state="needs-translation">例如，当接收到消息事件时，事件体中可以访问到 `message`, `member`, `user`, `channel` 等资源，但 `message` 中就不再存在 `member` 和 `user` 字段了。</target>
      </trans-unit>
      <trans-unit id="45038">
        <source>要访问事件体内部的属性，可以使用下面介绍的 [访问器属性](#访问器属性)。</source>
        <target state="needs-translation">要访问事件体内部的属性，可以使用下面介绍的 [访问器属性](#访问器属性)。</target>
      </trans-unit>
      <trans-unit id="45040">
        <source>session.user</source>
        <target state="needs-translation">session.user</target>
      </trans-unit>
      <trans-unit id="45042">
        <source>类型: [`User`](../database/built-in.md#user)</source>
        <target state="needs-translation">类型: [`User`](../database/built-in.md#user)</target>
      </trans-unit>
      <trans-unit id="45044">
        <source>只能在中间件或指令内部使用</source>
        <target state="needs-translation">只能在中间件或指令内部使用</target>
      </trans-unit>
      <trans-unit id="45046">
        <source>当前会话绑定的用户数据，是一个可观测对象。</source>
        <target state="needs-translation">当前会话绑定的用户数据，是一个可观测对象。</target>
      </trans-unit>
      <trans-unit id="45048">
        <source>这个属性对应的是 Koishi 内置数据结构中的用户数据，而不是平台的用户数据。</source>
        <target state="needs-translation">这个属性对应的是 Koishi 内置数据结构中的用户数据，而不是平台的用户数据。</target>
      </trans-unit>
      <trans-unit id="45050">
        <source>如果你需要访问平台用户数据，请使用 `session.event.user`。</source>
        <target state="needs-translation">如果你需要访问平台用户数据，请使用 `session.event.user`。</target>
      </trans-unit>
      <trans-unit id="67020">
        <source>访问器属性 {#accessor-property}</source>
        <target state="needs-translation">访问器属性 {#accessor-property}</target>
      </trans-unit>
      <trans-unit id="45054">
        <source>对于部分常用的事件体属性，我们提供了访问器属性。</source>
        <target state="needs-translation">对于部分常用的事件体属性，我们提供了访问器属性。</target>
      </trans-unit>
      <trans-unit id="45056">
        <source>session.author</source>
        <target state="needs-translation">session.author</target>
      </trans-unit>
      <trans-unit id="45058">
        <source>类型: &lt;code&gt;[GuildMember](../resources/member.md) &amp; [User](../resources/user.md)&lt;/code&gt;</source>
        <target state="needs-translation">类型: &lt;code&gt;[GuildMember](../resources/member.md) &amp; [User](../resources/user.md)&lt;/code&gt;</target>
      </trans-unit>
      <trans-unit id="45060">
        <source>完整写法: `{ ...session.event.user, ...session.event.member }`</source>
        <target state="needs-translation">完整写法: `{ ...session.event.user, ...session.event.member }`</target>
      </trans-unit>
      <trans-unit id="45062">
        <source>注意到 `GuildMember` 和 `User` 有部分重叠的字段，例如 `name` 和 `avatar`。</source>
        <target state="needs-translation">注意到 `GuildMember` 和 `User` 有部分重叠的字段，例如 `name` 和 `avatar`。</target>
      </trans-unit>
      <trans-unit id="45064">
        <source>在这种情况下，`GuildMember` 的字段会覆盖 `User` 的字段。</source>
        <target state="needs-translation">在这种情况下，`GuildMember` 的字段会覆盖 `User` 的字段。</target>
      </trans-unit>
      <trans-unit id="45066">
        <source>session.channelId</source>
        <target state="needs-translation">session.channelId</target>
      </trans-unit>
      <trans-unit id="45068">
        <source>类型: `string`</source>
        <target state="needs-translation">类型: `string`</target>
      </trans-unit>
      <trans-unit id="45070">
        <source>完整写法: `session.event.channel.id`</source>
        <target state="needs-translation">完整写法: `session.event.channel.id`</target>
      </trans-unit>
      <trans-unit id="45072">
        <source>session.channelName</source>
        <target state="needs-translation">session.channelName</target>
      </trans-unit>
      <trans-unit id="45074">
        <source>类型: `string`</source>
        <target state="needs-translation">类型: `string`</target>
      </trans-unit>
      <trans-unit id="45076">
        <source>完整写法: `session.event.channel.name`</source>
        <target state="needs-translation">完整写法: `session.event.channel.name`</target>
      </trans-unit>
      <trans-unit id="45078">
        <source>session.content</source>
        <target state="needs-translation">session.content</target>
      </trans-unit>
      <trans-unit id="45080">
        <source>类型: `string`</source>
        <target state="needs-translation">类型: `string`</target>
      </trans-unit>
      <trans-unit id="45082">
        <source>完整写法: `session.event.message.content`</source>
        <target state="needs-translation">完整写法: `session.event.message.content`</target>
      </trans-unit>
      <trans-unit id="45084">
        <source>session.elements</source>
        <target state="needs-translation">session.elements</target>
      </trans-unit>
      <trans-unit id="45086">
        <source>类型: `Element[]`</source>
        <target state="needs-translation">类型: `Element[]`</target>
      </trans-unit>
      <trans-unit id="45088">
        <source>完整写法: `session.event.message.elements`</source>
        <target state="needs-translation">完整写法: `session.event.message.elements`</target>
      </trans-unit>
      <trans-unit id="45090">
        <source>session.guildId</source>
        <target state="needs-translation">session.guildId</target>
      </trans-unit>
      <trans-unit id="45092">
        <source>类型: `string`</source>
        <target state="needs-translation">类型: `string`</target>
      </trans-unit>
      <trans-unit id="45094">
        <source>完整写法: `session.event.guild.id`</source>
        <target state="needs-translation">完整写法: `session.event.guild.id`</target>
      </trans-unit>
      <trans-unit id="45096">
        <source>session.guildName</source>
        <target state="needs-translation">session.guildName</target>
      </trans-unit>
      <trans-unit id="45098">
        <source>类型: `string`</source>
        <target state="needs-translation">类型: `string`</target>
      </trans-unit>
      <trans-unit id="45100">
        <source>完整写法: `session.event.guild.name`</source>
        <target state="needs-translation">完整写法: `session.event.guild.name`</target>
      </trans-unit>
      <trans-unit id="45102">
        <source>session.id</source>
        <target state="needs-translation">session.id</target>
      </trans-unit>
      <trans-unit id="45104">
        <source>类型: `string`</source>
        <target state="needs-translation">类型: `string`</target>
      </trans-unit>
      <trans-unit id="45106">
        <source>完整写法: `session.event.id`</source>
        <target state="needs-translation">完整写法: `session.event.id`</target>
      </trans-unit>
      <trans-unit id="45108">
        <source>session.isDirect</source>
        <target state="needs-translation">session.isDirect</target>
      </trans-unit>
      <trans-unit id="45110">
        <source>类型: `boolean`</source>
        <target state="needs-translation">类型: `boolean`</target>
      </trans-unit>
      <trans-unit id="45112">
        <source>完整写法: `session.event.channel.type === Channel.Type.DIRECT`</source>
        <target state="needs-translation">完整写法: `session.event.channel.type === Channel.Type.DIRECT`</target>
      </trans-unit>
      <trans-unit id="45114">
        <source>session.messageId</source>
        <target state="needs-translation">session.messageId</target>
      </trans-unit>
      <trans-unit id="45116">
        <source>类型: `string`</source>
        <target state="needs-translation">类型: `string`</target>
      </trans-unit>
      <trans-unit id="45118">
        <source>完整写法: `session.event.message.id`</source>
        <target state="needs-translation">完整写法: `session.event.message.id`</target>
      </trans-unit>
      <trans-unit id="45120">
        <source>session.platform</source>
        <target state="needs-translation">session.platform</target>
      </trans-unit>
      <trans-unit id="45122">
        <source>类型: `string`</source>
        <target state="needs-translation">类型: `string`</target>
      </trans-unit>
      <trans-unit id="45124">
        <source>完整写法: `session.event.platform`</source>
        <target state="needs-translation">完整写法: `session.event.platform`</target>
      </trans-unit>
      <trans-unit id="45126">
        <source>session.quote</source>
        <target state="needs-translation">session.quote</target>
      </trans-unit>
      <trans-unit id="45128">
        <source>类型: `Message`</source>
        <target state="needs-translation">类型: `Message`</target>
      </trans-unit>
      <trans-unit id="45130">
        <source>完整写法: `session.event.message.quote`</source>
        <target state="needs-translation">完整写法: `session.event.message.quote`</target>
      </trans-unit>
      <trans-unit id="45132">
        <source>session.selfId</source>
        <target state="needs-translation">session.selfId</target>
      </trans-unit>
      <trans-unit id="45134">
        <source>类型: `string`</source>
        <target state="needs-translation">类型: `string`</target>
      </trans-unit>
      <trans-unit id="45136">
        <source>完整写法: `session.event.selfId`</source>
        <target state="needs-translation">完整写法: `session.event.selfId`</target>
      </trans-unit>
      <trans-unit id="45138">
        <source>session.timestamp</source>
        <target state="needs-translation">session.timestamp</target>
      </trans-unit>
      <trans-unit id="45140">
        <source>类型: `string`</source>
        <target state="needs-translation">类型: `string`</target>
      </trans-unit>
      <trans-unit id="45142">
        <source>完整写法: `session.event.timestamp`</source>
        <target state="needs-translation">完整写法: `session.event.timestamp`</target>
      </trans-unit>
      <trans-unit id="45144">
        <source>session.type</source>
        <target state="needs-translation">session.type</target>
      </trans-unit>
      <trans-unit id="45146">
        <source>类型: `string`</source>
        <target state="needs-translation">类型: `string`</target>
      </trans-unit>
      <trans-unit id="45148">
        <source>完整写法: `session.event.type`</source>
        <target state="needs-translation">完整写法: `session.event.type`</target>
      </trans-unit>
      <trans-unit id="45150">
        <source>session.userId</source>
        <target state="needs-translation">session.userId</target>
      </trans-unit>
      <trans-unit id="45152">
        <source>类型: `string`</source>
        <target state="needs-translation">类型: `string`</target>
      </trans-unit>
      <trans-unit id="45154">
        <source>完整写法: `session.event.user.id`</source>
        <target state="needs-translation">完整写法: `session.event.user.id`</target>
      </trans-unit>
      <trans-unit id="45156">
        <source>实例方法</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">實體方法</target>
      </trans-unit>
      <trans-unit id="45158">
        <source>session.observeUser(fields?)</source>
        <target state="needs-translation">session.observeUser(fields?)</target>
      </trans-unit>
      <trans-unit id="45160">
        <source>观测特定的用户字段，并更新到 [`session.user`](#session-user) 中。</source>
        <target state="needs-translation">观测特定的用户字段，并更新到 [`session.user`](#session-user) 中。</target>
      </trans-unit>
      <trans-unit id="45162">
        <source>**fields:** `Iterable&lt;User.Field&gt;`</source>
        <target state="needs-translation">**fields:** `Iterable&lt;User.Field&gt;`</target>
      </trans-unit>
      <trans-unit id="45164">
        <source>返回值: `Promise&lt;User.Observed&gt;`</source>
        <target state="needs-translation">返回值: `Promise&lt;User.Observed&gt;`</target>
      </trans-unit>
      <trans-unit id="45166">
        <source>session.observeChannel(fields?)</source>
        <target state="needs-translation">session.observeChannel(fields?)</target>
      </trans-unit>
      <trans-unit id="45168">
        <source>观测特定的用户字段，并更新到 [`session.channel`](#session-channel) 中。</source>
        <target state="needs-translation">观测特定的用户字段，并更新到 [`session.channel`](#session-channel) 中。</target>
      </trans-unit>
      <trans-unit id="45170">
        <source>**fields:** `Iterable&lt;Channel.Field&gt;`</source>
        <target state="needs-translation">**fields:** `Iterable&lt;Channel.Field&gt;`</target>
      </trans-unit>
      <trans-unit id="45172">
        <source>返回值: `Promise&lt;Channel.Observed&gt;`</source>
        <target state="needs-translation">返回值: `Promise&lt;Channel.Observed&gt;`</target>
      </trans-unit>
      <trans-unit id="45174">
        <source>session.send(message)</source>
        <target state="needs-translation">session.send(message)</target>
      </trans-unit>
      <trans-unit id="45176">
        <source>**message:** `string` 要发送的内容</source>
        <target state="needs-translation">**message:** `string` 要发送的内容</target>
      </trans-unit>
      <trans-unit id="45178">
        <source>返回值: `Promise&lt;void&gt;`</source>
        <target state="needs-translation">返回值: `Promise&lt;void&gt;`</target>
      </trans-unit>
      <trans-unit id="45180">
        <source>在当前上下文发送消息。</source>
        <target state="needs-translation">在当前上下文发送消息。</target>
      </trans-unit>
      <trans-unit id="45182">
        <source>session.sendQueued(message, delay?)</source>
        <target state="needs-translation">session.sendQueued(message, delay?)</target>
      </trans-unit>
      <trans-unit id="45184">
        <source>**message:** `string` 要发送的内容</source>
        <target state="needs-translation">**message:** `string` 要发送的内容</target>
      </trans-unit>
      <trans-unit id="45186">
        <source>**delay:** `number` 与下一条消息的时间间隔，缺省时会使用 [`app.config.delay.queue`](./app.md#options-delay)</source>
        <target state="needs-translation">**delay:** `number` 与下一条消息的时间间隔，缺省时会使用 [`app.config.delay.queue`](./app.md#options-delay)</target>
      </trans-unit>
      <trans-unit id="45188">
        <source>返回值: `Promise&lt;void&gt;`</source>
        <target state="needs-translation">返回值: `Promise&lt;void&gt;`</target>
      </trans-unit>
      <trans-unit id="45190">
        <source>在当前上下文发送消息，并与下一条通过 `session.sendQueued` 发送的消息之间保持一定的时间间隔。</source>
        <target state="needs-translation">在当前上下文发送消息，并与下一条通过 `session.sendQueued` 发送的消息之间保持一定的时间间隔。</target>
      </trans-unit>
      <trans-unit id="45192">
        <source>session.cancelQueued(delay?)</source>
        <target state="needs-translation">session.cancelQueued(delay?)</target>
      </trans-unit>
      <trans-unit id="45194">
        <source>**delay:** `number` 与下一条消息的时间间隔，默认值为 `0`</source>
        <target state="needs-translation">**delay:** `number` 与下一条消息的时间间隔，默认值为 `0`</target>
      </trans-unit>
      <trans-unit id="45196">
        <source>返回值: `Promise&lt;void&gt;`</source>
        <target state="needs-translation">返回值: `Promise&lt;void&gt;`</target>
      </trans-unit>
      <trans-unit id="45198">
        <source>取消当前正在等待发送的消息队列，并重置与下一条通过 `session.sendQueued` 发送的消息之间的时间间隔。</source>
        <target state="needs-translation">取消当前正在等待发送的消息队列，并重置与下一条通过 `session.sendQueued` 发送的消息之间的时间间隔。</target>
      </trans-unit>
      <trans-unit id="45200">
        <source>session.prompt(timeout?)</source>
        <target state="needs-translation">session.prompt(timeout?)</target>
      </trans-unit>
      <trans-unit id="45202">
        <source>**timeout:** `number` 中间件的生效时间，缺省时会使用 [`app.config.delay.prompt`](./app.md#options-delay)</source>
        <target state="needs-translation">**timeout:** `number` 中间件的生效时间，缺省时会使用 [`app.config.delay.prompt`](./app.md#options-delay)</target>
      </trans-unit>
      <trans-unit id="45204">
        <source>返回值: `Promise&lt;string&gt;` 用户输入</source>
        <target state="needs-translation">返回值: `Promise&lt;string&gt;` 用户输入</target>
      </trans-unit>
      <trans-unit id="45206">
        <source>等待当前会话的下一次输入并返回，如果超时则会返回 `null`。</source>
        <target state="needs-translation">等待当前会话的下一次输入并返回，如果超时则会返回 `null`。</target>
      </trans-unit>
      <trans-unit id="45208">
        <source>无论用户输入什么，超时前的下一次输入都不会进入中间件处理流程。</source>
        <target state="needs-translation">无论用户输入什么，超时前的下一次输入都不会进入中间件处理流程。</target>
      </trans-unit>
      <trans-unit id="45210">
        <source>session.prompt(callback, options?)</source>
        <target state="needs-translation">session.prompt(callback, options?)</target>
      </trans-unit>
      <trans-unit id="45212">
        <source>**callback:** `(session: Session) =&gt; Awaitable&lt;T&gt;`</source>
        <target state="needs-translation">**callback:** `(session: Session) =&gt; Awaitable&lt;T&gt;`</target>
      </trans-unit>
      <trans-unit id="45214">
        <source>**options.timeout:** 中间件的生效时间，缺省时会使用 [`app.config.delay.prompt`](./app.md#options-delay)</source>
        <target state="needs-translation">**options.timeout:** 中间件的生效时间，缺省时会使用 [`app.config.delay.prompt`](./app.md#options-delay)</target>
      </trans-unit>
      <trans-unit id="45216">
        <source>返回值: `Promise&lt;T&gt;` 回调函数返回的结果</source>
        <target state="needs-translation">返回值: `Promise&lt;T&gt;` 回调函数返回的结果</target>
      </trans-unit>
      <trans-unit id="64142">
        <source>处理当前会话的下一次输入，如果超时则会返回 `undefined`。</source>
        <target state="needs-translation">处理当前会话的下一次输入，如果超时则会返回 `undefined`。</target>
      </trans-unit>
      <trans-unit id="45220">
        <source>如果回调函数返回值非空，则下一次输入不会进入中间件处理流程。</source>
        <target state="needs-translation">如果回调函数返回值非空，则下一次输入不会进入中间件处理流程。</target>
      </trans-unit>
      <trans-unit id="45222">
        <source>session.suggest(options)</source>
        <target state="needs-translation">session.suggest(options)</target>
      </trans-unit>
      <trans-unit id="45224">
        <source>**options.actual:** `string?` 目标字符串</source>
        <target state="needs-translation">**options.actual:** `string?` 目标字符串</target>
      </trans-unit>
      <trans-unit id="45226">
        <source>**options.expect:** `string[]` 候选项列表</source>
        <target state="needs-translation">**options.expect:** `string[]` 候选项列表</target>
      </trans-unit>
      <trans-unit id="45228">
        <source>**options.prefix:** `string?` 显示在候选输入前的文本</source>
        <target state="needs-translation">**options.prefix:** `string?` 显示在候选输入前的文本</target>
      </trans-unit>
      <trans-unit id="45230">
        <source>**options.suffix:** `string` 当只有一个选项时，显示在候选输入后的文本</source>
        <target state="needs-translation">**options.suffix:** `string` 当只有一个选项时，显示在候选输入后的文本</target>
      </trans-unit>
      <trans-unit id="45232">
        <source>返回值: `Promise&lt;string&gt;`</source>
        <target state="needs-translation">返回值: `Promise&lt;string&gt;`</target>
      </trans-unit>
      <trans-unit id="45234">
        <source>向用户展示候选项并等待输入。</source>
        <target state="needs-translation">向用户展示候选项并等待输入。</target>
      </trans-unit>
      <trans-unit id="45236">
        <source>session.execute(argv, next?)</source>
        <target state="needs-translation">session.execute(argv, next?)</target>
      </trans-unit>
      <trans-unit id="45238">
        <source>**argv:** `string | Argv` 指令文本或运行时参数对象</source>
        <target state="needs-translation">**argv:** `string | Argv` 指令文本或运行时参数对象</target>
      </trans-unit>
      <trans-unit id="45240">
        <source>**next:** [`Next`](../../guide/basic/middleware.md#注册和取消中间件) 回调函数</source>
        <target state="needs-translation">**next:** [`Next`](../../guide/basic/middleware.md#注册和取消中间件) 回调函数</target>
      </trans-unit>
      <trans-unit id="45242">
        <source>返回值: `Promise&lt;void&gt;`</source>
        <target state="needs-translation">返回值: `Promise&lt;void&gt;`</target>
      </trans-unit>
      <trans-unit id="45244">
        <source>执行一个指令。</source>
        <target state="needs-translation">执行一个指令。</target>
      </trans-unit>
      <trans-unit id="45246">
        <source>可以传入一个 argv 对象或者指令对应的文本。</source>
        <target state="needs-translation">可以传入一个 argv 对象或者指令对应的文本。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1432" original="/[koishijs.docs] main/zh-CN/api/database/built-in.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="45248">
        <source>内置数据结构</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">內建資料結構</target>
      </trans-unit>
      <trans-unit id="45250">
        <source>参见：[开发 &gt; 数据库 &gt; 内置数据结构](../../guide/database/builtin.md)</source>
        <target state="needs-translation">参见：[开发 &gt; 数据库 &gt; 内置数据结构](../../guide/database/builtin.md)</target>
      </trans-unit>
      <trans-unit id="45252">
        <source>Koishi 的数据库 API 实际上分为两部分：</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">Koishi 的資料庫 API 實際上分為兩部分：</target>
      </trans-unit>
      <trans-unit id="45254">
        <source>Minato 定义的通用数据库接口，由数据库插件实现</source>
        <target state="needs-translation">Minato 定义的通用数据库接口，由数据库插件实现</target>
      </trans-unit>
      <trans-unit id="45256">
        <source>Koishi 内置数据结构相关的方法，由 Koishi 提供实现</source>
        <target state="needs-translation">Koishi 内置数据结构相关的方法，由 Koishi 提供实现</target>
      </trans-unit>
      <trans-unit id="45258">
        <source>这一页中将仅展示第二部分的内容。</source>
        <target state="needs-translation">这一页中将仅展示第二部分的内容。</target>
      </trans-unit>
      <trans-unit id="45260">
        <source>另一部分的内容请参见 [数据库操作](./database.md)。</source>
        <target state="needs-translation">另一部分的内容请参见 [数据库操作](./database.md)。</target>
      </trans-unit>
      <trans-unit id="45262">
        <source>内置表</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">内建表</target>
      </trans-unit>
      <trans-unit id="45264">
        <source>User</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">User</target>
      </trans-unit>
      <trans-unit id="45266">
        <source>**id:** `id` 用户 ID</source>
        <target state="needs-translation">**id:** `id` 用户 ID</target>
      </trans-unit>
      <trans-unit id="45268">
        <source>**name:** `string` 用户昵称</source>
        <target state="needs-translation">**name:** `string` 用户昵称</target>
      </trans-unit>
      <trans-unit id="45270">
        <source>**authority:** `number` [权限等级](../../guide/database/permission.md)</source>
        <target state="needs-translation">**authority:** `number` [权限等级](../../guide/database/permission.md)</target>
      </trans-unit>
      <trans-unit id="45272">
        <source>**permissions:** `string[]` [权限列表](../../guide/database/permission.md)</source>
        <target state="needs-translation">**permissions:** `string[]` [权限列表](../../guide/database/permission.md)</target>
      </trans-unit>
      <trans-unit id="45274">
        <source>**locales:** `string[]` 语言列表</source>
        <target state="needs-translation">**locales:** `string[]` 语言列表</target>
      </trans-unit>
      <trans-unit id="45276">
        <source>Binding</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">Binding</target>
      </trans-unit>
      <trans-unit id="45278">
        <source>**aid:** `id` 用户 ID</source>
        <target state="needs-translation">**aid:** `id` 用户 ID</target>
      </trans-unit>
      <trans-unit id="45280">
        <source>**platform:** `string` 平台名</source>
        <target state="needs-translation">**platform:** `string` 平台名</target>
      </trans-unit>
      <trans-unit id="45282">
        <source>**pid:** `string` 平台账号</source>
        <target state="needs-translation">**pid:** `string` 平台账号</target>
      </trans-unit>
      <trans-unit id="45284">
        <source>Channel</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">Channel</target>
      </trans-unit>
      <trans-unit id="45286">
        <source>**platform:** `string` 平台名</source>
        <target state="needs-translation">**platform:** `string` 平台名</target>
      </trans-unit>
      <trans-unit id="45288">
        <source>**id:** `string` 平台账号</source>
        <target state="needs-translation">**id:** `string` 平台账号</target>
      </trans-unit>
      <trans-unit id="45290">
        <source>**assignee:** `string` [受理人](../../manual/usage/customize.md#受理人机制)</source>
        <target state="needs-translation">**assignee:** `string` [受理人](../../manual/usage/customize.md#受理人机制)</target>
      </trans-unit>
      <trans-unit id="45292">
        <source>**permissions:** `string[]` [权限列表](../../guide/database/permission.md)</source>
        <target state="needs-translation">**permissions:** `string[]` [权限列表](../../guide/database/permission.md)</target>
      </trans-unit>
      <trans-unit id="45294">
        <source>**locales:** `string[]` 语言列表</source>
        <target state="needs-translation">**locales:** `string[]` 语言列表</target>
      </trans-unit>
      <trans-unit id="45296">
        <source>内置实例方法</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">內建實體方法</target>
      </trans-unit>
      <trans-unit id="45298">
        <source>下列实例方法直接由 @koishijs/core 提供实现。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">下列實體方法直接由 @koishijs/core 提供實現。</target>
      </trans-unit>
      <trans-unit id="45300">
        <source>ctx.database.getUser(platform, id, modifier?)</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">ctx.database.getUser(platform, id, modifier?)</target>
      </trans-unit>
      <trans-unit id="45302">
        <source>**platform:** `string` 平台名</source>
        <target state="needs-translation">**platform:** `string` 平台名</target>
      </trans-unit>
      <trans-unit id="45304">
        <source>**id:** `string` 用户标识符</source>
        <target state="needs-translation">**id:** `string` 用户标识符</target>
      </trans-unit>
      <trans-unit id="45306">
        <source>**modifier:** `QueryModifier&lt;User.Field&gt;` 请求修饰符</source>
        <target state="needs-translation">**modifier:** `QueryModifier&lt;User.Field&gt;` 请求修饰符</target>
      </trans-unit>
      <trans-unit id="45308">
        <source>返回值: `Promise&lt;User&gt;` 用户数据</source>
        <target state="needs-translation">返回值: `Promise&lt;User&gt;` 用户数据</target>
      </trans-unit>
      <trans-unit id="45310">
        <source>向数据库请求用户数据。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">向資料庫請求使用者資料。</target>
      </trans-unit>
      <trans-unit id="45312">
        <source>ctx.database.setUser(platform, id, data)</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">ctx.database.setUser(platform, id, data)</target>
      </trans-unit>
      <trans-unit id="45314">
        <source>**platform:** `string` 平台名</source>
        <target state="needs-translation">**platform:** `string` 平台名</target>
      </trans-unit>
      <trans-unit id="45316">
        <source>**id:** `string` 用户标识符</source>
        <target state="needs-translation">**id:** `string` 用户标识符</target>
      </trans-unit>
      <trans-unit id="45318">
        <source>**data:** `User` 要修改 / 添加的数据</source>
        <target state="needs-translation">**data:** `User` 要修改 / 添加的数据</target>
      </trans-unit>
      <trans-unit id="45320">
        <source>返回值: `Promise&lt;void&gt;`</source>
        <target state="needs-translation">返回值: `Promise&lt;void&gt;`</target>
      </trans-unit>
      <trans-unit id="45322">
        <source>向数据库修改或添加用户数据。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">向資料庫修改或新增使用者資料。</target>
      </trans-unit>
      <trans-unit id="45324">
        <source>ctx.database.getChannel(platform, id, fields?)</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">ctx.database.getChannel(platform, id, fields?)</target>
      </trans-unit>
      <trans-unit id="45326">
        <source>**platform:** `string` 平台名</source>
        <target state="needs-translation">**platform:** `string` 平台名</target>
      </trans-unit>
      <trans-unit id="45328">
        <source>**id:** `string` 频道标识符</source>
        <target state="needs-translation">**id:** `string` 频道标识符</target>
      </trans-unit>
      <trans-unit id="45330">
        <source>**fields:** `QueryModifier&lt;User.Field&gt;` 请求修饰符</source>
        <target state="needs-translation">**fields:** `QueryModifier&lt;User.Field&gt;` 请求修饰符</target>
      </trans-unit>
      <trans-unit id="45332">
        <source>返回值: `Promise&lt;Channel&gt;` 频道数据</source>
        <target state="needs-translation">返回值: `Promise&lt;Channel&gt;` 频道数据</target>
      </trans-unit>
      <trans-unit id="45334">
        <source>向数据库请求频道数据。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">向資料庫請求頻道資料。</target>
      </trans-unit>
      <trans-unit id="45336">
        <source>ctx.database.getAssignedChannels(fields?, platform?, assignees?) &lt;badge type=&quot;danger&quot;&gt;废弃&lt;/badge&gt;</source>
        <target state="needs-translation">ctx.database.getAssignedChannels(fields?, platform?, assignees?) &lt;badge type=&quot;danger&quot;&gt;废弃&lt;/badge&gt;</target>
      </trans-unit>
      <trans-unit id="45338">
        <source>**fields:** `ChannelField[]` 请求的字段，默认为全部字段</source>
        <target state="needs-translation">**fields:** `ChannelField[]` 请求的字段，默认为全部字段</target>
      </trans-unit>
      <trans-unit id="45340">
        <source>**platform:** `string` 平台名，默认为全平台</source>
        <target state="needs-translation">**platform:** `string` 平台名，默认为全平台</target>
      </trans-unit>
      <trans-unit id="45342">
        <source>**assignees:** `string[]` 代理者列表，默认为当前运行的全部机器人</source>
        <target state="needs-translation">**assignees:** `string[]` 代理者列表，默认为当前运行的全部机器人</target>
      </trans-unit>
      <trans-unit id="45344">
        <source>返回值: `Promise&lt;Channel[]&gt;` 频道数据列表</source>
        <target state="needs-translation">返回值: `Promise&lt;Channel[]&gt;` 频道数据列表</target>
      </trans-unit>
      <trans-unit id="45346">
        <source>向数据库请求被特定机器人管理的所有频道数据。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">向資料庫請求被特定機器人管理的所有頻道資料。</target>
      </trans-unit>
      <trans-unit id="45348">
        <source>这里的两个参数可以写任意一个，都可以识别。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">這裡的兩個引數可以寫任意一個，都可以識別。</target>
      </trans-unit>
      <trans-unit id="45350">
        <source>ctx.database.setChannel(platform, id, data)</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">ctx.database.setChannel(platform, id, data)</target>
      </trans-unit>
      <trans-unit id="45352">
        <source>**platform:** `string` 平台名</source>
        <target state="needs-translation">**platform:** `string` 平台名</target>
      </trans-unit>
      <trans-unit id="45354">
        <source>**id:** `number` 频道标识符</source>
        <target state="needs-translation">**id:** `number` 频道标识符</target>
      </trans-unit>
      <trans-unit id="45356">
        <source>**data:** `Channel` 要修改 / 添加的数据</source>
        <target state="needs-translation">**data:** `Channel` 要修改 / 添加的数据</target>
      </trans-unit>
      <trans-unit id="45358">
        <source>返回值: `Promise&lt;void&gt;`</source>
        <target state="needs-translation">返回值: `Promise&lt;void&gt;`</target>
      </trans-unit>
      <trans-unit id="45360">
        <source>向数据库修改或添加频道数据。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">向資料庫修改或新增頻道資料。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1434" original="/[koishijs.docs] main/zh-CN/api/database/database.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="45362">
        <source>数据库操作 (Database)</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">資料庫操作 (Database)</target>
      </trans-unit>
      <trans-unit id="45364">
        <source>参见：[开发 &gt; 数据库 &gt; 基本用法](../../guide/database/)</source>
        <target state="needs-translation">参见：[开发 &gt; 数据库 &gt; 基本用法](../../guide/database/)</target>
      </trans-unit>
      <trans-unit id="45366">
        <source>Koishi 的数据库 API 实际上分为两部分：</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">Koishi 的資料庫 API 實際上分為兩部分：</target>
      </trans-unit>
      <trans-unit id="45368">
        <source>Minato 定义的通用数据库接口，由数据库插件实现</source>
        <target state="needs-translation">Minato 定义的通用数据库接口，由数据库插件实现</target>
      </trans-unit>
      <trans-unit id="45370">
        <source>Koishi 内置数据结构相关的方法，由 Koishi 提供实现</source>
        <target state="needs-translation">Koishi 内置数据结构相关的方法，由 Koishi 提供实现</target>
      </trans-unit>
      <trans-unit id="45372">
        <source>这一页中将仅展示第一部分的内容。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">這一頁中將僅展示第一部分的內容。</target>
      </trans-unit>
      <trans-unit id="45374">
        <source>另一部分的内容请参见 [内置数据结构](./built-in.md)。</source>
        <target state="needs-translation">另一部分的内容请参见 [内置数据结构](./built-in.md)。</target>
      </trans-unit>
      <trans-unit id="45376">
        <source>类型定义</source>
        <target state="needs-translation">类型定义</target>
      </trans-unit>
      <trans-unit id="45378">
        <source>TableLike</source>
        <target state="needs-translation">TableLike</target>
      </trans-unit>
      <trans-unit id="45380">
        <source>一个可用表。</source>
        <target state="needs-translation">一个可用表。</target>
      </trans-unit>
      <trans-unit id="45382">
        <source>该类型可以是数据库中现有的表名或者一个 [`Selection`](./selection.md) 对象。</source>
        <target state="needs-translation">该类型可以是数据库中现有的表名或者一个 [`Selection`](./selection.md) 对象。</target>
      </trans-unit>
      <trans-unit id="45384">
        <source>type TableLike&lt;S&gt; = keyof S | Selection</source>
        <target state="needs-translation">type TableLike&lt;S&gt; = keyof S | Selection</target>
      </trans-unit>
      <trans-unit id="45386">
        <source>TableJoin</source>
        <target state="needs-translation">TableJoin</target>
      </trans-unit>
      <trans-unit id="45388">
        <source>将多个表连接成新的虚拟表。</source>
        <target state="needs-translation">将多个表连接成新的虚拟表。</target>
      </trans-unit>
      <trans-unit id="45390">
        <source>该类型可以是表名数组或者一个由 `TableLike` 构成的字典。</source>
        <target state="needs-translation">该类型可以是表名数组或者一个由 `TableLike` 构成的字典。</target>
      </trans-unit>
      <trans-unit id="45392">
        <source>如果是表名数组，则新的表将会使用这些表名作为字段名；否则将会使用字典的键作为字段名。</source>
        <target state="needs-translation">如果是表名数组，则新的表将会使用这些表名作为字段名；否则将会使用字典的键作为字段名。</target>
      </trans-unit>
      <trans-unit id="45394">
        <source>type TableJoin&lt;S&gt; = (keyof S)[] | Dict&lt;TableLike&lt;S&gt;&gt;</source>
        <target state="needs-translation">type TableJoin&lt;S&gt; = (keyof S)[] | Dict&lt;TableLike&lt;S&gt;&gt;</target>
      </trans-unit>
      <trans-unit id="45396">
        <source>Modifier</source>
        <target state="needs-translation">Modifier</target>
      </trans-unit>
      <trans-unit id="45398">
        <source>对查询的结果进行修饰，包括限制数量、选取字段和排序。</source>
        <target state="needs-translation">对查询的结果进行修饰，包括限制数量、选取字段和排序。</target>
      </trans-unit>
      <trans-unit id="45400">
        <source>type Modifier&lt;K extends string&gt; = K[] | ModifierOptions&lt;K&gt;

interface ModifierOptions&lt;K&gt; {
  limit?: number
  offset?: number
  fields?: K[]
  sort?: Dict&lt;'asc' | 'desc'&gt;
}</source>
        <target state="needs-translation">type Modifier&lt;K extends string&gt; = K[] | ModifierOptions&lt;K&gt;

interface ModifierOptions&lt;K&gt; {
  limit?: number
  offset?: number
  fields?: K[]
  sort?: Dict&lt;'asc' | 'desc'&gt;
}</target>
      </trans-unit>
      <trans-unit id="45402">
        <source>Update</source>
        <target state="needs-translation">Update</target>
      </trans-unit>
      <trans-unit id="45404">
        <source>要更新的数据。</source>
        <target state="needs-translation">要更新的数据。</target>
      </trans-unit>
      <trans-unit id="45406">
        <source>包含任意多个字段，每个字段的值可以是一个固定值或者求值表达式。</source>
        <target state="needs-translation">包含任意多个字段，每个字段的值可以是一个固定值或者求值表达式。</target>
      </trans-unit>
      <trans-unit id="45408">
        <source>type Uneval&lt;T&gt; =
  | T extends number ? Eval.Number
  : T extends string ? Eval.String
  : T extends boolean ? Eval.Boolean
  : T extends Date ? Eval.Date
  : T extends RegExp ? Eval.RegExp
  : T

type Update&lt;S&gt; = {
  [K in keyof S]?: Uneval&lt;S[K]&gt;
}</source>
        <target state="needs-translation">type Uneval&lt;T&gt; =
  | T extends number ? Eval.Number
  : T extends string ? Eval.String
  : T extends boolean ? Eval.Boolean
  : T extends Date ? Eval.Date
  : T extends RegExp ? Eval.RegExp
  : T

type Update&lt;S&gt; = {
  [K in keyof S]?: Uneval&lt;S[K]&gt;
}</target>
      </trans-unit>
      <trans-unit id="45410">
        <source>Stats</source>
        <target state="needs-translation">Stats</target>
      </trans-unit>
      <trans-unit id="45412">
        <source>数据库统计信息。</source>
        <target state="needs-translation">数据库统计信息。</target>
      </trans-unit>
      <trans-unit id="45414">
        <source>interface Stats {
  size: number
  tables: Dict&lt;TableStats&gt;
}

interface TableStats {
  count: number
  size: number
}</source>
        <target state="needs-translation">interface Stats {
  size: number
  tables: Dict&lt;TableStats&gt;
}

interface TableStats {
  count: number
  size: number
}</target>
      </trans-unit>
      <trans-unit id="45416">
        <source>WriteResult</source>
        <target state="needs-translation">WriteResult</target>
      </trans-unit>
      <trans-unit id="45418">
        <source>数据库写入操作的结果。</source>
        <target state="needs-translation">数据库写入操作的结果。</target>
      </trans-unit>
      <trans-unit id="45420">
        <source>export interface WriteResult {
  // upsert 操作中插入数据的行数
  inserted?: number
  // set, upsert, remove 操作中匹配数据的行数
  matched?: number
}</source>
        <target state="needs-translation">export interface WriteResult {
  // upsert 操作中插入数据的行数
  inserted?: number
  // set, upsert, remove 操作中匹配数据的行数
  matched?: number
}</target>
      </trans-unit>
      <trans-unit id="45422">
        <source>实例方法</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">實體方法</target>
      </trans-unit>
      <trans-unit id="45424">
        <source>ctx.database.select(table, query?)</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">ctx.database.select(table, query?)</target>
      </trans-unit>
      <trans-unit id="45426">
        <source>**table:** `string` 表名</source>
        <target state="needs-translation">**table:** `string` 表名</target>
      </trans-unit>
      <trans-unit id="45428">
        <source>**query:** [`Query`](./query.md) 约束条件</source>
        <target state="needs-translation">**query:** [`Query`](./query.md) 约束条件</target>
      </trans-unit>
      <trans-unit id="45430">
        <source>返回值: [`Selection`](./selection.md)</source>
        <target state="needs-translation">返回值: [`Selection`](./selection.md)</target>
      </trans-unit>
      <trans-unit id="45432">
        <source>创建一个新的 `Selection` 对象。</source>
        <target state="needs-translation">创建一个新的 `Selection` 对象。</target>
      </trans-unit>
      <trans-unit id="45434">
        <source>ctx.database.join(tables, query?) &lt;badge type=&quot;warning&quot;&gt;实验性&lt;/badge&gt;</source>
        <target state="needs-translation">ctx.database.join(tables, query?) &lt;badge type=&quot;warning&quot;&gt;实验性&lt;/badge&gt;</target>
      </trans-unit>
      <trans-unit id="45436">
        <source>**tables:** [`TableJoin`](#tablejoin) 用于连接的表</source>
        <target state="needs-translation">**tables:** [`TableJoin`](#tablejoin) 用于连接的表</target>
      </trans-unit>
      <trans-unit id="45438">
        <source>**query:** [`Callback`](./selection.md#callback) 约束条件</source>
        <target state="needs-translation">**query:** [`Callback`](./selection.md#callback) 约束条件</target>
      </trans-unit>
      <trans-unit id="45440">
        <source>返回值: [`Selection`](./selection.md)</source>
        <target state="needs-translation">返回值: [`Selection`](./selection.md)</target>
      </trans-unit>
      <trans-unit id="45442">
        <source>将多个表连接成新的虚拟表。</source>
        <target state="needs-translation">将多个表连接成新的虚拟表。</target>
      </trans-unit>
      <trans-unit id="45444">
        <source>ctx.database.get(table, query, modifier?)</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">ctx.database.get(table, query, modifier?)</target>
      </trans-unit>
      <trans-unit id="45446">
        <source>**table:** `string` 表名</source>
        <target state="needs-translation">**table:** `string` 表名</target>
      </trans-unit>
      <trans-unit id="45448">
        <source>**query:** [`Query`](./query.md) 约束条件</source>
        <target state="needs-translation">**query:** [`Query`](./query.md) 约束条件</target>
      </trans-unit>
      <trans-unit id="45450">
        <source>**modifier:** [`Modifier`](#modifier) 请求修饰符</source>
        <target state="needs-translation">**modifier:** [`Modifier`](#modifier) 请求修饰符</target>
      </trans-unit>
      <trans-unit id="45452">
        <source>返回值: `Promise&lt;any[]&gt;`</source>
        <target state="needs-translation">返回值: `Promise&lt;any[]&gt;`</target>
      </trans-unit>
      <trans-unit id="45454">
        <source>查询数据。</source>
        <target state="needs-translation">查询数据。</target>
      </trans-unit>
      <trans-unit id="45456">
        <source>ctx.database.set(table, query, update)</source>
        <target state="needs-translation">ctx.database.set(table, query, update)</target>
      </trans-unit>
      <trans-unit id="45458">
        <source>**table:** `string` 表名</source>
        <target state="needs-translation">**table:** `string` 表名</target>
      </trans-unit>
      <trans-unit id="45460">
        <source>**query:** [`Query`](./query.md) 约束条件</source>
        <target state="needs-translation">**query:** [`Query`](./query.md) 约束条件</target>
      </trans-unit>
      <trans-unit id="45462">
        <source>**update:** [`Update`](#update) 数据</source>
        <target state="needs-translation">**update:** [`Update`](#update) 数据</target>
      </trans-unit>
      <trans-unit id="45464">
        <source>返回值: [`Promise&lt;WriteResult&gt;`](#writeresult)</source>
        <target state="needs-translation">返回值: [`Promise&lt;WriteResult&gt;`](#writeresult)</target>
      </trans-unit>
      <trans-unit id="45466">
        <source>更新数据。</source>
        <target state="needs-translation">更新数据。</target>
      </trans-unit>
      <trans-unit id="45468">
        <source>返回对象包含本次操作的匹配行数。</source>
        <target state="needs-translation">返回对象包含本次操作的匹配行数。</target>
      </trans-unit>
      <trans-unit id="45470">
        <source>ctx.database.remove(table, query)</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">ctx.database.remove(table, query)</target>
      </trans-unit>
      <trans-unit id="45472">
        <source>**table:** `string` 表名</source>
        <target state="needs-translation">**table:** `string` 表名</target>
      </trans-unit>
      <trans-unit id="45474">
        <source>**query:** [`Query`](./query.md) 约束条件</source>
        <target state="needs-translation">**query:** [`Query`](./query.md) 约束条件</target>
      </trans-unit>
      <trans-unit id="45476">
        <source>返回值: [`Promise&lt;WriteResult&gt;`](#writeresult)</source>
        <target state="needs-translation">返回值: [`Promise&lt;WriteResult&gt;`](#writeresult)</target>
      </trans-unit>
      <trans-unit id="45478">
        <source>删除数据。</source>
        <target state="needs-translation">删除数据。</target>
      </trans-unit>
      <trans-unit id="45480">
        <source>返回对象包含本次操作的匹配行数。</source>
        <target state="needs-translation">返回对象包含本次操作的匹配行数。</target>
      </trans-unit>
      <trans-unit id="45482">
        <source>ctx.database.create(table, data)</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">ctx.database.create(table, data)</target>
      </trans-unit>
      <trans-unit id="45484">
        <source>**table:** `string` 表名</source>
        <target state="needs-translation">**table:** `string` 表名</target>
      </trans-unit>
      <trans-unit id="45486">
        <source>**data:** `any` 数据</source>
        <target state="needs-translation">**data:** `any` 数据</target>
      </trans-unit>
      <trans-unit id="45488">
        <source>返回值: `Promise&lt;any&gt;`</source>
        <target state="needs-translation">返回值: `Promise&lt;any&gt;`</target>
      </trans-unit>
      <trans-unit id="45490">
        <source>插入数据。</source>
        <target state="needs-translation">插入数据。</target>
      </trans-unit>
      <trans-unit id="45492">
        <source>返回值为插入的数据行。</source>
        <target state="needs-translation">返回值为插入的数据行。</target>
      </trans-unit>
      <trans-unit id="45494">
        <source>ctx.database.upsert(table, data, keys?)</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">ctx.database.upsert(table, data, keys?)</target>
      </trans-unit>
      <trans-unit id="45496">
        <source>**table:** `string` 表名</source>
        <target state="needs-translation">**table:** `string` 表名</target>
      </trans-unit>
      <trans-unit id="45498">
        <source>**data:** [`Update[]`](#update) 数据</source>
        <target state="needs-translation">**data:** [`Update[]`](#update) 数据</target>
      </trans-unit>
      <trans-unit id="45500">
        <source>**keys:** `string | string[]` 用于索引的字段</source>
        <target state="needs-translation">**keys:** `string | string[]` 用于索引的字段</target>
      </trans-unit>
      <trans-unit id="45502">
        <source>返回值: [`Promise&lt;WriteResult&gt;`](#writeresult)</source>
        <target state="needs-translation">返回值: [`Promise&lt;WriteResult&gt;`](#writeresult)</target>
      </trans-unit>
      <trans-unit id="45504">
        <source>插入或更新数据。</source>
        <target state="needs-translation">插入或更新数据。</target>
      </trans-unit>
      <trans-unit id="45506">
        <source>返回对象包含本次操作的插入行数和匹配行数。</source>
        <target state="needs-translation">返回对象包含本次操作的插入行数和匹配行数。</target>
      </trans-unit>
      <trans-unit id="45508">
        <source>ctx.database.eval(table, expr, query?)</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">ctx.database.eval(table, expr, query?)</target>
      </trans-unit>
      <trans-unit id="45510">
        <source>**table:** `string` 表名</source>
        <target state="needs-translation">**table:** `string` 表名</target>
      </trans-unit>
      <trans-unit id="45512">
        <source>**expr:** [`Callback`](./selection.md#callback) 用于计算的表达式</source>
        <target state="needs-translation">**expr:** [`Callback`](./selection.md#callback) 用于计算的表达式</target>
      </trans-unit>
      <trans-unit id="45514">
        <source>**query:** [`Query`](./query.md) 约束条件</source>
        <target state="needs-translation">**query:** [`Query`](./query.md) 约束条件</target>
      </trans-unit>
      <trans-unit id="45516">
        <source>返回值: `Promise&lt;any&gt;`</source>
        <target state="needs-translation">返回值: `Promise&lt;any&gt;`</target>
      </trans-unit>
      <trans-unit id="45518">
        <source>计算聚合表达式。</source>
        <target state="needs-translation">计算聚合表达式。</target>
      </trans-unit>
      <trans-unit id="45528">
        <source>ctx.database.stats() &lt;badge type=&quot;warning&quot;&gt;实验性&lt;/badge&gt;</source>
        <target state="needs-translation">ctx.database.stats() &lt;badge type=&quot;warning&quot;&gt;实验性&lt;/badge&gt;</target>
      </trans-unit>
      <trans-unit id="45530">
        <source>返回值: [`Promise&lt;Stats&gt;`](#stats)</source>
        <target state="needs-translation">返回值: [`Promise&lt;Stats&gt;`](#stats)</target>
      </trans-unit>
      <trans-unit id="45532">
        <source>获取统计信息。</source>
        <target state="needs-translation">获取统计信息。</target>
      </trans-unit>
      <trans-unit id="45520">
        <source>ctx.database.drop(table)</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">ctx.database.drop(table)</target>
      </trans-unit>
      <trans-unit id="45522">
        <source>**table:** `string` 表名</source>
        <target state="needs-translation">**table:** `string` 表名</target>
      </trans-unit>
      <trans-unit id="45524">
        <source>返回值: `Promise&lt;void&gt;`</source>
        <target state="needs-translation">返回值: `Promise&lt;void&gt;`</target>
      </trans-unit>
      <trans-unit id="45526">
        <source>删除表。</source>
        <target state="needs-translation">删除表。</target>
      </trans-unit>
      <trans-unit id="64484">
        <source>如果你是插件开发者，并希望重构插件的数据库结构，我们建议使用 [整表迁移](../../guide/database/model.md#整表迁移)，以防止用户数据丢失。</source>
        <target state="needs-translation">如果你是插件开发者，并希望重构插件的数据库结构，我们建议使用 [整表迁移](../../guide/database/model.md#整表迁移)，以防止用户数据丢失。</target>
      </trans-unit>
      <trans-unit id="64486">
        <source>:::</source>
        <target state="needs-translation">:::</target>
      </trans-unit>
      <trans-unit id="64488">
        <source>ctx.database.dropAll()</source>
        <target state="needs-translation">ctx.database.dropAll()</target>
      </trans-unit>
      <trans-unit id="64490">
        <source>返回值: `Promise&lt;void&gt;`</source>
        <target state="needs-translation">返回值: `Promise&lt;void&gt;`</target>
      </trans-unit>
      <trans-unit id="64492">
        <source>删除所有表。</source>
        <target state="needs-translation">删除所有表。</target>
      </trans-unit>
      <trans-unit id="64494">
        <source>这是一个危险操作，删除表后将无法恢复数据。</source>
        <target state="needs-translation">这是一个危险操作，删除表后将无法恢复数据。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1436" original="/[koishijs.docs] main/zh-CN/api/database/evaluation.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="45534">
        <source>求值表达式 (Eval)</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">求值表示式 (Eval)</target>
      </trans-unit>
      <trans-unit id="45536">
        <source>参见：[开发 &gt; 数据库 &gt; 进阶查询技巧](../../guide/database/selection.md)</source>
        <target state="needs-translation">参见：[开发 &gt; 数据库 &gt; 进阶查询技巧](../../guide/database/selection.md)</target>
      </trans-unit>
      <trans-unit id="64980">
        <source>与查询表达式不同，求值表达式是一组静态 API。</source>
        <target state="needs-translation">与查询表达式不同，求值表达式是一组静态 API。</target>
      </trans-unit>
      <trans-unit id="45540">
        <source>你可以从 Koishi 中直接导入：</source>
        <target state="needs-translation">你可以从 Koishi 中直接导入：</target>
      </trans-unit>
      <trans-unit id="64982">
        <source>import { $ } from 'koishi'</source>
        <target state="needs-translation">import { $ } from 'koishi'</target>
      </trans-unit>
      <trans-unit id="45544">
        <source>类型定义</source>
        <target state="needs-translation">类型定义</target>
      </trans-unit>
      <trans-unit id="45546">
        <source>\{Type\}</source>
        <target state="needs-translation">\{Type\}</target>
      </trans-unit>
      <trans-unit id="45548">
        <source>本节中使用的 `Number`, `String`, `Boolean`, `Any` 并非 JavaScript 中的内置函数，而是对应于 `number`, `string`, `boolean`, `any` 类型的求值表达式。</source>
        <target state="needs-translation">本节中使用的 `Number`, `String`, `Boolean`, `Any` 并非 JavaScript 中的内置函数，而是对应于 `number`, `string`, `boolean`, `any` 类型的求值表达式。</target>
      </trans-unit>
      <trans-unit id="45550">
        <source>例如，当一个表的 `foo` 字段有数值类型时，求值表达式 `$.gt(row.x, 1)` 是合法的，并且返回值的类型是 `Boolean`。</source>
        <target state="needs-translation">例如，当一个表的 `foo` 字段有数值类型时，求值表达式 `$.gt(row.x, 1)` 是合法的，并且返回值的类型是 `Boolean`。</target>
      </trans-unit>
      <trans-unit id="45552">
        <source>type $Date = Date
type $RegExp = RegExp

namespace Eval {
  type Number = number | EvalExpr&lt;number&gt;
  type String = string | EvalExpr&lt;string&gt;
  type Boolean = boolean | EvalExpr&lt;boolean&gt;
  type Date = $Date | EvalExpr&lt;$Date&gt;
  type RegExp = $RegExp | EvalExpr&lt;$RegExp&gt;
  type Any = string | number | boolean | $Date | $RegExp | EvalExpr&lt;any&gt;
}</source>
        <target state="needs-translation">type $Date = Date
type $RegExp = RegExp

namespace Eval {
  type Number = number | EvalExpr&lt;number&gt;
  type String = string | EvalExpr&lt;string&gt;
  type Boolean = boolean | EvalExpr&lt;boolean&gt;
  type Date = $Date | EvalExpr&lt;$Date&gt;
  type RegExp = $RegExp | EvalExpr&lt;$RegExp&gt;
  type Any = string | number | boolean | $Date | $RegExp | EvalExpr&lt;any&gt;
}</target>
      </trans-unit>
      <trans-unit id="45554">
        <source>EvalExpr</source>
        <target state="needs-translation">EvalExpr</target>
      </trans-unit>
      <trans-unit id="45556">
        <source>本节中任意求值表达式的返回值。</source>
        <target state="needs-translation">本节中任意求值表达式的返回值。</target>
      </trans-unit>
      <trans-unit id="45558">
        <source>数值运算</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">數值運算</target>
      </trans-unit>
      <trans-unit id="45560">
        <source>$.add(...values)</source>
        <target state="needs-translation">$.add(...values)</target>
      </trans-unit>
      <trans-unit id="45562">
        <source>**values:** `Number[]` 待相加的值</source>
        <target state="needs-translation">**values:** `Number[]` 待相加的值</target>
      </trans-unit>
      <trans-unit id="45564">
        <source>返回值: `EvalExpr&lt;number&gt;`</source>
        <target state="needs-translation">返回值: `EvalExpr&lt;number&gt;`</target>
      </trans-unit>
      <trans-unit id="45566">
        <source>将一组值相加。</source>
        <target state="needs-translation">将一组值相加。</target>
      </trans-unit>
      <trans-unit id="45568">
        <source>$.subtract(x, y)</source>
        <target state="needs-translation">$.subtract(x, y)</target>
      </trans-unit>
      <trans-unit id="45570">
        <source>**x:** `Number` 被减数</source>
        <target state="needs-translation">**x:** `Number` 被减数</target>
      </trans-unit>
      <trans-unit id="45572">
        <source>**y:** `Number` 减数</source>
        <target state="needs-translation">**y:** `Number` 减数</target>
      </trans-unit>
      <trans-unit id="45574">
        <source>返回值: `EvalExpr&lt;number&gt;`</source>
        <target state="needs-translation">返回值: `EvalExpr&lt;number&gt;`</target>
      </trans-unit>
      <trans-unit id="45576">
        <source>将两个值相减。</source>
        <target state="needs-translation">将两个值相减。</target>
      </trans-unit>
      <trans-unit id="45578">
        <source>$.multiply(...values)</source>
        <target state="needs-translation">$.multiply(...values)</target>
      </trans-unit>
      <trans-unit id="45580">
        <source>**values:** `Number[]` 待相乘的值</source>
        <target state="needs-translation">**values:** `Number[]` 待相乘的值</target>
      </trans-unit>
      <trans-unit id="45582">
        <source>返回值: `EvalExpr&lt;number&gt;`</source>
        <target state="needs-translation">返回值: `EvalExpr&lt;number&gt;`</target>
      </trans-unit>
      <trans-unit id="45584">
        <source>将一组值相乘。</source>
        <target state="needs-translation">将一组值相乘。</target>
      </trans-unit>
      <trans-unit id="45586">
        <source>$.divide(x, y)</source>
        <target state="needs-translation">$.divide(x, y)</target>
      </trans-unit>
      <trans-unit id="45588">
        <source>**x:** `Number` 被除数</source>
        <target state="needs-translation">**x:** `Number` 被除数</target>
      </trans-unit>
      <trans-unit id="45590">
        <source>**y:** `Number` 除数</source>
        <target state="needs-translation">**y:** `Number` 除数</target>
      </trans-unit>
      <trans-unit id="45592">
        <source>返回值: `EvalExpr&lt;number&gt;`</source>
        <target state="needs-translation">返回值: `EvalExpr&lt;number&gt;`</target>
      </trans-unit>
      <trans-unit id="45594">
        <source>将两个值相除。</source>
        <target state="needs-translation">将两个值相除。</target>
      </trans-unit>
      <trans-unit id="45596">
        <source>比较运算</source>
        <target state="needs-translation">比较运算</target>
      </trans-unit>
      <trans-unit id="45598">
        <source>$.eq(...values)</source>
        <target state="needs-translation">$.eq(...values)</target>
      </trans-unit>
      <trans-unit id="45600">
        <source>**values:** `Any[]` 待比较的值</source>
        <target state="needs-translation">**values:** `Any[]` 待比较的值</target>
      </trans-unit>
      <trans-unit id="45602">
        <source>返回值: `EvalExpr&lt;boolean&gt;`</source>
        <target state="needs-translation">返回值: `EvalExpr&lt;boolean&gt;`</target>
      </trans-unit>
      <trans-unit id="45604">
        <source>判断一组值是否相等。</source>
        <target state="needs-translation">判断一组值是否相等。</target>
      </trans-unit>
      <trans-unit id="45606">
        <source>$.ne(x, y)</source>
        <target state="needs-translation">$.ne(x, y)</target>
      </trans-unit>
      <trans-unit id="45608">
        <source>**x:** `Any` 待比较的值</source>
        <target state="needs-translation">**x:** `Any` 待比较的值</target>
      </trans-unit>
      <trans-unit id="45610">
        <source>**y:** `Any` 待比较的值</source>
        <target state="needs-translation">**y:** `Any` 待比较的值</target>
      </trans-unit>
      <trans-unit id="45612">
        <source>返回值: `EvalExpr&lt;boolean&gt;`</source>
        <target state="needs-translation">返回值: `EvalExpr&lt;boolean&gt;`</target>
      </trans-unit>
      <trans-unit id="45614">
        <source>判断 `x != y`。</source>
        <target state="needs-translation">判断 `x != y`。</target>
      </trans-unit>
      <trans-unit id="45616">
        <source>$.gt(x, y)</source>
        <target state="needs-translation">$.gt(x, y)</target>
      </trans-unit>
      <trans-unit id="45618">
        <source>**x:** `Number` 待比较的值</source>
        <target state="needs-translation">**x:** `Number` 待比较的值</target>
      </trans-unit>
      <trans-unit id="45620">
        <source>**y:** `Number` 待比较的值</source>
        <target state="needs-translation">**y:** `Number` 待比较的值</target>
      </trans-unit>
      <trans-unit id="45622">
        <source>返回值: `EvalExpr&lt;boolean&gt;`</source>
        <target state="needs-translation">返回值: `EvalExpr&lt;boolean&gt;`</target>
      </trans-unit>
      <trans-unit id="45624">
        <source>判断 `x &gt; y`。</source>
        <target state="needs-translation">判断 `x &gt; y`。</target>
      </trans-unit>
      <trans-unit id="45626">
        <source>$.gte(x, y)</source>
        <target state="needs-translation">$.gte(x, y)</target>
      </trans-unit>
      <trans-unit id="45628">
        <source>**x:** `Number` 待比较的值</source>
        <target state="needs-translation">**x:** `Number` 待比较的值</target>
      </trans-unit>
      <trans-unit id="45630">
        <source>**y:** `Number` 待比较的值</source>
        <target state="needs-translation">**y:** `Number` 待比较的值</target>
      </trans-unit>
      <trans-unit id="45632">
        <source>返回值: `EvalExpr&lt;boolean&gt;`</source>
        <target state="needs-translation">返回值: `EvalExpr&lt;boolean&gt;`</target>
      </trans-unit>
      <trans-unit id="45634">
        <source>判断 `x &gt;= y`。</source>
        <target state="needs-translation">判断 `x &gt;= y`。</target>
      </trans-unit>
      <trans-unit id="45636">
        <source>$.lt(x, y)</source>
        <target state="needs-translation">$.lt(x, y)</target>
      </trans-unit>
      <trans-unit id="45638">
        <source>**x:** `Number` 待比较的值</source>
        <target state="needs-translation">**x:** `Number` 待比较的值</target>
      </trans-unit>
      <trans-unit id="45640">
        <source>**y:** `Number` 待比较的值</source>
        <target state="needs-translation">**y:** `Number` 待比较的值</target>
      </trans-unit>
      <trans-unit id="45642">
        <source>返回值: `EvalExpr&lt;boolean&gt;`</source>
        <target state="needs-translation">返回值: `EvalExpr&lt;boolean&gt;`</target>
      </trans-unit>
      <trans-unit id="45644">
        <source>判断 `x &lt; y`。</source>
        <target state="needs-translation">判断 `x &lt; y`。</target>
      </trans-unit>
      <trans-unit id="45646">
        <source>$.lte(x, y)</source>
        <target state="needs-translation">$.lte(x, y)</target>
      </trans-unit>
      <trans-unit id="45648">
        <source>**x:** `Number` 待比较的值</source>
        <target state="needs-translation">**x:** `Number` 待比较的值</target>
      </trans-unit>
      <trans-unit id="45650">
        <source>**y:** `Number` 待比较的值</source>
        <target state="needs-translation">**y:** `Number` 待比较的值</target>
      </trans-unit>
      <trans-unit id="45652">
        <source>返回值: `EvalExpr&lt;boolean&gt;`</source>
        <target state="needs-translation">返回值: `EvalExpr&lt;boolean&gt;`</target>
      </trans-unit>
      <trans-unit id="45654">
        <source>判断 `x &lt;= y`。</source>
        <target state="needs-translation">判断 `x &lt;= y`。</target>
      </trans-unit>
      <trans-unit id="45656">
        <source>字符串运算</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">字串運算</target>
      </trans-unit>
      <trans-unit id="45658">
        <source>$.concat(...values)</source>
        <target state="needs-translation">$.concat(...values)</target>
      </trans-unit>
      <trans-unit id="45660">
        <source>**values:** `String[]` 待连接的值</source>
        <target state="needs-translation">**values:** `String[]` 待连接的值</target>
      </trans-unit>
      <trans-unit id="45662">
        <source>返回值: `EvalExpr&lt;string&gt;`</source>
        <target state="needs-translation">返回值: `EvalExpr&lt;string&gt;`</target>
      </trans-unit>
      <trans-unit id="45664">
        <source>连接一组字符串。</source>
        <target state="needs-translation">连接一组字符串。</target>
      </trans-unit>
      <trans-unit id="45666">
        <source>布尔运算</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">布林運算</target>
      </trans-unit>
      <trans-unit id="45668">
        <source>$.and(...values)</source>
        <target state="needs-translation">$.and(...values)</target>
      </trans-unit>
      <trans-unit id="45670">
        <source>**values:** `Boolean[]` 待计算的值</source>
        <target state="needs-translation">**values:** `Boolean[]` 待计算的值</target>
      </trans-unit>
      <trans-unit id="45672">
        <source>返回值: `EvalExpr&lt;boolean&gt;`</source>
        <target state="needs-translation">返回值: `EvalExpr&lt;boolean&gt;`</target>
      </trans-unit>
      <trans-unit id="45674">
        <source>将一组布尔值做与运算。</source>
        <target state="needs-translation">将一组布尔值做与运算。</target>
      </trans-unit>
      <trans-unit id="45676">
        <source>$.or(...values)</source>
        <target state="needs-translation">$.or(...values)</target>
      </trans-unit>
      <trans-unit id="45678">
        <source>**values:** `Boolean[]` 待计算的值</source>
        <target state="needs-translation">**values:** `Boolean[]` 待计算的值</target>
      </trans-unit>
      <trans-unit id="45680">
        <source>返回值: `EvalExpr&lt;boolean&gt;`</source>
        <target state="needs-translation">返回值: `EvalExpr&lt;boolean&gt;`</target>
      </trans-unit>
      <trans-unit id="45682">
        <source>将一组布尔值做或运算。</source>
        <target state="needs-translation">将一组布尔值做或运算。</target>
      </trans-unit>
      <trans-unit id="45684">
        <source>$.not(values)</source>
        <target state="needs-translation">$.not(values)</target>
      </trans-unit>
      <trans-unit id="45686">
        <source>**values:** `Boolean` 待计算的值</source>
        <target state="needs-translation">**values:** `Boolean` 待计算的值</target>
      </trans-unit>
      <trans-unit id="45688">
        <source>返回值: `EvalExpr&lt;boolean&gt;`</source>
        <target state="needs-translation">返回值: `EvalExpr&lt;boolean&gt;`</target>
      </trans-unit>
      <trans-unit id="45690">
        <source>将一个布尔值取反。</source>
        <target state="needs-translation">将一个布尔值取反。</target>
      </trans-unit>
      <trans-unit id="45692">
        <source>聚合运算</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">聚合運算</target>
      </trans-unit>
      <trans-unit id="45694">
        <source>$.sum(x)</source>
        <target state="needs-translation">$.sum(x)</target>
      </trans-unit>
      <trans-unit id="45696">
        <source>**x:** `Number` 数值表达式</source>
        <target state="needs-translation">**x:** `Number` 数值表达式</target>
      </trans-unit>
      <trans-unit id="45698">
        <source>返回值: `EvalExpr&lt;number&gt;`</source>
        <target state="needs-translation">返回值: `EvalExpr&lt;number&gt;`</target>
      </trans-unit>
      <trans-unit id="45700">
        <source>累加一组值。</source>
        <target state="needs-translation">累加一组值。</target>
      </trans-unit>
      <trans-unit id="45702">
        <source>$.avg(x)</source>
        <target state="needs-translation">$.avg(x)</target>
      </trans-unit>
      <trans-unit id="45704">
        <source>**x:** `Number` 数值表达式</source>
        <target state="needs-translation">**x:** `Number` 数值表达式</target>
      </trans-unit>
      <trans-unit id="45706">
        <source>返回值: `EvalExpr&lt;number&gt;`</source>
        <target state="needs-translation">返回值: `EvalExpr&lt;number&gt;`</target>
      </trans-unit>
      <trans-unit id="45708">
        <source>计算一组值的平均值。</source>
        <target state="needs-translation">计算一组值的平均值。</target>
      </trans-unit>
      <trans-unit id="45710">
        <source>$.min(x)</source>
        <target state="needs-translation">$.min(x)</target>
      </trans-unit>
      <trans-unit id="45712">
        <source>**x:** `Number` 数值表达式</source>
        <target state="needs-translation">**x:** `Number` 数值表达式</target>
      </trans-unit>
      <trans-unit id="45714">
        <source>返回值: `EvalExpr&lt;number&gt;`</source>
        <target state="needs-translation">返回值: `EvalExpr&lt;number&gt;`</target>
      </trans-unit>
      <trans-unit id="45716">
        <source>计算一组值的最小值。</source>
        <target state="needs-translation">计算一组值的最小值。</target>
      </trans-unit>
      <trans-unit id="45718">
        <source>$.max(x)</source>
        <target state="needs-translation">$.max(x)</target>
      </trans-unit>
      <trans-unit id="45720">
        <source>**x:** `Number` 数值表达式</source>
        <target state="needs-translation">**x:** `Number` 数值表达式</target>
      </trans-unit>
      <trans-unit id="45722">
        <source>返回值: `EvalExpr&lt;number&gt;`</source>
        <target state="needs-translation">返回值: `EvalExpr&lt;number&gt;`</target>
      </trans-unit>
      <trans-unit id="45724">
        <source>计算一组值的最大值。</source>
        <target state="needs-translation">计算一组值的最大值。</target>
      </trans-unit>
      <trans-unit id="45726">
        <source>$.count(x)</source>
        <target state="needs-translation">$.count(x)</target>
      </trans-unit>
      <trans-unit id="45728">
        <source>**x:** `Any` 任意表达式</source>
        <target state="needs-translation">**x:** `Any` 任意表达式</target>
      </trans-unit>
      <trans-unit id="45730">
        <source>返回值: `EvalExpr&lt;number&gt;`</source>
        <target state="needs-translation">返回值: `EvalExpr&lt;number&gt;`</target>
      </trans-unit>
      <trans-unit id="45732">
        <source>统计不同元素的数量。</source>
        <target state="needs-translation">统计不同元素的数量。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1438" original="/[koishijs.docs] main/zh-CN/api/database/model.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="45734">
        <source>数据模型 (Model)</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">資料模型 (Model)</target>
      </trans-unit>
      <trans-unit id="45736">
        <source>参见：[开发 &gt; 数据库 &gt; 数据模型](../../guide/database/model.md)</source>
        <target state="needs-translation">参见：[开发 &gt; 数据库 &gt; 数据模型](../../guide/database/model.md)</target>
      </trans-unit>
      <trans-unit id="45738">
        <source>`ctx.model` 是 Koishi 的内置服务。</source>
        <target state="needs-translation">`ctx.model` 是 Koishi 的内置服务。</target>
      </trans-unit>
      <trans-unit id="45740">
        <source>其上的方法可以用于定义或扩展数据表及其字段。</source>
        <target state="needs-translation">其上的方法可以用于定义或扩展数据表及其字段。</target>
      </trans-unit>
      <trans-unit id="45742">
        <source>数据类型</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">資料型別</target>
      </trans-unit>
      <trans-unit id="45744">
        <source>数据类型会被用于 [`model.extend()`](#model-extend) 方法中，其定义如下：</source>
        <target state="needs-translation">数据类型会被用于 [`model.extend()`](#model-extend) 方法中，其定义如下：</target>
      </trans-unit>
      <trans-unit id="45746">
        <source>export interface Field&lt;T&gt; {
  type: string
  length?: number
  nullable?: boolean
  initial?: T
  comment?: string
  legacy?: string[]
}</source>
        <target state="needs-translation">export interface Field&lt;T&gt; {
  type: string
  length?: number
  nullable?: boolean
  initial?: T
  comment?: string
  legacy?: string[]
}</target>
      </trans-unit>
      <trans-unit id="45748">
        <source>数值类型</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">數值型別</target>
      </trans-unit>
      <trans-unit id="45750">
        <source>名称</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">名稱</target>
      </trans-unit>
      <trans-unit id="45752">
        <source>TS 类型</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">TS 型別</target>
      </trans-unit>
      <trans-unit id="45754">
        <source>默认长度</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">預設長度</target>
      </trans-unit>
      <trans-unit id="45756">
        <source>默认初始值</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">預設初始值</target>
      </trans-unit>
      <trans-unit id="45758">
        <source>说明</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">說明</target>
      </trans-unit>
      <trans-unit id="45760">
        <source>integer</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">integer</target>
      </trans-unit>
      <trans-unit id="45762">
        <source>`number`</source>
        <target state="needs-translation">`number`</target>
      </trans-unit>
      <trans-unit id="65048">
        <source>4</source>
        <target state="needs-translation">4</target>
      </trans-unit>
      <trans-unit id="45766">
        <source>`0`</source>
        <target state="needs-translation">`0`</target>
      </trans-unit>
      <trans-unit id="45768">
        <source>有符号整型数，长度决定了数据的范围</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">有符號整型數，長度決定了資料的範圍</target>
      </trans-unit>
      <trans-unit id="45770">
        <source>unsigned</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">unsigned</target>
      </trans-unit>
      <trans-unit id="45772">
        <source>`number`</source>
        <target state="needs-translation">`number`</target>
      </trans-unit>
      <trans-unit id="65050">
        <source>4</source>
        <target state="needs-translation">4</target>
      </trans-unit>
      <trans-unit id="45776">
        <source>`0`</source>
        <target state="needs-translation">`0`</target>
      </trans-unit>
      <trans-unit id="45778">
        <source>无符号整型数，长度决定了数据的范围</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">無符號整型數，長度決定了資料的範圍</target>
      </trans-unit>
      <trans-unit id="45780">
        <source>float</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">float</target>
      </trans-unit>
      <trans-unit id="45782">
        <source>`number`</source>
        <target state="needs-translation">`number`</target>
      </trans-unit>
      <trans-unit id="45784">
        <source>固定长度</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">固定長度</target>
      </trans-unit>
      <trans-unit id="45786">
        <source>`0`</source>
        <target state="needs-translation">`0`</target>
      </trans-unit>
      <trans-unit id="45788">
        <source>单精度浮点数</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">單精度浮點數</target>
      </trans-unit>
      <trans-unit id="45790">
        <source>double</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">double</target>
      </trans-unit>
      <trans-unit id="45792">
        <source>`number`</source>
        <target state="needs-translation">`number`</target>
      </trans-unit>
      <trans-unit id="45794">
        <source>固定长度</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">固定長度</target>
      </trans-unit>
      <trans-unit id="45796">
        <source>`0`</source>
        <target state="needs-translation">`0`</target>
      </trans-unit>
      <trans-unit id="45798">
        <source>双精度浮点数</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">雙精度浮點數</target>
      </trans-unit>
      <trans-unit id="45800">
        <source>字符串类型</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">字串型別</target>
      </trans-unit>
      <trans-unit id="45802">
        <source>名称</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">名稱</target>
      </trans-unit>
      <trans-unit id="45804">
        <source>TS 类型</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">TS 型別</target>
      </trans-unit>
      <trans-unit id="45806">
        <source>默认长度</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">預設長度</target>
      </trans-unit>
      <trans-unit id="45808">
        <source>默认初始值</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">預設初始值</target>
      </trans-unit>
      <trans-unit id="45810">
        <source>说明</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">說明</target>
      </trans-unit>
      <trans-unit id="45812">
        <source>char</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">char</target>
      </trans-unit>
      <trans-unit id="45814">
        <source>`string`</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">`string`</target>
      </trans-unit>
      <trans-unit id="45816">
        <source>64</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">64</target>
      </trans-unit>
      <trans-unit id="45818">
        <source>`''`</source>
        <target state="needs-translation">`''`</target>
      </trans-unit>
      <trans-unit id="45820">
        <source>定长的字符串</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">定長的字串</target>
      </trans-unit>
      <trans-unit id="45822">
        <source>string</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">string</target>
      </trans-unit>
      <trans-unit id="45824">
        <source>`string`</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">`string`</target>
      </trans-unit>
      <trans-unit id="45826">
        <source>255</source>
        <target state="needs-translation">255</target>
      </trans-unit>
      <trans-unit id="45828">
        <source>`''`</source>
        <target state="needs-translation">`''`</target>
      </trans-unit>
      <trans-unit id="45830">
        <source>变长的字符串</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">變長的字串</target>
      </trans-unit>
      <trans-unit id="45832">
        <source>text</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">text</target>
      </trans-unit>
      <trans-unit id="45834">
        <source>`string`</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">`string`</target>
      </trans-unit>
      <trans-unit id="45836">
        <source>65535</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">65535</target>
      </trans-unit>
      <trans-unit id="45838">
        <source>`''`</source>
        <target state="needs-translation">`''`</target>
      </trans-unit>
      <trans-unit id="45840">
        <source>变长的字符串</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">變長的字串</target>
      </trans-unit>
      <trans-unit id="45842">
        <source>时间类型</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">時間型別</target>
      </trans-unit>
      <trans-unit id="45844">
        <source>名称</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">名稱</target>
      </trans-unit>
      <trans-unit id="45846">
        <source>TS 类型</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">TS 型別</target>
      </trans-unit>
      <trans-unit id="45848">
        <source>默认长度</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">預設長度</target>
      </trans-unit>
      <trans-unit id="45850">
        <source>默认初始值</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">預設初始值</target>
      </trans-unit>
      <trans-unit id="45852">
        <source>说明</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">說明</target>
      </trans-unit>
      <trans-unit id="45854">
        <source>date</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">date</target>
      </trans-unit>
      <trans-unit id="45856">
        <source>`Date`</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">`Date`</target>
      </trans-unit>
      <trans-unit id="45858">
        <source>固定长度</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">固定長度</target>
      </trans-unit>
      <trans-unit id="45860">
        <source>`null`</source>
        <target state="needs-translation">`null`</target>
      </trans-unit>
      <trans-unit id="45862">
        <source>日期值</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">日期值</target>
      </trans-unit>
      <trans-unit id="45864">
        <source>time</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">time</target>
      </trans-unit>
      <trans-unit id="45866">
        <source>`Date`</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">`Date`</target>
      </trans-unit>
      <trans-unit id="45868">
        <source>固定长度</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">固定長度</target>
      </trans-unit>
      <trans-unit id="45870">
        <source>`null`</source>
        <target state="needs-translation">`null`</target>
      </trans-unit>
      <trans-unit id="45872">
        <source>时间值</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">時間值</target>
      </trans-unit>
      <trans-unit id="45874">
        <source>timestamp</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">timestamp</target>
      </trans-unit>
      <trans-unit id="45876">
        <source>`Date`</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">`Date`</target>
      </trans-unit>
      <trans-unit id="45878">
        <source>固定长度</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">固定長度</target>
      </trans-unit>
      <trans-unit id="45880">
        <source>`null`</source>
        <target state="needs-translation">`null`</target>
      </trans-unit>
      <trans-unit id="45882">
        <source>时间戳</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">時間戳</target>
      </trans-unit>
      <trans-unit id="45884">
        <source>其他类型</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">其他型別</target>
      </trans-unit>
      <trans-unit id="45886">
        <source>名称</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">名稱</target>
      </trans-unit>
      <trans-unit id="45888">
        <source>TS 类型</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">TS 型別</target>
      </trans-unit>
      <trans-unit id="45890">
        <source>默认长度</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">預設長度</target>
      </trans-unit>
      <trans-unit id="45892">
        <source>默认初始值</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">預設初始值</target>
      </trans-unit>
      <trans-unit id="45894">
        <source>说明</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">說明</target>
      </trans-unit>
      <trans-unit id="45896">
        <source>json</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">json</target>
      </trans-unit>
      <trans-unit id="45898">
        <source>`object`</source>
        <target state="needs-translation">`object`</target>
      </trans-unit>
      <trans-unit id="45900">
        <source>65535</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">65535</target>
      </trans-unit>
      <trans-unit id="45902">
        <source>`null`</source>
        <target state="needs-translation">`null`</target>
      </trans-unit>
      <trans-unit id="45904">
        <source>可被序列化为 json 的结构化数据</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">可被序列化為 json 的結構化資料</target>
      </trans-unit>
      <trans-unit id="45906">
        <source>list</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">list</target>
      </trans-unit>
      <trans-unit id="45908">
        <source>`string[]`</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">`string[]`</target>
      </trans-unit>
      <trans-unit id="45910">
        <source>65535</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">65535</target>
      </trans-unit>
      <trans-unit id="45912">
        <source>`[]`</source>
        <target state="needs-translation">`[]`</target>
      </trans-unit>
      <trans-unit id="45914">
        <source>字符串构成的列表，序列化时以逗号分隔</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">字串構成的列表，序列化時以逗號分隔</target>
      </trans-unit>
      <trans-unit id="45916">
        <source>实例方法</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">實體方法</target>
      </trans-unit>
      <trans-unit id="45918">
        <source>ctx.model.extend(name, fields, config?)</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">ctx.model.extend(name, fields, config?)</target>
      </trans-unit>
      <trans-unit id="45920">
        <source>**name:** `string` 数据表名</source>
        <target state="needs-translation">**name:** `string` 数据表名</target>
      </trans-unit>
      <trans-unit id="45922">
        <source>**fields:** `Field.Config` 字段信息</source>
        <target state="needs-translation">**fields:** `Field.Config` 字段信息</target>
      </trans-unit>
      <trans-unit id="45924">
        <source>**config:** `Table.Meta` 表的基本配置</source>
        <target state="needs-translation">**config:** `Table.Meta` 表的基本配置</target>
      </trans-unit>
      <trans-unit id="45926">
        <source>**config.primary:** `string | string[]` 主键名，默认为 `'id'`</source>
        <target state="needs-translation">**config.primary:** `string | string[]` 主键名，默认为 `'id'`</target>
      </trans-unit>
      <trans-unit id="45928">
        <source>**config.unique:** `(string | string[])[]` 值唯一的键名列表</source>
        <target state="needs-translation">**config.unique:** `(string | string[])[]` 值唯一的键名列表</target>
      </trans-unit>
      <trans-unit id="45930">
        <source>**config.foreign:** `Dict&lt;[string, string]&gt;` 外键列表 &lt;badge type=&quot;warning&quot;&gt;实验性&lt;/badge&gt;</source>
        <target state="needs-translation">**config.foreign:** `Dict&lt;[string, string]&gt;` 外键列表 &lt;badge type=&quot;warning&quot;&gt;实验性&lt;/badge&gt;</target>
      </trans-unit>
      <trans-unit id="45932">
        <source>**config.autoInc:** `boolean` 是否使用自增主键</source>
        <target state="needs-translation">**config.autoInc:** `boolean` 是否使用自增主键</target>
      </trans-unit>
      <trans-unit id="45934">
        <source>扩展一个新的数据表。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">擴展一個新的資料表。</target>
      </trans-unit>
      <trans-unit id="45936">
        <source>ctx.model.create(name, data)</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">ctx.model.create(name, data)</target>
      </trans-unit>
      <trans-unit id="45938">
        <source>**name:** `string` 数据表名</source>
        <target state="needs-translation">**name:** `string` 数据表名</target>
      </trans-unit>
      <trans-unit id="45940">
        <source>**data:** `any` 数据</source>
        <target state="needs-translation">**data:** `any` 数据</target>
      </trans-unit>
      <trans-unit id="45942">
        <source>创建一条新的数据，折叠嵌套属性，并填充必要的默认值。</source>
        <target state="needs-translation">创建一条新的数据，折叠嵌套属性，并填充必要的默认值。</target>
      </trans-unit>
      <trans-unit id="45944">
        <source>ctx.model.migrate(name, fields, callback) &lt;badge type=&quot;warning&quot;&gt;实验性&lt;/badge&gt;</source>
        <target state="needs-translation">ctx.model.migrate(name, fields, callback) &lt;badge type=&quot;warning&quot;&gt;实验性&lt;/badge&gt;</target>
      </trans-unit>
      <trans-unit id="45946">
        <source>**name:** `string` 数据表名</source>
        <target state="needs-translation">**name:** `string` 数据表名</target>
      </trans-unit>
      <trans-unit id="45948">
        <source>**fields:** `Field.Config` 要迁移的字段信息</source>
        <target state="needs-translation">**fields:** `Field.Config` 要迁移的字段信息</target>
      </trans-unit>
      <trans-unit id="45950">
        <source>**callback:** `(db: Database) =&gt; Promise&lt;void&gt;` 迁移的回调函数</source>
        <target state="needs-translation">**callback:** `(db: Database) =&gt; Promise&lt;void&gt;` 迁移的回调函数</target>
      </trans-unit>
      <trans-unit id="45952">
        <source>设置 [整表迁移](../../guide/database/model.md#整表迁移) 的操作。</source>
        <target state="needs-translation">设置 [整表迁移](../../guide/database/model.md#整表迁移) 的操作。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1440" original="/[koishijs.docs] main/zh-CN/api/database/query.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="45954">
        <source>查询表达式 (Query)</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">查詢運算式 (Query)</target>
      </trans-unit>
      <trans-unit id="45956">
        <source>参见：[开发 &gt; 数据库 &gt; 基本用法](../../guide/database/index.md)</source>
        <target state="needs-translation">参见：[开发 &gt; 数据库 &gt; 基本用法](../../guide/database/index.md)</target>
      </trans-unit>
      <trans-unit id="45958">
        <source>查询表达式用于表达数据库操作中的约束条件。</source>
        <target state="needs-translation">查询表达式用于表达数据库操作中的约束条件。</target>
      </trans-unit>
      <trans-unit id="45960">
        <source>你可以在 [`Database`](./database.md) 或 [`Selection`](./selection.md) 的实例方法中使用。</source>
        <target state="needs-translation">你可以在 [`Database`](./database.md) 或 [`Selection`](./selection.md) 的实例方法中使用。</target>
      </trans-unit>
      <trans-unit id="45962">
        <source>查询表达式的基本形式是一个字典，其中的键是字段名，值是约束条件。</source>
        <target state="needs-translation">查询表达式的基本形式是一个字典，其中的键是字段名，值是约束条件。</target>
      </trans-unit>
      <trans-unit id="45964">
        <source>例如：</source>
        <target state="needs-translation">例如：</target>
      </trans-unit>
      <trans-unit id="45966">
        <source>ctx.database.get('foo', {
  bar: 1,
  baz: { $gt: 2 },
})</source>
        <target state="needs-translation">ctx.database.get('foo', {
  bar: 1,
  baz: { $gt: 2 },
})</target>
      </trans-unit>
      <trans-unit id="45968">
        <source>上述查询表达式的意思是：`bar` 字段的值等于 `1`，且 `baz` 字段的值大于 `2`。</source>
        <target state="needs-translation">上述查询表达式的意思是：`bar` 字段的值等于 `1`，且 `baz` 字段的值大于 `2`。</target>
      </trans-unit>
      <trans-unit id="45970">
        <source>类型定义</source>
        <target state="needs-translation">类型定义</target>
      </trans-unit>
      <trans-unit id="45972">
        <source>FieldExpr</source>
        <target state="needs-translation">FieldExpr</target>
      </trans-unit>
      <trans-unit id="45974">
        <source>本节中定义的具体操作符构成的对象，例如 `{ $gt: 2 }`。</source>
        <target state="needs-translation">本节中定义的具体操作符构成的对象，例如 `{ $gt: 2 }`。</target>
      </trans-unit>
      <trans-unit id="45976">
        <source>Shorthand</source>
        <target state="needs-translation">Shorthand</target>
      </trans-unit>
      <trans-unit id="45978">
        <source>为了简化查询操作符的书写，我们为特定类型的字段引入了一些简写形式：</source>
        <target state="needs-translation">为了简化查询操作符的书写，我们为特定类型的字段引入了一些简写形式：</target>
      </trans-unit>
      <trans-unit id="45980">
        <source>如果该字段的类型是可比较类型，那么接受一个同类型的值，相当于 [`$eq`](#eq) 操作符</source>
        <target state="needs-translation">如果该字段的类型是可比较类型，那么接受一个同类型的值，相当于 [`$eq`](#eq) 操作符</target>
      </trans-unit>
      <trans-unit id="45982">
        <source>如果该字段的类型是可索引类型，那么接受一个数组，相当于 [`$in`](#in) 操作符</source>
        <target state="needs-translation">如果该字段的类型是可索引类型，那么接受一个数组，相当于 [`$in`](#in) 操作符</target>
      </trans-unit>
      <trans-unit id="45984">
        <source>如果该字段的类型是字符串，那么接受一个正则表达式，相当于 [`$regex`](#regex) 操作符</source>
        <target state="needs-translation">如果该字段的类型是字符串，那么接受一个正则表达式，相当于 [`$regex`](#regex) 操作符</target>
      </trans-unit>
      <trans-unit id="45986">
        <source>type Extract&lt;S, T, U&gt; = S extends T ? U : never

type Shorthand&lt;T&gt; =
  | Extract&lt;T, Comparable, T&gt;
  | Extract&lt;T, Indexable, T[]&gt;
  | Extract&lt;T, string, RegExp&gt;</source>
        <target state="needs-translation">type Extract&lt;S, T, U&gt; = S extends T ? U : never

type Shorthand&lt;T&gt; =
  | Extract&lt;T, Comparable, T&gt;
  | Extract&lt;T, Indexable, T[]&gt;
  | Extract&lt;T, string, RegExp&gt;</target>
      </trans-unit>
      <trans-unit id="45988">
        <source>FieldQuery</source>
        <target state="needs-translation">FieldQuery</target>
      </trans-unit>
      <trans-unit id="45990">
        <source>某个字段的约束条件。</source>
        <target state="needs-translation">某个字段的约束条件。</target>
      </trans-unit>
      <trans-unit id="45992">
        <source>可以是一个 [`FieldExpr`](#fieldexpr) 或 [`Shorthand`](#shorthand)。</source>
        <target state="needs-translation">可以是一个 [`FieldExpr`](#fieldexpr) 或 [`Shorthand`](#shorthand)。</target>
      </trans-unit>
      <trans-unit id="45994">
        <source>type FieldQuery&lt;T&gt; = FieldExpr&lt;T&gt; | Shorthand&lt;T&gt;</source>
        <target state="needs-translation">type FieldQuery&lt;T&gt; = FieldExpr&lt;T&gt; | Shorthand&lt;T&gt;</target>
      </trans-unit>
      <trans-unit id="45996">
        <source>QueryExpr</source>
        <target state="needs-translation">QueryExpr</target>
      </trans-unit>
      <trans-unit id="45998">
        <source>一个字典，其中的键是字段名，值是该字段约束条件。</source>
        <target state="needs-translation">一个字典，其中的键是字段名，值是该字段约束条件。</target>
      </trans-unit>
      <trans-unit id="46000">
        <source>除此以外，还可以使用逻辑运算符 `$or`, `$and`, `$not` 来组合多个约束条件。</source>
        <target state="needs-translation">除此以外，还可以使用逻辑运算符 `$or`, `$and`, `$not` 来组合多个约束条件。</target>
      </trans-unit>
      <trans-unit id="46002">
        <source>type QueryExpr&lt;T&gt; = LogicalExpr&lt;T&gt; &amp; {
  [K in keyof T]?: null | FieldQuery&lt;T[K]&gt;
}

interface LogicalExpr&lt;T&gt; {
  $or?: QueryExpr&lt;T&gt;[]
  $and?: QueryExpr&lt;T&gt;[]
  $not?: QueryExpr&lt;T&gt;
}</source>
        <target state="needs-translation">type QueryExpr&lt;T&gt; = LogicalExpr&lt;T&gt; &amp; {
  [K in keyof T]?: null | FieldQuery&lt;T[K]&gt;
}

interface LogicalExpr&lt;T&gt; {
  $or?: QueryExpr&lt;T&gt;[]
  $and?: QueryExpr&lt;T&gt;[]
  $not?: QueryExpr&lt;T&gt;
}</target>
      </trans-unit>
      <trans-unit id="46004">
        <source>Query</source>
        <target state="needs-translation">Query</target>
      </trans-unit>
      <trans-unit id="46006">
        <source>某个表的约束条件。</source>
        <target state="needs-translation">某个表的约束条件。</target>
      </trans-unit>
      <trans-unit id="46008">
        <source>它可以是：</source>
        <target state="needs-translation">它可以是：</target>
      </trans-unit>
      <trans-unit id="46010">
        <source>一个 [`QueryExpr`](#queryexpr)，用于约束表中的字段</source>
        <target state="needs-translation">一个 [`QueryExpr`](#queryexpr)，用于约束表中的字段</target>
      </trans-unit>
      <trans-unit id="46012">
        <source>一个 [`Shorthand`](#shorthand)，用于约束表中的主键 (如果主键唯一)</source>
        <target state="needs-translation">一个 [`Shorthand`](#shorthand)，用于约束表中的主键 (如果主键唯一)</target>
      </trans-unit>
      <trans-unit id="46014">
        <source>一个 [`Callback`](./selection.md#callback)，可以在其中使用求值表达式</source>
        <target state="needs-translation">一个 [`Callback`](./selection.md#callback)，可以在其中使用求值表达式</target>
      </trans-unit>
      <trans-unit id="46016">
        <source>type Query&lt;T&gt; = QueryExpr&lt;T&gt; | Shorthand&lt;Indexable&gt; | Callback&lt;T, boolean&gt;</source>
        <target state="needs-translation">type Query&lt;T&gt; = QueryExpr&lt;T&gt; | Shorthand&lt;Indexable&gt; | Callback&lt;T, boolean&gt;</target>
      </trans-unit>
      <trans-unit id="46018">
        <source>逻辑运算</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">邏輯運算</target>
      </trans-unit>
      <trans-unit id="46020">
        <source>逻辑运算可以出现在 `QueryExpr` 或 `FieldExpr` 中。</source>
        <target state="needs-translation">逻辑运算可以出现在 `QueryExpr` 或 `FieldExpr` 中。</target>
      </trans-unit>
      <trans-unit id="46022">
        <source>根据出现的场合，它们的类型和含义也会有所不同。</source>
        <target state="needs-translation">根据出现的场合，它们的类型和含义也会有所不同。</target>
      </trans-unit>
      <trans-unit id="46024">
        <source>$or</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">$or</target>
      </trans-unit>
      <trans-unit id="46026">
        <source>类型: `QueryExpr[]` (作为 `QueryExpr` 时)</source>
        <target state="needs-translation">类型: `QueryExpr[]` (作为 `QueryExpr` 时)</target>
      </trans-unit>
      <trans-unit id="46028">
        <source>类型: `FieldExpr[]` (作为 `FieldExpr` 时)</source>
        <target state="needs-translation">类型: `FieldExpr[]` (作为 `FieldExpr` 时)</target>
      </trans-unit>
      <trans-unit id="46030">
        <source>一组约束条件的或运算。</source>
        <target state="needs-translation">一组约束条件的或运算。</target>
      </trans-unit>
      <trans-unit id="46032">
        <source>$and</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">$and</target>
      </trans-unit>
      <trans-unit id="46034">
        <source>类型: `QueryExpr[]` (作为 `QueryExpr` 时)</source>
        <target state="needs-translation">类型: `QueryExpr[]` (作为 `QueryExpr` 时)</target>
      </trans-unit>
      <trans-unit id="46036">
        <source>类型: `FieldExpr[]` (作为 `FieldExpr` 时)</source>
        <target state="needs-translation">类型: `FieldExpr[]` (作为 `FieldExpr` 时)</target>
      </trans-unit>
      <trans-unit id="46038">
        <source>一组约束条件的与运算。</source>
        <target state="needs-translation">一组约束条件的与运算。</target>
      </trans-unit>
      <trans-unit id="46040">
        <source>$not</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">$not</target>
      </trans-unit>
      <trans-unit id="46042">
        <source>类型: `QueryExpr` (作为 `QueryExpr` 时)</source>
        <target state="needs-translation">类型: `QueryExpr` (作为 `QueryExpr` 时)</target>
      </trans-unit>
      <trans-unit id="46044">
        <source>类型: `FieldExpr` (作为 `FieldExpr` 时)</source>
        <target state="needs-translation">类型: `FieldExpr` (作为 `FieldExpr` 时)</target>
      </trans-unit>
      <trans-unit id="46046">
        <source>约束条件的否定。</source>
        <target state="needs-translation">约束条件的否定。</target>
      </trans-unit>
      <trans-unit id="46048">
        <source>元素运算</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">元素運算</target>
      </trans-unit>
      <trans-unit id="46050">
        <source>$in</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">$in</target>
      </trans-unit>
      <trans-unit id="46052">
        <source>类型: `T[]` (`T extends Indexable`)</source>
        <target state="needs-translation">类型: `T[]` (`T extends Indexable`)</target>
      </trans-unit>
      <trans-unit id="46054">
        <source>判断字段的值是否在给定的数组中。</source>
        <target state="needs-translation">判断字段的值是否在给定的数组中。</target>
      </trans-unit>
      <trans-unit id="46056">
        <source>$nin</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">$nin</target>
      </trans-unit>
      <trans-unit id="46058">
        <source>类型: `T[]` (`T extends Indexable`)</source>
        <target state="needs-translation">类型: `T[]` (`T extends Indexable`)</target>
      </trans-unit>
      <trans-unit id="46060">
        <source>判断字段的值是否不在给定的数组中。</source>
        <target state="needs-translation">判断字段的值是否不在给定的数组中。</target>
      </trans-unit>
      <trans-unit id="46062">
        <source>比较运算</source>
        <target state="needs-translation">比较运算</target>
      </trans-unit>
      <trans-unit id="46064">
        <source>$eq</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">$eq</target>
      </trans-unit>
      <trans-unit id="46066">
        <source>类型: `T` (`T extends Comparable`)</source>
        <target state="needs-translation">类型: `T` (`T extends Comparable`)</target>
      </trans-unit>
      <trans-unit id="46068">
        <source>判断字段的值是否等于给定的值。</source>
        <target state="needs-translation">判断字段的值是否等于给定的值。</target>
      </trans-unit>
      <trans-unit id="46070">
        <source>$ne</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">$ne</target>
      </trans-unit>
      <trans-unit id="46072">
        <source>类型: `T` (`T extends Comparable`)</source>
        <target state="needs-translation">类型: `T` (`T extends Comparable`)</target>
      </trans-unit>
      <trans-unit id="46074">
        <source>判断字段的值是否不等于给定的值。</source>
        <target state="needs-translation">判断字段的值是否不等于给定的值。</target>
      </trans-unit>
      <trans-unit id="46076">
        <source>$gt</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">$gt</target>
      </trans-unit>
      <trans-unit id="46078">
        <source>类型: `T` (`T extends Comparable`)</source>
        <target state="needs-translation">类型: `T` (`T extends Comparable`)</target>
      </trans-unit>
      <trans-unit id="46080">
        <source>判断字段的值是否大于给定的值。</source>
        <target state="needs-translation">判断字段的值是否大于给定的值。</target>
      </trans-unit>
      <trans-unit id="46082">
        <source>$gte</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">$gte</target>
      </trans-unit>
      <trans-unit id="46084">
        <source>类型: `T` (`T extends Comparable`)</source>
        <target state="needs-translation">类型: `T` (`T extends Comparable`)</target>
      </trans-unit>
      <trans-unit id="46086">
        <source>判断字段的值是否大于或等于给定的值。</source>
        <target state="needs-translation">判断字段的值是否大于或等于给定的值。</target>
      </trans-unit>
      <trans-unit id="46088">
        <source>$lt</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">$lt</target>
      </trans-unit>
      <trans-unit id="46090">
        <source>类型: `T` (`T extends Comparable`)</source>
        <target state="needs-translation">类型: `T` (`T extends Comparable`)</target>
      </trans-unit>
      <trans-unit id="46092">
        <source>判断字段的值是否小于给定的值。</source>
        <target state="needs-translation">判断字段的值是否小于给定的值。</target>
      </trans-unit>
      <trans-unit id="46094">
        <source>$lte</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">$lte</target>
      </trans-unit>
      <trans-unit id="46096">
        <source>类型: `T` (`T extends Comparable`)</source>
        <target state="needs-translation">类型: `T` (`T extends Comparable`)</target>
      </trans-unit>
      <trans-unit id="46098">
        <source>判断字段的值是否小于或等于给定的值。</source>
        <target state="needs-translation">判断字段的值是否小于或等于给定的值。</target>
      </trans-unit>
      <trans-unit id="46100">
        <source>列表运算</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">串列運算</target>
      </trans-unit>
      <trans-unit id="46102">
        <source>$el</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">$el</target>
      </trans-unit>
      <trans-unit id="46104">
        <source>类型: [`FieldExpr&lt;U&gt;`](#fieldexpr) (`T extends U[]`)</source>
        <target state="needs-translation">类型: [`FieldExpr&lt;U&gt;`](#fieldexpr) (`T extends U[]`)</target>
      </trans-unit>
      <trans-unit id="46106">
        <source>判断列表中是否存在满足给定约束条件的元素。</source>
        <target state="needs-translation">判断列表中是否存在满足给定约束条件的元素。</target>
      </trans-unit>
      <trans-unit id="46108">
        <source>部分数据库可能不支持使用子条件，因此请尽量只使用 [`$eq`](#eq) 操作符。</source>
        <target state="needs-translation">部分数据库可能不支持使用子条件，因此请尽量只使用 [`$eq`](#eq) 操作符。</target>
      </trans-unit>
      <trans-unit id="46110">
        <source>$size</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">$size</target>
      </trans-unit>
      <trans-unit id="46112">
        <source>类型: `number` (`T extends any[]`)</source>
        <target state="needs-translation">类型: `number` (`T extends any[]`)</target>
      </trans-unit>
      <trans-unit id="46114">
        <source>判断列表的长度是否等于给定的值。</source>
        <target state="needs-translation">判断列表的长度是否等于给定的值。</target>
      </trans-unit>
      <trans-unit id="46116">
        <source>正则表达式</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">正則運算式</target>
      </trans-unit>
      <trans-unit id="46118">
        <source>$regex</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">$regex</target>
      </trans-unit>
      <trans-unit id="46120">
        <source>类型: `RegExp` (`T extends string`)</source>
        <target state="needs-translation">类型: `RegExp` (`T extends string`)</target>
      </trans-unit>
      <trans-unit id="46122">
        <source>判断字段的值是否匹配给定的正则表达式。</source>
        <target state="needs-translation">判断字段的值是否匹配给定的正则表达式。</target>
      </trans-unit>
      <trans-unit id="46124">
        <source>$regexFor</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">$regexFor</target>
      </trans-unit>
      <trans-unit id="46126">
        <source>类型: `string` (`T extends string`)</source>
        <target state="needs-translation">类型: `string` (`T extends string`)</target>
      </trans-unit>
      <trans-unit id="46128">
        <source>将字段的值作为正则表达式，判断给定的字符串是否匹配。</source>
        <target state="needs-translation">将字段的值作为正则表达式，判断给定的字符串是否匹配。</target>
      </trans-unit>
      <trans-unit id="46130">
        <source>位运算</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">位元運算</target>
      </trans-unit>
      <trans-unit id="46132">
        <source>$bitsAllSet</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">$bitsAllSet</target>
      </trans-unit>
      <trans-unit id="46134">
        <source>类型: `number` (`T extends number`)</source>
        <target state="needs-translation">类型: `number` (`T extends number`)</target>
      </trans-unit>
      <trans-unit id="46136">
        <source>判断字段的值是否包含给定的全部位。</source>
        <target state="needs-translation">判断字段的值是否包含给定的全部位。</target>
      </trans-unit>
      <trans-unit id="46138">
        <source>$bitsAllClear</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">$bitsAllClear</target>
      </trans-unit>
      <trans-unit id="46140">
        <source>类型: `number` (`T extends number`)</source>
        <target state="needs-translation">类型: `number` (`T extends number`)</target>
      </trans-unit>
      <trans-unit id="46142">
        <source>判断字段的值是否不包含给定的全部位。</source>
        <target state="needs-translation">判断字段的值是否不包含给定的全部位。</target>
      </trans-unit>
      <trans-unit id="46144">
        <source>$bitsAnySet</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">$bitsAnySet</target>
      </trans-unit>
      <trans-unit id="46146">
        <source>类型: `number` (`T extends number`)</source>
        <target state="needs-translation">类型: `number` (`T extends number`)</target>
      </trans-unit>
      <trans-unit id="46148">
        <source>判断字段的值是否包含给定的任意位。</source>
        <target state="needs-translation">判断字段的值是否包含给定的任意位。</target>
      </trans-unit>
      <trans-unit id="46150">
        <source>$bitsAnyClear</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">$bitsAnyClear</target>
      </trans-unit>
      <trans-unit id="46152">
        <source>类型: `number` (`T extends number`)</source>
        <target state="needs-translation">类型: `number` (`T extends number`)</target>
      </trans-unit>
      <trans-unit id="46154">
        <source>判断字段的值是否不包含给定的任意位。</source>
        <target state="needs-translation">判断字段的值是否不包含给定的任意位。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1442" original="/[koishijs.docs] main/zh-CN/api/database/selection.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="46156">
        <source>查询构造器 (Selection)</source>
        <target state="needs-translation">查询构造器 (Selection)</target>
      </trans-unit>
      <trans-unit id="46158">
        <source>参见：[开发 &gt; 数据库 &gt; 进阶查询技巧](../../guide/database/selection.md)</source>
        <target state="needs-translation">参见：[开发 &gt; 数据库 &gt; 进阶查询技巧](../../guide/database/selection.md)</target>
      </trans-unit>
      <trans-unit id="46160">
        <source>`Selection` 可以由 [`database.select()`](./database.md#database-select) 或 [`database.join()`](./database.md#database-join) 方法创建，也可以被其他 `Selection` 的实例方法返回。</source>
        <target state="needs-translation">`Selection` 可以由 [`database.select()`](./database.md#database-select) 或 [`database.join()`](./database.md#database-join) 方法创建，也可以被其他 `Selection` 的实例方法返回。</target>
      </trans-unit>
      <trans-unit id="46162">
        <source>它提供了一组链式调用的 API，用于构造查询语句。</source>
        <target state="needs-translation">它提供了一组链式调用的 API，用于构造查询语句。</target>
      </trans-unit>
      <trans-unit id="46164">
        <source>类型定义</source>
        <target state="needs-translation">类型定义</target>
      </trans-unit>
      <trans-unit id="46166">
        <source>Row</source>
        <target state="needs-translation">Row</target>
      </trans-unit>
      <trans-unit id="46168">
        <source>象征一行数据的代理对象。</source>
        <target state="needs-translation">象征一行数据的代理对象。</target>
      </trans-unit>
      <trans-unit id="46170">
        <source>其上的属性对应取值的 [`EvalExpr`](./evaluation.md)。</source>
        <target state="needs-translation">其上的属性对应取值的 [`EvalExpr`](./evaluation.md)。</target>
      </trans-unit>
      <trans-unit id="46172">
        <source>type Cell&lt;T&gt; = EvalExpr&lt;T&gt; &amp; (T extends Comparable ? {} : Row&lt;T&gt;)

type Row&lt;S&gt; = {
  [K in keyof S]-?: Cell&lt;NonNullable&lt;S[K]&gt;&gt;
}</source>
        <target state="needs-translation">type Cell&lt;T&gt; = EvalExpr&lt;T&gt; &amp; (T extends Comparable ? {} : Row&lt;T&gt;)

type Row&lt;S&gt; = {
  [K in keyof S]-?: Cell&lt;NonNullable&lt;S[K]&gt;&gt;
}</target>
      </trans-unit>
      <trans-unit id="46174">
        <source>Callback</source>
        <target state="needs-translation">Callback</target>
      </trans-unit>
      <trans-unit id="46176">
        <source>可以视为字段的回调函数。</source>
        <target state="needs-translation">可以视为字段的回调函数。</target>
      </trans-unit>
      <trans-unit id="46178">
        <source>接受当前行作为参数，返回一个 [`EvalExpr`](./evaluation.md)。</source>
        <target state="needs-translation">接受当前行作为参数，返回一个 [`EvalExpr`](./evaluation.md)。</target>
      </trans-unit>
      <trans-unit id="46180">
        <source>type Callback&lt;S, T&gt; = (row: Row&lt;S&gt;) =&gt; EvalExpr&lt;T&gt;</source>
        <target state="needs-translation">type Callback&lt;S, T&gt; = (row: Row&lt;S&gt;) =&gt; EvalExpr&lt;T&gt;</target>
      </trans-unit>
      <trans-unit id="46182">
        <source>FieldLike</source>
        <target state="needs-translation">FieldLike</target>
      </trans-unit>
      <trans-unit id="46184">
        <source>一个可用字段。</source>
        <target state="needs-translation">一个可用字段。</target>
      </trans-unit>
      <trans-unit id="46186">
        <source>该类型可以是表中现有的字段名或者一个由回调函数表示的虚拟字段。</source>
        <target state="needs-translation">该类型可以是表中现有的字段名或者一个由回调函数表示的虚拟字段。</target>
      </trans-unit>
      <trans-unit id="46188">
        <source>type FieldLike&lt;S&gt; = keyof S | Callback&lt;S&gt;</source>
        <target state="needs-translation">type FieldLike&lt;S&gt; = keyof S | Callback&lt;S&gt;</target>
      </trans-unit>
      <trans-unit id="46190">
        <source>Project</source>
        <target state="needs-translation">Project</target>
      </trans-unit>
      <trans-unit id="46192">
        <source>使用多个字段构造新的虚拟表。</source>
        <target state="needs-translation">使用多个字段构造新的虚拟表。</target>
      </trans-unit>
      <trans-unit id="46194">
        <source>该类型可以是字段名数组或者一个由 `FieldLike` 构成的字典。</source>
        <target state="needs-translation">该类型可以是字段名数组或者一个由 `FieldLike` 构成的字典。</target>
      </trans-unit>
      <trans-unit id="46196">
        <source>如果是字段名数组，则新的表将会沿用这些字段的名称；否则将会使用字典的键作为字段名。</source>
        <target state="needs-translation">如果是字段名数组，则新的表将会沿用这些字段的名称；否则将会使用字典的键作为字段名。</target>
      </trans-unit>
      <trans-unit id="46198">
        <source>type Project&lt;S&gt; = (keyof S)[] | Dict&lt;FieldLike&lt;S&gt;&gt;</source>
        <target state="needs-translation">type Project&lt;S&gt; = (keyof S)[] | Dict&lt;FieldLike&lt;S&gt;&gt;</target>
      </trans-unit>
      <trans-unit id="46200">
        <source>实例方法</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">實體方法</target>
      </trans-unit>
      <trans-unit id="46202">
        <source>selection.where(query)</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">selection.where(query)</target>
      </trans-unit>
      <trans-unit id="46204">
        <source>**query:** [`Query`](./query.md) 约束条件</source>
        <target state="needs-translation">**query:** [`Query`](./query.md) 约束条件</target>
      </trans-unit>
      <trans-unit id="46206">
        <source>返回值: `Selection`</source>
        <target state="needs-translation">返回值: `Selection`</target>
      </trans-unit>
      <trans-unit id="46208">
        <source>添加约束条件。</source>
        <target state="needs-translation">添加约束条件。</target>
      </trans-unit>
      <trans-unit id="46210">
        <source>selection.orderBy(key, order?)</source>
        <target state="needs-translation">selection.orderBy(key, order?)</target>
      </trans-unit>
      <trans-unit id="46212">
        <source>**key:** [`FieldLike`](#fieldlike) 用于排序的字段</source>
        <target state="needs-translation">**key:** [`FieldLike`](#fieldlike) 用于排序的字段</target>
      </trans-unit>
      <trans-unit id="46214">
        <source>**order:** `'asc' | 'desc'` 排序方式</source>
        <target state="needs-translation">**order:** `'asc' | 'desc'` 排序方式</target>
      </trans-unit>
      <trans-unit id="46216">
        <source>返回值: `Selection`</source>
        <target state="needs-translation">返回值: `Selection`</target>
      </trans-unit>
      <trans-unit id="46218">
        <source>对结果进行排序。</source>
        <target state="needs-translation">对结果进行排序。</target>
      </trans-unit>
      <trans-unit id="46220">
        <source>selection.limit(count)</source>
        <target state="needs-translation">selection.limit(count)</target>
      </trans-unit>
      <trans-unit id="46222">
        <source>**count:** `number` 数量限制</source>
        <target state="needs-translation">**count:** `number` 数量限制</target>
      </trans-unit>
      <trans-unit id="46224">
        <source>返回值: `Selection`</source>
        <target state="needs-translation">返回值: `Selection`</target>
      </trans-unit>
      <trans-unit id="46226">
        <source>限制结果数量。</source>
        <target state="needs-translation">限制结果数量。</target>
      </trans-unit>
      <trans-unit id="46228">
        <source>selection.offset(count)</source>
        <target state="needs-translation">selection.offset(count)</target>
      </trans-unit>
      <trans-unit id="46230">
        <source>**count:** `number` 偏移量</source>
        <target state="needs-translation">**count:** `number` 偏移量</target>
      </trans-unit>
      <trans-unit id="46232">
        <source>返回值: `Selection`</source>
        <target state="needs-translation">返回值: `Selection`</target>
      </trans-unit>
      <trans-unit id="46234">
        <source>跳过指定数量的结果。</source>
        <target state="needs-translation">跳过指定数量的结果。</target>
      </trans-unit>
      <trans-unit id="46236">
        <source>selection.project(fields)</source>
        <target state="needs-translation">selection.project(fields)</target>
      </trans-unit>
      <trans-unit id="46238">
        <source>**fields:** [`Project`](#project) 用于投影的字段</source>
        <target state="needs-translation">**fields:** [`Project`](#project) 用于投影的字段</target>
      </trans-unit>
      <trans-unit id="46240">
        <source>返回值: `Selection`</source>
        <target state="needs-translation">返回值: `Selection`</target>
      </trans-unit>
      <trans-unit id="46242">
        <source>对结果进行投影。</source>
        <target state="needs-translation">对结果进行投影。</target>
      </trans-unit>
      <trans-unit id="46244">
        <source>selection.groupBy(fields, extra?)</source>
        <target state="needs-translation">selection.groupBy(fields, extra?)</target>
      </trans-unit>
      <trans-unit id="46246">
        <source>**fields:** [`Project`](#project) 用于分组的字段</source>
        <target state="needs-translation">**fields:** [`Project`](#project) 用于分组的字段</target>
      </trans-unit>
      <trans-unit id="46248">
        <source>**extra:** [`Dict&lt;FieldLike&gt;`](#fieldlike) 向分组内添加额外的字段</source>
        <target state="needs-translation">**extra:** [`Dict&lt;FieldLike&gt;`](#fieldlike) 向分组内添加额外的字段</target>
      </trans-unit>
      <trans-unit id="46250">
        <source>返回值: `Selection`</source>
        <target state="needs-translation">返回值: `Selection`</target>
      </trans-unit>
      <trans-unit id="46252">
        <source>对结果进行分组。</source>
        <target state="needs-translation">对结果进行分组。</target>
      </trans-unit>
      <trans-unit id="46254">
        <source>selection.execute(expr?)</source>
        <target state="needs-translation">selection.execute(expr?)</target>
      </trans-unit>
      <trans-unit id="46256">
        <source>**expr:** [`EvalExpr`](./evaluation.md) 用于计算的表达式</source>
        <target state="needs-translation">**expr:** [`EvalExpr`](./evaluation.md) 用于计算的表达式</target>
      </trans-unit>
      <trans-unit id="46258">
        <source>返回值: `Promise&lt;any&gt;`</source>
        <target state="needs-translation">返回值: `Promise&lt;any&gt;`</target>
      </trans-unit>
      <trans-unit id="46260">
        <source>执行查询并返回结果。</source>
        <target state="needs-translation">执行查询并返回结果。</target>
      </trans-unit>
      <trans-unit id="46262">
        <source>如果没有传入 `expr`，返回的是一个包含所有结果的数组；否则返回的是由 `expr` 聚合计算出的结果。</source>
        <target state="needs-translation">如果没有传入 `expr`，返回的是一个包含所有结果的数组；否则返回的是由 `expr` 聚合计算出的结果。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1444" original="/[koishijs.docs] main/zh-CN/api/glossary.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="46264">
        <source>术语表</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">術語表</target>
      </trans-unit>
      <trans-unit id="46266">
        <source>本页收集了一些 Koishi 设计中的重要概念，按字母表序排列。</source>
        <target state="needs-translation">本页收集了一些 Koishi 设计中的重要概念，按字母表序排列。</target>
      </trans-unit>
      <trans-unit id="46268">
        <source>如果你在阅读文档时对某个概念感到迷惑，可以随时回到这里查看解释。</source>
        <target state="needs-translation">如果你在阅读文档时对某个概念感到迷惑，可以随时回到这里查看解释。</target>
      </trans-unit>
      <trans-unit id="63574">
        <source>适配器 (Adapter) {#adapter}</source>
        <target state="needs-translation">适配器 (Adapter) {#adapter}</target>
      </trans-unit>
      <trans-unit id="46272">
        <source>适配器是指实现了平台协议，能够让机器人接入平台的插件。</source>
        <target state="needs-translation">适配器是指实现了平台协议，能够让机器人接入平台的插件。</target>
      </trans-unit>
      <trans-unit id="46274">
        <source>通常来说一个适配器实例对应了一个机器人用户，同时启用多个适配器就实现了多个机器人的同时接入。</source>
        <target state="needs-translation">通常来说一个适配器实例对应了一个机器人用户，同时启用多个适配器就实现了多个机器人的同时接入。</target>
      </trans-unit>
      <trans-unit id="46276">
        <source>[入门 &gt; 接入聊天平台](../manual/usage/adapter.md)</source>
        <target state="needs-translation">[入门 &gt; 接入聊天平台](../manual/usage/adapter.md)</target>
      </trans-unit>
      <trans-unit id="46278">
        <source>[开发 &gt; 跨平台 &gt; 实现适配器](../guide/adapter/adapter.md)</source>
        <target state="needs-translation">[开发 &gt; 跨平台 &gt; 实现适配器](../guide/adapter/adapter.md)</target>
      </trans-unit>
      <trans-unit id="46280">
        <source>[API &gt; 核心模块 &gt; 适配器](./core/adapter.md)</source>
        <target state="needs-translation">[API &gt; 核心模块 &gt; 适配器](./core/adapter.md)</target>
      </trans-unit>
      <trans-unit id="63576">
        <source>应用 (App) {#app}</source>
        <target state="needs-translation">应用 (App) {#app}</target>
      </trans-unit>
      <trans-unit id="46284">
        <source>[开发 &gt; 开发起步 &gt; 配置文件](../guide/develop/config.md)</source>
        <target state="needs-translation">[开发 &gt; 开发起步 &gt; 配置文件](../guide/develop/config.md)</target>
      </trans-unit>
      <trans-unit id="46286">
        <source>[API &gt; 核心模块 &gt; 应用](./core/app.md)</source>
        <target state="needs-translation">[API &gt; 核心模块 &gt; 应用](./core/app.md)</target>
      </trans-unit>
      <trans-unit id="63578">
        <source>机器人 (Bot) {#bot}</source>
        <target state="needs-translation">机器人 (Bot) {#bot}</target>
      </trans-unit>
      <trans-unit id="46290">
        <source>机器人是指由 Koishi 操控的平台用户。</source>
        <target state="needs-translation">机器人是指由 Koishi 操控的平台用户。</target>
      </trans-unit>
      <trans-unit id="46292">
        <source>这里的用户不一定是真实用户，也可以是部分平台专门提供的机器人用户。</source>
        <target state="needs-translation">这里的用户不一定是真实用户，也可以是部分平台专门提供的机器人用户。</target>
      </trans-unit>
      <trans-unit id="46294">
        <source>其他用户通过与机器人进行交互来体验 Koishi 的各项功能。</source>
        <target state="needs-translation">其他用户通过与机器人进行交互来体验 Koishi 的各项功能。</target>
      </trans-unit>
      <trans-unit id="46296">
        <source>[开发 &gt; 交互基础 &gt; 进阶用法](../guide/basic/advanced.html#机器人对象)</source>
        <target state="needs-translation">[开发 &gt; 交互基础 &gt; 进阶用法](../guide/basic/advanced.html#机器人对象)</target>
      </trans-unit>
      <trans-unit id="46298">
        <source>[开发 &gt; 跨平台 &gt; 实现机器人](../guide/adapter/bot.md)</source>
        <target state="needs-translation">[开发 &gt; 跨平台 &gt; 实现机器人](../guide/adapter/bot.md)</target>
      </trans-unit>
      <trans-unit id="46300">
        <source>[API &gt; 核心模块 &gt; 机器人](./core/bot.md)</source>
        <target state="needs-translation">[API &gt; 核心模块 &gt; 机器人](./core/bot.md)</target>
      </trans-unit>
      <trans-unit id="63580">
        <source>频道 (Channel) {#channel}</source>
        <target state="needs-translation">频道 (Channel) {#channel}</target>
      </trans-unit>
      <trans-unit id="46304">
        <source>频道是消息的集合。</source>
        <target state="needs-translation">频道是消息的集合。</target>
      </trans-unit>
      <trans-unit id="46306">
        <source>一个频道包含了具备时间、逻辑顺序的一系列消息。</source>
        <target state="needs-translation">一个频道包含了具备时间、逻辑顺序的一系列消息。</target>
      </trans-unit>
      <trans-unit id="46308">
        <source>频道又分为私聊频道和群聊频道，其中私聊频道有且仅有两人参与，而群聊频道可以有任意多人参与。</source>
        <target state="needs-translation">频道又分为私聊频道和群聊频道，其中私聊频道有且仅有两人参与，而群聊频道可以有任意多人参与。</target>
      </trans-unit>
      <trans-unit id="46310">
        <source>[开发 &gt; 跨平台 &gt; 基础知识](../guide/adapter/index.html#核心概念)</source>
        <target state="needs-translation">[开发 &gt; 跨平台 &gt; 基础知识](../guide/adapter/index.html#核心概念)</target>
      </trans-unit>
      <trans-unit id="63974">
        <source>[API &gt; 平台资源 &gt; 频道](./resources/channel.md)</source>
        <target state="needs-translation">[API &gt; 平台资源 &gt; 频道](./resources/channel.md)</target>
      </trans-unit>
      <trans-unit id="46314">
        <source>[API &gt; 数据库 &gt; 内置数据结构](./database/built-in.md#channel)</source>
        <target state="needs-translation">[API &gt; 数据库 &gt; 内置数据结构](./database/built-in.md#channel)</target>
      </trans-unit>
      <trans-unit id="63582">
        <source>指令 (Command) {#command}</source>
        <target state="needs-translation">指令 (Command) {#command}</target>
      </trans-unit>
      <trans-unit id="46318">
        <source>Koishi 推荐使用指令来处理用户的输入。</source>
        <target state="needs-translation">Koishi 推荐使用指令来处理用户的输入。</target>
      </trans-unit>
      <trans-unit id="46320">
        <source>相比直接使用中间件或事件，指令不仅能够更好地处理用户输入，还有统一的帮助信息、权限管理、速率控制等特性。</source>
        <target state="needs-translation">相比直接使用中间件或事件，指令不仅能够更好地处理用户输入，还有统一的帮助信息、权限管理、速率控制等特性。</target>
      </trans-unit>
      <trans-unit id="46322">
        <source>[入门 &gt; 指令系统](../manual/usage/command.md)</source>
        <target state="needs-translation">[入门 &gt; 指令系统](../manual/usage/command.md)</target>
      </trans-unit>
      <trans-unit id="46324">
        <source>[开发 &gt; 交互基础 &gt; 指令开发](../guide/basic/command.md)</source>
        <target state="needs-translation">[开发 &gt; 交互基础 &gt; 指令开发](../guide/basic/command.md)</target>
      </trans-unit>
      <trans-unit id="46326">
        <source>[API &gt; 核心模块 &gt; 指令](./core/command.md)</source>
        <target state="needs-translation">[API &gt; 核心模块 &gt; 指令](./core/command.md)</target>
      </trans-unit>
      <trans-unit id="63584">
        <source>控制台 (Console) {#console}</source>
        <target state="needs-translation">控制台 (Console) {#console}</target>
      </trans-unit>
      <trans-unit id="46330">
        <source>控制台是一个用户友好的图形化管理界面，由一系列官方插件提供。</source>
        <target state="needs-translation">控制台是一个用户友好的图形化管理界面，由一系列官方插件提供。</target>
      </trans-unit>
      <trans-unit id="46332">
        <source>你可以在控制台中监控运行状态、管理插件和配置、查看日志、访问数据库、模拟聊天等。</source>
        <target state="needs-translation">你可以在控制台中监控运行状态、管理插件和配置、查看日志、访问数据库、模拟聊天等。</target>
      </trans-unit>
      <trans-unit id="46334">
        <source>[入门 &gt; 认识控制台](../manual/usage/market.md#认识控制台)</source>
        <target state="needs-translation">[入门 &gt; 认识控制台](../manual/usage/market.md#认识控制台)</target>
      </trans-unit>
      <trans-unit id="46336">
        <source>[开发 &gt; 控制台](../guide/console/index.md)</source>
        <target state="needs-translation">[开发 &gt; 控制台](../guide/console/index.md)</target>
      </trans-unit>
      <trans-unit id="46338">
        <source>[API &gt; 控制台](./console/server.md)</source>
        <target state="needs-translation">[API &gt; 控制台](./console/server.md)</target>
      </trans-unit>
      <trans-unit id="63586">
        <source>上下文 (Context) {#context}</source>
        <target state="needs-translation">上下文 (Context) {#context}</target>
      </trans-unit>
      <trans-unit id="46342">
        <source>上下文是实际业务逻辑的载体。</source>
        <target state="needs-translation">上下文是实际业务逻辑的载体。</target>
      </trans-unit>
      <trans-unit id="46344">
        <source>你可以在上下文中访问事件、中间件、指令和更多服务。</source>
        <target state="needs-translation">你可以在上下文中访问事件、中间件、指令和更多服务。</target>
      </trans-unit>
      <trans-unit id="46346">
        <source>这些访问所带来的副作用会被上下文自动收集，并在插件被停用时进行回收。</source>
        <target state="needs-translation">这些访问所带来的副作用会被上下文自动收集，并在插件被停用时进行回收。</target>
      </trans-unit>
      <trans-unit id="46348">
        <source>[开发 &gt; 模块化](../guide/plugin/index.md)</source>
        <target state="needs-translation">[开发 &gt; 模块化](../guide/plugin/index.md)</target>
      </trans-unit>
      <trans-unit id="46350">
        <source>[API &gt; 核心模块 &gt; 上下文](./core/context.md)</source>
        <target state="needs-translation">[API &gt; 核心模块 &gt; 上下文](./core/context.md)</target>
      </trans-unit>
      <trans-unit id="63588">
        <source>数据库 (Database) {#database}</source>
        <target state="needs-translation">数据库 (Database) {#database}</target>
      </trans-unit>
      <trans-unit id="46354">
        <source>Koishi 设计了一整套对象关系映射 (ORM) 接口，它易于扩展并广泛地运用于各种插件中，足以应对绝大部分使用场景。</source>
        <target state="needs-translation">Koishi 设计了一整套对象关系映射 (ORM) 接口，它易于扩展并广泛地运用于各种插件中，足以应对绝大部分使用场景。</target>
      </trans-unit>
      <trans-unit id="46356">
        <source>你可以在插件中通过 `ctx.database` 访问数据库服务。</source>
        <target state="needs-translation">你可以在插件中通过 `ctx.database` 访问数据库服务。</target>
      </trans-unit>
      <trans-unit id="46358">
        <source>[开发 &gt; 数据库 &gt; 使用数据库](../guide/database/index.md)</source>
        <target state="needs-translation">[开发 &gt; 数据库 &gt; 使用数据库](../guide/database/index.md)</target>
      </trans-unit>
      <trans-unit id="46360">
        <source>[API &gt; 数据库](./database/built-in.md)</source>
        <target state="needs-translation">[API &gt; 数据库](./database/built-in.md)</target>
      </trans-unit>
      <trans-unit id="63590">
        <source>消息元素 (Element) {#element}</source>
        <target state="needs-translation">消息元素 (Element) {#element}</target>
      </trans-unit>
      <trans-unit id="46364">
        <source>消息元素类似于 HTML 元素，它是组成消息的基本单位。</source>
        <target state="needs-translation">消息元素类似于 HTML 元素，它是组成消息的基本单位。</target>
      </trans-unit>
      <trans-unit id="46366">
        <source>一个元素可以表示具有特定语义的内容，如文本、表情、图片、引用、元信息等。</source>
        <target state="needs-translation">一个元素可以表示具有特定语义的内容，如文本、表情、图片、引用、元信息等。</target>
      </trans-unit>
      <trans-unit id="46368">
        <source>Koishi 会将这些元素转换为平台所支持的格式，以便在不同平台之间发送和接收消息。</source>
        <target state="needs-translation">Koishi 会将这些元素转换为平台所支持的格式，以便在不同平台之间发送和接收消息。</target>
      </trans-unit>
      <trans-unit id="46370">
        <source>[开发 &gt; 交互基础 &gt; 消息元素](../guide/basic/element.md)</source>
        <target state="needs-translation">[开发 &gt; 交互基础 &gt; 消息元素](../guide/basic/element.md)</target>
      </trans-unit>
      <trans-unit id="46372">
        <source>[开发 &gt; 跨平台 &gt; 消息编码](../guide/adapter/message.md)</source>
        <target state="needs-translation">[开发 &gt; 跨平台 &gt; 消息编码](../guide/adapter/message.md)</target>
      </trans-unit>
      <trans-unit id="46374">
        <source>[API &gt; 消息元素](./message/syntax.md)</source>
        <target state="needs-translation">[API &gt; 消息元素](./message/syntax.md)</target>
      </trans-unit>
      <trans-unit id="63592">
        <source>事件 (Events) {#events}</source>
        <target state="needs-translation">事件 (Events) {#events}</target>
      </trans-unit>
      <trans-unit id="46378">
        <source>[开发 &gt; 交互基础 &gt; 事件系统](../guide/basic/events.md)</source>
        <target state="needs-translation">[开发 &gt; 交互基础 &gt; 事件系统](../guide/basic/events.md)</target>
      </trans-unit>
      <trans-unit id="46380">
        <source>[API &gt; 核心模块 &gt; 事件](./core/events.md)</source>
        <target state="needs-translation">[API &gt; 核心模块 &gt; 事件](./core/events.md)</target>
      </trans-unit>
      <trans-unit id="46382">
        <source>[API &gt; 内置服务 &gt; 事件系统](./service/events.md)</source>
        <target state="needs-translation">[API &gt; 内置服务 &gt; 事件系统](./service/events.md)</target>
      </trans-unit>
      <trans-unit id="63594">
        <source>过滤器 (Filter) {#filter}</source>
        <target state="needs-translation">过滤器 (Filter) {#filter}</target>
      </trans-unit>
      <trans-unit id="66984">
        <source>[入门 &gt; 过滤器](../manual/usage/customize.md#filters)</source>
        <target state="needs-translation">[入门 &gt; 过滤器](../manual/usage/customize.md#filters)</target>
      </trans-unit>
      <trans-unit id="46388">
        <source>[开发 &gt; 模块化 &gt; 过滤器](../guide/plugin/filter.md)</source>
        <target state="needs-translation">[开发 &gt; 模块化 &gt; 过滤器](../guide/plugin/filter.md)</target>
      </trans-unit>
      <trans-unit id="46390">
        <source>[API &gt; 内置服务 &gt; 过滤器](./service/filter.md)</source>
        <target state="needs-translation">[API &gt; 内置服务 &gt; 过滤器](./service/filter.md)</target>
      </trans-unit>
      <trans-unit id="63596">
        <source>群组 (Guild) {#guild}</source>
        <target state="needs-translation">群组 (Guild) {#guild}</target>
      </trans-unit>
      <trans-unit id="46394">
        <source>群组是平台用户的集合。</source>
        <target state="needs-translation">群组是平台用户的集合。</target>
      </trans-unit>
      <trans-unit id="63598">
        <source>一个群组通常会同时包含一组[用户](#user)和[频道](#channel)，并通过权限机制让其中的部分用户进行管理。</source>
        <target state="needs-translation">一个群组通常会同时包含一组[用户](#user)和[频道](#channel)，并通过权限机制让其中的部分用户进行管理。</target>
      </trans-unit>
      <trans-unit id="46398">
        <source>在部分平台中，群组和群聊频道的概念恰好是重合的 (例如 Telegram)：一个群组内有且仅有一个群聊频道。</source>
        <target state="needs-translation">在部分平台中，群组和群聊频道的概念恰好是重合的 (例如 Telegram)：一个群组内有且仅有一个群聊频道。</target>
      </trans-unit>
      <trans-unit id="46400">
        <source>私聊频道不属于任何群组。</source>
        <target state="needs-translation">私聊频道不属于任何群组。</target>
      </trans-unit>
      <trans-unit id="46402">
        <source>[开发 &gt; 跨平台 &gt; 基础知识](../guide/adapter/index.html#核心概念)</source>
        <target state="needs-translation">[开发 &gt; 跨平台 &gt; 基础知识](../guide/adapter/index.html#核心概念)</target>
      </trans-unit>
      <trans-unit id="46404">
        <source>[API &gt; 平台资源 &gt; 群组](./resources/guild.md)</source>
        <target state="needs-translation">[API &gt; 平台资源 &gt; 群组](./resources/guild.md)</target>
      </trans-unit>
      <trans-unit id="63600">
        <source>生命周期 (Lifecycle) {#lifecycle}</source>
        <target state="needs-translation">生命周期 (Lifecycle) {#lifecycle}</target>
      </trans-unit>
      <trans-unit id="46408">
        <source>[开发 &gt; 模块化 &gt; 生命周期](../guide/plugin/lifecycle.md)</source>
        <target state="needs-translation">[开发 &gt; 模块化 &gt; 生命周期](../guide/plugin/lifecycle.md)</target>
      </trans-unit>
      <trans-unit id="46410">
        <source>[API &gt; 核心模块 &gt; 事件](./core/events.html#生命周期事件)</source>
        <target state="needs-translation">[API &gt; 核心模块 &gt; 事件](./core/events.html#生命周期事件)</target>
      </trans-unit>
      <trans-unit id="46412">
        <source>[API &gt; 内置服务 &gt; 插件系统](./service/registry.md)</source>
        <target state="needs-translation">[API &gt; 内置服务 &gt; 插件系统](./service/registry.md)</target>
      </trans-unit>
      <trans-unit id="63602">
        <source>中间件 (Middleware) {#middleware}</source>
        <target state="needs-translation">中间件 (Middleware) {#middleware}</target>
      </trans-unit>
      <trans-unit id="46416">
        <source>[开发 &gt; 交互基础 &gt; 中间件](../guide/basic/middleware.md)</source>
        <target state="needs-translation">[开发 &gt; 交互基础 &gt; 中间件](../guide/basic/middleware.md)</target>
      </trans-unit>
      <trans-unit id="63604">
        <source>数据模型 (Model) {#model}</source>
        <target state="needs-translation">数据模型 (Model) {#model}</target>
      </trans-unit>
      <trans-unit id="46420">
        <source>[开发 &gt; 数据库 &gt; 数据模型](../guide/database/model.md)</source>
        <target state="needs-translation">[开发 &gt; 数据库 &gt; 数据模型](../guide/database/model.md)</target>
      </trans-unit>
      <trans-unit id="46422">
        <source>[API &gt; 数据库 &gt; 数据模型](./database/model.md)</source>
        <target state="needs-translation">[API &gt; 数据库 &gt; 数据模型](./database/model.md)</target>
      </trans-unit>
      <trans-unit id="63606">
        <source>平台 (Platform) {#platform}</source>
        <target state="needs-translation">平台 (Platform) {#platform}</target>
      </trans-unit>
      <trans-unit id="46426">
        <source>平台是指聊天平台，比如 QQ、Discord 等。</source>
        <target state="needs-translation">平台是指聊天平台，比如 QQ、Discord 等。</target>
      </trans-unit>
      <trans-unit id="46428">
        <source>同一平台内的用户间具有相互发送消息的能力，而不同平台的用户间则没有。</source>
        <target state="needs-translation">同一平台内的用户间具有相互发送消息的能力，而不同平台的用户间则没有。</target>
      </trans-unit>
      <trans-unit id="46430">
        <source>对于 Rocket.Chat 这一类可自建的聊天平台而言，每个独立的自建服务器都视为不同的平台。</source>
        <target state="needs-translation">对于 Rocket.Chat 这一类可自建的聊天平台而言，每个独立的自建服务器都视为不同的平台。</target>
      </trans-unit>
      <trans-unit id="46432">
        <source>[开发 &gt; 跨平台 &gt; 基础知识](../guide/adapter/index.html#核心概念)</source>
        <target state="needs-translation">[开发 &gt; 跨平台 &gt; 基础知识](../guide/adapter/index.html#核心概念)</target>
      </trans-unit>
      <trans-unit id="63608">
        <source>插件 (Plugin) {#plugin}</source>
        <target state="needs-translation">插件 (Plugin) {#plugin}</target>
      </trans-unit>
      <trans-unit id="46436">
        <source>[开发 &gt; 模块化 &gt; 认识插件](../guide/plugin/index.md)</source>
        <target state="needs-translation">[开发 &gt; 模块化 &gt; 认识插件](../guide/plugin/index.md)</target>
      </trans-unit>
      <trans-unit id="46438">
        <source>[API &gt; 内置服务 &gt; 插件系统](./service/registry.md)</source>
        <target state="needs-translation">[API &gt; 内置服务 &gt; 插件系统](./service/registry.md)</target>
      </trans-unit>
      <trans-unit id="63610">
        <source>协议 (Protocol) {#protocol}</source>
        <target state="needs-translation">协议 (Protocol) {#protocol}</target>
      </trans-unit>
      <trans-unit id="63612">
        <source>配置构型 (Schema) {#schema}</source>
        <target state="needs-translation">配置构型 (Schema) {#schema}</target>
      </trans-unit>
      <trans-unit id="46448">
        <source>[开发 &gt; 模块化 &gt; 配置构型](../guide/plugin/schema.md)</source>
        <target state="needs-translation">[开发 &gt; 模块化 &gt; 配置构型](../guide/plugin/schema.md)</target>
      </trans-unit>
      <trans-unit id="46450">
        <source>[演练场 &gt; 配置构型](../schema/index.md)</source>
        <target state="needs-translation">[演练场 &gt; 配置构型](../schema/index.md)</target>
      </trans-unit>
      <trans-unit id="63614">
        <source>服务 (Service) {#service}</source>
        <target state="needs-translation">服务 (Service) {#service}</target>
      </trans-unit>
      <trans-unit id="46454">
        <source>服务是一系列挂载于上下文对象上的功能的合集 (例如数据库和路由等)。</source>
        <target state="needs-translation">服务是一系列挂载于上下文对象上的功能的合集 (例如数据库和路由等)。</target>
      </trans-unit>
      <trans-unit id="46456">
        <source>为避免耦合，这些功能并不直接定义在上下文本身，而是将应用看作一个容器，通过依赖合并的方式来实现控制的反转。</source>
        <target state="needs-translation">为避免耦合，这些功能并不直接定义在上下文本身，而是将应用看作一个容器，通过依赖合并的方式来实现控制的反转。</target>
      </trans-unit>
      <trans-unit id="46458">
        <source>[开发 &gt; 模块化 &gt; 服务与依赖](../guide/plugin/service.md)</source>
        <target state="needs-translation">[开发 &gt; 模块化 &gt; 服务与依赖](../guide/plugin/service.md)</target>
      </trans-unit>
      <trans-unit id="46460">
        <source>[API &gt; 核心模块 &gt; 上下文](./core/context.md#混入属性和方法)</source>
        <target state="needs-translation">[API &gt; 核心模块 &gt; 上下文](./core/context.md#混入属性和方法)</target>
      </trans-unit>
      <trans-unit id="63616">
        <source>会话 (Session) {#session}</source>
        <target state="needs-translation">会话 (Session) {#session}</target>
      </trans-unit>
      <trans-unit id="46464">
        <source>会话对象封装了一次上报事件所含有的属性以及其上的可用操作。</source>
        <target state="needs-translation">会话对象封装了一次上报事件所含有的属性以及其上的可用操作。</target>
      </trans-unit>
      <trans-unit id="46466">
        <source>你会在事件，中间件和指令的回调函数中用到它。</source>
        <target state="needs-translation">你会在事件，中间件和指令的回调函数中用到它。</target>
      </trans-unit>
      <trans-unit id="46468">
        <source>此外，会话对象还提供了许多实用方法，足以满足绝大部分的使用场景。</source>
        <target state="needs-translation">此外，会话对象还提供了许多实用方法，足以满足绝大部分的使用场景。</target>
      </trans-unit>
      <trans-unit id="46470">
        <source>[开发 &gt; 交互基础 &gt; 事件系统](../guide/basic/events.md)</source>
        <target state="needs-translation">[开发 &gt; 交互基础 &gt; 事件系统](../guide/basic/events.md)</target>
      </trans-unit>
      <trans-unit id="46472">
        <source>[API &gt; 核心模块 &gt; 会话](./core/session.md)</source>
        <target state="needs-translation">[API &gt; 核心模块 &gt; 会话](./core/session.md)</target>
      </trans-unit>
      <trans-unit id="63618">
        <source>用户 (User) {#user}</source>
        <target state="needs-translation">用户 (User) {#user}</target>
      </trans-unit>
      <trans-unit id="46476">
        <source>[API &gt; 平台资源 &gt; 用户](./resources/user.md)</source>
        <target state="needs-translation">[API &gt; 平台资源 &gt; 用户](./resources/user.md)</target>
      </trans-unit>
      <trans-unit id="46478">
        <source>[API &gt; 数据库 &gt; 内置数据结构](./database/built-in.md#user)</source>
        <target state="needs-translation">[API &gt; 数据库 &gt; 内置数据结构](./database/built-in.md#user)</target>
      </trans-unit>
    </body>
  </file>
  <file id="1446" original="/[koishijs.docs] main/zh-CN/api/index.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="46480">
        <source>API 参考</source>
        <target state="needs-translation">API 参考</target>
      </trans-unit>
    </body>
  </file>
  <file id="1448" original="/[koishijs.docs] main/zh-CN/api/message/api.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="46482">
        <source>渲染函数</source>
        <target state="needs-translation">渲染函数</target>
      </trans-unit>
      <trans-unit id="46484">
        <source>实例属性</source>
        <target state="needs-translation">实例属性</target>
      </trans-unit>
      <trans-unit id="46486">
        <source>一个消息元素对象的结构如下：</source>
        <target state="needs-translation">一个消息元素对象的结构如下：</target>
      </trans-unit>
      <trans-unit id="46488">
        <source>interface Element {
  type: string
  attrs: object
  children: Element[]
}</source>
        <target state="needs-translation">interface Element {
  type: string
  attrs: object
  children: Element[]
}</target>
      </trans-unit>
      <trans-unit id="46490">
        <source>静态方法</source>
        <target state="needs-translation">静态方法</target>
      </trans-unit>
      <trans-unit id="46492">
        <source>h(type, attrs?, ...children?)</source>
        <target state="needs-translation">h(type, attrs?, ...children?)</target>
      </trans-unit>
      <trans-unit id="46494">
        <source>**type:** `string | Function` 消息元素类型</source>
        <target state="needs-translation">**type:** `string | Function` 消息元素类型</target>
      </trans-unit>
      <trans-unit id="46496">
        <source>**attrs:** `object` 消息元素属性</source>
        <target state="needs-translation">**attrs:** `object` 消息元素属性</target>
      </trans-unit>
      <trans-unit id="46498">
        <source>**children:** `Element[]` 子消息元素</source>
        <target state="needs-translation">**children:** `Element[]` 子消息元素</target>
      </trans-unit>
      <trans-unit id="46500">
        <source>返回值: `Element` 生成的消息元素</source>
        <target state="needs-translation">返回值: `Element` 生成的消息元素</target>
      </trans-unit>
      <trans-unit id="46502">
        <source>构造一个消息元素对象。</source>
        <target state="needs-translation">构造一个消息元素对象。</target>
      </trans-unit>
      <trans-unit id="46504">
        <source>如果 `type` 是一个函数，则会视为一个自定义消息组件。</source>
        <target state="needs-translation">如果 `type` 是一个函数，则会视为一个自定义消息组件。</target>
      </trans-unit>
      <trans-unit id="46506">
        <source>h.escape(source, inline?)</source>
        <target state="needs-translation">h.escape(source, inline?)</target>
      </trans-unit>
      <trans-unit id="46508">
        <source>**source:** `string` 源文本</source>
        <target state="needs-translation">**source:** `string` 源文本</target>
      </trans-unit>
      <trans-unit id="46510">
        <source>**inline:** `boolean` 在属性内部转义 (会额外处理引号)</source>
        <target state="needs-translation">**inline:** `boolean` 在属性内部转义 (会额外处理引号)</target>
      </trans-unit>
      <trans-unit id="46512">
        <source>返回值: `string` 转义过后的文本</source>
        <target state="needs-translation">返回值: `string` 转义过后的文本</target>
      </trans-unit>
      <trans-unit id="46514">
        <source>转义一段文本到消息元素格式。</source>
        <target state="needs-translation">转义一段文本到消息元素格式。</target>
      </trans-unit>
      <trans-unit id="46516">
        <source>h.unescape(source)</source>
        <target state="needs-translation">h.unescape(source)</target>
      </trans-unit>
      <trans-unit id="46518">
        <source>**source:** `string` 源文本</source>
        <target state="needs-translation">**source:** `string` 源文本</target>
      </trans-unit>
      <trans-unit id="46520">
        <source>返回值: `string` 转义前的文本</source>
        <target state="needs-translation">返回值: `string` 转义前的文本</target>
      </trans-unit>
      <trans-unit id="46522">
        <source>取消一段文本的消息元素转义。</source>
        <target state="needs-translation">取消一段文本的消息元素转义。</target>
      </trans-unit>
      <trans-unit id="46524">
        <source>h.parse(source, context?)</source>
        <target state="needs-translation">h.parse(source, context?)</target>
      </trans-unit>
      <trans-unit id="46526">
        <source>**source:** `string` 源文本</source>
        <target state="needs-translation">**source:** `string` 源文本</target>
      </trans-unit>
      <trans-unit id="46528">
        <source>**context:** `object` 插值上下文</source>
        <target state="needs-translation">**context:** `object` 插值上下文</target>
      </trans-unit>
      <trans-unit id="46530">
        <source>返回值: `Element[]` 消息元素数组</source>
        <target state="needs-translation">返回值: `Element[]` 消息元素数组</target>
      </trans-unit>
      <trans-unit id="46532">
        <source>解析一段文本内的全部消息元素。</source>
        <target state="needs-translation">解析一段文本内的全部消息元素。</target>
      </trans-unit>
      <trans-unit id="46534">
        <source>其中的纯文本将会解析成 `text` 类型。</source>
        <target state="needs-translation">其中的纯文本将会解析成 `text` 类型。</target>
      </trans-unit>
      <trans-unit id="46536">
        <source>当传入 `context` 对象时，将会自动识别源文本中的插值语法并进行替换。</source>
        <target state="needs-translation">当传入 `context` 对象时，将会自动识别源文本中的插值语法并进行替换。</target>
      </trans-unit>
      <trans-unit id="46538">
        <source>h.select(source, query)</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">h.select(source, query)</target>
      </trans-unit>
      <trans-unit id="46540">
        <source>**source:** `string | Element[]` 源文本或消息元素数组</source>
        <target state="needs-translation">**source:** `string | Element[]` 源文本或消息元素数组</target>
      </trans-unit>
      <trans-unit id="46542">
        <source>**query:** `string` 选择器</source>
        <target state="needs-translation">**query:** `string` 选择器</target>
      </trans-unit>
      <trans-unit id="46544">
        <source>返回值: `Element[]` 消息元素数组</source>
        <target state="needs-translation">返回值: `Element[]` 消息元素数组</target>
      </trans-unit>
      <trans-unit id="46546">
        <source>使用选择器在一段文本或消息元素数组中查找。</source>
        <target state="needs-translation">使用选择器在一段文本或消息元素数组中查找。</target>
      </trans-unit>
      <trans-unit id="46548">
        <source>支持的语法包括：</source>
        <target state="needs-translation">支持的语法包括：</target>
      </trans-unit>
      <trans-unit id="46550">
        <source>通配选择器 `*`</source>
        <target state="needs-translation">通配选择器 `*`</target>
      </trans-unit>
      <trans-unit id="46552">
        <source>元素选择器 `type`</source>
        <target state="needs-translation">元素选择器 `type`</target>
      </trans-unit>
      <trans-unit id="46554">
        <source>选择器列表 `sel1, sel2`</source>
        <target state="needs-translation">选择器列表 `sel1, sel2`</target>
      </trans-unit>
      <trans-unit id="46556">
        <source>组合器</source>
        <target state="needs-translation">组合器</target>
      </trans-unit>
      <trans-unit id="46558">
        <source>后代组合器 `sel1 sel2`</source>
        <target state="needs-translation">后代组合器 `sel1 sel2`</target>
      </trans-unit>
      <trans-unit id="46560">
        <source>直接子代组合器 `sel1 &gt; sel2`</source>
        <target state="needs-translation">直接子代组合器 `sel1 &gt; sel2`</target>
      </trans-unit>
      <trans-unit id="46562">
        <source>一般兄弟组合器 `sel1 ~ sel2`</source>
        <target state="needs-translation">一般兄弟组合器 `sel1 ~ sel2`</target>
      </trans-unit>
      <trans-unit id="46564">
        <source>紧邻兄弟组合器 `sel1 + sel2`</source>
        <target state="needs-translation">紧邻兄弟组合器 `sel1 + sel2`</target>
      </trans-unit>
      <trans-unit id="46566">
        <source>如果传入了字符串，则会先使用 [`h.parse()`](#h-parse) 进行解析。</source>
        <target state="needs-translation">如果传入了字符串，则会先使用 [`h.parse()`](#h-parse) 进行解析。</target>
      </trans-unit>
      <trans-unit id="46568">
        <source>h.transform(source, rules, session?)</source>
        <target state="needs-translation">h.transform(source, rules, session?)</target>
      </trans-unit>
      <trans-unit id="46570">
        <source>**source:** `string | Element[]` 源文本或消息元素数组</source>
        <target state="needs-translation">**source:** `string | Element[]` 源文本或消息元素数组</target>
      </trans-unit>
      <trans-unit id="46572">
        <source>**rules:** `Dict&lt;Transformer&gt;` 转换规则，以消息元素类型为键</source>
        <target state="needs-translation">**rules:** `Dict&lt;Transformer&gt;` 转换规则，以消息元素类型为键</target>
      </trans-unit>
      <trans-unit id="46574">
        <source>**session:** `Session` 会话对象</source>
        <target state="needs-translation">**session:** `Session` 会话对象</target>
      </trans-unit>
      <trans-unit id="46576">
        <source>返回值: `string | Element[]` 转换后的文本或消息元素数组</source>
        <target state="needs-translation">返回值: `string | Element[]` 转换后的文本或消息元素数组</target>
      </trans-unit>
      <trans-unit id="46578">
        <source>将一段文本或消息元素数组中的所有消息元素按照规则进行转换。</source>
        <target state="needs-translation">将一段文本或消息元素数组中的所有消息元素按照规则进行转换。</target>
      </trans-unit>
      <trans-unit id="46580">
        <source>转换规则的定义方式如下：</source>
        <target state="needs-translation">转换规则的定义方式如下：</target>
      </trans-unit>
      <trans-unit id="46582">
        <source>type Fragment = string | Element | (string | Element)[]
type Transformer = boolean | ((
  attrs: Dict,
  children: Element[],
  session: Session,
) =&gt; Fragment)</source>
        <target state="needs-translation">type Fragment = string | Element | (string | Element)[]
type Transformer = boolean | ((
  attrs: Dict,
  children: Element[],
  session: Session,
) =&gt; Fragment)</target>
      </trans-unit>
      <trans-unit id="46584">
        <source>返回值会与传入的参数保持相同类型。</source>
        <target state="needs-translation">返回值会与传入的参数保持相同类型。</target>
      </trans-unit>
      <trans-unit id="46586">
        <source>如果传入了字符串，则会先使用 [`h.parse()`](#h-parse) 进行解析，并在转换完成后重新序列化。</source>
        <target state="needs-translation">如果传入了字符串，则会先使用 [`h.parse()`](#h-parse) 进行解析，并在转换完成后重新序列化。</target>
      </trans-unit>
      <trans-unit id="46588">
        <source>h.transformAsync(source, rules, session?)</source>
        <target state="needs-translation">h.transformAsync(source, rules, session?)</target>
      </trans-unit>
      <trans-unit id="46590">
        <source>**source:** `string | Element[]` 源文本或消息元素数组</source>
        <target state="needs-translation">**source:** `string | Element[]` 源文本或消息元素数组</target>
      </trans-unit>
      <trans-unit id="46592">
        <source>**rules:** `Dict&lt;AsyncTransformer&gt;` 转换规则，以消息元素类型为键</source>
        <target state="needs-translation">**rules:** `Dict&lt;AsyncTransformer&gt;` 转换规则，以消息元素类型为键</target>
      </trans-unit>
      <trans-unit id="46594">
        <source>**session:** `Session` 会话对象</source>
        <target state="needs-translation">**session:** `Session` 会话对象</target>
      </trans-unit>
      <trans-unit id="46596">
        <source>返回值: `Promise&lt;string | Element[]&gt;` 转换后的文本或消息元素数组</source>
        <target state="needs-translation">返回值: `Promise&lt;string | Element[]&gt;` 转换后的文本或消息元素数组</target>
      </trans-unit>
      <trans-unit id="46598">
        <source>与 [`h.transform()`](#h-transform) 类似，但转换规则可以是异步的，同一层级的各元素的转换将同时进行。</source>
        <target state="needs-translation">与 [`h.transform()`](#h-transform) 类似，但转换规则可以是异步的，同一层级的各元素的转换将同时进行。</target>
      </trans-unit>
      <trans-unit id="46600">
        <source>转换规则的定义方式如下：</source>
        <target state="needs-translation">转换规则的定义方式如下：</target>
      </trans-unit>
      <trans-unit id="46602">
        <source>type AsyncTransformer = boolean | ((
  attrs: Dict,
  children: Element[],
  session: Session,
) =&gt; Awaitable&lt;Fragment&gt;)</source>
        <target state="needs-translation">type AsyncTransformer = boolean | ((
  attrs: Dict,
  children: Element[],
  session: Session,
) =&gt; Awaitable&lt;Fragment&gt;)</target>
      </trans-unit>
      <trans-unit id="46604">
        <source>快捷调用</source>
        <target state="needs-translation">快捷调用</target>
      </trans-unit>
      <trans-unit id="46606">
        <source>我们也为一些常见的标准元素提供了语法糖，可以直接通过一些静态方法进行调用。</source>
        <target state="needs-translation">我们也为一些常见的标准元素提供了语法糖，可以直接通过一些静态方法进行调用。</target>
      </trans-unit>
      <trans-unit id="46608">
        <source>// content
h.text(content)

// id
h.at(id)
h.sharp(id)
h.quote(id)

// url
h.image(url)
h.audio(url)
h.video(url)
h.file(url)

// buffer
h.image(buffer, 'image/png')
h.audio(buffer, 'audio/mpeg')
h.video(buffer, 'video/mp4')
h.file(buffer, 'application/octet-stream')</source>
        <target state="needs-translation">// content
h.text(content)

// id
h.at(id)
h.sharp(id)
h.quote(id)

// url
h.image(url)
h.audio(url)
h.video(url)
h.file(url)

// buffer
h.image(buffer, 'image/png')
h.audio(buffer, 'audio/mpeg')
h.video(buffer, 'video/mp4')
h.file(buffer, 'application/octet-stream')</target>
      </trans-unit>
    </body>
  </file>
  <file id="1450" original="/[koishijs.docs] main/zh-CN/api/message/components.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="46610">
        <source>内置组件</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">內建元件</target>
      </trans-unit>
      <trans-unit id="46612">
        <source>标有 &lt;badge&gt;会话&lt;/badge&gt; 的组件只能在会话环境下使用 (常见的会话环境包括中间件和指令的内部)</source>
        <target state="needs-translation">标有 &lt;badge&gt;会话&lt;/badge&gt; 的组件只能在会话环境下使用 (常见的会话环境包括中间件和指令的内部)</target>
      </trans-unit>
      <trans-unit id="46614">
        <source>标有 &lt;badge&gt;会话+广播&lt;/badge&gt; 的组件只能在会话环境或 `ctx.broadcast()` 中使用</source>
        <target state="needs-translation">标有 &lt;badge&gt;会话+广播&lt;/badge&gt; 的组件只能在会话环境或 `ctx.broadcast()` 中使用</target>
      </trans-unit>
      <trans-unit id="46616">
        <source>核心组件</source>
        <target state="needs-translation">核心组件</target>
      </trans-unit>
      <trans-unit id="46618">
        <source>调用指令 (execute) &lt;badge&gt;会话&lt;/badge&gt;</source>
        <target state="needs-translation">调用指令 (execute) &lt;badge&gt;会话&lt;/badge&gt;</target>
      </trans-unit>
      <trans-unit id="46620">
        <source>按照子元素执行指令，并使用指令的输出替换此元素。</source>
        <target state="needs-translation">按照子元素执行指令，并使用指令的输出替换此元素。</target>
      </trans-unit>
      <trans-unit id="46622">
        <source>foo&lt;execute&gt;echo 123&lt;/execute&gt;bar</source>
        <target state="needs-translation">foo&lt;execute&gt;echo 123&lt;/execute&gt;bar</target>
      </trans-unit>
      <trans-unit id="46624">
        <source>foo123bar</source>
        <target state="needs-translation">foo123bar</target>
      </trans-unit>
      <trans-unit id="46626">
        <source>等待输入 (prompt) &lt;badge&gt;会话&lt;/badge&gt;</source>
        <target state="needs-translation">等待输入 (prompt) &lt;badge&gt;会话&lt;/badge&gt;</target>
      </trans-unit>
      <trans-unit id="46628">
        <source>输出子元素并等待用户输入，并使用输入内容替换此元素。</source>
        <target state="needs-translation">输出子元素并等待用户输入，并使用输入内容替换此元素。</target>
      </trans-unit>
      <trans-unit id="46630">
        <source>你输入的内容为：&lt;prompt&gt;请输入一段文本。&lt;/prompt&gt;</source>
        <target state="needs-translation">你输入的内容为：&lt;prompt&gt;请输入一段文本。&lt;/prompt&gt;</target>
      </trans-unit>
      <trans-unit id="46632">
        <source>请输入一段文本。</source>
        <target state="needs-translation">请输入一段文本。</target>
      </trans-unit>
      <trans-unit id="46634">
        <source>你好！</source>
        <target state="needs-translation">你好！</target>
      </trans-unit>
      <trans-unit id="46636">
        <source>你输入的内容为：你好！</source>
        <target state="needs-translation">你输入的内容为：你好！</target>
      </trans-unit>
      <trans-unit id="46638">
        <source>国际化 (i18n) &lt;badge&gt;会话+广播&lt;/badge&gt;</source>
        <target state="needs-translation">国际化 (i18n) &lt;badge&gt;会话+广播&lt;/badge&gt;</target>
      </trans-unit>
      <trans-unit id="46640">
        <source>**path:** 本地化路径</source>
        <target state="needs-translation">**path:** 本地化路径</target>
      </trans-unit>
      <trans-unit id="46642">
        <source>渲染本地化文件中对应的路径替换此元素。</source>
        <target state="needs-translation">渲染本地化文件中对应的路径替换此元素。</target>
      </trans-unit>
      <trans-unit id="46644">
        <source>&lt;i18n path=&quot;foo.bar&quot;/&gt;</source>
        <target state="needs-translation">&lt;i18n path=&quot;foo.bar&quot;/&gt;</target>
      </trans-unit>
      <trans-unit id="46646">
        <source>foo:
  bar: Hello, world!</source>
        <target state="needs-translation">foo:
  bar: Hello, world!</target>
      </trans-unit>
      <trans-unit id="46648">
        <source>传入 `path` 为 `foo.bar` 时：</source>
        <target state="needs-translation">传入 `path` 为 `foo.bar` 时：</target>
      </trans-unit>
      <trans-unit id="46650">
        <source>Hello, world!</source>
        <target state="needs-translation">Hello, world!</target>
      </trans-unit>
      <trans-unit id="64620">
        <source>这个组件也可以配合插值使用：</source>
        <target state="needs-translation">这个组件也可以配合插值使用：</target>
      </trans-unit>
      <trans-unit id="64622">
        <source>&lt;i18n path=&quot;foo.bar&quot;&gt;{'Koishi'}&lt;/i18n&gt;</source>
        <target state="needs-translation">&lt;i18n path=&quot;foo.bar&quot;&gt;{'Koishi'}&lt;/i18n&gt;</target>
      </trans-unit>
      <trans-unit id="64624">
        <source>foo:
  bar: Hello, {0}!</source>
        <target state="needs-translation">foo:
  bar: Hello, {0}!</target>
      </trans-unit>
      <trans-unit id="64626">
        <source>Hello, Koishi!</source>
        <target state="needs-translation">Hello, Koishi!</target>
      </trans-unit>
      <trans-unit id="46652">
        <source>时间 (i18n:time) &lt;badge&gt;会话+广播&lt;/badge&gt;</source>
        <target state="needs-translation">时间 (i18n:time) &lt;badge&gt;会话+广播&lt;/badge&gt;</target>
      </trans-unit>
      <trans-unit id="46654">
        <source>**value:** 时间长度（毫秒）</source>
        <target state="needs-translation">**value:** 时间长度（毫秒）</target>
      </trans-unit>
      <trans-unit id="46656">
        <source>根据本地语言渲染时间长度。</source>
        <target state="needs-translation">根据本地语言渲染时间长度。</target>
      </trans-unit>
      <trans-unit id="46658">
        <source>剩余时间：&lt;i18n:time value={value}/&gt;</source>
        <target state="needs-translation">剩余时间：&lt;i18n:time value={value}/&gt;</target>
      </trans-unit>
      <trans-unit id="46660">
        <source>传入 `value` 为 `114514` 时：</source>
        <target state="needs-translation">传入 `value` 为 `114514` 时：</target>
      </trans-unit>
      <trans-unit id="46662">
        <source>剩余时间：1 分钟 55 秒</source>
        <target state="needs-translation">剩余时间：1 分钟 55 秒</target>
      </trans-unit>
      <trans-unit id="46664">
        <source>随机选取 (random) &lt;badge type=&quot;warning&quot;&gt;实验性&lt;/badge&gt;</source>
        <target state="needs-translation">随机选取 (random) &lt;badge type=&quot;warning&quot;&gt;实验性&lt;/badge&gt;</target>
      </trans-unit>
      <trans-unit id="46666">
        <source>选择随机的子元素。</source>
        <target state="needs-translation">选择随机的子元素。</target>
      </trans-unit>
      <trans-unit id="46668">
        <source>此次抛硬币的结果是&lt;random&gt;
  &lt;template&gt;正面&lt;/template&gt;
  &lt;template&gt;反面&lt;/template&gt;
&lt;/random&gt;</source>
        <target state="needs-translation">此次抛硬币的结果是&lt;random&gt;
  &lt;template&gt;正面&lt;/template&gt;
  &lt;template&gt;反面&lt;/template&gt;
&lt;/random&gt;</target>
      </trans-unit>
      <trans-unit id="46670">
        <source>此次抛硬币的结果是反面</source>
        <target state="needs-translation">此次抛硬币的结果是反面</target>
      </trans-unit>
      <trans-unit id="46672">
        <source>复数 (plural) &lt;badge type=&quot;warning&quot;&gt;实验性&lt;/badge&gt;</source>
        <target state="needs-translation">复数 (plural) &lt;badge type=&quot;warning&quot;&gt;实验性&lt;/badge&gt;</target>
      </trans-unit>
      <trans-unit id="46674">
        <source>**count:** 用于判断的数值</source>
        <target state="needs-translation">**count:** 用于判断的数值</target>
      </trans-unit>
      <trans-unit id="46676">
        <source>根据 `count` 数值决定选择子元素。</source>
        <target state="needs-translation">根据 `count` 数值决定选择子元素。</target>
      </trans-unit>
      <trans-unit id="46678">
        <source>You have &lt;plural count={count}&gt;
  &lt;template&gt;no apples&lt;/template&gt;
  &lt;template&gt;one apple&lt;/template&gt;
  &lt;template&gt;{count} apples&lt;/template&gt;
&lt;/plural&gt;.</source>
        <target state="needs-translation">You have &lt;plural count={count}&gt;
  &lt;template&gt;no apples&lt;/template&gt;
  &lt;template&gt;one apple&lt;/template&gt;
  &lt;template&gt;{count} apples&lt;/template&gt;
&lt;/plural&gt;.</target>
      </trans-unit>
      <trans-unit id="46680">
        <source>传入 `count` 为 2 时：</source>
        <target state="needs-translation">传入 `count` 为 2 时：</target>
      </trans-unit>
      <trans-unit id="46682">
        <source>You have 2 apples.</source>
        <target state="needs-translation">You have 2 apples.</target>
      </trans-unit>
      <trans-unit id="46684">
        <source>扩展组件</source>
        <target state="needs-translation">扩展组件</target>
      </trans-unit>
      <trans-unit id="64944">
        <source>网页渲染 (html) &lt;badge&gt;需要 Puppeteer&lt;/badge&gt;</source>
        <target state="needs-translation">网页渲染 (html) &lt;badge&gt;需要 Puppeteer&lt;/badge&gt;</target>
      </trans-unit>
      <trans-unit id="64946">
        <source>**style:** HTML 中 `body` 标签的 `style` 属性</source>
        <target state="needs-translation">**style:** HTML 中 `body` 标签的 `style` 属性</target>
      </trans-unit>
      <trans-unit id="64948">
        <source>调用 Puppeteer 渲染给定 HTML。</source>
        <target state="needs-translation">调用 Puppeteer 渲染给定 HTML。</target>
      </trans-unit>
      <trans-unit id="64950">
        <source>JSX 中的 `html` 将被转化为为 HTML 中的 `body` 标签。</source>
        <target state="needs-translation">JSX 中的 `html` 将被转化为为 HTML 中的 `body` 标签。</target>
      </trans-unit>
      <trans-unit id="64952">
        <source>&lt;html style={&quot;color: purple;&quot;}&gt;
  &lt;h1&gt;This is a header&lt;/h1&gt;
  &lt;p&gt;Hello Puppeteer!&lt;/p&gt;
&lt;/html&gt;</source>
        <target state="needs-translation">&lt;html style={&quot;color: purple;&quot;}&gt;
  &lt;h1&gt;This is a header&lt;/h1&gt;
  &lt;p&gt;Hello Puppeteer!&lt;/p&gt;
&lt;/html&gt;</target>
      </trans-unit>
      <trans-unit id="64954">
        <source>你也可以为 `style` 属性指定一个对象：</source>
        <target state="needs-translation">你也可以为 `style` 属性指定一个对象：</target>
      </trans-unit>
      <trans-unit id="64956">
        <source>&lt;html style={{
  color: &quot;purple&quot;,
}}&gt;
  &lt;h1&gt;This is a header&lt;/h1&gt;
  &lt;p&gt;Hello Puppeteer!&lt;/p&gt;
&lt;/html&gt;</source>
        <target state="needs-translation">&lt;html style={{
  color: &quot;purple&quot;,
}}&gt;
  &lt;h1&gt;This is a header&lt;/h1&gt;
  &lt;p&gt;Hello Puppeteer!&lt;/p&gt;
&lt;/html&gt;</target>
      </trans-unit>
      <trans-unit id="64958">
        <source>如果你需要向 HTML 的 `head` 标签中添加 CSS 等页面属性，可以将它们包裹在 `head` 中。</source>
        <target state="needs-translation">如果你需要向 HTML 的 `head` 标签中添加 CSS 等页面属性，可以将它们包裹在 `head` 中。</target>
      </trans-unit>
      <trans-unit id="64960">
        <source>下面是一个例子：</source>
        <target state="needs-translation">下面是一个例子：</target>
      </trans-unit>
      <trans-unit id="64962">
        <source>&lt;html&gt;
  &lt;head&gt;
    &lt;style&gt;
      {`
        body {
          color: &quot;purple&quot;
        }
      `}
    &lt;/style&gt;
  &lt;/head&gt;

  &lt;h1&gt;This is a header&lt;/h1&gt;
  &lt;p&gt;Hello Puppeteer!&lt;/p&gt;
&lt;/html&gt;</source>
        <target state="needs-translation">&lt;html&gt;
  &lt;head&gt;
    &lt;style&gt;
      {`
        body {
          color: &quot;purple&quot;
        }
      `}
    &lt;/style&gt;
  &lt;/head&gt;

  &lt;h1&gt;This is a header&lt;/h1&gt;
  &lt;p&gt;Hello Puppeteer!&lt;/p&gt;
&lt;/html&gt;</target>
      </trans-unit>
      <trans-unit id="46688">
        <source>内容审查 (censor)</source>
        <target state="needs-translation">内容审查 (censor)</target>
      </trans-unit>
    </body>
  </file>
  <file id="1452" original="/[koishijs.docs] main/zh-CN/api/message/elements.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="46690">
        <source>标准元素</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">標準元素</target>
      </trans-unit>
      <trans-unit id="46692">
        <source>这里列出了应该由各适配器实现的标准消息元素。</source>
        <target state="needs-translation">这里列出了应该由各适配器实现的标准消息元素。</target>
      </trans-unit>
      <trans-unit id="46694">
        <source>各适配器由于平台的限制可能表现出一定的行为差异，但应尽可能贴近标准规定的语义。</source>
        <target state="needs-translation">各适配器由于平台的限制可能表现出一定的行为差异，但应尽可能贴近标准规定的语义。</target>
      </trans-unit>
      <trans-unit id="46698">
        <source>HTML 中标签 `&lt;u&gt;` 的定义是「表意不清标注元素」，而 Koishi 这里只使用了下划线的功能</source>
        <target state="needs-translation">HTML 中标签 `&lt;u&gt;` 的定义是「表意不清标注元素」，而 Koishi 这里只使用了下划线的功能</target>
      </trans-unit>
      <trans-unit id="46700">
        <source>HTML 中图像对应 `&lt;img&gt;` 标签，而 Koishi 中则是 `&lt;image&gt;`，并且语法也不相同
:::</source>
        <target state="needs-translation">HTML 中图像对应 `&lt;img&gt;` 标签，而 Koishi 中则是 `&lt;image&gt;`，并且语法也不相同
:::</target>
      </trans-unit>
      <trans-unit id="46702">
        <source>基础元素</source>
        <target state="needs-translation">基础元素</target>
      </trans-unit>
      <trans-unit id="46704">
        <source>基础元素是最常见的消息元素，它们能够在大多数平台上正常显示，是组成消息的基本单位。</source>
        <target state="needs-translation">基础元素是最常见的消息元素，它们能够在大多数平台上正常显示，是组成消息的基本单位。</target>
      </trans-unit>
      <trans-unit id="64020">
        <source>纯文本 (text) {#text}</source>
        <target state="needs-translation">纯文本 (text) {#text}</target>
      </trans-unit>
      <trans-unit id="46708">
        <source>**content:** `string` 文本内容</source>
        <target state="needs-translation">**content:** `string` 文本内容</target>
      </trans-unit>
      <trans-unit id="46710">
        <source>这是一个特殊的消息元素。</source>
        <target state="needs-translation">这是一个特殊的消息元素。</target>
      </trans-unit>
      <trans-unit id="46712">
        <source>它等价于一段纯文本，并且在序列化时也不会带两侧的标签。</source>
        <target state="needs-translation">它等价于一段纯文本，并且在序列化时也不会带两侧的标签。</target>
      </trans-unit>
      <trans-unit id="64022">
        <source>提及用户 (at) {#at}</source>
        <target state="needs-translation">提及用户 (at) {#at}</target>
      </trans-unit>
      <trans-unit id="46716">
        <source>**id:** `string` 目标用户的 ID</source>
        <target state="needs-translation">**id:** `string` 目标用户的 ID</target>
      </trans-unit>
      <trans-unit id="46718">
        <source>**name:** `string` 目标用户的名称</source>
        <target state="needs-translation">**name:** `string` 目标用户的名称</target>
      </trans-unit>
      <trans-unit id="46720">
        <source>**role:** `string` 目标角色</source>
        <target state="needs-translation">**role:** `string` 目标角色</target>
      </trans-unit>
      <trans-unit id="46722">
        <source>**type:** `string` 特殊操作，例如 all 表示 @全体成员，here 表示 @在线成员</source>
        <target state="needs-translation">**type:** `string` 特殊操作，例如 all 表示 @全体成员，here 表示 @在线成员</target>
      </trans-unit>
      <trans-unit id="46724">
        <source>`&lt;at&gt;` 元素用于提及某个或某些用户。</source>
        <target state="needs-translation">`&lt;at&gt;` 元素用于提及某个或某些用户。</target>
      </trans-unit>
      <trans-unit id="46726">
        <source>由于上述几个属性的语义是互斥的，发送时使用 `id`, `role`, `type` 其一即可。</source>
        <target state="needs-translation">由于上述几个属性的语义是互斥的，发送时使用 `id`, `role`, `type` 其一即可。</target>
      </trans-unit>
      <trans-unit id="64024">
        <source>提及频道 (sharp) {#sharp}</source>
        <target state="needs-translation">提及频道 (sharp) {#sharp}</target>
      </trans-unit>
      <trans-unit id="46730">
        <source>**id:** `string` 目标频道的 ID</source>
        <target state="needs-translation">**id:** `string` 目标频道的 ID</target>
      </trans-unit>
      <trans-unit id="46732">
        <source>**name:** `string` 目标频道的名称</source>
        <target state="needs-translation">**name:** `string` 目标频道的名称</target>
      </trans-unit>
      <trans-unit id="46734">
        <source>`&lt;sharp&gt;` 元素用于提及某个频道。</source>
        <target state="needs-translation">`&lt;sharp&gt;` 元素用于提及某个频道。</target>
      </trans-unit>
      <trans-unit id="64026">
        <source>链接 (a) {#a}</source>
        <target state="needs-translation">链接 (a) {#a}</target>
      </trans-unit>
      <trans-unit id="46738">
        <source>**href:** `string` 链接的 URL</source>
        <target state="needs-translation">**href:** `string` 链接的 URL</target>
      </trans-unit>
      <trans-unit id="46740">
        <source>`&lt;a&gt;` 元素用于显示一个链接。</source>
        <target state="needs-translation">`&lt;a&gt;` 元素用于显示一个链接。</target>
      </trans-unit>
      <trans-unit id="46742">
        <source>当平台不支持链接时，建议显示为 `content (href)` 的形式。</source>
        <target state="needs-translation">当平台不支持链接时，建议显示为 `content (href)` 的形式。</target>
      </trans-unit>
      <trans-unit id="46744">
        <source>资源元素</source>
        <target state="needs-translation">资源元素</target>
      </trans-unit>
      <trans-unit id="46746">
        <source>资源消息元素表示文本中存在的资源文件。</source>
        <target state="needs-translation">资源消息元素表示文本中存在的资源文件。</target>
      </trans-unit>
      <trans-unit id="46748">
        <source>不同的平台对资源文件的支持存在较大的差异。</source>
        <target state="needs-translation">不同的平台对资源文件的支持存在较大的差异。</target>
      </trans-unit>
      <trans-unit id="64028">
        <source>发送时只需提供 `src`。</source>
        <target state="needs-translation">发送时只需提供 `src`。</target>
      </trans-unit>
      <trans-unit id="64030">
        <source>如果某个平台不支持特定的资源类型，适配器应该用 `src` 代替。</source>
        <target state="needs-translation">如果某个平台不支持特定的资源类型，适配器应该用 `src` 代替。</target>
      </trans-unit>
      <trans-unit id="46754">
        <source>如果某个平台不支持将资源消息元素和其他消息元素同时发送，适配器应该分多条发送，并返回最后一条消息的 ID。</source>
        <target state="needs-translation">如果某个平台不支持将资源消息元素和其他消息元素同时发送，适配器应该分多条发送，并返回最后一条消息的 ID。</target>
      </trans-unit>
      <trans-unit id="64032">
        <source>**src:** `string` 资源的 URL</source>
        <target state="needs-translation">**src:** `string` 资源的 URL</target>
      </trans-unit>
      <trans-unit id="64034">
        <source>**title:** `string` 资源文件名称</source>
        <target state="needs-translation">**title:** `string` 资源文件名称</target>
      </trans-unit>
      <trans-unit id="46758">
        <source>**cache:** `boolean` 是否使用已缓存的文件</source>
        <target state="needs-translation">**cache:** `boolean` 是否使用已缓存的文件</target>
      </trans-unit>
      <trans-unit id="46760">
        <source>**timeout:** `string` 下载文件的最长时间</source>
        <target state="needs-translation">**timeout:** `string` 下载文件的最长时间</target>
      </trans-unit>
      <trans-unit id="46762">
        <source>本地文件请使用 `file:` 协议</source>
        <target state="needs-translation">本地文件请使用 `file:` 协议</target>
      </trans-unit>
      <trans-unit id="46764">
        <source>二进制数据请使用 `data:` 协议</source>
        <target state="needs-translation">二进制数据请使用 `data:` 协议</target>
      </trans-unit>
      <trans-unit id="46766">
        <source>关于它们的最佳实践，可以参考 [嵌入图片和其他资源](../../guide/basic/element.md#嵌入图片和其他资源)。</source>
        <target state="needs-translation">关于它们的最佳实践，可以参考 [嵌入图片和其他资源](../../guide/basic/element.md#嵌入图片和其他资源)。</target>
      </trans-unit>
      <trans-unit id="46768">
        <source>:::</source>
        <target state="needs-translation">:::</target>
      </trans-unit>
      <trans-unit id="64036">
        <source>图片 (img) {#img}</source>
        <target state="needs-translation">图片 (img) {#img}</target>
      </trans-unit>
      <trans-unit id="46772">
        <source>除了上述通用属性外，还支持下面的属性：</source>
        <target state="needs-translation">除了上述通用属性外，还支持下面的属性：</target>
      </trans-unit>
      <trans-unit id="64038">
        <source>**width:** `number` 图片宽度 (像素)</source>
        <target state="needs-translation">**width:** `number` 图片宽度 (像素)</target>
      </trans-unit>
      <trans-unit id="64040">
        <source>**height:** `number` 图片高度 (像素)</source>
        <target state="needs-translation">**height:** `number` 图片高度 (像素)</target>
      </trans-unit>
      <trans-unit id="64042">
        <source>`&lt;img&gt;` 元素用于表示图片。</source>
        <target state="needs-translation">`&lt;img&gt;` 元素用于表示图片。</target>
      </trans-unit>
      <trans-unit id="64044">
        <source>音频 (audio) {#audio}</source>
        <target state="needs-translation">音频 (audio) {#audio}</target>
      </trans-unit>
      <trans-unit id="64046">
        <source>除了上述通用属性外，还支持下面的属性：</source>
        <target state="needs-translation">除了上述通用属性外，还支持下面的属性：</target>
      </trans-unit>
      <trans-unit id="64048">
        <source>**duration:** `number` 音频长度 (秒)</source>
        <target state="needs-translation">**duration:** `number` 音频长度 (秒)</target>
      </trans-unit>
      <trans-unit id="64050">
        <source>**poster:** `string` 音频封面 URL</source>
        <target state="needs-translation">**poster:** `string` 音频封面 URL</target>
      </trans-unit>
      <trans-unit id="46782">
        <source>`&lt;audio&gt;` 元素用于表示语音。</source>
        <target state="needs-translation">`&lt;audio&gt;` 元素用于表示语音。</target>
      </trans-unit>
      <trans-unit id="64052">
        <source>视频 (video) {#video}</source>
        <target state="needs-translation">视频 (video) {#video}</target>
      </trans-unit>
      <trans-unit id="64054">
        <source>除了上述通用属性外，还支持下面的属性：</source>
        <target state="needs-translation">除了上述通用属性外，还支持下面的属性：</target>
      </trans-unit>
      <trans-unit id="64056">
        <source>**width:** `number` 视频宽度 (像素)</source>
        <target state="needs-translation">**width:** `number` 视频宽度 (像素)</target>
      </trans-unit>
      <trans-unit id="64058">
        <source>**height:** `number` 视频高度 (像素)</source>
        <target state="needs-translation">**height:** `number` 视频高度 (像素)</target>
      </trans-unit>
      <trans-unit id="64060">
        <source>**duration:** `number` 视频长度 (秒)</source>
        <target state="needs-translation">**duration:** `number` 视频长度 (秒)</target>
      </trans-unit>
      <trans-unit id="64062">
        <source>**poster:** `string` 视频封面 URL</source>
        <target state="needs-translation">**poster:** `string` 视频封面 URL</target>
      </trans-unit>
      <trans-unit id="46788">
        <source>`&lt;video&gt;` 元素用于表示视频。</source>
        <target state="needs-translation">`&lt;video&gt;` 元素用于表示视频。</target>
      </trans-unit>
      <trans-unit id="64064">
        <source>文件 (file) {#file}</source>
        <target state="needs-translation">文件 (file) {#file}</target>
      </trans-unit>
      <trans-unit id="64066">
        <source>除了上述通用属性外，还支持下面的属性：</source>
        <target state="needs-translation">除了上述通用属性外，还支持下面的属性：</target>
      </trans-unit>
      <trans-unit id="64068">
        <source>**poster:** `string` 文件封面 URL</source>
        <target state="needs-translation">**poster:** `string` 文件封面 URL</target>
      </trans-unit>
      <trans-unit id="46794">
        <source>`&lt;file&gt;` 元素用于表示文件。</source>
        <target state="needs-translation">`&lt;file&gt;` 元素用于表示文件。</target>
      </trans-unit>
      <trans-unit id="46796">
        <source>修饰元素</source>
        <target state="needs-translation">修饰元素</target>
      </trans-unit>
      <trans-unit id="46798">
        <source>修饰元素用于修饰其中的内容。</source>
        <target state="needs-translation">修饰元素用于修饰其中的内容。</target>
      </trans-unit>
      <trans-unit id="46800">
        <source>如果对应的平台不支持对应的元素，可以忽略这个元素本身，正常渲染其中的子元素。</source>
        <target state="needs-translation">如果对应的平台不支持对应的元素，可以忽略这个元素本身，正常渲染其中的子元素。</target>
      </trans-unit>
      <trans-unit id="64070">
        <source>粗体 (b, strong) {#b}</source>
        <target state="needs-translation">粗体 (b, strong) {#b}</target>
      </trans-unit>
      <trans-unit id="46804">
        <source>`&lt;b&gt;` 或 `&lt;strong&gt;` 元素用于将其中的内容以粗体显示。</source>
        <target state="needs-translation">`&lt;b&gt;` 或 `&lt;strong&gt;` 元素用于将其中的内容以粗体显示。</target>
      </trans-unit>
      <trans-unit id="64072">
        <source>斜体 (i, em) {#i}</source>
        <target state="needs-translation">斜体 (i, em) {#i}</target>
      </trans-unit>
      <trans-unit id="46808">
        <source>`&lt;i&gt;` 或 `&lt;em&gt;` 元素用于将其中的内容以斜体显示。</source>
        <target state="needs-translation">`&lt;i&gt;` 或 `&lt;em&gt;` 元素用于将其中的内容以斜体显示。</target>
      </trans-unit>
      <trans-unit id="64074">
        <source>下划线 (u, ins) {#u}</source>
        <target state="needs-translation">下划线 (u, ins) {#u}</target>
      </trans-unit>
      <trans-unit id="46812">
        <source>`&lt;u&gt;` 或 `&lt;ins&gt;` 元素用于为其中的内容附加下划线。</source>
        <target state="needs-translation">`&lt;u&gt;` 或 `&lt;ins&gt;` 元素用于为其中的内容附加下划线。</target>
      </trans-unit>
      <trans-unit id="64076">
        <source>删除线 (s, del) {#s}</source>
        <target state="needs-translation">删除线 (s, del) {#s}</target>
      </trans-unit>
      <trans-unit id="46816">
        <source>`&lt;s&gt;` 或 `&lt;del&gt;` 元素用于为其中的内容附加删除线。</source>
        <target state="needs-translation">`&lt;s&gt;` 或 `&lt;del&gt;` 元素用于为其中的内容附加删除线。</target>
      </trans-unit>
      <trans-unit id="64078">
        <source>剧透 (spl) {#spl}</source>
        <target state="needs-translation">剧透 (spl) {#spl}</target>
      </trans-unit>
      <trans-unit id="46820">
        <source>`&lt;spl&gt;` 元素用于将其中的内容标记为剧透 (默认会被隐藏，点击后才显示)。</source>
        <target state="needs-translation">`&lt;spl&gt;` 元素用于将其中的内容标记为剧透 (默认会被隐藏，点击后才显示)。</target>
      </trans-unit>
      <trans-unit id="64080">
        <source>代码 (code) {#code}</source>
        <target state="needs-translation">代码 (code) {#code}</target>
      </trans-unit>
      <trans-unit id="46824">
        <source>`&lt;code&gt;` 元素用于将其中的内容以等宽字体显示 (通常还会有特定的背景色)。</source>
        <target state="needs-translation">`&lt;code&gt;` 元素用于将其中的内容以等宽字体显示 (通常还会有特定的背景色)。</target>
      </trans-unit>
      <trans-unit id="64082">
        <source>上标 (sup) {#sup}</source>
        <target state="needs-translation">上标 (sup) {#sup}</target>
      </trans-unit>
      <trans-unit id="46828">
        <source>`&lt;sup&gt;` 元素用于将其中的内容以上标显示。</source>
        <target state="needs-translation">`&lt;sup&gt;` 元素用于将其中的内容以上标显示。</target>
      </trans-unit>
      <trans-unit id="64084">
        <source>下标 (sub) {#sub}</source>
        <target state="needs-translation">下标 (sub) {#sub}</target>
      </trans-unit>
      <trans-unit id="46832">
        <source>`&lt;sub&gt;` 元素用于将其中的内容以下标显示。</source>
        <target state="needs-translation">`&lt;sub&gt;` 元素用于将其中的内容以下标显示。</target>
      </trans-unit>
      <trans-unit id="46834">
        <source>排版元素</source>
        <target state="needs-translation">排版元素</target>
      </trans-unit>
      <trans-unit id="64086">
        <source>换行 (br) {#br}</source>
        <target state="needs-translation">换行 (br) {#br}</target>
      </trans-unit>
      <trans-unit id="46838">
        <source>`&lt;br&gt;` 元素表示一个独立的换行。</source>
        <target state="needs-translation">`&lt;br&gt;` 元素表示一个独立的换行。</target>
      </trans-unit>
      <trans-unit id="64088">
        <source>段落 (p) {#p}</source>
        <target state="needs-translation">段落 (p) {#p}</target>
      </trans-unit>
      <trans-unit id="46842">
        <source>`&lt;p&gt;` 元素表示一个段落。</source>
        <target state="needs-translation">`&lt;p&gt;` 元素表示一个段落。</target>
      </trans-unit>
      <trans-unit id="46844">
        <source>在渲染时，它与相邻的元素之间会确保有一个换行。</source>
        <target state="needs-translation">在渲染时，它与相邻的元素之间会确保有一个换行。</target>
      </trans-unit>
      <trans-unit id="64090">
        <source>消息 (message) {#message}</source>
        <target state="needs-translation">消息 (message) {#message}</target>
      </trans-unit>
      <trans-unit id="46848">
        <source>**id:** `string` 消息 ID</source>
        <target state="needs-translation">**id:** `string` 消息 ID</target>
      </trans-unit>
      <trans-unit id="46850">
        <source>**forward:** `boolean` 是否为转发消息</source>
        <target state="needs-translation">**forward:** `boolean` 是否为转发消息</target>
      </trans-unit>
      <trans-unit id="46852">
        <source>`&lt;message&gt;` 元素的基本用法是表示一条消息。</source>
        <target state="needs-translation">`&lt;message&gt;` 元素的基本用法是表示一条消息。</target>
      </trans-unit>
      <trans-unit id="46854">
        <source>子元素对应于消息的内容。</source>
        <target state="needs-translation">子元素对应于消息的内容。</target>
      </trans-unit>
      <trans-unit id="46856">
        <source>如果其没有子元素，则消息不会被发送。</source>
        <target state="needs-translation">如果其没有子元素，则消息不会被发送。</target>
      </trans-unit>
      <trans-unit id="46858">
        <source>当出现 `&lt;message&gt;` 元素时，之前的元素会被立即视为一条消息被发送。</source>
        <target state="needs-translation">当出现 `&lt;message&gt;` 元素时，之前的元素会被立即视为一条消息被发送。</target>
      </trans-unit>
      <trans-unit id="46860">
        <source>因此下面的两种写法是等价的：</source>
        <target state="needs-translation">因此下面的两种写法是等价的：</target>
      </trans-unit>
      <trans-unit id="46862">
        <source>&lt;!-- 第一种写法：发送两条消息 --&gt;
&lt;message&gt;hello&lt;/message&gt;
&lt;message&gt;world&lt;/message&gt;

&lt;!-- 第二种写法：用一条空消息隔开两段文本，实际上仍然会发送两条消息 --&gt;
hello&lt;message/&gt;world</source>
        <target state="needs-translation">&lt;!-- 第一种写法：发送两条消息 --&gt;
&lt;message&gt;hello&lt;/message&gt;
&lt;message&gt;world&lt;/message&gt;

&lt;!-- 第二种写法：用一条空消息隔开两段文本，实际上仍然会发送两条消息 --&gt;
hello&lt;message/&gt;world</target>
      </trans-unit>
      <trans-unit id="46864">
        <source>部分平台允许你模拟其他用户发送消息：</source>
        <target state="needs-translation">部分平台允许你模拟其他用户发送消息：</target>
      </trans-unit>
      <trans-unit id="46866">
        <source>&lt;message&gt;
  &lt;author id=&quot;123123123&quot; name=&quot;Alice&quot; avatar=&quot;url&quot;/&gt;
  hello world
&lt;/message&gt;</source>
        <target state="needs-translation">&lt;message&gt;
  &lt;author id=&quot;123123123&quot; name=&quot;Alice&quot; avatar=&quot;url&quot;/&gt;
  hello world
&lt;/message&gt;</target>
      </trans-unit>
      <trans-unit id="46868">
        <source>在支持转发的平台上，你可以使用 `forward` 配合 `id` 属性来转发一条消息：</source>
        <target state="needs-translation">在支持转发的平台上，你可以使用 `forward` 配合 `id` 属性来转发一条消息：</target>
      </trans-unit>
      <trans-unit id="46870">
        <source>&lt;message id=&quot;123456789&quot; forward/&gt;</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">&lt;message id=&quot;123456789&quot; forward/&gt;</target>
      </trans-unit>
      <trans-unit id="46872">
        <source>在支持合并转发的平台上，你可以使用带有 `forward` 属性的 `&lt;message&gt;` 元素嵌套其他 `&lt;message&gt;` 元素来实现合并转发：</source>
        <target state="needs-translation">在支持合并转发的平台上，你可以使用带有 `forward` 属性的 `&lt;message&gt;` 元素嵌套其他 `&lt;message&gt;` 元素来实现合并转发：</target>
      </trans-unit>
      <trans-unit id="46874">
        <source>&lt;message forward&gt;
  &lt;message id=&quot;123456789&quot;/&gt;
  &lt;message id=&quot;987654321&quot;/&gt;
  &lt;!-- 合并转发里也可以嵌套模拟其他用户发送的消息 --&gt;
  &lt;message&gt;
    &lt;author id=&quot;123123123&quot; name=&quot;Alice&quot; avatar=&quot;url&quot;/&gt;
    hello world
  &lt;/message&gt;
&lt;/message&gt;</source>
        <target state="needs-translation">&lt;message forward&gt;
  &lt;message id=&quot;123456789&quot;/&gt;
  &lt;message id=&quot;987654321&quot;/&gt;
  &lt;!-- 合并转发里也可以嵌套模拟其他用户发送的消息 --&gt;
  &lt;message&gt;
    &lt;author id=&quot;123123123&quot; name=&quot;Alice&quot; avatar=&quot;url&quot;/&gt;
    hello world
  &lt;/message&gt;
&lt;/message&gt;</target>
      </trans-unit>
      <trans-unit id="46876">
        <source>元信息元素</source>
        <target state="needs-translation">元信息元素</target>
      </trans-unit>
      <trans-unit id="46878">
        <source>元信息元素通常不会被渲染，但会影响到消息的发送行为。</source>
        <target state="needs-translation">元信息元素通常不会被渲染，但会影响到消息的发送行为。</target>
      </trans-unit>
      <trans-unit id="64092">
        <source>引用 (quote) {#quote}</source>
        <target state="needs-translation">引用 (quote) {#quote}</target>
      </trans-unit>
      <trans-unit id="46882">
        <source>`&lt;quote&gt;` 元素用于表示对消息引用。</source>
        <target state="needs-translation">`&lt;quote&gt;` 元素用于表示对消息引用。</target>
      </trans-unit>
      <trans-unit id="46884">
        <source>它的子元素会被渲染为引用的内容。</source>
        <target state="needs-translation">它的子元素会被渲染为引用的内容。</target>
      </trans-unit>
      <trans-unit id="46886">
        <source>理论上所有 `&lt;message&gt;` 元素的特性也可以用于 `&lt;quote&gt;` 元素，包括子元素 (构造引用消息) 和 `forward` 属性 (引用合并转发)。</source>
        <target state="needs-translation">理论上所有 `&lt;message&gt;` 元素的特性也可以用于 `&lt;quote&gt;` 元素，包括子元素 (构造引用消息) 和 `forward` 属性 (引用合并转发)。</target>
      </trans-unit>
      <trans-unit id="46888">
        <source>然而目前似乎并没有平台提供了这样的支持。</source>
        <target state="needs-translation">然而目前似乎并没有平台提供了这样的支持。</target>
      </trans-unit>
      <trans-unit id="64094">
        <source>作者 (author) {#author}</source>
        <target state="needs-translation">作者 (author) {#author}</target>
      </trans-unit>
      <trans-unit id="46892">
        <source>**id:** `string` 用户 ID</source>
        <target state="needs-translation">**id:** `string` 用户 ID</target>
      </trans-unit>
      <trans-unit id="46894">
        <source>**name:** `string` 昵称</source>
        <target state="needs-translation">**name:** `string` 昵称</target>
      </trans-unit>
      <trans-unit id="46896">
        <source>**avatar:** `string` 头像 URL</source>
        <target state="needs-translation">**avatar:** `string` 头像 URL</target>
      </trans-unit>
      <trans-unit id="46898">
        <source>`&lt;author&gt;` 元素用于表示消息的作者。</source>
        <target state="needs-translation">`&lt;author&gt;` 元素用于表示消息的作者。</target>
      </trans-unit>
      <trans-unit id="46900">
        <source>它的子元素会被渲染为作者的名字。</source>
        <target state="needs-translation">它的子元素会被渲染为作者的名字。</target>
      </trans-unit>
      <trans-unit id="46902">
        <source>交互元素</source>
        <target state="needs-translation">交互元素</target>
      </trans-unit>
      <trans-unit id="46904">
        <source>交互元素用于显然消息中的可交互性内容。</source>
        <target state="needs-translation">交互元素用于显然消息中的可交互性内容。</target>
      </trans-unit>
      <trans-unit id="46906">
        <source>如果平台不支持此类元素且难以提供回退，可以直接忽略整个元素。</source>
        <target state="needs-translation">如果平台不支持此类元素且难以提供回退，可以直接忽略整个元素。</target>
      </trans-unit>
      <trans-unit id="46908">
        <source>实现侧应当根据平台特性，针对性地返回带有交互和不带有交互的消息。</source>
        <target state="needs-translation">实现侧应当根据平台特性，针对性地返回带有交互和不带有交互的消息。</target>
      </trans-unit>
      <trans-unit id="64408">
        <source>按钮 (button) &lt;badge type=&quot;warning&quot;&gt;实验性&lt;/badge&gt; {#button}</source>
        <target state="needs-translation">按钮 (button) &lt;badge type=&quot;warning&quot;&gt;实验性&lt;/badge&gt; {#button}</target>
      </trans-unit>
      <trans-unit id="46912">
        <source>**id:** `string` 按钮的 ID</source>
        <target state="needs-translation">**id:** `string` 按钮的 ID</target>
      </trans-unit>
      <trans-unit id="46914">
        <source>**type:** `string` 按钮的类型</source>
        <target state="needs-translation">**type:** `string` 按钮的类型</target>
      </trans-unit>
      <trans-unit id="46916">
        <source>**href:** `string` 按钮的链接</source>
        <target state="needs-translation">**href:** `string` 按钮的链接</target>
      </trans-unit>
      <trans-unit id="46918">
        <source>**text:** `string` 待输入文本</source>
        <target state="needs-translation">**text:** `string` 待输入文本</target>
      </trans-unit>
      <trans-unit id="46920">
        <source>**theme:** `string` 按钮的风格</source>
        <target state="needs-translation">**theme:** `string` 按钮的风格</target>
      </trans-unit>
      <trans-unit id="46922">
        <source>`&lt;button&gt;` 元素用于表示一个按钮。</source>
        <target state="needs-translation">`&lt;button&gt;` 元素用于表示一个按钮。</target>
      </trans-unit>
      <trans-unit id="46924">
        <source>它的子元素会被渲染为按钮的文本。</source>
        <target state="needs-translation">它的子元素会被渲染为按钮的文本。</target>
      </trans-unit>
      <trans-unit id="46926">
        <source>按钮目前支持三种不同的类型：</source>
        <target state="needs-translation">按钮目前支持三种不同的类型：</target>
      </trans-unit>
      <trans-unit id="46928">
        <source>点击 `action` 类型的按钮时会触发一个 `interaction/button` 事件，该事件的 `button` 资源会包含上述 `id`</source>
        <target state="needs-translation">点击 `action` 类型的按钮时会触发一个 `interaction/button` 事件，该事件的 `button` 资源会包含上述 `id`</target>
      </trans-unit>
      <trans-unit id="46930">
        <source>点击 `link` 类型的按钮时会打开一个链接，该链接的地址为上述 `href`</source>
        <target state="needs-translation">点击 `link` 类型的按钮时会打开一个链接，该链接的地址为上述 `href`</target>
      </trans-unit>
      <trans-unit id="46932">
        <source>点击 `input` 类型的按钮时会在用户的输入框中填充上述 `text`</source>
        <target state="needs-translation">点击 `input` 类型的按钮时会在用户的输入框中填充上述 `text`</target>
      </trans-unit>
      <trans-unit id="46934">
        <source>`theme` 仅建议使用下列值：</source>
        <target state="needs-translation">`theme` 仅建议使用下列值：</target>
      </trans-unit>
      <trans-unit id="46936">
        <source>primary</source>
        <target state="needs-translation">primary</target>
      </trans-unit>
      <trans-unit id="46938">
        <source>secondary</source>
        <target state="needs-translation">secondary</target>
      </trans-unit>
      <trans-unit id="46940">
        <source>success</source>
        <target state="needs-translation">success</target>
      </trans-unit>
      <trans-unit id="46942">
        <source>warning</source>
        <target state="needs-translation">warning</target>
      </trans-unit>
      <trans-unit id="46944">
        <source>danger</source>
        <target state="needs-translation">danger</target>
      </trans-unit>
      <trans-unit id="46946">
        <source>info</source>
        <target state="needs-translation">info</target>
      </trans-unit>
    </body>
  </file>
  <file id="1454" original="/[koishijs.docs] main/zh-CN/api/message/encoder.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="46948">
        <source>消息编码器 (MessageEncoder) &lt;badge type=&quot;warning&quot;&gt;实验性&lt;/badge&gt;</source>
        <target state="needs-translation">消息编码器 (MessageEncoder) &lt;badge type=&quot;warning&quot;&gt;实验性&lt;/badge&gt;</target>
      </trans-unit>
      <trans-unit id="46950">
        <source>这是一个实验性功能，未来可能发生改动。</source>
        <target state="needs-translation">这是一个实验性功能，未来可能发生改动。</target>
      </trans-unit>
      <trans-unit id="46952">
        <source>参见：[开发 &gt; 跨平台 &gt; 消息编码](../../guide/adapter/message.md)</source>
        <target state="needs-translation">参见：[开发 &gt; 跨平台 &gt; 消息编码](../../guide/adapter/message.md)</target>
      </trans-unit>
      <trans-unit id="46954">
        <source>标有 &lt;badge&gt;抽象&lt;/badge&gt; 的方法需要由适配器插件自行实现。</source>
        <target state="needs-translation">标有 &lt;badge&gt;抽象&lt;/badge&gt; 的方法需要由适配器插件自行实现。</target>
      </trans-unit>
      <trans-unit id="46956">
        <source>使用方法</source>
        <target state="needs-translation">使用方法</target>
      </trans-unit>
      <trans-unit id="46958">
        <source>消息编码器通常不直接进行构造，而是以关联类型的形式绑定在 [`Bot`](../core/bot.md) 类的静态成员上，用于实现 [`bot.sendMessage()`](../resources/message.md#bot-sendmessage) 等方法。</source>
        <target state="needs-translation">消息编码器通常不直接进行构造，而是以关联类型的形式绑定在 [`Bot`](../core/bot.md) 类的静态成员上，用于实现 [`bot.sendMessage()`](../resources/message.md#bot-sendmessage) 等方法。</target>
      </trans-unit>
      <trans-unit id="46960">
        <source>export class MyBot extends Bot {
  static MessageEncoder = MyMessageEncoder
}</source>
        <target state="needs-translation">export class MyBot extends Bot {
  static MessageEncoder = MyMessageEncoder
}</target>
      </trans-unit>
      <trans-unit id="46962">
        <source>实例方法</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">實體方法</target>
      </trans-unit>
      <trans-unit id="46964">
        <source>new MessageEncoder(bot, channelId)</source>
        <target state="needs-translation">new MessageEncoder(bot, channelId)</target>
      </trans-unit>
      <trans-unit id="46966">
        <source>**bot:** [`Bot`](../core/bot.md) 机器人实例</source>
        <target state="needs-translation">**bot:** [`Bot`](../core/bot.md) 机器人实例</target>
      </trans-unit>
      <trans-unit id="46968">
        <source>**channelId:** `string` 频道 ID</source>
        <target state="needs-translation">**channelId:** `string` 频道 ID</target>
      </trans-unit>
      <trans-unit id="46970">
        <source>构造一个 `MessageEncoder` 实例。</source>
        <target state="needs-translation">构造一个 `MessageEncoder` 实例。</target>
      </trans-unit>
      <trans-unit id="46972">
        <source>encoder.flush() &lt;badge&gt;抽象&lt;/badge&gt;</source>
        <target state="needs-translation">encoder.flush() &lt;badge&gt;抽象&lt;/badge&gt;</target>
      </trans-unit>
      <trans-unit id="46974">
        <source>返回值: `Promise&lt;void&gt;`</source>
        <target state="needs-translation">返回值: `Promise&lt;void&gt;`</target>
      </trans-unit>
      <trans-unit id="46976">
        <source>向平台发送消息，清空缓冲区。</source>
        <target state="needs-translation">向平台发送消息，清空缓冲区。</target>
      </trans-unit>
      <trans-unit id="46978">
        <source>encoder.visit(element) &lt;badge&gt;抽象&lt;/badge&gt;</source>
        <target state="needs-translation">encoder.visit(element) &lt;badge&gt;抽象&lt;/badge&gt;</target>
      </trans-unit>
      <trans-unit id="46980">
        <source>**element:** [`Element`](./api.md) 消息元素</source>
        <target state="needs-translation">**element:** [`Element`](./api.md) 消息元素</target>
      </trans-unit>
      <trans-unit id="46982">
        <source>渲染某一个消息元素。</source>
        <target state="needs-translation">渲染某一个消息元素。</target>
      </trans-unit>
      <trans-unit id="46984">
        <source>如果其有子元素，可以使用 [`encoder.render(element)`](#encoder-render) 进行递归遍历。</source>
        <target state="needs-translation">如果其有子元素，可以使用 [`encoder.render(element)`](#encoder-render) 进行递归遍历。</target>
      </trans-unit>
      <trans-unit id="46986">
        <source>encoder.render(elements)</source>
        <target state="needs-translation">encoder.render(elements)</target>
      </trans-unit>
      <trans-unit id="46988">
        <source>**element:** [`Element[]`](./api.md) 消息元素</source>
        <target state="needs-translation">**element:** [`Element[]`](./api.md) 消息元素</target>
      </trans-unit>
      <trans-unit id="46990">
        <source>返回值: `Promise&lt;void&gt;`</source>
        <target state="needs-translation">返回值: `Promise&lt;void&gt;`</target>
      </trans-unit>
      <trans-unit id="46992">
        <source>渲染一组元素。</source>
        <target state="needs-translation">渲染一组元素。</target>
      </trans-unit>
      <trans-unit id="46994">
        <source>encoder.send(content)</source>
        <target state="needs-translation">encoder.send(content)</target>
      </trans-unit>
      <trans-unit id="46996">
        <source>**content:** `Fragment` 消息元素</source>
        <target state="needs-translation">**content:** `Fragment` 消息元素</target>
      </trans-unit>
      <trans-unit id="46998">
        <source>返回值: `Promise&lt;Message[]&gt;`</source>
        <target state="needs-translation">返回值: `Promise&lt;Message[]&gt;`</target>
      </trans-unit>
      <trans-unit id="47000">
        <source>解析并发送一段内容。</source>
        <target state="needs-translation">解析并发送一段内容。</target>
      </trans-unit>
      <trans-unit id="47002">
        <source>返回发送的消息列表。</source>
        <target state="needs-translation">返回发送的消息列表。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1456" original="/[koishijs.docs] main/zh-CN/api/message/syntax.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="47004">
        <source>语法规范</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">語法規範</target>
      </trans-unit>
      <trans-unit id="47006">
        <source>大多数涉及消息的地方都可以使用消息元素，例如：</source>
        <target state="needs-translation">大多数涉及消息的地方都可以使用消息元素，例如：</target>
      </trans-unit>
      <trans-unit id="47008">
        <source>消息相关的机器人 API</source>
        <target state="needs-translation">消息相关的机器人 API</target>
      </trans-unit>
      <trans-unit id="47010">
        <source>指令和中间件的返回值</source>
        <target state="needs-translation">指令和中间件的返回值</target>
      </trans-unit>
      <trans-unit id="47012">
        <source>本地化文件的翻译条目</source>
        <target state="needs-translation">本地化文件的翻译条目</target>
      </trans-unit>
      <trans-unit id="47014">
        <source>本节将介绍这些地方传入字符串时所用到的语法规范。</source>
        <target state="needs-translation">本节将介绍这些地方传入字符串时所用到的语法规范。</target>
      </trans-unit>
      <trans-unit id="47016">
        <source>语法</source>
        <target state="needs-translation">语法</target>
      </trans-unit>
      <trans-unit id="47018">
        <source>消息元素的语法与 HTML 类似，但是不完全相同。</source>
        <target state="needs-translation">消息元素的语法与 HTML 类似，但是不完全相同。</target>
      </trans-unit>
      <trans-unit id="47020">
        <source>字符</source>
        <target state="needs-translation">字符</target>
      </trans-unit>
      <trans-unit id="47022">
        <source>你可以在消息元素内使用任何字符。</source>
        <target state="needs-translation">你可以在消息元素内使用任何字符。</target>
      </trans-unit>
      <trans-unit id="47024">
        <source>不过部分特殊字符需要转义：</source>
        <target state="needs-translation">不过部分特殊字符需要转义：</target>
      </trans-unit>
      <trans-unit id="47026">
        <source>原始字符</source>
        <target state="needs-translation">原始字符</target>
      </trans-unit>
      <trans-unit id="47028">
        <source>转义写法</source>
        <target state="needs-translation">转义写法</target>
      </trans-unit>
      <trans-unit id="47030">
        <source>`&quot;`</source>
        <target state="needs-translation">`&quot;`</target>
      </trans-unit>
      <trans-unit id="47032">
        <source>`&amp;amp;quot;`</source>
        <target state="needs-translation">`&amp;amp;quot;`</target>
      </trans-unit>
      <trans-unit id="47034">
        <source>`&amp;`</source>
        <target state="needs-translation">`&amp;`</target>
      </trans-unit>
      <trans-unit id="47036">
        <source>`&amp;amp;amp;`</source>
        <target state="needs-translation">`&amp;amp;amp;`</target>
      </trans-unit>
      <trans-unit id="47038">
        <source>`&lt;`</source>
        <target state="needs-translation">`&lt;`</target>
      </trans-unit>
      <trans-unit id="47040">
        <source>`&amp;amp;lt;`</source>
        <target state="needs-translation">`&amp;amp;lt;`</target>
      </trans-unit>
      <trans-unit id="47042">
        <source>`&gt;`</source>
        <target state="needs-translation">`&gt;`</target>
      </trans-unit>
      <trans-unit id="47044">
        <source>`&amp;amp;gt;`</source>
        <target state="needs-translation">`&amp;amp;gt;`</target>
      </trans-unit>
      <trans-unit id="47046">
        <source>根据上下文的不同，有些字符可能不需要被转义或使用其他的转义方式。</source>
        <target state="needs-translation">根据上下文的不同，有些字符可能不需要被转义或使用其他的转义方式。</target>
      </trans-unit>
      <trans-unit id="47048">
        <source>除此以外，你可以使用十进制或十六进制转义任何字符。</source>
        <target state="needs-translation">除此以外，你可以使用十进制或十六进制转义任何字符。</target>
      </trans-unit>
      <trans-unit id="47050">
        <source>例如 `'` 也可以被书写成 `&amp;#39;` 或 `&amp;#x27;`。</source>
        <target state="needs-translation">例如 `'` 也可以被书写成 `&amp;#39;` 或 `&amp;#x27;`。</target>
      </trans-unit>
      <trans-unit id="47052">
        <source>标签</source>
        <target state="needs-translation">标签</target>
      </trans-unit>
      <trans-unit id="47054">
        <source>使用一对尖括号包裹元素名，加上可选的属性、闭合指示符，就构成了一个标签。</source>
        <target state="needs-translation">使用一对尖括号包裹元素名，加上可选的属性、闭合指示符，就构成了一个标签。</target>
      </trans-unit>
      <trans-unit id="47056">
        <source>元素名由小写字母、数字和连字符组成，且必须以字母开头。</source>
        <target state="needs-translation">元素名由小写字母、数字和连字符组成，且必须以字母开头。</target>
      </trans-unit>
      <trans-unit id="47058">
        <source>在元素名前后添加 `/` 表示这是一个结束标签或自闭合标签，没有 `/` 符号时则表示这是一个起始标签：</source>
        <target state="needs-translation">在元素名前后添加 `/` 表示这是一个结束标签或自闭合标签，没有 `/` 符号时则表示这是一个起始标签：</target>
      </trans-unit>
      <trans-unit id="47060">
        <source>`&lt;tag&gt;` 一个起始标签</source>
        <target state="needs-translation">`&lt;tag&gt;` 一个起始标签</target>
      </trans-unit>
      <trans-unit id="47062">
        <source>`&lt;/tag&gt;` 一个结束标签</source>
        <target state="needs-translation">`&lt;/tag&gt;` 一个结束标签</target>
      </trans-unit>
      <trans-unit id="47064">
        <source>`&lt;tag/&gt;` 一个自闭合标签</source>
        <target state="needs-translation">`&lt;tag/&gt;` 一个自闭合标签</target>
      </trans-unit>
      <trans-unit id="47066">
        <source>属性</source>
        <target state="needs-translation">属性</target>
      </trans-unit>
      <trans-unit id="47068">
        <source>起始或自闭合标签的元素名后接受可选的属性列表。</source>
        <target state="needs-translation">起始或自闭合标签的元素名后接受可选的属性列表。</target>
      </trans-unit>
      <trans-unit id="47070">
        <source>每个属性必须形如以下形式：</source>
        <target state="needs-translation">每个属性必须形如以下形式：</target>
      </trans-unit>
      <trans-unit id="47072">
        <source>`key`</source>
        <target state="needs-translation">`key`</target>
      </trans-unit>
      <trans-unit id="47074">
        <source>`key=&quot;value&quot;` (此时 `value` 中的 `&quot;` 需要被转义)</source>
        <target state="needs-translation">`key=&quot;value&quot;` (此时 `value` 中的 `&quot;` 需要被转义)</target>
      </trans-unit>
      <trans-unit id="47076">
        <source>`key='value'` (此时 `value` 中的 `'` 需要被转义)</source>
        <target state="needs-translation">`key='value'` (此时 `value` 中的 `'` 需要被转义)</target>
      </trans-unit>
      <trans-unit id="47078">
        <source>下面是一段示例：</source>
        <target state="needs-translation">下面是一段示例：</target>
      </trans-unit>
      <trans-unit id="47080">
        <source>&lt;tag foo=&quot;1&quot; bar/&gt;</source>
        <target state="needs-translation">&lt;tag foo=&quot;1&quot; bar/&gt;</target>
      </trans-unit>
      <trans-unit id="47082">
        <source>元素</source>
        <target state="needs-translation">元素</target>
      </trans-unit>
      <trans-unit id="47084">
        <source>一个元素要么是自闭合标签，要么由一对同名的起始标签和结束标签构成。</source>
        <target state="needs-translation">一个元素要么是自闭合标签，要么由一对同名的起始标签和结束标签构成。</target>
      </trans-unit>
      <trans-unit id="47086">
        <source>元素的内容指起始标签和结束标签中间的部分，可以包含文本内容或其他元素。</source>
        <target state="needs-translation">元素的内容指起始标签和结束标签中间的部分，可以包含文本内容或其他元素。</target>
      </trans-unit>
      <trans-unit id="47088">
        <source>对于自闭合标签，元素的内容为空。</source>
        <target state="needs-translation">对于自闭合标签，元素的内容为空。</target>
      </trans-unit>
      <trans-unit id="47090">
        <source>下面是一段示例：</source>
        <target state="needs-translation">下面是一段示例：</target>
      </trans-unit>
      <trans-unit id="47092">
        <source>&lt;parent&gt;
  text content
  &lt;child/&gt;
&lt;/parent&gt;</source>
        <target state="needs-translation">&lt;parent&gt;
  text content
  &lt;child/&gt;
&lt;/parent&gt;</target>
      </trans-unit>
      <trans-unit id="47094">
        <source>当存在未配对的元素时，将自动视为文本内容的一部分。</source>
        <target state="needs-translation">当存在未配对的元素时，将自动视为文本内容的一部分。</target>
      </trans-unit>
      <trans-unit id="47096">
        <source>文本内容前后如果存在包含换行符的连续空白字符，则会被忽略。</source>
        <target state="needs-translation">文本内容前后如果存在包含换行符的连续空白字符，则会被忽略。</target>
      </trans-unit>
      <trans-unit id="47098">
        <source>这意味着下面两段代码是等价的：</source>
        <target state="needs-translation">这意味着下面两段代码是等价的：</target>
      </trans-unit>
      <trans-unit id="47100">
        <source>&lt;tag&gt;
  &lt;foo&gt; bar
  &lt;!-- comment --&gt;
&lt;/tag&gt;</source>
        <target state="needs-translation">&lt;tag&gt;
  &lt;foo&gt; bar
  &lt;!-- comment --&gt;
&lt;/tag&gt;</target>
      </trans-unit>
      <trans-unit id="47102">
        <source>&lt;tag&gt;&amp;amp;lt;foo&amp;amp;gt; bar&lt;/tag&gt;</source>
        <target state="needs-translation">&lt;tag&gt;&amp;amp;lt;foo&amp;amp;gt; bar&lt;/tag&gt;</target>
      </trans-unit>
      <trans-unit id="47104">
        <source>注释</source>
        <target state="needs-translation">注释</target>
      </trans-unit>
      <trans-unit id="47106">
        <source>使用成对的 `&lt;!--` 和 `--&gt;` 插入一段注释。</source>
        <target state="needs-translation">使用成对的 `&lt;!--` 和 `--&gt;` 插入一段注释。</target>
      </trans-unit>
      <trans-unit id="47108">
        <source>注释中的部分不会被渲染。</source>
        <target state="needs-translation">注释中的部分不会被渲染。</target>
      </trans-unit>
      <trans-unit id="47110">
        <source>插值</source>
        <target state="needs-translation">插值</target>
      </trans-unit>
      <trans-unit id="47112">
        <source>在本地化条目中我们在上述规范的基础上额外允许插值语法。</source>
        <target state="needs-translation">在本地化条目中我们在上述规范的基础上额外允许插值语法。</target>
      </trans-unit>
      <trans-unit id="47114">
        <source>插值语法通过一对花括号 `{}` 声明，其可能出现在属性值或元素内容中。</source>
        <target state="needs-translation">插值语法通过一对花括号 `{}` 声明，其可能出现在属性值或元素内容中。</target>
      </trans-unit>
      <trans-unit id="47116">
        <source>当表示属性值时，花括号将取代引号的作用。</source>
        <target state="needs-translation">当表示属性值时，花括号将取代引号的作用。</target>
      </trans-unit>
      <trans-unit id="47118">
        <source>插值语法中的内容会被解析为一个取值表达式，其结果会被转换为字符串后插入到原始字符串中。</source>
        <target state="needs-translation">插值语法中的内容会被解析为一个取值表达式，其结果会被转换为字符串后插入到原始字符串中。</target>
      </trans-unit>
      <trans-unit id="47120">
        <source>下面是一段示例：</source>
        <target state="needs-translation">下面是一段示例：</target>
      </trans-unit>
      <trans-unit id="47122">
        <source>&lt;tag foo={bar}&gt;
  {baz}qux
&lt;/tag&gt;</source>
        <target state="needs-translation">&lt;tag foo={bar}&gt;
  {baz}qux
&lt;/tag&gt;</target>
      </trans-unit>
      <trans-unit id="47124">
        <source>当传入 `{ bar: 1, baz: 2 }` 时，上述消息元素将会被解析为：</source>
        <target state="needs-translation">当传入 `{ bar: 1, baz: 2 }` 时，上述消息元素将会被解析为：</target>
      </trans-unit>
      <trans-unit id="47126">
        <source>&lt;tag foo=&quot;1&quot;&gt;
  2qux
&lt;/tag&gt;</source>
        <target state="needs-translation">&lt;tag foo=&quot;1&quot;&gt;
  2qux
&lt;/tag&gt;</target>
      </trans-unit>
      <trans-unit id="47128">
        <source>这里的取值表达式会有别于 JavaScript 表达式，它实际相当于传入对象的一个属性路径。</source>
        <target state="needs-translation">这里的取值表达式会有别于 JavaScript 表达式，它实际相当于传入对象的一个属性路径。</target>
      </trans-unit>
      <trans-unit id="47130">
        <source>例如当传入数组 `['a', 'b']` 时，取值表达式 `{0}` 将会被解析为 `a` (而不是 `0`)。</source>
        <target state="needs-translation">例如当传入数组 `['a', 'b']` 时，取值表达式 `{0}` 将会被解析为 `a` (而不是 `0`)。</target>
      </trans-unit>
      <trans-unit id="47132">
        <source>对比</source>
        <target state="needs-translation">对比</target>
      </trans-unit>
      <trans-unit id="47134">
        <source>与 HTML 的区别</source>
        <target state="needs-translation">与 HTML 的区别</target>
      </trans-unit>
      <trans-unit id="47136">
        <source>下面列举出了一些消息元素与 HTML 语法上的区别：</source>
        <target state="needs-translation">下面列举出了一些消息元素与 HTML 语法上的区别：</target>
      </trans-unit>
      <trans-unit id="47138">
        <source>没有空元素，所有元素都必须手动闭合</source>
        <target state="needs-translation">没有空元素，所有元素都必须手动闭合</target>
      </trans-unit>
      <trans-unit id="47140">
        <source>未配对的元素被视为文本内容的一部分</source>
        <target state="needs-translation">未配对的元素被视为文本内容的一部分</target>
      </trans-unit>
      <trans-unit id="47142">
        <source>与 JSX 的区别</source>
        <target state="needs-translation">与 JSX 的区别</target>
      </trans-unit>
      <trans-unit id="47144">
        <source>在大部分使用场景下，我们都推荐直接使用 JSX，这会拥有更好的编辑器支持。</source>
        <target state="needs-translation">在大部分使用场景下，我们都推荐直接使用 JSX，这会拥有更好的编辑器支持。</target>
      </trans-unit>
      <trans-unit id="47146">
        <source>你可以对比下面三种写法，它们是等价的：</source>
        <target state="needs-translation">你可以对比下面三种写法，它们是等价的：</target>
      </trans-unit>
      <trans-unit id="47148">
        <source>import { h } from 'koishi'

ctx.middleware((session) =&gt; {
  return '你好呀，' + h('at', { id: session.userId })
})</source>
        <target state="needs-translation">import { h } from 'koishi'

ctx.middleware((session) =&gt; {
  return '你好呀，' + h('at', { id: session.userId })
})</target>
      </trans-unit>
      <trans-unit id="47150">
        <source>ctx.middleware((session) =&gt; {
  return `&lt;&gt;
    你好呀，
    &lt;at id=&quot;${session.userId}&quot;/&gt;
  &lt;/&gt;`
})</source>
        <target state="needs-translation">ctx.middleware((session) =&gt; {
  return `&lt;&gt;
    你好呀，
    &lt;at id=&quot;${session.userId}&quot;/&gt;
  &lt;/&gt;`
})</target>
      </trans-unit>
      <trans-unit id="47152">
        <source>ctx.middleware((session) =&gt; {
  return &lt;&gt;
    你好呀，
    &lt;at id={session.userId}/&gt;
  &lt;/&gt;
})</source>
        <target state="needs-translation">ctx.middleware((session) =&gt; {
  return &lt;&gt;
    你好呀，
    &lt;at id={session.userId}/&gt;
  &lt;/&gt;
})</target>
      </trans-unit>
      <trans-unit id="47154">
        <source>而在本地化条目中，你将无法使用 JSX，此时就需要使用带插值的消息元素了。</source>
        <target state="needs-translation">而在本地化条目中，你将无法使用 JSX，此时就需要使用带插值的消息元素了。</target>
      </trans-unit>
      <trans-unit id="47156">
        <source>例如：</source>
        <target state="needs-translation">例如：</target>
      </trans-unit>
      <trans-unit id="47158">
        <source>welcome: 你好呀，&lt;at id={userId}/&gt;</source>
        <target state="needs-translation">welcome: 你好呀，&lt;at id={userId}/&gt;</target>
      </trans-unit>
      <trans-unit id="47160">
        <source>ctx.middleware((session) =&gt; {
  return session.text('welcome', session)
})</source>
        <target state="needs-translation">ctx.middleware((session) =&gt; {
  return session.text('welcome', session)
})</target>
      </trans-unit>
      <trans-unit id="47162">
        <source>下面列举出了一些插值的消息元素与 JSX 语法上的区别：</source>
        <target state="needs-translation">下面列举出了一些插值的消息元素与 JSX 语法上的区别：</target>
      </trans-unit>
      <trans-unit id="47164">
        <source>使用 `&lt;!--` 和 `--&gt;` 作为注释，而不是 `{/*` 和 `*/}`</source>
        <target state="needs-translation">使用 `&lt;!--` 和 `--&gt;` 作为注释，而不是 `{/*` 和 `*/}`</target>
      </trans-unit>
      <trans-unit id="47166">
        <source>`{}` 内只能是取值表达式，而不能是任意 JavaScript 表达式或其他元素</source>
        <target state="needs-translation">`{}` 内只能是取值表达式，而不能是任意 JavaScript 表达式或其他元素</target>
      </trans-unit>
    </body>
  </file>
  <file id="1458" original="/[koishijs.docs] main/zh-CN/api/resources/channel.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="47168">
        <source>频道 (Channel)</source>
        <target state="needs-translation">频道 (Channel)</target>
      </trans-unit>
      <trans-unit id="47170">
        <source>要了解数据库中的频道，请前往 [API &gt; 数据库 &gt; 内置数据结构](../database/built-in.md#channel)</source>
        <target state="needs-translation">要了解数据库中的频道，请前往 [API &gt; 数据库 &gt; 内置数据结构](../database/built-in.md#channel)</target>
      </trans-unit>
      <trans-unit id="63620">
        <source>要了解两者的区别，请前往 [API &gt; 术语表 &gt; 频道](../glossary.md#channel)
:::</source>
        <target state="needs-translation">要了解两者的区别，请前往 [API &gt; 术语表 &gt; 频道](../glossary.md#channel)
:::</target>
      </trans-unit>
      <trans-unit id="47174">
        <source>类型定义</source>
        <target state="needs-translation">类型定义</target>
      </trans-unit>
      <trans-unit id="47176">
        <source>export interface Channel {
  id: string
  name: string
  type: ChannelType
  parent_id?: string
}

export enum ChannelType {
  TEXT = 0,
  DIRECT = 1,
  VOICE = 2,
  CATEGORY = 3,
}</source>
        <target state="needs-translation">export interface Channel {
  id: string
  name: string
  type: ChannelType
  parent_id?: string
}

export enum ChannelType {
  TEXT = 0,
  DIRECT = 1,
  VOICE = 2,
  CATEGORY = 3,
}</target>
      </trans-unit>
      <trans-unit id="47178">
        <source>API</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">API</target>
      </trans-unit>
      <trans-unit id="47180">
        <source>bot.getChannel(channelId)</source>
        <target state="needs-translation">bot.getChannel(channelId)</target>
      </trans-unit>
      <trans-unit id="47182">
        <source>**channelId:** `string` 频道 ID</source>
        <target state="needs-translation">**channelId:** `string` 频道 ID</target>
      </trans-unit>
      <trans-unit id="47184">
        <source>返回值: `Promise&lt;Channel&gt;` 频道信息</source>
        <target state="needs-translation">返回值: `Promise&lt;Channel&gt;` 频道信息</target>
      </trans-unit>
      <trans-unit id="47186">
        <source>获取频道信息。</source>
        <target state="needs-translation">获取频道信息。</target>
      </trans-unit>
      <trans-unit id="47188">
        <source>bot.getChannelList(guildId, next?)</source>
        <target state="needs-translation">bot.getChannelList(guildId, next?)</target>
      </trans-unit>
      <trans-unit id="47190">
        <source>**guildId:** `string` 群组 ID</source>
        <target state="needs-translation">**guildId:** `string` 群组 ID</target>
      </trans-unit>
      <trans-unit id="47192">
        <source>**next:** `string` 分页令牌</source>
        <target state="needs-translation">**next:** `string` 分页令牌</target>
      </trans-unit>
      <trans-unit id="47194">
        <source>返回值: `Promise&lt;List&lt;Channel&gt;&gt;` 频道列表</source>
        <target state="needs-translation">返回值: `Promise&lt;List&lt;Channel&gt;&gt;` 频道列表</target>
      </trans-unit>
      <trans-unit id="47196">
        <source>获取某个群组的频道列表。</source>
        <target state="needs-translation">获取某个群组的频道列表。</target>
      </trans-unit>
      <trans-unit id="47198">
        <source>bot.getChannelIter(guildId) &lt;badge&gt;内置&lt;/badge&gt;</source>
        <target state="needs-translation">bot.getChannelIter(guildId) &lt;badge&gt;内置&lt;/badge&gt;</target>
      </trans-unit>
      <trans-unit id="47200">
        <source>**guildId:** `string` 群组 ID</source>
        <target state="needs-translation">**guildId:** `string` 群组 ID</target>
      </trans-unit>
      <trans-unit id="47202">
        <source>返回值: `AsyncIterable&lt;Channel&gt;` 异步迭代器</source>
        <target state="needs-translation">返回值: `AsyncIterable&lt;Channel&gt;` 异步迭代器</target>
      </trans-unit>
      <trans-unit id="47204">
        <source>获取某个群组的频道列表的异步迭代器。</source>
        <target state="needs-translation">获取某个群组的频道列表的异步迭代器。</target>
      </trans-unit>
      <trans-unit id="47206">
        <source>bot.createChannel(guildId, data)</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">bot.createChannel(guildId, data)</target>
      </trans-unit>
      <trans-unit id="47208">
        <source>**guildId:** `string` 群组 ID</source>
        <target state="needs-translation">**guildId:** `string` 群组 ID</target>
      </trans-unit>
      <trans-unit id="47210">
        <source>**data:** `Partial&lt;Channel&gt;` 频道信息</source>
        <target state="needs-translation">**data:** `Partial&lt;Channel&gt;` 频道信息</target>
      </trans-unit>
      <trans-unit id="47212">
        <source>返回值: `Promise&lt;Channel&gt;`</source>
        <target state="needs-translation">返回值: `Promise&lt;Channel&gt;`</target>
      </trans-unit>
      <trans-unit id="47214">
        <source>创建群组频道。</source>
        <target state="needs-translation">创建群组频道。</target>
      </trans-unit>
      <trans-unit id="47216">
        <source>bot.updateChannel(channelId, data)</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">bot.updateChannel(channelId, data)</target>
      </trans-unit>
      <trans-unit id="47218">
        <source>**channelId:** `string` 频道 ID</source>
        <target state="needs-translation">**channelId:** `string` 频道 ID</target>
      </trans-unit>
      <trans-unit id="47220">
        <source>**data:** `Partial&lt;Channel&gt;` 频道信息</source>
        <target state="needs-translation">**data:** `Partial&lt;Channel&gt;` 频道信息</target>
      </trans-unit>
      <trans-unit id="47222">
        <source>返回值: `Promise&lt;void&gt;`</source>
        <target state="needs-translation">返回值: `Promise&lt;void&gt;`</target>
      </trans-unit>
      <trans-unit id="47224">
        <source>修改群组频道。</source>
        <target state="needs-translation">修改群组频道。</target>
      </trans-unit>
      <trans-unit id="47226">
        <source>bot.deleteChannel(channelId)</source>
        <target state="needs-translation">bot.deleteChannel(channelId)</target>
      </trans-unit>
      <trans-unit id="47228">
        <source>**channelId:** `string` 频道 ID</source>
        <target state="needs-translation">**channelId:** `string` 频道 ID</target>
      </trans-unit>
      <trans-unit id="47230">
        <source>返回值: `Promise&lt;void&gt;`</source>
        <target state="needs-translation">返回值: `Promise&lt;void&gt;`</target>
      </trans-unit>
      <trans-unit id="47232">
        <source>删除群组频道。</source>
        <target state="needs-translation">删除群组频道。</target>
      </trans-unit>
      <trans-unit id="47234">
        <source>bot.createDirectChannel(userId)</source>
        <target state="needs-translation">bot.createDirectChannel(userId)</target>
      </trans-unit>
      <trans-unit id="47236">
        <source>**userId:** `string` 用户 ID</source>
        <target state="needs-translation">**userId:** `string` 用户 ID</target>
      </trans-unit>
      <trans-unit id="47238">
        <source>返回值: `Promise&lt;Channel&gt;`</source>
        <target state="needs-translation">返回值: `Promise&lt;Channel&gt;`</target>
      </trans-unit>
      <trans-unit id="47240">
        <source>创建私聊频道。</source>
        <target state="needs-translation">创建私聊频道。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1460" original="/[koishijs.docs] main/zh-CN/api/resources/guild.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="47242">
        <source>群组 (Guild)</source>
        <target state="needs-translation">群组 (Guild)</target>
      </trans-unit>
      <trans-unit id="47244">
        <source>类型定义</source>
        <target state="needs-translation">类型定义</target>
      </trans-unit>
      <trans-unit id="47246">
        <source>export interface Guild {
  id: string
  name: string
}</source>
        <target state="needs-translation">export interface Guild {
  id: string
  name: string
}</target>
      </trans-unit>
      <trans-unit id="47248">
        <source>API</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">API</target>
      </trans-unit>
      <trans-unit id="47250">
        <source>bot.getGuild(guildId)</source>
        <target state="needs-translation">bot.getGuild(guildId)</target>
      </trans-unit>
      <trans-unit id="47252">
        <source>**guildId:** `string` 群组 ID</source>
        <target state="needs-translation">**guildId:** `string` 群组 ID</target>
      </trans-unit>
      <trans-unit id="47254">
        <source>返回值: `Promise&lt;Guild&gt;` 群组信息</source>
        <target state="needs-translation">返回值: `Promise&lt;Guild&gt;` 群组信息</target>
      </trans-unit>
      <trans-unit id="47256">
        <source>获取群组信息。</source>
        <target state="needs-translation">获取群组信息。</target>
      </trans-unit>
      <trans-unit id="47258">
        <source>bot.getGuildList(next?)</source>
        <target state="needs-translation">bot.getGuildList(next?)</target>
      </trans-unit>
      <trans-unit id="47260">
        <source>**next:** `string` 分页令牌</source>
        <target state="needs-translation">**next:** `string` 分页令牌</target>
      </trans-unit>
      <trans-unit id="47262">
        <source>返回值: `Promise&lt;List&lt;Guild&gt;&gt;` 群组列表</source>
        <target state="needs-translation">返回值: `Promise&lt;List&lt;Guild&gt;&gt;` 群组列表</target>
      </trans-unit>
      <trans-unit id="47264">
        <source>获取机器人加入的群组列表。</source>
        <target state="needs-translation">获取机器人加入的群组列表。</target>
      </trans-unit>
      <trans-unit id="47266">
        <source>bot.getGuildIter() &lt;badge&gt;内置&lt;/badge&gt;</source>
        <target state="needs-translation">bot.getGuildIter() &lt;badge&gt;内置&lt;/badge&gt;</target>
      </trans-unit>
      <trans-unit id="47268">
        <source>返回值: `AsyncIterable&lt;Guild&gt;` 异步迭代器</source>
        <target state="needs-translation">返回值: `AsyncIterable&lt;Guild&gt;` 异步迭代器</target>
      </trans-unit>
      <trans-unit id="47270">
        <source>获取机器人加入的群组列表的异步迭代器。</source>
        <target state="needs-translation">获取机器人加入的群组列表的异步迭代器。</target>
      </trans-unit>
      <trans-unit id="47272">
        <source>bot.handleGuildRequest(messageId, approve, comment?)</source>
        <target state="needs-translation">bot.handleGuildRequest(messageId, approve, comment?)</target>
      </trans-unit>
      <trans-unit id="47274">
        <source>**messageId:** `string` 请求 ID</source>
        <target state="needs-translation">**messageId:** `string` 请求 ID</target>
      </trans-unit>
      <trans-unit id="47276">
        <source>**approve:** `boolean` 是否通过请求</source>
        <target state="needs-translation">**approve:** `boolean` 是否通过请求</target>
      </trans-unit>
      <trans-unit id="47278">
        <source>**comment:** `string` 备注信息</source>
        <target state="needs-translation">**comment:** `string` 备注信息</target>
      </trans-unit>
      <trans-unit id="47280">
        <source>返回值: `Promise&lt;void&gt;`</source>
        <target state="needs-translation">返回值: `Promise&lt;void&gt;`</target>
      </trans-unit>
      <trans-unit id="47282">
        <source>处理来自群组的邀请。</source>
        <target state="needs-translation">处理来自群组的邀请。</target>
      </trans-unit>
      <trans-unit id="47284">
        <source>事件</source>
        <target state="needs-translation">事件</target>
      </trans-unit>
      <trans-unit id="47286">
        <source>guild-added</source>
        <target state="needs-translation">guild-added</target>
      </trans-unit>
      <trans-unit id="47288">
        <source>**session:** `Session` 会话对象</source>
        <target state="needs-translation">**session:** `Session` 会话对象</target>
      </trans-unit>
      <trans-unit id="47290">
        <source>触发方式: emit</source>
        <target state="needs-translation">触发方式: emit</target>
      </trans-unit>
      <trans-unit id="47292">
        <source>加入群组时触发。</source>
        <target state="needs-translation">加入群组时触发。</target>
      </trans-unit>
      <trans-unit id="47294">
        <source>guild-updated</source>
        <target state="needs-translation">guild-updated</target>
      </trans-unit>
      <trans-unit id="47296">
        <source>**session:** `Session` 会话对象</source>
        <target state="needs-translation">**session:** `Session` 会话对象</target>
      </trans-unit>
      <trans-unit id="47298">
        <source>触发方式: emit</source>
        <target state="needs-translation">触发方式: emit</target>
      </trans-unit>
      <trans-unit id="47300">
        <source>群组信息更新时触发。</source>
        <target state="needs-translation">群组信息更新时触发。</target>
      </trans-unit>
      <trans-unit id="47302">
        <source>guild-removed</source>
        <target state="needs-translation">guild-removed</target>
      </trans-unit>
      <trans-unit id="47304">
        <source>**session:** `Session` 会话对象</source>
        <target state="needs-translation">**session:** `Session` 会话对象</target>
      </trans-unit>
      <trans-unit id="47306">
        <source>触发方式: emit</source>
        <target state="needs-translation">触发方式: emit</target>
      </trans-unit>
      <trans-unit id="47308">
        <source>群组成员退出群组时触发。</source>
        <target state="needs-translation">群组成员退出群组时触发。</target>
      </trans-unit>
      <trans-unit id="47310">
        <source>guild-request</source>
        <target state="needs-translation">guild-request</target>
      </trans-unit>
      <trans-unit id="47312">
        <source>**session:** `Session` 会话对象</source>
        <target state="needs-translation">**session:** `Session` 会话对象</target>
      </trans-unit>
      <trans-unit id="47314">
        <source>触发方式: emit</source>
        <target state="needs-translation">触发方式: emit</target>
      </trans-unit>
      <trans-unit id="47316">
        <source>接收到新的入群邀请时触发。</source>
        <target state="needs-translation">接收到新的入群邀请时触发。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1462" original="/[koishijs.docs] main/zh-CN/api/resources/interaction.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="47318">
        <source>交互 (Interaction) &lt;badge type=&quot;warning&quot;&gt;实验性&lt;/badge&gt;</source>
        <target state="needs-translation">交互 (Interaction) &lt;badge type=&quot;warning&quot;&gt;实验性&lt;/badge&gt;</target>
      </trans-unit>
      <trans-unit id="47320">
        <source>类型定义</source>
        <target state="needs-translation">类型定义</target>
      </trans-unit>
      <trans-unit id="47322">
        <source>interface Argv {
  name: string
  arguments: string[]
  options: Dict&lt;string&gt;
}

interface Button {
  id: string
}</source>
        <target state="needs-translation">interface Argv {
  name: string
  arguments: string[]
  options: Dict&lt;string&gt;
}

interface Button {
  id: string
}</target>
      </trans-unit>
      <trans-unit id="47324">
        <source>事件</source>
        <target state="needs-translation">事件</target>
      </trans-unit>
      <trans-unit id="47326">
        <source>interaction/button</source>
        <target state="needs-translation">interaction/button</target>
      </trans-unit>
      <trans-unit id="47328">
        <source>**session:** `Session` 会话对象</source>
        <target state="needs-translation">**session:** `Session` 会话对象</target>
      </trans-unit>
      <trans-unit id="47330">
        <source>触发方式: emit</source>
        <target state="needs-translation">触发方式: emit</target>
      </trans-unit>
      <trans-unit id="47332">
        <source>类型为 `action` 的按钮被点击时触发。</source>
        <target state="needs-translation">类型为 `action` 的按钮被点击时触发。</target>
      </trans-unit>
      <trans-unit id="47334">
        <source>interaction/command</source>
        <target state="needs-translation">interaction/command</target>
      </trans-unit>
      <trans-unit id="47336">
        <source>**session:** `Session` 会话对象</source>
        <target state="needs-translation">**session:** `Session` 会话对象</target>
      </trans-unit>
      <trans-unit id="47338">
        <source>触发方式: emit</source>
        <target state="needs-translation">触发方式: emit</target>
      </trans-unit>
      <trans-unit id="47340">
        <source>调用斜线指令时触发。</source>
        <target state="needs-translation">调用斜线指令时触发。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1464" original="/[koishijs.docs] main/zh-CN/api/resources/login.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="47342">
        <source>登录状态 (Login)</source>
        <target state="needs-translation">登录状态 (Login)</target>
      </trans-unit>
      <trans-unit id="47344">
        <source>类型定义</source>
        <target state="needs-translation">类型定义</target>
      </trans-unit>
      <trans-unit id="47346">
        <source>interface Login {
  user?: User
  status?: Status
}

enum Status {
  OFFLINE = 0,
  ONLINE = 1,
  CONNECT = 2,
  DISCONNECT = 3,
  RECONECT = 4,
}</source>
        <target state="needs-translation">interface Login {
  user?: User
  status?: Status
}

enum Status {
  OFFLINE = 0,
  ONLINE = 1,
  CONNECT = 2,
  DISCONNECT = 3,
  RECONECT = 4,
}</target>
      </trans-unit>
      <trans-unit id="47348">
        <source>API</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">API</target>
      </trans-unit>
      <trans-unit id="47350">
        <source>bot.getLogin()</source>
        <target state="needs-translation">bot.getLogin()</target>
      </trans-unit>
      <trans-unit id="47352">
        <source>返回值: `Promise&lt;Login&gt;` 登录信息</source>
        <target state="needs-translation">返回值: `Promise&lt;Login&gt;` 登录信息</target>
      </trans-unit>
      <trans-unit id="47354">
        <source>获取登录状态。</source>
        <target state="needs-translation">获取登录状态。</target>
      </trans-unit>
      <trans-unit id="47356">
        <source>事件</source>
        <target state="needs-translation">事件</target>
      </trans-unit>
      <trans-unit id="47358">
        <source>login-added</source>
        <target state="needs-translation">login-added</target>
      </trans-unit>
      <trans-unit id="47360">
        <source>**session:** `Session` 会话对象</source>
        <target state="needs-translation">**session:** `Session` 会话对象</target>
      </trans-unit>
      <trans-unit id="47362">
        <source>触发方式: emit</source>
        <target state="needs-translation">触发方式: emit</target>
      </trans-unit>
      <trans-unit id="47364">
        <source>登录被创建时触发。</source>
        <target state="needs-translation">登录被创建时触发。</target>
      </trans-unit>
      <trans-unit id="47366">
        <source>login-removed</source>
        <target state="needs-translation">login-removed</target>
      </trans-unit>
      <trans-unit id="47368">
        <source>**session:** `Session` 会话对象</source>
        <target state="needs-translation">**session:** `Session` 会话对象</target>
      </trans-unit>
      <trans-unit id="47370">
        <source>触发方式: emit</source>
        <target state="needs-translation">触发方式: emit</target>
      </trans-unit>
      <trans-unit id="47372">
        <source>登录被移除时触发。</source>
        <target state="needs-translation">登录被移除时触发。</target>
      </trans-unit>
      <trans-unit id="47374">
        <source>login-updated</source>
        <target state="needs-translation">login-updated</target>
      </trans-unit>
      <trans-unit id="47376">
        <source>**session:** `Session` 会话对象</source>
        <target state="needs-translation">**session:** `Session` 会话对象</target>
      </trans-unit>
      <trans-unit id="47378">
        <source>触发方式: emit</source>
        <target state="needs-translation">触发方式: emit</target>
      </trans-unit>
      <trans-unit id="47380">
        <source>登录状态更新时触发。</source>
        <target state="needs-translation">登录状态更新时触发。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1466" original="/[koishijs.docs] main/zh-CN/api/resources/member.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="47382">
        <source>群组成员 (GuildMember)</source>
        <target state="needs-translation">群组成员 (GuildMember)</target>
      </trans-unit>
      <trans-unit id="47384">
        <source>类型定义</source>
        <target state="needs-translation">类型定义</target>
      </trans-unit>
      <trans-unit id="47386">
        <source>interface GuildMember {
  user: User
  name?: string
  avatar?: string
  joinedAt?: number
}</source>
        <target state="needs-translation">interface GuildMember {
  user: User
  name?: string
  avatar?: string
  joinedAt?: number
}</target>
      </trans-unit>
      <trans-unit id="47388">
        <source>API</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">API</target>
      </trans-unit>
      <trans-unit id="47390">
        <source>bot.getGuildMember(guildId, userId)</source>
        <target state="needs-translation">bot.getGuildMember(guildId, userId)</target>
      </trans-unit>
      <trans-unit id="47392">
        <source>**guildId:** `string` 群组 ID</source>
        <target state="needs-translation">**guildId:** `string` 群组 ID</target>
      </trans-unit>
      <trans-unit id="47394">
        <source>**userId:** `string` 用户 ID</source>
        <target state="needs-translation">**userId:** `string` 用户 ID</target>
      </trans-unit>
      <trans-unit id="47396">
        <source>返回值: `Promise&lt;GuildMember&gt;` 群成员信息</source>
        <target state="needs-translation">返回值: `Promise&lt;GuildMember&gt;` 群成员信息</target>
      </trans-unit>
      <trans-unit id="47398">
        <source>获取群成员信息。</source>
        <target state="needs-translation">获取群成员信息。</target>
      </trans-unit>
      <trans-unit id="47400">
        <source>bot.getGuildMemberList(guildId, next?)</source>
        <target state="needs-translation">bot.getGuildMemberList(guildId, next?)</target>
      </trans-unit>
      <trans-unit id="47402">
        <source>**guildId:** `string` 群组 ID</source>
        <target state="needs-translation">**guildId:** `string` 群组 ID</target>
      </trans-unit>
      <trans-unit id="47404">
        <source>**next:** `string` 分页令牌</source>
        <target state="needs-translation">**next:** `string` 分页令牌</target>
      </trans-unit>
      <trans-unit id="47406">
        <source>返回值: `Promise&lt;List&lt;GuildMember&gt;&gt;` 群成员列表</source>
        <target state="needs-translation">返回值: `Promise&lt;List&lt;GuildMember&gt;&gt;` 群成员列表</target>
      </trans-unit>
      <trans-unit id="47408">
        <source>获取群成员列表。</source>
        <target state="needs-translation">获取群成员列表。</target>
      </trans-unit>
      <trans-unit id="47410">
        <source>bot.getGuildMemberIter(guildId) &lt;badge&gt;内置&lt;/badge&gt;</source>
        <target state="needs-translation">bot.getGuildMemberIter(guildId) &lt;badge&gt;内置&lt;/badge&gt;</target>
      </trans-unit>
      <trans-unit id="47412">
        <source>**guildId:** `string` 群组 ID</source>
        <target state="needs-translation">**guildId:** `string` 群组 ID</target>
      </trans-unit>
      <trans-unit id="47414">
        <source>返回值: `AsyncIterable&lt;GuildMember&gt;` 异步迭代器</source>
        <target state="needs-translation">返回值: `AsyncIterable&lt;GuildMember&gt;` 异步迭代器</target>
      </trans-unit>
      <trans-unit id="47416">
        <source>获取群成员列表的异步迭代器。</source>
        <target state="needs-translation">获取群成员列表的异步迭代器。</target>
      </trans-unit>
      <trans-unit id="47418">
        <source>bot.kickGuildMember(guildId, userId, permanent?)</source>
        <target state="needs-translation">bot.kickGuildMember(guildId, userId, permanent?)</target>
      </trans-unit>
      <trans-unit id="47420">
        <source>**guildId:** `string` 群组 ID</source>
        <target state="needs-translation">**guildId:** `string` 群组 ID</target>
      </trans-unit>
      <trans-unit id="47422">
        <source>**userId:** `string` 用户 ID</source>
        <target state="needs-translation">**userId:** `string` 用户 ID</target>
      </trans-unit>
      <trans-unit id="47424">
        <source>**permanent:** `boolean` 是否永久踢出 (用户无法再次加入群组)</source>
        <target state="needs-translation">**permanent:** `boolean` 是否永久踢出 (用户无法再次加入群组)</target>
      </trans-unit>
      <trans-unit id="47426">
        <source>返回值: `Promise&lt;void&gt;`</source>
        <target state="needs-translation">返回值: `Promise&lt;void&gt;`</target>
      </trans-unit>
      <trans-unit id="47428">
        <source>将某个用户踢出群组。</source>
        <target state="needs-translation">将某个用户踢出群组。</target>
      </trans-unit>
      <trans-unit id="65396">
        <source>bot.muteGuildMember(guildId, userId, duration, reason?) &lt;badge type=&quot;warning&quot;&gt;实验性&lt;/badge&gt;</source>
        <target state="needs-translation">bot.muteGuildMember(guildId, userId, duration, reason?) &lt;badge type=&quot;warning&quot;&gt;实验性&lt;/badge&gt;</target>
      </trans-unit>
      <trans-unit id="47432">
        <source>**guildId:** `string` 群组 ID</source>
        <target state="needs-translation">**guildId:** `string` 群组 ID</target>
      </trans-unit>
      <trans-unit id="47434">
        <source>**userId:** `string` 用户 ID</source>
        <target state="needs-translation">**userId:** `string` 用户 ID</target>
      </trans-unit>
      <trans-unit id="47436">
        <source>**duration:** `number` 禁言时长 (毫秒)</source>
        <target state="needs-translation">**duration:** `number` 禁言时长 (毫秒)</target>
      </trans-unit>
      <trans-unit id="47438">
        <source>**reason:** `string` 禁言说明</source>
        <target state="needs-translation">**reason:** `string` 禁言说明</target>
      </trans-unit>
      <trans-unit id="47440">
        <source>返回值: `Promise&lt;void&gt;`</source>
        <target state="needs-translation">返回值: `Promise&lt;void&gt;`</target>
      </trans-unit>
      <trans-unit id="47442">
        <source>将某个用户禁言。</source>
        <target state="needs-translation">将某个用户禁言。</target>
      </trans-unit>
      <trans-unit id="47444">
        <source>如果传入的禁言时长为 `0` 则表示解除禁言。</source>
        <target state="needs-translation">如果传入的禁言时长为 `0` 则表示解除禁言。</target>
      </trans-unit>
      <trans-unit id="47446">
        <source>bot.handleGuildMemberRequest(messageId, approve, comment?)</source>
        <target state="needs-translation">bot.handleGuildMemberRequest(messageId, approve, comment?)</target>
      </trans-unit>
      <trans-unit id="47448">
        <source>**messageId:** `string` 请求 ID</source>
        <target state="needs-translation">**messageId:** `string` 请求 ID</target>
      </trans-unit>
      <trans-unit id="47450">
        <source>**approve:** `boolean` 是否通过请求</source>
        <target state="needs-translation">**approve:** `boolean` 是否通过请求</target>
      </trans-unit>
      <trans-unit id="47452">
        <source>**comment:** `string` 备注信息</source>
        <target state="needs-translation">**comment:** `string` 备注信息</target>
      </trans-unit>
      <trans-unit id="47454">
        <source>返回值: `Promise&lt;void&gt;`</source>
        <target state="needs-translation">返回值: `Promise&lt;void&gt;`</target>
      </trans-unit>
      <trans-unit id="47456">
        <source>处理加群请求。</source>
        <target state="needs-translation">处理加群请求。</target>
      </trans-unit>
      <trans-unit id="47458">
        <source>事件</source>
        <target state="needs-translation">事件</target>
      </trans-unit>
      <trans-unit id="47460">
        <source>guild-member-added</source>
        <target state="needs-translation">guild-member-added</target>
      </trans-unit>
      <trans-unit id="47462">
        <source>**session:** `Session` 会话对象</source>
        <target state="needs-translation">**session:** `Session` 会话对象</target>
      </trans-unit>
      <trans-unit id="47464">
        <source>触发方式: emit</source>
        <target state="needs-translation">触发方式: emit</target>
      </trans-unit>
      <trans-unit id="47466">
        <source>新成员加入群组时触发。</source>
        <target state="needs-translation">新成员加入群组时触发。</target>
      </trans-unit>
      <trans-unit id="47468">
        <source>guild-member-updated</source>
        <target state="needs-translation">guild-member-updated</target>
      </trans-unit>
      <trans-unit id="47470">
        <source>**session:** `Session` 会话对象</source>
        <target state="needs-translation">**session:** `Session` 会话对象</target>
      </trans-unit>
      <trans-unit id="47472">
        <source>触发方式: emit</source>
        <target state="needs-translation">触发方式: emit</target>
      </trans-unit>
      <trans-unit id="47474">
        <source>群组成员信息更新时触发。</source>
        <target state="needs-translation">群组成员信息更新时触发。</target>
      </trans-unit>
      <trans-unit id="47476">
        <source>guild-member-removed</source>
        <target state="needs-translation">guild-member-removed</target>
      </trans-unit>
      <trans-unit id="47478">
        <source>**session:** `Session` 会话对象</source>
        <target state="needs-translation">**session:** `Session` 会话对象</target>
      </trans-unit>
      <trans-unit id="47480">
        <source>触发方式: emit</source>
        <target state="needs-translation">触发方式: emit</target>
      </trans-unit>
      <trans-unit id="47482">
        <source>群组成员退出群组时触发。</source>
        <target state="needs-translation">群组成员退出群组时触发。</target>
      </trans-unit>
      <trans-unit id="47484">
        <source>guild-member-request</source>
        <target state="needs-translation">guild-member-request</target>
      </trans-unit>
      <trans-unit id="47486">
        <source>**session:** `Session` 会话对象</source>
        <target state="needs-translation">**session:** `Session` 会话对象</target>
      </trans-unit>
      <trans-unit id="47488">
        <source>触发方式: emit</source>
        <target state="needs-translation">触发方式: emit</target>
      </trans-unit>
      <trans-unit id="47490">
        <source>接收到新的加群请求时触发。</source>
        <target state="needs-translation">接收到新的加群请求时触发。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1468" original="/[koishijs.docs] main/zh-CN/api/resources/message.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="47492">
        <source>消息 (Message)</source>
        <target state="needs-translation">消息 (Message)</target>
      </trans-unit>
      <trans-unit id="47494">
        <source>类型定义</source>
        <target state="needs-translation">类型定义</target>
      </trans-unit>
      <trans-unit id="47496">
        <source>interface Message {
  id: string
  channel?: Channel
  user?: User
  member?: Member
  quote?: Message
  content: string
  createdAt?: number
  updatedAt?: number
}</source>
        <target state="needs-translation">interface Message {
  id: string
  channel?: Channel
  user?: User
  member?: Member
  quote?: Message
  content: string
  createdAt?: number
  updatedAt?: number
}</target>
      </trans-unit>
      <trans-unit id="47498">
        <source>API</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">API</target>
      </trans-unit>
      <trans-unit id="47500">
        <source>bot.sendMessage(channelId, content) &lt;badge&gt;内置&lt;/badge&gt;</source>
        <target state="needs-translation">bot.sendMessage(channelId, content) &lt;badge&gt;内置&lt;/badge&gt;</target>
      </trans-unit>
      <trans-unit id="47502">
        <source>**channelId:** `string` 频道 ID</source>
        <target state="needs-translation">**channelId:** `string` 频道 ID</target>
      </trans-unit>
      <trans-unit id="47504">
        <source>**content:** `Fragment` 要发送的内容</source>
        <target state="needs-translation">**content:** `Fragment` 要发送的内容</target>
      </trans-unit>
      <trans-unit id="47506">
        <source>返回值: `Promise&lt;string[]&gt;` 发送的消息 ID</source>
        <target state="needs-translation">返回值: `Promise&lt;string[]&gt;` 发送的消息 ID</target>
      </trans-unit>
      <trans-unit id="47508">
        <source>向特定频道发送消息。</source>
        <target state="needs-translation">向特定频道发送消息。</target>
      </trans-unit>
      <trans-unit id="47510">
        <source>只要你能够获取到会话对象，你就不应使用此 API，而应该使用 [`session.send()`](../core/session.md#session-send)。</source>
        <target state="needs-translation">只要你能够获取到会话对象，你就不应使用此 API，而应该使用 [`session.send()`](../core/session.md#session-send)。</target>
      </trans-unit>
      <trans-unit id="47512">
        <source>一些平台会将主动发送的消息同被动接收后回复的消息区分开来，甚至可能限制主动消息的发送，因此使用 [`session.send()`](../core/session.md#session-send) 总是有更好的可靠性。</source>
        <target state="needs-translation">一些平台会将主动发送的消息同被动接收后回复的消息区分开来，甚至可能限制主动消息的发送，因此使用 [`session.send()`](../core/session.md#session-send) 总是有更好的可靠性。</target>
      </trans-unit>
      <trans-unit id="47514">
        <source>`bot.sendMessage()` 既可以发送群聊消息，也可以发送私聊消息。</source>
        <target state="needs-translation">`bot.sendMessage()` 既可以发送群聊消息，也可以发送私聊消息。</target>
      </trans-unit>
      <trans-unit id="47516">
        <source>当发送私聊消息时，其与 `bot.sendPrivateMessage()` 的区别在于前者传入的是频道 ID，而后者传入的是用户 ID。</source>
        <target state="needs-translation">当发送私聊消息时，其与 `bot.sendPrivateMessage()` 的区别在于前者传入的是频道 ID，而后者传入的是用户 ID。</target>
      </trans-unit>
      <trans-unit id="47518">
        <source>大多数情况下应当使用 [`MessageEncoder`](../message/encoder.md) 实现消息发送功能，而不是直接实现此方法。</source>
        <target state="needs-translation">大多数情况下应当使用 [`MessageEncoder`](../message/encoder.md) 实现消息发送功能，而不是直接实现此方法。</target>
      </trans-unit>
      <trans-unit id="47520">
        <source>bot.sendPrivateMessage(userId, content, guildId?) &lt;badge&gt;内置&lt;/badge&gt;</source>
        <target state="needs-translation">bot.sendPrivateMessage(userId, content, guildId?) &lt;badge&gt;内置&lt;/badge&gt;</target>
      </trans-unit>
      <trans-unit id="47522">
        <source>**userId:** `string` 对方 ID</source>
        <target state="needs-translation">**userId:** `string` 对方 ID</target>
      </trans-unit>
      <trans-unit id="47524">
        <source>**content:** `Fragment` 要发送的内容</source>
        <target state="needs-translation">**content:** `Fragment` 要发送的内容</target>
      </trans-unit>
      <trans-unit id="47526">
        <source>**guildId:** `string` 群组 ID</source>
        <target state="needs-translation">**guildId:** `string` 群组 ID</target>
      </trans-unit>
      <trans-unit id="47528">
        <source>返回值: `Promise&lt;string[]&gt;` 发送的消息 ID</source>
        <target state="needs-translation">返回值: `Promise&lt;string[]&gt;` 发送的消息 ID</target>
      </trans-unit>
      <trans-unit id="47530">
        <source>向特定用户发送私聊消息。</source>
        <target state="needs-translation">向特定用户发送私聊消息。</target>
      </trans-unit>
      <trans-unit id="47532">
        <source>bot.getMessage(channelId, messageId)</source>
        <target state="needs-translation">bot.getMessage(channelId, messageId)</target>
      </trans-unit>
      <trans-unit id="47534">
        <source>**channelId:** `string` 频道 ID</source>
        <target state="needs-translation">**channelId:** `string` 频道 ID</target>
      </trans-unit>
      <trans-unit id="47536">
        <source>**messageId:** `string` 消息 ID</source>
        <target state="needs-translation">**messageId:** `string` 消息 ID</target>
      </trans-unit>
      <trans-unit id="47538">
        <source>返回值: `Promise&lt;Message&gt;`</source>
        <target state="needs-translation">返回值: `Promise&lt;Message&gt;`</target>
      </trans-unit>
      <trans-unit id="47540">
        <source>获取特定消息。</source>
        <target state="needs-translation">获取特定消息。</target>
      </trans-unit>
      <trans-unit id="47542">
        <source>bot.deleteMessage(channelId, messageId)</source>
        <target state="needs-translation">bot.deleteMessage(channelId, messageId)</target>
      </trans-unit>
      <trans-unit id="47544">
        <source>**channelId:** `string` 频道 ID</source>
        <target state="needs-translation">**channelId:** `string` 频道 ID</target>
      </trans-unit>
      <trans-unit id="47546">
        <source>**messageId:** `string` 消息 ID</source>
        <target state="needs-translation">**messageId:** `string` 消息 ID</target>
      </trans-unit>
      <trans-unit id="47548">
        <source>返回值: `Promise&lt;void&gt;`</source>
        <target state="needs-translation">返回值: `Promise&lt;void&gt;`</target>
      </trans-unit>
      <trans-unit id="47550">
        <source>撤回特定消息。</source>
        <target state="needs-translation">撤回特定消息。</target>
      </trans-unit>
      <trans-unit id="47552">
        <source>bot.editMessage(channelId, messageId, content)</source>
        <target state="needs-translation">bot.editMessage(channelId, messageId, content)</target>
      </trans-unit>
      <trans-unit id="47554">
        <source>**channelId:** `string` 频道 ID</source>
        <target state="needs-translation">**channelId:** `string` 频道 ID</target>
      </trans-unit>
      <trans-unit id="47556">
        <source>**messageId:** `string` 消息 ID</source>
        <target state="needs-translation">**messageId:** `string` 消息 ID</target>
      </trans-unit>
      <trans-unit id="47558">
        <source>**content:** `Fragment` 要发送的内容</source>
        <target state="needs-translation">**content:** `Fragment` 要发送的内容</target>
      </trans-unit>
      <trans-unit id="47560">
        <source>返回值: `Promise&lt;void&gt;`</source>
        <target state="needs-translation">返回值: `Promise&lt;void&gt;`</target>
      </trans-unit>
      <trans-unit id="47562">
        <source>修改特定消息。</source>
        <target state="needs-translation">修改特定消息。</target>
      </trans-unit>
      <trans-unit id="65138">
        <source>bot.getMessageList(channelId, next?, direction?)</source>
        <target state="needs-translation">bot.getMessageList(channelId, next?, direction?)</target>
      </trans-unit>
      <trans-unit id="47566">
        <source>**channelId:** `string` 频道 ID</source>
        <target state="needs-translation">**channelId:** `string` 频道 ID</target>
      </trans-unit>
      <trans-unit id="65140">
        <source>**next:** `string` 分页令牌，未指定时视为从最新消息向前获取</source>
        <target state="needs-translation">**next:** `string` 分页令牌，未指定时视为从最新消息向前获取</target>
      </trans-unit>
      <trans-unit id="65142">
        <source>**direction:** `Direction` 消息获取方向，可以为 `'before' | 'after' | 'around'`</source>
        <target state="needs-translation">**direction:** `Direction` 消息获取方向，可以为 `'before' | 'after' | 'around'`</target>
      </trans-unit>
      <trans-unit id="47570">
        <source>返回值: `Promise&lt;List&lt;Message&gt;&gt;` 消息列表</source>
        <target state="needs-translation">返回值: `Promise&lt;List&lt;Message&gt;&gt;` 消息列表</target>
      </trans-unit>
      <trans-unit id="47572">
        <source>获取频道消息列表。</source>
        <target state="needs-translation">获取频道消息列表。</target>
      </trans-unit>
      <trans-unit id="47574">
        <source>bot.getMessageIter(channelId) &lt;badge&gt;内置&lt;/badge&gt;</source>
        <target state="needs-translation">bot.getMessageIter(channelId) &lt;badge&gt;内置&lt;/badge&gt;</target>
      </trans-unit>
      <trans-unit id="47576">
        <source>**channelId:** `string` 频道 ID</source>
        <target state="needs-translation">**channelId:** `string` 频道 ID</target>
      </trans-unit>
      <trans-unit id="47578">
        <source>返回值: `AsyncIterable&lt;Message&gt;` 异步迭代器</source>
        <target state="needs-translation">返回值: `AsyncIterable&lt;Message&gt;` 异步迭代器</target>
      </trans-unit>
      <trans-unit id="47580">
        <source>获取频道消息的异步迭代器。</source>
        <target state="needs-translation">获取频道消息的异步迭代器。</target>
      </trans-unit>
      <trans-unit id="47582">
        <source>bot.broadcast(channels, content, delay?) &lt;badge&gt;内置&lt;/badge&gt;</source>
        <target state="needs-translation">bot.broadcast(channels, content, delay?) &lt;badge&gt;内置&lt;/badge&gt;</target>
      </trans-unit>
      <trans-unit id="47584">
        <source>**channels:** `string[]` 频道列表</source>
        <target state="needs-translation">**channels:** `string[]` 频道列表</target>
      </trans-unit>
      <trans-unit id="47586">
        <source>**content:** `string` 要发送的内容</source>
        <target state="needs-translation">**content:** `string` 要发送的内容</target>
      </trans-unit>
      <trans-unit id="47588">
        <source>**delay:** `number` 发送消息间的延迟，默认值为 [`config.delay.broadcast`](../core/app.md#options-delay)</source>
        <target state="needs-translation">**delay:** `number` 发送消息间的延迟，默认值为 [`config.delay.broadcast`](../core/app.md#options-delay)</target>
      </trans-unit>
      <trans-unit id="47590">
        <source>返回值: `Promise&lt;string[]&gt;` 成功发送的消息 ID 列表</source>
        <target state="needs-translation">返回值: `Promise&lt;string[]&gt;` 成功发送的消息 ID 列表</target>
      </trans-unit>
      <trans-unit id="47592">
        <source>向多个频道广播消息。</source>
        <target state="needs-translation">向多个频道广播消息。</target>
      </trans-unit>
      <trans-unit id="47594">
        <source>如有失败不会抛出错误。</source>
        <target state="needs-translation">如有失败不会抛出错误。</target>
      </trans-unit>
      <trans-unit id="47596">
        <source>事件</source>
        <target state="needs-translation">事件</target>
      </trans-unit>
      <trans-unit id="47598">
        <source>message-created</source>
        <target state="needs-translation">message-created</target>
      </trans-unit>
      <trans-unit id="47600">
        <source>**session:** `Session` 会话对象</source>
        <target state="needs-translation">**session:** `Session` 会话对象</target>
      </trans-unit>
      <trans-unit id="47602">
        <source>触发方式: emit</source>
        <target state="needs-translation">触发方式: emit</target>
      </trans-unit>
      <trans-unit id="47604">
        <source>别名: `message`</source>
        <target state="needs-translation">别名: `message`</target>
      </trans-unit>
      <trans-unit id="47606">
        <source>收到消息时触发。</source>
        <target state="needs-translation">收到消息时触发。</target>
      </trans-unit>
      <trans-unit id="47608">
        <source>message-updated</source>
        <target state="needs-translation">message-updated</target>
      </trans-unit>
      <trans-unit id="47610">
        <source>**session:** `Session` 会话对象</source>
        <target state="needs-translation">**session:** `Session` 会话对象</target>
      </trans-unit>
      <trans-unit id="47612">
        <source>触发方式: emit</source>
        <target state="needs-translation">触发方式: emit</target>
      </trans-unit>
      <trans-unit id="47614">
        <source>消息被修改时触发。</source>
        <target state="needs-translation">消息被修改时触发。</target>
      </trans-unit>
      <trans-unit id="47616">
        <source>message-deleted</source>
        <target state="needs-translation">message-deleted</target>
      </trans-unit>
      <trans-unit id="47618">
        <source>**session:** `Session` 会话对象</source>
        <target state="needs-translation">**session:** `Session` 会话对象</target>
      </trans-unit>
      <trans-unit id="47620">
        <source>触发方式: emit</source>
        <target state="needs-translation">触发方式: emit</target>
      </trans-unit>
      <trans-unit id="47622">
        <source>消息被撤回时触发。</source>
        <target state="needs-translation">消息被撤回时触发。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1470" original="/[koishijs.docs] main/zh-CN/api/resources/reaction.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="47624">
        <source>表态 (Reaction) &lt;badge type=&quot;warning&quot;&gt;实验性&lt;/badge&gt;</source>
        <target state="needs-translation">表态 (Reaction) &lt;badge type=&quot;warning&quot;&gt;实验性&lt;/badge&gt;</target>
      </trans-unit>
      <trans-unit id="47626">
        <source>这是一个实验性功能，未来可能发生改动。</source>
        <target state="needs-translation">这是一个实验性功能，未来可能发生改动。</target>
      </trans-unit>
      <trans-unit id="47628">
        <source>API</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">API</target>
      </trans-unit>
      <trans-unit id="47630">
        <source>bot.createReaction(channelId, messageId, emoji)</source>
        <target state="needs-translation">bot.createReaction(channelId, messageId, emoji)</target>
      </trans-unit>
      <trans-unit id="47632">
        <source>**channelId:** `string` 频道 ID</source>
        <target state="needs-translation">**channelId:** `string` 频道 ID</target>
      </trans-unit>
      <trans-unit id="47634">
        <source>**messageId:** `string` 消息 ID</source>
        <target state="needs-translation">**messageId:** `string` 消息 ID</target>
      </trans-unit>
      <trans-unit id="47636">
        <source>**emoji:** `string` 表态名称</source>
        <target state="needs-translation">**emoji:** `string` 表态名称</target>
      </trans-unit>
      <trans-unit id="47638">
        <source>返回值: `Promise&lt;void&gt;`</source>
        <target state="needs-translation">返回值: `Promise&lt;void&gt;`</target>
      </trans-unit>
      <trans-unit id="47640">
        <source>向特定消息添加表态。</source>
        <target state="needs-translation">向特定消息添加表态。</target>
      </trans-unit>
      <trans-unit id="47642">
        <source>bot.deleteReaction(channelId, messageId, emoji, userId?)</source>
        <target state="needs-translation">bot.deleteReaction(channelId, messageId, emoji, userId?)</target>
      </trans-unit>
      <trans-unit id="47644">
        <source>**channelId:** `string` 频道 ID</source>
        <target state="needs-translation">**channelId:** `string` 频道 ID</target>
      </trans-unit>
      <trans-unit id="47646">
        <source>**messageId:** `string` 消息 ID</source>
        <target state="needs-translation">**messageId:** `string` 消息 ID</target>
      </trans-unit>
      <trans-unit id="47648">
        <source>**emoji:** `string` 表态名称</source>
        <target state="needs-translation">**emoji:** `string` 表态名称</target>
      </trans-unit>
      <trans-unit id="47650">
        <source>**userId:** `string` 用户 ID</source>
        <target state="needs-translation">**userId:** `string` 用户 ID</target>
      </trans-unit>
      <trans-unit id="47652">
        <source>返回值: `Promise&lt;void&gt;`</source>
        <target state="needs-translation">返回值: `Promise&lt;void&gt;`</target>
      </trans-unit>
      <trans-unit id="47654">
        <source>从特定消息删除某个用户添加的特定表态。</source>
        <target state="needs-translation">从特定消息删除某个用户添加的特定表态。</target>
      </trans-unit>
      <trans-unit id="47656">
        <source>如果没有传入用户 ID 则表示删除自己的表态。</source>
        <target state="needs-translation">如果没有传入用户 ID 则表示删除自己的表态。</target>
      </trans-unit>
      <trans-unit id="47658">
        <source>bot.clearReaction(channelId, messageId, emoji?)</source>
        <target state="needs-translation">bot.clearReaction(channelId, messageId, emoji?)</target>
      </trans-unit>
      <trans-unit id="47660">
        <source>**channelId:** `string` 频道 ID</source>
        <target state="needs-translation">**channelId:** `string` 频道 ID</target>
      </trans-unit>
      <trans-unit id="47662">
        <source>**messageId:** `string` 消息 ID</source>
        <target state="needs-translation">**messageId:** `string` 消息 ID</target>
      </trans-unit>
      <trans-unit id="47664">
        <source>**emoji:** `string` 表态名称</source>
        <target state="needs-translation">**emoji:** `string` 表态名称</target>
      </trans-unit>
      <trans-unit id="47666">
        <source>返回值: `Promise&lt;void&gt;`</source>
        <target state="needs-translation">返回值: `Promise&lt;void&gt;`</target>
      </trans-unit>
      <trans-unit id="47668">
        <source>从特定消息清除某个特定表态。</source>
        <target state="needs-translation">从特定消息清除某个特定表态。</target>
      </trans-unit>
      <trans-unit id="47670">
        <source>如果没有传入表态名称则表示清除所有表态。</source>
        <target state="needs-translation">如果没有传入表态名称则表示清除所有表态。</target>
      </trans-unit>
      <trans-unit id="47672">
        <source>bot.getReactionList(channelId, messageId, emoji, next?)</source>
        <target state="needs-translation">bot.getReactionList(channelId, messageId, emoji, next?)</target>
      </trans-unit>
      <trans-unit id="47674">
        <source>**channelId:** `string` 频道 ID</source>
        <target state="needs-translation">**channelId:** `string` 频道 ID</target>
      </trans-unit>
      <trans-unit id="47676">
        <source>**messageId:** `string` 消息 ID</source>
        <target state="needs-translation">**messageId:** `string` 消息 ID</target>
      </trans-unit>
      <trans-unit id="47678">
        <source>**emoji:** `string` 表态名称</source>
        <target state="needs-translation">**emoji:** `string` 表态名称</target>
      </trans-unit>
      <trans-unit id="47680">
        <source>**next:** `string` 分页令牌</source>
        <target state="needs-translation">**next:** `string` 分页令牌</target>
      </trans-unit>
      <trans-unit id="47682">
        <source>返回值: `Promise&lt;List&lt;User&gt;&gt;`</source>
        <target state="needs-translation">返回值: `Promise&lt;List&lt;User&gt;&gt;`</target>
      </trans-unit>
      <trans-unit id="47684">
        <source>获取添加特定消息的特定表态的用户列表。</source>
        <target state="needs-translation">获取添加特定消息的特定表态的用户列表。</target>
      </trans-unit>
      <trans-unit id="47686">
        <source>bot.getReactionIter(channelId, messageId, emoji) &lt;badge&gt;内置&lt;/badge&gt;</source>
        <target state="needs-translation">bot.getReactionIter(channelId, messageId, emoji) &lt;badge&gt;内置&lt;/badge&gt;</target>
      </trans-unit>
      <trans-unit id="47688">
        <source>**channelId:** `string` 频道 ID</source>
        <target state="needs-translation">**channelId:** `string` 频道 ID</target>
      </trans-unit>
      <trans-unit id="47690">
        <source>**messageId:** `string` 消息 ID</source>
        <target state="needs-translation">**messageId:** `string` 消息 ID</target>
      </trans-unit>
      <trans-unit id="47692">
        <source>**emoji:** `string` 表态名称</source>
        <target state="needs-translation">**emoji:** `string` 表态名称</target>
      </trans-unit>
      <trans-unit id="47694">
        <source>返回值: `AsyncIterable&lt;User&gt;` 异步迭代器</source>
        <target state="needs-translation">返回值: `AsyncIterable&lt;User&gt;` 异步迭代器</target>
      </trans-unit>
      <trans-unit id="47696">
        <source>获取添加特定消息的特定表态的用户的异步迭代器。</source>
        <target state="needs-translation">获取添加特定消息的特定表态的用户的异步迭代器。</target>
      </trans-unit>
      <trans-unit id="47698">
        <source>事件</source>
        <target state="needs-translation">事件</target>
      </trans-unit>
      <trans-unit id="47700">
        <source>reaction-added</source>
        <target state="needs-translation">reaction-added</target>
      </trans-unit>
      <trans-unit id="47702">
        <source>**session:** `Session` 会话对象</source>
        <target state="needs-translation">**session:** `Session` 会话对象</target>
      </trans-unit>
      <trans-unit id="47704">
        <source>触发方式: emit</source>
        <target state="needs-translation">触发方式: emit</target>
      </trans-unit>
      <trans-unit id="47706">
        <source>添加表态时触发。</source>
        <target state="needs-translation">添加表态时触发。</target>
      </trans-unit>
      <trans-unit id="47708">
        <source>reaction-removed</source>
        <target state="needs-translation">reaction-removed</target>
      </trans-unit>
      <trans-unit id="47710">
        <source>**session:** `Session` 会话对象</source>
        <target state="needs-translation">**session:** `Session` 会话对象</target>
      </trans-unit>
      <trans-unit id="47712">
        <source>触发方式: emit</source>
        <target state="needs-translation">触发方式: emit</target>
      </trans-unit>
      <trans-unit id="47714">
        <source>删除表态时触发。</source>
        <target state="needs-translation">删除表态时触发。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1472" original="/[koishijs.docs] main/zh-CN/api/resources/role.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="47716">
        <source>群组角色 (GuildRole)</source>
        <target state="needs-translation">群组角色 (GuildRole)</target>
      </trans-unit>
      <trans-unit id="47718">
        <source>类型定义</source>
        <target state="needs-translation">类型定义</target>
      </trans-unit>
      <trans-unit id="47720">
        <source>export interface GuildRole {
  id: string
  name: string
}</source>
        <target state="needs-translation">export interface GuildRole {
  id: string
  name: string
}</target>
      </trans-unit>
      <trans-unit id="47722">
        <source>API</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">API</target>
      </trans-unit>
      <trans-unit id="47724">
        <source>bot.setGuildMemberRole(guildId, userId, roleId)</source>
        <target state="needs-translation">bot.setGuildMemberRole(guildId, userId, roleId)</target>
      </trans-unit>
      <trans-unit id="47726">
        <source>**guildId:** `string` 群组 ID</source>
        <target state="needs-translation">**guildId:** `string` 群组 ID</target>
      </trans-unit>
      <trans-unit id="47728">
        <source>**userId:** `string` 用户 ID</source>
        <target state="needs-translation">**userId:** `string` 用户 ID</target>
      </trans-unit>
      <trans-unit id="47730">
        <source>**roleId:** `string` 角色 ID</source>
        <target state="needs-translation">**roleId:** `string` 角色 ID</target>
      </trans-unit>
      <trans-unit id="47732">
        <source>返回值: `Promise&lt;void&gt;`</source>
        <target state="needs-translation">返回值: `Promise&lt;void&gt;`</target>
      </trans-unit>
      <trans-unit id="47734">
        <source>设置群组内用户的角色。</source>
        <target state="needs-translation">设置群组内用户的角色。</target>
      </trans-unit>
      <trans-unit id="47736">
        <source>bot.unsetGuildMemberRole(guildId, userId, roleId)</source>
        <target state="needs-translation">bot.unsetGuildMemberRole(guildId, userId, roleId)</target>
      </trans-unit>
      <trans-unit id="47738">
        <source>**guildId:** `string` 群组 ID</source>
        <target state="needs-translation">**guildId:** `string` 群组 ID</target>
      </trans-unit>
      <trans-unit id="47740">
        <source>**userId:** `string` 用户 ID</source>
        <target state="needs-translation">**userId:** `string` 用户 ID</target>
      </trans-unit>
      <trans-unit id="47742">
        <source>**roleId:** `string` 角色 ID</source>
        <target state="needs-translation">**roleId:** `string` 角色 ID</target>
      </trans-unit>
      <trans-unit id="47744">
        <source>返回值: `Promise&lt;void&gt;`</source>
        <target state="needs-translation">返回值: `Promise&lt;void&gt;`</target>
      </trans-unit>
      <trans-unit id="47746">
        <source>取消群组内用户的角色。</source>
        <target state="needs-translation">取消群组内用户的角色。</target>
      </trans-unit>
      <trans-unit id="47748">
        <source>bot.getGuildRoleList(guildId, next?)</source>
        <target state="needs-translation">bot.getGuildRoleList(guildId, next?)</target>
      </trans-unit>
      <trans-unit id="47750">
        <source>**guildId:** `string` 群组 ID</source>
        <target state="needs-translation">**guildId:** `string` 群组 ID</target>
      </trans-unit>
      <trans-unit id="47752">
        <source>**next:** `string` 分页令牌</source>
        <target state="needs-translation">**next:** `string` 分页令牌</target>
      </trans-unit>
      <trans-unit id="47754">
        <source>返回值: `Promise&lt;List&lt;GuildRole&gt;&gt;` 角色列表</source>
        <target state="needs-translation">返回值: `Promise&lt;List&lt;GuildRole&gt;&gt;` 角色列表</target>
      </trans-unit>
      <trans-unit id="47756">
        <source>获取群组角色列表。</source>
        <target state="needs-translation">获取群组角色列表。</target>
      </trans-unit>
      <trans-unit id="47758">
        <source>bot.getGuildRoleIter(guildId) &lt;badge&gt;内置&lt;/badge&gt;</source>
        <target state="needs-translation">bot.getGuildRoleIter(guildId) &lt;badge&gt;内置&lt;/badge&gt;</target>
      </trans-unit>
      <trans-unit id="47760">
        <source>**guildId:** `string` 群组 ID</source>
        <target state="needs-translation">**guildId:** `string` 群组 ID</target>
      </trans-unit>
      <trans-unit id="47762">
        <source>返回值: `AsyncIterable&lt;GuildRole&gt;` 异步迭代器</source>
        <target state="needs-translation">返回值: `AsyncIterable&lt;GuildRole&gt;` 异步迭代器</target>
      </trans-unit>
      <trans-unit id="47764">
        <source>获取群组角色列表的异步迭代器。</source>
        <target state="needs-translation">获取群组角色列表的异步迭代器。</target>
      </trans-unit>
      <trans-unit id="47766">
        <source>bot.createGuildRole(guildId, data)</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">bot.createGuildRole(guildId, data)</target>
      </trans-unit>
      <trans-unit id="47768">
        <source>**guildId:** `string` 群组 ID</source>
        <target state="needs-translation">**guildId:** `string` 群组 ID</target>
      </trans-unit>
      <trans-unit id="47770">
        <source>**data:** `Partial&lt;GuildRole&gt;` 角色信息</source>
        <target state="needs-translation">**data:** `Partial&lt;GuildRole&gt;` 角色信息</target>
      </trans-unit>
      <trans-unit id="47772">
        <source>返回值: `Promise&lt;GuildRole&gt;`</source>
        <target state="needs-translation">返回值: `Promise&lt;GuildRole&gt;`</target>
      </trans-unit>
      <trans-unit id="47774">
        <source>创建群组角色。</source>
        <target state="needs-translation">创建群组角色。</target>
      </trans-unit>
      <trans-unit id="47776">
        <source>bot.updateGuildRole(guildId, roleId, data)</source>
        <target state="needs-translation">bot.updateGuildRole(guildId, roleId, data)</target>
      </trans-unit>
      <trans-unit id="47778">
        <source>**guildId:** `string` 群组 ID</source>
        <target state="needs-translation">**guildId:** `string` 群组 ID</target>
      </trans-unit>
      <trans-unit id="47780">
        <source>**roleId:** `string` 角色 ID</source>
        <target state="needs-translation">**roleId:** `string` 角色 ID</target>
      </trans-unit>
      <trans-unit id="47782">
        <source>**data:** `Partial&lt;GuildRole&gt;` 角色信息</source>
        <target state="needs-translation">**data:** `Partial&lt;GuildRole&gt;` 角色信息</target>
      </trans-unit>
      <trans-unit id="47784">
        <source>返回值: `Promise&lt;void&gt;`</source>
        <target state="needs-translation">返回值: `Promise&lt;void&gt;`</target>
      </trans-unit>
      <trans-unit id="47786">
        <source>修改群组角色。</source>
        <target state="needs-translation">修改群组角色。</target>
      </trans-unit>
      <trans-unit id="47788">
        <source>bot.deleteGuildRole(guildId, roleId)</source>
        <target state="needs-translation">bot.deleteGuildRole(guildId, roleId)</target>
      </trans-unit>
      <trans-unit id="47790">
        <source>**guildId:** `string` 群组 ID</source>
        <target state="needs-translation">**guildId:** `string` 群组 ID</target>
      </trans-unit>
      <trans-unit id="47792">
        <source>**roleId:** `string` 角色 ID</source>
        <target state="needs-translation">**roleId:** `string` 角色 ID</target>
      </trans-unit>
      <trans-unit id="47794">
        <source>返回值: `Promise&lt;void&gt;`</source>
        <target state="needs-translation">返回值: `Promise&lt;void&gt;`</target>
      </trans-unit>
      <trans-unit id="47796">
        <source>删除群组角色。</source>
        <target state="needs-translation">删除群组角色。</target>
      </trans-unit>
      <trans-unit id="47798">
        <source>事件</source>
        <target state="needs-translation">事件</target>
      </trans-unit>
      <trans-unit id="47800">
        <source>guild-role-created</source>
        <target state="needs-translation">guild-role-created</target>
      </trans-unit>
      <trans-unit id="47802">
        <source>**session:** `Session` 会话对象</source>
        <target state="needs-translation">**session:** `Session` 会话对象</target>
      </trans-unit>
      <trans-unit id="47804">
        <source>触发方式: emit</source>
        <target state="needs-translation">触发方式: emit</target>
      </trans-unit>
      <trans-unit id="47806">
        <source>创建群组角色时触发。</source>
        <target state="needs-translation">创建群组角色时触发。</target>
      </trans-unit>
      <trans-unit id="47808">
        <source>guild-role-updated</source>
        <target state="needs-translation">guild-role-updated</target>
      </trans-unit>
      <trans-unit id="47810">
        <source>**session:** `Session` 会话对象</source>
        <target state="needs-translation">**session:** `Session` 会话对象</target>
      </trans-unit>
      <trans-unit id="47812">
        <source>触发方式: emit</source>
        <target state="needs-translation">触发方式: emit</target>
      </trans-unit>
      <trans-unit id="47814">
        <source>群组角色信息更新时触发。</source>
        <target state="needs-translation">群组角色信息更新时触发。</target>
      </trans-unit>
      <trans-unit id="47816">
        <source>guild-role-deleted</source>
        <target state="needs-translation">guild-role-deleted</target>
      </trans-unit>
      <trans-unit id="47818">
        <source>**session:** `Session` 会话对象</source>
        <target state="needs-translation">**session:** `Session` 会话对象</target>
      </trans-unit>
      <trans-unit id="47820">
        <source>触发方式: emit</source>
        <target state="needs-translation">触发方式: emit</target>
      </trans-unit>
      <trans-unit id="47822">
        <source>删除群组角色时触发。</source>
        <target state="needs-translation">删除群组角色时触发。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1474" original="/[koishijs.docs] main/zh-CN/api/resources/user.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="47824">
        <source>用户 (User)</source>
        <target state="needs-translation">用户 (User)</target>
      </trans-unit>
      <trans-unit id="47826">
        <source>要了解数据库中的用户，请前往 [API &gt; 数据库 &gt; 内置数据结构](../database/built-in.md#user)</source>
        <target state="needs-translation">要了解数据库中的用户，请前往 [API &gt; 数据库 &gt; 内置数据结构](../database/built-in.md#user)</target>
      </trans-unit>
      <trans-unit id="63622">
        <source>要了解两者的区别，请前往 [API &gt; 术语表 &gt; 用户](../glossary.md#user)
:::</source>
        <target state="needs-translation">要了解两者的区别，请前往 [API &gt; 术语表 &gt; 用户](../glossary.md#user)
:::</target>
      </trans-unit>
      <trans-unit id="47830">
        <source>类型定义</source>
        <target state="needs-translation">类型定义</target>
      </trans-unit>
      <trans-unit id="47832">
        <source>export interface User {
  id: string
  name: string
  avatar?: string
}</source>
        <target state="needs-translation">export interface User {
  id: string
  name: string
  avatar?: string
}</target>
      </trans-unit>
      <trans-unit id="47834">
        <source>API</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">API</target>
      </trans-unit>
      <trans-unit id="47836">
        <source>bot.getUser(userId)</source>
        <target state="needs-translation">bot.getUser(userId)</target>
      </trans-unit>
      <trans-unit id="47838">
        <source>**userId:** `string` 用户 ID</source>
        <target state="needs-translation">**userId:** `string` 用户 ID</target>
      </trans-unit>
      <trans-unit id="47840">
        <source>返回值: `Promise&lt;User&gt;` 用户信息</source>
        <target state="needs-translation">返回值: `Promise&lt;User&gt;` 用户信息</target>
      </trans-unit>
      <trans-unit id="47842">
        <source>获取用户信息。</source>
        <target state="needs-translation">获取用户信息。</target>
      </trans-unit>
      <trans-unit id="47844">
        <source>bot.getFriendList(next?)</source>
        <target state="needs-translation">bot.getFriendList(next?)</target>
      </trans-unit>
      <trans-unit id="47846">
        <source>**next:** `string` 分页令牌</source>
        <target state="needs-translation">**next:** `string` 分页令牌</target>
      </trans-unit>
      <trans-unit id="47848">
        <source>返回值: `Promise&lt;List&lt;User&gt;&gt;` 好友列表</source>
        <target state="needs-translation">返回值: `Promise&lt;List&lt;User&gt;&gt;` 好友列表</target>
      </trans-unit>
      <trans-unit id="47850">
        <source>获取机器人的好友列表。</source>
        <target state="needs-translation">获取机器人的好友列表。</target>
      </trans-unit>
      <trans-unit id="47852">
        <source>bot.getFriendIter() &lt;badge&gt;内置&lt;/badge&gt;</source>
        <target state="needs-translation">bot.getFriendIter() &lt;badge&gt;内置&lt;/badge&gt;</target>
      </trans-unit>
      <trans-unit id="47854">
        <source>返回值: `AsyncIterable&lt;User&gt;` 异步迭代器</source>
        <target state="needs-translation">返回值: `AsyncIterable&lt;User&gt;` 异步迭代器</target>
      </trans-unit>
      <trans-unit id="47856">
        <source>获取机器人的好友列表的异步迭代器。</source>
        <target state="needs-translation">获取机器人的好友列表的异步迭代器。</target>
      </trans-unit>
      <trans-unit id="47858">
        <source>bot.handleFriendRequest(messageId, approve, comment?)</source>
        <target state="needs-translation">bot.handleFriendRequest(messageId, approve, comment?)</target>
      </trans-unit>
      <trans-unit id="47860">
        <source>**messageId:** `string` 请求 ID</source>
        <target state="needs-translation">**messageId:** `string` 请求 ID</target>
      </trans-unit>
      <trans-unit id="47862">
        <source>**approve:** `boolean` 是否通过请求</source>
        <target state="needs-translation">**approve:** `boolean` 是否通过请求</target>
      </trans-unit>
      <trans-unit id="47864">
        <source>**comment:** `string` 备注信息</source>
        <target state="needs-translation">**comment:** `string` 备注信息</target>
      </trans-unit>
      <trans-unit id="47866">
        <source>返回值: `Promise&lt;void&gt;`</source>
        <target state="needs-translation">返回值: `Promise&lt;void&gt;`</target>
      </trans-unit>
      <trans-unit id="47868">
        <source>处理好友请求。</source>
        <target state="needs-translation">处理好友请求。</target>
      </trans-unit>
      <trans-unit id="47870">
        <source>事件</source>
        <target state="needs-translation">事件</target>
      </trans-unit>
      <trans-unit id="47872">
        <source>friend-request</source>
        <target state="needs-translation">friend-request</target>
      </trans-unit>
      <trans-unit id="47874">
        <source>**session:** `Session` 会话对象</source>
        <target state="needs-translation">**session:** `Session` 会话对象</target>
      </trans-unit>
      <trans-unit id="47876">
        <source>触发方式: emit</source>
        <target state="needs-translation">触发方式: emit</target>
      </trans-unit>
      <trans-unit id="47878">
        <source>接收到新的好友申请时触发。</source>
        <target state="needs-translation">接收到新的好友申请时触发。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1476" original="/[koishijs.docs] main/zh-CN/api/service/events.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="47880">
        <source>事件系统 (Events)</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">事件系統 (Events)</target>
      </trans-unit>
      <trans-unit id="47882">
        <source>参见：[开发 &gt; 交互基础 &gt; 事件系统](../../guide/basic/events.md)
&lt;br&gt;参见：[开发 &gt; 模块化 &gt; 生命周期](../../guide/plugin/lifecycle.md)</source>
        <target state="needs-translation">参见：[开发 &gt; 交互基础 &gt; 事件系统](../../guide/basic/events.md)
&lt;br&gt;参见：[开发 &gt; 模块化 &gt; 生命周期](../../guide/plugin/lifecycle.md)</target>
      </trans-unit>
      <trans-unit id="47884">
        <source>本节介绍事件 API。</source>
        <target state="needs-translation">本节介绍事件 API。</target>
      </trans-unit>
      <trans-unit id="47886">
        <source>如果想了解 Koishi 的内置事件，请前往 [API &gt; 核心模块 &gt; 事件](../core/events.md)。</source>
        <target state="needs-translation">如果想了解 Koishi 的内置事件，请前往 [API &gt; 核心模块 &gt; 事件](../core/events.md)。</target>
      </trans-unit>
      <trans-unit id="47888">
        <source>实例方法</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">實體方法</target>
      </trans-unit>
      <trans-unit id="47890">
        <source>ctx.emit(session?, event, ...param)</source>
        <target state="needs-translation">ctx.emit(session?, event, ...param)</target>
      </trans-unit>
      <trans-unit id="47892">
        <source>ctx.parallel(session?, event, ...param)</source>
        <target state="needs-translation">ctx.parallel(session?, event, ...param)</target>
      </trans-unit>
      <trans-unit id="47894">
        <source>**session:** [`Session`](../core/session.md) 会话对象</source>
        <target state="needs-translation">**session:** [`Session`](../core/session.md) 会话对象</target>
      </trans-unit>
      <trans-unit id="47896">
        <source>**event:** `string` 事件名称</source>
        <target state="needs-translation">**event:** `string` 事件名称</target>
      </trans-unit>
      <trans-unit id="47898">
        <source>**param:** `any[]` 事件的参数</source>
        <target state="needs-translation">**param:** `any[]` 事件的参数</target>
      </trans-unit>
      <trans-unit id="47900">
        <source>返回值: `boolean` 匹配结果</source>
        <target state="needs-translation">返回值: `boolean` 匹配结果</target>
      </trans-unit>
      <trans-unit id="47902">
        <source>同时触发所有 event 事件的能够匹配 session 对象的回调函数。</source>
        <target state="needs-translation">同时触发所有 event 事件的能够匹配 session 对象的回调函数。</target>
      </trans-unit>
      <trans-unit id="47904">
        <source>emit 为同步，parallel 为异步。</source>
        <target state="needs-translation">emit 为同步，parallel 为异步。</target>
      </trans-unit>
      <trans-unit id="47906">
        <source>ctx.bail(session?, event, ...param)</source>
        <target state="needs-translation">ctx.bail(session?, event, ...param)</target>
      </trans-unit>
      <trans-unit id="47908">
        <source>ctx.serial(session?, event, ...param)</source>
        <target state="needs-translation">ctx.serial(session?, event, ...param)</target>
      </trans-unit>
      <trans-unit id="47910">
        <source>**session:** [`Session`](../core/session.md) 会话对象</source>
        <target state="needs-translation">**session:** [`Session`](../core/session.md) 会话对象</target>
      </trans-unit>
      <trans-unit id="47912">
        <source>**event:** `string` 事件名称</source>
        <target state="needs-translation">**event:** `string` 事件名称</target>
      </trans-unit>
      <trans-unit id="47914">
        <source>**param:** `any[]` 事件的参数</source>
        <target state="needs-translation">**param:** `any[]` 事件的参数</target>
      </trans-unit>
      <trans-unit id="47916">
        <source>返回值: `boolean` 匹配结果</source>
        <target state="needs-translation">返回值: `boolean` 匹配结果</target>
      </trans-unit>
      <trans-unit id="47918">
        <source>依次触发所有 event 事件的能够匹配 session 对象的回调函数。</source>
        <target state="needs-translation">依次触发所有 event 事件的能够匹配 session 对象的回调函数。</target>
      </trans-unit>
      <trans-unit id="47920">
        <source>当返回一个 false, null, undefined 以外的值时将这个值作为结果返回。</source>
        <target state="needs-translation">当返回一个 false, null, undefined 以外的值时将这个值作为结果返回。</target>
      </trans-unit>
      <trans-unit id="47922">
        <source>bail 为同步，serial 为异步。</source>
        <target state="needs-translation">bail 为同步，serial 为异步。</target>
      </trans-unit>
      <trans-unit id="47924">
        <source>ctx.on(event, listener, prepend?)</source>
        <target state="needs-translation">ctx.on(event, listener, prepend?)</target>
      </trans-unit>
      <trans-unit id="47926">
        <source>**event:** `string` 事件名称</source>
        <target state="needs-translation">**event:** `string` 事件名称</target>
      </trans-unit>
      <trans-unit id="47928">
        <source>**listener:** `Function` 回调函数</source>
        <target state="needs-translation">**listener:** `Function` 回调函数</target>
      </trans-unit>
      <trans-unit id="47930">
        <source>**prepend:** `boolean` 是否前置</source>
        <target state="needs-translation">**prepend:** `boolean` 是否前置</target>
      </trans-unit>
      <trans-unit id="47932">
        <source>返回值: `() =&gt; boolean` 取消这个监听器</source>
        <target state="needs-translation">返回值: `() =&gt; boolean` 取消这个监听器</target>
      </trans-unit>
      <trans-unit id="47934">
        <source>监听一个事件。</source>
        <target state="needs-translation">监听一个事件。</target>
      </trans-unit>
      <trans-unit id="47936">
        <source>ctx.off(event, listener)</source>
        <target state="needs-translation">ctx.off(event, listener)</target>
      </trans-unit>
      <trans-unit id="47938">
        <source>**event:** `string` 事件名称</source>
        <target state="needs-translation">**event:** `string` 事件名称</target>
      </trans-unit>
      <trans-unit id="47940">
        <source>**listener:** `Function` 回调函数</source>
        <target state="needs-translation">**listener:** `Function` 回调函数</target>
      </trans-unit>
      <trans-unit id="47942">
        <source>返回值: `boolean` 是否有此回调函数</source>
        <target state="needs-translation">返回值: `boolean` 是否有此回调函数</target>
      </trans-unit>
      <trans-unit id="47944">
        <source>取消监听一个事件。</source>
        <target state="needs-translation">取消监听一个事件。</target>
      </trans-unit>
      <trans-unit id="47946">
        <source>ctx.once(event, listener, prepend?)</source>
        <target state="needs-translation">ctx.once(event, listener, prepend?)</target>
      </trans-unit>
      <trans-unit id="47948">
        <source>**event:** `string` 事件名称</source>
        <target state="needs-translation">**event:** `string` 事件名称</target>
      </trans-unit>
      <trans-unit id="47950">
        <source>**listener:** `Function` 回调函数</source>
        <target state="needs-translation">**listener:** `Function` 回调函数</target>
      </trans-unit>
      <trans-unit id="47952">
        <source>**prepend:** `boolean` 是否前置</source>
        <target state="needs-translation">**prepend:** `boolean` 是否前置</target>
      </trans-unit>
      <trans-unit id="47954">
        <source>返回值: `() =&gt; boolean` 取消这个监听器</source>
        <target state="needs-translation">返回值: `() =&gt; boolean` 取消这个监听器</target>
      </trans-unit>
      <trans-unit id="47956">
        <source>监听一个事件，且确保回调函数只会被执行一次。</source>
        <target state="needs-translation">监听一个事件，且确保回调函数只会被执行一次。</target>
      </trans-unit>
      <trans-unit id="47958">
        <source>ctx.before(event, listener, append?)</source>
        <target state="needs-translation">ctx.before(event, listener, append?)</target>
      </trans-unit>
      <trans-unit id="47960">
        <source>**event:** `string` 事件名称</source>
        <target state="needs-translation">**event:** `string` 事件名称</target>
      </trans-unit>
      <trans-unit id="47962">
        <source>**listener:** `Function` 回调函数</source>
        <target state="needs-translation">**listener:** `Function` 回调函数</target>
      </trans-unit>
      <trans-unit id="47964">
        <source>**append:** `boolean` 是否后置</source>
        <target state="needs-translation">**append:** `boolean` 是否后置</target>
      </trans-unit>
      <trans-unit id="47966">
        <source>返回值: `() =&gt; boolean` 取消这个监听器</source>
        <target state="needs-translation">返回值: `() =&gt; boolean` 取消这个监听器</target>
      </trans-unit>
      <trans-unit id="47968">
        <source>监听一个以 `before-` 开头的事件。</source>
        <target state="needs-translation">监听一个以 `before-` 开头的事件。</target>
      </trans-unit>
      <trans-unit id="47970">
        <source>ctx.middleware(middleware, prepend?)</source>
        <target state="needs-translation">ctx.middleware(middleware, prepend?)</target>
      </trans-unit>
      <trans-unit id="47972">
        <source>**middleware:** [`Middleware`](../../guide/basic/middleware.md#使用中间件) 要注册的中间件</source>
        <target state="needs-translation">**middleware:** [`Middleware`](../../guide/basic/middleware.md#使用中间件) 要注册的中间件</target>
      </trans-unit>
      <trans-unit id="47974">
        <source>**prepend:** `boolean` 是否前置</source>
        <target state="needs-translation">**prepend:** `boolean` 是否前置</target>
      </trans-unit>
      <trans-unit id="47976">
        <source>返回值: `() =&gt; boolean` 取消这个中间件</source>
        <target state="needs-translation">返回值: `() =&gt; boolean` 取消这个中间件</target>
      </trans-unit>
      <trans-unit id="47978">
        <source>当前上下文中注册一个中间件。</source>
        <target state="needs-translation">当前上下文中注册一个中间件。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1478" original="/[koishijs.docs] main/zh-CN/api/service/filter.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="47980">
        <source>过滤器 (Filter)</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">過濾器 (Filter)</target>
      </trans-unit>
      <trans-unit id="47982">
        <source>有关这里的 API，请参见 [开发 &gt; 模块化 &gt; 过滤器](../../guide/plugin/filter.md)。</source>
        <target state="needs-translation">有关这里的 API，请参见 [开发 &gt; 模块化 &gt; 过滤器](../../guide/plugin/filter.md)。</target>
      </trans-unit>
      <trans-unit id="47984">
        <source>实例属性</source>
        <target state="needs-translation">实例属性</target>
      </trans-unit>
      <trans-unit id="47986">
        <source>ctx.filter</source>
        <target state="needs-translation">ctx.filter</target>
      </trans-unit>
      <trans-unit id="47988">
        <source>类型: `(session: Session) =&gt; boolean`</source>
        <target state="needs-translation">类型: `(session: Session) =&gt; boolean`</target>
      </trans-unit>
      <trans-unit id="47990">
        <source>当前上下文绑定的会话过滤器。</source>
        <target state="needs-translation">当前上下文绑定的会话过滤器。</target>
      </trans-unit>
      <trans-unit id="47992">
        <source>实例方法</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">實體方法</target>
      </trans-unit>
      <trans-unit id="47994">
        <source>ctx.any()</source>
        <target state="needs-translation">ctx.any()</target>
      </trans-unit>
      <trans-unit id="47996">
        <source>返回值: `Context` 新的上下文</source>
        <target state="needs-translation">返回值: `Context` 新的上下文</target>
      </trans-unit>
      <trans-unit id="47998">
        <source>选取上下文全集。</source>
        <target state="needs-translation">选取上下文全集。</target>
      </trans-unit>
      <trans-unit id="48000">
        <source>这个方法与 `ctx.root` 的区别在于，后者不受插件管理器控制，容易产生内存泄漏。</source>
        <target state="needs-translation">这个方法与 `ctx.root` 的区别在于，后者不受插件管理器控制，容易产生内存泄漏。</target>
      </trans-unit>
      <trans-unit id="48002">
        <source>因此我们建议，除非你已经为你的插件声明了副作用，你应当尽量使用这个方法。</source>
        <target state="needs-translation">因此我们建议，除非你已经为你的插件声明了副作用，你应当尽量使用这个方法。</target>
      </trans-unit>
      <trans-unit id="48004">
        <source>参见 [](../../guide/plugin/lifecycle.md#dispose-事件)。</source>
        <target state="needs-translation">参见 [](../../guide/plugin/lifecycle.md#dispose-事件)。</target>
      </trans-unit>
      <trans-unit id="48006">
        <source>ctx.never()</source>
        <target state="needs-translation">ctx.never()</target>
      </trans-unit>
      <trans-unit id="48008">
        <source>返回值: `Context` 新的上下文</source>
        <target state="needs-translation">返回值: `Context` 新的上下文</target>
      </trans-unit>
      <trans-unit id="48010">
        <source>选取上下文空集。</source>
        <target state="needs-translation">选取上下文空集。</target>
      </trans-unit>
      <trans-unit id="48012">
        <source>ctx.self(...values)</source>
        <target state="needs-translation">ctx.self(...values)</target>
      </trans-unit>
      <trans-unit id="48014">
        <source>ctx.user(...values)</source>
        <target state="needs-translation">ctx.user(...values)</target>
      </trans-unit>
      <trans-unit id="48016">
        <source>ctx.guild(...values)</source>
        <target state="needs-translation">ctx.guild(...values)</target>
      </trans-unit>
      <trans-unit id="48018">
        <source>ctx.channel(...values)</source>
        <target state="needs-translation">ctx.channel(...values)</target>
      </trans-unit>
      <trans-unit id="48020">
        <source>ctx.platform(...values)</source>
        <target state="needs-translation">ctx.platform(...values)</target>
      </trans-unit>
      <trans-unit id="48022">
        <source>**values:** `string[]` 允许的机器人 / 用户 / 群组 / 频道 / 平台名称构成的数组</source>
        <target state="needs-translation">**values:** `string[]` 允许的机器人 / 用户 / 群组 / 频道 / 平台名称构成的数组</target>
      </trans-unit>
      <trans-unit id="48024">
        <source>返回值: `Context` 新的上下文</source>
        <target state="needs-translation">返回值: `Context` 新的上下文</target>
      </trans-unit>
      <trans-unit id="48026">
        <source>选取当前上下文的子集，限定机器人 / 用户 / 群组 / 频道 / 平台名称为所给定的值。</source>
        <target state="needs-translation">选取当前上下文的子集，限定机器人 / 用户 / 群组 / 频道 / 平台名称为所给定的值。</target>
      </trans-unit>
      <trans-unit id="48028">
        <source>ctx.union(filter)</source>
        <target state="needs-translation">ctx.union(filter)</target>
      </trans-unit>
      <trans-unit id="48030">
        <source>**context:** `Context | ((session: Session) =&gt; boolean)` 另一个上下文或者过滤器函数</source>
        <target state="needs-translation">**context:** `Context | ((session: Session) =&gt; boolean)` 另一个上下文或者过滤器函数</target>
      </trans-unit>
      <trans-unit id="48032">
        <source>返回值: `Context` 新的上下文</source>
        <target state="needs-translation">返回值: `Context` 新的上下文</target>
      </trans-unit>
      <trans-unit id="48034">
        <source>给出当前上下文和其他上下文的并集。</source>
        <target state="needs-translation">给出当前上下文和其他上下文的并集。</target>
      </trans-unit>
      <trans-unit id="48036">
        <source>ctx.intersect(filter)</source>
        <target state="needs-translation">ctx.intersect(filter)</target>
      </trans-unit>
      <trans-unit id="48038">
        <source>**context:** `Context | ((session: Session) =&gt; boolean)` 另一个上下文或者过滤器函数</source>
        <target state="needs-translation">**context:** `Context | ((session: Session) =&gt; boolean)` 另一个上下文或者过滤器函数</target>
      </trans-unit>
      <trans-unit id="48040">
        <source>返回值: `Context` 新的上下文</source>
        <target state="needs-translation">返回值: `Context` 新的上下文</target>
      </trans-unit>
      <trans-unit id="48042">
        <source>给出当前上下文和其他上下文的交集。</source>
        <target state="needs-translation">给出当前上下文和其他上下文的交集。</target>
      </trans-unit>
      <trans-unit id="48044">
        <source>ctx.exclude(filter)</source>
        <target state="needs-translation">ctx.exclude(filter)</target>
      </trans-unit>
      <trans-unit id="48046">
        <source>**context:** `Context | ((session: Session) =&gt; boolean)` 另一个上下文或者过滤器函数</source>
        <target state="needs-translation">**context:** `Context | ((session: Session) =&gt; boolean)` 另一个上下文或者过滤器函数</target>
      </trans-unit>
      <trans-unit id="48048">
        <source>返回值: `Context` 新的上下文</source>
        <target state="needs-translation">返回值: `Context` 新的上下文</target>
      </trans-unit>
      <trans-unit id="48050">
        <source>给出当前上下文和其他上下文的差集。</source>
        <target state="needs-translation">给出当前上下文和其他上下文的差集。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1480" original="/[koishijs.docs] main/zh-CN/api/service/http.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="48052">
        <source>网络请求 (HTTP)</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">網路請求 (HTTP)</target>
      </trans-unit>
      <trans-unit id="65316">
        <source>参见 [`@koishijs/plugin-http`](../../plugins/develop/http.md) 插件文档。</source>
        <target state="needs-translation">参见 [`@koishijs/plugin-http`](../../plugins/develop/http.md) 插件文档。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1482" original="/[koishijs.docs] main/zh-CN/api/service/i18n.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="48114">
        <source>国际化 (I18n)</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">國際化 (I18n)</target>
      </trans-unit>
      <trans-unit id="48116">
        <source>参见：[开发 &gt; 国际化](../../guide/i18n/index.md)</source>
        <target state="needs-translation">参见：[开发 &gt; 国际化](../../guide/i18n/index.md)</target>
      </trans-unit>
      <trans-unit id="48118">
        <source>实例方法</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">實體方法</target>
      </trans-unit>
      <trans-unit id="48120">
        <source>ctx.i18n.define(locale, dict)</source>
        <target state="needs-translation">ctx.i18n.define(locale, dict)</target>
      </trans-unit>
      <trans-unit id="48122">
        <source>**locale:** `string` 语言代码</source>
        <target state="needs-translation">**locale:** `string` 语言代码</target>
      </trans-unit>
      <trans-unit id="48124">
        <source>**dict:** `Dict` 本地化文本</source>
        <target state="needs-translation">**dict:** `Dict` 本地化文本</target>
      </trans-unit>
      <trans-unit id="48126">
        <source>定义本地化文本。</source>
        <target state="needs-translation">定义本地化文本。</target>
      </trans-unit>
      <trans-unit id="48128">
        <source>通常的用法是将本地化文本写在单独的文件中，然后使用 `require` 引入。</source>
        <target state="needs-translation">通常的用法是将本地化文本写在单独的文件中，然后使用 `require` 引入。</target>
      </trans-unit>
      <trans-unit id="48130">
        <source>ctx.i18n.define('zh-CN', require('./locales/zh-CN'))</source>
        <target state="needs-translation">ctx.i18n.define('zh-CN', require('./locales/zh-CN'))</target>
      </trans-unit>
      <trans-unit id="48132">
        <source>ctx.i18n.find(path, actual, options?)</source>
        <target state="needs-translation">ctx.i18n.find(path, actual, options?)</target>
      </trans-unit>
      <trans-unit id="48134">
        <source>**path:** `string` 路径模式</source>
        <target state="needs-translation">**path:** `string` 路径模式</target>
      </trans-unit>
      <trans-unit id="48136">
        <source>**actual:** `string` 要搜索的文本</source>
        <target state="needs-translation">**actual:** `string` 要搜索的文本</target>
      </trans-unit>
      <trans-unit id="48138">
        <source>**options.minSimilarity:** `number` 最小相似度，默认值为 `ctx.root.config.minSimilarity`</source>
        <target state="needs-translation">**options.minSimilarity:** `number` 最小相似度，默认值为 `ctx.root.config.minSimilarity`</target>
      </trans-unit>
      <trans-unit id="48140">
        <source>返回值: `FindResult[]`</source>
        <target state="needs-translation">返回值: `FindResult[]`</target>
      </trans-unit>
      <trans-unit id="48142">
        <source>export interface FindResult {
  locale: string
  data: Dict
  similarity: number
}</source>
        <target state="needs-translation">export interface FindResult {
  locale: string
  data: Dict
  similarity: number
}</target>
      </trans-unit>
      <trans-unit id="48144">
        <source>从本地化文本的特定路径中反向搜索一段文本。</source>
        <target state="needs-translation">从本地化文本的特定路径中反向搜索一段文本。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1484" original="/[koishijs.docs] main/zh-CN/api/service/loader.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="48146">
        <source>加载器 (Loader) &lt;badge type=&quot;warning&quot;&gt;实验性&lt;/badge&gt;</source>
        <target state="needs-translation">加载器 (Loader) &lt;badge type=&quot;warning&quot;&gt;实验性&lt;/badge&gt;</target>
      </trans-unit>
      <trans-unit id="48148">
        <source>这是一个实验性 API，未来可能会发生变化。</source>
        <target state="needs-translation">这是一个实验性 API，未来可能会发生变化。</target>
      </trans-unit>
      <trans-unit id="48150">
        <source>此服务仅在 CLI (启动器 / 模板项目) 环境下可用，[作为依赖调用](../../manual/starter/direct.md) 的 Koishi 将不具备此服务。</source>
        <target state="needs-translation">此服务仅在 CLI (启动器 / 模板项目) 环境下可用，[作为依赖调用](../../manual/starter/direct.md) 的 Koishi 将不具备此服务。</target>
      </trans-unit>
      <trans-unit id="48152">
        <source>Loader 服务可用于管理 Koishi 实例加载的插件。</source>
        <target state="needs-translation">Loader 服务可用于管理 Koishi 实例加载的插件。</target>
      </trans-unit>
      <trans-unit id="48154">
        <source>通常情况下你不需要手动调用此服务，除非你在开发 [config](../../plugins/console/config.md) 或者 [HMR](../../plugins/develop/hmr.md) 这样的底层插件。</source>
        <target state="needs-translation">通常情况下你不需要手动调用此服务，除非你在开发 [config](../../plugins/console/config.md) 或者 [HMR](../../plugins/develop/hmr.md) 这样的底层插件。</target>
      </trans-unit>
      <trans-unit id="48156">
        <source>实例属性</source>
        <target state="needs-translation">实例属性</target>
      </trans-unit>
      <trans-unit id="48158">
        <source>ctx.loader.envData</source>
        <target state="needs-translation">ctx.loader.envData</target>
      </trans-unit>
      <trans-unit id="48160">
        <source>类型: `object`</source>
        <target state="needs-translation">类型: `object`</target>
      </trans-unit>
      <trans-unit id="48162">
        <source>一个特殊的对象，可以在环境变量中存储少量数据。</source>
        <target state="needs-translation">一个特殊的对象，可以在环境变量中存储少量数据。</target>
      </trans-unit>
      <trans-unit id="48164">
        <source>可以配合 `ctx.loader.fullReload()` 方法使用，以便在重启后恢复数据。</source>
        <target state="needs-translation">可以配合 `ctx.loader.fullReload()` 方法使用，以便在重启后恢复数据。</target>
      </trans-unit>
      <trans-unit id="48166">
        <source>如果你的插件需要持久化大量数据，请使用本地文件或者数据库。</source>
        <target state="needs-translation">如果你的插件需要持久化大量数据，请使用本地文件或者数据库。</target>
      </trans-unit>
      <trans-unit id="48168">
        <source>实例方法</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">實體方法</target>
      </trans-unit>
      <trans-unit id="48170">
        <source>ctx.loader.keyFor(plugin)</source>
        <target state="needs-translation">ctx.loader.keyFor(plugin)</target>
      </trans-unit>
      <trans-unit id="48172">
        <source>**plugin:** `any` 插件导出</source>
        <target state="needs-translation">**plugin:** `any` 插件导出</target>
      </trans-unit>
      <trans-unit id="48174">
        <source>返回值: `string`</source>
        <target state="needs-translation">返回值: `string`</target>
      </trans-unit>
      <trans-unit id="48176">
        <source>获取插件的短名称。</source>
        <target state="needs-translation">获取插件的短名称。</target>
      </trans-unit>
      <trans-unit id="48178">
        <source>ctx.loader.replace(plugin1, plugin2)</source>
        <target state="needs-translation">ctx.loader.replace(plugin1, plugin2)</target>
      </trans-unit>
      <trans-unit id="48180">
        <source>**plugin1:** `any` 插件导出</source>
        <target state="needs-translation">**plugin1:** `any` 插件导出</target>
      </trans-unit>
      <trans-unit id="48182">
        <source>**plugin2:** `any` 插件导出</source>
        <target state="needs-translation">**plugin2:** `any` 插件导出</target>
      </trans-unit>
      <trans-unit id="48184">
        <source>替换插件导出。</source>
        <target state="needs-translation">替换插件导出。</target>
      </trans-unit>
      <trans-unit id="48186">
        <source>ctx.loader.resolve(name)</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">ctx.loader.resolve(name)</target>
      </trans-unit>
      <trans-unit id="48188">
        <source>**name:** `string` 插件的短名称</source>
        <target state="needs-translation">**name:** `string` 插件的短名称</target>
      </trans-unit>
      <trans-unit id="48190">
        <source>从短名称获取插件。</source>
        <target state="needs-translation">从短名称获取插件。</target>
      </trans-unit>
      <trans-unit id="48192">
        <source>ctx.loader.reload(parent, key, config)</source>
        <target state="needs-translation">ctx.loader.reload(parent, key, config)</target>
      </trans-unit>
      <trans-unit id="48194">
        <source>**parent:** `Context` 父级上下文</source>
        <target state="needs-translation">**parent:** `Context` 父级上下文</target>
      </trans-unit>
      <trans-unit id="48196">
        <source>**key:** `string` 插件的短名称</source>
        <target state="needs-translation">**key:** `string` 插件的短名称</target>
      </trans-unit>
      <trans-unit id="48198">
        <source>**config:** `object` 插件配置</source>
        <target state="needs-translation">**config:** `object` 插件配置</target>
      </trans-unit>
      <trans-unit id="48200">
        <source>返回值: `Promise&lt;ForkScope&gt;`</source>
        <target state="needs-translation">返回值: `Promise&lt;ForkScope&gt;`</target>
      </trans-unit>
      <trans-unit id="48202">
        <source>启用一个插件。</source>
        <target state="needs-translation">启用一个插件。</target>
      </trans-unit>
      <trans-unit id="48204">
        <source>这里的 `key` 对应于 [配置文件](../../guide/develop/config.md) 中的键名。</source>
        <target state="needs-translation">这里的 `key` 对应于 [配置文件](../../guide/develop/config.md) 中的键名。</target>
      </trans-unit>
      <trans-unit id="48206">
        <source>如果 `key` 已经存在于父级上下文中，则会重载该插件实例；如果 `key` 不存在于父级上下文中，则会创建一个新的插件实例。</source>
        <target state="needs-translation">如果 `key` 已经存在于父级上下文中，则会重载该插件实例；如果 `key` 不存在于父级上下文中，则会创建一个新的插件实例。</target>
      </trans-unit>
      <trans-unit id="48208">
        <source>ctx.loader.unload(parent, key)</source>
        <target state="needs-translation">ctx.loader.unload(parent, key)</target>
      </trans-unit>
      <trans-unit id="48210">
        <source>**parent:** `Context` 父级上下文</source>
        <target state="needs-translation">**parent:** `Context` 父级上下文</target>
      </trans-unit>
      <trans-unit id="48212">
        <source>**key:** `string` 插件的短名称</source>
        <target state="needs-translation">**key:** `string` 插件的短名称</target>
      </trans-unit>
      <trans-unit id="48214">
        <source>停用一个插件。</source>
        <target state="needs-translation">停用一个插件。</target>
      </trans-unit>
      <trans-unit id="48216">
        <source>这里的 `key` 对应于 [配置文件](../../guide/develop/config.md) 中的键名。</source>
        <target state="needs-translation">这里的 `key` 对应于 [配置文件](../../guide/develop/config.md) 中的键名。</target>
      </trans-unit>
      <trans-unit id="48218">
        <source>ctx.loader.fullReload()</source>
        <target state="needs-translation">ctx.loader.fullReload()</target>
      </trans-unit>
      <trans-unit id="48220">
        <source>重启被守护的 Koishi 进程。</source>
        <target state="needs-translation">重启被守护的 Koishi 进程。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1486" original="/[koishijs.docs] main/zh-CN/api/service/permissions.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="48222">
        <source>权限管理 (Permissions) &lt;badge type=&quot;warning&quot;&gt;实验性&lt;/badge&gt;</source>
        <target state="needs-translation">权限管理 (Permissions) &lt;badge type=&quot;warning&quot;&gt;实验性&lt;/badge&gt;</target>
      </trans-unit>
      <trans-unit id="48224">
        <source>权限管理目前属于实验性功能，API 可能在后续版本中发生变化。</source>
        <target state="needs-translation">权限管理目前属于实验性功能，API 可能在后续版本中发生变化。</target>
      </trans-unit>
      <trans-unit id="48226">
        <source>参见：[开发 &gt; 数据库 &gt; 权限管理](../../guide/database/permission.md)</source>
        <target state="needs-translation">参见：[开发 &gt; 数据库 &gt; 权限管理](../../guide/database/permission.md)</target>
      </trans-unit>
      <trans-unit id="48228">
        <source>实例方法</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">實體方法</target>
      </trans-unit>
      <trans-unit id="64606">
        <source>ctx.permissions.define(name, options)</source>
        <target state="needs-translation">ctx.permissions.define(name, options)</target>
      </trans-unit>
      <trans-unit id="64608">
        <source>**name:** `string` 权限名称</source>
        <target state="needs-translation">**name:** `string` 权限名称</target>
      </trans-unit>
      <trans-unit id="64610">
        <source>**options.check:** `(session: Partial&lt;Session&gt;) =&gt; boolean` 权限检查函数</source>
        <target state="needs-translation">**options.check:** `(session: Partial&lt;Session&gt;) =&gt; boolean` 权限检查函数</target>
      </trans-unit>
      <trans-unit id="48232">
        <source>ctx.permissions.inherit(a, b)</source>
        <target state="needs-translation">ctx.permissions.inherit(a, b)</target>
      </trans-unit>
      <trans-unit id="48234">
        <source>ctx.permissions.depend(a, b)</source>
        <target state="needs-translation">ctx.permissions.depend(a, b)</target>
      </trans-unit>
      <trans-unit id="48236">
        <source>ctx.permissions.provide(name, callback)</source>
        <target state="needs-translation">ctx.permissions.provide(name, callback)</target>
      </trans-unit>
      <trans-unit id="48238">
        <source>ctx.permissions.test(list, session)</source>
        <target state="needs-translation">ctx.permissions.test(list, session)</target>
      </trans-unit>
    </body>
  </file>
  <file id="1488" original="/[koishijs.docs] main/zh-CN/api/service/registry.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="48240">
        <source>插件系统 (Registry)</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">外掛系統 (Registry)</target>
      </trans-unit>
      <trans-unit id="48242">
        <source>实例属性</source>
        <target state="needs-translation">实例属性</target>
      </trans-unit>
      <trans-unit id="48244">
        <source>以下实例属性都是只读的。</source>
        <target state="needs-translation">以下实例属性都是只读的。</target>
      </trans-unit>
      <trans-unit id="48246">
        <source>ctx.scope</source>
        <target state="needs-translation">ctx.scope</target>
      </trans-unit>
      <trans-unit id="48248">
        <source>类型: `State`</source>
        <target state="needs-translation">类型: `State`</target>
      </trans-unit>
      <trans-unit id="48250">
        <source>当前上下文关联的 State 对象。</source>
        <target state="needs-translation">当前上下文关联的 State 对象。</target>
      </trans-unit>
      <trans-unit id="48252">
        <source>实例方法</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">實體方法</target>
      </trans-unit>
      <trans-unit id="48254">
        <source>ctx.plugin(plugin, options?)</source>
        <target state="needs-translation">ctx.plugin(plugin, options?)</target>
      </trans-unit>
      <trans-unit id="48256">
        <source>**plugin:** `Plugin` 要安装的插件</source>
        <target state="needs-translation">**plugin:** `Plugin` 要安装的插件</target>
      </trans-unit>
      <trans-unit id="48258">
        <source>**options:** `any` 要传入插件的参数</source>
        <target state="needs-translation">**options:** `any` 要传入插件的参数</target>
      </trans-unit>
      <trans-unit id="48260">
        <source>返回值: `Fork`</source>
        <target state="needs-translation">返回值: `Fork`</target>
      </trans-unit>
      <trans-unit id="48262">
        <source>当前上下文中安装一个插件。</source>
        <target state="needs-translation">当前上下文中安装一个插件。</target>
      </trans-unit>
      <trans-unit id="48264">
        <source>参见 [认识插件](../../guide/plugin/)。</source>
        <target state="needs-translation">参见 [认识插件](../../guide/plugin/)。</target>
      </trans-unit>
      <trans-unit id="63624">
        <source>ctx.inject(deps, plugin)</source>
        <target state="needs-translation">ctx.inject(deps, plugin)</target>
      </trans-unit>
      <trans-unit id="48268">
        <source>**deps:** `string[]` 依赖的服务列表</source>
        <target state="needs-translation">**deps:** `string[]` 依赖的服务列表</target>
      </trans-unit>
      <trans-unit id="48270">
        <source>**plugin:** `Plugin` 要安装的插件</source>
        <target state="needs-translation">**plugin:** `Plugin` 要安装的插件</target>
      </trans-unit>
      <trans-unit id="48272">
        <source>返回值: `this`</source>
        <target state="needs-translation">返回值: `this`</target>
      </trans-unit>
      <trans-unit id="48274">
        <source>安装一个存在服务依赖的插件。</source>
        <target state="needs-translation">安装一个存在服务依赖的插件。</target>
      </trans-unit>
      <trans-unit id="48276">
        <source>参见 [服务的依赖关系](../../guide/plugin/service.md#服务的依赖关系)。</source>
        <target state="needs-translation">参见 [服务的依赖关系](../../guide/plugin/service.md#服务的依赖关系)。</target>
      </trans-unit>
      <trans-unit id="48278">
        <source>ctx.start()</source>
        <target state="needs-translation">ctx.start()</target>
      </trans-unit>
      <trans-unit id="48280">
        <source>返回值: `Promise&lt;void&gt;`</source>
        <target state="needs-translation">返回值: `Promise&lt;void&gt;`</target>
      </trans-unit>
      <trans-unit id="48282">
        <source>启动此应用。</source>
        <target state="needs-translation">启动此应用。</target>
      </trans-unit>
      <trans-unit id="48284">
        <source>ctx.stop()</source>
        <target state="needs-translation">ctx.stop()</target>
      </trans-unit>
      <trans-unit id="48286">
        <source>返回值: `Promise&lt;void&gt;`</source>
        <target state="needs-translation">返回值: `Promise&lt;void&gt;`</target>
      </trans-unit>
      <trans-unit id="48288">
        <source>停止此应用。</source>
        <target state="needs-translation">停止此应用。</target>
      </trans-unit>
      <trans-unit id="48290">
        <source>类：State</source>
        <target state="needs-translation">类：State</target>
      </trans-unit>
      <trans-unit id="48292">
        <source>类：Runtime</source>
        <target state="needs-translation">类：Runtime</target>
      </trans-unit>
    </body>
  </file>
  <file id="1490" original="/[koishijs.docs] main/zh-CN/plugins/develop/server.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="63640">
        <source>@koishijs/plugin-server</source>
        <target state="needs-translation">@koishijs/plugin-server</target>
      </trans-unit>
      <trans-unit id="65390">
        <source>@koishijs/plugin-server 提供了 `ctx.server` 基础服务，它是一个基于 [Koa Router](https://github.com/koajs/router) 的简单路由系统，用于管理 Koishi 应用收到的网络请求。</source>
        <target state="needs-translation">@koishijs/plugin-server 提供了 `ctx.server` 基础服务，它是一个基于 [Koa Router](https://github.com/koajs/router) 的简单路由系统，用于管理 Koishi 应用收到的网络请求。</target>
      </trans-unit>
      <trans-unit id="48304">
        <source>除了 Koa Router 所支持的部分方法外，Router API 还提供了一些额外的功能，例如支持接受 WebSocket 连接等。</source>
        <target state="needs-translation">除了 Koa Router 所支持的部分方法外，Router API 还提供了一些额外的功能，例如支持接受 WebSocket 连接等。</target>
      </trans-unit>
      <trans-unit id="64320">
        <source>上下文 API</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">上下文 API</target>
      </trans-unit>
      <trans-unit id="48306">
        <source>Koa Router 的 API 并不是副作用安全的。</source>
        <target state="needs-translation">Koa Router 的 API 并不是副作用安全的。</target>
      </trans-unit>
      <trans-unit id="48308">
        <source>我们对本页列出的方法进行了特殊处理，使其在插件卸载时自动删除路由。</source>
        <target state="needs-translation">我们对本页列出的方法进行了特殊处理，使其在插件卸载时自动删除路由。</target>
      </trans-unit>
      <trans-unit id="48310">
        <source>但使用其他方法会导致你的插件无法被正常卸载。</source>
        <target state="needs-translation">但使用其他方法会导致你的插件无法被正常卸载。</target>
      </trans-unit>
      <trans-unit id="48312">
        <source>未来可能会不基于 Koa Router 重新实现路由系统。</source>
        <target state="needs-translation">未来可能会不基于 Koa Router 重新实现路由系统。</target>
      </trans-unit>
      <trans-unit id="48314">
        <source>:::</source>
        <target state="needs-translation">:::</target>
      </trans-unit>
      <trans-unit id="63516">
        <source>ctx.server[method](path, middleware)</source>
        <target state="needs-translation">ctx.server[method](path, middleware)</target>
      </trans-unit>
      <trans-unit id="48320">
        <source>**method:** 可以是 `get`, `post`, `put`, `delete`, `patch` 或 `all` (仅能是小写)</source>
        <target state="needs-translation">**method:** 可以是 `get`, `post`, `put`, `delete`, `patch` 或 `all` (仅能是小写)</target>
      </trans-unit>
      <trans-unit id="48322">
        <source>**path:** `string | RegExp | (string | RegExp)[]` 路径</source>
        <target state="needs-translation">**path:** `string | RegExp | (string | RegExp)[]` 路径</target>
      </trans-unit>
      <trans-unit id="48324">
        <source>**middleware:** `Function` Koa 中间件</source>
        <target state="needs-translation">**middleware:** `Function` Koa 中间件</target>
      </trans-unit>
      <trans-unit id="48326">
        <source>处理特定路径上的网络请求。</source>
        <target state="needs-translation">处理特定路径上的网络请求。</target>
      </trans-unit>
      <trans-unit id="48328">
        <source>具体请参见 [这里](https://github.com/koajs/router/blob/master/API.md)。</source>
        <target state="needs-translation">具体请参见 [这里](https://github.com/koajs/router/blob/master/API.md)。</target>
      </trans-unit>
      <trans-unit id="63518">
        <source>ctx.server\.ws(path, handler)</source>
        <target state="needs-translation">ctx.server\.ws(path, handler)</target>
      </trans-unit>
      <trans-unit id="48332">
        <source>**path:** `string | RegExp | (string | RegExp)[]` 路径</source>
        <target state="needs-translation">**path:** `string | RegExp | (string | RegExp)[]` 路径</target>
      </trans-unit>
      <trans-unit id="48334">
        <source>**handler:** `WebSocketHandler` 处理函数，接受下列参数</source>
        <target state="needs-translation">**handler:** `WebSocketHandler` 处理函数，接受下列参数</target>
      </trans-unit>
      <trans-unit id="48336">
        <source>**socket:** [`WebSocket`](https://github.com/websockets/ws/blob/master/doc/ws.md#class-websocket) WebSocket 连接</source>
        <target state="needs-translation">**socket:** [`WebSocket`](https://github.com/websockets/ws/blob/master/doc/ws.md#class-websocket) WebSocket 连接</target>
      </trans-unit>
      <trans-unit id="48338">
        <source>**request:** [`IncomingMessage`](https://nodejs.org/api/http.html#class-httpincomingmessage) 网络请求</source>
        <target state="needs-translation">**request:** [`IncomingMessage`](https://nodejs.org/api/http.html#class-httpincomingmessage) 网络请求</target>
      </trans-unit>
      <trans-unit id="48340">
        <source>在给定的路径上支持 WebSocket 连接。</source>
        <target state="needs-translation">在给定的路径上支持 WebSocket 连接。</target>
      </trans-unit>
      <trans-unit id="63642">
        <source>配置项</source>
        <target state="needs-translation">配置项</target>
      </trans-unit>
      <trans-unit id="63644">
        <source>config.host</source>
        <target state="needs-translation">config.host</target>
      </trans-unit>
      <trans-unit id="63646">
        <source>类型：`string`</source>
        <target state="needs-translation">类型：`string`</target>
      </trans-unit>
      <trans-unit id="63648">
        <source>默认值：`'127.0.0.1'`</source>
        <target state="needs-translation">默认值：`'127.0.0.1'`</target>
      </trans-unit>
      <trans-unit id="63650">
        <source>服务器监听的 IP 地址。</source>
        <target state="needs-translation">服务器监听的 IP 地址。</target>
      </trans-unit>
      <trans-unit id="63652">
        <source>如果将此设置为 `0.0.0.0` 将监听所有地址，包括局域网和公网地址。</source>
        <target state="needs-translation">如果将此设置为 `0.0.0.0` 将监听所有地址，包括局域网和公网地址。</target>
      </trans-unit>
      <trans-unit id="63654">
        <source>config.port</source>
        <target state="needs-translation">config.port</target>
      </trans-unit>
      <trans-unit id="63656">
        <source>类型：`number`</source>
        <target state="needs-translation">类型：`number`</target>
      </trans-unit>
      <trans-unit id="63658">
        <source>必需选项</source>
        <target state="needs-translation">必需选项</target>
      </trans-unit>
      <trans-unit id="63660">
        <source>要监听的初始端口号。</source>
        <target state="needs-translation">要监听的初始端口号。</target>
      </trans-unit>
      <trans-unit id="63662">
        <source>Koishi 建议使用 `5140` 作为默认端口。</source>
        <target state="needs-translation">Koishi 建议使用 `5140` 作为默认端口。</target>
      </trans-unit>
      <trans-unit id="63664">
        <source>config.maxPort</source>
        <target state="needs-translation">config.maxPort</target>
      </trans-unit>
      <trans-unit id="63666">
        <source>类型：`number`</source>
        <target state="needs-translation">类型：`number`</target>
      </trans-unit>
      <trans-unit id="63668">
        <source>默认值：[`config.port`](#config-port)</source>
        <target state="needs-translation">默认值：[`config.port`](#config-port)</target>
      </trans-unit>
      <trans-unit id="63670">
        <source>允许监听的最大端口号。</source>
        <target state="needs-translation">允许监听的最大端口号。</target>
      </trans-unit>
      <trans-unit id="63672">
        <source>插件启动时，如果设定的端口号被占用，插件会尝试自动切换到下一个端口，直到找到一个可用的端口，或是超出 `maxPort` 的限制。</source>
        <target state="needs-translation">插件启动时，如果设定的端口号被占用，插件会尝试自动切换到下一个端口，直到找到一个可用的端口，或是超出 `maxPort` 的限制。</target>
      </trans-unit>
      <trans-unit id="63674">
        <source>config.selfUrl</source>
        <target state="needs-translation">config.selfUrl</target>
      </trans-unit>
      <trans-unit id="63676">
        <source>类型：`string`</source>
        <target state="needs-translation">类型：`string`</target>
      </trans-unit>
      <trans-unit id="63678">
        <source>Koishi 服务暴露在公网的地址。</source>
        <target state="translated">Koishi 服務暴露在公網的地址。</target>
      </trans-unit>
      <trans-unit id="63680">
        <source>部分插件 (例如 [adapter-telegram](../adapter/telegram.md) 或是 [assets-local](https://assets.koishi.chat/plugins/local.html)) 需要用到。</source>
        <target state="needs-translation">部分插件 (例如 [adapter-telegram](../adapter/telegram.md) 或是 [assets-local](https://assets.koishi.chat/plugins/local.html)) 需要用到。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1492" original="/[koishijs.docs] main/zh-CN/api/utils/logger.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="48342">
        <source>输出日志 (Logger)</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">輸出日誌 (Logger)</target>
      </trans-unit>
      <trans-unit id="48344">
        <source>本节中的 API 来自 [reggol](https://github.com/shigma/reggol)，并由 Koishi 重新导出。</source>
        <target state="needs-translation">本节中的 API 来自 [reggol](https://github.com/shigma/reggol)，并由 Koishi 重新导出。</target>
      </trans-unit>
      <trans-unit id="48346">
        <source>输出等级</source>
        <target state="needs-translation">输出等级</target>
      </trans-unit>
      <trans-unit id="48348">
        <source>**输出等级**控制了所有输出到命令行的内容的重要性。</source>
        <target state="needs-translation">**输出等级**控制了所有输出到命令行的内容的重要性。</target>
      </trans-unit>
      <trans-unit id="48350">
        <source>在 Koishi 内置的输出日志中，所有信息被分为了 3 种不同的等级：</source>
        <target state="needs-translation">在 Koishi 内置的输出日志中，所有信息被分为了 3 种不同的等级：</target>
      </trans-unit>
      <trans-unit id="48352">
        <source>error, success</source>
        <target state="needs-translation">error, success</target>
      </trans-unit>
      <trans-unit id="48354">
        <source>warning, info</source>
        <target state="needs-translation">warning, info</target>
      </trans-unit>
      <trans-unit id="48356">
        <source>debug</source>
        <target state="needs-translation">debug</target>
      </trans-unit>
      <trans-unit id="48358">
        <source>当设置输出等级为 x 时，Koishi 只会输出重要性小于等于 x 的信息。</source>
        <target state="needs-translation">当设置输出等级为 x 时，Koishi 只会输出重要性小于等于 x 的信息。</target>
      </trans-unit>
      <trans-unit id="48360">
        <source>当输出等级被设置为 0 时，Koishi 将不产生任何输出；而当输出等级被设置为 3 时，Koishi 产生的全部信息都会被显示在屏幕上 (你还可以通过配置 [`levels`](#options-logger-levels) 的方式影响具体插件的输出)。</source>
        <target state="needs-translation">当输出等级被设置为 0 时，Koishi 将不产生任何输出；而当输出等级被设置为 3 时，Koishi 产生的全部信息都会被显示在屏幕上 (你还可以通过配置 [`levels`](#options-logger-levels) 的方式影响具体插件的输出)。</target>
      </trans-unit>
      <trans-unit id="48362">
        <source>默认情况下 Koishi 的输出等级为 2。</source>
        <target state="needs-translation">默认情况下 Koishi 的输出等级为 2。</target>
      </trans-unit>
      <trans-unit id="48364">
        <source>你可以在配置文件中修改这个值。</source>
        <target state="needs-translation">你可以在配置文件中修改这个值。</target>
      </trans-unit>
      <trans-unit id="48366">
        <source>配置文件选项</source>
        <target state="needs-translation">配置文件选项</target>
      </trans-unit>
      <trans-unit id="48368">
        <source>options.logger.levels</source>
        <target state="needs-translation">options.logger.levels</target>
      </trans-unit>
      <trans-unit id="48370">
        <source>类型：`number | object`</source>
        <target state="needs-translation">类型：`number | object`</target>
      </trans-unit>
      <trans-unit id="48372">
        <source>默认值：`{}`</source>
        <target state="needs-translation">默认值：`{}`</target>
      </trans-unit>
      <trans-unit id="48374">
        <source>设置输出等级。</source>
        <target state="needs-translation">设置输出等级。</target>
      </trans-unit>
      <trans-unit id="48376">
        <source>例如：</source>
        <target state="needs-translation">例如：</target>
      </trans-unit>
      <trans-unit id="48378">
        <source>logger:
  levels:
    # 将 app 命名空间的输出等级设置为 3
    app: 3</source>
        <target state="needs-translation">logger:
  levels:
    # 将 app 命名空间的输出等级设置为 3
    app: 3</target>
      </trans-unit>
      <trans-unit id="48380">
        <source>options.logger.showTime</source>
        <target state="needs-translation">options.logger.showTime</target>
      </trans-unit>
      <trans-unit id="48382">
        <source>类型：`string | boolean`</source>
        <target state="needs-translation">类型：`string | boolean`</target>
      </trans-unit>
      <trans-unit id="48384">
        <source>默认值：`'yyyy/MM/dd hh:mm:ss'`</source>
        <target state="needs-translation">默认值：`'yyyy/MM/dd hh:mm:ss'`</target>
      </trans-unit>
      <trans-unit id="48386">
        <source>输出日志所使用的时间格式。</source>
        <target state="needs-translation">输出日志所使用的时间格式。</target>
      </trans-unit>
      <trans-unit id="48388">
        <source>它的基本语法如下：</source>
        <target state="needs-translation">它的基本语法如下：</target>
      </trans-unit>
      <trans-unit id="48390">
        <source>yyyy: 四位数年份</source>
        <target state="needs-translation">yyyy: 四位数年份</target>
      </trans-unit>
      <trans-unit id="48392">
        <source>yy: 年份末两位</source>
        <target state="needs-translation">yy: 年份末两位</target>
      </trans-unit>
      <trans-unit id="48394">
        <source>MM: 两位数月份</source>
        <target state="needs-translation">MM: 两位数月份</target>
      </trans-unit>
      <trans-unit id="48396">
        <source>dd: 两位数日期</source>
        <target state="needs-translation">dd: 两位数日期</target>
      </trans-unit>
      <trans-unit id="48398">
        <source>hh: 两位数小时</source>
        <target state="needs-translation">hh: 两位数小时</target>
      </trans-unit>
      <trans-unit id="48400">
        <source>mm: 两位数分钟</source>
        <target state="needs-translation">mm: 两位数分钟</target>
      </trans-unit>
      <trans-unit id="48402">
        <source>ss: 两位数秒</source>
        <target state="needs-translation">ss: 两位数秒</target>
      </trans-unit>
      <trans-unit id="48404">
        <source>SSS: 三位数毫秒</source>
        <target state="needs-translation">SSS: 三位数毫秒</target>
      </trans-unit>
      <trans-unit id="48406">
        <source>如设置为 `false`，则不会输出时间。</source>
        <target state="needs-translation">如设置为 `false`，则不会输出时间。</target>
      </trans-unit>
      <trans-unit id="48408">
        <source>如设置为 `true`，将视为上述默认值。</source>
        <target state="needs-translation">如设置为 `true`，将视为上述默认值。</target>
      </trans-unit>
      <trans-unit id="48410">
        <source>options.logger.showDiff</source>
        <target state="needs-translation">options.logger.showDiff</target>
      </trans-unit>
      <trans-unit id="48412">
        <source>类型：`boolean`</source>
        <target state="needs-translation">类型：`boolean`</target>
      </trans-unit>
      <trans-unit id="48414">
        <source>默认值：`!config.logger.showTime`</source>
        <target state="needs-translation">默认值：`!config.logger.showTime`</target>
      </trans-unit>
      <trans-unit id="48416">
        <source>是否标注相邻两次输出的时间差。</source>
        <target state="needs-translation">是否标注相邻两次输出的时间差。</target>
      </trans-unit>
      <trans-unit id="48418">
        <source>类：Logger</source>
        <target state="needs-translation">类：Logger</target>
      </trans-unit>
      <trans-unit id="48420">
        <source>通常使用 `Logger` 类来进行日志输出。</source>
        <target state="needs-translation">通常使用 `Logger` 类来进行日志输出。</target>
      </trans-unit>
      <trans-unit id="48422">
        <source>new Logger(name)</source>
        <target state="needs-translation">new Logger(name)</target>
      </trans-unit>
      <trans-unit id="48424">
        <source>创建一个新的 Logger 实例。</source>
        <target state="needs-translation">创建一个新的 Logger 实例。</target>
      </trans-unit>
      <trans-unit id="48426">
        <source>`name` 参数用于指定命名空间，它将作为输出的前缀，并且可以被过滤。</source>
        <target state="needs-translation">`name` 参数用于指定命名空间，它将作为输出的前缀，并且可以被过滤。</target>
      </trans-unit>
      <trans-unit id="48428">
        <source>logger.error(format, ...param)</source>
        <target state="needs-translation">logger.error(format, ...param)</target>
      </trans-unit>
      <trans-unit id="48430">
        <source>logger.success(format, ...param)</source>
        <target state="needs-translation">logger.success(format, ...param)</target>
      </trans-unit>
      <trans-unit id="48432">
        <source>logger.warn(format, ...param)</source>
        <target state="needs-translation">logger.warn(format, ...param)</target>
      </trans-unit>
      <trans-unit id="48434">
        <source>logger.info(format, ...param)</source>
        <target state="needs-translation">logger.info(format, ...param)</target>
      </trans-unit>
      <trans-unit id="48436">
        <source>logger.debug(format, ...param)</source>
        <target state="needs-translation">logger.debug(format, ...param)</target>
      </trans-unit>
      <trans-unit id="48438">
        <source>**format:** `any` 格式化字符串</source>
        <target state="needs-translation">**format:** `any` 格式化字符串</target>
      </trans-unit>
      <trans-unit id="48440">
        <source>**param:** `any[]` 要输出的内容</source>
        <target state="needs-translation">**param:** `any[]` 要输出的内容</target>
      </trans-unit>
      <trans-unit id="48442">
        <source>以不同的输出等级输出日志。</source>
        <target state="needs-translation">以不同的输出等级输出日志。</target>
      </trans-unit>
      <trans-unit id="48444">
        <source>参数的使用方法与 [`console.log`](https://developer.mozilla.org/zh-CN/docs/Web/API/Console/log) 相同。</source>
        <target state="needs-translation">参数的使用方法与 [`console.log`](https://developer.mozilla.org/zh-CN/docs/Web/API/Console/log) 相同。</target>
      </trans-unit>
      <trans-unit id="48446">
        <source>运行时产生的错误 (如请求失败，数据库访问失败等) 都属于 warning，只有在创建阶段和连接阶段抛出的错误才会通过 error 输出 (参见 [生命周期](../../guide/plugin/lifecycle.md))。</source>
        <target state="needs-translation">运行时产生的错误 (如请求失败，数据库访问失败等) 都属于 warning，只有在创建阶段和连接阶段抛出的错误才会通过 error 输出 (参见 [生命周期](../../guide/plugin/lifecycle.md))。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1494" original="/[koishijs.docs] main/zh-CN/api/utils/misc.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="48448">
        <source>其他工具 (Misc)</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">其他工具 (Misc)</target>
      </trans-unit>
      <trans-unit id="48450">
        <source>本节中的 API 来自 [cosmokit](https://github.com/shigma/cosmokit)，并由 Koishi 重新导出。</source>
        <target state="needs-translation">本节中的 API 来自 [cosmokit](https://github.com/shigma/cosmokit)，并由 Koishi 重新导出。</target>
      </trans-unit>
      <trans-unit id="48452">
        <source>这一节介绍了其他未被归类的内置工具函数。</source>
        <target state="needs-translation">这一节介绍了其他未被归类的内置工具函数。</target>
      </trans-unit>
      <trans-unit id="65052">
        <source>字符串操作 {#string}</source>
        <target state="needs-translation">字符串操作 {#string}</target>
      </trans-unit>
      <trans-unit id="48456">
        <source>capitalize(source)</source>
        <target state="needs-translation">capitalize(source)</target>
      </trans-unit>
      <trans-unit id="48458">
        <source>**source:** `string` 源文本</source>
        <target state="needs-translation">**source:** `string` 源文本</target>
      </trans-unit>
      <trans-unit id="48460">
        <source>返回值: `string` 首字母大写后的文本</source>
        <target state="needs-translation">返回值: `string` 首字母大写后的文本</target>
      </trans-unit>
      <trans-unit id="48462">
        <source>首字母大写。</source>
        <target state="needs-translation">首字母大写。</target>
      </trans-unit>
      <trans-unit id="48464">
        <source>camelCase(source)</source>
        <target state="needs-translation">camelCase(source)</target>
      </trans-unit>
      <trans-unit id="48466">
        <source>**source:** `any` 要转换的内容</source>
        <target state="needs-translation">**source:** `any` 要转换的内容</target>
      </trans-unit>
      <trans-unit id="48468">
        <source>返回值: `any` 转换结果</source>
        <target state="needs-translation">返回值: `any` 转换结果</target>
      </trans-unit>
      <trans-unit id="48470">
        <source>如果输入的是字符串，则将字符串转换成 camelCase；如果是数组或对象，则递归地将对象中的每个（可枚举）的键转换成 camelCase；其他情况不受影响。</source>
        <target state="needs-translation">如果输入的是字符串，则将字符串转换成 camelCase；如果是数组或对象，则递归地将对象中的每个（可枚举）的键转换成 camelCase；其他情况不受影响。</target>
      </trans-unit>
      <trans-unit id="48472">
        <source>paramCase(source)</source>
        <target state="needs-translation">paramCase(source)</target>
      </trans-unit>
      <trans-unit id="48474">
        <source>如果输入的是字符串，则将字符串转换成 param-case；如果是数组或对象，则递归地将对象中的每个（可枚举）的键转换成 param-case；其他情况不受影响。</source>
        <target state="needs-translation">如果输入的是字符串，则将字符串转换成 param-case；如果是数组或对象，则递归地将对象中的每个（可枚举）的键转换成 param-case；其他情况不受影响。</target>
      </trans-unit>
      <trans-unit id="48476">
        <source>**source:** `any` 要转换的内容</source>
        <target state="needs-translation">**source:** `any` 要转换的内容</target>
      </trans-unit>
      <trans-unit id="48478">
        <source>返回值: `any` 转换结果</source>
        <target state="needs-translation">返回值: `any` 转换结果</target>
      </trans-unit>
      <trans-unit id="48480">
        <source>snakeCase(source)</source>
        <target state="needs-translation">snakeCase(source)</target>
      </trans-unit>
      <trans-unit id="48482">
        <source>**source:** `any` 要转换的内容</source>
        <target state="needs-translation">**source:** `any` 要转换的内容</target>
      </trans-unit>
      <trans-unit id="48484">
        <source>返回值: `any` 转换结果</source>
        <target state="needs-translation">返回值: `any` 转换结果</target>
      </trans-unit>
      <trans-unit id="48486">
        <source>如果输入的是字符串，则将字符串转换成 snake_case；如果是数组或对象，则递归地将对象中的每个（可枚举）的键转换成 snake_case；其他情况不受影响。</source>
        <target state="needs-translation">如果输入的是字符串，则将字符串转换成 snake_case；如果是数组或对象，则递归地将对象中的每个（可枚举）的键转换成 snake_case；其他情况不受影响。</target>
      </trans-unit>
      <trans-unit id="65054">
        <source>集合操作 {#set}</source>
        <target state="needs-translation">集合操作 {#set}</target>
      </trans-unit>
      <trans-unit id="48490">
        <source>contain(array1, array2)</source>
        <target state="needs-translation">contain(array1, array2)</target>
      </trans-unit>
      <trans-unit id="48492">
        <source>**array1:** `readonly any[]` 数组 1</source>
        <target state="needs-translation">**array1:** `readonly any[]` 数组 1</target>
      </trans-unit>
      <trans-unit id="48494">
        <source>**array2:** `readonly any[]` 数组 2</source>
        <target state="needs-translation">**array2:** `readonly any[]` 数组 2</target>
      </trans-unit>
      <trans-unit id="48496">
        <source>返回值: `boolean` 数组 1 是否包含数组 2 的全部元素</source>
        <target state="needs-translation">返回值: `boolean` 数组 1 是否包含数组 2 的全部元素</target>
      </trans-unit>
      <trans-unit id="48498">
        <source>检测集合的包含关系。</source>
        <target state="needs-translation">检测集合的包含关系。</target>
      </trans-unit>
      <trans-unit id="48500">
        <source>intersection(array1, array2)</source>
        <target state="needs-translation">intersection(array1, array2)</target>
      </trans-unit>
      <trans-unit id="48502">
        <source>**array1:** `readonly any[]` 数组 1</source>
        <target state="needs-translation">**array1:** `readonly any[]` 数组 1</target>
      </trans-unit>
      <trans-unit id="48504">
        <source>**array2:** `readonly any[]` 数组 2</source>
        <target state="needs-translation">**array2:** `readonly any[]` 数组 2</target>
      </trans-unit>
      <trans-unit id="48506">
        <source>返回值: `any[]` 两个数组的交集</source>
        <target state="needs-translation">返回值: `any[]` 两个数组的交集</target>
      </trans-unit>
      <trans-unit id="48508">
        <source>求两个集合的交集。</source>
        <target state="needs-translation">求两个集合的交集。</target>
      </trans-unit>
      <trans-unit id="48510">
        <source>difference(array1, array2)</source>
        <target state="needs-translation">difference(array1, array2)</target>
      </trans-unit>
      <trans-unit id="48512">
        <source>**array1:** `readonly any[]` 数组 1</source>
        <target state="needs-translation">**array1:** `readonly any[]` 数组 1</target>
      </trans-unit>
      <trans-unit id="48514">
        <source>**array2:** `readonly any[]` 数组 2</source>
        <target state="needs-translation">**array2:** `readonly any[]` 数组 2</target>
      </trans-unit>
      <trans-unit id="48516">
        <source>返回值: `any[]` 两个数组的差集</source>
        <target state="needs-translation">返回值: `any[]` 两个数组的差集</target>
      </trans-unit>
      <trans-unit id="48518">
        <source>求两个集合的差集。</source>
        <target state="needs-translation">求两个集合的差集。</target>
      </trans-unit>
      <trans-unit id="48520">
        <source>union(array1, array2)</source>
        <target state="needs-translation">union(array1, array2)</target>
      </trans-unit>
      <trans-unit id="48522">
        <source>**array1:** `readonly any[]` 数组 1</source>
        <target state="needs-translation">**array1:** `readonly any[]` 数组 1</target>
      </trans-unit>
      <trans-unit id="48524">
        <source>**array2:** `readonly any[]` 数组 2</source>
        <target state="needs-translation">**array2:** `readonly any[]` 数组 2</target>
      </trans-unit>
      <trans-unit id="48526">
        <source>返回值: `any[]` 两个数组的并集</source>
        <target state="needs-translation">返回值: `any[]` 两个数组的并集</target>
      </trans-unit>
      <trans-unit id="48528">
        <source>求两个集合的并集。</source>
        <target state="needs-translation">求两个集合的并集。</target>
      </trans-unit>
      <trans-unit id="65056">
        <source>对象操作 {#object}</source>
        <target state="needs-translation">对象操作 {#object}</target>
      </trans-unit>
      <trans-unit id="48532">
        <source>is(type, value)</source>
        <target state="needs-translation">is(type, value)</target>
      </trans-unit>
      <trans-unit id="48534">
        <source>**type:** `string` 类型，例如 `Date`</source>
        <target state="needs-translation">**type:** `string` 类型，例如 `Date`</target>
      </trans-unit>
      <trans-unit id="48536">
        <source>**value:** `any` 要判断的值</source>
        <target state="needs-translation">**value:** `any` 要判断的值</target>
      </trans-unit>
      <trans-unit id="48538">
        <source>返回值: `boolean`</source>
        <target state="needs-translation">返回值: `boolean`</target>
      </trans-unit>
      <trans-unit id="48540">
        <source>判断一个值是否为指定的对象实例。</source>
        <target state="needs-translation">判断一个值是否为指定的对象实例。</target>
      </trans-unit>
      <trans-unit id="48542">
        <source>clone(source)</source>
        <target state="needs-translation">clone(source)</target>
      </trans-unit>
      <trans-unit id="48544">
        <source>**source:** `T` 要克隆的值</source>
        <target state="needs-translation">**source:** `T` 要克隆的值</target>
      </trans-unit>
      <trans-unit id="48546">
        <source>返回值: `T`</source>
        <target state="needs-translation">返回值: `T`</target>
      </trans-unit>
      <trans-unit id="48548">
        <source>深度克隆一个值。</source>
        <target state="needs-translation">深度克隆一个值。</target>
      </trans-unit>
      <trans-unit id="48550">
        <source>deepEqual(a, b, strict?)</source>
        <target state="needs-translation">deepEqual(a, b, strict?)</target>
      </trans-unit>
      <trans-unit id="48552">
        <source>**a:** `any` 要比较的值</source>
        <target state="needs-translation">**a:** `any` 要比较的值</target>
      </trans-unit>
      <trans-unit id="48554">
        <source>**b:** `any` 要比较的值</source>
        <target state="needs-translation">**b:** `any` 要比较的值</target>
      </trans-unit>
      <trans-unit id="48556">
        <source>**strict:** `boolean` 使用严格模式 (默认为 `false`)</source>
        <target state="needs-translation">**strict:** `boolean` 使用严格模式 (默认为 `false`)</target>
      </trans-unit>
      <trans-unit id="48558">
        <source>返回值: `boolean`</source>
        <target state="needs-translation">返回值: `boolean`</target>
      </trans-unit>
      <trans-unit id="48560">
        <source>深度比较两个值是否相等。</source>
        <target state="needs-translation">深度比较两个值是否相等。</target>
      </trans-unit>
      <trans-unit id="48562">
        <source>当 `strict` 设置为 `false` 时，`null` 和 `undefined` 视为相等。</source>
        <target state="needs-translation">当 `strict` 设置为 `false` 时，`null` 和 `undefined` 视为相等。</target>
      </trans-unit>
      <trans-unit id="48564">
        <source>pick(source, keys, forced?)</source>
        <target state="needs-translation">pick(source, keys, forced?)</target>
      </trans-unit>
      <trans-unit id="48566">
        <source>**source:** `O` 源对象</source>
        <target state="needs-translation">**source:** `O` 源对象</target>
      </trans-unit>
      <trans-unit id="48568">
        <source>**keys:** `Iterable&lt;K&gt;` 要提取的键</source>
        <target state="needs-translation">**keys:** `Iterable&lt;K&gt;` 要提取的键</target>
      </trans-unit>
      <trans-unit id="48570">
        <source>**forced:** `boolean` 强制提取 (默认为 `false`)</source>
        <target state="needs-translation">**forced:** `boolean` 强制提取 (默认为 `false`)</target>
      </trans-unit>
      <trans-unit id="48572">
        <source>返回值: `Pick&lt;O, K&gt;`</source>
        <target state="needs-translation">返回值: `Pick&lt;O, K&gt;`</target>
      </trans-unit>
      <trans-unit id="48574">
        <source>从一个对象中提取指定的键。</source>
        <target state="needs-translation">从一个对象中提取指定的键。</target>
      </trans-unit>
      <trans-unit id="48576">
        <source>当 `forced` 设置为 `false` 时，属性不存在或者为 `undefined` 的情况下不会被提取。</source>
        <target state="needs-translation">当 `forced` 设置为 `false` 时，属性不存在或者为 `undefined` 的情况下不会被提取。</target>
      </trans-unit>
      <trans-unit id="48578">
        <source>omit(source, keys)</source>
        <target state="needs-translation">omit(source, keys)</target>
      </trans-unit>
      <trans-unit id="48580">
        <source>**source:** `O` 源对象</source>
        <target state="needs-translation">**source:** `O` 源对象</target>
      </trans-unit>
      <trans-unit id="48582">
        <source>**keys:** `Iterable&lt;K&gt;` 要排除的键</source>
        <target state="needs-translation">**keys:** `Iterable&lt;K&gt;` 要排除的键</target>
      </trans-unit>
      <trans-unit id="48584">
        <source>返回值: `Omit&lt;O, K&gt;`</source>
        <target state="needs-translation">返回值: `Omit&lt;O, K&gt;`</target>
      </trans-unit>
      <trans-unit id="48586">
        <source>从一个对象中排除指定的键。</source>
        <target state="needs-translation">从一个对象中排除指定的键。</target>
      </trans-unit>
      <trans-unit id="48588">
        <source>mapValues(source, callback)</source>
        <target state="needs-translation">mapValues(source, callback)</target>
      </trans-unit>
      <trans-unit id="48590">
        <source>**source:** `Record&lt;K, V&gt;` 源对象</source>
        <target state="needs-translation">**source:** `Record&lt;K, V&gt;` 源对象</target>
      </trans-unit>
      <trans-unit id="48592">
        <source>**callback:** `(value: V, key: K) =&gt; T` 回调函数</source>
        <target state="needs-translation">**callback:** `(value: V, key: K) =&gt; T` 回调函数</target>
      </trans-unit>
      <trans-unit id="48594">
        <source>返回值: `Record&lt;K, T&gt;`</source>
        <target state="needs-translation">返回值: `Record&lt;K, T&gt;`</target>
      </trans-unit>
      <trans-unit id="48596">
        <source>将对象的每个值进行映射，返回新的对象。</source>
        <target state="needs-translation">将对象的每个值进行映射，返回新的对象。</target>
      </trans-unit>
      <trans-unit id="48598">
        <source>filterKeys(source, callback)</source>
        <target state="needs-translation">filterKeys(source, callback)</target>
      </trans-unit>
      <trans-unit id="48600">
        <source>**source:** `Record&lt;K, V&gt;` 源对象</source>
        <target state="needs-translation">**source:** `Record&lt;K, V&gt;` 源对象</target>
      </trans-unit>
      <trans-unit id="48602">
        <source>**callback:** `(key: K, value: V) =&gt; key is T` 回调函数</source>
        <target state="needs-translation">**callback:** `(key: K, value: V) =&gt; key is T` 回调函数</target>
      </trans-unit>
      <trans-unit id="48604">
        <source>返回值: `Record&lt;T, V&gt;`</source>
        <target state="needs-translation">返回值: `Record&lt;T, V&gt;`</target>
      </trans-unit>
      <trans-unit id="48606">
        <source>将对象的每个键进行过滤，返回新的对象。</source>
        <target state="needs-translation">将对象的每个键进行过滤，返回新的对象。</target>
      </trans-unit>
      <trans-unit id="65058">
        <source>二进制数据 {#binary}</source>
        <target state="needs-translation">二进制数据 {#binary}</target>
      </trans-unit>
      <trans-unit id="65060">
        <source>Binary.is(source)</source>
        <target state="needs-translation">Binary.is(source)</target>
      </trans-unit>
      <trans-unit id="65062">
        <source>**source:** `any` 要判断的值</source>
        <target state="needs-translation">**source:** `any` 要判断的值</target>
      </trans-unit>
      <trans-unit id="65064">
        <source>返回值: `boolean`</source>
        <target state="needs-translation">返回值: `boolean`</target>
      </trans-unit>
      <trans-unit id="65066">
        <source>判断一个值是否为 `ArrayBufferLike`。</source>
        <target state="needs-translation">判断一个值是否为 `ArrayBufferLike`。</target>
      </trans-unit>
      <trans-unit id="65068">
        <source>Binary.isSource(source)</source>
        <target state="needs-translation">Binary.isSource(source)</target>
      </trans-unit>
      <trans-unit id="65070">
        <source>**source:** `any` 要判断的值</source>
        <target state="needs-translation">**source:** `any` 要判断的值</target>
      </trans-unit>
      <trans-unit id="65072">
        <source>返回值: `boolean`</source>
        <target state="needs-translation">返回值: `boolean`</target>
      </trans-unit>
      <trans-unit id="65074">
        <source>判断一个值是否为 `ArrayBufferLike` 或 `ArrayBufferView`。</source>
        <target state="needs-translation">判断一个值是否为 `ArrayBufferLike` 或 `ArrayBufferView`。</target>
      </trans-unit>
      <trans-unit id="65076">
        <source>Binary.fromSource(source)</source>
        <target state="needs-translation">Binary.fromSource(source)</target>
      </trans-unit>
      <trans-unit id="65078">
        <source>**source:** `ArrayBufferLike | ArrayBufferView` 要转换的值</source>
        <target state="needs-translation">**source:** `ArrayBufferLike | ArrayBufferView` 要转换的值</target>
      </trans-unit>
      <trans-unit id="65080">
        <source>返回值: `ArrayBufferLike`</source>
        <target state="needs-translation">返回值: `ArrayBufferLike`</target>
      </trans-unit>
      <trans-unit id="65082">
        <source>将可能的 `ArrayBufferView` 转换成 `ArrayBuffer`。</source>
        <target state="needs-translation">将可能的 `ArrayBufferView` 转换成 `ArrayBuffer`。</target>
      </trans-unit>
      <trans-unit id="65084">
        <source>Binary.toBase64(source)</source>
        <target state="needs-translation">Binary.toBase64(source)</target>
      </trans-unit>
      <trans-unit id="65086">
        <source>**source:** `ArrayBufferLike` 要转换的值</source>
        <target state="needs-translation">**source:** `ArrayBufferLike` 要转换的值</target>
      </trans-unit>
      <trans-unit id="65088">
        <source>返回值: `string`</source>
        <target state="needs-translation">返回值: `string`</target>
      </trans-unit>
      <trans-unit id="65090">
        <source>将二进制数据转换成 base64 字符串。</source>
        <target state="needs-translation">将二进制数据转换成 base64 字符串。</target>
      </trans-unit>
      <trans-unit id="65092">
        <source>Binary.fromBase64(source)</source>
        <target state="needs-translation">Binary.fromBase64(source)</target>
      </trans-unit>
      <trans-unit id="65094">
        <source>**source:** `string` 要转换的值</source>
        <target state="needs-translation">**source:** `string` 要转换的值</target>
      </trans-unit>
      <trans-unit id="65096">
        <source>返回值: `ArrayBuffer`</source>
        <target state="needs-translation">返回值: `ArrayBuffer`</target>
      </trans-unit>
      <trans-unit id="65098">
        <source>将 base64 字符串转换成二进制数据。</source>
        <target state="needs-translation">将 base64 字符串转换成二进制数据。</target>
      </trans-unit>
      <trans-unit id="65100">
        <source>Binary.toHex(source)</source>
        <target state="needs-translation">Binary.toHex(source)</target>
      </trans-unit>
      <trans-unit id="65102">
        <source>**source:** `ArrayBufferLike` 要转换的值</source>
        <target state="needs-translation">**source:** `ArrayBufferLike` 要转换的值</target>
      </trans-unit>
      <trans-unit id="65104">
        <source>返回值: `string`</source>
        <target state="needs-translation">返回值: `string`</target>
      </trans-unit>
      <trans-unit id="65106">
        <source>将二进制数据转换成十六进制字符串。</source>
        <target state="needs-translation">将二进制数据转换成十六进制字符串。</target>
      </trans-unit>
      <trans-unit id="65108">
        <source>Binary.fromHex(source)</source>
        <target state="needs-translation">Binary.fromHex(source)</target>
      </trans-unit>
      <trans-unit id="65110">
        <source>**source:** `string` 要转换的值</source>
        <target state="needs-translation">**source:** `string` 要转换的值</target>
      </trans-unit>
      <trans-unit id="65112">
        <source>返回值: `ArrayBuffer`</source>
        <target state="needs-translation">返回值: `ArrayBuffer`</target>
      </trans-unit>
      <trans-unit id="65114">
        <source>将十六进制字符串转换成二进制数据。</source>
        <target state="needs-translation">将十六进制字符串转换成二进制数据。</target>
      </trans-unit>
      <trans-unit id="65116">
        <source>时间与日期 {#time}</source>
        <target state="needs-translation">时间与日期 {#time}</target>
      </trans-unit>
      <trans-unit id="48610">
        <source>静态属性</source>
        <target state="needs-translation">静态属性</target>
      </trans-unit>
      <trans-unit id="48612">
        <source>Time.millisecond</source>
        <target state="needs-translation">Time.millisecond</target>
      </trans-unit>
      <trans-unit id="48614">
        <source>Time.second</source>
        <target state="needs-translation">Time.second</target>
      </trans-unit>
      <trans-unit id="48616">
        <source>Time.minute</source>
        <target state="needs-translation">Time.minute</target>
      </trans-unit>
      <trans-unit id="48618">
        <source>Time.hour</source>
        <target state="needs-translation">Time.hour</target>
      </trans-unit>
      <trans-unit id="48620">
        <source>Time.day</source>
        <target state="needs-translation">Time.day</target>
      </trans-unit>
      <trans-unit id="48622">
        <source>Time.week</source>
        <target state="needs-translation">Time.week</target>
      </trans-unit>
      <trans-unit id="48624">
        <source>Time.getDateNumber(date?)</source>
        <target state="needs-translation">Time.getDateNumber(date?)</target>
      </trans-unit>
      <trans-unit id="48626">
        <source>**date:** `Date` 日期对象，默认为 `new Date()`</source>
        <target state="needs-translation">**date:** `Date` 日期对象，默认为 `new Date()`</target>
      </trans-unit>
      <trans-unit id="48628">
        <source>返回值: `number` UNIX 时间开始后的天数</source>
        <target state="needs-translation">返回值: `number` UNIX 时间开始后的天数</target>
      </trans-unit>
      <trans-unit id="48630">
        <source>获取当前日期（从 UNIX 时间开始时计算）。</source>
        <target state="needs-translation">获取当前日期（从 UNIX 时间开始时计算）。</target>
      </trans-unit>
      <trans-unit id="48632">
        <source>Time.fromDateNumber(value)</source>
        <target state="needs-translation">Time.fromDateNumber(value)</target>
      </trans-unit>
      <trans-unit id="48634">
        <source>**value:** `number` UNIX 时间开始后的天数</source>
        <target state="needs-translation">**value:** `number` UNIX 时间开始后的天数</target>
      </trans-unit>
      <trans-unit id="48636">
        <source>返回值: `Date` 日期对象</source>
        <target state="needs-translation">返回值: `Date` 日期对象</target>
      </trans-unit>
      <trans-unit id="48638">
        <source>从 UNIX 时间开始后的天数计算日期对象。</source>
        <target state="needs-translation">从 UNIX 时间开始后的天数计算日期对象。</target>
      </trans-unit>
      <trans-unit id="48640">
        <source>Time.parseTime(source)</source>
        <target state="needs-translation">Time.parseTime(source)</target>
      </trans-unit>
      <trans-unit id="48642">
        <source>**source:** `string` 要解析的字符串</source>
        <target state="needs-translation">**source:** `string` 要解析的字符串</target>
      </trans-unit>
      <trans-unit id="48644">
        <source>将一个字符串解析成时间长度。</source>
        <target state="needs-translation">将一个字符串解析成时间长度。</target>
      </trans-unit>
      <trans-unit id="48646">
        <source>Time.parseDate(source)</source>
        <target state="needs-translation">Time.parseDate(source)</target>
      </trans-unit>
      <trans-unit id="48648">
        <source>**source:** `string` 要解析的字符串</source>
        <target state="needs-translation">**source:** `string` 要解析的字符串</target>
      </trans-unit>
      <trans-unit id="48650">
        <source>将一个字符串解析成 Date 对象。</source>
        <target state="needs-translation">将一个字符串解析成 Date 对象。</target>
      </trans-unit>
      <trans-unit id="48652">
        <source>Time.format(ms)</source>
        <target state="needs-translation">Time.format(ms)</target>
      </trans-unit>
      <trans-unit id="48654">
        <source>**ms:** `number` 毫秒数</source>
        <target state="needs-translation">**ms:** `number` 毫秒数</target>
      </trans-unit>
      <trans-unit id="48656">
        <source>其他工具函数</source>
        <target state="needs-translation">其他工具函数</target>
      </trans-unit>
      <trans-unit id="48658">
        <source>noop()</source>
        <target state="needs-translation">noop()</target>
      </trans-unit>
      <trans-unit id="48660">
        <source>返回值: `void`</source>
        <target state="needs-translation">返回值: `void`</target>
      </trans-unit>
      <trans-unit id="48662">
        <source>不进行任何操作（no operation）。</source>
        <target state="needs-translation">不进行任何操作（no operation）。</target>
      </trans-unit>
      <trans-unit id="48664">
        <source>sleep(ms?)</source>
        <target state="needs-translation">sleep(ms?)</target>
      </trans-unit>
      <trans-unit id="48666">
        <source>**ms:** `number` 要等待的毫秒数</source>
        <target state="needs-translation">**ms:** `number` 要等待的毫秒数</target>
      </trans-unit>
      <trans-unit id="48668">
        <source>返回值: `Promise&lt;void&gt;`</source>
        <target state="needs-translation">返回值: `Promise&lt;void&gt;`</target>
      </trans-unit>
      <trans-unit id="48670">
        <source>等待一段时间。</source>
        <target state="needs-translation">等待一段时间。</target>
      </trans-unit>
      <trans-unit id="48672">
        <source>isInteger(value)</source>
        <target state="needs-translation">isInteger(value)</target>
      </trans-unit>
      <trans-unit id="48674">
        <source>**value:** `any` 要判断的值</source>
        <target state="needs-translation">**value:** `any` 要判断的值</target>
      </trans-unit>
      <trans-unit id="48676">
        <source>返回值: `boolean` 是否为整数</source>
        <target state="needs-translation">返回值: `boolean` 是否为整数</target>
      </trans-unit>
      <trans-unit id="48678">
        <source>判断传入的值是否为整数。</source>
        <target state="needs-translation">判断传入的值是否为整数。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1496" original="/[koishijs.docs] main/zh-CN/api/utils/observer.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="48680">
        <source>观察者 (Observer)</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">觀察者 (Observer)</target>
      </trans-unit>
      <trans-unit id="48682">
        <source>observe(target, update?, label?)</source>
        <target state="needs-translation">observe(target, update?, label?)</target>
      </trans-unit>
      <trans-unit id="48684">
        <source>**target:** `T extends object` 要观测的对象</source>
        <target state="needs-translation">**target:** `T extends object` 要观测的对象</target>
      </trans-unit>
      <trans-unit id="48686">
        <source>**update:** `(diff: Partial&lt;T&gt;) =&gt; R` 更新回调函数</source>
        <target state="needs-translation">**update:** `(diff: Partial&lt;T&gt;) =&gt; R` 更新回调函数</target>
      </trans-unit>
      <trans-unit id="48688">
        <source>**label:** `string` 对象的标签，用于标识</source>
        <target state="needs-translation">**label:** `string` 对象的标签，用于标识</target>
      </trans-unit>
      <trans-unit id="48690">
        <source>返回值: `Observed&lt;T&gt;`</source>
        <target state="needs-translation">返回值: `Observed&lt;T&gt;`</target>
      </trans-unit>
      <trans-unit id="48692">
        <source>创建一个观察者对象。</source>
        <target state="needs-translation">创建一个观察者对象。</target>
      </trans-unit>
      <trans-unit id="48694">
        <source>目前只支持从普通对象创建（不支持 Array / Set / Map）。</source>
        <target state="needs-translation">目前只支持从普通对象创建（不支持 Array / Set / Map）。</target>
      </trans-unit>
      <trans-unit id="48696">
        <source>observed.$diff</source>
        <target state="needs-translation">observed.$diff</target>
      </trans-unit>
      <trans-unit id="48698">
        <source>观察者当前的对象变化。</source>
        <target state="needs-translation">观察者当前的对象变化。</target>
      </trans-unit>
      <trans-unit id="48700">
        <source>observed.$merge(source)</source>
        <target state="needs-translation">observed.$merge(source)</target>
      </trans-unit>
      <trans-unit id="48702">
        <source>**source:** `object` 要合并的对象</source>
        <target state="needs-translation">**source:** `object` 要合并的对象</target>
      </trans-unit>
      <trans-unit id="48704">
        <source>返回值: `this`</source>
        <target state="needs-translation">返回值: `this`</target>
      </trans-unit>
      <trans-unit id="48706">
        <source>将某些属性合并入当前观察者，不会触发 diff 更新。</source>
        <target state="needs-translation">将某些属性合并入当前观察者，不会触发 diff 更新。</target>
      </trans-unit>
      <trans-unit id="48708">
        <source>observed.$update()</source>
        <target state="needs-translation">observed.$update()</target>
      </trans-unit>
      <trans-unit id="48710">
        <source>返回值: `R`</source>
        <target state="needs-translation">返回值: `R`</target>
      </trans-unit>
      <trans-unit id="48712">
        <source>更新观察者对象，同时清除 diff。</source>
        <target state="needs-translation">更新观察者对象，同时清除 diff。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1498" original="/[koishijs.docs] main/zh-CN/api/utils/random.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="48714">
        <source>随机数操作</source>
        <target state="needs-translation">随机数操作</target>
      </trans-unit>
      <trans-unit id="48716">
        <source>本节中的 API 来自 [inaba](https://github.com/shigma/inaba)，并由 Koishi 重新导出。</source>
        <target state="needs-translation">本节中的 API 来自 [inaba](https://github.com/shigma/inaba)，并由 Koishi 重新导出。</target>
      </trans-unit>
      <trans-unit id="48718">
        <source>基本用法</source>
        <target state="needs-translation">基本用法</target>
      </trans-unit>
      <trans-unit id="48720">
        <source>import { Random } from 'koishi'

// 静态方法
Random.bool(0.8)                // 80% 的概率返回 true
Random.shuffle([5, 1, 4])       // 随机打乱数组

// 使用自定义的随机数生成器
const random = new Random(() =&gt; Math.random())
random.int(0, 10)               // 生成一个 [0, 10) 的随机整数
random.pick([1, 2, 3])          // 随机选取一个元素</source>
        <target state="needs-translation">import { Random } from 'koishi'

// 静态方法
Random.bool(0.8)                // 80% 的概率返回 true
Random.shuffle([5, 1, 4])       // 随机打乱数组

// 使用自定义的随机数生成器
const random = new Random(() =&gt; Math.random())
random.int(0, 10)               // 生成一个 [0, 10) 的随机整数
random.pick([1, 2, 3])          // 随机选取一个元素</target>
      </trans-unit>
      <trans-unit id="48722">
        <source>API</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">API</target>
      </trans-unit>
      <trans-unit id="48724">
        <source>new Random(callback)</source>
        <target state="needs-translation">new Random(callback)</target>
      </trans-unit>
      <trans-unit id="48726">
        <source>**callback:** `() =&gt; number` 一个返回 `[0, 1)` 的随机数的函数</source>
        <target state="needs-translation">**callback:** `() =&gt; number` 一个返回 `[0, 1)` 的随机数的函数</target>
      </trans-unit>
      <trans-unit id="48728">
        <source>**returns:** `Random` 实例</source>
        <target state="needs-translation">**returns:** `Random` 实例</target>
      </trans-unit>
      <trans-unit id="48730">
        <source>使用自定义的随机数生成器构造一个 `Random` 实例。</source>
        <target state="needs-translation">使用自定义的随机数生成器构造一个 `Random` 实例。</target>
      </trans-unit>
      <trans-unit id="48732">
        <source>Random.bool(probability)</source>
        <target state="needs-translation">Random.bool(probability)</target>
      </trans-unit>
      <trans-unit id="48734">
        <source>**probability:** `number`</source>
        <target state="needs-translation">**probability:** `number`</target>
      </trans-unit>
      <trans-unit id="48736">
        <source>**returns:** `boolean`</source>
        <target state="needs-translation">**returns:** `boolean`</target>
      </trans-unit>
      <trans-unit id="48738">
        <source>生成一个随机布尔值，有 `probability` 的概率为 1。</source>
        <target state="needs-translation">生成一个随机布尔值，有 `probability` 的概率为 1。</target>
      </trans-unit>
      <trans-unit id="48740">
        <source>Random.real(start?, end)</source>
        <target state="needs-translation">Random.real(start?, end)</target>
      </trans-unit>
      <trans-unit id="48742">
        <source>**start:** `number` 下界，默认为 0</source>
        <target state="needs-translation">**start:** `number` 下界，默认为 0</target>
      </trans-unit>
      <trans-unit id="48744">
        <source>**end:** `number` 上界</source>
        <target state="needs-translation">**end:** `number` 上界</target>
      </trans-unit>
      <trans-unit id="48746">
        <source>返回值: `number` 一个 `[start, end)` 之间的随机实数</source>
        <target state="needs-translation">返回值: `number` 一个 `[start, end)` 之间的随机实数</target>
      </trans-unit>
      <trans-unit id="48748">
        <source>生成一个随机实数。</source>
        <target state="needs-translation">生成一个随机实数。</target>
      </trans-unit>
      <trans-unit id="48750">
        <source>Random.int(start?, end)</source>
        <target state="needs-translation">Random.int(start?, end)</target>
      </trans-unit>
      <trans-unit id="48752">
        <source>**start:** `number` 下界，默认为 0</source>
        <target state="needs-translation">**start:** `number` 下界，默认为 0</target>
      </trans-unit>
      <trans-unit id="48754">
        <source>**end:** `number` 上界</source>
        <target state="needs-translation">**end:** `number` 上界</target>
      </trans-unit>
      <trans-unit id="48756">
        <source>返回值: `number` 一个 `[start, end)` 之间的随机整数</source>
        <target state="needs-translation">返回值: `number` 一个 `[start, end)` 之间的随机整数</target>
      </trans-unit>
      <trans-unit id="48758">
        <source>生成一个随机实数。</source>
        <target state="needs-translation">生成一个随机实数。</target>
      </trans-unit>
      <trans-unit id="48760">
        <source>Random.pick(array, count?)</source>
        <target state="needs-translation">Random.pick(array, count?)</target>
      </trans-unit>
      <trans-unit id="48762">
        <source>**array:** `readonly T[]` 数组</source>
        <target state="needs-translation">**array:** `readonly T[]` 数组</target>
      </trans-unit>
      <trans-unit id="48764">
        <source>**count:** `number` 元素个数</source>
        <target state="needs-translation">**count:** `number` 元素个数</target>
      </trans-unit>
      <trans-unit id="48766">
        <source>返回值: `T` 挑出的元素</source>
        <target state="needs-translation">返回值: `T` 挑出的元素</target>
      </trans-unit>
      <trans-unit id="48768">
        <source>从数组中随机挑出一个或多个元素，不改变原数组。</source>
        <target state="needs-translation">从数组中随机挑出一个或多个元素，不改变原数组。</target>
      </trans-unit>
      <trans-unit id="48770">
        <source>如果未传入 `count`，则返回一个元素；否则返回一个包含 `count` 个元素的数组。</source>
        <target state="needs-translation">如果未传入 `count`，则返回一个元素；否则返回一个包含 `count` 个元素的数组。</target>
      </trans-unit>
      <trans-unit id="48772">
        <source>Random.shuffle(array)</source>
        <target state="needs-translation">Random.shuffle(array)</target>
      </trans-unit>
      <trans-unit id="48774">
        <source>**array:** `T[]` 数组</source>
        <target state="needs-translation">**array:** `T[]` 数组</target>
      </trans-unit>
      <trans-unit id="48776">
        <source>返回值: `T[]` 新的数组</source>
        <target state="needs-translation">返回值: `T[]` 新的数组</target>
      </trans-unit>
      <trans-unit id="48778">
        <source>随机打乱数组中的元素，返回新的数组。</source>
        <target state="needs-translation">随机打乱数组中的元素，返回新的数组。</target>
      </trans-unit>
      <trans-unit id="48780">
        <source>此操作不修改原数组，相当于 `Random.pick(array, array.length)`。</source>
        <target state="needs-translation">此操作不修改原数组，相当于 `Random.pick(array, array.length)`。</target>
      </trans-unit>
      <trans-unit id="48782">
        <source>Random.weightedPick(weights)</source>
        <target state="needs-translation">Random.weightedPick(weights)</target>
      </trans-unit>
      <trans-unit id="48784">
        <source>**weights:** `Record&lt;T, number&gt;` 权重表</source>
        <target state="needs-translation">**weights:** `Record&lt;T, number&gt;` 权重表</target>
      </trans-unit>
      <trans-unit id="48786">
        <source>**returns:** `T` 挑出的元素</source>
        <target state="needs-translation">**returns:** `T` 挑出的元素</target>
      </trans-unit>
      <trans-unit id="48788">
        <source>按照权重随机挑出一个元素。</source>
        <target state="needs-translation">按照权重随机挑出一个元素。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1500" original="/[koishijs.docs] main/zh-CN/api/utils/schema.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="48790">
        <source>配置构型 (Schema)</source>
        <target state="needs-translation">配置构型 (Schema)</target>
      </trans-unit>
      <trans-unit id="48792">
        <source>静态方法</source>
        <target state="needs-translation">静态方法</target>
      </trans-unit>
      <trans-unit id="48794">
        <source>Schema.any()</source>
        <target state="needs-translation">Schema.any()</target>
      </trans-unit>
      <trans-unit id="48796">
        <source>声明一个任意类型的值。</source>
        <target state="needs-translation">声明一个任意类型的值。</target>
      </trans-unit>
      <trans-unit id="48798">
        <source>// @errors: 2769

const validate = Schema.any()

validate()                // undefined
validate(0)               // 0
validate({})              // {}</source>
        <target state="needs-translation">// @errors: 2769

const validate = Schema.any()

validate()                // undefined
validate(0)               // 0
validate({})              // {}</target>
      </trans-unit>
      <trans-unit id="48800">
        <source>Schema.never()</source>
        <target state="needs-translation">Schema.never()</target>
      </trans-unit>
      <trans-unit id="48802">
        <source>声明一个空值 (`null` 或 `undefined`)。</source>
        <target state="needs-translation">声明一个空值 (`null` 或 `undefined`)。</target>
      </trans-unit>
      <trans-unit id="48804">
        <source>// @errors: 2769

const validate = Schema.never()

validate()                // undefined
validate(0)               // TypeError
validate({})              // TypeError</source>
        <target state="needs-translation">// @errors: 2769

const validate = Schema.never()

validate()                // undefined
validate(0)               // TypeError
validate({})              // TypeError</target>
      </trans-unit>
      <trans-unit id="48806">
        <source>Schema.const(value)</source>
        <target state="needs-translation">Schema.const(value)</target>
      </trans-unit>
      <trans-unit id="48808">
        <source>声明一个常量值。</source>
        <target state="needs-translation">声明一个常量值。</target>
      </trans-unit>
      <trans-unit id="48810">
        <source>// @errors: 2769

const validate = Schema.const(10)

validate(10)              // 10
validate(0)               // TypeError</source>
        <target state="needs-translation">// @errors: 2769

const validate = Schema.const(10)

validate(10)              // 10
validate(0)               // TypeError</target>
      </trans-unit>
      <trans-unit id="48812">
        <source>Schema.number()</source>
        <target state="needs-translation">Schema.number()</target>
      </trans-unit>
      <trans-unit id="48814">
        <source>声明一个数值类型的值。</source>
        <target state="needs-translation">声明一个数值类型的值。</target>
      </trans-unit>
      <trans-unit id="48816">
        <source>// @errors: 2769

const validate = Schema.number()

validate()                // undefined
validate(1)               // 1
validate('')              // TypeError</source>
        <target state="needs-translation">// @errors: 2769

const validate = Schema.number()

validate()                // undefined
validate(1)               // 1
validate('')              // TypeError</target>
      </trans-unit>
      <trans-unit id="48818">
        <source>Schema.string()</source>
        <target state="needs-translation">Schema.string()</target>
      </trans-unit>
      <trans-unit id="48820">
        <source>声明一个字符串类型的值。</source>
        <target state="needs-translation">声明一个字符串类型的值。</target>
      </trans-unit>
      <trans-unit id="48822">
        <source>// @errors: 2769

const validate = Schema.string()

validate()                // undefined
validate(0)               // TypeError
validate('foo')           // 'foo'</source>
        <target state="needs-translation">// @errors: 2769

const validate = Schema.string()

validate()                // undefined
validate(0)               // TypeError
validate('foo')           // 'foo'</target>
      </trans-unit>
      <trans-unit id="48824">
        <source>Schema.boolean()</source>
        <target state="needs-translation">Schema.boolean()</target>
      </trans-unit>
      <trans-unit id="48826">
        <source>声明一个布尔类型的值。</source>
        <target state="needs-translation">声明一个布尔类型的值。</target>
      </trans-unit>
      <trans-unit id="48828">
        <source>// @errors: 2769

const validate = Schema.boolean()

validate()                // undefined
validate(0)               // TypeError
validate(true)            // true</source>
        <target state="needs-translation">// @errors: 2769

const validate = Schema.boolean()

validate()                // undefined
validate(0)               // TypeError
validate(true)            // true</target>
      </trans-unit>
      <trans-unit id="48830">
        <source>Schema.is(constructor)</source>
        <target state="needs-translation">Schema.is(constructor)</target>
      </trans-unit>
      <trans-unit id="48832">
        <source>声明一个给定类的实例。</source>
        <target state="needs-translation">声明一个给定类的实例。</target>
      </trans-unit>
      <trans-unit id="48834">
        <source>// @errors: 2769

const validate = Schema.is(RegExp)

validate()                // undefined
validate(/foo/)           // /foo/
validate('foo')           // TypeError</source>
        <target state="needs-translation">// @errors: 2769

const validate = Schema.is(RegExp)

validate()                // undefined
validate(/foo/)           // /foo/
validate('foo')           // TypeError</target>
      </trans-unit>
      <trans-unit id="48836">
        <source>Schema.array(inner)</source>
        <target state="needs-translation">Schema.array(inner)</target>
      </trans-unit>
      <trans-unit id="48838">
        <source>声明一个数组，其所有元素都匹配 `inner` 的类型。</source>
        <target state="needs-translation">声明一个数组，其所有元素都匹配 `inner` 的类型。</target>
      </trans-unit>
      <trans-unit id="48840">
        <source>// @errors: 2769

const validate = Schema.array(Schema.number())

validate()                      // []
validate(0)                     // TypeError
validate([0, 1])                // [0, 1]
validate([0, '1'])              // TypeError</source>
        <target state="needs-translation">// @errors: 2769

const validate = Schema.array(Schema.number())

validate()                      // []
validate(0)                     // TypeError
validate([0, 1])                // [0, 1]
validate([0, '1'])              // TypeError</target>
      </trans-unit>
      <trans-unit id="48842">
        <source>Schema.dict(inner)</source>
        <target state="needs-translation">Schema.dict(inner)</target>
      </trans-unit>
      <trans-unit id="48844">
        <source>声明一个对象 (键值对)，其所有值都匹配 `inner` 的类型。</source>
        <target state="needs-translation">声明一个对象 (键值对)，其所有值都匹配 `inner` 的类型。</target>
      </trans-unit>
      <trans-unit id="48846">
        <source>// @errors: 2769

const validate = Schema.dict(Schema.number())

validate()                      // {}
validate(0)                     // TypeError
validate({ a: 0, b: 1 })        // { a: 0, b: 1 }
validate({ a: 0, b: '1' })      // TypeError</source>
        <target state="needs-translation">// @errors: 2769

const validate = Schema.dict(Schema.number())

validate()                      // {}
validate(0)                     // TypeError
validate({ a: 0, b: 1 })        // { a: 0, b: 1 }
validate({ a: 0, b: '1' })      // TypeError</target>
      </trans-unit>
      <trans-unit id="48848">
        <source>Schema.tuple(list)</source>
        <target state="needs-translation">Schema.tuple(list)</target>
      </trans-unit>
      <trans-unit id="48850">
        <source>声明一个数组，其每个元素依次匹配 `list` 中对应元素的类型。</source>
        <target state="needs-translation">声明一个数组，其每个元素依次匹配 `list` 中对应元素的类型。</target>
      </trans-unit>
      <trans-unit id="48852">
        <source>// @errors: 2769

const validate = Schema.tuple([
  Schema.number(),
  Schema.string(),
])

validate()                      // []
validate([0])                   // { a: 0 }
validate([0, 1])                // TypeError
validate([0, '1'])              // [0, '1']</source>
        <target state="needs-translation">// @errors: 2769

const validate = Schema.tuple([
  Schema.number(),
  Schema.string(),
])

validate()                      // []
validate([0])                   // { a: 0 }
validate([0, 1])                // TypeError
validate([0, '1'])              // [0, '1']</target>
      </trans-unit>
      <trans-unit id="48854">
        <source>Schema.object(dict)</source>
        <target state="needs-translation">Schema.object(dict)</target>
      </trans-unit>
      <trans-unit id="48856">
        <source>声明一个对象，其每个属性都匹配 `dict` 中对应属性的类型。</source>
        <target state="needs-translation">声明一个对象，其每个属性都匹配 `dict` 中对应属性的类型。</target>
      </trans-unit>
      <trans-unit id="48858">
        <source>// @errors: 2769

const validate = Schema.object({
  a: Schema.number(),
  b: Schema.string(),
})

validate()                      // {}
validate({ a: 0 })              // { a: 0 }
validate({ a: 0, b: 1 })        // TypeError
validate({ a: 0, b: '1' })      // { a: 0, b: '1' }</source>
        <target state="needs-translation">// @errors: 2769

const validate = Schema.object({
  a: Schema.number(),
  b: Schema.string(),
})

validate()                      // {}
validate({ a: 0 })              // { a: 0 }
validate({ a: 0, b: 1 })        // TypeError
validate({ a: 0, b: '1' })      // { a: 0, b: '1' }</target>
      </trans-unit>
      <trans-unit id="48860">
        <source>Schema.union(list)</source>
        <target state="needs-translation">Schema.union(list)</target>
      </trans-unit>
      <trans-unit id="48862">
        <source>声明一个值，其类型可匹配 `list` 中任意一个类型。</source>
        <target state="needs-translation">声明一个值，其类型可匹配 `list` 中任意一个类型。</target>
      </trans-unit>
      <trans-unit id="48864">
        <source>// @errors: 2769

const validate = Schema.union([
  Schema.number(),
  Schema.string(),
])

validate()                      // undefined
validate(0)                     // 0
validate('1')                   // '1'
validate(true)                  // TypeError</source>
        <target state="needs-translation">// @errors: 2769

const validate = Schema.union([
  Schema.number(),
  Schema.string(),
])

validate()                      // undefined
validate(0)                     // 0
validate('1')                   // '1'
validate(true)                  // TypeError</target>
      </trans-unit>
      <trans-unit id="48866">
        <source>Schema.intersect(list)</source>
        <target state="needs-translation">Schema.intersect(list)</target>
      </trans-unit>
      <trans-unit id="48868">
        <source>声明一个值，其类型可匹配 `list` 中所有类型。</source>
        <target state="needs-translation">声明一个值，其类型可匹配 `list` 中所有类型。</target>
      </trans-unit>
      <trans-unit id="48870">
        <source>// @errors: 2769

const validate = Schema.intersect([
  Schema.object({ a: Schema.string().required() }),
  Schema.object({ b: Schema.number().default(0) }),
])

validate()                      // TypeError
validate({ a: '' })             // { a: '', b: 0 }
validate({ a: '', b: 1 })       // { a: '', b: 1 }
validate({ a: '', b: '2' })     // TypeError</source>
        <target state="needs-translation">// @errors: 2769

const validate = Schema.intersect([
  Schema.object({ a: Schema.string().required() }),
  Schema.object({ b: Schema.number().default(0) }),
])

validate()                      // TypeError
validate({ a: '' })             // { a: '', b: 0 }
validate({ a: '', b: 1 })       // { a: '', b: 1 }
validate({ a: '', b: '2' })     // TypeError</target>
      </trans-unit>
      <trans-unit id="48872">
        <source>Schema.transform(inner, callback)</source>
        <target state="needs-translation">Schema.transform(inner, callback)</target>
      </trans-unit>
      <trans-unit id="48874">
        <source>声明一个可匹配 `inner` 的值，并调用 `callback`，将返回值作为输出结果。</source>
        <target state="needs-translation">声明一个可匹配 `inner` 的值，并调用 `callback`，将返回值作为输出结果。</target>
      </trans-unit>
      <trans-unit id="48876">
        <source>// @errors: 2769

const validate = Schema.transform(Schema.number().default(0), n =&gt; n + 1)

validate()                      // 1
validate('0')                   // TypeError
validate(10)                    // 11</source>
        <target state="needs-translation">// @errors: 2769

const validate = Schema.transform(Schema.number().default(0), n =&gt; n + 1)

validate()                      // 1
validate('0')                   // TypeError
validate(10)                    // 11</target>
      </trans-unit>
      <trans-unit id="48878">
        <source>实例方法</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">實體方法</target>
      </trans-unit>
      <trans-unit id="48880">
        <source>请注意：`default` 和 `required` 是互斥的，你只能同时使用其中一个。</source>
        <target state="needs-translation">请注意：`default` 和 `required` 是互斥的，你只能同时使用其中一个。</target>
      </trans-unit>
      <trans-unit id="48882">
        <source>schema.required()</source>
        <target state="needs-translation">schema.required()</target>
      </trans-unit>
      <trans-unit id="48884">
        <source>声明一个类型不可为空值 (`null` 或 `undefined`)。</source>
        <target state="needs-translation">声明一个类型不可为空值 (`null` 或 `undefined`)。</target>
      </trans-unit>
      <trans-unit id="48886">
        <source>schema.default(value)</source>
        <target state="needs-translation">schema.default(value)</target>
      </trans-unit>
      <trans-unit id="48888">
        <source>声明一个类型的默认值。</source>
        <target state="needs-translation">声明一个类型的默认值。</target>
      </trans-unit>
      <trans-unit id="48890">
        <source>schema.description(text)</source>
        <target state="needs-translation">schema.description(text)</target>
      </trans-unit>
      <trans-unit id="48892">
        <source>为类型提供描述文本。</source>
        <target state="needs-translation">为类型提供描述文本。</target>
      </trans-unit>
      <trans-unit id="48894">
        <source>简写形式</source>
        <target state="needs-translation">简写形式</target>
      </trans-unit>
      <trans-unit id="48896">
        <source>对于上述静态方法，其参数可以使用下列的简写形式：</source>
        <target state="needs-translation">对于上述静态方法，其参数可以使用下列的简写形式：</target>
      </trans-unit>
      <trans-unit id="48898">
        <source>`undefined` -&gt; `Schema.any()`</source>
        <target state="needs-translation">`undefined` -&gt; `Schema.any()`</target>
      </trans-unit>
      <trans-unit id="48900">
        <source>`String` -&gt; `Schema.string()`</source>
        <target state="needs-translation">`String` -&gt; `Schema.string()`</target>
      </trans-unit>
      <trans-unit id="48902">
        <source>`Number` -&gt; `Schema.number()`</source>
        <target state="needs-translation">`Number` -&gt; `Schema.number()`</target>
      </trans-unit>
      <trans-unit id="48904">
        <source>`Boolean` -&gt; `Schema.boolean()`</source>
        <target state="needs-translation">`Boolean` -&gt; `Schema.boolean()`</target>
      </trans-unit>
      <trans-unit id="48906">
        <source>`1` -&gt; `Schema.const(1)` (仅对基础类型有效)</source>
        <target state="needs-translation">`1` -&gt; `Schema.const(1)` (仅对基础类型有效)</target>
      </trans-unit>
      <trans-unit id="48908">
        <source>`Date` -&gt; `Schema.is(Date)`</source>
        <target state="needs-translation">`Date` -&gt; `Schema.is(Date)`</target>
      </trans-unit>
      <trans-unit id="48910">
        <source>// @errors: 2769

Schema.array(String)            // Schema.array(Schema.string())
Schema.dict(RegExp)             // Schema.dict(Schema.is(RegExp))
Schema.union([1, 2])            // Schema.union([Schema.const(1), Schema.const(2)])</source>
        <target state="needs-translation">// @errors: 2769

Schema.array(String)            // Schema.array(Schema.string())
Schema.dict(RegExp)             // Schema.dict(Schema.is(RegExp))
Schema.union([1, 2])            // Schema.union([Schema.const(1), Schema.const(2)])</target>
      </trans-unit>
      <trans-unit id="48912">
        <source>你还可以使用 `Schema.from()` 方法来从简写形式获得推断后的类型：</source>
        <target state="needs-translation">你还可以使用 `Schema.from()` 方法来从简写形式获得推断后的类型：</target>
      </trans-unit>
      <trans-unit id="48914">
        <source>// @errors: 2769

Schema.from()                   // Schema.any()
Schema.from(Date)               // Schema.is(Date)
Schema.from('foo')              // Schema.const('foo')</source>
        <target state="needs-translation">// @errors: 2769

Schema.from()                   // Schema.any()
Schema.from(Date)               // Schema.is(Date)
Schema.from('foo')              // Schema.const('foo')</target>
      </trans-unit>
      <trans-unit id="48916">
        <source>代码示例</source>
        <target state="needs-translation">代码示例</target>
      </trans-unit>
      <trans-unit id="48918">
        <source>下面是一些例子，展示了如何使用 Schema 构造一些常见的高级类型。</source>
        <target state="needs-translation">下面是一些例子，展示了如何使用 Schema 构造一些常见的高级类型。</target>
      </trans-unit>
      <trans-unit id="48920">
        <source>枚举类型</source>
        <target state="needs-translation">枚举类型</target>
      </trans-unit>
      <trans-unit id="48922">
        <source>// @errors: 2769

const Enum = Schema.union(['red', 'blue'])

Enum('red')                     // 'red'
Enum('blue')                    // 'blue'
Enum('green')                   // TypeError</source>
        <target state="needs-translation">// @errors: 2769

const Enum = Schema.union(['red', 'blue'])

Enum('red')                     // 'red'
Enum('blue')                    // 'blue'
Enum('green')                   // TypeError</target>
      </trans-unit>
      <trans-unit id="48924">
        <source>转换为字符串</source>
        <target state="needs-translation">转换为字符串</target>
      </trans-unit>
      <trans-unit id="48926">
        <source>// @errors: 2769

const ToString = Schema.transform(Schema.any(), v =&gt; String(v))

ToString('')                    // ''
ToString(0)                     // '0'
ToString({})                    // '{}'</source>
        <target state="needs-translation">// @errors: 2769

const ToString = Schema.transform(Schema.any(), v =&gt; String(v))

ToString('')                    // ''
ToString(0)                     // '0'
ToString({})                    // '{}'</target>
      </trans-unit>
      <trans-unit id="48928">
        <source>单个值或者列表</source>
        <target state="needs-translation">单个值或者列表</target>
      </trans-unit>
      <trans-unit id="48930">
        <source>// @errors: 2769

const Listable = Schema.union([
  Schema.array(Number),
  Schema.transform(Number, n =&gt; [n]),
]).default([])

Listable()                      // []
Listable(0)                     // [0]
Listable([1, 2])                // [1, 2]</source>
        <target state="needs-translation">// @errors: 2769

const Listable = Schema.union([
  Schema.array(Number),
  Schema.transform(Number, n =&gt; [n]),
]).default([])

Listable()                      // []
Listable(0)                     // [0]
Listable([1, 2])                // [1, 2]</target>
      </trans-unit>
      <trans-unit id="48932">
        <source>对象键值别名</source>
        <target state="needs-translation">对象键值别名</target>
      </trans-unit>
      <trans-unit id="48934">
        <source>// @errors: 2769

const Config = Schema.dict(Number, Schema.union([
  'foo',
  Schema.transform('bar', () =&gt; 'foo'),
]))

Config({ foo: 1 })              // { foo: 1 }
Config({ bar: 2 })              // { foo: 2 }
Config({ bar: '3' })            // TypeError</source>
        <target state="needs-translation">// @errors: 2769

const Config = Schema.dict(Number, Schema.union([
  'foo',
  Schema.transform('bar', () =&gt; 'foo'),
]))

Config({ foo: 1 })              // { foo: 1 }
Config({ bar: 2 })              // { foo: 2 }
Config({ bar: '3' })            // TypeError</target>
      </trans-unit>
    </body>
  </file>
  <file id="1502" original="/[koishijs.docs] main/zh-CN/cookbook/appendix/commands.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="48936">
        <source>案例：指令管理</source>
        <target state="needs-translation">案例：指令管理</target>
      </trans-unit>
      <trans-unit id="48938">
        <source>主条目：[可逆的 Koishi](../design/disposable.md)</source>
        <target state="needs-translation">主条目：[可逆的 Koishi](../design/disposable.md)</target>
      </trans-unit>
      <trans-unit id="48940">
        <source>本文将以 [commands](../../plugins/console/commands.md) 插件为例，分析 Koishi 中的可逆插件开发。</source>
        <target state="needs-translation">本文将以 [commands](../../plugins/console/commands.md) 插件为例，分析 Koishi 中的可逆插件开发。</target>
      </trans-unit>
      <trans-unit id="48942">
        <source>功能描述</source>
        <target state="needs-translation">功能描述</target>
      </trans-unit>
      <trans-unit id="48944">
        <source>从文档中可以看到，指令管理插件提供了以下功能：</source>
        <target state="needs-translation">从文档中可以看到，指令管理插件提供了以下功能：</target>
      </trans-unit>
      <trans-unit id="48946">
        <source>设置别名和显示名称</source>
        <target state="needs-translation">设置别名和显示名称</target>
      </trans-unit>
      <trans-unit id="48948">
        <source>添加和删除子指令</source>
        <target state="needs-translation">添加和删除子指令</target>
      </trans-unit>
      <trans-unit id="48950">
        <source>权限管理</source>
        <target state="translated">權限管理</target>
      </trans-unit>
      <trans-unit id="48952">
        <source>速率限制</source>
        <target state="needs-translation">速率限制</target>
      </trans-unit>
      <trans-unit id="48954">
        <source>与此同时，该插件也允许其他插件通过 `ctx.schema` 服务注册更多可以被该插件所配置的功能。</source>
        <target state="needs-translation">与此同时，该插件也允许其他插件通过 `ctx.schema` 服务注册更多可以被该插件所配置的功能。</target>
      </trans-unit>
      <trans-unit id="48956">
        <source>上述所有行为都通过配置文件进行持久化，即：当用户在控制台中做出任何改动时，插件本身的配置项发生变化，并同步至配置文件中；当整个实例重启时这些改动会依然生效。</source>
        <target state="needs-translation">上述所有行为都通过配置文件进行持久化，即：当用户在控制台中做出任何改动时，插件本身的配置项发生变化，并同步至配置文件中；当整个实例重启时这些改动会依然生效。</target>
      </trans-unit>
      <trans-unit id="48958">
        <source>实现要求</source>
        <target state="needs-translation">实现要求</target>
      </trans-unit>
      <trans-unit id="48960">
        <source>该插件要实现可逆性，需要满足以下具体的性质：</source>
        <target state="needs-translation">该插件要实现可逆性，需要满足以下具体的性质：</target>
      </trans-unit>
      <trans-unit id="48962">
        <source>副作用回收</source>
        <target state="needs-translation">副作用回收</target>
      </trans-unit>
      <trans-unit id="48964">
        <source>可逆的 Koishi 要求 commands 插件回收自身产生的一切副作用，即：当插件被停用时，用户对指令系统做出的一切改动应当复原：已修改的配置项、指令的别名和显示名称全部恢复为未启用此插件时的状态；创建的新指令被移除；被调整的父子指令关系被复原。</source>
        <target state="needs-translation">可逆的 Koishi 要求 commands 插件回收自身产生的一切副作用，即：当插件被停用时，用户对指令系统做出的一切改动应当复原：已修改的配置项、指令的别名和显示名称全部恢复为未启用此插件时的状态；创建的新指令被移除；被调整的父子指令关系被复原。</target>
      </trans-unit>
      <trans-unit id="48966">
        <source>控制台依赖</source>
        <target state="needs-translation">控制台依赖</target>
      </trans-unit>
      <trans-unit id="48968">
        <source>commands 插件的功能可以分为两个部分：</source>
        <target state="needs-translation">commands 插件的功能可以分为两个部分：</target>
      </trans-unit>
      <trans-unit id="48970">
        <source>读取配置项，并对指令系统做出改动。</source>
        <target state="needs-translation">读取配置项，并对指令系统做出改动。</target>
      </trans-unit>
      <trans-unit id="48972">
        <source>为控制台提供专门的「指令管理」页面，并允许用户进一步改动指令系统。</source>
        <target state="needs-translation">为控制台提供专门的「指令管理」页面，并允许用户进一步改动指令系统。</target>
      </trans-unit>
      <trans-unit id="48974">
        <source>其中 1 不依赖控制台插件，2 依赖控制台插件。</source>
        <target state="needs-translation">其中 1 不依赖控制台插件，2 依赖控制台插件。</target>
      </trans-unit>
      <trans-unit id="48976">
        <source>可逆的 Koishi 要求该插件被启用时，1 会立即生效，而 2 则仅当 console 插件启用时生效；当 console 插件停用时，2 会立即失效并回收相关副作用，1 保持生效。</source>
        <target state="needs-translation">可逆的 Koishi 要求该插件被启用时，1 会立即生效，而 2 则仅当 console 插件启用时生效；当 console 插件停用时，2 会立即失效并回收相关副作用，1 保持生效。</target>
      </trans-unit>
      <trans-unit id="48978">
        <source>指令依赖</source>
        <target state="needs-translation">指令依赖</target>
      </trans-unit>
      <trans-unit id="48980">
        <source>可逆的 Koishi 要求插件的加载顺序可以是任意的。</source>
        <target state="needs-translation">可逆的 Koishi 要求插件的加载顺序可以是任意的。</target>
      </trans-unit>
      <trans-unit id="48982">
        <source>而 commands 插件会改动某些指令的行为，因此其不能假定其在加载时对应的指令已存在。</source>
        <target state="needs-translation">而 commands 插件会改动某些指令的行为，因此其不能假定其在加载时对应的指令已存在。</target>
      </trans-unit>
      <trans-unit id="48984">
        <source>具体而言：</source>
        <target state="needs-translation">具体而言：</target>
      </trans-unit>
      <trans-unit id="48986">
        <source>如果对应的指令已存在，那么立即进行对该指令的改动。</source>
        <target state="needs-translation">如果对应的指令已存在，那么立即进行对该指令的改动。</target>
      </trans-unit>
      <trans-unit id="48988">
        <source>如果对应的指令尚不存在，那么不做出任何改动；当指令被创建时再进行改动。</source>
        <target state="needs-translation">如果对应的指令尚不存在，那么不做出任何改动；当指令被创建时再进行改动。</target>
      </trans-unit>
      <trans-unit id="48990">
        <source>对于将 A 指定为 B 的子指令的情形，如果 B 不存在而 A 已存在，则先只对 A 进行除指定父指令以外的改动；当 B 指令被创建时再将 A 设置为 B 的子指令。</source>
        <target state="needs-translation">对于将 A 指定为 B 的子指令的情形，如果 B 不存在而 A 已存在，则先只对 A 进行除指定父指令以外的改动；当 B 指令被创建时再将 A 设置为 B 的子指令。</target>
      </trans-unit>
      <trans-unit id="48992">
        <source>实现原理</source>
        <target state="needs-translation">实现原理</target>
      </trans-unit>
      <trans-unit id="48994">
        <source>以上三个部分使用了不同的实现原理。</source>
        <target state="needs-translation">以上三个部分使用了不同的实现原理。</target>
      </trans-unit>
      <trans-unit id="48996">
        <source>副作用回收</source>
        <target state="needs-translation">副作用回收</target>
      </trans-unit>
      <trans-unit id="48998">
        <source>使用 dispose 事件配合 ctx.command() 本身的自回收实现。</source>
        <target state="needs-translation">使用 dispose 事件配合 ctx.command() 本身的自回收实现。</target>
      </trans-unit>
      <trans-unit id="49000">
        <source>控制台依赖</source>
        <target state="needs-translation">控制台依赖</target>
      </trans-unit>
      <trans-unit id="49002">
        <source>使用 using 实现。</source>
        <target state="needs-translation">使用 using 实现。</target>
      </trans-unit>
      <trans-unit id="49004">
        <source>指令依赖</source>
        <target state="needs-translation">指令依赖</target>
      </trans-unit>
      <trans-unit id="49006">
        <source>对于未加载的指令，维护一个等待中的改动队列，并同时监听 command/added 事件以实现。</source>
        <target state="needs-translation">对于未加载的指令，维护一个等待中的改动队列，并同时监听 command/added 事件以实现。</target>
      </trans-unit>
      <trans-unit id="49008">
        <source>总结</source>
        <target state="needs-translation">总结</target>
      </trans-unit>
      <trans-unit id="49010">
        <source>commands 插件的设计充分体现了 Koishi 的可逆性。</source>
        <target state="needs-translation">commands 插件的设计充分体现了 Koishi 的可逆性。</target>
      </trans-unit>
      <trans-unit id="49012">
        <source>尽管该插件需要考虑非常多边界情况，但得益于自回收、生命周期、服务依赖、事件系统等特性，所有的情况都能够被妥善处理。</source>
        <target state="needs-translation">尽管该插件需要考虑非常多边界情况，但得益于自回收、生命周期、服务依赖、事件系统等特性，所有的情况都能够被妥善处理。</target>
      </trans-unit>
      <trans-unit id="49014">
        <source>事实上，大部分插件并不会遇到如此复杂的情况；对于可逆性的考量也更多地存在于架构设计上，并不会显著增加插件开发者的心智负担。</source>
        <target state="needs-translation">事实上，大部分插件并不会遇到如此复杂的情况；对于可逆性的考量也更多地存在于架构设计上，并不会显著增加插件开发者的心智负担。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1504" original="/[koishijs.docs] main/zh-CN/cookbook/design/disposable.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="49016">
        <source>可逆的插件系统</source>
        <target state="needs-translation">可逆的插件系统</target>
      </trans-unit>
      <trans-unit id="49018">
        <source>为什么我们需要可逆的插件系统？</source>
        <target state="needs-translation">为什么我们需要可逆的插件系统？</target>
      </trans-unit>
      <trans-unit id="49020">
        <source>Cordis 是如何实现资源安全的？</source>
        <target state="needs-translation">Cordis 是如何实现资源安全的？</target>
      </trans-unit>
      <trans-unit id="49022">
        <source>:::</source>
        <target state="needs-translation">:::</target>
      </trans-unit>
      <trans-unit id="49024">
        <source>Koishi 的一切都从 Cordis 开始。</source>
        <target state="needs-translation">Koishi 的一切都从 Cordis 开始。</target>
      </trans-unit>
      <trans-unit id="49026">
        <source>但我想大部分 Koishi 的开发者都不知道 Cordis 是什么。</source>
        <target state="needs-translation">但我想大部分 Koishi 的开发者都不知道 Cordis 是什么。</target>
      </trans-unit>
      <trans-unit id="49028">
        <source>如果让我来定义的话，Cordis 是一个**元框架 (Meta Framework)**，即一个用于构建框架的框架。</source>
        <target state="needs-translation">如果让我来定义的话，Cordis 是一个**元框架 (Meta Framework)**，即一个用于构建框架的框架。</target>
      </trans-unit>
      <trans-unit id="49030">
        <source>Cordis 的名字来源于拉丁语的心。</source>
        <target state="needs-translation">Cordis 的名字来源于拉丁语的心。</target>
      </trans-unit>
      <trans-unit id="49032">
        <source>我希望它能成为未来软件 (至少是我开发的软件) 的核心。</source>
        <target state="needs-translation">我希望它能成为未来软件 (至少是我开发的软件) 的核心。</target>
      </trans-unit>
      <trans-unit id="49034">
        <source>作为一个元框架，Cordis 并不耦合任何具体的领域或场景。</source>
        <target state="needs-translation">作为一个元框架，Cordis 并不耦合任何具体的领域或场景。</target>
      </trans-unit>
      <trans-unit id="49036">
        <source>它所提供的能力是大多数框架都不足为奇的——插件系统，但在这个系统背后却是大多数框架都没有达成的目标：可逆性。</source>
        <target state="needs-translation">它所提供的能力是大多数框架都不足为奇的——插件系统，但在这个系统背后却是大多数框架都没有达成的目标：可逆性。</target>
      </trans-unit>
      <trans-unit id="49038">
        <source>背景介绍</source>
        <target state="needs-translation">背景介绍</target>
      </trans-unit>
      <trans-unit id="49040">
        <source>引子：软件文明在退步吗？</source>
        <target state="needs-translation">引子：软件文明在退步吗？</target>
      </trans-unit>
      <trans-unit id="49042">
        <source>我时常会觉得现代软件相比于曾经的软件存在着某种退步。</source>
        <target state="needs-translation">我时常会觉得现代软件相比于曾经的软件存在着某种退步。</target>
      </trans-unit>
      <trans-unit id="49044">
        <source>在过去，我们用 C 这样的语言编写程序时，我知道 `open()` 会返回一个 `fd`，我知道 `malloc()` 会返回一个 `ptr`，我知道 `fork()` 会返回一个 `pid`。</source>
        <target state="needs-translation">在过去，我们用 C 这样的语言编写程序时，我知道 `open()` 会返回一个 `fd`，我知道 `malloc()` 会返回一个 `ptr`，我知道 `fork()` 会返回一个 `pid`。</target>
      </trans-unit>
      <trans-unit id="49046">
        <source>这些东西通常被称为 **资源 (Resource)**。</source>
        <target state="needs-translation">这些东西通常被称为 **资源 (Resource)**。</target>
      </trans-unit>
      <trans-unit id="49048">
        <source>我也知道，为了编写可靠的程序，我应当在使用完这些资源后，调用对应的函数来回收它们。</source>
        <target state="needs-translation">我也知道，为了编写可靠的程序，我应当在使用完这些资源后，调用对应的函数来回收它们。</target>
      </trans-unit>
      <trans-unit id="49050">
        <source>而在如今，当我使用 Koa 时，我可以使用 `app.use()` 来注册一个中间件；当我使用 Vue 时，我可以使用 `app.component()` 来注册一个组件；当我使用 Node.js 时，我可以直接导入 `.node` 文件来加载使用 C++ 编写的模块。</source>
        <target state="needs-translation">而在如今，当我使用 Koa 时，我可以使用 `app.use()` 来注册一个中间件；当我使用 Vue 时，我可以使用 `app.component()` 来注册一个组件；当我使用 Node.js 时，我可以直接导入 `.node` 文件来加载使用 C++ 编写的模块。</target>
      </trans-unit>
      <trans-unit id="49052">
        <source>但很遗憾的是，Koa 不会告诉你如何取消这个中间件，Vue 不会告诉你如何卸载这个组件，Node.js 甚至会永久占用这个 `.node` 文件。</source>
        <target state="needs-translation">但很遗憾的是，Koa 不会告诉你如何取消这个中间件，Vue 不会告诉你如何卸载这个组件，Node.js 甚至会永久占用这个 `.node` 文件。</target>
      </trans-unit>
      <trans-unit id="49054">
        <source>你当然可以说这是软件发展的结果：底层 API 被妥善地封装了，开发者不再需要关心这些细节。</source>
        <target state="needs-translation">你当然可以说这是软件发展的结果：底层 API 被妥善地封装了，开发者不再需要关心这些细节。</target>
      </trans-unit>
      <trans-unit id="49056">
        <source>但被封装后的资源仍然是资源，它们仍然有着被回收的需求。</source>
        <target state="needs-translation">但被封装后的资源仍然是资源，它们仍然有着被回收的需求。</target>
      </trans-unit>
      <trans-unit id="49058">
        <source>或许对于每一个具体的场景，我们都可以找到一个解决方案，或者给出我们不需要回收资源的理由，但面对一个复杂的、未知的应用，如果你想要回收资源而它又没有提供相应的 API，最好的办法就只有重启了。</source>
        <target state="needs-translation">或许对于每一个具体的场景，我们都可以找到一个解决方案，或者给出我们不需要回收资源的理由，但面对一个复杂的、未知的应用，如果你想要回收资源而它又没有提供相应的 API，最好的办法就只有重启了。</target>
      </trans-unit>
      <trans-unit id="49060">
        <source>事实上，封装也根本不是导致这种现象的原因。</source>
        <target state="needs-translation">事实上，封装也根本不是导致这种现象的原因。</target>
      </trans-unit>
      <trans-unit id="49062">
        <source>面对不当使用指针引发的内存安全问题，无论是 C++ 的智能指针、Java 的垃圾回收机制，还是 Rust 的所有权系统，都提供了对指针的封装。</source>
        <target state="needs-translation">面对不当使用指针引发的内存安全问题，无论是 C++ 的智能指针、Java 的垃圾回收机制，还是 Rust 的所有权系统，都提供了对指针的封装。</target>
      </trans-unit>
      <trans-unit id="49064">
        <source>这些封装不仅不会导致内存泄露，反而通过提高易用性减少了开发者的心智负担。</source>
        <target state="needs-translation">这些封装不仅不会导致内存泄露，反而通过提高易用性减少了开发者的心智负担。</target>
      </trans-unit>
      <trans-unit id="49066">
        <source>有了正面的例子，我们就可以知道，这种退步实际上只是特定领域中呈现出的趋势 (在 JavaScript 和 Python 这种高级语言中尤为明显)。</source>
        <target state="needs-translation">有了正面的例子，我们就可以知道，这种退步实际上只是特定领域中呈现出的趋势 (在 JavaScript 和 Python 这种高级语言中尤为明显)。</target>
      </trans-unit>
      <trans-unit id="49068">
        <source>或许是人们认为重启过于方便了，因此一些框架的开发者们已经完全不考虑回收资源的需求了。</source>
        <target state="needs-translation">或许是人们认为重启过于方便了，因此一些框架的开发者们已经完全不考虑回收资源的需求了。</target>
      </trans-unit>
      <trans-unit id="49070">
        <source>但现代软件就如同摩天大楼，一旦某一层缺失了支撑，在其上的一切都会变得摇摇欲坠。</source>
        <target state="needs-translation">但现代软件就如同摩天大楼，一旦某一层缺失了支撑，在其上的一切都会变得摇摇欲坠。</target>
      </trans-unit>
      <trans-unit id="49072">
        <source>好在我们或许有办法改善这一切。</source>
        <target state="needs-translation">好在我们或许有办法改善这一切。</target>
      </trans-unit>
      <trans-unit id="49074">
        <source>可逆性的优势</source>
        <target state="needs-translation">可逆性的优势</target>
      </trans-unit>
      <trans-unit id="49076">
        <source>**可逆性 (Disposability)**，即回收资源的能力，可以为软件带来以下好处：</source>
        <target state="needs-translation">**可逆性 (Disposability)**，即回收资源的能力，可以为软件带来以下好处：</target>
      </trans-unit>
      <trans-unit id="49078">
        <source>**可组合性 (Composibility)**。</source>
        <target state="needs-translation">**可组合性 (Composibility)**。</target>
      </trans-unit>
      <trans-unit id="49080">
        <source>很多软件很喜欢用「模块化」「插件」这样的词，这显然是来自现实世界的概念。</source>
        <target state="needs-translation">很多软件很喜欢用「模块化」「插件」这样的词，这显然是来自现实世界的概念。</target>
      </trans-unit>
      <trans-unit id="49082">
        <source>然而现实中的模块也应当是可拆卸的，现实中的插件也应当是可以拔出的。</source>
        <target state="needs-translation">然而现实中的模块也应当是可拆卸的，现实中的插件也应当是可以拔出的。</target>
      </trans-unit>
      <trans-unit id="49084">
        <source>不可逆的软件即便进行了模块化，也只会随着时间推移而变得更加臃肿。</source>
        <target state="needs-translation">不可逆的软件即便进行了模块化，也只会随着时间推移而变得更加臃肿。</target>
      </trans-unit>
      <trans-unit id="49086">
        <source>此外，可逆性可以让我们更好地理解模块之间的依赖关系，从而更好地促成解耦。</source>
        <target state="needs-translation">此外，可逆性可以让我们更好地理解模块之间的依赖关系，从而更好地促成解耦。</target>
      </trans-unit>
      <trans-unit id="49088">
        <source>这一点我们 [稍后](#compose) 会进一步讨论。</source>
        <target state="needs-translation">这一点我们 [稍后](#compose) 会进一步讨论。</target>
      </trans-unit>
      <trans-unit id="49090">
        <source>**可靠性 (Reliability)**。</source>
        <target state="needs-translation">**可靠性 (Reliability)**。</target>
      </trans-unit>
      <trans-unit id="49092">
        <source>当软件的规模增加时，可逆性可以确保软件所使用的内存和其他资源都在可控范围内 (内存安全其实是资源安全的一种特殊情况)。</source>
        <target state="needs-translation">当软件的规模增加时，可逆性可以确保软件所使用的内存和其他资源都在可控范围内 (内存安全其实是资源安全的一种特殊情况)。</target>
      </trans-unit>
      <trans-unit id="49094">
        <source>同时，由于可逆性也意味着可追踪性，即便某个模块出现了资源泄露，我们也可以快速定位错误的来源。</source>
        <target state="needs-translation">同时，由于可逆性也意味着可追踪性，即便某个模块出现了资源泄露，我们也可以快速定位错误的来源。</target>
      </trans-unit>
      <trans-unit id="49096">
        <source>**可访问性 (Availability)**。</source>
        <target state="needs-translation">**可访问性 (Availability)**。</target>
      </trans-unit>
      <trans-unit id="49098">
        <source>一个拥有众多功能的软件，如果没有提供可逆的 API，那替换任何一个组件都意味着整个重启。</source>
        <target state="needs-translation">一个拥有众多功能的软件，如果没有提供可逆的 API，那替换任何一个组件都意味着整个重启。</target>
      </trans-unit>
      <trans-unit id="49100">
        <source>重启期间，那些本可以不受影响的服务也被迫下线。</source>
        <target state="needs-translation">重启期间，那些本可以不受影响的服务也被迫下线。</target>
      </trans-unit>
      <trans-unit id="49102">
        <source>但如果其中的每个组件都是可逆的，我们就可以在保证其他功能持续运行的情况下替换掉任何一个组件，甚至可以滚动更新整个程序自身。</source>
        <target state="needs-translation">但如果其中的每个组件都是可逆的，我们就可以在保证其他功能持续运行的情况下替换掉任何一个组件，甚至可以滚动更新整个程序自身。</target>
      </trans-unit>
      <trans-unit id="49104">
        <source>实现了可逆性后，软件将显著降低由于故障和更新带来的额外开销。</source>
        <target state="needs-translation">实现了可逆性后，软件将显著降低由于故障和更新带来的额外开销。</target>
      </trans-unit>
      <trans-unit id="49106">
        <source>可逆的 Koishi</source>
        <target state="needs-translation">可逆的 Koishi</target>
      </trans-unit>
      <trans-unit id="49108">
        <source>相比上面这些可能有些晦涩的概念，以 Koishi 作为更具体的例子或许更有说服力。</source>
        <target state="needs-translation">相比上面这些可能有些晦涩的概念，以 Koishi 作为更具体的例子或许更有说服力。</target>
      </trans-unit>
      <trans-unit id="49110">
        <source>可逆的 Koishi 是指，对于任何一个 Koishi 实例，任意进行加载和卸载插件操作后，最终行为仅与最终启用的插件相关；与中间是否重复加载过插件、插件之间的加载或卸载顺序都无关。</source>
        <target state="needs-translation">可逆的 Koishi 是指，对于任何一个 Koishi 实例，任意进行加载和卸载插件操作后，最终行为仅与最终启用的插件相关；与中间是否重复加载过插件、插件之间的加载或卸载顺序都无关。</target>
      </trans-unit>
      <trans-unit id="49112">
        <source>你也可以简单理解为「路径无关」。</source>
        <target state="needs-translation">你也可以简单理解为「路径无关」。</target>
      </trans-unit>
      <trans-unit id="49114">
        <source>这里的相关和无关具体包括：</source>
        <target state="needs-translation">这里的相关和无关具体包括：</target>
      </trans-unit>
      <trans-unit id="49116">
        <source>任意次加载并卸载一个插件后，内存占用不会增加。</source>
        <target state="needs-translation">任意次加载并卸载一个插件后，内存占用不会增加。</target>
      </trans-unit>
      <trans-unit id="49118">
        <source>任意次加载并卸载一个插件后，不会残留对其他插件的影响。</source>
        <target state="needs-translation">任意次加载并卸载一个插件后，不会残留对其他插件的影响。</target>
      </trans-unit>
      <trans-unit id="49120">
        <source>如果插件之间有依赖关系，依赖的插件会自动在被依赖的插件之后加载，并自动在被依赖的插件之前卸载，即确保插件的生命周期由依赖关系而非加载顺序决定。</source>
        <target state="needs-translation">如果插件之间有依赖关系，依赖的插件会自动在被依赖的插件之后加载，并自动在被依赖的插件之前卸载，即确保插件的生命周期由依赖关系而非加载顺序决定。</target>
      </trans-unit>
      <trans-unit id="49122">
        <source>实现了可逆性的 Koishi 项目将获得以下优点：</source>
        <target state="needs-translation">实现了可逆性的 Koishi 项目将获得以下优点：</target>
      </trans-unit>
      <trans-unit id="49124">
        <source>**热重载**：由于插件的副作用会在卸载时回收，Koishi 的所有插件都将可以在运行时加载、卸载和重载。</source>
        <target state="needs-translation">**热重载**：由于插件的副作用会在卸载时回收，Koishi 的所有插件都将可以在运行时加载、卸载和重载。</target>
      </trans-unit>
      <trans-unit id="49126">
        <source>这显著降低了用户的开发和更新成本，并大幅提高了 Koishi 应用的 SLA。</source>
        <target state="needs-translation">这显著降低了用户的开发和更新成本，并大幅提高了 Koishi 应用的 SLA。</target>
      </trans-unit>
      <trans-unit id="49128">
        <source>**异步加载**：由于插件的加载顺序由依赖关系决定，因此插件的代码可以被异步地加载，而不需要担心加载顺序对可用性的影响。</source>
        <target state="needs-translation">**异步加载**：由于插件的加载顺序由依赖关系决定，因此插件的代码可以被异步地加载，而不需要担心加载顺序对可用性的影响。</target>
      </trans-unit>
      <trans-unit id="49130">
        <source>这将显著提高 Koishi 的启动速度。</source>
        <target state="needs-translation">这将显著提高 Koishi 的启动速度。</target>
      </trans-unit>
      <trans-unit id="49132">
        <source>**可追踪**：由 Koishi 插件注册的指令和中间件、监听的事件、提供的本地化、扩展的页面、抛出的错误都可以被明确地追踪来源。</source>
        <target state="needs-translation">**可追踪**：由 Koishi 插件注册的指令和中间件、监听的事件、提供的本地化、扩展的页面、抛出的错误都可以被明确地追踪来源。</target>
      </trans-unit>
      <trans-unit id="49134">
        <source>这有利于在大型项目中快速定位问题。</source>
        <target state="needs-translation">这有利于在大型项目中快速定位问题。</target>
      </trans-unit>
      <trans-unit id="49136">
        <source>如今，Koishi 已经有超过 1000 个插件，其中的依赖错综复杂。</source>
        <target state="needs-translation">如今，Koishi 已经有超过 1000 个插件，其中的依赖错综复杂。</target>
      </trans-unit>
      <trans-unit id="49138">
        <source>而即使是在这个规模下，Koishi 仍然能够妥善处理所有插件的加载、卸载和更新。</source>
        <target state="needs-translation">而即使是在这个规模下，Koishi 仍然能够妥善处理所有插件的加载、卸载和更新。</target>
      </trans-unit>
      <trans-unit id="49140">
        <source>这一切都得益于 Cordis 的可逆性。</source>
        <target state="needs-translation">这一切都得益于 Cordis 的可逆性。</target>
      </trans-unit>
      <trans-unit id="49142">
        <source>实现原理</source>
        <target state="needs-translation">实现原理</target>
      </trans-unit>
      <trans-unit id="49144">
        <source>说了这么多好处，可逆性真的可以实现吗？</source>
        <target state="needs-translation">说了这么多好处，可逆性真的可以实现吗？</target>
      </trans-unit>
      <trans-unit id="49146">
        <source>答案是肯定的。</source>
        <target state="needs-translation">答案是肯定的。</target>
      </trans-unit>
      <trans-unit id="49148">
        <source>在这一节中，我们将会从数学的角度来探讨可逆性的实现原理。</source>
        <target state="needs-translation">在这一节中，我们将会从数学的角度来探讨可逆性的实现原理。</target>
      </trans-unit>
      <trans-unit id="49150">
        <source>你会发现，任何语言都可以实现自己的 Cordis。</source>
        <target state="needs-translation">你会发现，任何语言都可以实现自己的 Cordis。</target>
      </trans-unit>
      <trans-unit id="49152">
        <source>可逆的副作用</source>
        <target state="needs-translation">可逆的副作用</target>
      </trans-unit>
      <trans-unit id="49154">
        <source>函数式编程中有着纯函数的概念——给定相同的输入总是给出相同的输出。</source>
        <target state="needs-translation">函数式编程中有着纯函数的概念——给定相同的输入总是给出相同的输出。</target>
      </trans-unit>
      <trans-unit id="49156">
        <source>然而，现实中的程序往往要与各种各样的副作用打交道。</source>
        <target state="needs-translation">然而，现实中的程序往往要与各种各样的副作用打交道。</target>
      </trans-unit>
      <trans-unit id="49158">
        <source>对于这种情况，我们可以对函数进行“纯化”——将它的副作用转化为参数和返回值的一部分即可。</source>
        <target state="needs-translation">对于这种情况，我们可以对函数进行“纯化”——将它的副作用转化为参数和返回值的一部分即可。</target>
      </trans-unit>
      <trans-unit id="49160">
        <source>考虑下面的函数：</source>
        <target state="needs-translation">考虑下面的函数：</target>
      </trans-unit>
      <trans-unit id="49162">
        <source>f_\text{impure}: \text{X}\to\text{Y}</source>
        <target state="needs-translation">f_\text{impure}: \text{X}\to\text{Y}</target>
      </trans-unit>
      <trans-unit id="49164">
        <source>假设它含有副作用，我们把所有可能的副作用用类型 $\mathcal{C}$ 封装起来，则该函数可以被转化为：</source>
        <target state="needs-translation">假设它含有副作用，我们把所有可能的副作用用类型 $\mathcal{C}$ 封装起来，则该函数可以被转化为：</target>
      </trans-unit>
      <trans-unit id="49166">
        <source>f: \mathcal{C}\times\text{X}\to\mathcal{C}\times\text{Y}</source>
        <target state="needs-translation">f: \mathcal{C}\times\text{X}\to\mathcal{C}\times\text{Y}</target>
      </trans-unit>
      <trans-unit id="49168">
        <source>此时我们得到的就一个纯函数，它接受 $\mathcal{C}$ 和参数，返回修改过的 $\mathcal{C}$ 和返回值。</source>
        <target state="needs-translation">此时我们得到的就一个纯函数，它接受 $\mathcal{C}$ 和参数，返回修改过的 $\mathcal{C}$ 和返回值。</target>
      </trans-unit>
      <trans-unit id="49170">
        <source>如果忽略 $f$ 本身的入参和出参，只考虑副作用，那么可以定义函数空间 $\mathfrak{F}=\mathcal{C}\to\mathcal{C}$。</source>
        <target state="needs-translation">如果忽略 $f$ 本身的入参和出参，只考虑副作用，那么可以定义函数空间 $\mathfrak{F}=\mathcal{C}\to\mathcal{C}$。</target>
      </trans-unit>
      <trans-unit id="49172">
        <source>其中的任何一个函数 $f: \mathfrak{F}$ 都是 $\mathcal{C}$ 到自身的变换，不难看出它们在函数结合 $\circ$ 下构成幺半群：</source>
        <target state="needs-translation">其中的任何一个函数 $f: \mathfrak{F}$ 都是 $\mathcal{C}$ 到自身的变换，不难看出它们在函数结合 $\circ$ 下构成幺半群：</target>
      </trans-unit>
      <trans-unit id="49174">
        <source>封闭性：$f\circ g$ 也是 $\mathcal{C}$ 到自身的变换。</source>
        <target state="needs-translation">封闭性：$f\circ g$ 也是 $\mathcal{C}$ 到自身的变换。</target>
      </trans-unit>
      <trans-unit id="49176">
        <source>结合律：$(f\circ g)\circ h=f\circ (g\circ h)$。</source>
        <target state="needs-translation">结合律：$(f\circ g)\circ h=f\circ (g\circ h)$。</target>
      </trans-unit>
      <trans-unit id="49178">
        <source>单位元：存在 $\text{id}$，使得 $f\circ\text{id}=\text{id}\circ f=f$。</source>
        <target state="needs-translation">单位元：存在 $\text{id}$，使得 $f\circ\text{id}=\text{id}\circ f=f$。</target>
      </trans-unit>
      <trans-unit id="49180">
        <source>进一步，我们还希望 $f$ 的副作用是可以回收的。</source>
        <target state="needs-translation">进一步，我们还希望 $f$ 的副作用是可以回收的。</target>
      </trans-unit>
      <trans-unit id="49182">
        <source>换言之，我们额外要求 $f$ 存在逆元 $f^{-1}$，此时 $\mathfrak{F}$ 就构成一个群。</source>
        <target state="needs-translation">换言之，我们额外要求 $f$ 存在逆元 $f^{-1}$，此时 $\mathfrak{F}$ 就构成一个群。</target>
      </trans-unit>
      <trans-unit id="49184">
        <source>但仅仅知道函数可逆并不能帮助我们找到它的逆，我们需要在书写这个函数时一并写出它的回收方法。</source>
        <target state="needs-translation">但仅仅知道函数可逆并不能帮助我们找到它的逆，我们需要在书写这个函数时一并写出它的回收方法。</target>
      </trans-unit>
      <trans-unit id="49186">
        <source>因此我们引入 $\text{effect}$ 函子，使这个函数返回一个新的函数，这个函数可用于回收此次调用的副作用：</source>
        <target state="needs-translation">因此我们引入 $\text{effect}$ 函子，使这个函数返回一个新的函数，这个函数可用于回收此次调用的副作用：</target>
      </trans-unit>
      <trans-unit id="49188">
        <source>\begin{array}
\\\text{effect}&amp;:&amp;\mathfrak{F}&amp;\to&amp;    \mathcal{C}\times\mathfrak{F}&amp;\to&amp;    \mathcal{C}\times\mathfrak{F}
\\\text{effect}&amp;=&amp;f           &amp;\mapsto&amp;\left(c, h\right)            &amp;\mapsto&amp;\left(f(c), h\circ f^{-1}\right)
\end{array}</source>
        <target state="needs-translation">\begin{array}
\\\text{effect}&amp;:&amp;\mathfrak{F}&amp;\to&amp;    \mathcal{C}\times\mathfrak{F}&amp;\to&amp;    \mathcal{C}\times\mathfrak{F}
\\\text{effect}&amp;=&amp;f           &amp;\mapsto&amp;\left(c, h\right)            &amp;\mapsto&amp;\left(f(c), h\circ f^{-1}\right)
\end{array}</target>
      </trans-unit>
      <trans-unit id="49190">
        <source>可以证明 $\text{effect}$ 是一个 $\mathfrak{F}$ 到 $\mathcal{C}\times\mathfrak{F}$ 的同态：</source>
        <target state="needs-translation">可以证明 $\text{effect}$ 是一个 $\mathfrak{F}$ 到 $\mathcal{C}\times\mathfrak{F}$ 的同态：</target>
      </trans-unit>
      <trans-unit id="49192">
        <source>\begin{aligned}
\text{effect}\ (f\circ g) \left(c, h\right)
&amp;=\left((f\circ g)(c), h\circ (f\circ g)^{-1}\right)\\
&amp;=\left(f(g(c)), h\circ g^{-1}\circ f^{-1}\right)\\
&amp;=\text{effect}\ f \left(g(c), h\circ g^{-1}\right)\\
&amp;=\left(\text{effect}\ f\circ\text{effect}\ g\right) \left(c, h\right)
\end{aligned}</source>
        <target state="needs-translation">\begin{aligned}
\text{effect}\ (f\circ g) \left(c, h\right)
&amp;=\left((f\circ g)(c), h\circ (f\circ g)^{-1}\right)\\
&amp;=\left(f(g(c)), h\circ g^{-1}\circ f^{-1}\right)\\
&amp;=\text{effect}\ f \left(g(c), h\circ g^{-1}\right)\\
&amp;=\left(\text{effect}\ f\circ\text{effect}\ g\right) \left(c, h\right)
\end{aligned}</target>
      </trans-unit>
      <trans-unit id="49194">
        <source>下面是一个例子：</source>
        <target state="needs-translation">下面是一个例子：</target>
      </trans-unit>
      <trans-unit id="49196">
        <source>function serve(port: number) {
  const server = createServer().listen(port)
  return () =&gt; server.close()
}

const dispose = serve(80)       // 监听端口 80
dispose()                       // 回收副作用</source>
        <target state="needs-translation">function serve(port: number) {
  const server = createServer().listen(port)
  return () =&gt; server.close()
}

const dispose = serve(80)       // 监听端口 80
dispose()                       // 回收副作用</target>
      </trans-unit>
      <trans-unit id="49198">
        <source>在这个例子中，`serve()` 函数将会创建一个服务器并且监听 `port` 端口。</source>
        <target state="needs-translation">在这个例子中，`serve()` 函数将会创建一个服务器并且监听 `port` 端口。</target>
      </trans-unit>
      <trans-unit id="49200">
        <source>同时，调用该函数也会返回一个新的函数，用于取消该端口的监听。</source>
        <target state="needs-translation">同时，调用该函数也会返回一个新的函数，用于取消该端口的监听。</target>
      </trans-unit>
      <trans-unit id="49202">
        <source>$\mathcal{C}\times\mathfrak{F}$ 对应着全局环境 (我们稍后会提到全局环境的坏处，但不影响这里的理解)</source>
        <target state="needs-translation">$\mathcal{C}\times\mathfrak{F}$ 对应着全局环境 (我们稍后会提到全局环境的坏处，但不影响这里的理解)</target>
      </trans-unit>
      <trans-unit id="49204">
        <source>`port` 对应于上面的 $\text{X}$，由于我们可以使用柯里化，所以在数学模型中并不需要考虑它
:::</source>
        <target state="needs-translation">`port` 对应于上面的 $\text{X}$，由于我们可以使用柯里化，所以在数学模型中并不需要考虑它
:::</target>
      </trans-unit>
      <trans-unit id="49206">
        <source>为什么需要引入这个 $\text{effect}$ 和 $\mathcal{C}\times\mathfrak{F}$ 呢？</source>
        <target state="needs-translation">为什么需要引入这个 $\text{effect}$ 和 $\mathcal{C}\times\mathfrak{F}$ 呢？</target>
      </trans-unit>
      <trans-unit id="49208">
        <source>它的作用是将副作用从函数的返回值中分离出来，从而实现副作用的回收。</source>
        <target state="needs-translation">它的作用是将副作用从函数的返回值中分离出来，从而实现副作用的回收。</target>
      </trans-unit>
      <trans-unit id="49210">
        <source>只需定义 $\text{restore}$ 变换 (不难发现它确实是 $\text{effect}$ 的逆操作)：</source>
        <target state="needs-translation">只需定义 $\text{restore}$ 变换 (不难发现它确实是 $\text{effect}$ 的逆操作)：</target>
      </trans-unit>
      <trans-unit id="49212">
        <source>\begin{array}
\\\text{restore}&amp;:&amp;\mathcal{C}\times\mathfrak{F}&amp;\to&amp;\mathcal{C}\times\mathfrak{F}
\\\text{restore}&amp;=&amp;\left(c, h\right)            &amp;\mapsto&amp;\left(h(c),\text{id}\right)
\end{array}</source>
        <target state="needs-translation">\begin{array}
\\\text{restore}&amp;:&amp;\mathcal{C}\times\mathfrak{F}&amp;\to&amp;\mathcal{C}\times\mathfrak{F}
\\\text{restore}&amp;=&amp;\left(c, h\right)            &amp;\mapsto&amp;\left(h(c),\text{id}\right)
\end{array}</target>
      </trans-unit>
      <trans-unit id="49214">
        <source>现在你就可以使用 `restore()` 来回收副作用了：</source>
        <target state="needs-translation">现在你就可以使用 `restore()` 来回收副作用了：</target>
      </trans-unit>
      <trans-unit id="49216">
        <source>function serve(port: number) {
  const server = createServer().listen(port)
  collectEffect(() =&gt; server.close())
}

serve(80)               // 监听端口 80 并记录副作用
serve(443)              // 监听端口 443 并记录副作用
restore()               // 回收所有副作用</source>
        <target state="needs-translation">function serve(port: number) {
  const server = createServer().listen(port)
  collectEffect(() =&gt; server.close())
}

serve(80)               // 监听端口 80 并记录副作用
serve(443)              // 监听端口 443 并记录副作用
restore()               // 回收所有副作用</target>
      </trans-unit>
      <trans-unit id="49218">
        <source>当副作用被记录到全局环境时，$\mathcal{C}\times\mathfrak{F}$ 也就变成了一个更大的 $\mathcal{C}$。</source>
        <target state="needs-translation">当副作用被记录到全局环境时，$\mathcal{C}\times\mathfrak{F}$ 也就变成了一个更大的 $\mathcal{C}$。</target>
      </trans-unit>
      <trans-unit id="49220">
        <source>我们便可以这样定义：</source>
        <target state="needs-translation">我们便可以这样定义：</target>
      </trans-unit>
      <trans-unit id="49222">
        <source>\mathcal{C}_1=\mathcal{C}\times\mathfrak{F}=\mathcal{C}\times\left(\mathcal{C}\to\mathcal{C}\right)</source>
        <target state="needs-translation">\mathcal{C}_1=\mathcal{C}\times\mathfrak{F}=\mathcal{C}\times\left(\mathcal{C}\to\mathcal{C}\right)</target>
      </trans-unit>
      <trans-unit id="49224">
        <source>下文中我们将直接使用 $\mathcal{C}$ 来表示 $\mathcal{C}_1$。</source>
        <target state="needs-translation">下文中我们将直接使用 $\mathcal{C}$ 来表示 $\mathcal{C}_1$。</target>
      </trans-unit>
      <trans-unit id="49226">
        <source>上下文与插件</source>
        <target state="needs-translation">上下文与插件</target>
      </trans-unit>
      <trans-unit id="49228">
        <source>在上面的示例中，我们并没有显式地写出 $\mathcal{C}$ 参数和返回值。</source>
        <target state="needs-translation">在上面的示例中，我们并没有显式地写出 $\mathcal{C}$ 参数和返回值。</target>
      </trans-unit>
      <trans-unit id="49230">
        <source>可以认为对 $\mathcal{C}$ 的变换存在于所有全局函数的闭包中。</source>
        <target state="needs-translation">可以认为对 $\mathcal{C}$ 的变换存在于所有全局函数的闭包中。</target>
      </trans-unit>
      <trans-unit id="49232">
        <source>这种设计广泛存在于各种组合式框架 (尤其是像 React 这样的前端框架)，但一些缺陷使其并不适合插件化和规模化的场景。</source>
        <target state="needs-translation">这种设计广泛存在于各种组合式框架 (尤其是像 React 这样的前端框架)，但一些缺陷使其并不适合插件化和规模化的场景。</target>
      </trans-unit>
      <trans-unit id="49234">
        <source>首先，所有插件都使用相同的全局函数，意味着不同插件的副作用完全无法区分，因此只能重启整个应用而无法细粒度地控制具体的插件；其次，这种设计意味着全局函数并不纯，因此一旦项目中出现了多例的依赖，整套系统的可靠性就会完全失效！</source>
        <target state="needs-translation">首先，所有插件都使用相同的全局函数，意味着不同插件的副作用完全无法区分，因此只能重启整个应用而无法细粒度地控制具体的插件；其次，这种设计意味着全局函数并不纯，因此一旦项目中出现了多例的依赖，整套系统的可靠性就会完全失效！</target>
      </trans-unit>
      <trans-unit id="49236">
        <source>引入显式 $\mathcal{C}$ 变换会降低应用的可读性，忽略显式 $\mathcal{C}$ 变换又存在上述缺陷。</source>
        <target state="needs-translation">引入显式 $\mathcal{C}$ 变换会降低应用的可读性，忽略显式 $\mathcal{C}$ 变换又存在上述缺陷。</target>
      </trans-unit>
      <trans-unit id="49238">
        <source>那么有没有办法在不增加心智负担的同时编写可靠的插件呢？</source>
        <target state="needs-translation">那么有没有办法在不增加心智负担的同时编写可靠的插件呢？</target>
      </trans-unit>
      <trans-unit id="49240">
        <source>Cordis 通过上下文对象给出了完美的解决方案。</source>
        <target state="needs-translation">Cordis 通过上下文对象给出了完美的解决方案。</target>
      </trans-unit>
      <trans-unit id="49242">
        <source>上下文对象是一个插件中唯一的可变部分，它同时担任了 $\mathcal{C}$ 参数和返回值的角色。</source>
        <target state="needs-translation">上下文对象是一个插件中唯一的可变部分，它同时担任了 $\mathcal{C}$ 参数和返回值的角色。</target>
      </trans-unit>
      <trans-unit id="49244">
        <source>在上面的示例中引入上下文对象，就得到了熟悉的 Koishi 插件：</source>
        <target state="needs-translation">在上面的示例中引入上下文对象，就得到了熟悉的 Koishi 插件：</target>
      </trans-unit>
      <trans-unit id="49246">
        <source>function serve(ctx: Context, config: Config) {
  const server = createServer().listen(config.port)
  ctx.on('restore', () =&gt; server.close())
}</source>
        <target state="needs-translation">function serve(ctx: Context, config: Config) {
  const server = createServer().listen(config.port)
  ctx.on('restore', () =&gt; server.close())
}</target>
      </trans-unit>
      <trans-unit id="49248">
        <source>相应地，我们使用 `ctx.plugin()` 来加载插件：</source>
        <target state="needs-translation">相应地，我们使用 `ctx.plugin()` 来加载插件：</target>
      </trans-unit>
      <trans-unit id="49250">
        <source>ctx.plugin(serve, { port: 80 })</source>
        <target state="needs-translation">ctx.plugin(serve, { port: 80 })</target>
      </trans-unit>
      <trans-unit id="49252">
        <source>这看起来只是把函数和参数调换了个位置，但实际上外侧的 `ctx` 跟插件内部拿到的 `ctx` 并不是同一个值。</source>
        <target state="needs-translation">这看起来只是把函数和参数调换了个位置，但实际上外侧的 `ctx` 跟插件内部拿到的 `ctx` 并不是同一个值。</target>
      </trans-unit>
      <trans-unit id="49254">
        <source>当一个插件被加载时，将会从当前上下文对象上派生出一个新的上下文实例。</source>
        <target state="needs-translation">当一个插件被加载时，将会从当前上下文对象上派生出一个新的上下文实例。</target>
      </trans-unit>
      <trans-unit id="49256">
        <source>子级上下文将管理插件内的全部副作用，而插件整体将作为一个副作用被父级上下文收集。</source>
        <target state="needs-translation">子级上下文将管理插件内的全部副作用，而插件整体将作为一个副作用被父级上下文收集。</target>
      </trans-unit>
      <trans-unit id="49258">
        <source>可以将上下文比作一个副作用的插座，而副作用就是上面的插头。</source>
        <target state="needs-translation">可以将上下文比作一个副作用的插座，而副作用就是上面的插头。</target>
      </trans-unit>
      <trans-unit id="49260">
        <source>当上下文被卸载时，它将会将所有的副作用一一回收。</source>
        <target state="needs-translation">当上下文被卸载时，它将会将所有的副作用一一回收。</target>
      </trans-unit>
      <trans-unit id="49262">
        <source>而插件就是连接到另一个插座的插头，管理着子级上下文的全部副作用。</source>
        <target state="needs-translation">而插件就是连接到另一个插座的插头，管理着子级上下文的全部副作用。</target>
      </trans-unit>
      <trans-unit id="49264">
        <source>除了 `ctx.plugin()` 外，上下文对象上还有许多 API，它们几乎都是某个函数的可逆化版本。</source>
        <target state="needs-translation">除了 `ctx.plugin()` 外，上下文对象上还有许多 API，它们几乎都是某个函数的可逆化版本。</target>
      </trans-unit>
      <trans-unit id="49266">
        <source>例如 `ctx.on()` 是添加监听器的可逆化，`ctx.command()` 是注册指令的可逆化。</source>
        <target state="needs-translation">例如 `ctx.on()` 是添加监听器的可逆化，`ctx.command()` 是注册指令的可逆化。</target>
      </trans-unit>
      <trans-unit id="49268">
        <source>这样一来，开发者只需要调用 `ctx` 上的方法，就可以确保插件的作用是可逆的。</source>
        <target state="needs-translation">这样一来，开发者只需要调用 `ctx` 上的方法，就可以确保插件的作用是可逆的。</target>
      </trans-unit>
      <trans-unit id="49270">
        <source>这种设计同时解决了上述两个缺陷，并且完全不会带来额外的心智负担。</source>
        <target state="needs-translation">这种设计同时解决了上述两个缺陷，并且完全不会带来额外的心智负担。</target>
      </trans-unit>
      <trans-unit id="49272">
        <source>在大多数的插件场景下，开发者甚至完全不需要手动监听 `restore` 事件，就能编写出可逆的插件。</source>
        <target state="needs-translation">在大多数的插件场景下，开发者甚至完全不需要手动监听 `restore` 事件，就能编写出可逆的插件。</target>
      </trans-unit>
      <trans-unit id="49274">
        <source>换句话说，只要框架的能力够强，将某一场景的所有 API 都通过可逆的方式提供，插件开发者就可以在完全不理解这套理论的情况下自然地编写出可逆的插件。</source>
        <target state="needs-translation">换句话说，只要框架的能力够强，将某一场景的所有 API 都通过可逆的方式提供，插件开发者就可以在完全不理解这套理论的情况下自然地编写出可逆的插件。</target>
      </trans-unit>
      <trans-unit id="49276">
        <source>高阶的资源</source>
        <target state="needs-translation">高阶的资源</target>
      </trans-unit>
      <trans-unit id="49278">
        <source>从上面的视角下，我们或许能对资源有一个更深刻的认识。</source>
        <target state="needs-translation">从上面的视角下，我们或许能对资源有一个更深刻的认识。</target>
      </trans-unit>
      <trans-unit id="49280">
        <source>任何一个函数，它要么是纯函数，要么存在副作用，而这个副作用本身就是函数对外占用的资源。</source>
        <target state="needs-translation">任何一个函数，它要么是纯函数，要么存在副作用，而这个副作用本身就是函数对外占用的资源。</target>
      </trans-unit>
      <trans-unit id="49282">
        <source>这些资源可以是底层的内存、文件、进程，也可以是上层的各种封装。</source>
        <target state="needs-translation">这些资源可以是底层的内存、文件、进程，也可以是上层的各种封装。</target>
      </trans-unit>
      <trans-unit id="49284">
        <source>提供了完整回收副作用的能力，就可以称为是「资源安全」的。</source>
        <target state="needs-translation">提供了完整回收副作用的能力，就可以称为是「资源安全」的。</target>
      </trans-unit>
      <trans-unit id="49286">
        <source>那如果一个插件提供了 API 给别的插件使用，这个插件占用资源了吗？</source>
        <target state="needs-translation">那如果一个插件提供了 API 给别的插件使用，这个插件占用资源了吗？</target>
      </trans-unit>
      <trans-unit id="49288">
        <source>是的。</source>
        <target state="needs-translation">是的。</target>
      </trans-unit>
      <trans-unit id="49290">
        <source>因为要想让别的插件使用，别的插件就必然需要访问你提供的 API (而不是别人提供的)。</source>
        <target state="needs-translation">因为要想让别的插件使用，别的插件就必然需要访问你提供的 API (而不是别人提供的)。</target>
      </trans-unit>
      <trans-unit id="49292">
        <source>无论这种访问逻辑是通过什么实现的，提供 API 的插件都需要占用该访问资源。</source>
        <target state="needs-translation">无论这种访问逻辑是通过什么实现的，提供 API 的插件都需要占用该访问资源。</target>
      </trans-unit>
      <trans-unit id="49294">
        <source>进一步，如果这个 API 本身还存在副作用，那提供此 API 的插件其实占用的是一种能占用资源的资源，一种高阶资源。</source>
        <target state="needs-translation">进一步，如果这个 API 本身还存在副作用，那提供此 API 的插件其实占用的是一种能占用资源的资源，一种高阶资源。</target>
      </trans-unit>
      <trans-unit id="49296">
        <source>就如同高阶函数一样，我们的 $\mathcal{C}$ 也可以是高阶的：</source>
        <target state="needs-translation">就如同高阶函数一样，我们的 $\mathcal{C}$ 也可以是高阶的：</target>
      </trans-unit>
      <trans-unit id="49298">
        <source>\begin{matrix}
\mathcal{C}_1=\mathcal{C}_0\times\left(\mathcal{C}_0\to\mathcal{C}_0\right)\\
\mathcal{C}_2=\mathcal{C}_1\times\left(\mathcal{C}_1\to\mathcal{C}_1\right)\\
\cdots\\
\mathcal{C}_{n+1}=\mathcal{C}_n\times\left(\mathcal{C}_n\to\mathcal{C}_n\right)\\
\end{matrix}</source>
        <target state="needs-translation">\begin{matrix}
\mathcal{C}_1=\mathcal{C}_0\times\left(\mathcal{C}_0\to\mathcal{C}_0\right)\\
\mathcal{C}_2=\mathcal{C}_1\times\left(\mathcal{C}_1\to\mathcal{C}_1\right)\\
\cdots\\
\mathcal{C}_{n+1}=\mathcal{C}_n\times\left(\mathcal{C}_n\to\mathcal{C}_n\right)\\
\end{matrix}</target>
      </trans-unit>
      <trans-unit id="49300">
        <source>在 Cordis 中，插件之间默认情况下不存在先后关系。</source>
        <target state="needs-translation">在 Cordis 中，插件之间默认情况下不存在先后关系。</target>
      </trans-unit>
      <trans-unit id="49302">
        <source>换句话说，默认任何两个插件的执行顺序都是可以交换的。</source>
        <target state="needs-translation">换句话说，默认任何两个插件的执行顺序都是可以交换的。</target>
      </trans-unit>
      <trans-unit id="49304">
        <source>如果你想要表达插件之间的依赖关系，则需要通过 **服务 (Service)** 来实现。</source>
        <target state="needs-translation">如果你想要表达插件之间的依赖关系，则需要通过 **服务 (Service)** 来实现。</target>
      </trans-unit>
      <trans-unit id="49306">
        <source>服务用一个字符串表示，可以被插件提供 (provide) 或注入 (inject)。</source>
        <target state="needs-translation">服务用一个字符串表示，可以被插件提供 (provide) 或注入 (inject)。</target>
      </trans-unit>
      <trans-unit id="49308">
        <source>Cordis 通过其自身的机制确保提供任何一对提供 / 注入同名服务的插件的生命周期都是包含关系。</source>
        <target state="needs-translation">Cordis 通过其自身的机制确保提供任何一对提供 / 注入同名服务的插件的生命周期都是包含关系。</target>
      </trans-unit>
      <trans-unit id="49310">
        <source>此外，Cordis 还提供了服务隔离的概念，开发者可以为任何一个服务名称创建隔离上下文，使其内部和外部的插件对于该服务名称无法相互感知和访问。</source>
        <target state="needs-translation">此外，Cordis 还提供了服务隔离的概念，开发者可以为任何一个服务名称创建隔离上下文，使其内部和外部的插件对于该服务名称无法相互感知和访问。</target>
      </trans-unit>
      <trans-unit id="49312">
        <source>畅想：可组合性的本质 {#compose}</source>
        <target state="needs-translation">畅想：可组合性的本质 {#compose}</target>
      </trans-unit>
      <trans-unit id="49314">
        <source>很多人谈论可组合性，主要说的是解耦，也就是将代码拆解到不同函数、不同模块的能力。</source>
        <target state="needs-translation">很多人谈论可组合性，主要说的是解耦，也就是将代码拆解到不同函数、不同模块的能力。</target>
      </trans-unit>
      <trans-unit id="49316">
        <source>但其实我们编写的代码并不是静态的，可组合性可以在更多的维度上定义：</source>
        <target state="needs-translation">但其实我们编写的代码并不是静态的，可组合性可以在更多的维度上定义：</target>
      </trans-unit>
      <trans-unit id="49318">
        <source>逻辑可组合性：代码自身的解耦能力 (常见的理解方式)。</source>
        <target state="needs-translation">逻辑可组合性：代码自身的解耦能力 (常见的理解方式)。</target>
      </trans-unit>
      <trans-unit id="49320">
        <source>时间可组合性：代码可以被同时加载、可以被回收副作用的能力 (本文主要介绍的部分)。</source>
        <target state="needs-translation">时间可组合性：代码可以被同时加载、可以被回收副作用的能力 (本文主要介绍的部分)。</target>
      </trans-unit>
      <trans-unit id="49322">
        <source>空间可组合性：代码之间能够有效声明和隔离依赖关系的能力。</source>
        <target state="needs-translation">空间可组合性：代码之间能够有效声明和隔离依赖关系的能力。</target>
      </trans-unit>
      <trans-unit id="49324">
        <source>我希望借助 Cordis 这个框架，勾勒出软件文明的一个未来。</source>
        <target state="needs-translation">我希望借助 Cordis 这个框架，勾勒出软件文明的一个未来。</target>
      </trans-unit>
      <trans-unit id="49326">
        <source>在这个未来，人们可以按照需求背后的本质逻辑，组合出高效、可靠、易于开发和维护的软件。</source>
        <target state="needs-translation">在这个未来，人们可以按照需求背后的本质逻辑，组合出高效、可靠、易于开发和维护的软件。</target>
      </trans-unit>
      <trans-unit id="49328">
        <source>畅想：在语言层面确保资源安全</source>
        <target state="needs-translation">畅想：在语言层面确保资源安全</target>
      </trans-unit>
      <trans-unit id="49330">
        <source>Rust 声称自己在语言层面确保了内存安全 (具体是不是这里不做讨论)，那么 Cordis 能否在确保资源安全呢？</source>
        <target state="needs-translation">Rust 声称自己在语言层面确保了内存安全 (具体是不是这里不做讨论)，那么 Cordis 能否在确保资源安全呢？</target>
      </trans-unit>
      <trans-unit id="49332">
        <source>很遗憾，目前并不能。</source>
        <target state="needs-translation">很遗憾，目前并不能。</target>
      </trans-unit>
      <trans-unit id="49334">
        <source>开发者只需设置几个全局变量、或者调用一些未被封装过的 API，就可以绕过 Cordis 的保护机制。</source>
        <target state="needs-translation">开发者只需设置几个全局变量、或者调用一些未被封装过的 API，就可以绕过 Cordis 的保护机制。</target>
      </trans-unit>
      <trans-unit id="49336">
        <source>但这并不意味着 Cordis 是无用的。</source>
        <target state="needs-translation">但这并不意味着 Cordis 是无用的。</target>
      </trans-unit>
      <trans-unit id="49338">
        <source>如果未来我们将所有的底层 API 都封装起来，并确保用户只能通过上下文调用，那么 Cordis 就可以确保资源安全了。</source>
        <target state="needs-translation">如果未来我们将所有的底层 API 都封装起来，并确保用户只能通过上下文调用，那么 Cordis 就可以确保资源安全了。</target>
      </trans-unit>
      <trans-unit id="49340">
        <source>一种更好的思路是直接从语言层面加以设计。</source>
        <target state="needs-translation">一种更好的思路是直接从语言层面加以设计。</target>
      </trans-unit>
      <trans-unit id="49342">
        <source>例如可以将全局变量的访问和一些底层 API 视为“不安全”的，那么一个不含 `unsafe` 关键字的代码片段就可以被证明资源安全的了。</source>
        <target state="needs-translation">例如可以将全局变量的访问和一些底层 API 视为“不安全”的，那么一个不含 `unsafe` 关键字的代码片段就可以被证明资源安全的了。</target>
      </trans-unit>
      <trans-unit id="49344">
        <source>我们还可以在编译期间检查出所有的资源安全问题，而不需要等到运行时才发现。</source>
        <target state="needs-translation">我们还可以在编译期间检查出所有的资源安全问题，而不需要等到运行时才发现。</target>
      </trans-unit>
      <trans-unit id="49346">
        <source>少数函数式编程语言实现了 Algebric Effects，可以实现类似资源安全的概念。</source>
        <target state="needs-translation">少数函数式编程语言实现了 Algebric Effects，可以实现类似资源安全的概念。</target>
      </trans-unit>
      <trans-unit id="49348">
        <source>不过受限于函数式语言本身的特性，要让主流的软件开发者接受这种编程范式还需要很长的时间。</source>
        <target state="needs-translation">不过受限于函数式语言本身的特性，要让主流的软件开发者接受这种编程范式还需要很长的时间。</target>
      </trans-unit>
      <trans-unit id="49350">
        <source>相比较而言，Cordis 在设计上能够与主流的 OOP 语言完美结合，并且不需要重构整套系统。</source>
        <target state="needs-translation">相比较而言，Cordis 在设计上能够与主流的 OOP 语言完美结合，并且不需要重构整套系统。</target>
      </trans-unit>
      <trans-unit id="49352">
        <source>任何特定领域的框架都可以通过 Cordis 来实现可逆性，而对应领域的插件开发者也可以在不了解任何数学知识的情况下编写可逆的插件。</source>
        <target state="needs-translation">任何特定领域的框架都可以通过 Cordis 来实现可逆性，而对应领域的插件开发者也可以在不了解任何数学知识的情况下编写可逆的插件。</target>
      </trans-unit>
      <trans-unit id="49354">
        <source>这种渐进性是 Cordis 的一大优势。</source>
        <target state="needs-translation">这种渐进性是 Cordis 的一大优势。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1506" original="/[koishijs.docs] main/zh-CN/cookbook/design/framework.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="49356">
        <source>从元框架到框架</source>
        <target state="needs-translation">从元框架到框架</target>
      </trans-unit>
      <trans-unit id="49358">
        <source>本文档尚未完成。</source>
        <target state="needs-translation">本文档尚未完成。</target>
      </trans-unit>
      <trans-unit id="49360">
        <source>为什么说组合优于继承？</source>
        <target state="needs-translation">为什么说组合优于继承？</target>
      </trans-unit>
      <trans-unit id="49362">
        <source>声明合并相比依赖注入有什么优势？</source>
        <target state="needs-translation">声明合并相比依赖注入有什么优势？</target>
      </trans-unit>
      <trans-unit id="49364">
        <source>如何实现框架层面的继承和组合？</source>
        <target state="needs-translation">如何实现框架层面的继承和组合？</target>
      </trans-unit>
      <trans-unit id="49366">
        <source>:::</source>
        <target state="needs-translation">:::</target>
      </trans-unit>
      <trans-unit id="49368">
        <source>上一篇文章中，我们留下了一个关于可组合性的伏笔——空间可组合性。</source>
        <target state="needs-translation">上一篇文章中，我们留下了一个关于可组合性的伏笔——空间可组合性。</target>
      </trans-unit>
      <trans-unit id="49370">
        <source>本文将会从这个角度触发，解释「服务」这一概念是如何产生的，又是如何切实改善了框架的开发体验的。</source>
        <target state="needs-translation">本文将会从这个角度触发，解释「服务」这一概念是如何产生的，又是如何切实改善了框架的开发体验的。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1508" original="/[koishijs.docs] main/zh-CN/cookbook/design/storage.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="49372">
        <source>零占用的存储</source>
        <target state="needs-translation">零占用的存储</target>
      </trans-unit>
      <trans-unit id="49374">
        <source>插件要想持久化数据有哪些途径？</source>
        <target state="needs-translation">插件要想持久化数据有哪些途径？</target>
      </trans-unit>
      <trans-unit id="49376">
        <source>什么是零占用模式？</source>
        <target state="needs-translation">什么是零占用模式？</target>
      </trans-unit>
      <trans-unit id="49378">
        <source>为什么需要实现零占用？</source>
        <target state="needs-translation">为什么需要实现零占用？</target>
      </trans-unit>
      <trans-unit id="49380">
        <source>:::</source>
        <target state="needs-translation">:::</target>
      </trans-unit>
      <trans-unit id="49382">
        <source>要为一个插件持久化一些数据，除了使用数据库外，更灵活的方式就是使用本地文件。</source>
        <target state="needs-translation">要为一个插件持久化一些数据，除了使用数据库外，更灵活的方式就是使用本地文件。</target>
      </trans-unit>
      <trans-unit id="49384">
        <source>然而到底应该将文件存放在哪里，就是一个值得深入探讨的问题了。</source>
        <target state="needs-translation">然而到底应该将文件存放在哪里，就是一个值得深入探讨的问题了。</target>
      </trans-unit>
      <trans-unit id="49386">
        <source>本文将介绍 Koishi 插件开发时推荐遵循的零占用模式，它是一个兼具扩展性、可移植性和健壮性的最佳实践。</source>
        <target state="needs-translation">本文将介绍 Koishi 插件开发时推荐遵循的零占用模式，它是一个兼具扩展性、可移植性和健壮性的最佳实践。</target>
      </trans-unit>
      <trans-unit id="49388">
        <source>持久化数据的三种途径</source>
        <target state="needs-translation">持久化数据的三种途径</target>
      </trans-unit>
      <trans-unit id="49390">
        <source>要为一个插件持久化一些数据，大致有三种途径：数据库、本地文件和配置项。</source>
        <target state="needs-translation">要为一个插件持久化一些数据，大致有三种途径：数据库、本地文件和配置项。</target>
      </trans-unit>
      <trans-unit id="49392">
        <source>数据库是最常见的数据存储方式。</source>
        <target state="needs-translation">数据库是最常见的数据存储方式。</target>
      </trans-unit>
      <trans-unit id="49394">
        <source>它有着良好的可扩展性，支持高效地查询，并且可以在多个实例间共享数据。</source>
        <target state="needs-translation">它有着良好的可扩展性，支持高效地查询，并且可以在多个实例间共享数据。</target>
      </trans-unit>
      <trans-unit id="49396">
        <source>事实上，绝大多数有持久化需求的插件都应该使用数据库进行存储。</source>
        <target state="needs-translation">事实上，绝大多数有持久化需求的插件都应该使用数据库进行存储。</target>
      </trans-unit>
      <trans-unit id="49398">
        <source>本地文件则更加灵活。</source>
        <target state="needs-translation">本地文件则更加灵活。</target>
      </trans-unit>
      <trans-unit id="49400">
        <source>它可以存储任意类型的数据，且访问速度通常比数据库更快。</source>
        <target state="needs-translation">它可以存储任意类型的数据，且访问速度通常比数据库更快。</target>
      </trans-unit>
      <trans-unit id="49402">
        <source>如果插件存在下载的资源、可执行文件和临时文件，就比较适合使用本地文件进行存储。</source>
        <target state="needs-translation">如果插件存在下载的资源、可执行文件和临时文件，就比较适合使用本地文件进行存储。</target>
      </trans-unit>
      <trans-unit id="49404">
        <source>最后，配置项也是一种持久化数据的方式。</source>
        <target state="needs-translation">最后，配置项也是一种持久化数据的方式。</target>
      </trans-unit>
      <trans-unit id="49406">
        <source>不过相比前两种方式，配置项既无法存储大规模数据，又受到数据结构的限制。</source>
        <target state="needs-translation">不过相比前两种方式，配置项既无法存储大规模数据，又受到数据结构的限制。</target>
      </trans-unit>
      <trans-unit id="49408">
        <source>只有当这些数据确实是配置 (即只会被管理员更改) 时，我们才建议使用配置项。</source>
        <target state="needs-translation">只有当这些数据确实是配置 (即只会被管理员更改) 时，我们才建议使用配置项。</target>
      </trans-unit>
      <trans-unit id="49410">
        <source>关于配置项持久化的例子，可以参考 [commands](../appendix/commands.md) 插件。</source>
        <target state="needs-translation">关于配置项持久化的例子，可以参考 [commands](../appendix/commands.md) 插件。</target>
      </trans-unit>
      <trans-unit id="49412">
        <source>在编写插件时，我们应该根据数据的类型和用途，选择合适的持久化方式。</source>
        <target state="needs-translation">在编写插件时，我们应该根据数据的类型和用途，选择合适的持久化方式。</target>
      </trans-unit>
      <trans-unit id="49414">
        <source>关于存储位置的讨论</source>
        <target state="needs-translation">关于存储位置的讨论</target>
      </trans-unit>
      <trans-unit id="49416">
        <source>一旦你决定使用本地文件管理数据，那么下一个问题就是将这些文件存放在哪里。</source>
        <target state="needs-translation">一旦你决定使用本地文件管理数据，那么下一个问题就是将这些文件存放在哪里。</target>
      </trans-unit>
      <trans-unit id="49418">
        <source>应当避免的情况</source>
        <target state="needs-translation">应当避免的情况</target>
      </trans-unit>
      <trans-unit id="49420">
        <source>在我们开始介绍最佳实践之前，首先让我们展示两种你绝对不应该使用的位置。</source>
        <target state="needs-translation">在我们开始介绍最佳实践之前，首先让我们展示两种你绝对不应该使用的位置。</target>
      </trans-unit>
      <trans-unit id="49422">
        <source>第一，**永远不要使用绝对路径**。</source>
        <target state="needs-translation">第一，**永远不要使用绝对路径**。</target>
      </trans-unit>
      <trans-unit id="49424">
        <source>这件事非常容易理解，只需要考虑一下 win32 和 POSIX 之间的路径差异，你就会知道一旦使用了绝对路径，你的插件就注定无法在不同的机器上正常工作。</source>
        <target state="needs-translation">这件事非常容易理解，只需要考虑一下 win32 和 POSIX 之间的路径差异，你就会知道一旦使用了绝对路径，你的插件就注定无法在不同的机器上正常工作。</target>
      </trans-unit>
      <trans-unit id="49426">
        <source>第二，**永远不要使用 (基于插件目录) 的相对路径**。</source>
        <target state="needs-translation">第二，**永远不要使用 (基于插件目录) 的相对路径**。</target>
      </trans-unit>
      <trans-unit id="49428">
        <source>Koishi 的插件实际上就是一个个 npm 包，它们存储于 `node_modules` 目录下。</source>
        <target state="needs-translation">Koishi 的插件实际上就是一个个 npm 包，它们存储于 `node_modules` 目录下。</target>
      </trans-unit>
      <trans-unit id="49430">
        <source>如果你在插件目录下存放数据，那么当任何插件被更新时，这些数据都可能会丢失。</source>
        <target state="needs-translation">如果你在插件目录下存放数据，那么当任何插件被更新时，这些数据都可能会丢失。</target>
      </trans-unit>
      <trans-unit id="49432">
        <source>更严重的是，如果你的插件占用了 `node_modules` 目录下的文件，整个实例将无法安装、卸载、更新任何插件，这种情况下你的插件将被标记为不安全。</source>
        <target state="needs-translation">更严重的是，如果你的插件占用了 `node_modules` 目录下的文件，整个实例将无法安装、卸载、更新任何插件，这种情况下你的插件将被标记为不安全。</target>
      </trans-unit>
      <trans-unit id="49434">
        <source>如果你的插件已经因此被标记为不安全，请尝试排除上述依赖，并使用以下替代方案：</source>
        <target state="needs-translation">如果你的插件已经因此被标记为不安全，请尝试排除上述依赖，并使用以下替代方案：</target>
      </trans-unit>
      <trans-unit id="49436">
        <source>更换为 JS 原生实现或 WebAssembly 实现的包 (它们不存在占用问题)。</source>
        <target state="needs-translation">更换为 JS 原生实现或 WebAssembly 实现的包 (它们不存在占用问题)。</target>
      </trans-unit>
      <trans-unit id="49438">
        <source>将 `.node` 或其他存在占用问题的可执行文件存放于[全局路径](#global)下。</source>
        <target state="needs-translation">将 `.node` 或其他存在占用问题的可执行文件存放于[全局路径](#global)下。</target>
      </trans-unit>
      <trans-unit id="49440">
        <source>:::</source>
        <target state="needs-translation">:::</target>
      </trans-unit>
      <trans-unit id="49442">
        <source>零占用的 Koishi</source>
        <target state="needs-translation">零占用的 Koishi</target>
      </trans-unit>
      <trans-unit id="49444">
        <source>零占用的 Koishi 是指，给定一个正在运行的 Koishi 实例，移除该实例目录下的所有内容，实例应按照预期的方式保持工作。</source>
        <target state="needs-translation">零占用的 Koishi 是指，给定一个正在运行的 Koishi 实例，移除该实例目录下的所有内容，实例应按照预期的方式保持工作。</target>
      </trans-unit>
      <trans-unit id="49446">
        <source>具体而言，实例内的所有模块，包括 Koishi 本体及所有插件，均在设计时对此情况做了考虑，并编写了相应的处理逻辑：</source>
        <target state="needs-translation">具体而言，实例内的所有模块，包括 Koishi 本体及所有插件，均在设计时对此情况做了考虑，并编写了相应的处理逻辑：</target>
      </trans-unit>
      <trans-unit id="49448">
        <source>Koishi 本体在启动时读取了配置文件。</source>
        <target state="needs-translation">Koishi 本体在启动时读取了配置文件。</target>
      </trans-unit>
      <trans-unit id="49450">
        <source>在启动后删除该文件，Koishi 保持工作。</source>
        <target state="needs-translation">在启动后删除该文件，Koishi 保持工作。</target>
      </trans-unit>
      <trans-unit id="49452">
        <source>存储大文件的插件在要求时加载、解析大文件并返回结果给用户。</source>
        <target state="needs-translation">存储大文件的插件在要求时加载、解析大文件并返回结果给用户。</target>
      </trans-unit>
      <trans-unit id="64478">
        <source>删除该文件后，插件无法顺利解析，但插件返回可读的错误文本或输出可读的错误日志，不会造成 Koishi 崩溃。</source>
        <target state="needs-translation">删除该文件后，插件无法顺利解析，但插件返回可读的错误文本或输出可读的错误日志，不会造成 Koishi 崩溃。</target>
      </trans-unit>
      <trans-unit id="49456">
        <source>外部程序包装插件依赖外部的可执行文件进行工作。</source>
        <target state="needs-translation">外部程序包装插件依赖外部的可执行文件进行工作。</target>
      </trans-unit>
      <trans-unit id="49458">
        <source>可执行文件在运行时无法解除占用，故应当预先被转移至实例目录之外。</source>
        <target state="needs-translation">可执行文件在运行时无法解除占用，故应当预先被转移至实例目录之外。</target>
      </trans-unit>
      <trans-unit id="49460">
        <source>实例运行时，实例目录内不存在被占用的可执行文件。</source>
        <target state="needs-translation">实例运行时，实例目录内不存在被占用的可执行文件。</target>
      </trans-unit>
      <trans-unit id="49462">
        <source>实现了零占用模式的 Koishi 项目将获得以下优点：</source>
        <target state="needs-translation">实现了零占用模式的 Koishi 项目将获得以下优点：</target>
      </trans-unit>
      <trans-unit id="49464">
        <source>**自更新**：可以通过插件更新 Koishi 及其依赖。</source>
        <target state="needs-translation">**自更新**：可以通过插件更新 Koishi 及其依赖。</target>
      </trans-unit>
      <trans-unit id="49466">
        <source>在更新依赖的整个过程中，Koishi 及所有插件仍保持可用。</source>
        <target state="needs-translation">在更新依赖的整个过程中，Koishi 及所有插件仍保持可用。</target>
      </trans-unit>
      <trans-unit id="49468">
        <source>目前已有 [market](../../plugins/console/market.md) 插件实现了此特性。</source>
        <target state="needs-translation">目前已有 [market](../../plugins/console/market.md) 插件实现了此特性。</target>
      </trans-unit>
      <trans-unit id="49470">
        <source>**健壮性**：文件暂时无法访问不会导致 Koishi 崩溃。</source>
        <target state="needs-translation">**健壮性**：文件暂时无法访问不会导致 Koishi 崩溃。</target>
      </trans-unit>
      <trans-unit id="49472">
        <source>这对实例目录使用网络映射的场景更友好。</source>
        <target state="needs-translation">这对实例目录使用网络映射的场景更友好。</target>
      </trans-unit>
      <trans-unit id="49474">
        <source>**滚动更新**：可以先升级实例目录，然后滚动更新 Koishi。</source>
        <target state="needs-translation">**滚动更新**：可以先升级实例目录，然后滚动更新 Koishi。</target>
      </trans-unit>
      <trans-unit id="49476">
        <source>这将极大地提高 Koishi 的可用性。</source>
        <target state="needs-translation">这将极大地提高 Koishi 的可用性。</target>
      </trans-unit>
      <trans-unit id="49478">
        <source>最佳实践</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">最佳實作</target>
      </trans-unit>
      <trans-unit id="49480">
        <source>在最简单的情况下，只要一个 Koishi 插件不使用实例目录内的任何文件，那么该插件就已自动实现了零占用。</source>
        <target state="needs-translation">在最简单的情况下，只要一个 Koishi 插件不使用实例目录内的任何文件，那么该插件就已自动实现了零占用。</target>
      </trans-unit>
      <trans-unit id="49482">
        <source>如果插件确实需要使用文件，我们提供了两种方案作为最佳实践。</source>
        <target state="needs-translation">如果插件确实需要使用文件，我们提供了两种方案作为最佳实践。</target>
      </trans-unit>
      <trans-unit id="49484">
        <source>使用实例目录存储持久化数据 {#instance}</source>
        <target state="needs-translation">使用实例目录存储持久化数据 {#instance}</target>
      </trans-unit>
      <trans-unit id="49486">
        <source>在大多数持久化场景下，要存储的数据都是与实例相关、且不会被占用的文件。</source>
        <target state="needs-translation">在大多数持久化场景下，要存储的数据都是与实例相关、且不会被占用的文件。</target>
      </trans-unit>
      <trans-unit id="49488">
        <source>这种情况下，我们建议将数据存放于实例目录下的特定目录中。</source>
        <target state="needs-translation">这种情况下，我们建议将数据存放于实例目录下的特定目录中。</target>
      </trans-unit>
      <trans-unit id="49490">
        <source>根据数据的用途，这个目录可以是：</source>
        <target state="needs-translation">根据数据的用途，这个目录可以是：</target>
      </trans-unit>
      <trans-unit id="49492">
        <source>`data`：存放数据文件 (可以在不同实例间迁移)。</source>
        <target state="needs-translation">`data`：存放数据文件 (可以在不同实例间迁移)。</target>
      </trans-unit>
      <trans-unit id="49494">
        <source>`cache`：存放缓存文件 (没有迁移价值的持久化数据)。</source>
        <target state="needs-translation">`cache`：存放缓存文件 (没有迁移价值的持久化数据)。</target>
      </trans-unit>
      <trans-unit id="49496">
        <source>`temp`：存放临时文件 (非持久化数据，下一次启动即会失效)。</source>
        <target state="needs-translation">`temp`：存放临时文件 (非持久化数据，下一次启动即会失效)。</target>
      </trans-unit>
      <trans-unit id="49498">
        <source>这样做的好处是，当你需要迁移实例时，只需要将 `data` 目录复制到新的实例目录下即可。</source>
        <target state="needs-translation">这样做的好处是，当你需要迁移实例时，只需要将 `data` 目录复制到新的实例目录下即可。</target>
      </trans-unit>
      <trans-unit id="49500">
        <source>如果你是插件开发者，可以使用 [`ctx.baseDir`](../../api/core/context.md#ctx-basedir) 获取实例目录。</source>
        <target state="needs-translation">如果你是插件开发者，可以使用 [`ctx.baseDir`](../../api/core/context.md#ctx-basedir) 获取实例目录。</target>
      </trans-unit>
      <trans-unit id="49502">
        <source>通常你也不应该直接存放在上述路径的顶层，而是为自己的插件创建一个子目录，就像这样：</source>
        <target state="needs-translation">通常你也不应该直接存放在上述路径的顶层，而是为自己的插件创建一个子目录，就像这样：</target>
      </trans-unit>
      <trans-unit id="49504">
        <source>import * as fs from 'fs/promises'
import * as path from 'path'

export async function apply(ctx: Context) {
  const root = path.join(ctx.baseDir, 'data', 'my-plugin')
  await fs.mkdir(root, { recursive: true })
  // 在 root 目录下存储数据
}</source>
        <target state="needs-translation">import * as fs from 'fs/promises'
import * as path from 'path'

export async function apply(ctx: Context) {
  const root = path.join(ctx.baseDir, 'data', 'my-plugin')
  await fs.mkdir(root, { recursive: true })
  // 在 root 目录下存储数据
}</target>
      </trans-unit>
      <trans-unit id="49506">
        <source>使用全局路径存储可执行文件 {#global}</source>
        <target state="needs-translation">使用全局路径存储可执行文件 {#global}</target>
      </trans-unit>
      <trans-unit id="49508">
        <source>如果你的插件需要依赖特定的可执行文件运行，那么你应该将该文件存放于全局路径下。</source>
        <target state="needs-translation">如果你的插件需要依赖特定的可执行文件运行，那么你应该将该文件存放于全局路径下。</target>
      </trans-unit>
      <trans-unit id="49510">
        <source>由于全局路径不是实例目录的一部分，因此它不会破坏零占用模式。</source>
        <target state="needs-translation">由于全局路径不是实例目录的一部分，因此它不会破坏零占用模式。</target>
      </trans-unit>
      <trans-unit id="49512">
        <source>这样做的另一个好处是，如果你有多个 Koishi 实例，那么该文件只需要下载一次，就可以在所有实例中使用。</source>
        <target state="needs-translation">这样做的另一个好处是，如果你有多个 Koishi 实例，那么该文件只需要下载一次，就可以在所有实例中使用。</target>
      </trans-unit>
      <trans-unit id="49514">
        <source>这是因为绝大多数的可执行文件都不是跨平台的，我们需要根据不同的系统和架构选择不同的文件。</source>
        <target state="needs-translation">这是因为绝大多数的可执行文件都不是跨平台的，我们需要根据不同的系统和架构选择不同的文件。</target>
      </trans-unit>
      <trans-unit id="49516">
        <source>而我们显然也不应该在插件中自带所有平台的版本，那样既会拖慢安装速度，也会占用额外的硬盘空间。</source>
        <target state="needs-translation">而我们显然也不应该在插件中自带所有平台的版本，那样既会拖慢安装速度，也会占用额外的硬盘空间。</target>
      </trans-unit>
      <trans-unit id="49518">
        <source>因此，最佳实践就需要我们自行下载可执行文件了。</source>
        <target state="needs-translation">因此，最佳实践就需要我们自行下载可执行文件了。</target>
      </trans-unit>
      <trans-unit id="49520">
        <source>事实上，其他资源类型 (非可执行文件) 如果需要从网络下载，也可以采用下面介绍的办法。</source>
        <target state="needs-translation">事实上，其他资源类型 (非可执行文件) 如果需要从网络下载，也可以采用下面介绍的办法。</target>
      </trans-unit>
      <trans-unit id="49522">
        <source>:::</source>
        <target state="needs-translation">:::</target>
      </trans-unit>
      <trans-unit id="49524">
        <source>要获取一个通用的全局路径，可以使用 [env-paths](https://npmjs.com/package/env-paths) 库：</source>
        <target state="needs-translation">要获取一个通用的全局路径，可以使用 [env-paths](https://npmjs.com/package/env-paths) 库：</target>
      </trans-unit>
      <trans-unit id="49526">
        <source>import envPaths from 'env-paths'
import * as path from 'path'

const root = path.join(envPaths('some-binary').data, version)</source>
        <target state="needs-translation">import envPaths from 'env-paths'
import * as path from 'path'

const root = path.join(envPaths('some-binary').data, version)</target>
      </trans-unit>
      <trans-unit id="49528">
        <source>接下来，我们来设计依赖的下载逻辑。</source>
        <target state="needs-translation">接下来，我们来设计依赖的下载逻辑。</target>
      </trans-unit>
      <trans-unit id="49530">
        <source>通常有两种方案：安装时下载和运行时下载。</source>
        <target state="needs-translation">通常有两种方案：安装时下载和运行时下载。</target>
      </trans-unit>
      <trans-unit id="49532">
        <source>安装时下载：通过配置插件的 `postinstall` 脚本，在安装时就将依赖下载到本地。</source>
        <target state="needs-translation">安装时下载：通过配置插件的 `postinstall` 脚本，在安装时就将依赖下载到本地。</target>
      </trans-unit>
      <trans-unit id="49534">
        <source>优点：可以在整合包中提供开箱即用的体验 (不用在启动后读条)。</source>
        <target state="needs-translation">优点：可以在整合包中提供开箱即用的体验 (不用在启动后读条)。</target>
      </trans-unit>
      <trans-unit id="49536">
        <source>缺点：增加插件的安装时间，并且在依赖体积较大时显著提高安装失败的概率。</source>
        <target state="needs-translation">缺点：增加插件的安装时间，并且在依赖体积较大时显著提高安装失败的概率。</target>
      </trans-unit>
      <trans-unit id="49538">
        <source>建议仅对于连同依赖体积不超过 10 MB 的插件使用此方案。</source>
        <target state="needs-translation">建议仅对于连同依赖体积不超过 10 MB 的插件使用此方案。</target>
      </trans-unit>
      <trans-unit id="49540">
        <source>运行时下载：在插件启动后，通过 `downloads` 服务将依赖下载到本地。</source>
        <target state="needs-translation">运行时下载：在插件启动后，通过 `downloads` 服务将依赖下载到本地。</target>
      </trans-unit>
      <trans-unit id="49542">
        <source>优点：插件安装迅速且稳定；分片和断点续传功能确保在网络不稳定时也能安装成功。</source>
        <target state="needs-translation">优点：插件安装迅速且稳定；分片和断点续传功能确保在网络不稳定时也能安装成功。</target>
      </trans-unit>
      <trans-unit id="49544">
        <source>缺点：第一次启动时需要等待一段时间 (在控制台底部的状态栏显示为进度条)。</source>
        <target state="needs-translation">缺点：第一次启动时需要等待一段时间 (在控制台底部的状态栏显示为进度条)。</target>
      </trans-unit>
      <trans-unit id="49546">
        <source>如果采用安装时下载的方案，我们首先需要改动 `package.json` 中的 `scripts` 字段，添加一个 `postinstall` 脚本：</source>
        <target state="needs-translation">如果采用安装时下载的方案，我们首先需要改动 `package.json` 中的 `scripts` 字段，添加一个 `postinstall` 脚本：</target>
      </trans-unit>
      <trans-unit id="49548">
        <source>{
  &quot;scripts&quot;: {
    &quot;postinstall&quot;: &quot;node lib/download&quot;
  }
}</source>
        <target state="needs-translation">{
  &quot;scripts&quot;: {
    &quot;postinstall&quot;: &quot;node lib/download&quot;
  }
}</target>
      </trans-unit>
      <trans-unit id="49550">
        <source>async function download() {
  // 下载所需的文件到 root 目录下
}

if (require.main === module) {
  download()
}</source>
        <target state="needs-translation">async function download() {
  // 下载所需的文件到 root 目录下
}

if (require.main === module) {
  download()
}</target>
      </trans-unit>
      <trans-unit id="49552">
        <source>在大多数情况下，我们都推荐使用运行时下载的方案。</source>
        <target state="needs-translation">在大多数情况下，我们都推荐使用运行时下载的方案。</target>
      </trans-unit>
      <trans-unit id="49554">
        <source>运行时下载的文档尚未编写。</source>
        <target state="needs-translation">运行时下载的文档尚未编写。</target>
      </trans-unit>
      <trans-unit id="49556">
        <source>畅想：实例移动与重命名</source>
        <target state="needs-translation">畅想：实例移动与重命名</target>
      </trans-unit>
      <trans-unit id="49558">
        <source>其实实现了零占用以后，Koishi 还可以实现一个~~虽然听起来没什么用但是~~非常酷的功能：实例移动与重命名。</source>
        <target state="needs-translation">其实实现了零占用以后，Koishi 还可以实现一个~~虽然听起来没什么用但是~~非常酷的功能：实例移动与重命名。</target>
      </trans-unit>
      <trans-unit id="49560">
        <source>具体来说，任何一个 Koishi 实例可以在自身运行时，将实例目录重命名或移动到其他位置，并且在移动后所有插件继续正常工作。</source>
        <target state="needs-translation">具体来说，任何一个 Koishi 实例可以在自身运行时，将实例目录重命名或移动到其他位置，并且在移动后所有插件继续正常工作。</target>
      </trans-unit>
      <trans-unit id="49562">
        <source>这要怎么实现呢？</source>
        <target state="needs-translation">这要怎么实现呢？</target>
      </trans-unit>
      <trans-unit id="49564">
        <source>很简单，只需把 `baseDir` 也视为服务即可。</source>
        <target state="needs-translation">很简单，只需把 `baseDir` 也视为服务即可。</target>
      </trans-unit>
      <trans-unit id="49566">
        <source>由于所有依赖实例目录的插件都会使用 `baseDir` 获取实例目录，因此只要监听这个路径的变动，并将 `ctx.baseDir` 设置为新的路径，即可触发这些插件的重启逻辑。</source>
        <target state="needs-translation">由于所有依赖实例目录的插件都会使用 `baseDir` 获取实例目录，因此只要监听这个路径的变动，并将 `ctx.baseDir` 设置为新的路径，即可触发这些插件的重启逻辑。</target>
      </trans-unit>
      <trans-unit id="49568">
        <source>整个流程中，零占用模式保证了移动操作的成功性。</source>
        <target state="needs-translation">整个流程中，零占用模式保证了移动操作的成功性。</target>
      </trans-unit>
      <trans-unit id="49570">
        <source>尽管实现起来非常简单，但目前我们并没有实现这个功能。</source>
        <target state="needs-translation">尽管实现起来非常简单，但目前我们并没有实现这个功能。</target>
      </trans-unit>
      <trans-unit id="49572">
        <source>因为我们希望保留这部分的设计空间，以便在未来并入 Cordis 标准库，并借此实现更多的功能。</source>
        <target state="needs-translation">因为我们希望保留这部分的设计空间，以便在未来并入 Cordis 标准库，并借此实现更多的功能。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1510" original="/[koishijs.docs] main/zh-CN/cookbook/design/structure.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="49574">
        <source>项目架构</source>
        <target state="needs-translation">项目架构</target>
      </trans-unit>
      <trans-unit id="49576">
        <source>本文档正在编写中，内容可能不完整或者不准确。</source>
        <target state="needs-translation">本文档正在编写中，内容可能不完整或者不准确。</target>
      </trans-unit>
      <trans-unit id="49578">
        <source>大家在编写 Koishi 插件的时候想必都会从 Koishi 导入各种东西。</source>
        <target state="needs-translation">大家在编写 Koishi 插件的时候想必都会从 Koishi 导入各种东西。</target>
      </trans-unit>
      <trans-unit id="49580">
        <source>然而，Koishi 也并不是单一的包，而是拆分为了多个仓库和模块进行开发的。</source>
        <target state="needs-translation">然而，Koishi 也并不是单一的包，而是拆分为了多个仓库和模块进行开发的。</target>
      </trans-unit>
      <trans-unit id="49582">
        <source>我们熟悉的 `Command`, `Context`, `Session` 和 `Schema` 就来自于不同的包中。</source>
        <target state="needs-translation">我们熟悉的 `Command`, `Context`, `Session` 和 `Schema` 就来自于不同的包中。</target>
      </trans-unit>
      <trans-unit id="49584">
        <source>而为了简化插件开发流程并提高可靠性，Koishi 将这些包统一重新导出，这才有了我们熟悉的 Koishi 框架。</source>
        <target state="needs-translation">而为了简化插件开发流程并提高可靠性，Koishi 将这些包统一重新导出，这才有了我们熟悉的 Koishi 框架。</target>
      </trans-unit>
      <trans-unit id="49586">
        <source>下面就让我们用一张图介绍 Koishi 的底层架构吧。</source>
        <target state="needs-translation">下面就让我们用一张图介绍 Koishi 的底层架构吧。</target>
      </trans-unit>
      <trans-unit id="49588">
        <source>这里应该有一张架构图但是还没有画。</source>
        <target state="needs-translation">这里应该有一张架构图但是还没有画。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1512" original="/[koishijs.docs] main/zh-CN/cookbook/design/workspace.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="49590">
        <source>深入工作区</source>
        <target state="needs-translation">深入工作区</target>
      </trans-unit>
      <trans-unit id="49592">
        <source>什么是工作区仓库？</source>
        <target state="needs-translation">什么是工作区仓库？</target>
      </trans-unit>
      <trans-unit id="49594">
        <source>相比传统开发模式有什么优势？</source>
        <target state="needs-translation">相比传统开发模式有什么优势？</target>
      </trans-unit>
      <trans-unit id="49596">
        <source>如何在本地维护大量来自不同仓库的插件？</source>
        <target state="needs-translation">如何在本地维护大量来自不同仓库的插件？</target>
      </trans-unit>
      <trans-unit id="49598">
        <source>:::</source>
        <target state="needs-translation">:::</target>
      </trans-unit>
      <trans-unit id="49600">
        <source>本文要介绍的主题是 Yakumo。</source>
        <target state="needs-translation">本文要介绍的主题是 Yakumo。</target>
      </trans-unit>
      <trans-unit id="49602">
        <source>Yakumo 是一个由 Koishi 官方团队开发的项目管理工具，它内置于模板项目中，可以在一个本地目录中管理来自多个仓库的工作区。</source>
        <target state="needs-translation">Yakumo 是一个由 Koishi 官方团队开发的项目管理工具，它内置于模板项目中，可以在一个本地目录中管理来自多个仓库的工作区。</target>
      </trans-unit>
      <trans-unit id="49604">
        <source>Yakumo 的基本用法已经在 [工作区开发](../../guide/develop/workspace.md) 一节中介绍过了。</source>
        <target state="needs-translation">Yakumo 的基本用法已经在 [工作区开发](../../guide/develop/workspace.md) 一节中介绍过了。</target>
      </trans-unit>
      <trans-unit id="49606">
        <source>本文主要介绍其背后的设计思想和高级功能。</source>
        <target state="needs-translation">本文主要介绍其背后的设计思想和高级功能。</target>
      </trans-unit>
      <trans-unit id="49608">
        <source>Yakumo 这个词对应于日语中的“八云”。</source>
        <target state="needs-translation">Yakumo 这个词对应于日语中的“八云”。</target>
      </trans-unit>
      <trans-unit id="49610">
        <source>在东方 Project 中，八云紫是境界的妖怪，幻想乡的贤者之一。</source>
        <target state="needs-translation">在东方 Project 中，八云紫是境界的妖怪，幻想乡的贤者之一。</target>
      </trans-unit>
      <trans-unit id="49612">
        <source>她的式神八云蓝甚至也有着自己的式神橙。</source>
        <target state="needs-translation">她的式神八云蓝甚至也有着自己的式神橙。</target>
      </trans-unit>
      <trans-unit id="49614">
        <source>我们使用 Yakumo 这个名字，意在表示这个工具具备管理嵌套工作区的能力。</source>
        <target state="needs-translation">我们使用 Yakumo 这个名字，意在表示这个工具具备管理嵌套工作区的能力。</target>
      </trans-unit>
      <trans-unit id="49616">
        <source>背景介绍</source>
        <target state="needs-translation">背景介绍</target>
      </trans-unit>
      <trans-unit id="49618">
        <source>在我们介绍工作区仓库机制之前，先来看看目前的主流开发模式。</source>
        <target state="needs-translation">在我们介绍工作区仓库机制之前，先来看看目前的主流开发模式。</target>
      </trans-unit>
      <trans-unit id="49620">
        <source>独立仓库</source>
        <target state="needs-translation">独立仓库</target>
      </trans-unit>
      <trans-unit id="49622">
        <source>在此模式下，每一个包都由一个独立的 Git 仓库进行管理。</source>
        <target state="needs-translation">在此模式下，每一个包都由一个独立的 Git 仓库进行管理。</target>
      </trans-unit>
      <trans-unit id="49624">
        <source>这种开发模式存在许多缺点：</source>
        <target state="needs-translation">这种开发模式存在许多缺点：</target>
      </trans-unit>
      <trans-unit id="49626">
        <source>每个包的依赖都需要单独安装，这会占据大量重复的磁盘空间。</source>
        <target state="needs-translation">每个包的依赖都需要单独安装，这会占据大量重复的磁盘空间。</target>
      </trans-unit>
      <trans-unit id="49628">
        <source>每个包需要独立管理，无法使用统一的工具对所有包进行调试、更新和发布。</source>
        <target state="needs-translation">每个包需要独立管理，无法使用统一的工具对所有包进行调试、更新和发布。</target>
      </trans-unit>
      <trans-unit id="49630">
        <source>当修改了某一个库的源码后，必须经过构建和发布才能在其他项目中使用。</source>
        <target state="needs-translation">当修改了某一个库的源码后，必须经过构建和发布才能在其他项目中使用。</target>
      </trans-unit>
      <trans-unit id="49632">
        <source>既无法直接在真实项目中运行源代码，也无法对多个仓库的源码进行联合调试。</source>
        <target state="needs-translation">既无法直接在真实项目中运行源代码，也无法对多个仓库的源码进行联合调试。</target>
      </trans-unit>
      <trans-unit id="49634">
        <source>复合仓库 (Monorepo)</source>
        <target state="needs-translation">复合仓库 (Monorepo)</target>
      </trans-unit>
      <trans-unit id="49636">
        <source>认识到上述问题后，Node.js 社区随即发展出了复合仓库 (monorepo) 的开发模式。</source>
        <target state="needs-translation">认识到上述问题后，Node.js 社区随即发展出了复合仓库 (monorepo) 的开发模式。</target>
      </trans-unit>
      <trans-unit id="49638">
        <source>在此模式下，多个相关联的包交由同一个 Git 仓库进行管理。</source>
        <target state="needs-translation">在此模式下，多个相关联的包交由同一个 Git 仓库进行管理。</target>
      </trans-unit>
      <trans-unit id="49640">
        <source>每一个包都被视为一个**工作区 (Workspace)**，而整个仓库同样视为一个根工作区。</source>
        <target state="needs-translation">每一个包都被视为一个**工作区 (Workspace)**，而整个仓库同样视为一个根工作区。</target>
      </trans-unit>
      <trans-unit id="49642">
        <source>可以看到，上述几个缺点得到了很大程度的解决：</source>
        <target state="needs-translation">可以看到，上述几个缺点得到了很大程度的解决：</target>
      </trans-unit>
      <trans-unit id="49644">
        <source>根工作区会安装所有子工作区的依赖，不会出现重复安装，因此问题 1 得到了解决。</source>
        <target state="needs-translation">根工作区会安装所有子工作区的依赖，不会出现重复安装，因此问题 1 得到了解决。</target>
      </trans-unit>
      <trans-unit id="49646">
        <source>一些工具 (例如 Lerna) 可以对所有工作区进行统一的管理，因此问题 2 得到了解决。</source>
        <target state="needs-translation">一些工具 (例如 Lerna) 可以对所有工作区进行统一的管理，因此问题 2 得到了解决。</target>
      </trans-unit>
      <trans-unit id="49648">
        <source>可以将根工作区视为一个真实项目，其中的包可以联合调试，因此问题 3 得到了解决。</source>
        <target state="needs-translation">可以将根工作区视为一个真实项目，其中的包可以联合调试，因此问题 3 得到了解决。</target>
      </trans-unit>
      <trans-unit id="49650">
        <source>目前主流的 Node.js 包管理器 npm 和 yarn 都已经提供了标准化的复合仓库支持 (pnpm 同样支持工作区，但与标准实现不一致)。</source>
        <target state="needs-translation">目前主流的 Node.js 包管理器 npm 和 yarn 都已经提供了标准化的复合仓库支持 (pnpm 同样支持工作区，但与标准实现不一致)。</target>
      </trans-unit>
      <trans-unit id="49652">
        <source>一些其他语言也提供了类似的能力 (例如 Rust 的 Cargo)。</source>
        <target state="needs-translation">一些其他语言也提供了类似的能力 (例如 Rust 的 Cargo)。</target>
      </trans-unit>
      <trans-unit id="49654">
        <source>子模块 (Submodule)</source>
        <target state="needs-translation">子模块 (Submodule)</target>
      </trans-unit>
      <trans-unit id="49656">
        <source>子模块 (Submodule) 在 Node.js 生态中很少出现，不过对于其他语言还是比较常见的。</source>
        <target state="needs-translation">子模块 (Submodule) 在 Node.js 生态中很少出现，不过对于其他语言还是比较常见的。</target>
      </trans-unit>
      <trans-unit id="49658">
        <source>在此模式下，每一个包仍然由一个独立的 Git 仓库进行管理，但是在根仓库中使用子模块的方式引入。</source>
        <target state="needs-translation">在此模式下，每一个包仍然由一个独立的 Git 仓库进行管理，但是在根仓库中使用子模块的方式引入。</target>
      </trans-unit>
      <trans-unit id="49660">
        <source>这种开发模式的优缺点与独立仓库类似。</source>
        <target state="needs-translation">这种开发模式的优缺点与独立仓库类似。</target>
      </trans-unit>
      <trans-unit id="49662">
        <source>尽管问题 2 得到了解决，子模块也引入了额外的麻烦。</source>
        <target state="needs-translation">尽管问题 2 得到了解决，子模块也引入了额外的麻烦。</target>
      </trans-unit>
      <trans-unit id="49664">
        <source>由于子模块的设计缺陷，在切换仓库分支、重命名父级目录等操作前，都需要妥善维护子模块的状态。</source>
        <target state="needs-translation">由于子模块的设计缺陷，在切换仓库分支、重命名父级目录等操作前，都需要妥善维护子模块的状态。</target>
      </trans-unit>
      <trans-unit id="49666">
        <source>一旦初学者处理不当，就可能导致父仓库完全不可用。</source>
        <target state="needs-translation">一旦初学者处理不当，就可能导致父仓库完全不可用。</target>
      </trans-unit>
      <trans-unit id="49668">
        <source>认识 Yakumo</source>
        <target state="needs-translation">认识 Yakumo</target>
      </trans-unit>
      <trans-unit id="49670">
        <source>在这个背景下，我们设计并实现了 Yakumo 这一项目管理工具。</source>
        <target state="needs-translation">在这个背景下，我们设计并实现了 Yakumo 这一项目管理工具。</target>
      </trans-unit>
      <trans-unit id="49672">
        <source>工作区仓库</source>
        <target state="needs-translation">工作区仓库</target>
      </trans-unit>
      <trans-unit id="49674">
        <source>复合仓库是一种非常优秀的开发模式，但并不能充分满足 Koishi 开发的需要。</source>
        <target state="needs-translation">复合仓库是一种非常优秀的开发模式，但并不能充分满足 Koishi 开发的需要。</target>
      </trans-unit>
      <trans-unit id="49676">
        <source>首先，将根工作区视为一个真实项目意味着开发者应当提交自己创建的模板项目。</source>
        <target state="needs-translation">首先，将根工作区视为一个真实项目意味着开发者应当提交自己创建的模板项目。</target>
      </trans-unit>
      <trans-unit id="49678">
        <source>模板项目中有各种配置文件，其中存在着大量的隐私数据。</source>
        <target state="needs-translation">模板项目中有各种配置文件，其中存在着大量的隐私数据。</target>
      </trans-unit>
      <trans-unit id="49680">
        <source>初学者很容易因为失误而提交这些文件，造成隐私数据的泄露。</source>
        <target state="needs-translation">初学者很容易因为失误而提交这些文件，造成隐私数据的泄露。</target>
      </trans-unit>
      <trans-unit id="49682">
        <source>而实际上，在大多数场景下，只有插件源码才是具备发布价值的，模板项目的根工作区只是个开发环境，不应当被提交。</source>
        <target state="needs-translation">而实际上，在大多数场景下，只有插件源码才是具备发布价值的，模板项目的根工作区只是个开发环境，不应当被提交。</target>
      </trans-unit>
      <trans-unit id="49684">
        <source>其次，Koishi 非常看重二次开发体验 (即对其他开发者编写的插件进行调试和修改)。</source>
        <target state="needs-translation">其次，Koishi 非常看重二次开发体验 (即对其他开发者编写的插件进行调试和修改)。</target>
      </trans-unit>
      <trans-unit id="49686">
        <source>开发者可能编写了非常多的插件，所依赖的环境也可能十分复杂。</source>
        <target state="needs-translation">开发者可能编写了非常多的插件，所依赖的环境也可能十分复杂。</target>
      </trans-unit>
      <trans-unit id="49688">
        <source>如果开发者直接发布完整的本地开发目录，那么进行二次开发时就可能为了自己不需要的插件安装额外的依赖，甚至可能因为环境不同而无法顺利开发。</source>
        <target state="needs-translation">如果开发者直接发布完整的本地开发目录，那么进行二次开发时就可能为了自己不需要的插件安装额外的依赖，甚至可能因为环境不同而无法顺利开发。</target>
      </trans-unit>
      <trans-unit id="49690">
        <source>在二次开发中应当允许只下载自己需要的插件，而不是开发者编写的所有插件。</source>
        <target state="needs-translation">在二次开发中应当允许只下载自己需要的插件，而不是开发者编写的所有插件。</target>
      </trans-unit>
      <trans-unit id="49692">
        <source>为了解决上面的两点问题，Koishi 提供了基于工作区仓库的开发模式。</source>
        <target state="needs-translation">为了解决上面的两点问题，Koishi 提供了基于工作区仓库的开发模式。</target>
      </trans-unit>
      <trans-unit id="49694">
        <source>该模式同样采用工作区的理念，但与传统的复合仓库的不同点在于，根工作区要求开发者使用多个 Git 仓库来管理本地开发环境。</source>
        <target state="needs-translation">该模式同样采用工作区的理念，但与传统的复合仓库的不同点在于，根工作区要求开发者使用多个 Git 仓库来管理本地开发环境。</target>
      </trans-unit>
      <trans-unit id="49696">
        <source>插件开发者不再需要将模板项目提交到 Git 仓库中，而是改为发布其中的每一个插件。</source>
        <target state="needs-translation">插件开发者不再需要将模板项目提交到 Git 仓库中，而是改为发布其中的每一个插件。</target>
      </trans-unit>
      <trans-unit id="49698">
        <source>一个标准的 Koishi 模板项目大概是这样：</source>
        <target state="needs-translation">一个标准的 Koishi 模板项目大概是这样：</target>
      </trans-unit>
      <trans-unit id="49700">
        <source>root
├── external
│   ├── foo                     # 插件仓库
│   │   ├── src
│   │   │   └── index.ts
│   │   └── package.json
│   ├── bar                     # 插件仓库
│   │   ├── src
│   │   │   └── index.ts
│   │   └── package.json
│   └── baz                     # 插件仓库
│       ├── src
│       │   └── index.ts
│       └── package.json
└── package.json</source>
        <target state="needs-translation">root
├── external
│   ├── foo                     # 插件仓库
│   │   ├── src
│   │   │   └── index.ts
│   │   └── package.json
│   ├── bar                     # 插件仓库
│   │   ├── src
│   │   │   └── index.ts
│   │   └── package.json
│   └── baz                     # 插件仓库
│       ├── src
│       │   └── index.ts
│       └── package.json
└── package.json</target>
      </trans-unit>
      <trans-unit id="49702">
        <source>这种做法的好处是显而易见的。</source>
        <target state="needs-translation">这种做法的好处是显而易见的。</target>
      </trans-unit>
      <trans-unit id="49704">
        <source>首先，由于开发者无需提交根工作区，因此也不会有隐私数据泄露的风险。</source>
        <target state="needs-translation">首先，由于开发者无需提交根工作区，因此也不会有隐私数据泄露的风险。</target>
      </trans-unit>
      <trans-unit id="49706">
        <source>其次，二次开发时也可以按需下载插件，不必为了不需要的插件安装依赖或配置环境。</source>
        <target state="needs-translation">其次，二次开发时也可以按需下载插件，不必为了不需要的插件安装依赖或配置环境。</target>
      </trans-unit>
      <trans-unit id="49708">
        <source>如果你想要分发的不是插件而是成品机器人本身，那么你就需要提交根工作区了。</source>
        <target state="needs-translation">如果你想要分发的不是插件而是成品机器人本身，那么你就需要提交根工作区了。</target>
      </trans-unit>
      <trans-unit id="49710">
        <source>像这种包含根工作区的仓库被称为 [整合包](../practice/bundle.md)，你可以在对应的文档中了解更多信息。</source>
        <target state="needs-translation">像这种包含根工作区的仓库被称为 [整合包](../practice/bundle.md)，你可以在对应的文档中了解更多信息。</target>
      </trans-unit>
      <trans-unit id="49712">
        <source>嵌套工作区</source>
        <target state="needs-translation">嵌套工作区</target>
      </trans-unit>
      <trans-unit id="49714">
        <source>当多个插件之间存在耦合关系时，为每个插件分别创建一个 Git 仓库就显得不太合理了。</source>
        <target state="needs-translation">当多个插件之间存在耦合关系时，为每个插件分别创建一个 Git 仓库就显得不太合理了。</target>
      </trans-unit>
      <trans-unit id="49716">
        <source>好在 Yakumo 支持嵌套的工作区，这使得你依然具备在一个仓库中管理多个插件的能力。</source>
        <target state="needs-translation">好在 Yakumo 支持嵌套的工作区，这使得你依然具备在一个仓库中管理多个插件的能力。</target>
      </trans-unit>
      <trans-unit id="49718">
        <source>当你使用工作区仓库进行开发时，每一个仓库都是本地环境下的一个工作区。</source>
        <target state="needs-translation">当你使用工作区仓库进行开发时，每一个仓库都是本地环境下的一个工作区。</target>
      </trans-unit>
      <trans-unit id="49720">
        <source>如果我们希望一个仓库管理多个插件，那么这个仓库同时也是一个根工作区，这意味着工作区是嵌套使用的。</source>
        <target state="needs-translation">如果我们希望一个仓库管理多个插件，那么这个仓库同时也是一个根工作区，这意味着工作区是嵌套使用的。</target>
      </trans-unit>
      <trans-unit id="49722">
        <source>root
├── external
│   ├── foo                     # 普通的插件仓库
│   │   ├── src
│   │   │   └── index.ts
│   │   └── package.json
│   └── qux                     # 含有子工作区的插件仓库
│       ├── packages
│       │   ├── bar
│       │   │   ├── src
│       │   │   │   └── index.ts
│       │   │   └── package.json
│       │   └── baz
│       │       ├── src
│       │       │   └── index.ts
│       │       └── package.json
│       └── package.json
└── package.json</source>
        <target state="needs-translation">root
├── external
│   ├── foo                     # 普通的插件仓库
│   │   ├── src
│   │   │   └── index.ts
│   │   └── package.json
│   └── qux                     # 含有子工作区的插件仓库
│       ├── packages
│       │   ├── bar
│       │   │   ├── src
│       │   │   │   └── index.ts
│       │   │   └── package.json
│       │   └── baz
│       │       ├── src
│       │       │   └── index.ts
│       │       └── package.json
│       └── package.json
└── package.json</target>
      </trans-unit>
      <trans-unit id="49724">
        <source>在上面的例子中，我们的本地开发环境中有两个插件仓库，其中 `external/foo` 是一个普通的插件仓库，而 `external/qux` 则是一个含有子工作区的插件仓库。</source>
        <target state="needs-translation">在上面的例子中，我们的本地开发环境中有两个插件仓库，其中 `external/foo` 是一个普通的插件仓库，而 `external/qux` 则是一个含有子工作区的插件仓库。</target>
      </trans-unit>
      <trans-unit id="49726">
        <source>其中我们使用 `packages` 目录来管理其中的多个插件。</source>
        <target state="needs-translation">其中我们使用 `packages` 目录来管理其中的多个插件。</target>
      </trans-unit>
      <trans-unit id="49728">
        <source>每一个仓库都是一个完整的工作区，既可以在本地进行联合调试，也可以在代码托管平台上持续集成。</source>
        <target state="needs-translation">每一个仓库都是一个完整的工作区，既可以在本地进行联合调试，也可以在代码托管平台上持续集成。</target>
      </trans-unit>
      <trans-unit id="49730">
        <source>更有趣的是，我们甚至可以在本地的子工作区中进一步使用嵌套工作区：</source>
        <target state="needs-translation">更有趣的是，我们甚至可以在本地的子工作区中进一步使用嵌套工作区：</target>
      </trans-unit>
      <trans-unit id="49732">
        <source>root
├── external
│   ├── foo                     # 普通的插件仓库
│   │   ├── src
│   │   │   └── index.ts
│   │   └── package.json
│   └── qux                     # 含有子工作区的插件仓库
│       ├── external
│       │   ├── alpha           # 普通的插件仓库
│       │   │   ├── src
│       │   │   │   └── index.ts
│       │   │   └── package.json
│       │   └── beta            # 含有子工作区的插件仓库
│       │       ├── packages
│       │       │   ├── gamma
│       │       │   │   ├── src
│       │       │   │   │   └── index.ts
│       │       │   │   └── package.json
│       │       │   └── delta
│       │       │       ├── src
│       │       │       │   └── index.ts
│       │       │       └── package.json
│       │       └── package.json
│       ├── packages
│       │   ├── bar
│       │   │   ├── src
│       │   │   │   └── index.ts
│       │   │   └── package.json
│       │   └── baz
│       │       ├── src
│       │       │   └── index.ts
│       │       └── package.json
│       └── package.json
└── package.json</source>
        <target state="needs-translation">root
├── external
│   ├── foo                     # 普通的插件仓库
│   │   ├── src
│   │   │   └── index.ts
│   │   └── package.json
│   └── qux                     # 含有子工作区的插件仓库
│       ├── external
│       │   ├── alpha           # 普通的插件仓库
│       │   │   ├── src
│       │   │   │   └── index.ts
│       │   │   └── package.json
│       │   └── beta            # 含有子工作区的插件仓库
│       │       ├── packages
│       │       │   ├── gamma
│       │       │   │   ├── src
│       │       │   │   │   └── index.ts
│       │       │   │   └── package.json
│       │       │   └── delta
│       │       │       ├── src
│       │       │       │   └── index.ts
│       │       │       └── package.json
│       │       └── package.json
│       ├── packages
│       │   ├── bar
│       │   │   ├── src
│       │   │   │   └── index.ts
│       │   │   └── package.json
│       │   └── baz
│       │       ├── src
│       │       │   └── index.ts
│       │       └── package.json
│       └── package.json
└── package.json</target>
      </trans-unit>
      <trans-unit id="49734">
        <source>由于每一级仓库都会忽略 `external` 目录但接受其中子目录作为子工作区，我们可以将要开发的仓库进行任意的嵌套。</source>
        <target state="needs-translation">由于每一级仓库都会忽略 `external` 目录但接受其中子目录作为子工作区，我们可以将要开发的仓库进行任意的嵌套。</target>
      </trans-unit>
      <trans-unit id="49736">
        <source>当你本地环境下的仓库较多时，全部放到顶层 `external` 目录下可能会显得有些混乱。</source>
        <target state="needs-translation">当你本地环境下的仓库较多时，全部放到顶层 `external` 目录下可能会显得有些混乱。</target>
      </trans-unit>
      <trans-unit id="49738">
        <source>此时你可以将仓库按照功能进行分组，使结构更加清晰。</source>
        <target state="needs-translation">此时你可以将仓库按照功能进行分组，使结构更加清晰。</target>
      </trans-unit>
      <trans-unit id="49740">
        <source>目前各包管理中只有 Yarn 2 以上版本支持了嵌套工作区，但 Yakumo 为所有主流包管理器都补全了嵌套工作区支持。</source>
        <target state="needs-translation">目前各包管理中只有 Yarn 2 以上版本支持了嵌套工作区，但 Yakumo 为所有主流包管理器都补全了嵌套工作区支持。</target>
      </trans-unit>
      <trans-unit id="49742">
        <source>你可以将其理解成适用于嵌套工作区的 Lerna。</source>
        <target state="needs-translation">你可以将其理解成适用于嵌套工作区的 Lerna。</target>
      </trans-unit>
      <trans-unit id="49744">
        <source>闲谈：为什么不提交 lockfile？</source>
        <target state="needs-translation">闲谈：为什么不提交 lockfile？</target>
      </trans-unit>
      <trans-unit id="49746">
        <source>打开任何一个工作区目录下的 `.gitignore` 文件，你会发现其中忽略了各种包管理器的 lockfile (例如 `package-lock.json` 和 `yarn.lock`)。</source>
        <target state="needs-translation">打开任何一个工作区目录下的 `.gitignore` 文件，你会发现其中忽略了各种包管理器的 lockfile (例如 `package-lock.json` 和 `yarn.lock`)。</target>
      </trans-unit>
      <trans-unit id="49748">
        <source>乍一看你或许会觉得 Koishi 的做法与主流的项目管理模式不同，但实际上这套解决方案既经过了深思熟虑，也有着长期的实践检验。</source>
        <target state="needs-translation">乍一看你或许会觉得 Koishi 的做法与主流的项目管理模式不同，但实际上这套解决方案既经过了深思熟虑，也有着长期的实践检验。</target>
      </trans-unit>
      <trans-unit id="49750">
        <source>在我们回答标题的问题之前，首先我们需要知道为什么主流方案推荐提交 lockfile。</source>
        <target state="needs-translation">在我们回答标题的问题之前，首先我们需要知道为什么主流方案推荐提交 lockfile。</target>
      </trans-unit>
      <trans-unit id="49752">
        <source>在大多数情况下，我们的 `package.json` 中描述的依赖版本并不是一个具体的值，而是一个范围 (例如在 SemVer 的语义下，`^4.5.6` 可以匹配 `&gt;=4.5.6` 且 `&lt;5.0.0` 的任何版本号)。</source>
        <target state="needs-translation">在大多数情况下，我们的 `package.json` 中描述的依赖版本并不是一个具体的值，而是一个范围 (例如在 SemVer 的语义下，`^4.5.6` 可以匹配 `&gt;=4.5.6` 且 `&lt;5.0.0` 的任何版本号)。</target>
      </trans-unit>
      <trans-unit id="49754">
        <source>这样设计的好处是，如果项目中存在大量的嵌套依赖，那么使用范围描述就可以让包管理器有更大的自由去选择符合要求的版本，减少了要下载的依赖数量，优化了安装效率和打包体积。</source>
        <target state="needs-translation">这样设计的好处是，如果项目中存在大量的嵌套依赖，那么使用范围描述就可以让包管理器有更大的自由去选择符合要求的版本，减少了要下载的依赖数量，优化了安装效率和打包体积。</target>
      </trans-unit>
      <trans-unit id="49756">
        <source>然而，上面的设计也引入了额外的问题。</source>
        <target state="needs-translation">然而，上面的设计也引入了额外的问题。</target>
      </trans-unit>
      <trans-unit id="49758">
        <source>由于这个范围描述的不确定性，在不同的时间、不同的环境下安装时，可能会得到不同的依赖树。</source>
        <target state="needs-translation">由于这个范围描述的不确定性，在不同的时间、不同的环境下安装时，可能会得到不同的依赖树。</target>
      </trans-unit>
      <trans-unit id="49760">
        <source>这种不一致性不仅可能体现在运行结果上，其中的多例问题更是会直接影响软件的启动。</source>
        <target state="needs-translation">这种不一致性不仅可能体现在运行结果上，其中的多例问题更是会直接影响软件的启动。</target>
      </trans-unit>
      <trans-unit id="49762">
        <source>lockfile 的作用是锁定依赖的版本。</source>
        <target state="needs-translation">lockfile 的作用是锁定依赖的版本。</target>
      </trans-unit>
      <trans-unit id="49764">
        <source>在理想情况下，提交了 lockfile 的仓库可以确保在任何时间、任何环境下安装，总能得到相同的依赖树。</source>
        <target state="needs-translation">在理想情况下，提交了 lockfile 的仓库可以确保在任何时间、任何环境下安装，总能得到相同的依赖树。</target>
      </trans-unit>
      <trans-unit id="49766">
        <source>它对于项目的稳定运行是不可或缺的。</source>
        <target state="needs-translation">它对于项目的稳定运行是不可或缺的。</target>
      </trans-unit>
      <trans-unit id="49768">
        <source>说完了 lockfile 的必要性，接下来我们来看看为什么 Koishi 不推荐提交 lockfile。</source>
        <target state="needs-translation">说完了 lockfile 的必要性，接下来我们来看看为什么 Koishi 不推荐提交 lockfile。</target>
      </trans-unit>
      <trans-unit id="49770">
        <source>首先，lockfile 本身就阻止了使用工作区仓库开发。</source>
        <target state="needs-translation">首先，lockfile 本身就阻止了使用工作区仓库开发。</target>
      </trans-unit>
      <trans-unit id="49772">
        <source>如果提交 lockfile 就意味着开发者需要为每一个仓库安装完整的依赖，这与工作区的初衷相悖。</source>
        <target state="needs-translation">如果提交 lockfile 就意味着开发者需要为每一个仓库安装完整的依赖，这与工作区的初衷相悖。</target>
      </trans-unit>
      <trans-unit id="49774">
        <source>此外，lockfile 还会阻止在子工作区内部进行 patch 和 link，这也破坏了工作区所期望的开发体验。</source>
        <target state="needs-translation">此外，lockfile 还会阻止在子工作区内部进行 patch 和 link，这也破坏了工作区所期望的开发体验。</target>
      </trans-unit>
      <trans-unit id="49776">
        <source>最后，关于依赖树不一致导致多例和版本移动问题。</source>
        <target state="needs-translation">最后，关于依赖树不一致导致多例和版本移动问题。</target>
      </trans-unit>
      <trans-unit id="49778">
        <source>Cordis v3 更新以后，Koishi 生态中的所有包都已经实现了无副作用，因此即便发生了多例也完全不会影响运行。</source>
        <target state="needs-translation">Cordis v3 更新以后，Koishi 生态中的所有包都已经实现了无副作用，因此即便发生了多例也完全不会影响运行。</target>
      </trans-unit>
      <trans-unit id="49780">
        <source>至于版本移动问题，很遗憾的是，即使提交了 lockfile 该问题也依然存在。</source>
        <target state="needs-translation">至于版本移动问题，很遗憾的是，即使提交了 lockfile 该问题也依然存在。</target>
      </trans-unit>
      <trans-unit id="49782">
        <source>既然开发者已经注定需要手动修复依赖树了，那么只维护一棵依赖树显然是更好的选择。</source>
        <target state="needs-translation">既然开发者已经注定需要手动修复依赖树了，那么只维护一棵依赖树显然是更好的选择。</target>
      </trans-unit>
      <trans-unit id="49784">
        <source>也有人会提出提交 lockfile 可以提高 CI 效率的观点。</source>
        <target state="needs-translation">也有人会提出提交 lockfile 可以提高 CI 效率的观点。</target>
      </trans-unit>
      <trans-unit id="49786">
        <source>实际上，这种效率依然是手动维护依赖树换来的。</source>
        <target state="needs-translation">实际上，这种效率依然是手动维护依赖树换来的。</target>
      </trans-unit>
      <trans-unit id="49788">
        <source>我们推荐的方案是使用 `package.json` 作为缓存键，对所有包管理器生成文件进行缓存。</source>
        <target state="needs-translation">我们推荐的方案是使用 `package.json` 作为缓存键，对所有包管理器生成文件进行缓存。</target>
      </trans-unit>
      <trans-unit id="49790">
        <source>在缓存命中时，此方案可以获得与有 lockfile 完全相同的效率；而当缓存未命中时，此方案可以确保整个项目是从零安装的，反而杜绝了多例和版本移动问题。</source>
        <target state="needs-translation">在缓存命中时，此方案可以获得与有 lockfile 完全相同的效率；而当缓存未命中时，此方案可以确保整个项目是从零安装的，反而杜绝了多例和版本移动问题。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1514" original="/[koishijs.docs] main/zh-CN/cookbook/index.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="49792">
        <source>进阶指南</source>
        <target state="needs-translation">进阶指南</target>
      </trans-unit>
      <trans-unit id="49794">
        <source>欢迎来到 Koishi 开发文档的进阶篇！</source>
        <target state="needs-translation">欢迎来到 Koishi 开发文档的进阶篇！</target>
      </trans-unit>
      <trans-unit id="49796">
        <source>在 [开发指南](../guide/index.md) 中，我们已经系统地介绍了 Koishi 的基本用法。</source>
        <target state="needs-translation">在 [开发指南](../guide/index.md) 中，我们已经系统地介绍了 Koishi 的基本用法。</target>
      </trans-unit>
      <trans-unit id="49798">
        <source>而进阶指南则会以专题的形式，深入探讨 Koishi 的设计原理和最佳实践。</source>
        <target state="needs-translation">而进阶指南则会以专题的形式，深入探讨 Koishi 的设计原理和最佳实践。</target>
      </trans-unit>
      <trans-unit id="49800">
        <source>Koishi 的一些思想对于从其他框架迁移过来的开发者来说或许是颠覆性的。</source>
        <target state="needs-translation">Koishi 的一些思想对于从其他框架迁移过来的开发者来说或许是颠覆性的。</target>
      </trans-unit>
      <trans-unit id="49802">
        <source>但我必须要说的是，我们并不是为了应用和推广这些所谓的“设计模式”而编写的 Koishi；正相反，Koishi 是先在多年的发展中形成了这些实践，而后才将其总结为这些理论。</source>
        <target state="needs-translation">但我必须要说的是，我们并不是为了应用和推广这些所谓的“设计模式”而编写的 Koishi；正相反，Koishi 是先在多年的发展中形成了这些实践，而后才将其总结为这些理论。</target>
      </trans-unit>
      <trans-unit id="49804">
        <source>我们也意识到，这些理论的价值也并不局限于 Koishi，因此我们将其总结为这篇指南。</source>
        <target state="needs-translation">我们也意识到，这些理论的价值也并不局限于 Koishi，因此我们将其总结为这篇指南。</target>
      </trans-unit>
      <trans-unit id="49806">
        <source>如果你是其他框架的开发者 (甚至不必是机器人框架)，在阅读这些专题文章的过程中，我们的想法能对你有些许启发，那将是我们最大的荣幸。</source>
        <target state="needs-translation">如果你是其他框架的开发者 (甚至不必是机器人框架)，在阅读这些专题文章的过程中，我们的想法能对你有些许启发，那将是我们最大的荣幸。</target>
      </trans-unit>
      <trans-unit id="49808">
        <source>本篇指南会大致分为两个部分。</source>
        <target state="needs-translation">本篇指南会大致分为两个部分。</target>
      </trans-unit>
      <trans-unit id="49810">
        <source>第一部分将介绍 Koishi 的架构设计、核心思想和运行原理。</source>
        <target state="needs-translation">第一部分将介绍 Koishi 的架构设计、核心思想和运行原理。</target>
      </trans-unit>
      <trans-unit id="49812">
        <source>第二部分则会对一些常见的开发场景提供 Koishi 生态下的最佳实践。</source>
        <target state="needs-translation">第二部分则会对一些常见的开发场景提供 Koishi 生态下的最佳实践。</target>
      </trans-unit>
      <trans-unit id="49814">
        <source>各个专题之间没有严格的顺序关系，你可以根据自己的需求，选择性地阅读本篇指南。</source>
        <target state="needs-translation">各个专题之间没有严格的顺序关系，你可以根据自己的需求，选择性地阅读本篇指南。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1516" original="/[koishijs.docs] main/zh-CN/cookbook/message.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="49816">
        <source>消息处理</source>
        <target state="needs-translation">消息处理</target>
      </trans-unit>
      <trans-unit id="49818">
        <source>我们已经熟悉了 Koishi 的一些基本概念，比如事件、中间件和指令等，那么他们的关系是什么呢？</source>
        <target state="needs-translation">我们已经熟悉了 Koishi 的一些基本概念，比如事件、中间件和指令等，那么他们的关系是什么呢？</target>
      </trans-unit>
      <trans-unit id="49820">
        <source>上面的生命周期图也同样告诉了我们答案：**中间件由内置监听器管理，而指令由内置中间件管理**。</source>
        <target state="needs-translation">上面的生命周期图也同样告诉了我们答案：**中间件由内置监听器管理，而指令由内置中间件管理**。</target>
      </trans-unit>
      <trans-unit id="49822">
        <source>没错，当 message 事件被发送到各个上下文的监听器上时，绑定在 App 上的内置监听器将会将这个事件逐一交由中间件进行处理。</source>
        <target state="needs-translation">没错，当 message 事件被发送到各个上下文的监听器上时，绑定在 App 上的内置监听器将会将这个事件逐一交由中间件进行处理。</target>
      </trans-unit>
      <trans-unit id="49824">
        <source>全部处理完成后会触发一个 after-middleware 事件。</source>
        <target state="needs-translation">全部处理完成后会触发一个 after-middleware 事件。</target>
      </trans-unit>
      <trans-unit id="49826">
        <source>因为我们通常不需要直接监听 message 事件 (使用中间件往往是更好的实现)，after-middleware 事件的触发通常意味着你对一条消息的处理已经完成。</source>
        <target state="needs-translation">因为我们通常不需要直接监听 message 事件 (使用中间件往往是更好的实现)，after-middleware 事件的触发通常意味着你对一条消息的处理已经完成。</target>
      </trans-unit>
      <trans-unit id="49828">
        <source>我们的测试插件 @koishijs/plugin-mock 就是基于这种逻辑实现了它的会话 API。</source>
        <target state="needs-translation">我们的测试插件 @koishijs/plugin-mock 就是基于这种逻辑实现了它的会话 API。</target>
      </trans-unit>
      <trans-unit id="49830">
        <source>内置消息监听器</source>
        <target state="needs-translation">内置消息监听器</target>
      </trans-unit>
      <trans-unit id="49832">
        <source>message 事件触发，进入中间件处理流程</source>
        <target state="needs-translation">message 事件触发，进入中间件处理流程</target>
      </trans-unit>
      <trans-unit id="49834">
        <source>根据上下文从中间件池中筛选出要执行的中间件序列</source>
        <target state="needs-translation">根据上下文从中间件池中筛选出要执行的中间件序列</target>
      </trans-unit>
      <trans-unit id="49836">
        <source>逐一执行中间件：</source>
        <target state="needs-translation">逐一执行中间件：</target>
      </trans-unit>
      <trans-unit id="49838">
        <source>内置中间件是理论上第一个注册的中间件 (下接 [内置中间件](#内置中间件))</source>
        <target state="needs-translation">内置中间件是理论上第一个注册的中间件 (下接 [内置中间件](#内置中间件))</target>
      </trans-unit>
      <trans-unit id="49840">
        <source>通过 `ctx.middleware(cb, true)` 注册的中间件会插在队列的更前面</source>
        <target state="needs-translation">通过 `ctx.middleware(cb, true)` 注册的中间件会插在队列的更前面</target>
      </trans-unit>
      <trans-unit id="49842">
        <source>临时中间件会直接插在当前序列的尾端，并不会影响中间件池本身</source>
        <target state="needs-translation">临时中间件会直接插在当前序列的尾端，并不会影响中间件池本身</target>
      </trans-unit>
      <trans-unit id="49844">
        <source>如果执行中遇到错误或未调用 `next` 函数，会停止后续中间件的执行</source>
        <target state="needs-translation">如果执行中遇到错误或未调用 `next` 函数，会停止后续中间件的执行</target>
      </trans-unit>
      <trans-unit id="49846">
        <source>触发 [middleware](../api/core/events.md#事件：middleware) 事件</source>
        <target state="needs-translation">触发 [middleware](../api/core/events.md#事件：middleware) 事件</target>
      </trans-unit>
      <trans-unit id="49848">
        <source>更新当前用户和群的缓冲数据 (参见 [按需加载与自动更新](../guide/database/builtin.md#按需加载与自动更新))</source>
        <target state="needs-translation">更新当前用户和群的缓冲数据 (参见 [按需加载与自动更新](../guide/database/builtin.md#按需加载与自动更新))</target>
      </trans-unit>
      <trans-unit id="49850">
        <source>内置中间件</source>
        <target state="needs-translation">内置中间件</target>
      </trans-unit>
      <trans-unit id="49852">
        <source>从前缀中匹配 at 机器人，nickname 或 prefix</source>
        <target state="needs-translation">从前缀中匹配 at 机器人，nickname 或 prefix</target>
      </trans-unit>
      <trans-unit id="49854">
        <source>预处理消息内容，生成 [`session.stripped`](../api/core/session.md#session-stripped)</source>
        <target state="needs-translation">预处理消息内容，生成 [`session.stripped`](../api/core/session.md#session-stripped)</target>
      </trans-unit>
      <trans-unit id="49856">
        <source>触发 [before-parse](../api/core/events.md#事件：before-parse) 事件，尝试解析消息内容 ([快捷匹配](../guide/basic/command.md#快捷匹配) 的解析也在此处完成)</source>
        <target state="needs-translation">触发 [before-parse](../api/core/events.md#事件：before-parse) 事件，尝试解析消息内容 ([快捷匹配](../guide/basic/command.md#快捷匹配) 的解析也在此处完成)</target>
      </trans-unit>
      <trans-unit id="49858">
        <source>如果数据库存在：</source>
        <target state="needs-translation">如果数据库存在：</target>
      </trans-unit>
      <trans-unit id="49860">
        <source>触发 [before-attach-channel](../api/core/events.md#事件：before-attach-channel) 事件</source>
        <target state="needs-translation">触发 [before-attach-channel](../api/core/events.md#事件：before-attach-channel) 事件</target>
      </trans-unit>
      <trans-unit id="49862">
        <source>获取频道数据并存储于 [`session.channel`](../api/core/session.md#session-channel)</source>
        <target state="needs-translation">获取频道数据并存储于 [`session.channel`](../api/core/session.md#session-channel)</target>
      </trans-unit>
      <trans-unit id="49864">
        <source>根据 flags, assignee 等字段判断是否应该处理该信息，如果不应该则直接返回</source>
        <target state="needs-translation">根据 flags, assignee 等字段判断是否应该处理该信息，如果不应该则直接返回</target>
      </trans-unit>
      <trans-unit id="49866">
        <source>触发 [attach-channel](../api/core/events.md#事件：attach-channel) 事件 (用户可以在其中同步地更新群数据，或中止执行后续操作)</source>
        <target state="needs-translation">触发 [attach-channel](../api/core/events.md#事件：attach-channel) 事件 (用户可以在其中同步地更新群数据，或中止执行后续操作)</target>
      </trans-unit>
      <trans-unit id="49868">
        <source>触发 [before-attach-user](../api/core/events.md#事件：before-attach-user) 事件</source>
        <target state="needs-translation">触发 [before-attach-user](../api/core/events.md#事件：before-attach-user) 事件</target>
      </trans-unit>
      <trans-unit id="49870">
        <source>获取用户数据并存储于 [`session.user`](../api/core/session.md#session-user)</source>
        <target state="needs-translation">获取用户数据并存储于 [`session.user`](../api/core/session.md#session-user)</target>
      </trans-unit>
      <trans-unit id="49872">
        <source>根据 flags 等字段判断是否应该处理该信息，如果不应该则直接返回</source>
        <target state="needs-translation">根据 flags 等字段判断是否应该处理该信息，如果不应该则直接返回</target>
      </trans-unit>
      <trans-unit id="49874">
        <source>触发 [attach-user](../api/core/events.md#事件：attach-user) 事件 (用户可以在其中同步地更新群和用户数据，或中止执行后续操作)</source>
        <target state="needs-translation">触发 [attach-user](../api/core/events.md#事件：attach-user) 事件 (用户可以在其中同步地更新群和用户数据，或中止执行后续操作)</target>
      </trans-unit>
      <trans-unit id="49876">
        <source>如果解析出指令：执行该指令 (下接 [指令执行流程](#指令执行流程))</source>
        <target state="needs-translation">如果解析出指令：执行该指令 (下接 [指令执行流程](#指令执行流程))</target>
      </trans-unit>
      <trans-unit id="49878">
        <source>尝试解析出候选指令，如果成功则显示候选项 (参见 [模糊匹配](../manual/recipe/execution.md#模糊匹配))</source>
        <target state="needs-translation">尝试解析出候选指令，如果成功则显示候选项 (参见 [模糊匹配](../manual/recipe/execution.md#模糊匹配))</target>
      </trans-unit>
      <trans-unit id="49880">
        <source>在以上过程中，无论是解析指令还是出发内置的 before-attach-* 钩子都可能用到 [parse](../api/core/events.md#事件：parse) 事件。</source>
        <target state="needs-translation">在以上过程中，无论是解析指令还是出发内置的 before-attach-* 钩子都可能用到 [parse](../api/core/events.md#事件：parse) 事件。</target>
      </trans-unit>
      <trans-unit id="49882">
        <source>指令执行流程</source>
        <target state="needs-translation">指令执行流程</target>
      </trans-unit>
      <trans-unit id="49884">
        <source>如果解析过程中存在错误 (如非法参数等)，直接返回错误信息</source>
        <target state="needs-translation">如果解析过程中存在错误 (如非法参数等)，直接返回错误信息</target>
      </trans-unit>
      <trans-unit id="49886">
        <source>逐一调用 check 回调函数，直到返回值不为 `undefined`</source>
        <target state="needs-translation">逐一调用 check 回调函数，直到返回值不为 `undefined`</target>
      </trans-unit>
      <trans-unit id="49888">
        <source>触发 [before-command](../api/core/events.md#事件：before-command) 事件：</source>
        <target state="needs-translation">触发 [before-command](../api/core/events.md#事件：before-command) 事件：</target>
      </trans-unit>
      <trans-unit id="49890">
        <source>如果是 -h, --help 则直接显示帮助信息 (参见 [查看帮助](../manual/usage/command.md#查看帮助))</source>
        <target state="needs-translation">如果是 -h, --help 则直接显示帮助信息 (参见 [查看帮助](../manual/usage/command.md#查看帮助))</target>
      </trans-unit>
      <trans-unit id="49892">
        <source>根据配置检查用户权限和调用记录</source>
        <target state="needs-translation">根据配置检查用户权限和调用记录</target>
      </trans-unit>
      <trans-unit id="49894">
        <source>逐一调用 action 回调函数，直到返回值不为 `undefined`</source>
        <target state="needs-translation">逐一调用 action 回调函数，直到返回值不为 `undefined`</target>
      </trans-unit>
      <trans-unit id="49896">
        <source>触发 [command](../api/core/events.md#事件：command) 事件</source>
        <target state="needs-translation">触发 [command](../api/core/events.md#事件：command) 事件</target>
      </trans-unit>
    </body>
  </file>
  <file id="1518" original="/[koishijs.docs] main/zh-CN/cookbook/practice/assets.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="49898">
        <source>资源转存</source>
        <target state="needs-translation">资源转存</target>
      </trans-unit>
      <trans-unit id="49900">
        <source>什么情况下插件需要转存资源文件？</source>
        <target state="needs-translation">什么情况下插件需要转存资源文件？</target>
      </trans-unit>
      <trans-unit id="49902">
        <source>:::</source>
        <target state="needs-translation">:::</target>
      </trans-unit>
    </body>
  </file>
  <file id="1520" original="/[koishijs.docs] main/zh-CN/cookbook/practice/bundle.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="49904">
        <source>整合包开发 &lt;badge type=&quot;warning&quot;&gt;实验性&lt;/badge&gt;</source>
        <target state="needs-translation">整合包开发 &lt;badge type=&quot;warning&quot;&gt;实验性&lt;/badge&gt;</target>
      </trans-unit>
      <trans-unit id="49906">
        <source>正如 [深入工作区](../design/workspace.md) 一文所说，对于普通的插件开发者，我们不建议将模板项目提交到 Git 仓库中。</source>
        <target state="needs-translation">正如 [深入工作区](../design/workspace.md) 一文所说，对于普通的插件开发者，我们不建议将模板项目提交到 Git 仓库中。</target>
      </trans-unit>
      <trans-unit id="49908">
        <source>但凡事总有例外——如果你想要分发的不是插件而是成品机器人本身，那么你就需要提交根工作区了。</source>
        <target state="needs-translation">但凡事总有例外——如果你想要分发的不是插件而是成品机器人本身，那么你就需要提交根工作区了。</target>
      </trans-unit>
      <trans-unit id="49910">
        <source>像这种包含根工作区的仓库被称为 **整合包 (Bundle)**。</source>
        <target state="needs-translation">像这种包含根工作区的仓库被称为 **整合包 (Bundle)**。</target>
      </trans-unit>
      <trans-unit id="49912">
        <source>起步</source>
        <target state="needs-translation">起步</target>
      </trans-unit>
      <trans-unit id="49914">
        <source>在开始之前，我们推荐你创建一个全新的模板项目。</source>
        <target state="needs-translation">在开始之前，我们推荐你创建一个全新的模板项目。</target>
      </trans-unit>
      <trans-unit id="49916">
        <source>由于整合包功能还在开发中，模板项目的结构可能随时发生更改。</source>
        <target state="needs-translation">由于整合包功能还在开发中，模板项目的结构可能随时发生更改。</target>
      </trans-unit>
      <trans-unit id="49918">
        <source>使用全新的模板项目可以确保你可以顺利完成后续流程。</source>
        <target state="needs-translation">使用全新的模板项目可以确保你可以顺利完成后续流程。</target>
      </trans-unit>
      <trans-unit id="49920">
        <source>在本地的模板项目下进入命令行，执行以下命令：</source>
        <target state="needs-translation">在本地的模板项目下进入命令行，执行以下命令：</target>
      </trans-unit>
      <trans-unit id="49922">
        <source>git init</source>
        <target state="needs-translation">git init</target>
      </trans-unit>
      <trans-unit id="49924">
        <source>好了，这个模板项目现在已经是一个整合包了。</source>
        <target state="needs-translation">好了，这个模板项目现在已经是一个整合包了。</target>
      </trans-unit>
      <trans-unit id="49926">
        <source>你可以将它公开发布到 GitHub 供更多人使用 (当然也可以不公开发布，就只给自己机器人做个版本管理也不错)。</source>
        <target state="needs-translation">你可以将它公开发布到 GitHub 供更多人使用 (当然也可以不公开发布，就只给自己机器人做个版本管理也不错)。</target>
      </trans-unit>
      <trans-unit id="49928">
        <source>管理环境变量</source>
        <target state="needs-translation">管理环境变量</target>
      </trans-unit>
      <trans-unit id="49930">
        <source>使用环境变量管理隐私信息存在一些局限性，并不是最好的方案。</source>
        <target state="needs-translation">使用环境变量管理隐私信息存在一些局限性，并不是最好的方案。</target>
      </trans-unit>
      <trans-unit id="49932">
        <source>未来我们会提供更通用的解决方案，但目前可以先用下面的方法。</source>
        <target state="needs-translation">未来我们会提供更通用的解决方案，但目前可以先用下面的方法。</target>
      </trans-unit>
      <trans-unit id="49934">
        <source>接下来，你需要对你的机器人进行配置了。</source>
        <target state="needs-translation">接下来，你需要对你的机器人进行配置了。</target>
      </trans-unit>
      <trans-unit id="49936">
        <source>但请注意你的配置文件将会被提交，因此请确保不要将任何隐私信息写入配置文件中。</source>
        <target state="needs-translation">但请注意你的配置文件将会被提交，因此请确保不要将任何隐私信息写入配置文件中。</target>
      </trans-unit>
      <trans-unit id="49938">
        <source>正确的做法是创建一个用于存放环境变量的 `.env.local` 文件，并在配置文件中引用这些环境变量。</source>
        <target state="needs-translation">正确的做法是创建一个用于存放环境变量的 `.env.local` 文件，并在配置文件中引用这些环境变量。</target>
      </trans-unit>
      <trans-unit id="49940">
        <source>plugins:
  adapter-discord:
    $if: env.DISCORD_TOKEN
    token: ${{ env.DISCORD_TOKEN }}</source>
        <target state="needs-translation">plugins:
  adapter-discord:
    $if: env.DISCORD_TOKEN
    token: ${{ env.DISCORD_TOKEN }}</target>
      </trans-unit>
      <trans-unit id="49942">
        <source>DISCORD_TOKEN = QwErTyUiOpAsDfGhJkLzXcVbNm</source>
        <target state="needs-translation">DISCORD_TOKEN = QwErTyUiOpAsDfGhJkLzXcVbNm</target>
      </trans-unit>
      <trans-unit id="49944">
        <source>`.env` 会被提交到 Git 仓库中 (因此请勿包含任何隐私信息)。</source>
        <target state="needs-translation">`.env` 会被提交到 Git 仓库中 (因此请勿包含任何隐私信息)。</target>
      </trans-unit>
      <trans-unit id="49946">
        <source>`.env.local` 有着更高的优先级，且不会被提交到 Git 仓库中。</source>
        <target state="needs-translation">`.env.local` 有着更高的优先级，且不会被提交到 Git 仓库中。</target>
      </trans-unit>
      <trans-unit id="49948">
        <source>Koishi 的模板项目已经包含了一个 `.env` 文件。</source>
        <target state="needs-translation">Koishi 的模板项目已经包含了一个 `.env` 文件。</target>
      </trans-unit>
      <trans-unit id="49950">
        <source>通常情况下你都不需要用到这个文件，因为不含有隐私信息的配置项都可以直接在 `koishi.yml` 中进行修改。</source>
        <target state="needs-translation">通常情况下你都不需要用到这个文件，因为不含有隐私信息的配置项都可以直接在 `koishi.yml` 中进行修改。</target>
      </trans-unit>
      <trans-unit id="49952">
        <source>:::</source>
        <target state="needs-translation">:::</target>
      </trans-unit>
      <trans-unit id="49954">
        <source>添加私有插件</source>
        <target state="needs-translation">添加私有插件</target>
      </trans-unit>
      <trans-unit id="49956">
        <source>我们不推荐这种行为。</source>
        <target state="needs-translation">我们不推荐这种行为。</target>
      </trans-unit>
      <trans-unit id="49958">
        <source>私有插件无法在不重启的情况下热更新，这将严重影响你机器人的 SLA。</source>
        <target state="needs-translation">私有插件无法在不重启的情况下热更新，这将严重影响你机器人的 SLA。</target>
      </trans-unit>
      <trans-unit id="49960">
        <source>如果你想要在整合包中使用私有插件，只需在 `packages` 目录下创建一个子工作区即可：</source>
        <target state="needs-translation">如果你想要在整合包中使用私有插件，只需在 `packages` 目录下创建一个子工作区即可：</target>
      </trans-unit>
      <trans-unit id="49962">
        <source>root
├── external
│   └── foo                     # 公开插件
│       ├── src
│       │   └── index.ts
│       └── package.json
├── packages
│   └── bar                     # 私有插件
│       ├── src
│       │   └── index.ts
│       └── package.json
├── koishi.yml
└── package.json</source>
        <target state="needs-translation">root
├── external
│   └── foo                     # 公开插件
│       ├── src
│       │   └── index.ts
│       └── package.json
├── packages
│   └── bar                     # 私有插件
│       ├── src
│       │   └── index.ts
│       └── package.json
├── koishi.yml
└── package.json</target>
      </trans-unit>
      <trans-unit id="49964">
        <source>在上图中，`foo` 是一个公开插件，`bar` 则是一个私有插件。</source>
        <target state="needs-translation">在上图中，`foo` 是一个公开插件，`bar` 则是一个私有插件。</target>
      </trans-unit>
      <trans-unit id="49966">
        <source>它们的开发方式完全相同，唯一的区别就是前者有着独立的工作区仓库，而后者没有。</source>
        <target state="needs-translation">它们的开发方式完全相同，唯一的区别就是前者有着独立的工作区仓库，而后者没有。</target>
      </trans-unit>
      <trans-unit id="49968">
        <source>在 `bar` 工作区下的 `package.json` 中设置 `private` 为 `true` 可以防止你不小心将私有插件发布到 npm 上。</source>
        <target state="needs-translation">在 `bar` 工作区下的 `package.json` 中设置 `private` 为 `true` 可以防止你不小心将私有插件发布到 npm 上。</target>
      </trans-unit>
      <trans-unit id="49970">
        <source>持续集成</source>
        <target state="needs-translation">持续集成</target>
      </trans-unit>
      <trans-unit id="49972">
        <source>模板项目中自带的 `.github` 目录包含了一系列构建工作流。</source>
        <target state="needs-translation">模板项目中自带的 `.github` 目录包含了一系列构建工作流。</target>
      </trans-unit>
      <trans-unit id="49974">
        <source>如果你的整合包是公开的，那么你可以在 GitHub 上自动构建和发布你的整合包。</source>
        <target state="needs-translation">如果你的整合包是公开的，那么你可以在 GitHub 上自动构建和发布你的整合包。</target>
      </trans-unit>
      <trans-unit id="49976">
        <source>你要做的只有一件事：修改整合包的版本号。</source>
        <target state="needs-translation">你要做的只有一件事：修改整合包的版本号。</target>
      </trans-unit>
      <trans-unit id="49978">
        <source>目前的所有工作流都基于整合包的版本号。</source>
        <target state="needs-translation">目前的所有工作流都基于整合包的版本号。</target>
      </trans-unit>
      <trans-unit id="49980">
        <source>当根工作区的版本号变动时，所有的工作流将开始运行。</source>
        <target state="needs-translation">当根工作区的版本号变动时，所有的工作流将开始运行。</target>
      </trans-unit>
      <trans-unit id="49982">
        <source>一次完整的发布将包含适用于 Koishi Desktop、Koishi Android 的完整环境，甚至是 Docker 镜像和 npm 包。</source>
        <target state="needs-translation">一次完整的发布将包含适用于 Koishi Desktop、Koishi Android 的完整环境，甚至是 Docker 镜像和 npm 包。</target>
      </trans-unit>
      <trans-unit id="49984">
        <source>部分流程需要配置 actions secrets，可以参考下面的列表：</source>
        <target state="needs-translation">部分流程需要配置 actions secrets，可以参考下面的列表：</target>
      </trans-unit>
      <trans-unit id="49986">
        <source>DOCKER_USERNAME</source>
        <target state="needs-translation">DOCKER_USERNAME</target>
      </trans-unit>
      <trans-unit id="49988">
        <source>DOCKER_PASSWORD</source>
        <target state="needs-translation">DOCKER_PASSWORD</target>
      </trans-unit>
      <trans-unit id="49990">
        <source>NPM_TOKEN</source>
        <target state="needs-translation">NPM_TOKEN</target>
      </trans-unit>
    </body>
  </file>
  <file id="1522" original="/[koishijs.docs] main/zh-CN/cookbook/practice/online.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="49992">
        <source>部署到 k-on!</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">部署到 k-on!</target>
      </trans-unit>
      <trans-unit id="49994">
        <source>[Koishi Online (k-on!)](https://koishi.online/) 是一个在线的 Koishi 运行时，你可以在这里体验 Koishi 的各种功能。</source>
        <target state="needs-translation">[Koishi Online (k-on!)](https://koishi.online/) 是一个在线的 Koishi 运行时，你可以在这里体验 Koishi 的各种功能。</target>
      </trans-unit>
      <trans-unit id="49996">
        <source>相比其他 Koishi 运行环境，k-on! 最大的特点在于它不存在后端，直接在浏览器中运行。</source>
        <target state="needs-translation">相比其他 Koishi 运行环境，k-on! 最大的特点在于它不存在后端，直接在浏览器中运行。</target>
      </trans-unit>
      <trans-unit id="49998">
        <source>这意味着你不需要安装或下载任何文件就能使用 Koishi。</source>
        <target state="needs-translation">这意味着你不需要安装或下载任何文件就能使用 Koishi。</target>
      </trans-unit>
      <trans-unit id="50000">
        <source>部署插件</source>
        <target state="needs-translation">部署插件</target>
      </trans-unit>
      <trans-unit id="50002">
        <source>阅读本节前请先阅读 [发布插件](../../guide/develop/publish.md)。</source>
        <target state="needs-translation">阅读本节前请先阅读 [发布插件](../../guide/develop/publish.md)。</target>
      </trans-unit>
      <trans-unit id="50004">
        <source>由于受到浏览器环境的限制，有许多插件无法直接在 k-on! 中运行，因此 k-on! 有着独立的插件市场。</source>
        <target state="needs-translation">由于受到浏览器环境的限制，有许多插件无法直接在 k-on! 中运行，因此 k-on! 有着独立的插件市场。</target>
      </trans-unit>
      <trans-unit id="50006">
        <source>要将一个插件部署到 k-on! 中，需要满足以下条件：</source>
        <target state="needs-translation">要将一个插件部署到 k-on! 中，需要满足以下条件：</target>
      </trans-unit>
      <trans-unit id="50008">
        <source>安全性限制：插件不能被标记为不安全</source>
        <target state="needs-translation">安全性限制：插件不能被标记为不安全</target>
      </trans-unit>
      <trans-unit id="50010">
        <source>体积限制：插件的安装体积不得超过 5MB，打包体积不得超过 1MB</source>
        <target state="needs-translation">体积限制：插件的安装体积不得超过 5MB，打包体积不得超过 1MB</target>
      </trans-unit>
      <trans-unit id="50012">
        <source>安装体积：在安装时需要下载的文件总体积 (含依赖库，除去少量白名单依赖)</source>
        <target state="needs-translation">安装体积：在安装时需要下载的文件总体积 (含依赖库，除去少量白名单依赖)</target>
      </trans-unit>
      <trans-unit id="50014">
        <source>打包体积：入口文件被打包并缩减后的体积</source>
        <target state="needs-translation">打包体积：入口文件被打包并缩减后的体积</target>
      </trans-unit>
      <trans-unit id="50016">
        <source>环境限制：不能使用 `child_process` 等在浏览器中无法实现的原生模块和二进制文件</source>
        <target state="needs-translation">环境限制：不能使用 `child_process` 等在浏览器中无法实现的原生模块和二进制文件</target>
      </trans-unit>
      <trans-unit id="50018">
        <source>我们对 `fs` 等常用 node 库做了模拟，但不能使用同步 API 如 `fs.readFileSync`</source>
        <target state="needs-translation">我们对 `fs` 等常用 node 库做了模拟，但不能使用同步 API 如 `fs.readFileSync`</target>
      </trans-unit>
      <trans-unit id="50020">
        <source>如果插件必须依赖某些二进制文件，可以考虑使用 WebAssembly</source>
        <target state="needs-translation">如果插件必须依赖某些二进制文件，可以考虑使用 WebAssembly</target>
      </trans-unit>
      <trans-unit id="50022">
        <source>网络限制：如果插件需要访问网络，所使用到的网络服务必须支持跨域请求</source>
        <target state="needs-translation">网络限制：如果插件需要访问网络，所使用到的网络服务必须支持跨域请求</target>
      </trans-unit>
      <trans-unit id="50024">
        <source>也可以通过允许跨域的第三方服务器来转发请求</source>
        <target state="needs-translation">也可以通过允许跨域的第三方服务器来转发请求</target>
      </trans-unit>
      <trans-unit id="50026">
        <source>如果你的插件满足了以上条件，那么你可以在插件的 `package.json` 中添加以下字段：</source>
        <target state="needs-translation">如果你的插件满足了以上条件，那么你可以在插件的 `package.json` 中添加以下字段：</target>
      </trans-unit>
      <trans-unit id="50028">
        <source>{
  &quot;koishi&quot;: {
    &quot;browser&quot;: true
  }
}</source>
        <target state="needs-translation">{
  &quot;koishi&quot;: {
    &quot;browser&quot;: true
  }
}</target>
      </trans-unit>
      <trans-unit id="50030">
        <source>接着为你的插件发布一个新版本，该插件随后就可以在 k-on! 中使用了。</source>
        <target state="needs-translation">接着为你的插件发布一个新版本，该插件随后就可以在 k-on! 中使用了。</target>
      </trans-unit>
      <trans-unit id="50032">
        <source>特殊场景的处理</source>
        <target state="needs-translation">特殊场景的处理</target>
      </trans-unit>
      <trans-unit id="50034">
        <source>对于一些特殊的场景，我们也提供了对应的解决方案。</source>
        <target state="needs-translation">对于一些特殊的场景，我们也提供了对应的解决方案。</target>
      </trans-unit>
      <trans-unit id="50036">
        <source>环境变量</source>
        <target state="needs-translation">环境变量</target>
      </trans-unit>
      <trans-unit id="50038">
        <source>k-on! 提供了打包时的环境变量，你可以通过它们来判断当前插件是否在 k-on! 中运行。</source>
        <target state="needs-translation">k-on! 提供了打包时的环境变量，你可以通过它们来判断当前插件是否在 k-on! 中运行。</target>
      </trans-unit>
      <trans-unit id="50040">
        <source>`process.env.KOISHI_ENV`：固定为 `browser`</source>
        <target state="needs-translation">`process.env.KOISHI_ENV`：固定为 `browser`</target>
      </trans-unit>
      <trans-unit id="50042">
        <source>`process.env.KOISHI_BASE`：对应于插件入口文件的所在网络路径 (仅限生产环境)</source>
        <target state="needs-translation">`process.env.KOISHI_BASE`：对应于插件入口文件的所在网络路径 (仅限生产环境)</target>
      </trans-unit>
      <trans-unit id="50044">
        <source>例如，如果插件的某些配置项在 k-on! 中无效，那么你可以配合 `.hidden()` 使用：</source>
        <target state="needs-translation">例如，如果插件的某些配置项在 k-on! 中无效，那么你可以配合 `.hidden()` 使用：</target>
      </trans-unit>
      <trans-unit id="50046">
        <source>export const Config = Schema.object({
  foo: Schema.string().default('bar')
    .hidden(process.env.KOISHI_ENV === 'browser'),
})</source>
        <target state="needs-translation">export const Config = Schema.object({
  foo: Schema.string().default('bar')
    .hidden(process.env.KOISHI_ENV === 'browser'),
})</target>
      </trans-unit>
      <trans-unit id="50048">
        <source>独立入口</source>
        <target state="needs-translation">独立入口</target>
      </trans-unit>
      <trans-unit id="50050">
        <source>你可以选择让插件为普通的 Koishi 实例和 k-on! 实例提供不同的入口文件。</source>
        <target state="needs-translation">你可以选择让插件为普通的 Koishi 实例和 k-on! 实例提供不同的入口文件。</target>
      </trans-unit>
      <trans-unit id="50052">
        <source>首先修改插件的目录结构：</source>
        <target state="needs-translation">首先修改插件的目录结构：</target>
      </trans-unit>
      <trans-unit id="50054">
        <source>└── example
    ├── src
+   │   ├── node
+   │   │   └── index.ts
+   │   ├── browser
+   │   │   └── index.ts
+   │   ├── shared
+   │   │   └── index.ts
    │   └── index.ts
    ├── package.json
    └── tsconfig.json</source>
        <target state="needs-translation">└── example
    ├── src
+   │   ├── node
+   │   │   └── index.ts
+   │   ├── browser
+   │   │   └── index.ts
+   │   ├── shared
+   │   │   └── index.ts
    │   └── index.ts
    ├── package.json
    └── tsconfig.json</target>
      </trans-unit>
      <trans-unit id="50056">
        <source>这里，`node` 目录存放 Node.js 环境下的入口文件，`browser` 目录存放浏览器环境下的入口文件，`shared` 目录存放一些两者共用的代码。</source>
        <target state="needs-translation">这里，`node` 目录存放 Node.js 环境下的入口文件，`browser` 目录存放浏览器环境下的入口文件，`shared` 目录存放一些两者共用的代码。</target>
      </trans-unit>
      <trans-unit id="50058">
        <source>原本的 `index.ts` 可以改成这样：</source>
        <target state="needs-translation">原本的 `index.ts` 可以改成这样：</target>
      </trans-unit>
      <trans-unit id="50060">
        <source>// 你的逻辑应该位于 node 目录中，请不要修改这个文件
export * from './node'

// 如果插件采用的是默认导出，你可以这么写
import plugin from './node'
export * from './node'
export default plugin</source>
        <target state="needs-translation">// 你的逻辑应该位于 node 目录中，请不要修改这个文件
export * from './node'

// 如果插件采用的是默认导出，你可以这么写
import plugin from './node'
export * from './node'
export default plugin</target>
      </trans-unit>
      <trans-unit id="50062">
        <source>然后，修改你的 `package.json`：</source>
        <target state="needs-translation">然后，修改你的 `package.json`：</target>
      </trans-unit>
      <trans-unit id="50064">
        <source>{
  &quot;main&quot;: &quot;lib/node/index.cjs&quot;,
  &quot;types&quot;: &quot;lib/index.d.ts&quot;,
  &quot;exports&quot;: {
    &quot;.&quot;: {
      &quot;node&quot;: &quot;./lib/node/index.cjs&quot;,
      &quot;browser&quot;: &quot;./lib/browser/index.mjs&quot;,
      &quot;types&quot;: &quot;./lib/index.d.ts&quot;
    },
    &quot;./shared&quot;: {
      &quot;require&quot;: &quot;./lib/shared/index.cjs&quot;,
      &quot;import&quot;: &quot;./lib/shared/index.mjs&quot;
    },
    &quot;./package.json&quot;: &quot;./package.json&quot;
  },
}</source>
        <target state="needs-translation">{
  &quot;main&quot;: &quot;lib/node/index.cjs&quot;,
  &quot;types&quot;: &quot;lib/index.d.ts&quot;,
  &quot;exports&quot;: {
    &quot;.&quot;: {
      &quot;node&quot;: &quot;./lib/node/index.cjs&quot;,
      &quot;browser&quot;: &quot;./lib/browser/index.mjs&quot;,
      &quot;types&quot;: &quot;./lib/index.d.ts&quot;
    },
    &quot;./shared&quot;: {
      &quot;require&quot;: &quot;./lib/shared/index.cjs&quot;,
      &quot;import&quot;: &quot;./lib/shared/index.mjs&quot;
    },
    &quot;./package.json&quot;: &quot;./package.json&quot;
  },
}</target>
      </trans-unit>
      <trans-unit id="50066">
        <source>WebAssembly</source>
        <target state="needs-translation">WebAssembly</target>
      </trans-unit>
      <trans-unit id="50068">
        <source>如果你的 WebAssembly 模块是以 base64 等格式内联在源码中的，那么你不需要做任何处理。</source>
        <target state="needs-translation">如果你的 WebAssembly 模块是以 base64 等格式内联在源码中的，那么你不需要做任何处理。</target>
      </trans-unit>
      <trans-unit id="50070">
        <source>如果你的 WebAssembly 模块是以相对路径的形式加载的，那么默认情况下它并不会被打包进插件中。</source>
        <target state="needs-translation">如果你的 WebAssembly 模块是以相对路径的形式加载的，那么默认情况下它并不会被打包进插件中。</target>
      </trans-unit>
      <trans-unit id="50072">
        <source>你需要在 `package.json` 中添加以下字段，并确保打包后的代码使用了正确的相对路径：</source>
        <target state="needs-translation">你需要在 `package.json` 中添加以下字段，并确保打包后的代码使用了正确的相对路径：</target>
      </trans-unit>
      <trans-unit id="50074">
        <source>{
  &quot;koishi&quot;: {
    &quot;browser&quot;: true,
    &quot;exports&quot;: {
      &quot;foo.wasm&quot;: &quot;./path/to/foo.wasm&quot;
    }
  }
}</source>
        <target state="needs-translation">{
  &quot;koishi&quot;: {
    &quot;browser&quot;: true,
    &quot;exports&quot;: {
      &quot;foo.wasm&quot;: &quot;./path/to/foo.wasm&quot;
    }
  }
}</target>
      </trans-unit>
      <trans-unit id="50076">
        <source>控制台扩展</source>
        <target state="needs-translation">控制台扩展</target>
      </trans-unit>
      <trans-unit id="50078">
        <source>对于提供控制台扩展的文件，你可以使用以下代码：</source>
        <target state="needs-translation">对于提供控制台扩展的文件，你可以使用以下代码：</target>
      </trans-unit>
      <trans-unit id="50080">
        <source>ctx.console.addEntry(process.env.KOISHI_BASE ? [
  process.env.KOISHI_BASE + '/dist/index.js',
  process.env.KOISHI_BASE + '/dist/style.css',
] : process.env.KOISHI_ENV === 'browser' ? [
  // @ts-ignore
  import.meta.url.replace(/\/src\/[^/]+$/, '/client/index.ts'),
] : {
  dev: resolve(__dirname, '../client/index.ts'),
  prod: resolve(__dirname, '../dist'),
})</source>
        <target state="needs-translation">ctx.console.addEntry(process.env.KOISHI_BASE ? [
  process.env.KOISHI_BASE + '/dist/index.js',
  process.env.KOISHI_BASE + '/dist/style.css',
] : process.env.KOISHI_ENV === 'browser' ? [
  // @ts-ignore
  import.meta.url.replace(/\/src\/[^/]+$/, '/client/index.ts'),
] : {
  dev: resolve(__dirname, '../client/index.ts'),
  prod: resolve(__dirname, '../dist'),
})</target>
      </trans-unit>
      <trans-unit id="50082">
        <source>同时，在插件的 `package.json` 中添加以下字段：</source>
        <target state="needs-translation">同时，在插件的 `package.json` 中添加以下字段：</target>
      </trans-unit>
      <trans-unit id="50084">
        <source>{
  &quot;main&quot;: &quot;lib/index.cjs&quot;,
  &quot;typings&quot;: &quot;lib/index.d.ts&quot;,
  &quot;exports&quot;: {
    &quot;.&quot;: {
      &quot;import&quot;: &quot;./lib/index.mjs&quot;,
      &quot;require&quot;: &quot;./lib/index.cjs&quot;
    },
    &quot;./package.json&quot;: &quot;./package.json&quot;
  },
  &quot;koishi&quot;: {
    &quot;browser&quot;: true,
    &quot;public&quot;: [
      &quot;dist&quot;
    ]
  }
}</source>
        <target state="needs-translation">{
  &quot;main&quot;: &quot;lib/index.cjs&quot;,
  &quot;typings&quot;: &quot;lib/index.d.ts&quot;,
  &quot;exports&quot;: {
    &quot;.&quot;: {
      &quot;import&quot;: &quot;./lib/index.mjs&quot;,
      &quot;require&quot;: &quot;./lib/index.cjs&quot;
    },
    &quot;./package.json&quot;: &quot;./package.json&quot;
  },
  &quot;koishi&quot;: {
    &quot;browser&quot;: true,
    &quot;public&quot;: [
      &quot;dist&quot;
    ]
  }
}</target>
      </trans-unit>
      <trans-unit id="50086">
        <source>本地测试</source>
        <target state="needs-translation">本地测试</target>
      </trans-unit>
      <trans-unit id="50088">
        <source>阅读本节前请先阅读 [工作区开发](../../guide/develop/workspace.md)。</source>
        <target state="needs-translation">阅读本节前请先阅读 [工作区开发](../../guide/develop/workspace.md)。</target>
      </trans-unit>
      <trans-unit id="50090">
        <source>如果你想在本地测试插件是否能在 k-on! 中运行，可以参考以下流程：</source>
        <target state="needs-translation">如果你想在本地测试插件是否能在 k-on! 中运行，可以参考以下流程：</target>
      </trans-unit>
      <trans-unit id="65158">
        <source>克隆 koishijs/webui 和 cordiverse/ponyfills 仓库。</source>
        <target state="needs-translation">克隆 koishijs/webui 和 cordiverse/ponyfills 仓库。</target>
      </trans-unit>
      <trans-unit id="50094">
        <source>code</source>
        <target state="needs-translation">code</target>
      </trans-unit>
      <trans-unit id="65160">
        <source>npm run clone koishijs/webui
npm run clone cordiverse/ponyfills</source>
        <target state="needs-translation">npm run clone koishijs/webui
npm run clone cordiverse/ponyfills</target>
      </trans-unit>
      <trans-unit id="65162">
        <source>yarn clone koishijs/webui
yarn clone cordiverse/ponyfills</source>
        <target state="needs-translation">yarn clone koishijs/webui
yarn clone cordiverse/ponyfills</target>
      </trans-unit>
      <trans-unit id="50100">
        <source>启动 k-on! 开发脚本。</source>
        <target state="needs-translation">启动 k-on! 开发脚本。</target>
      </trans-unit>
      <trans-unit id="50102">
        <source>code</source>
        <target state="needs-translation">code</target>
      </trans-unit>
      <trans-unit id="50104">
        <source>cd external/webui
npm run dev</source>
        <target state="needs-translation">cd external/webui
npm run dev</target>
      </trans-unit>
      <trans-unit id="50106">
        <source>yarn workspace @root/webui dev</source>
        <target state="needs-translation">yarn workspace @root/webui dev</target>
      </trans-unit>
      <trans-unit id="50108">
        <source>在浏览器中打开 `http://localhost:3000` 即可访问 k-on!</source>
        <target state="needs-translation">在浏览器中打开 `http://localhost:3000` 即可访问 k-on!</target>
      </trans-unit>
    </body>
  </file>
  <file id="1524" original="/[koishijs.docs] main/zh-CN/cookbook/practice/render.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="50110">
        <source>图片渲染</source>
        <target state="needs-translation">图片渲染</target>
      </trans-unit>
      <trans-unit id="50112">
        <source>如何让插件输出好看的图片？</source>
        <target state="needs-translation">如何让插件输出好看的图片？</target>
      </trans-unit>
      <trans-unit id="50114">
        <source>:::</source>
        <target state="needs-translation">:::</target>
      </trans-unit>
    </body>
  </file>
  <file id="1526" original="/[koishijs.docs] main/zh-CN/cookbook/practice/testing.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="50116">
        <source>编写测试</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">編寫測試</target>
      </trans-unit>
      <trans-unit id="50118">
        <source>如果你是一位成熟的开发者，你一定知道测试的重要性。</source>
        <target state="needs-translation">如果你是一位成熟的开发者，你一定知道测试的重要性。</target>
      </trans-unit>
      <trans-unit id="50120">
        <source>比起让机器人真正运行起来交给用户去试错，预先编写好的测试具有许多前者所不具有的优点：</source>
        <target state="needs-translation">比起让机器人真正运行起来交给用户去试错，预先编写好的测试具有许多前者所不具有的优点：</target>
      </trans-unit>
      <trans-unit id="50122">
        <source>可以在无网络的情况下运行</source>
        <target state="needs-translation">可以在无网络的情况下运行</target>
      </trans-unit>
      <trans-unit id="50124">
        <source>可以模拟出多用户交互等复杂情况</source>
        <target state="needs-translation">可以模拟出多用户交互等复杂情况</target>
      </trans-unit>
      <trans-unit id="50126">
        <source>可以在内存中模拟你想要的数据库</source>
        <target state="needs-translation">可以在内存中模拟你想要的数据库</target>
      </trans-unit>
      <trans-unit id="50128">
        <source>能够有效避免风控带来的损失</source>
        <target state="needs-translation">能够有效避免风控带来的损失</target>
      </trans-unit>
      <trans-unit id="50130">
        <source>便于调试与错误定位</source>
        <target state="needs-translation">便于调试与错误定位</target>
      </trans-unit>
      <trans-unit id="50132">
        <source>本章将介绍官方插件 `@koishijs/plugin-mock`。</source>
        <target state="needs-translation">本章将介绍官方插件 `@koishijs/plugin-mock`。</target>
      </trans-unit>
      <trans-unit id="50134">
        <source>你可以用它来快速检验你编写的 Koishi 插件。</source>
        <target state="needs-translation">你可以用它来快速检验你编写的 Koishi 插件。</target>
      </trans-unit>
      <trans-unit id="50136">
        <source>本节中介绍的样例用到了 [Mocha](https://mochajs.org/) 和 [Chai](https://www.chaijs.com/)。</source>
        <target state="needs-translation">本节中介绍的样例用到了 [Mocha](https://mochajs.org/) 和 [Chai](https://www.chaijs.com/)。</target>
      </trans-unit>
      <trans-unit id="50138">
        <source>它们都是比较通用的测试库和断言库，但并非绑定 @koishijs/plugin-mock 一同使用。</source>
        <target state="needs-translation">它们都是比较通用的测试库和断言库，但并非绑定 @koishijs/plugin-mock 一同使用。</target>
      </trans-unit>
      <trans-unit id="50140">
        <source>你也可以根据你的喜好选择其他工具，比如 [Jest](https://jestjs.io/) 等等。</source>
        <target state="needs-translation">你也可以根据你的喜好选择其他工具，比如 [Jest](https://jestjs.io/) 等等。</target>
      </trans-unit>
      <trans-unit id="50142">
        <source>准备工作</source>
        <target state="needs-translation">准备工作</target>
      </trans-unit>
      <trans-unit id="50144">
        <source>首先在工作区中安装所需的测试工具以及 @koishijs/plugin-mock：</source>
        <target state="needs-translation">首先在工作区中安装所需的测试工具以及 @koishijs/plugin-mock：</target>
      </trans-unit>
      <trans-unit id="50146">
        <source>code</source>
        <target state="needs-translation">code</target>
      </trans-unit>
      <trans-unit id="50148">
        <source>npm i mocha chai @koishijs/plugin-mock @types/mocha @types/chai -DW</source>
        <target state="needs-translation">npm i mocha chai @koishijs/plugin-mock @types/mocha @types/chai -DW</target>
      </trans-unit>
      <trans-unit id="50150">
        <source>yarn add mocha chai @koishijs/plugin-mock @types/mocha @types/chai -DW</source>
        <target state="needs-translation">yarn add mocha chai @koishijs/plugin-mock @types/mocha @types/chai -DW</target>
      </trans-unit>
      <trans-unit id="50152">
        <source>这里的 `-W` 表明直接安装到根工作区。</source>
        <target state="needs-translation">这里的 `-W` 表明直接安装到根工作区。</target>
      </trans-unit>
      <trans-unit id="50154">
        <source>你也可以改成只对一个插件添加这些依赖，不过考虑到你可能会在其他插件中也用到它们，安装到根工作区会更加方便。</source>
        <target state="needs-translation">你也可以改成只对一个插件添加这些依赖，不过考虑到你可能会在其他插件中也用到它们，安装到根工作区会更加方便。</target>
      </trans-unit>
      <trans-unit id="50156">
        <source>接着在插件目录中创建存放测试文件的 `tests` 目录，并在其中新建 `index.spec.ts` 文件：</source>
        <target state="needs-translation">接着在插件目录中创建存放测试文件的 `tests` 目录，并在其中新建 `index.spec.ts` 文件：</target>
      </trans-unit>
      <trans-unit id="50158">
        <source>└── example
    ├── src
    │   └── index.ts
+   ├── tests
+   │   └── index.spec.ts
    └── package.json</source>
        <target state="needs-translation">└── example
    ├── src
    │   └── index.ts
+   ├── tests
+   │   └── index.spec.ts
    └── package.json</target>
      </trans-unit>
      <trans-unit id="50160">
        <source>这个文件将用于编写测试代码：</source>
        <target state="needs-translation">这个文件将用于编写测试代码：</target>
      </trans-unit>
      <trans-unit id="50162">
        <source>import { Context } from 'koishi'
import mock from '@koishijs/plugin-mock'

const app = new Context()
app.plugin(mock)</source>
        <target state="needs-translation">import { Context } from 'koishi'
import mock from '@koishijs/plugin-mock'

const app = new Context()
app.plugin(mock)</target>
      </trans-unit>
      <trans-unit id="50164">
        <source>配置测试脚本</source>
        <target state="needs-translation">配置测试脚本</target>
      </trans-unit>
      <trans-unit id="50166">
        <source>TODO</source>
        <target state="needs-translation">TODO</target>
      </trans-unit>
      <trans-unit id="50168">
        <source>模拟会话消息</source>
        <target state="needs-translation">模拟会话消息</target>
      </trans-unit>
      <trans-unit id="50170">
        <source>对于聊天机器人来说最常见的需求是处理用户的消息。</source>
        <target state="needs-translation">对于聊天机器人来说最常见的需求是处理用户的消息。</target>
      </trans-unit>
      <trans-unit id="50172">
        <source>为此，我们提供了 **客户端 (Client)** 对象，用于模拟特定频道和用户的输入：</source>
        <target state="needs-translation">为此，我们提供了 **客户端 (Client)** 对象，用于模拟特定频道和用户的输入：</target>
      </trans-unit>
      <trans-unit id="50174">
        <source>/// &lt;reference types=&quot;mocha&quot; /&gt;
// ---cut---
import { Context } from 'koishi'
import mock from '@koishijs/plugin-mock'

const app = new Context()
app.plugin(mock)

// 创建一个 userId 为 123 的私聊客户端
const client = app.mock.client('123')

// 这是一个简单的中间件例子，下面将测试这个中间件
app.middleware(({ content }, next) =&gt; {
  if (content === '天王盖地虎') {
    return '宝塔镇河妖'
  } else {
    return next()
  }
})

// 这一句不能少，要等待 app 启动完成
before(() =&gt; app.start())
after(() =&gt; app.stop())

it('example 1', async () =&gt; {
  // 将“天王盖地虎”发送给机器人将会获得“宝塔镇河妖”的回复
  await client.shouldReply('天王盖地虎', '宝塔镇河妖')

  // 将“天王盖地虎”发送给机器人将会获得某些回复
  await client.shouldReply('天王盖地虎')

  // 将“宫廷玉液酒”发送给机器人将不会获得任何回复
  await client.shouldNotReply('宫廷玉液酒')
})</source>
        <target state="needs-translation">/// &lt;reference types=&quot;mocha&quot; /&gt;
// ---cut---
import { Context } from 'koishi'
import mock from '@koishijs/plugin-mock'

const app = new Context()
app.plugin(mock)

// 创建一个 userId 为 123 的私聊客户端
const client = app.mock.client('123')

// 这是一个简单的中间件例子，下面将测试这个中间件
app.middleware(({ content }, next) =&gt; {
  if (content === '天王盖地虎') {
    return '宝塔镇河妖'
  } else {
    return next()
  }
})

// 这一句不能少，要等待 app 启动完成
before(() =&gt; app.start())
after(() =&gt; app.stop())

it('example 1', async () =&gt; {
  // 将“天王盖地虎”发送给机器人将会获得“宝塔镇河妖”的回复
  await client.shouldReply('天王盖地虎', '宝塔镇河妖')

  // 将“天王盖地虎”发送给机器人将会获得某些回复
  await client.shouldReply('天王盖地虎')

  // 将“宫廷玉液酒”发送给机器人将不会获得任何回复
  await client.shouldNotReply('宫廷玉液酒')
})</target>
      </trans-unit>
      <trans-unit id="50176">
        <source>模拟数据库</source>
        <target state="needs-translation">模拟数据库</target>
      </trans-unit>
      <trans-unit id="50178">
        <source>@koishijs/plugin-database-memory 是 Koishi 的一个基于内存的数据库实现，非常适合用于编写测试。</source>
        <target state="needs-translation">@koishijs/plugin-database-memory 是 Koishi 的一个基于内存的数据库实现，非常适合用于编写测试。</target>
      </trans-unit>
      <trans-unit id="50180">
        <source>import { Context } from 'koishi'
import mock from '@koishijs/plugin-mock'
import memory from '@koishijs/plugin-database-memory'

const app = new Context()
app.plugin(mock)
app.plugin(memory)

// 这次我们来测试一下这个指令
app.command('foo', { authority: 2 }).action(() =&gt; 'bar')

// 创建两个来自不同用户的客户端对象
const client1 = app.mock.client('123')
const client2 = app.mock.client('456')

before(async () =&gt; {
  await app.start()

  // 在数据库中初始化两个用户，userId 分别为 123 和 456，权限等级分别为 1 和 2
  // app.mock.initUser() 方法本质上只是 app.database.createUser() 的语法糖
  await app.mock.initUser('123', 1)
  await app.mock.initUser('456', 2)
})

after(() =&gt; app.stop())

it('example 2', async () =&gt; {
  // 用户 123 尝试调用 foo 指令，但是权限不足
  await client1.shouldReply('foo', '权限不足。')

  // 用户 456 得以正常调用 foo 指令
  await client2.shouldReply('foo', 'bar')
})</source>
        <target state="needs-translation">import { Context } from 'koishi'
import mock from '@koishijs/plugin-mock'
import memory from '@koishijs/plugin-database-memory'

const app = new Context()
app.plugin(mock)
app.plugin(memory)

// 这次我们来测试一下这个指令
app.command('foo', { authority: 2 }).action(() =&gt; 'bar')

// 创建两个来自不同用户的客户端对象
const client1 = app.mock.client('123')
const client2 = app.mock.client('456')

before(async () =&gt; {
  await app.start()

  // 在数据库中初始化两个用户，userId 分别为 123 和 456，权限等级分别为 1 和 2
  // app.mock.initUser() 方法本质上只是 app.database.createUser() 的语法糖
  await app.mock.initUser('123', 1)
  await app.mock.initUser('456', 2)
})

after(() =&gt; app.stop())

it('example 2', async () =&gt; {
  // 用户 123 尝试调用 foo 指令，但是权限不足
  await client1.shouldReply('foo', '权限不足。')

  // 用户 456 得以正常调用 foo 指令
  await client2.shouldReply('foo', 'bar')
})</target>
      </trans-unit>
    </body>
  </file>
  <file id="1528" original="/[koishijs.docs] main/zh-CN/guide/adapter/adapter.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="50182">
        <source>实现适配器</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">實作配接器</target>
      </trans-unit>
      <trans-unit id="50184">
        <source>我们已经知道，单独一个 `Bot` 类已经构成一个合法的插件了。</source>
        <target state="needs-translation">我们已经知道，单独一个 `Bot` 类已经构成一个合法的插件了。</target>
      </trans-unit>
      <trans-unit id="50186">
        <source>不过，这样的插件只具备调用平台 API 的能力，还无法接收消息。</source>
        <target state="needs-translation">不过，这样的插件只具备调用平台 API 的能力，还无法接收消息。</target>
      </trans-unit>
      <trans-unit id="50188">
        <source>这个时候就需要 `Adapter` 类出场了。</source>
        <target state="needs-translation">这个时候就需要 `Adapter` 类出场了。</target>
      </trans-unit>
      <trans-unit id="64410">
        <source>适配器的类型 {#types}</source>
        <target state="needs-translation">适配器的类型 {#types}</target>
      </trans-unit>
      <trans-unit id="50192">
        <source>适配器需要建立并维护机器人与聊天平台之间的连接。</source>
        <target state="needs-translation">适配器需要建立并维护机器人与聊天平台之间的连接。</target>
      </trans-unit>
      <trans-unit id="50194">
        <source>通常来说，根据协议的不同，适配器与机器人可能是一对一的，也可能是一对多的。</source>
        <target state="needs-translation">通常来说，根据协议的不同，适配器与机器人可能是一对一的，也可能是一对多的。</target>
      </trans-unit>
      <trans-unit id="50196">
        <source>让我们再看一眼之前介绍过的 `ReplBot` 实例：</source>
        <target state="needs-translation">让我们再看一眼之前介绍过的 `ReplBot` 实例：</target>
      </trans-unit>
      <trans-unit id="50198">
        <source>class ReplBot&lt;C extends Context&gt; extends Bot&lt;C&gt; {
  constructor(ctx: C, config: Config) {
    super(ctx, config)
    this.platform = 'repl'
    this.selfId = 'koishi'
    ctx.plugin(ReplAdapter, this)
  }
}</source>
        <target state="needs-translation">class ReplBot&lt;C extends Context&gt; extends Bot&lt;C&gt; {
  constructor(ctx: C, config: Config) {
    super(ctx, config)
    this.platform = 'repl'
    this.selfId = 'koishi'
    ctx.plugin(ReplAdapter, this)
  }
}</target>
      </trans-unit>
      <trans-unit id="50200">
        <source>如果我们多次加载上述插件，由于 `Bot` 基类的可重用性，每一次加载都会构造出新的 `ReplBot` 实例。</source>
        <target state="needs-translation">如果我们多次加载上述插件，由于 `Bot` 基类的可重用性，每一次加载都会构造出新的 `ReplBot` 实例。</target>
      </trans-unit>
      <trans-unit id="50202">
        <source>另一方面，`ReplAdapter` 类继承了 `Adapter`，并且没有声明 `reusable` 属性，因此是一个不可重用插件。</source>
        <target state="needs-translation">另一方面，`ReplAdapter` 类继承了 `Adapter`，并且没有声明 `reusable` 属性，因此是一个不可重用插件。</target>
      </trans-unit>
      <trans-unit id="50204">
        <source>在多次加载的过程中，多个 `ReplBot` 实例会对应于同一个 `ReplAdapter` 实例。</source>
        <target state="needs-translation">在多次加载的过程中，多个 `ReplBot` 实例会对应于同一个 `ReplAdapter` 实例。</target>
      </trans-unit>
      <trans-unit id="50206">
        <source>这便是典型的一对多适配器逻辑。</source>
        <target state="needs-translation">这便是典型的一对多适配器逻辑。</target>
      </trans-unit>
      <trans-unit id="50208">
        <source>相比之下，Discord 平台使用 WebSocket 向机器人推送事件。</source>
        <target state="needs-translation">相比之下，Discord 平台使用 WebSocket 向机器人推送事件。</target>
      </trans-unit>
      <trans-unit id="50210">
        <source>每一个机器人都需要维护一个独立的 WebSocket 连接，因此需要多个 `Adapter` 实例。</source>
        <target state="needs-translation">每一个机器人都需要维护一个独立的 WebSocket 连接，因此需要多个 `Adapter` 实例。</target>
      </trans-unit>
      <trans-unit id="50212">
        <source>在这种情况下，我们无需改动上面机器人的代码，只需要将 `DiscordAdapter` 继承的基类变为 `Adapter.WsClient`。</source>
        <target state="needs-translation">在这种情况下，我们无需改动上面机器人的代码，只需要将 `DiscordAdapter` 继承的基类变为 `Adapter.WsClient`。</target>
      </trans-unit>
      <trans-unit id="50214">
        <source>这个基类声明了可重用性，它将实现一个一对一的适配器逻辑。</source>
        <target state="needs-translation">这个基类声明了可重用性，它将实现一个一对一的适配器逻辑。</target>
      </trans-unit>
      <trans-unit id="50216">
        <source>简单来说就是，在实现适配器时，首先需要协议的类型确定适配器与机器人的对应关系。</source>
        <target state="needs-translation">简单来说就是，在实现适配器时，首先需要协议的类型确定适配器与机器人的对应关系。</target>
      </trans-unit>
      <trans-unit id="50218">
        <source>如果是一对一的，就需要声明 `reusable` 属性，否则不需要声明。</source>
        <target state="needs-translation">如果是一对一的，就需要声明 `reusable` 属性，否则不需要声明。</target>
      </trans-unit>
      <trans-unit id="50220">
        <source>此外，对于部分典型场景，我们又进一步派生出了 `Adapter.WsClient` 等子类，方便你快速实现适配器。</source>
        <target state="needs-translation">此外，对于部分典型场景，我们又进一步派生出了 `Adapter.WsClient` 等子类，方便你快速实现适配器。</target>
      </trans-unit>
      <trans-unit id="64412">
        <source>典型实现 {#typical-impls}</source>
        <target state="needs-translation">典型实现 {#typical-impls}</target>
      </trans-unit>
      <trans-unit id="50224">
        <source>下面让我们看几种典型的适配器实现。</source>
        <target state="needs-translation">下面让我们看几种典型的适配器实现。</target>
      </trans-unit>
      <trans-unit id="64414">
        <source>WebSocket {#websocket}</source>
        <target state="needs-translation">WebSocket {#websocket}</target>
      </trans-unit>
      <trans-unit id="50228">
        <source>一种常见的通信方式是 WebSocket，许多平台 (Discord、KOOK、钉钉等) 都会使用这项技术。</source>
        <target state="needs-translation">一种常见的通信方式是 WebSocket，许多平台 (Discord、KOOK、钉钉等) 都会使用这项技术。</target>
      </trans-unit>
      <trans-unit id="50230">
        <source>它的工作原理是，机器人首先向聊天平台的 WebSocket 网关发起连接请求，随后平台会将事件推送到机器人的 WebSocket 连接上。</source>
        <target state="needs-translation">它的工作原理是，机器人首先向聊天平台的 WebSocket 网关发起连接请求，随后平台会将事件推送到机器人的 WebSocket 连接上。</target>
      </trans-unit>
      <trans-unit id="50232">
        <source>这里我们还是以 Discord 平台为例：</source>
        <target state="needs-translation">这里我们还是以 Discord 平台为例：</target>
      </trans-unit>
      <trans-unit id="50234">
        <source>export class DiscordAdapter&lt;C extends Context&gt; extends Adapter.WsClient&lt;C, DiscordBot&lt;C&gt;&gt; {
  async prepare() {
    const { url } = await this.bot.internal.getGatewayBot()
    return this.bot.http.ws(url + '/?v=10&amp;encoding=json')
  }

  accept() {
    this.socket.addEventListener('message', async ({ data }) =&gt; {
      const parsed = JSON.parse(data.toString())
      if (parsed.t === 'READY') {
        const user = decodeUser(parsed.d.user)
        Object.assign(this.bot, user)
        return this.bot.online()
      } else {
        const session = createSession(this.bot, parsed)
        if (session) this.dispatch(session)
      }
    })
  }
}</source>
        <target state="needs-translation">export class DiscordAdapter&lt;C extends Context&gt; extends Adapter.WsClient&lt;C, DiscordBot&lt;C&gt;&gt; {
  async prepare() {
    const { url } = await this.bot.internal.getGatewayBot()
    return this.bot.http.ws(url + '/?v=10&amp;encoding=json')
  }

  accept() {
    this.socket.addEventListener('message', async ({ data }) =&gt; {
      const parsed = JSON.parse(data.toString())
      if (parsed.t === 'READY') {
        const user = decodeUser(parsed.d.user)
        Object.assign(this.bot, user)
        return this.bot.online()
      } else {
        const session = createSession(this.bot, parsed)
        if (session) this.dispatch(session)
      }
    })
  }
}</target>
      </trans-unit>
      <trans-unit id="50236">
        <source>一个 `WsClient` 类需要实现 `prepare()` 和 `accept()` 两个方法。</source>
        <target state="needs-translation">一个 `WsClient` 类需要实现 `prepare()` 和 `accept()` 两个方法。</target>
      </trans-unit>
      <trans-unit id="50238">
        <source>`prepare()` 方法应当返回一个 `WebSocket` 对象，用于与聊天平台建立连接。</source>
        <target state="needs-translation">`prepare()` 方法应当返回一个 `WebSocket` 对象，用于与聊天平台建立连接。</target>
      </trans-unit>
      <trans-unit id="50240">
        <source>在上面的例子中，我们首先通过内部 API 获取了 WebSocket 网关地址，然后使用 `bot.http.ws()` 方法创建了一个 `WebSocket` 对象：</source>
        <target state="needs-translation">在上面的例子中，我们首先通过内部 API 获取了 WebSocket 网关地址，然后使用 `bot.http.ws()` 方法创建了一个 `WebSocket` 对象：</target>
      </trans-unit>
      <trans-unit id="50242">
        <source>const { url } = await this.bot.internal.getGatewayBot()
return this.bot.http.ws(url + '/?v=10&amp;encoding=json')</source>
        <target state="needs-translation">const { url } = await this.bot.internal.getGatewayBot()
return this.bot.http.ws(url + '/?v=10&amp;encoding=json')</target>
      </trans-unit>
      <trans-unit id="50244">
        <source>`accept()` 方法用于处理已经成功连接的 `WebSocket` 对象。</source>
        <target state="needs-translation">`accept()` 方法用于处理已经成功连接的 `WebSocket` 对象。</target>
      </trans-unit>
      <trans-unit id="50246">
        <source>具体而言应当包含三件事：</source>
        <target state="needs-translation">具体而言应当包含三件事：</target>
      </trans-unit>
      <trans-unit id="50248">
        <source>在初始化机器人各项属性后，调用 `bot.online()` 方法，将机器人标记为在线状态</source>
        <target state="needs-translation">在初始化机器人各项属性后，调用 `bot.online()` 方法，将机器人标记为在线状态</target>
      </trans-unit>
      <trans-unit id="50250">
        <source>接收来自聊天平台的事件，构造 `Session` 对象并初始化各项属性，随后调用 `dispatch()` 方法将其触发为会话事件</source>
        <target state="needs-translation">接收来自聊天平台的事件，构造 `Session` 对象并初始化各项属性，随后调用 `dispatch()` 方法将其触发为会话事件</target>
      </trans-unit>
      <trans-unit id="50252">
        <source>根据聊天平台的协议要求，处理心跳、重连、错误等情况 (如果平台没有专门设置与重连相关的信令，可以不用实现，`WsClient` 基类已经内置了简单的重连逻辑)</source>
        <target state="needs-translation">根据聊天平台的协议要求，处理心跳、重连、错误等情况 (如果平台没有专门设置与重连相关的信令，可以不用实现，`WsClient` 基类已经内置了简单的重连逻辑)</target>
      </trans-unit>
      <trans-unit id="50254">
        <source>在上面的例子中，`READY` 事件表示机器人已经成功连接，此时我们对机器人进行初始化：</source>
        <target state="needs-translation">在上面的例子中，`READY` 事件表示机器人已经成功连接，此时我们对机器人进行初始化：</target>
      </trans-unit>
      <trans-unit id="50256">
        <source>const user = decodeUser(parsed.d.user)
Object.assign(this.bot, user)
return this.bot.online()</source>
        <target state="needs-translation">const user = decodeUser(parsed.d.user)
Object.assign(this.bot, user)
return this.bot.online()</target>
      </trans-unit>
      <trans-unit id="50258">
        <source>在我们调用 `bot.online()` 之前，应当尽量保证 `Bot` 实例有 `selfId`, `username` 和 `avatar` 属性。</source>
        <target state="needs-translation">在我们调用 `bot.online()` 之前，应当尽量保证 `Bot` 实例有 `selfId`, `username` 和 `avatar` 属性。</target>
      </trans-unit>
      <trans-unit id="50260">
        <source>前者本身就是必须属性，而后两个属性则会显示在控制台的机器人状态栏中。</source>
        <target state="needs-translation">前者本身就是必须属性，而后两个属性则会显示在控制台的机器人状态栏中。</target>
      </trans-unit>
      <trans-unit id="50262">
        <source>对于其他事件，我们都尝试创建一个 `Session` 对象，并将它触发为会话事件：</source>
        <target state="needs-translation">对于其他事件，我们都尝试创建一个 `Session` 对象，并将它触发为会话事件：</target>
      </trans-unit>
      <trans-unit id="50264">
        <source>const session = createSession(this.bot, parsed)
if (session) this.dispatch(session)</source>
        <target state="needs-translation">const session = createSession(this.bot, parsed)
if (session) this.dispatch(session)</target>
      </trans-unit>
      <trans-unit id="50266">
        <source>`createSession()` 会根据事件的类型，创建不同的 `Session` 实例。</source>
        <target state="needs-translation">`createSession()` 会根据事件的类型，创建不同的 `Session` 实例。</target>
      </trans-unit>
      <trans-unit id="50268">
        <source>如果无法对应到标准的会话事件，那么 `createSession()` 方法会返回空值，表示我们不需要调用 `dispatch()` 方法。</source>
        <target state="needs-translation">如果无法对应到标准的会话事件，那么 `createSession()` 方法会返回空值，表示我们不需要调用 `dispatch()` 方法。</target>
      </trans-unit>
      <trans-unit id="64416">
        <source>Webhook {#webhook}</source>
        <target state="needs-translation">Webhook {#webhook}</target>
      </trans-unit>
      <trans-unit id="50272">
        <source>另一种常见的通信方式是 Webhook，使用这种通信方式的平台有飞书、企业微信、Line 等。</source>
        <target state="needs-translation">另一种常见的通信方式是 Webhook，使用这种通信方式的平台有飞书、企业微信、Line 等。</target>
      </trans-unit>
      <trans-unit id="50274">
        <source>它的工作原理是，机器人搭建者首先在聊天平台的开发者后台配置一个 HTTP 服务器地址，随后平台会将事件推送到该地址上。</source>
        <target state="needs-translation">它的工作原理是，机器人搭建者首先在聊天平台的开发者后台配置一个 HTTP 服务器地址，随后平台会将事件推送到该地址上。</target>
      </trans-unit>
      <trans-unit id="50276">
        <source>这里我们以 Line 平台为例：</source>
        <target state="needs-translation">这里我们以 Line 平台为例：</target>
      </trans-unit>
      <trans-unit id="63520">
        <source>export class HttpServer&lt;C extends Context&gt; extends Adapter&lt;C, LineBot&lt;C&gt;&gt; {
  static inject = ['server']

  constructor(public ctx: C) {
    super()

    ctx.server.post('/line', async (ctx) =&gt; {
      const { destination, events } = ctx.request.body
      const bot = this.bots.find(bot =&gt; bot.selfId === destination)
      if (!bot) return ctx.status = 403

      for (const event of events) {
        const session = createSession(bot, event)
        if (session) bot.dispatch(session)
      }
      ctx.status = 200
      ctx.body = 'ok'
    })
  }

  async start(bot: LineBot) {
    await this.getLogin()
    await bot.internal.setWebhookEndpoint({
      endpoint: this.ctx.server.config.selfUrl + '/line',
    })
  }
}</source>
        <target state="needs-translation">export class HttpServer&lt;C extends Context&gt; extends Adapter&lt;C, LineBot&lt;C&gt;&gt; {
  static inject = ['server']

  constructor(public ctx: C) {
    super()

    ctx.server.post('/line', async (ctx) =&gt; {
      const { destination, events } = ctx.request.body
      const bot = this.bots.find(bot =&gt; bot.selfId === destination)
      if (!bot) return ctx.status = 403

      for (const event of events) {
        const session = createSession(bot, event)
        if (session) bot.dispatch(session)
      }
      ctx.status = 200
      ctx.body = 'ok'
    })
  }

  async start(bot: LineBot) {
    await this.getLogin()
    await bot.internal.setWebhookEndpoint({
      endpoint: this.ctx.server.config.selfUrl + '/line',
    })
  }
}</target>
      </trans-unit>
      <trans-unit id="50280">
        <source>任何一个适配器都需要通过 `start()` 和 `stop()` 方法来控制机器人的启动和停止 (你在前一个例子中没有看到这两个方法，只是因为 `WsClient` 已经内置了实现)。</source>
        <target state="needs-translation">任何一个适配器都需要通过 `start()` 和 `stop()` 方法来控制机器人的启动和停止 (你在前一个例子中没有看到这两个方法，只是因为 `WsClient` 已经内置了实现)。</target>
      </trans-unit>
      <trans-unit id="50282">
        <source>在这个例子中，我们通过内部接口对机器人数据做了初始化，并设置了 Webhook 回调地址：</source>
        <target state="needs-translation">在这个例子中，我们通过内部接口对机器人数据做了初始化，并设置了 Webhook 回调地址：</target>
      </trans-unit>
      <trans-unit id="63522">
        <source>await this.getLogin()
await bot.internal.setWebhookEndpoint({
  endpoint: this.ctx.server.config.selfUrl + '/line',
})</source>
        <target state="needs-translation">await this.getLogin()
await bot.internal.setWebhookEndpoint({
  endpoint: this.ctx.server.config.selfUrl + '/line',
})</target>
      </trans-unit>
      <trans-unit id="50286">
        <source>对于 HTTP 服务器来说，我们不仅需要维护机器人的状态，还需要创建一个 HTTP 服务器，用于接收来自聊天平台的事件。</source>
        <target state="needs-translation">对于 HTTP 服务器来说，我们不仅需要维护机器人的状态，还需要创建一个 HTTP 服务器，用于接收来自聊天平台的事件。</target>
      </trans-unit>
      <trans-unit id="63524">
        <source>因此，我们在构造函数中使用 `ctx.server` 监听了 Webhook 回调地址。</source>
        <target state="needs-translation">因此，我们在构造函数中使用 `ctx.server` 监听了 Webhook 回调地址。</target>
      </trans-unit>
      <trans-unit id="50290">
        <source>对于每一个接收到的请求，我们首先验证其是否对应于已经配置的机器人：</source>
        <target state="needs-translation">对于每一个接收到的请求，我们首先验证其是否对应于已经配置的机器人：</target>
      </trans-unit>
      <trans-unit id="50292">
        <source>const sign = ctx.headers['x-line-signature']?.toString()
const parsed = ctx.request.body as WebhookRequestBody
const bot = this.bots.find(bot =&gt; bot.selfId === parsed.destination)
if (!bot) return ctx.status = 403</source>
        <target state="needs-translation">const sign = ctx.headers['x-line-signature']?.toString()
const parsed = ctx.request.body as WebhookRequestBody
const bot = this.bots.find(bot =&gt; bot.selfId === parsed.destination)
if (!bot) return ctx.status = 403</target>
      </trans-unit>
      <trans-unit id="50294">
        <source>验证完成后，对于请求中的每一个事件，我们创建 `Session` 对象，并将它触发为会话事件：</source>
        <target state="needs-translation">验证完成后，对于请求中的每一个事件，我们创建 `Session` 对象，并将它触发为会话事件：</target>
      </trans-unit>
      <trans-unit id="50296">
        <source>for (const event of parsed.events) {
  const session = createSession(bot, event)
  if (session) bot.dispatch(session)
}</source>
        <target state="needs-translation">for (const event of parsed.events) {
  const session = createSession(bot, event)
  if (session) bot.dispatch(session)
}</target>
      </trans-unit>
      <trans-unit id="64418">
        <source>其他通信方式 {#others}</source>
        <target state="needs-translation">其他通信方式 {#others}</target>
      </trans-unit>
      <trans-unit id="50300">
        <source>除了 WebSocket 和 Webhook 以外，还有一些其他可能出现的通信方式：</source>
        <target state="needs-translation">除了 WebSocket 和 Webhook 以外，还有一些其他可能出现的通信方式：</target>
      </trans-unit>
      <trans-unit id="50302">
        <source>WS 服务器：机器人建立 WebSocket 服务器，持续接收来自聊天平台的事件</source>
        <target state="needs-translation">WS 服务器：机器人建立 WebSocket 服务器，持续接收来自聊天平台的事件</target>
      </trans-unit>
      <trans-unit id="50304">
        <source>HTTP 轮询：机器人定时向聊天平台发起 HTTP 请求，获取新增的事件列表</source>
        <target state="needs-translation">HTTP 轮询：机器人定时向聊天平台发起 HTTP 请求，获取新增的事件列表</target>
      </trans-unit>
      <trans-unit id="50306">
        <source>当然，对于那些不太像聊天平台的聊天平台，你也可以不必拘泥于传统的通信方式。</source>
        <target state="needs-translation">当然，对于那些不太像聊天平台的聊天平台，你也可以不必拘泥于传统的通信方式。</target>
      </trans-unit>
      <trans-unit id="50308">
        <source>直接继承 `Adapter` 基类，实现自己的逻辑即可。</source>
        <target state="needs-translation">直接继承 `Adapter` 基类，实现自己的逻辑即可。</target>
      </trans-unit>
      <trans-unit id="50310">
        <source>无论是我们在本章开始介绍的命令行环境，又或者是邮件、短信，甚至是社交媒体的评论区、私信，只要是能打字的地方，都可以通过适配器的方式接入到 Koishi 中！</source>
        <target state="needs-translation">无论是我们在本章开始介绍的命令行环境，又或者是邮件、短信，甚至是社交媒体的评论区、私信，只要是能打字的地方，都可以通过适配器的方式接入到 Koishi 中！</target>
      </trans-unit>
      <trans-unit id="64420">
        <source>进阶技巧 {#advanced}</source>
        <target state="needs-translation">进阶技巧 {#advanced}</target>
      </trans-unit>
      <trans-unit id="50314">
        <source>接下来我们将介绍一些复杂适配器的实现技巧。</source>
        <target state="needs-translation">接下来我们将介绍一些复杂适配器的实现技巧。</target>
      </trans-unit>
      <trans-unit id="64422">
        <source>多协议支持 {#multi-protocol}</source>
        <target state="needs-translation">多协议支持 {#multi-protocol}</target>
      </trans-unit>
      <trans-unit id="50318">
        <source>部分平台同时支持了多种通信方式，例如 Telegram 就同时支持了 Webhook 和 HTTP 轮询。</source>
        <target state="needs-translation">部分平台同时支持了多种通信方式，例如 Telegram 就同时支持了 Webhook 和 HTTP 轮询。</target>
      </trans-unit>
      <trans-unit id="50320">
        <source>对于此类平台，我们可以提供一个配置项，让用户根据需要自行选择通信方式。</source>
        <target state="needs-translation">对于此类平台，我们可以提供一个配置项，让用户根据需要自行选择通信方式。</target>
      </trans-unit>
      <trans-unit id="50322">
        <source>首先调整目录结构，在 `server.ts` 和 `polling.ts` 中分别完成两种通信方式的适配器开发：</source>
        <target state="needs-translation">首先调整目录结构，在 `server.ts` 和 `polling.ts` 中分别完成两种通信方式的适配器开发：</target>
      </trans-unit>
      <trans-unit id="50324">
        <source>adapter-telegram
├── src
│   ├── bot.ts
│   ├── index.ts
│   ├── adapter.ts
│   ├── polling.ts
│   └── server.ts
└── package.json</source>
        <target state="needs-translation">adapter-telegram
├── src
│   ├── bot.ts
│   ├── index.ts
│   ├── adapter.ts
│   ├── polling.ts
│   └── server.ts
└── package.json</target>
      </trans-unit>
      <trans-unit id="50326">
        <source>每一种适配器可能都有自己的配置项，我们按照类插件的开发方式分别进行声明：</source>
        <target state="needs-translation">每一种适配器可能都有自己的配置项，我们按照类插件的开发方式分别进行声明：</target>
      </trans-unit>
      <trans-unit id="64496">
        <source>class ServerAdapter&lt;C extends Context&gt; extends Adapter&lt;C, TelegramBot&lt;C&gt;&gt; {}

namespace ServerAdapter {
  export interface Options {
    protocol: 'server'
    path?: string
  }

  export const Options: Schema&lt;Options&gt; = Schema.object({
    protocol: Schema.const('server').required(),
    path: Schema.string().default('/telegram'),
  })
}</source>
        <target state="needs-translation">class ServerAdapter&lt;C extends Context&gt; extends Adapter&lt;C, TelegramBot&lt;C&gt;&gt; {}

namespace ServerAdapter {
  export interface Options {
    protocol: 'server'
    path?: string
  }

  export const Options: Schema&lt;Options&gt; = Schema.object({
    protocol: Schema.const('server').required(),
    path: Schema.string().default('/telegram'),
  })
}</target>
      </trans-unit>
      <trans-unit id="64498">
        <source>class PollingAdapter&lt;C extends Context&gt; extends Adapter&lt;C, TelegramBot&lt;C&gt;&gt; {
  // polling 适配器是可重用的
  static reusable = true
}

namespace PollingAdapter {
  export interface Options {
    protocol: 'polling'
    timeout?: string
  }

  export const Options: Schema&lt;Options&gt; = Schema.object({
    protocol: Schema.const('server').required(),
    timeout: Schema.number().default(Time.second * 25),
  })
}</source>
        <target state="needs-translation">class PollingAdapter&lt;C extends Context&gt; extends Adapter&lt;C, TelegramBot&lt;C&gt;&gt; {
  // polling 适配器是可重用的
  static reusable = true
}

namespace PollingAdapter {
  export interface Options {
    protocol: 'polling'
    timeout?: string
  }

  export const Options: Schema&lt;Options&gt; = Schema.object({
    protocol: Schema.const('server').required(),
    timeout: Schema.number().default(Time.second * 25),
  })
}</target>
      </trans-unit>
      <trans-unit id="50332">
        <source>最后编写作为入口的 `TelegramBot` 类，它将根据配置项的 `protocol` 属性，自动选择相关联的适配器 (最后配置项的定义使用了 [配置联动](../../schema/advanced/union-tagged-2.md) 技巧)：</source>
        <target state="needs-translation">最后编写作为入口的 `TelegramBot` 类，它将根据配置项的 `protocol` 属性，自动选择相关联的适配器 (最后配置项的定义使用了 [配置联动](../../schema/advanced/union-tagged-2.md) 技巧)：</target>
      </trans-unit>
      <trans-unit id="64500">
        <source>class TelegramBot&lt;C extends Context&gt; extends Bot&lt;C, TelegramBot.Config&gt; {
  constructor(ctx: C, config: TelegramBot.Config) {
    super(ctx, config)
    if (config.protocol === 'server') {
      ctx.plugin(HttpServer, this)
    } else if (config.protocol === 'polling') {
      ctx.plugin(HttpPolling, this)
    }
  }
}

namespace TelegramBot {
  export type Config = ServerAdapter.Options | PollingAdapter.Options

  export const Config: Schema&lt;Config&gt; = Schema.intersect([
    Schema.object({
      protocol: Schema.union(['server', 'polling']).required(),
    }),
    Schema.union([
      HttpServer.Options,
      HttpPolling.Options,
    ]),
  ])
}</source>
        <target state="needs-translation">class TelegramBot&lt;C extends Context&gt; extends Bot&lt;C, TelegramBot.Config&gt; {
  constructor(ctx: C, config: TelegramBot.Config) {
    super(ctx, config)
    if (config.protocol === 'server') {
      ctx.plugin(HttpServer, this)
    } else if (config.protocol === 'polling') {
      ctx.plugin(HttpPolling, this)
    }
  }
}

namespace TelegramBot {
  export type Config = ServerAdapter.Options | PollingAdapter.Options

  export const Config: Schema&lt;Config&gt; = Schema.intersect([
    Schema.object({
      protocol: Schema.union(['server', 'polling']).required(),
    }),
    Schema.union([
      HttpServer.Options,
      HttpPolling.Options,
    ]),
  ])
}</target>
      </trans-unit>
      <trans-unit id="64424">
        <source>动态创建机器人 {#dynamic}</source>
        <target state="needs-translation">动态创建机器人 {#dynamic}</target>
      </trans-unit>
      <trans-unit id="50338">
        <source>到此为止，我们的适配器开发中都存在一个隐含限制：用户的一次插件加载只能对应于一个 `Bot` 实例。</source>
        <target state="needs-translation">到此为止，我们的适配器开发中都存在一个隐含限制：用户的一次插件加载只能对应于一个 `Bot` 实例。</target>
      </trans-unit>
      <trans-unit id="50340">
        <source>如果用户需要创建多个机器人，那么就需要多次加载插件。</source>
        <target state="needs-translation">如果用户需要创建多个机器人，那么就需要多次加载插件。</target>
      </trans-unit>
      <trans-unit id="50342">
        <source>这是因为在绝大多数适配器的使用场景下，用户都能很明确地知道自己需要创建多少个机器人。</source>
        <target state="needs-translation">这是因为在绝大多数适配器的使用场景下，用户都能很明确地知道自己需要创建多少个机器人。</target>
      </trans-unit>
      <trans-unit id="50344">
        <source>然而总有一些例外情况：</source>
        <target state="needs-translation">然而总有一些例外情况：</target>
      </trans-unit>
      <trans-unit id="50346">
        <source>WhatsApp 平台的一个应用可以填入多个手机号，也就对应了多个 `Bot` 实例。</source>
        <target state="needs-translation">WhatsApp 平台的一个应用可以填入多个手机号，也就对应了多个 `Bot` 实例。</target>
      </trans-unit>
      <trans-unit id="50348">
        <source>Satori 协议并不预先知道机器人的数量，而是在连接中根据机器人相关事件动态创建的。</source>
        <target state="needs-translation">Satori 协议并不预先知道机器人的数量，而是在连接中根据机器人相关事件动态创建的。</target>
      </trans-unit>
      <trans-unit id="50350">
        <source>无限制的 `Bot` 连接可能会导致你的 Koishi 被恶意调用。</source>
        <target state="needs-translation">无限制的 `Bot` 连接可能会导致你的 Koishi 被恶意调用。</target>
      </trans-unit>
      <trans-unit id="50352">
        <source>因此，如果将适配器作为可任意连接的服务端，请确保在可信任的网络环境下运行，或者引入其他验证机制。</source>
        <target state="needs-translation">因此，如果将适配器作为可任意连接的服务端，请确保在可信任的网络环境下运行，或者引入其他验证机制。</target>
      </trans-unit>
      <trans-unit id="50354">
        <source>在上述的情况下，我们需要对插件的写法做一些调整。</source>
        <target state="needs-translation">在上述的情况下，我们需要对插件的写法做一些调整。</target>
      </trans-unit>
      <trans-unit id="50356">
        <source>`Bot` 类不再能作为插件的入口了，但我们可以直接使用 `Adapter` 类作为入口。</source>
        <target state="needs-translation">`Bot` 类不再能作为插件的入口了，但我们可以直接使用 `Adapter` 类作为入口。</target>
      </trans-unit>
      <trans-unit id="50358">
        <source>这里以 WhatsApp 平台为例：</source>
        <target state="needs-translation">这里以 WhatsApp 平台为例：</target>
      </trans-unit>
      <trans-unit id="50360">
        <source>import WhatsAppAdapter from './adapter'
export default WhatsAppAdapter</source>
        <target state="needs-translation">import WhatsAppAdapter from './adapter'
export default WhatsAppAdapter</target>
      </trans-unit>
      <trans-unit id="50362">
        <source>同时，适配器也直接继承 `Adapter` 基类，并声明 `schema` 和 `reusable`：</source>
        <target state="needs-translation">同时，适配器也直接继承 `Adapter` 基类，并声明 `schema` 和 `reusable`：</target>
      </trans-unit>
      <trans-unit id="50364">
        <source>class WhatsAppAdapter&lt;C extends Context&gt; extends Adapter&lt;C, WhatsAppBot&lt;C&gt;&gt; {
  // 由适配器直接向外暴露配置项
  static schema = true
  // 这个适配器仍然是可重用的
  static reusable = true

  constructor(ctx: C, config: WhatsAppAdapter.Config) {
    super()

    // 初始化内部接口
    const http = ctx.http.extend({
      headers: { Authorization: `Bearer ${config.token}` },
    })
    const internal = new Internal(http)

    // 启动时创建机器人
    ctx.on('ready', async () =&gt; {
      const data = await internal.getPhoneNumbers()
      for (const item of data) {
        const bot = new WhatsAppBot(ctx, {
          phoneNumber: item.id,
        })
        bot.adapter = this
        bot.internal = internal
        this.bots.push(bot)
      }
    })
  }
}</source>
        <target state="needs-translation">class WhatsAppAdapter&lt;C extends Context&gt; extends Adapter&lt;C, WhatsAppBot&lt;C&gt;&gt; {
  // 由适配器直接向外暴露配置项
  static schema = true
  // 这个适配器仍然是可重用的
  static reusable = true

  constructor(ctx: C, config: WhatsAppAdapter.Config) {
    super()

    // 初始化内部接口
    const http = ctx.http.extend({
      headers: { Authorization: `Bearer ${config.token}` },
    })
    const internal = new Internal(http)

    // 启动时创建机器人
    ctx.on('ready', async () =&gt; {
      const data = await internal.getPhoneNumbers()
      for (const item of data) {
        const bot = new WhatsAppBot(ctx, {
          phoneNumber: item.id,
        })
        bot.adapter = this
        bot.internal = internal
        this.bots.push(bot)
      }
    })
  }
}</target>
      </trans-unit>
    </body>
  </file>
  <file id="1530" original="/[koishijs.docs] main/zh-CN/guide/adapter/bot.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="50366">
        <source>实现机器人</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">實作機器人</target>
      </trans-unit>
      <trans-unit id="50368">
        <source>`Bot` 对应着由 Koishi 操纵的聊天平台机器人账号。</source>
        <target state="needs-translation">`Bot` 对应着由 Koishi 操纵的聊天平台机器人账号。</target>
      </trans-unit>
      <trans-unit id="50370">
        <source>其上封装了一系列方法，用于发送消息、获取频道信息等操作。</source>
        <target state="needs-translation">其上封装了一系列方法，用于发送消息、获取频道信息等操作。</target>
      </trans-unit>
      <trans-unit id="50372">
        <source>要实现一个聊天平台的 `Bot` 类，只需要实现这些方法即可。</source>
        <target state="needs-translation">要实现一个聊天平台的 `Bot` 类，只需要实现这些方法即可。</target>
      </trans-unit>
      <trans-unit id="63748">
        <source>通用接口 {#universal}</source>
        <target state="needs-translation">通用接口 {#universal}</target>
      </trans-unit>
      <trans-unit id="50376">
        <source>让我们先回忆一下上一节介绍的 `ReplBot`：</source>
        <target state="needs-translation">让我们先回忆一下上一节介绍的 `ReplBot`：</target>
      </trans-unit>
      <trans-unit id="50378">
        <source>class ReplBot&lt;C extends Context&gt; extends Bot&lt;C&gt; {
  constructor(ctx: C, config: Config) {
    super(ctx, config)
    this.platform = 'repl'
    this.selfId = 'koishi'
    ctx.plugin(ReplAdapter, this)
  }

  async createMessage(channelId: string, content: h.Fragment) {
    process.stdout.write(h('', content).toString(true))
    process.stdout.write(EOL)
    return []
  }
}</source>
        <target state="needs-translation">class ReplBot&lt;C extends Context&gt; extends Bot&lt;C&gt; {
  constructor(ctx: C, config: Config) {
    super(ctx, config)
    this.platform = 'repl'
    this.selfId = 'koishi'
    ctx.plugin(ReplAdapter, this)
  }

  async createMessage(channelId: string, content: h.Fragment) {
    process.stdout.write(h('', content).toString(true))
    process.stdout.write(EOL)
    return []
  }
}</target>
      </trans-unit>
      <trans-unit id="50380">
        <source>这里仅仅实现了 `createMessage` 一个方法，而真正的聊天平台往往具备更多通用能力，例如获取群组、频道、用户信息，添加表态，管理群组成员以及处理邀请等等。</source>
        <target state="needs-translation">这里仅仅实现了 `createMessage` 一个方法，而真正的聊天平台往往具备更多通用能力，例如获取群组、频道、用户信息，添加表态，管理群组成员以及处理邀请等等。</target>
      </trans-unit>
      <trans-unit id="50382">
        <source>Koishi 提供了一套通用的 [机器人接口](../../api/core/bot.md)。</source>
        <target state="needs-translation">Koishi 提供了一套通用的 [机器人接口](../../api/core/bot.md)。</target>
      </trans-unit>
      <trans-unit id="50384">
        <source>适配器应当尽可能地实现这些标准方法，但这并不是必需的。</source>
        <target state="needs-translation">适配器应当尽可能地实现这些标准方法，但这并不是必需的。</target>
      </trans-unit>
      <trans-unit id="50386">
        <source>对于平台没有提供能力的 API，可以直接略去实现。</source>
        <target state="needs-translation">对于平台没有提供能力的 API，可以直接略去实现。</target>
      </trans-unit>
      <trans-unit id="63750">
        <source>访问内部接口 {#internal-access}</source>
        <target state="needs-translation">访问内部接口 {#internal-access}</target>
      </trans-unit>
      <trans-unit id="50390">
        <source>尽管上面的通用接口足以应对大多数插件的需求，但这并不能将平台的能力发挥到极致。</source>
        <target state="needs-translation">尽管上面的通用接口足以应对大多数插件的需求，但这并不能将平台的能力发挥到极致。</target>
      </trans-unit>
      <trans-unit id="50392">
        <source>为此，Koishi 也允许 `Bot` 提供一套内部接口，用于直接调用平台的原生能力。</source>
        <target state="needs-translation">为此，Koishi 也允许 `Bot` 提供一套内部接口，用于直接调用平台的原生能力。</target>
      </trans-unit>
      <trans-unit id="50394">
        <source>首先，插件并不能确定所拿到的 `Bot` 对象来自哪一个适配器，就算想要用上原生能力也必须强行做类型转换 (你稍后就能看到内部接口是如何解决类型问题的)；其次，原生接口可能与通用接口有相同的名称，随着 Koishi 未来进一步扩展通用接口，会有很大可能性引发接口冲突。</source>
        <target state="needs-translation">首先，插件并不能确定所拿到的 `Bot` 对象来自哪一个适配器，就算想要用上原生能力也必须强行做类型转换 (你稍后就能看到内部接口是如何解决类型问题的)；其次，原生接口可能与通用接口有相同的名称，随着 Koishi 未来进一步扩展通用接口，会有很大可能性引发接口冲突。</target>
      </trans-unit>
      <trans-unit id="50396">
        <source>:::</source>
        <target state="needs-translation">:::</target>
      </trans-unit>
      <trans-unit id="63752">
        <source>在插件中访问 {#access-from-plugin}</source>
        <target state="needs-translation">在插件中访问 {#access-from-plugin}</target>
      </trans-unit>
      <trans-unit id="50400">
        <source>在插件中访问内部接口有两种方法。</source>
        <target state="needs-translation">在插件中访问内部接口有两种方法。</target>
      </trans-unit>
      <trans-unit id="50402">
        <source>我们以 Discord 平台为例展示。</source>
        <target state="needs-translation">我们以 Discord 平台为例展示。</target>
      </trans-unit>
      <trans-unit id="50404">
        <source>第一种是直接通过 `bot.internal` 属性访问。</source>
        <target state="needs-translation">第一种是直接通过 `bot.internal` 属性访问。</target>
      </trans-unit>
      <trans-unit id="50406">
        <source>这个属性在 `Bot` 基类中的类型是 `any`，因此你可以直接使用其上的方法，也可以通过类型断言来获取更好的类型提示：</source>
        <target state="needs-translation">这个属性在 `Bot` 基类中的类型是 `any`，因此你可以直接使用其上的方法，也可以通过类型断言来获取更好的类型提示：</target>
      </trans-unit>
      <trans-unit id="63936">
        <source>// 这一行写在文件头
import type { DiscordBot } from '@koishijs/plugin-adapter-discord'

(bot as DiscordBot).internal.getGuild(guildId)</source>
        <target state="needs-translation">// 这一行写在文件头
import type { DiscordBot } from '@koishijs/plugin-adapter-discord'

(bot as DiscordBot).internal.getGuild(guildId)</target>
      </trans-unit>
      <trans-unit id="50410">
        <source>另一种方法是在有 `Session` 对象的环境中，直接通过 `session[platform]` 就可以访问到对应适配器的内部接口。</source>
        <target state="needs-translation">另一种方法是在有 `Session` 对象的环境中，直接通过 `session[platform]` 就可以访问到对应适配器的内部接口。</target>
      </trans-unit>
      <trans-unit id="63938">
        <source>这种方式不仅无需类型断言，并且能够直接访问到会话的原始数据。</source>
        <target state="needs-translation">这种方式不仅无需类型断言，并且能够直接访问到会话的原始数据。</target>
      </trans-unit>
      <trans-unit id="63940">
        <source>你可以用这种方式对特定平台提供定制化的支持：</source>
        <target state="needs-translation">你可以用这种方式对特定平台提供定制化的支持：</target>
      </trans-unit>
      <trans-unit id="63942">
        <source>// 这一行写在文件头
import {} from '@koishijs/plugin-adapter-discord'

if (session.discord) {
  session.discord.getGuild(guildId)     // 内部接口
  session.discord.t                     // 原始事件名称
  session.discord.d                     // 原始事件数据
} else {
  // 其他平台的处理
}</source>
        <target state="needs-translation">// 这一行写在文件头
import {} from '@koishijs/plugin-adapter-discord'

if (session.discord) {
  session.discord.getGuild(guildId)     // 内部接口
  session.discord.t                     // 原始事件名称
  session.discord.d                     // 原始事件数据
} else {
  // 其他平台的处理
}</target>
      </trans-unit>
      <trans-unit id="63944">
        <source>在上面的例子中，我们仅仅从 @koishijs/plugin-adapter-discord 中导入了类型。</source>
        <target state="needs-translation">在上面的例子中，我们仅仅从 @koishijs/plugin-adapter-discord 中导入了类型。</target>
      </trans-unit>
      <trans-unit id="63946">
        <source>这种情况下插件并不实际依赖 Discord 适配器，因此你只需要将该依赖写入 `devDependencies` 即可。</source>
        <target state="needs-translation">这种情况下插件并不实际依赖 Discord 适配器，因此你只需要将该依赖写入 `devDependencies` 即可。</target>
      </trans-unit>
      <trans-unit id="63948">
        <source>对于尚未接入 Discord 平台的用户，也不需要为运行你的插件多装一个适配器，仍然确保了安装体积的精简。</source>
        <target state="needs-translation">对于尚未接入 Discord 平台的用户，也不需要为运行你的插件多装一个适配器，仍然确保了安装体积的精简。</target>
      </trans-unit>
      <trans-unit id="63950">
        <source>关于这部分的讨论，可以参考 [服务与依赖](../plugin/service.md#peer-vs-dep) 一节。</source>
        <target state="needs-translation">关于这部分的讨论，可以参考 [服务与依赖](../plugin/service.md#peer-vs-dep) 一节。</target>
      </trans-unit>
      <trans-unit id="63754">
        <source>在适配器中访问 {#access-from-adapter}</source>
        <target state="needs-translation">在适配器中访问 {#access-from-adapter}</target>
      </trans-unit>
      <trans-unit id="50422">
        <source>内部接口不仅能为插件提供更全面的平台能力，对适配器本身的实现也有很大的帮助。</source>
        <target state="needs-translation">内部接口不仅能为插件提供更全面的平台能力，对适配器本身的实现也有很大的帮助。</target>
      </trans-unit>
      <trans-unit id="50424">
        <source>让我们截取 Discord 适配器的一段代码作为示例：</source>
        <target state="needs-translation">让我们截取 Discord 适配器的一段代码作为示例：</target>
      </trans-unit>
      <trans-unit id="50426">
        <source>class Internal {
  // 这里的实现先略去
}

// 将 Discord 的数据结构转换为通用数据结构
const decodeGuild = (data: Discord.Guild): Universal.Guild =&gt; ({
  guildId: data.id,
  guildName: data.name,
})

class DiscordBot&lt;C extends Context&gt; extends Bot&lt;C&gt; {
  constructor(ctx: C, config: Config) {
    super(ctx, config)
    this.internal = new Internal()
    ctx.plugin(DiscordAdapter, this)
  }

  // 获取群组数据
  async getGuild(guildId: string) {
    const data = await this.internal.getGuild(guildId)
    return decodeGuild(data)
  }

  // 获取群组列表
  async getGuildList() {
    const data = await this.internal.getCurrentUserGuilds()
    return { data: data.map(decodeGuild) }
  }
}</source>
        <target state="needs-translation">class Internal {
  // 这里的实现先略去
}

// 将 Discord 的数据结构转换为通用数据结构
const decodeGuild = (data: Discord.Guild): Universal.Guild =&gt; ({
  guildId: data.id,
  guildName: data.name,
})

class DiscordBot&lt;C extends Context&gt; extends Bot&lt;C&gt; {
  constructor(ctx: C, config: Config) {
    super(ctx, config)
    this.internal = new Internal()
    ctx.plugin(DiscordAdapter, this)
  }

  // 获取群组数据
  async getGuild(guildId: string) {
    const data = await this.internal.getGuild(guildId)
    return decodeGuild(data)
  }

  // 获取群组列表
  async getGuildList() {
    const data = await this.internal.getCurrentUserGuilds()
    return { data: data.map(decodeGuild) }
  }
}</target>
      </trans-unit>
      <trans-unit id="50428">
        <source>在上面这段代码中，Discord 平台与 Koishi 都定义了一个 `Guild` 接口。</source>
        <target state="needs-translation">在上面这段代码中，Discord 平台与 Koishi 都定义了一个 `Guild` 接口。</target>
      </trans-unit>
      <trans-unit id="50430">
        <source>前者包含了更多信息，但由于它们的关键字段不完全相同，因此并不能直接把请求的结果作为通用方法的返回值。</source>
        <target state="needs-translation">前者包含了更多信息，但由于它们的关键字段不完全相同，因此并不能直接把请求的结果作为通用方法的返回值。</target>
      </trans-unit>
      <trans-unit id="50432">
        <source>为此，我们实现了一个 `decodeGuild` 函数，将 Discord 的数据结构转换为 Koishi 的通用数据结构。</source>
        <target state="needs-translation">为此，我们实现了一个 `decodeGuild` 函数，将 Discord 的数据结构转换为 Koishi 的通用数据结构。</target>
      </trans-unit>
      <trans-unit id="50434">
        <source>与此同时，我们把网络请求的部分放在 `Internal` 类中实现，并在 `Bot` 类中直接调用内部方法。</source>
        <target state="needs-translation">与此同时，我们把网络请求的部分放在 `Internal` 类中实现，并在 `Bot` 类中直接调用内部方法。</target>
      </trans-unit>
      <trans-unit id="50436">
        <source>可以看到，这样编写出来的代码结构相比直接把请求放在 `Bot` 类中要清晰得多。</source>
        <target state="needs-translation">可以看到，这样编写出来的代码结构相比直接把请求放在 `Bot` 类中要清晰得多。</target>
      </trans-unit>
      <trans-unit id="63756">
        <source>实现内部接口 {#internal-impl}</source>
        <target state="needs-translation">实现内部接口 {#internal-impl}</target>
      </trans-unit>
      <trans-unit id="50440">
        <source>不同的平台由于其 API 的差异性，`Internal` 类的实现方式也会有所不同。</source>
        <target state="needs-translation">不同的平台由于其 API 的差异性，`Internal` 类的实现方式也会有所不同。</target>
      </trans-unit>
      <trans-unit id="50442">
        <source>对于简单的平台，你完全可以手动实现每一个内部接口 (甚至可以不实现 `Internal` 类，就像 REPL 适配器那样)；但如果平台本身就有上百个 API，手写每一个内部接口显然既费时又啰嗦。</source>
        <target state="needs-translation">对于简单的平台，你完全可以手动实现每一个内部接口 (甚至可以不实现 `Internal` 类，就像 REPL 适配器那样)；但如果平台本身就有上百个 API，手写每一个内部接口显然既费时又啰嗦。</target>
      </trans-unit>
      <trans-unit id="50444">
        <source>因此，Koishi 提供了一些技巧以简化你的适配工作。</source>
        <target state="needs-translation">因此，Koishi 提供了一些技巧以简化你的适配工作。</target>
      </trans-unit>
      <trans-unit id="50446">
        <source>我们这里仍然以 Discord 为例。</source>
        <target state="needs-translation">我们这里仍然以 Discord 为例。</target>
      </trans-unit>
      <trans-unit id="63758">
        <source>使用 HTTP 服务 {#http-service}</source>
        <target state="needs-translation">使用 HTTP 服务 {#http-service}</target>
      </trans-unit>
      <trans-unit id="50450">
        <source>让我们进一步完成上面的代码。</source>
        <target state="needs-translation">让我们进一步完成上面的代码。</target>
      </trans-unit>
      <trans-unit id="50452">
        <source>Discord 的 API 是 Restful 的，并且需要 `Authorization` 请求头。</source>
        <target state="needs-translation">Discord 的 API 是 Restful 的，并且需要 `Authorization` 请求头。</target>
      </trans-unit>
      <trans-unit id="50454">
        <source>我们通过在 `Internal` 类中传入一个 `http` 对象简化网络请求的写法：</source>
        <target state="needs-translation">我们通过在 `Internal` 类中传入一个 `http` 对象简化网络请求的写法：</target>
      </trans-unit>
      <trans-unit id="65144">
        <source>class Internal {
  constructor(private http: HTTP) {}

  getGuild(guildId: string) {
    return this.http.get(`/guilds/${guildId}`)
  }

  getCurrentUserGuilds() {
    return this.http.get('/users/@me/guilds')
  }
}

class DiscordBot&lt;C extends Context&gt; extends Bot&lt;C&gt; {
  constructor(ctx: C, config: Config) {
    super(ctx, config)
    const http = ctx.http.extend({
      endpoint: 'https://discord.com/api/v10',
      headers: {
        Authorization: `Bot ${config.token}`,
      },
    })
    this.internal = new Internal(http)
  }
}</source>
        <target state="needs-translation">class Internal {
  constructor(private http: HTTP) {}

  getGuild(guildId: string) {
    return this.http.get(`/guilds/${guildId}`)
  }

  getCurrentUserGuilds() {
    return this.http.get('/users/@me/guilds')
  }
}

class DiscordBot&lt;C extends Context&gt; extends Bot&lt;C&gt; {
  constructor(ctx: C, config: Config) {
    super(ctx, config)
    const http = ctx.http.extend({
      endpoint: 'https://discord.com/api/v10',
      headers: {
        Authorization: `Bot ${config.token}`,
      },
    })
    this.internal = new Internal(http)
  }
}</target>
      </trans-unit>
      <trans-unit id="65398">
        <source>[`ctx.http`](../../api/service/http.md) 是 Koishi 的基础服务，其上封装了一套基于 [fetch](https://developer.mozilla.org/zh-CN/docs/Web/API/Fetch_API) 的网络请求 API。</source>
        <target state="needs-translation">[`ctx.http`](../../api/service/http.md) 是 Koishi 的基础服务，其上封装了一套基于 [fetch](https://developer.mozilla.org/zh-CN/docs/Web/API/Fetch_API) 的网络请求 API。</target>
      </trans-unit>
      <trans-unit id="65146">
        <source>这里，我们使用 `ctx.http.extend()` 方法创建了一个新的 `HTTP` 实例，其上的请求会继承传入的配置。</source>
        <target state="needs-translation">这里，我们使用 `ctx.http.extend()` 方法创建了一个新的 `HTTP` 实例，其上的请求会继承传入的配置。</target>
      </trans-unit>
      <trans-unit id="50462">
        <source>这样我们就无需每次请求都写一遍请求头了。</source>
        <target state="needs-translation">这样我们就无需每次请求都写一遍请求头了。</target>
      </trans-unit>
      <trans-unit id="63760">
        <source>反射网络请求 {#reflect}</source>
        <target state="needs-translation">反射网络请求 {#reflect}</target>
      </trans-unit>
      <trans-unit id="65148">
        <source>在 `HTTP` 的帮助下，我们甚至可以直接对网络请求进行反射，从而自动生成内部接口。</source>
        <target state="needs-translation">在 `HTTP` 的帮助下，我们甚至可以直接对网络请求进行反射，从而自动生成内部接口。</target>
      </trans-unit>
      <trans-unit id="65150">
        <source>class Internal {
  constructor(private http: HTTP) {}

  static define(path: string, methods: Partial&lt;Record&lt;HTTP.Method, string | string[]&gt;&gt;) {
    for (const key in methods) {
      const method = key as HTTP.Method
      for (const name of makeArray(methods[method])) {
        this.prototype[name] = async function (this: Internal, ...args: any[]) {
          // 将参数填入路径中
          const url = path.replace(/\{([^}]+)\}/g, () =&gt; {
            if (!args.length) throw new TypeError('missing arguments')
            return args.shift()
          })
          return this.http(method, url)
        }
      }
    }
  }
}</source>
        <target state="needs-translation">class Internal {
  constructor(private http: HTTP) {}

  static define(path: string, methods: Partial&lt;Record&lt;HTTP.Method, string | string[]&gt;&gt;) {
    for (const key in methods) {
      const method = key as HTTP.Method
      for (const name of makeArray(methods[method])) {
        this.prototype[name] = async function (this: Internal, ...args: any[]) {
          // 将参数填入路径中
          const url = path.replace(/\{([^}]+)\}/g, () =&gt; {
            if (!args.length) throw new TypeError('missing arguments')
            return args.shift()
          })
          return this.http(method, url)
        }
      }
    }
  }
}</target>
      </trans-unit>
      <trans-unit id="50470">
        <source>有了这个 `Internal.define()` 方法，我们就可以批量定义内部接口了：</source>
        <target state="needs-translation">有了这个 `Internal.define()` 方法，我们就可以批量定义内部接口了：</target>
      </trans-unit>
      <trans-unit id="50472">
        <source>Internal.define('/guilds/{guild.id}', {
  GET: 'getGuild',
  PATCH: 'modifyGuild',
  DELETE: 'deleteGuild',
})

Internal.define('/users/@me/guilds', {
  GET: 'getCurrentUserGuilds',
})</source>
        <target state="needs-translation">Internal.define('/guilds/{guild.id}', {
  GET: 'getGuild',
  PATCH: 'modifyGuild',
  DELETE: 'deleteGuild',
})

Internal.define('/users/@me/guilds', {
  GET: 'getCurrentUserGuilds',
})</target>
      </trans-unit>
      <trans-unit id="50474">
        <source>最后别忘了通过类型合并的方式，将这些方法添加到 `Internal` 类型上：</source>
        <target state="needs-translation">最后别忘了通过类型合并的方式，将这些方法添加到 `Internal` 类型上：</target>
      </trans-unit>
      <trans-unit id="50476">
        <source>interface Internal {
  getGuild(guildId: string): Promise&lt;Discord.Guild&gt;
  modifyGuild(guildId: string, data: Discord.PartialGuild): Promise&lt;Discord.Guild&gt;
  deleteGuild(guildId: string): Promise&lt;void&gt;
  getCurrentUserGuilds(): Promise&lt;Discord.Guild[]&gt;
}</source>
        <target state="needs-translation">interface Internal {
  getGuild(guildId: string): Promise&lt;Discord.Guild&gt;
  modifyGuild(guildId: string, data: Discord.PartialGuild): Promise&lt;Discord.Guild&gt;
  deleteGuild(guildId: string): Promise&lt;void&gt;
  getCurrentUserGuilds(): Promise&lt;Discord.Guild[]&gt;
}</target>
      </trans-unit>
      <trans-unit id="50478">
        <source>上面的代码还没有考虑请求体和异常处理等问题，如果想要深入了解，可以阅读 Discord 适配器的 [源码](https://github.com/satorijs/satori/blob/master/adapters/discord/src/types/internal.ts)。</source>
        <target state="needs-translation">上面的代码还没有考虑请求体和异常处理等问题，如果想要深入了解，可以阅读 Discord 适配器的 [源码](https://github.com/satorijs/satori/blob/master/adapters/discord/src/types/internal.ts)。</target>
      </trans-unit>
      <trans-unit id="50480">
        <source>事实上，Discord 的接口已经是比较复杂的了。</source>
        <target state="needs-translation">事实上，Discord 的接口已经是比较复杂的了。</target>
      </trans-unit>
      <trans-unit id="50482">
        <source>相信有了这些技巧的加持，其他平台的适配器你一定也能手到擒来。</source>
        <target state="needs-translation">相信有了这些技巧的加持，其他平台的适配器你一定也能手到擒来。</target>
      </trans-unit>
      <trans-unit id="63762">
        <source>注入会话属性 {#session-injection}</source>
        <target state="needs-translation">注入会话属性 {#session-injection}</target>
      </trans-unit>
      <trans-unit id="50486">
        <source>在本节的最后，我们还有一点伏笔没有回收。</source>
        <target state="needs-translation">在本节的最后，我们还有一点伏笔没有回收。</target>
      </trans-unit>
      <trans-unit id="50488">
        <source>我们还需要在 `Session` 对象中注入 `discord` 属性，以便插件能够访问到内部接口：</source>
        <target state="needs-translation">我们还需要在 `Session` 对象中注入 `discord` 属性，以便插件能够访问到内部接口：</target>
      </trans-unit>
      <trans-unit id="50490">
        <source>declare module 'koishi' {
  interface Session {
    discord?: Internal &amp; Payload
  }
}</source>
        <target state="needs-translation">declare module 'koishi' {
  interface Session {
    discord?: Internal &amp; Payload
  }
}</target>
      </trans-unit>
      <trans-unit id="50492">
        <source>这里的 `Internal` 对应着内部接口，而 `Payload` 则对应着原始事件数据。</source>
        <target state="needs-translation">这里的 `Internal` 对应着内部接口，而 `Payload` 则对应着原始事件数据。</target>
      </trans-unit>
      <trans-unit id="50494">
        <source>当构造会话对象时 (将在下一节具体介绍)，我们需要将这些数据注入到 `Session` 对象中：</source>
        <target state="needs-translation">当构造会话对象时 (将在下一节具体介绍)，我们需要将这些数据注入到 `Session` 对象中：</target>
      </trans-unit>
      <trans-unit id="50496">
        <source>session.setInternal('discord', payload)</source>
        <target state="needs-translation">session.setInternal('discord', payload)</target>
      </trans-unit>
    </body>
  </file>
  <file id="1532" original="/[koishijs.docs] main/zh-CN/guide/adapter/index.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="50498">
        <source>基础知识</source>
        <target state="needs-translation">基础知识</target>
      </trans-unit>
      <trans-unit id="50500">
        <source>Koishi 通过适配器插件来实现对不同聊天平台的支持。</source>
        <target state="needs-translation">Koishi 通过适配器插件来实现对不同聊天平台的支持。</target>
      </trans-unit>
      <trans-unit id="50502">
        <source>一方面，适配器插件需要接收来自聊天平台的消息，并将其转换为 Koishi 的标准格式并触发会话事件；另一方面，对于来自 Koishi 内部的请求，适配器也需要将其转换为聊天平台的格式并发送出去。</source>
        <target state="needs-translation">一方面，适配器插件需要接收来自聊天平台的消息，并将其转换为 Koishi 的标准格式并触发会话事件；另一方面，对于来自 Koishi 内部的请求，适配器也需要将其转换为聊天平台的格式并发送出去。</target>
      </trans-unit>
      <trans-unit id="50504">
        <source>我们可以简单地将这两个过程概括成「接收」和「发送」。</source>
        <target state="needs-translation">我们可以简单地将这两个过程概括成「接收」和「发送」。</target>
      </trans-unit>
      <trans-unit id="50506">
        <source>在 Koishi 中，尽管适配器要处理的逻辑随着平台的不同而变化，但本质上所有适配器的结构都是类似的：通过实现 `Bot` 类完成发送的功能，而通过实现 `Adapter` 类完成接收的功能。</source>
        <target state="needs-translation">在 Koishi 中，尽管适配器要处理的逻辑随着平台的不同而变化，但本质上所有适配器的结构都是类似的：通过实现 `Bot` 类完成发送的功能，而通过实现 `Adapter` 类完成接收的功能。</target>
      </trans-unit>
      <trans-unit id="50508">
        <source>我们先介绍一些与跨平台相关的核心概念，随后将给出一个最简单的适配器插件示例。</source>
        <target state="needs-translation">我们先介绍一些与跨平台相关的核心概念，随后将给出一个最简单的适配器插件示例。</target>
      </trans-unit>
      <trans-unit id="50510">
        <source>核心概念</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">核心概念</target>
      </trans-unit>
      <trans-unit id="50512">
        <source>在我们开始之前，先来了解一些与跨平台相关的核心概念。</source>
        <target state="needs-translation">在我们开始之前，先来了解一些与跨平台相关的核心概念。</target>
      </trans-unit>
      <trans-unit id="50514">
        <source>**平台 (Platform)** 是指聊天平台，比如 Discord、Telegram 等。</source>
        <target state="needs-translation">**平台 (Platform)** 是指聊天平台，比如 Discord、Telegram 等。</target>
      </trans-unit>
      <trans-unit id="50516">
        <source>同一平台内的用户间具有相互发送消息的能力，而不同平台的用户间则没有。</source>
        <target state="needs-translation">同一平台内的用户间具有相互发送消息的能力，而不同平台的用户间则没有。</target>
      </trans-unit>
      <trans-unit id="50518">
        <source>对于 Rocket Chat 这一类可自建的聊天平台而言，每个独立的自建服务器都视为不同的平台。</source>
        <target state="needs-translation">对于 Rocket Chat 这一类可自建的聊天平台而言，每个独立的自建服务器都视为不同的平台。</target>
      </trans-unit>
      <trans-unit id="50520">
        <source>**机器人 (Bot)** 是指由 Koishi 操控的平台用户。</source>
        <target state="needs-translation">**机器人 (Bot)** 是指由 Koishi 操控的平台用户。</target>
      </trans-unit>
      <trans-unit id="50522">
        <source>这里的用户可以是真实用户，也可以是部分平台专门提供的机器人用户。</source>
        <target state="needs-translation">这里的用户可以是真实用户，也可以是部分平台专门提供的机器人用户。</target>
      </trans-unit>
      <trans-unit id="50524">
        <source>其他用户通过与机器人进行交互来体验 Koishi 的各项功能。</source>
        <target state="needs-translation">其他用户通过与机器人进行交互来体验 Koishi 的各项功能。</target>
      </trans-unit>
      <trans-unit id="50526">
        <source>**适配器 (Adapter)** 是指实现了平台协议，能够让机器人接入平台的插件。</source>
        <target state="needs-translation">**适配器 (Adapter)** 是指实现了平台协议，能够让机器人接入平台的插件。</target>
      </trans-unit>
      <trans-unit id="50528">
        <source>通常来说一个适配器实例对应了一个机器人用户，同时启用多个适配器就实现了多个机器人的同时接入。</source>
        <target state="needs-translation">通常来说一个适配器实例对应了一个机器人用户，同时启用多个适配器就实现了多个机器人的同时接入。</target>
      </trans-unit>
      <trans-unit id="50530">
        <source>**消息 (Message)** 是字面意义上的消息。</source>
        <target state="needs-translation">**消息 (Message)** 是字面意义上的消息。</target>
      </trans-unit>
      <trans-unit id="50532">
        <source>通常是文本或富文本格式的，有时也会包含图片、语音等媒体资源。</source>
        <target state="needs-translation">通常是文本或富文本格式的，有时也会包含图片、语音等媒体资源。</target>
      </trans-unit>
      <trans-unit id="50534">
        <source>在 Koishi 中，消息通过消息元素进行统一编码。</source>
        <target state="needs-translation">在 Koishi 中，消息通过消息元素进行统一编码。</target>
      </trans-unit>
      <trans-unit id="50536">
        <source>**频道 (Channel)** 是消息的集合。</source>
        <target state="needs-translation">**频道 (Channel)** 是消息的集合。</target>
      </trans-unit>
      <trans-unit id="50538">
        <source>一个频道包含了具备时间、逻辑顺序的一系列消息。</source>
        <target state="needs-translation">一个频道包含了具备时间、逻辑顺序的一系列消息。</target>
      </trans-unit>
      <trans-unit id="50540">
        <source>频道又分为私聊频道和群聊频道，其中私聊频道有且仅有两人参与，而群聊频道可以有任意多人参与。</source>
        <target state="needs-translation">频道又分为私聊频道和群聊频道，其中私聊频道有且仅有两人参与，而群聊频道可以有任意多人参与。</target>
      </trans-unit>
      <trans-unit id="50542">
        <source>**群组 (Guild)** 是平台用户的集合。</source>
        <target state="needs-translation">**群组 (Guild)** 是平台用户的集合。</target>
      </trans-unit>
      <trans-unit id="50544">
        <source>一个群组通常会同时包含一组用户和频道，并通过权限机制让其中的部分用户进行管理。</source>
        <target state="needs-translation">一个群组通常会同时包含一组用户和频道，并通过权限机制让其中的部分用户进行管理。</target>
      </trans-unit>
      <trans-unit id="50546">
        <source>在部分平台中，群组和群聊频道的概念恰好是重合的 (例如 QQ)：一个群组内有且仅有一个群聊频道。</source>
        <target state="needs-translation">在部分平台中，群组和群聊频道的概念恰好是重合的 (例如 QQ)：一个群组内有且仅有一个群聊频道。</target>
      </trans-unit>
      <trans-unit id="50548">
        <source>私聊频道不属于任何群组。</source>
        <target state="needs-translation">私聊频道不属于任何群组。</target>
      </trans-unit>
      <trans-unit id="50550">
        <source>REPL 适配器</source>
        <target state="needs-translation">REPL 适配器</target>
      </trans-unit>
      <trans-unit id="50552">
        <source>下面展示的插件是 REPL 适配器，它可以接收来自命令行的消息，并把 Koishi 的回复同样输出到命令行中。</source>
        <target state="needs-translation">下面展示的插件是 REPL 适配器，它可以接收来自命令行的消息，并把 Koishi 的回复同样输出到命令行中。</target>
      </trans-unit>
      <trans-unit id="50554">
        <source>你可以在 [这个仓库](https://github.com/koishijs/koishi-plugin-adapter-repl) 查看它的源码。</source>
        <target state="needs-translation">你可以在 [这个仓库](https://github.com/koishijs/koishi-plugin-adapter-repl) 查看它的源码。</target>
      </trans-unit>
      <trans-unit id="50556">
        <source>REPL 的意思是 Read-Eval-Print-Loop (读取-求值-输出-循环)，是一种交互式环境。</source>
        <target state="needs-translation">REPL 的意思是 Read-Eval-Print-Loop (读取-求值-输出-循环)，是一种交互式环境。</target>
      </trans-unit>
      <trans-unit id="50558">
        <source>REPL 适配器有三个文件。</source>
        <target state="needs-translation">REPL 适配器有三个文件。</target>
      </trans-unit>
      <trans-unit id="50560">
        <source>首先来看入口文件 `index.ts`，它什么事都没做：</source>
        <target state="needs-translation">首先来看入口文件 `index.ts`，它什么事都没做：</target>
      </trans-unit>
      <trans-unit id="50562">
        <source>import ReplBot from './bot'
export default ReplBot</source>
        <target state="needs-translation">import ReplBot from './bot'
export default ReplBot</target>
      </trans-unit>
      <trans-unit id="50564">
        <source>接下来是 `bot.ts`。</source>
        <target state="needs-translation">接下来是 `bot.ts`。</target>
      </trans-unit>
      <trans-unit id="50566">
        <source>我们可以看到它实现了 `sendMessage` 方法，用来发送消息：</source>
        <target state="needs-translation">我们可以看到它实现了 `sendMessage` 方法，用来发送消息：</target>
      </trans-unit>
      <trans-unit id="50568">
        <source>import { Bot, Context, h, Schema } from 'koishi'
import { EOL } from 'os'
import ReplAdapter from './adapter'

export interface Config {}
export const Config: Schema&lt;Config&gt; = Schema.object({})

export default class ReplBot extends Bot {
  constructor(ctx: Context, config: Config) {
    super(ctx, config)
    this.platform = 'repl'
    this.selfId = 'koishi'
    ctx.plugin(ReplAdapter, this)
  }

  async createMessage(channelId: string, content: h.Fragment) {
    process.stdout.write(h('', content).toString(true))
    process.stdout.write(EOL)
    return []
  }
}</source>
        <target state="needs-translation">import { Bot, Context, h, Schema } from 'koishi'
import { EOL } from 'os'
import ReplAdapter from './adapter'

export interface Config {}
export const Config: Schema&lt;Config&gt; = Schema.object({})

export default class ReplBot extends Bot {
  constructor(ctx: Context, config: Config) {
    super(ctx, config)
    this.platform = 'repl'
    this.selfId = 'koishi'
    ctx.plugin(ReplAdapter, this)
  }

  async createMessage(channelId: string, content: h.Fragment) {
    process.stdout.write(h('', content).toString(true))
    process.stdout.write(EOL)
    return []
  }
}</target>
      </trans-unit>
      <trans-unit id="50570">
        <source>最后是 `adapter.ts`，它创建了一个 [readline](https://nodejs.org/dist/latest-v20.x/docs/api/readline.html) 接口，用于接收消息并生成会话：</source>
        <target state="needs-translation">最后是 `adapter.ts`，它创建了一个 [readline](https://nodejs.org/dist/latest-v20.x/docs/api/readline.html) 接口，用于接收消息并生成会话：</target>
      </trans-unit>
      <trans-unit id="50572">
        <source>import { Adapter, Context } from 'koishi'
import { createInterface } from 'readline'
import ReplBot from './bot'

export default class ReplAdapter extends Adapter&lt;ReplBot&gt; {
  rl = createInterface({
    input: process.stdin,
  })

  async start(bot: ReplBot) {
    bot.online()
    this.rl.on('line', (line) =&gt; {
      const session = bot.session()
      session.type = 'message'
      session.userId = 'repl'
      session.channelId = 'repl'
      session.isDirect = true
      session.content = line
      bot.dispatch(session)
    })
  }

  async stop(bot: ReplBot) {
    this.rl.close()
  }
}</source>
        <target state="needs-translation">import { Adapter, Context } from 'koishi'
import { createInterface } from 'readline'
import ReplBot from './bot'

export default class ReplAdapter extends Adapter&lt;ReplBot&gt; {
  rl = createInterface({
    input: process.stdin,
  })

  async start(bot: ReplBot) {
    bot.online()
    this.rl.on('line', (line) =&gt; {
      const session = bot.session()
      session.type = 'message'
      session.userId = 'repl'
      session.channelId = 'repl'
      session.isDirect = true
      session.content = line
      bot.dispatch(session)
    })
  }

  async stop(bot: ReplBot) {
    this.rl.close()
  }
}</target>
      </trans-unit>
      <trans-unit id="50574">
        <source>真实的聊天平台当然会比命令行交互复杂得多，但你仍然可以使用相同的结构来实现它们。</source>
        <target state="needs-translation">真实的聊天平台当然会比命令行交互复杂得多，但你仍然可以使用相同的结构来实现它们。</target>
      </trans-unit>
      <trans-unit id="50576">
        <source>在接下来的几节中，我们会进一步介绍适配器插件的更多设计细节。</source>
        <target state="needs-translation">在接下来的几节中，我们会进一步介绍适配器插件的更多设计细节。</target>
      </trans-unit>
      <trans-unit id="50578">
        <source>答案是肯定的。</source>
        <target state="needs-translation">答案是肯定的。</target>
      </trans-unit>
      <trans-unit id="50580">
        <source>这个插件的入口文件默认导出了 `ReplBot`。</source>
        <target state="needs-translation">这个插件的入口文件默认导出了 `ReplBot`。</target>
      </trans-unit>
      <trans-unit id="50582">
        <source>而 `ReplBot` 的构造函数接受两个参数 `ctx` 和 `config`，这与插件的 [类形式](../plugin/index.md) 是一致的。</source>
        <target state="needs-translation">而 `ReplBot` 的构造函数接受两个参数 `ctx` 和 `config`，这与插件的 [类形式](../plugin/index.md) 是一致的。</target>
      </trans-unit>
      <trans-unit id="50584">
        <source>这意味着，一个 `ReplBot` 类本身就是一个可以安装的插件！</source>
        <target state="needs-translation">这意味着，一个 `ReplBot` 类本身就是一个可以安装的插件！</target>
      </trans-unit>
      <trans-unit id="50586">
        <source>与此同时，`Bot` 基类中也声明了它是一个 [可重用](../plugin/lifecycle.md#可重用插件) 的插件，因此多次加载此插件将会创建多个独立的 `ReplBot` 实例。</source>
        <target state="needs-translation">与此同时，`Bot` 基类中也声明了它是一个 [可重用](../plugin/lifecycle.md#可重用插件) 的插件，因此多次加载此插件将会创建多个独立的 `ReplBot` 实例。</target>
      </trans-unit>
      <trans-unit id="50588">
        <source>适配器插件是最常见的可重用插件。</source>
        <target state="needs-translation">适配器插件是最常见的可重用插件。</target>
      </trans-unit>
      <trans-unit id="50590">
        <source>:::</source>
        <target state="needs-translation">:::</target>
      </trans-unit>
    </body>
  </file>
  <file id="1534" original="/[koishijs.docs] main/zh-CN/guide/adapter/integration.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="50592">
        <source>平台集成</source>
        <target state="needs-translation">平台集成</target>
      </trans-unit>
      <trans-unit id="50594">
        <source>至此，Koishi 的适配器开发已经接近尾声。</source>
        <target state="needs-translation">至此，Koishi 的适配器开发已经接近尾声。</target>
      </trans-unit>
      <trans-unit id="50596">
        <source>经过前面的几节内容，我们的适配器已经封装了平台接口，与服务器稳定地进行连接，并能够顺利地接受和发送消息。</source>
        <target state="needs-translation">经过前面的几节内容，我们的适配器已经封装了平台接口，与服务器稳定地进行连接，并能够顺利地接受和发送消息。</target>
      </trans-unit>
      <trans-unit id="50598">
        <source>但除此以外，部分平台还提供了一些额外的能力，允许机器人做得更好。</source>
        <target state="needs-translation">但除此以外，部分平台还提供了一些额外的能力，允许机器人做得更好。</target>
      </trans-unit>
      <trans-unit id="50600">
        <source>Koishi 当然也要把这些能力集成到机器人中。</source>
        <target state="needs-translation">Koishi 当然也要把这些能力集成到机器人中。</target>
      </trans-unit>
      <trans-unit id="64426">
        <source>斜线指令 {#slash-command}</source>
        <target state="needs-translation">斜线指令 {#slash-command}</target>
      </trans-unit>
      <trans-unit id="50604">
        <source>相关章节：[指令开发](../basic/command.md)</source>
        <target state="needs-translation">相关章节：[指令开发](../basic/command.md)</target>
      </trans-unit>
      <trans-unit id="50606">
        <source>部分平台为机器人提供了斜线指令功能，用于在聊天框中快速输入指令。</source>
        <target state="needs-translation">部分平台为机器人提供了斜线指令功能，用于在聊天框中快速输入指令。</target>
      </trans-unit>
      <trans-unit id="50608">
        <source>在 Discord 中差不多是这个效果：</source>
        <target state="needs-translation">在 Discord 中差不多是这个效果：</target>
      </trans-unit>
      <trans-unit id="50610">
        <source>![slash command](/adapter/slash.png)</source>
        <target state="needs-translation">![slash command](/adapter/slash.png)</target>
      </trans-unit>
      <trans-unit id="50612">
        <source>适配器可以通过 `bot.updateCommands()` 方法，将 Koishi 的指令注册为平台的斜线指令：</source>
        <target state="needs-translation">适配器可以通过 `bot.updateCommands()` 方法，将 Koishi 的指令注册为平台的斜线指令：</target>
      </trans-unit>
      <trans-unit id="50614">
        <source>class DiscordBot {
  async updateCommands(commands: Universal.Command[]) {
    // 这里忽略了部分细节，仅供参考
    const updates = commands.map(Discord.encodeCommand)
    await this.internal.bulkOverwriteGlobalApplicationCommands(this.selfId, updates)
  }
}</source>
        <target state="needs-translation">class DiscordBot {
  async updateCommands(commands: Universal.Command[]) {
    // 这里忽略了部分细节，仅供参考
    const updates = commands.map(Discord.encodeCommand)
    await this.internal.bulkOverwriteGlobalApplicationCommands(this.selfId, updates)
  }
}</target>
      </trans-unit>
      <trans-unit id="64428">
        <source>用户语言偏好 {#user-locale}</source>
        <target state="needs-translation">用户语言偏好 {#user-locale}</target>
      </trans-unit>
      <trans-unit id="50618">
        <source>相关章节：[多语言支持](../i18n/index.md)</source>
        <target state="needs-translation">相关章节：[多语言支持](../i18n/index.md)</target>
      </trans-unit>
      <trans-unit id="50620">
        <source>部分平台本身支持多种语言。</source>
        <target state="needs-translation">部分平台本身支持多种语言。</target>
      </trans-unit>
      <trans-unit id="50622">
        <source>在这样的平台中，用户可以自行设置自己的语言偏好。</source>
        <target state="needs-translation">在这样的平台中，用户可以自行设置自己的语言偏好。</target>
      </trans-unit>
      <trans-unit id="50624">
        <source>当用户向机器人发送消息时，Koishi 就可以根据用户的语言偏好，做出相应语言的回复。</source>
        <target state="needs-translation">当用户向机器人发送消息时，Koishi 就可以根据用户的语言偏好，做出相应语言的回复。</target>
      </trans-unit>
      <trans-unit id="50626">
        <source>而适配器所需要做的，就只有设置 `session.locales` 属性 (以 Telegram 平台为例)：</source>
        <target state="needs-translation">而适配器所需要做的，就只有设置 `session.locales` 属性 (以 Telegram 平台为例)：</target>
      </trans-unit>
      <trans-unit id="50628">
        <source>if (from.language_code) {
  // 这里为了简化逻辑，只取语言码的前两位
  session.locales = [from.language_code.slice(0, 2)]
}</source>
        <target state="needs-translation">if (from.language_code) {
  // 这里为了简化逻辑，只取语言码的前两位
  session.locales = [from.language_code.slice(0, 2)]
}</target>
      </trans-unit>
    </body>
  </file>
  <file id="1536" original="/[koishijs.docs] main/zh-CN/guide/adapter/message.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="50630">
        <source>消息编码</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">訊息編碼</target>
      </trans-unit>
      <trans-unit id="50632">
        <source>在 [实现机器人](./bot.md#在适配器中访问) 一节中，我们其实已经涉及了格式转换的概念：</source>
        <target state="needs-translation">在 [实现机器人](./bot.md#在适配器中访问) 一节中，我们其实已经涉及了格式转换的概念：</target>
      </trans-unit>
      <trans-unit id="50634">
        <source>// 将 Discord 的数据结构转换为通用数据结构
const decodeGuild = (data: Discord.Guild): Universal.Guild =&gt; ({
  guildId: data.id,
  guildName: data.name,
})

// 将通用数据结构转换为 Discord 的数据结构
const encodeGuild = (data: Universal.Guild): Discord.Guild =&gt; ({
  id: data.guildId,
  name: data.guildName,
})</source>
        <target state="needs-translation">// 将 Discord 的数据结构转换为通用数据结构
const decodeGuild = (data: Discord.Guild): Universal.Guild =&gt; ({
  guildId: data.id,
  guildName: data.name,
})

// 将通用数据结构转换为 Discord 的数据结构
const encodeGuild = (data: Universal.Guild): Discord.Guild =&gt; ({
  id: data.guildId,
  name: data.guildName,
})</target>
      </trans-unit>
      <trans-unit id="50636">
        <source>不同平台对于同一个概念的接口会存在或多或少的差异。</source>
        <target state="needs-translation">不同平台对于同一个概念的接口会存在或多或少的差异。</target>
      </trans-unit>
      <trans-unit id="50638">
        <source>为了抹平这些差异，Koishi 引入了一套通用接口，用来描述这些跨平台的概念。</source>
        <target state="needs-translation">为了抹平这些差异，Koishi 引入了一套通用接口，用来描述这些跨平台的概念。</target>
      </trans-unit>
      <trans-unit id="50640">
        <source>在实现机器人和适配器时，通常都需要编写如上的函数，来对具体平台的数据进行转化。</source>
        <target state="needs-translation">在实现机器人和适配器时，通常都需要编写如上的函数，来对具体平台的数据进行转化。</target>
      </trans-unit>
      <trans-unit id="50642">
        <source>而这其中最复杂的则是对消息的处理。</source>
        <target state="needs-translation">而这其中最复杂的则是对消息的处理。</target>
      </trans-unit>
      <trans-unit id="50644">
        <source>Koishi 使用 [消息元素](../basic/element.md) 表达任何聊天平台的消息。</source>
        <target state="needs-translation">Koishi 使用 [消息元素](../basic/element.md) 表达任何聊天平台的消息。</target>
      </trans-unit>
      <trans-unit id="50646">
        <source>这是一种类似于 HTML 的格式。</source>
        <target state="needs-translation">这是一种类似于 HTML 的格式。</target>
      </trans-unit>
      <trans-unit id="50648">
        <source>消息元素作为组成消息的基本单位，可以表示具有特定语义的内容，如文本、表情、图片、引用、元信息等。</source>
        <target state="needs-translation">消息元素作为组成消息的基本单位，可以表示具有特定语义的内容，如文本、表情、图片、引用、元信息等。</target>
      </trans-unit>
      <trans-unit id="50650">
        <source>本节将介绍如何在消息元素与平台消息之间互相转换。</source>
        <target state="needs-translation">本节将介绍如何在消息元素与平台消息之间互相转换。</target>
      </trans-unit>
      <trans-unit id="64430">
        <source>接收消息 {#receive}</source>
        <target state="needs-translation">接收消息 {#receive}</target>
      </trans-unit>
      <trans-unit id="50654">
        <source>在会话对象上存在两个属性与消息的内容有关：`content` 和 `elements`，它们分别对应着字符串形式和消息元素形式的消息内容。</source>
        <target state="needs-translation">在会话对象上存在两个属性与消息的内容有关：`content` 和 `elements`，它们分别对应着字符串形式和消息元素形式的消息内容。</target>
      </trans-unit>
      <trans-unit id="50656">
        <source>它们之间会自动转换，因此下面的两种写法是等价的：</source>
        <target state="needs-translation">它们之间会自动转换，因此下面的两种写法是等价的：</target>
      </trans-unit>
      <trans-unit id="50658">
        <source>session.content = '欢迎 &lt;at id=&quot;1234567&quot;/&gt;'</source>
        <target state="needs-translation">session.content = '欢迎 &lt;at id=&quot;1234567&quot;/&gt;'</target>
      </trans-unit>
      <trans-unit id="50660">
        <source>session.elements = [
  h('text', { content: '欢迎 ' }),
  h('at', { id: '1234567' }),
]</source>
        <target state="needs-translation">session.elements = [
  h('text', { content: '欢迎 ' }),
  h('at', { id: '1234567' }),
]</target>
      </trans-unit>
      <trans-unit id="50662">
        <source>在接收消息时，只需根据平台的格式对消息进行解码，将结果赋值到上述两个属性之一即可。</source>
        <target state="needs-translation">在接收消息时，只需根据平台的格式对消息进行解码，将结果赋值到上述两个属性之一即可。</target>
      </trans-unit>
      <trans-unit id="50664">
        <source>下面是一个最简单的例子，假设平台的消息均以文本形式接收，并且使用 `@id` 的语法表达提及用户，那么你可以这么写：</source>
        <target state="needs-translation">下面是一个最简单的例子，假设平台的消息均以文本形式接收，并且使用 `@id` 的语法表达提及用户，那么你可以这么写：</target>
      </trans-unit>
      <trans-unit id="50666">
        <source>session.content = input.replace(/@(\d+)/g, '&lt;at id=&quot;$1&quot;/&gt;')</source>
        <target state="needs-translation">session.content = input.replace(/@(\d+)/g, '&lt;at id=&quot;$1&quot;/&gt;')</target>
      </trans-unit>
      <trans-unit id="64432">
        <source>发送消息 {#send}</source>
        <target state="needs-translation">发送消息 {#send}</target>
      </trans-unit>
      <trans-unit id="64434">
        <source>兼容性原则 {#compatibility}</source>
        <target state="needs-translation">兼容性原则 {#compatibility}</target>
      </trans-unit>
      <trans-unit id="50672">
        <source>在具体介绍消息发送之前，不知道你是否有这样的疑问：Koishi 提供了一整套标准的消息元素，但并非所有平台都支持这些元素。</source>
        <target state="needs-translation">在具体介绍消息发送之前，不知道你是否有这样的疑问：Koishi 提供了一整套标准的消息元素，但并非所有平台都支持这些元素。</target>
      </trans-unit>
      <trans-unit id="50674">
        <source>对于那些不支持的元素，应该如何处理呢？</source>
        <target state="needs-translation">对于那些不支持的元素，应该如何处理呢？</target>
      </trans-unit>
      <trans-unit id="50676">
        <source>Koishi 的建议是**尽量兼容实现**。</source>
        <target state="needs-translation">Koishi 的建议是**尽量兼容实现**。</target>
      </trans-unit>
      <trans-unit id="50678">
        <source>对于平台不支持的元素，可以根据元素的类型和用户的配置进行转化与回退。</source>
        <target state="needs-translation">对于平台不支持的元素，可以根据元素的类型和用户的配置进行转化与回退。</target>
      </trans-unit>
      <trans-unit id="50680">
        <source>大致可以分为两种情况：</source>
        <target state="needs-translation">大致可以分为两种情况：</target>
      </trans-unit>
      <trans-unit id="50682">
        <source>修饰型的元素可以选择只渲染内部的元素，或以适当的方式进行文本修饰。</source>
        <target state="needs-translation">修饰型的元素可以选择只渲染内部的元素，或以适当的方式进行文本修饰。</target>
      </trans-unit>
      <trans-unit id="50684">
        <source>&lt;br&gt;例如：在不支持粗体的平台上渲染 `&lt;b&gt;` 时，可以改为只渲染粗体的内容。</source>
        <target state="needs-translation">&lt;br&gt;例如：在不支持粗体的平台上渲染 `&lt;b&gt;` 时，可以改为只渲染粗体的内容。</target>
      </trans-unit>
      <trans-unit id="50686">
        <source>&lt;br&gt;例如：在不支持列表的平台上渲染 `&lt;ul&gt;` 时，可以在每个列表项前面渲染一个 `-`。</source>
        <target state="needs-translation">&lt;br&gt;例如：在不支持列表的平台上渲染 `&lt;ul&gt;` 时，可以在每个列表项前面渲染一个 `-`。</target>
      </trans-unit>
      <trans-unit id="50688">
        <source>占位型的元素尽量转换为可渲染的元素；如果实在无法渲染则抛出错误。</source>
        <target state="needs-translation">占位型的元素尽量转换为可渲染的元素；如果实在无法渲染则抛出错误。</target>
      </trans-unit>
      <trans-unit id="50690">
        <source>&lt;br&gt;例如：如果平台不支持发送网络图片，可以先将图片下载到本地再发送。</source>
        <target state="needs-translation">&lt;br&gt;例如：如果平台不支持发送网络图片，可以先将图片下载到本地再发送。</target>
      </trans-unit>
      <trans-unit id="50692">
        <source>&lt;br&gt;例如：如果平台不支持发送语音，可以改为发送文件，或抛出错误。</source>
        <target state="needs-translation">&lt;br&gt;例如：如果平台不支持发送语音，可以改为发送文件，或抛出错误。</target>
      </trans-unit>
      <trans-unit id="50694">
        <source>对于更加复杂的元素，适配器也可以发挥自主性，设计最适合的交互形式。</source>
        <target state="needs-translation">对于更加复杂的元素，适配器也可以发挥自主性，设计最适合的交互形式。</target>
      </trans-unit>
      <trans-unit id="50696">
        <source>例如，如果用户的需求是「从若干个选项中选择一个」，那么平台 A 可以渲染出多个按钮供用户点击；平台 B 则可以发送一条带有表态的消息，点击表态对应选择选项；实在不行，平台 C 也可以直接发送选项列表和文本提示语，并将用户的下一次输入作为选项。</source>
        <target state="needs-translation">例如，如果用户的需求是「从若干个选项中选择一个」，那么平台 A 可以渲染出多个按钮供用户点击；平台 B 则可以发送一条带有表态的消息，点击表态对应选择选项；实在不行，平台 C 也可以直接发送选项列表和文本提示语，并将用户的下一次输入作为选项。</target>
      </trans-unit>
      <trans-unit id="64436">
        <source>消息编码器 {#encoder}</source>
        <target state="needs-translation">消息编码器 {#encoder}</target>
      </trans-unit>
      <trans-unit id="50700">
        <source>之前介绍过的 REPL 适配器为了简化写法，并未包含消息的编码过程。</source>
        <target state="needs-translation">之前介绍过的 REPL 适配器为了简化写法，并未包含消息的编码过程。</target>
      </trans-unit>
      <trans-unit id="50702">
        <source>对于一般的适配器，我们建议通过继承 `MessageEncoder` 类来实现消息的发送逻辑。</source>
        <target state="needs-translation">对于一般的适配器，我们建议通过继承 `MessageEncoder` 类来实现消息的发送逻辑。</target>
      </trans-unit>
      <trans-unit id="50704">
        <source>这里我们以 Telegram 平台为例，首先在源码目录下创建 `message.ts`：</source>
        <target state="needs-translation">这里我们以 Telegram 平台为例，首先在源码目录下创建 `message.ts`：</target>
      </trans-unit>
      <trans-unit id="50706">
        <source>adapter-example
├── src
│   ├── adapter.ts
│   ├── bot.ts
│   ├── index.ts
│   └── message.ts
└── package.json</source>
        <target state="needs-translation">adapter-example
├── src
│   ├── adapter.ts
│   ├── bot.ts
│   ├── index.ts
│   └── message.ts
└── package.json</target>
      </trans-unit>
      <trans-unit id="50708">
        <source>在这个文件中我们定义 `TelegramMessageEncoder`：</source>
        <target state="needs-translation">在这个文件中我们定义 `TelegramMessageEncoder`：</target>
      </trans-unit>
      <trans-unit id="63982">
        <source>class TelegramMessageEncoder&lt;C extends Context&gt; extends MessageEncoder&lt;C, TelegramBot&lt;C&gt;&gt; {
  // 使用 payload 存储待发送的消息
  private payload: Dict

  // 在 prepare 中初始化 payload
  async prepare() {
    this.payload = { chat_id: this.channelId, parse_mode: 'html', text: '' }
  }

  // 将发送好的消息添加到 results 中
  async addResult(data: Telegram.Message) {
    const message = decodeMessage(data)
    this.results.push(message)
    const session = this.bot.session()
    session.event.message = message
    session.app.emit(session, 'send', session)
  }

  // 发送缓冲区内的消息
  async flush() {
    let message: Telegram.Message
    if (this.payload.text) {
      message = await this.bot.internal.sendMessage(this.payload)
    }
    await this.addResult(message)
    this.payload.text = ''
  }

  // 遍历消息元素
  async visit(element: h) {
    const { type, attrs, children } = element
    if (type === 'text') {
      this.payload.text += h.escape(attrs.content)
    } else {
      await this.render(children)
    }
  }
}</source>
        <target state="needs-translation">class TelegramMessageEncoder&lt;C extends Context&gt; extends MessageEncoder&lt;C, TelegramBot&lt;C&gt;&gt; {
  // 使用 payload 存储待发送的消息
  private payload: Dict

  // 在 prepare 中初始化 payload
  async prepare() {
    this.payload = { chat_id: this.channelId, parse_mode: 'html', text: '' }
  }

  // 将发送好的消息添加到 results 中
  async addResult(data: Telegram.Message) {
    const message = decodeMessage(data)
    this.results.push(message)
    const session = this.bot.session()
    session.event.message = message
    session.app.emit(session, 'send', session)
  }

  // 发送缓冲区内的消息
  async flush() {
    let message: Telegram.Message
    if (this.payload.text) {
      message = await this.bot.internal.sendMessage(this.payload)
    }
    await this.addResult(message)
    this.payload.text = ''
  }

  // 遍历消息元素
  async visit(element: h) {
    const { type, attrs, children } = element
    if (type === 'text') {
      this.payload.text += h.escape(attrs.content)
    } else {
      await this.render(children)
    }
  }
}</target>
      </trans-unit>
      <trans-unit id="50712">
        <source>一个 `MessageEncoder` 类需要提供 `flush` 和 `visit` 两个方法。</source>
        <target state="needs-translation">一个 `MessageEncoder` 类需要提供 `flush` 和 `visit` 两个方法。</target>
      </trans-unit>
      <trans-unit id="50714">
        <source>前者用于发送缓冲区内的消息，后者用于遍历消息元素。</source>
        <target state="needs-translation">前者用于发送缓冲区内的消息，后者用于遍历消息元素。</target>
      </trans-unit>
      <trans-unit id="50716">
        <source>消息发送完成后，还需要触发 `send` 事件并将结果存储于 `results` 数组中。</source>
        <target state="needs-translation">消息发送完成后，还需要触发 `send` 事件并将结果存储于 `results` 数组中。</target>
      </trans-unit>
      <trans-unit id="50718">
        <source>与此同时，我们还需要修改 `TelegramBot` 类，为其添加静态属性。</source>
        <target state="needs-translation">与此同时，我们还需要修改 `TelegramBot` 类，为其添加静态属性。</target>
      </trans-unit>
      <trans-unit id="50720">
        <source>实现了 `MessageEncoder` 静态属性后，就无需手动实现 `bot.sendMessage()` 和 `bot.sendPrivateMessage()` 方法了：</source>
        <target state="needs-translation">实现了 `MessageEncoder` 静态属性后，就无需手动实现 `bot.sendMessage()` 和 `bot.sendPrivateMessage()` 方法了：</target>
      </trans-unit>
      <trans-unit id="50722">
        <source>export class TelegramBot&lt;C extends Context&gt; extends Bot&lt;C, TelegramBot.Config&gt; {
  static MessageEncoder = TelegramMessageEncoder
}</source>
        <target state="needs-translation">export class TelegramBot&lt;C extends Context&gt; extends Bot&lt;C, TelegramBot.Config&gt; {
  static MessageEncoder = TelegramMessageEncoder
}</target>
      </trans-unit>
      <trans-unit id="64438">
        <source>行内元素 {#inline}</source>
        <target state="needs-translation">行内元素 {#inline}</target>
      </trans-unit>
      <trans-unit id="50726">
        <source>上面的例子仅仅包含了消息编码器的基本结构，并未实现除了文本外的任何消息元素。</source>
        <target state="needs-translation">上面的例子仅仅包含了消息编码器的基本结构，并未实现除了文本外的任何消息元素。</target>
      </trans-unit>
      <trans-unit id="50728">
        <source>对于任何非文本元素，上面的代码都会回退到其内部的文本。</source>
        <target state="needs-translation">对于任何非文本元素，上面的代码都会回退到其内部的文本。</target>
      </trans-unit>
      <trans-unit id="50730">
        <source>要添加更多消息元素的支持，只需在 `visit` 方法中添加更多的判断分支，就像这样：</source>
        <target state="needs-translation">要添加更多消息元素的支持，只需在 `visit` 方法中添加更多的判断分支，就像这样：</target>
      </trans-unit>
      <trans-unit id="50732">
        <source>if (type === 'text') {
  this.payload.text += h.escape(attrs.content)
} else if (['b', 'strong', 'i', 'em', 'u', 'ins', 's', 'del'].includes(type)) {
  // 这些元素都是 Telegram 已经支持的，直接渲染成 HTML 即可
  this.payload.text += `&lt;${type}&gt;`
  await this.render(children)
  this.payload.text += `&lt;/${type}&gt;`
} else if (type === 'at') {
  // 将 at 渲染为用户链接
  this.payload.text += `&lt;a href=&quot;tg://user?id=${attrs.id}&quot;&gt;@${attrs.name || attrs.id}&lt;/a&gt;`
} else {
  await this.render(children)
}</source>
        <target state="needs-translation">if (type === 'text') {
  this.payload.text += h.escape(attrs.content)
} else if (['b', 'strong', 'i', 'em', 'u', 'ins', 's', 'del'].includes(type)) {
  // 这些元素都是 Telegram 已经支持的，直接渲染成 HTML 即可
  this.payload.text += `&lt;${type}&gt;`
  await this.render(children)
  this.payload.text += `&lt;/${type}&gt;`
} else if (type === 'at') {
  // 将 at 渲染为用户链接
  this.payload.text += `&lt;a href=&quot;tg://user?id=${attrs.id}&quot;&gt;@${attrs.name || attrs.id}&lt;/a&gt;`
} else {
  await this.render(children)
}</target>
      </trans-unit>
      <trans-unit id="64440">
        <source>消息分片 {#fragment}</source>
        <target state="needs-translation">消息分片 {#fragment}</target>
      </trans-unit>
      <trans-unit id="50736">
        <source>在 Koishi 中，一次消息发送可能在目标平台产生多条独立的消息，称为消息分片。</source>
        <target state="needs-translation">在 Koishi 中，一次消息发送可能在目标平台产生多条独立的消息，称为消息分片。</target>
      </trans-unit>
      <trans-unit id="50738">
        <source>这也是为什么上面的 `results` 是一个数组。</source>
        <target state="needs-translation">这也是为什么上面的 `results` 是一个数组。</target>
      </trans-unit>
      <trans-unit id="50740">
        <source>消息分片产生的原因是多样的：</source>
        <target state="needs-translation">消息分片产生的原因是多样的：</target>
      </trans-unit>
      <trans-unit id="50742">
        <source>某些元素的语义就是发送独立的消息 (例如 `&lt;message&gt;`)</source>
        <target state="needs-translation">某些元素的语义就是发送独立的消息 (例如 `&lt;message&gt;`)</target>
      </trans-unit>
      <trans-unit id="50744">
        <source>部分平台不支持某些消息元素的组合 (例如图文混合发送)，此时必须对消息进行拆分</source>
        <target state="needs-translation">部分平台不支持某些消息元素的组合 (例如图文混合发送)，此时必须对消息进行拆分</target>
      </trans-unit>
      <trans-unit id="50746">
        <source>待发送的消息长度超出平台限制，此时必须对消息进行拆分</source>
        <target state="needs-translation">待发送的消息长度超出平台限制，此时必须对消息进行拆分</target>
      </trans-unit>
      <trans-unit id="50748">
        <source>在需要对消息进行分片的场合，我们可以手动调用 `flush()` 方法。</source>
        <target state="needs-translation">在需要对消息进行分片的场合，我们可以手动调用 `flush()` 方法。</target>
      </trans-unit>
      <trans-unit id="50750">
        <source>下面的代码展示了如何实现 `&lt;message&gt;` 元素：</source>
        <target state="needs-translation">下面的代码展示了如何实现 `&lt;message&gt;` 元素：</target>
      </trans-unit>
      <trans-unit id="50752">
        <source>// 忽略前面的部分
} else if (type === 'message') {
  // 在解析内部元素之前先清空缓冲区
  await this.flush()
  await this.render(children)
  await this.flush()
} else ...</source>
        <target state="needs-translation">// 忽略前面的部分
} else if (type === 'message') {
  // 在解析内部元素之前先清空缓冲区
  await this.flush()
  await this.render(children)
  await this.flush()
} else ...</target>
      </trans-unit>
      <trans-unit id="64442">
        <source>资源元素 {#asset}</source>
        <target state="needs-translation">资源元素 {#asset}</target>
      </trans-unit>
      <trans-unit id="50756">
        <source>由于不同平台对于媒体资源的支持类型、发送方式、渲染形式有所不同，因此资源元素的情况会更加复杂。</source>
        <target state="needs-translation">由于不同平台对于媒体资源的支持类型、发送方式、渲染形式有所不同，因此资源元素的情况会更加复杂。</target>
      </trans-unit>
      <trans-unit id="50758">
        <source>可以大致将各种平台规定的发送方式分为以下几类：</source>
        <target state="needs-translation">可以大致将各种平台规定的发送方式分为以下几类：</target>
      </trans-unit>
      <trans-unit id="50760">
        <source>通过不同的 API 发送不同类型的资源 (例如 Telegram)</source>
        <target state="needs-translation">通过不同的 API 发送不同类型的资源 (例如 Telegram)</target>
      </trans-unit>
      <trans-unit id="50762">
        <source>使用统一的 API，但通过不同的字段区分资源类型 (例如 Discord)</source>
        <target state="needs-translation">使用统一的 API，但通过不同的字段区分资源类型 (例如 Discord)</target>
      </trans-unit>
      <trans-unit id="50764">
        <source>先上传资源获得链接或资源 ID，再调用发送 API (例如 Lark)</source>
        <target state="needs-translation">先上传资源获得链接或资源 ID，再调用发送 API (例如 Lark)</target>
      </trans-unit>
      <trans-unit id="50766">
        <source>这里我们还是以 Telegram 平台为例。</source>
        <target state="needs-translation">这里我们还是以 Telegram 平台为例。</target>
      </trans-unit>
      <trans-unit id="50768">
        <source>首先照例修改 `visit` 方法。</source>
        <target state="needs-translation">首先照例修改 `visit` 方法。</target>
      </trans-unit>
      <trans-unit id="50770">
        <source>由于 Telegram 仅支持资源 + 文本的组合 (文本显示在资源下方)，因此我们需要进行消息分片：</source>
        <target state="needs-translation">由于 Telegram 仅支持资源 + 文本的组合 (文本显示在资源下方)，因此我们需要进行消息分片：</target>
      </trans-unit>
      <trans-unit id="50772">
        <source>// 忽略前面的部分
} else if (['image', 'audio', 'video', 'file'].includes(type)) {
  await this.flush()
  this.asset = element
} else ...</source>
        <target state="needs-translation">// 忽略前面的部分
} else if (['image', 'audio', 'video', 'file'].includes(type)) {
  await this.flush()
  this.asset = element
} else ...</target>
      </trans-unit>
      <trans-unit id="50774">
        <source>接着，我们需要在 `flush` 方法中处理资源元素。</source>
        <target state="needs-translation">接着，我们需要在 `flush` 方法中处理资源元素。</target>
      </trans-unit>
      <trans-unit id="50776">
        <source>Telegram 的资源上传接口是 `sendPhoto`、`sendAudio` 等，与文本所用的 `sendMessage` 不同，因此我们需要根据资源类型进行判断：</source>
        <target state="needs-translation">Telegram 的资源上传接口是 `sendPhoto`、`sendAudio` 等，与文本所用的 `sendMessage` 不同，因此我们需要根据资源类型进行判断：</target>
      </trans-unit>
      <trans-unit id="64098">
        <source>class TelegramMessageEncoder&lt;C extends Context&gt; extends MessageEncoder&lt;C, TelegramBot&lt;C&gt;&gt; {
  async flush() {
    let message: Telegram.Message
    if (this.asset) {
      const form = new FormData()
      for (const key in this.payload) {
        form.append(key, this.payload[key].toString())
      }
      const { type, attrs } = this.asset
      const { filename, data } = await this.bot.ctx.http.file(attrs.src, attrs)
      if (type === 'img') {
        form.append('photo', data, filename)
        message = await this.bot.internal.sendPhoto(form)
      } else if (type === 'audio') {
        form.append('audio', data, filename)
        message = await this.bot.internal.sendAudio(form)
      } else if (type === 'video') {
        form.append('video', data, filename)
        message = await this.bot.internal.sendVideo(form)
      } else if (type === 'file') {
        form.append('document', data, filename)
        message = await this.bot.internal.sendDocument(form)
      }
      this.asset = null
    } else if (this.payload.text) {
      message = await this.bot.internal.sendMessage(this.payload)
    }
    await this.addResult(message)
    this.payload.text = ''
  }
}</source>
        <target state="needs-translation">class TelegramMessageEncoder&lt;C extends Context&gt; extends MessageEncoder&lt;C, TelegramBot&lt;C&gt;&gt; {
  async flush() {
    let message: Telegram.Message
    if (this.asset) {
      const form = new FormData()
      for (const key in this.payload) {
        form.append(key, this.payload[key].toString())
      }
      const { type, attrs } = this.asset
      const { filename, data } = await this.bot.ctx.http.file(attrs.src, attrs)
      if (type === 'img') {
        form.append('photo', data, filename)
        message = await this.bot.internal.sendPhoto(form)
      } else if (type === 'audio') {
        form.append('audio', data, filename)
        message = await this.bot.internal.sendAudio(form)
      } else if (type === 'video') {
        form.append('video', data, filename)
        message = await this.bot.internal.sendVideo(form)
      } else if (type === 'file') {
        form.append('document', data, filename)
        message = await this.bot.internal.sendDocument(form)
      }
      this.asset = null
    } else if (this.payload.text) {
      message = await this.bot.internal.sendMessage(this.payload)
    }
    await this.addResult(message)
    this.payload.text = ''
  }
}</target>
      </trans-unit>
      <trans-unit id="50780">
        <source>差不多这样就实现了资源元素的发送。</source>
        <target state="needs-translation">差不多这样就实现了资源元素的发送。</target>
      </trans-unit>
      <trans-unit id="50782">
        <source>值得一提的是，这里的代码使用了 `http.file()` 方法。</source>
        <target state="needs-translation">值得一提的是，这里的代码使用了 `http.file()` 方法。</target>
      </trans-unit>
      <trans-unit id="50784">
        <source>它可以自动为我们处理 `http:`、`file:`、`data:` 等各种协议的资源链接，并将它们统一转换为 `ArrayBuffer`。</source>
        <target state="needs-translation">它可以自动为我们处理 `http:`、`file:`、`data:` 等各种协议的资源链接，并将它们统一转换为 `ArrayBuffer`。</target>
      </trans-unit>
      <trans-unit id="50786">
        <source>这可以省去适配器解析资源链接的步骤，对于适配器开发是非常方便的。</source>
        <target state="needs-translation">这可以省去适配器解析资源链接的步骤，对于适配器开发是非常方便的。</target>
      </trans-unit>
      <trans-unit id="64444">
        <source>进阶知识 {#advanced}</source>
        <target state="needs-translation">进阶知识 {#advanced}</target>
      </trans-unit>
      <trans-unit id="50790">
        <source>下面的知识并非适用于所有适配器。</source>
        <target state="needs-translation">下面的知识并非适用于所有适配器。</target>
      </trans-unit>
      <trans-unit id="50792">
        <source>但对于一些特殊的平台，你可能会用到它们。</source>
        <target state="needs-translation">但对于一些特殊的平台，你可能会用到它们。</target>
      </trans-unit>
      <trans-unit id="64446">
        <source>发送被动消息 {#passive}</source>
        <target state="needs-translation">发送被动消息 {#passive}</target>
      </trans-unit>
      <trans-unit id="50796">
        <source>我们通常将机器人做出的交互行为分为两种：主动交互和被动交互。</source>
        <target state="needs-translation">我们通常将机器人做出的交互行为分为两种：主动交互和被动交互。</target>
      </trans-unit>
      <trans-unit id="50798">
        <source>主动交互是指机器人主动进行某些操作，例如定时任务、通知推送。</source>
        <target state="needs-translation">主动交互是指机器人主动进行某些操作，例如定时任务、通知推送。</target>
      </trans-unit>
      <trans-unit id="50800">
        <source>被动交互是指机器人接收到特定事件后做出的响应，例如消息回复、入群欢迎。</source>
        <target state="needs-translation">被动交互是指机器人接收到特定事件后做出的响应，例如消息回复、入群欢迎。</target>
      </trans-unit>
      <trans-unit id="50802">
        <source>遗憾的是，部分平台会限制机器人的主动交互能力。</source>
        <target state="needs-translation">遗憾的是，部分平台会限制机器人的主动交互能力。</target>
      </trans-unit>
      <trans-unit id="50804">
        <source>例如，在 QQ (官方机器人) 中，机器人每天只能发送极少量的主动消息；而对于被动消息，则必须在用户发送消息后的短时间内回复。</source>
        <target state="needs-translation">例如，在 QQ (官方机器人) 中，机器人每天只能发送极少量的主动消息；而对于被动消息，则必须在用户发送消息后的短时间内回复。</target>
      </trans-unit>
      <trans-unit id="50806">
        <source>这种平台被称为**被动型平台**。</source>
        <target state="needs-translation">这种平台被称为**被动型平台**。</target>
      </trans-unit>
      <trans-unit id="50808">
        <source>被动型平台要求适配器在发送消息时尽可能带有回复目标。</source>
        <target state="needs-translation">被动型平台要求适配器在发送消息时尽可能带有回复目标。</target>
      </trans-unit>
      <trans-unit id="50810">
        <source>当然 Koishi 也提供了解决方案：</source>
        <target state="needs-translation">当然 Koishi 也提供了解决方案：</target>
      </trans-unit>
      <trans-unit id="50812">
        <source>class QQGuildMessageEncoder {
  async flush() {
    await this.bot.internal.sendMessages(this.channelId, {
      content: this.content,
      msgId: this.options?.session?.messageId,
    })
  }
}</source>
        <target state="needs-translation">class QQGuildMessageEncoder {
  async flush() {
    await this.bot.internal.sendMessages(this.channelId, {
      content: this.content,
      msgId: this.options?.session?.messageId,
    })
  }
}</target>
      </trans-unit>
      <trans-unit id="50814">
        <source>在这一段代码中使用了 `this.options`，它存储了一些额外的发送选项。</source>
        <target state="needs-translation">在这一段代码中使用了 `this.options`，它存储了一些额外的发送选项。</target>
      </trans-unit>
      <trans-unit id="50816">
        <source>其中 `session` 正好对应着接收到消息的会话对象。</source>
        <target state="needs-translation">其中 `session` 正好对应着接收到消息的会话对象。</target>
      </trans-unit>
      <trans-unit id="50818">
        <source>当我们调用 `session.send()` 时，Koishi 会把当前的会话对象传递给 `MessageEncoder`。</source>
        <target state="needs-translation">当我们调用 `session.send()` 时，Koishi 会把当前的会话对象传递给 `MessageEncoder`。</target>
      </trans-unit>
      <trans-unit id="50820">
        <source>这样一来，我们就可以在发送消息时带上回复目标了。</source>
        <target state="needs-translation">这样一来，我们就可以在发送消息时带上回复目标了。</target>
      </trans-unit>
      <trans-unit id="64448">
        <source>资源反向代理 {#reverse-proxy}</source>
        <target state="needs-translation">资源反向代理 {#reverse-proxy}</target>
      </trans-unit>
      <trans-unit id="50824">
        <source>一些平台会使用 ID 标识资源文件 (例如 Lark)。</source>
        <target state="needs-translation">一些平台会使用 ID 标识资源文件 (例如 Lark)。</target>
      </trans-unit>
      <trans-unit id="50826">
        <source>当你接收到来自平台的消息时，拿到的是资源 ID 而非资源链接。</source>
        <target state="needs-translation">当你接收到来自平台的消息时，拿到的是资源 ID 而非资源链接。</target>
      </trans-unit>
      <trans-unit id="50828">
        <source>此时你需要将资源 ID 转换为资源链接，才能构造合法的资源元素。</source>
        <target state="needs-translation">此时你需要将资源 ID 转换为资源链接，才能构造合法的资源元素。</target>
      </trans-unit>
      <trans-unit id="50830">
        <source>Telegram 是另一种特殊情况。</source>
        <target state="needs-translation">Telegram 是另一种特殊情况。</target>
      </trans-unit>
      <trans-unit id="50832">
        <source>尽管其提供的资源链接是可用的，但这个链接中会明文包含机器人令牌，并非可以公开使用的链接。</source>
        <target state="needs-translation">尽管其提供的资源链接是可用的，但这个链接中会明文包含机器人令牌，并非可以公开使用的链接。</target>
      </trans-unit>
      <trans-unit id="50834">
        <source>因此 Telegram 和其他类似平台也适用于这一节的内容。</source>
        <target state="needs-translation">因此 Telegram 和其他类似平台也适用于这一节的内容。</target>
      </trans-unit>
      <trans-unit id="50836">
        <source>对于这种情况，一种**不推荐**的做法是直接下载资源，并转存为 `data:` 链接放入消息中。</source>
        <target state="needs-translation">对于这种情况，一种**不推荐**的做法是直接下载资源，并转存为 `data:` 链接放入消息中。</target>
      </trans-unit>
      <trans-unit id="50838">
        <source>之所以不推荐，是因为这种做法有两大致命缺点：</source>
        <target state="needs-translation">之所以不推荐，是因为这种做法有两大致命缺点：</target>
      </trans-unit>
      <trans-unit id="50840">
        <source>这些图片本来可以按需加载，但现在却被强制下载到本地，造成额外的带宽消耗。</source>
        <target state="needs-translation">这些图片本来可以按需加载，但现在却被强制下载到本地，造成额外的带宽消耗。</target>
      </trans-unit>
      <trans-unit id="50842">
        <source>编码为 `data:` 会导致消息体积大幅增加，极大影响消息处理的性能。</source>
        <target state="needs-translation">编码为 `data:` 会导致消息体积大幅增加，极大影响消息处理的性能。</target>
      </trans-unit>
      <trans-unit id="50844">
        <source>那么，有没有更好的解决方案呢？</source>
        <target state="needs-translation">那么，有没有更好的解决方案呢？</target>
      </trans-unit>
      <trans-unit id="50846">
        <source>答案便是资源反向代理。</source>
        <target state="needs-translation">答案便是资源反向代理。</target>
      </trans-unit>
      <trans-unit id="50848">
        <source>我们要做的，是在本地提供一个路由，将资源 ID 映射到资源链接。</source>
        <target state="needs-translation">我们要做的，是在本地提供一个路由，将资源 ID 映射到资源链接。</target>
      </trans-unit>
      <trans-unit id="50850">
        <source>这样一来，上面提到的两个问题也就都解决了。</source>
        <target state="needs-translation">这样一来，上面提到的两个问题也就都解决了。</target>
      </trans-unit>
      <trans-unit id="50852">
        <source>下面是 Lark 适配器的一部分代码，用于实现资源反向代理 (位于 `adapter.ts`)：</source>
        <target state="needs-translation">下面是 Lark 适配器的一部分代码，用于实现资源反向代理 (位于 `adapter.ts`)：</target>
      </trans-unit>
      <trans-unit id="64612">
        <source>class LarkAdapter {
  static inject = ['server']

  constructor(ctx: Context) {
    ctx.server.get('/lark/assets/:message_id/:key', async (ctx) =&gt; {
      const key = ctx.params.key
      const messageId = ctx.params.message_id
      const selfId = ctx.request.query.self_id
      const bot = this.bots.find((bot) =&gt; bot.selfId === selfId)
      if (!bot) return ctx.status = 404
      const response = await bot.http(`/im/v1/messages/${messageId}/resources/${key}`, {
        method: 'GET',
        params: { type: 'image' },
        responseType: 'stream',
      })
      ctx.status = 200
      ctx.response.headers['content-type'] = response.headers.get('content-type')
      ctx.response.body = response.data
    })
  }
}</source>
        <target state="needs-translation">class LarkAdapter {
  static inject = ['server']

  constructor(ctx: Context) {
    ctx.server.get('/lark/assets/:message_id/:key', async (ctx) =&gt; {
      const key = ctx.params.key
      const messageId = ctx.params.message_id
      const selfId = ctx.request.query.self_id
      const bot = this.bots.find((bot) =&gt; bot.selfId === selfId)
      if (!bot) return ctx.status = 404
      const response = await bot.http(`/im/v1/messages/${messageId}/resources/${key}`, {
        method: 'GET',
        params: { type: 'image' },
        responseType: 'stream',
      })
      ctx.status = 200
      ctx.response.headers['content-type'] = response.headers.get('content-type')
      ctx.response.body = response.data
    })
  }
}</target>
      </trans-unit>
      <trans-unit id="50856">
        <source>然后在接收消息的逻辑中，我们只需要将资源 ID 转换为资源链接即可：</source>
        <target state="needs-translation">然后在接收消息的逻辑中，我们只需要将资源 ID 转换为资源链接即可：</target>
      </trans-unit>
      <trans-unit id="50858">
        <source>h.image(`http://${host}/image/${message_id}/${image_key}?self_id=${selfId}`)</source>
        <target state="needs-translation">h.image(`http://${host}/image/${message_id}/${image_key}?self_id=${selfId}`)</target>
      </trans-unit>
      <trans-unit id="50860">
        <source>反向代理同时也带来了一个新的问题，那就是当这个链接被原样发送时，外网可能无法访问到这个链接。</source>
        <target state="needs-translation">反向代理同时也带来了一个新的问题，那就是当这个链接被原样发送时，外网可能无法访问到这个链接。</target>
      </trans-unit>
      <trans-unit id="50862">
        <source>但无需担心，上面提到的 `http.file()` 方法恰好可以解决这个问题。</source>
        <target state="needs-translation">但无需担心，上面提到的 `http.file()` 方法恰好可以解决这个问题。</target>
      </trans-unit>
      <trans-unit id="50864">
        <source>因此，即使经过了反向代理，Koishi 也可以确保消息的跨平台转发插件能够正常工作。</source>
        <target state="needs-translation">因此，即使经过了反向代理，Koishi 也可以确保消息的跨平台转发插件能够正常工作。</target>
      </trans-unit>
      <trans-unit id="64450">
        <source>扩展消息元素 {#extension}</source>
        <target state="needs-translation">扩展消息元素 {#extension}</target>
      </trans-unit>
      <trans-unit id="50868">
        <source>平台可以提供扩展消息元素，但需要加上平台通用名称作为前缀。</source>
        <target state="needs-translation">平台可以提供扩展消息元素，但需要加上平台通用名称作为前缀。</target>
      </trans-unit>
      <trans-unit id="50870">
        <source>下面是一个例子：</source>
        <target state="needs-translation">下面是一个例子：</target>
      </trans-unit>
      <trans-unit id="50872">
        <source>&lt;kook:card size=&quot;lg&quot;&gt;
  &lt;kook:countdown end-time=&quot;1608819168000&quot;/&gt;
&lt;/kook:card&gt;</source>
        <target state="needs-translation">&lt;kook:card size=&quot;lg&quot;&gt;
  &lt;kook:countdown end-time=&quot;1608819168000&quot;/&gt;
&lt;/kook:card&gt;</target>
      </trans-unit>
      <trans-unit id="50874">
        <source>标准元素的平台扩展属性也可以通过加上平台通用名称作为前缀的方式声明。</source>
        <target state="needs-translation">标准元素的平台扩展属性也可以通过加上平台通用名称作为前缀的方式声明。</target>
      </trans-unit>
      <trans-unit id="50876">
        <source>下面是一个例子：</source>
        <target state="needs-translation">下面是一个例子：</target>
      </trans-unit>
      <trans-unit id="50878">
        <source>&lt;!-- src 是 audio 元素的标准属性。 --&gt;
&lt;!-- 但 cover 并未标准化，所以需要加前缀。 --&gt;
&lt;audio src=&quot;url1&quot; kook:cover=&quot;url2&quot;/&gt;</source>
        <target state="needs-translation">&lt;!-- src 是 audio 元素的标准属性。 --&gt;
&lt;!-- 但 cover 并未标准化，所以需要加前缀。 --&gt;
&lt;audio src=&quot;url1&quot; kook:cover=&quot;url2&quot;/&gt;</target>
      </trans-unit>
      <trans-unit id="50880">
        <source>平台扩展消息元素的属性是否需要前缀由 SDK 实现自行决定。</source>
        <target state="needs-translation">平台扩展消息元素的属性是否需要前缀由 SDK 实现自行决定。</target>
      </trans-unit>
      <trans-unit id="50882">
        <source>如果某个消息元素希望在未来标准化，那么加上前缀可以降低迁移成本。</source>
        <target state="needs-translation">如果某个消息元素希望在未来标准化，那么加上前缀可以降低迁移成本。</target>
      </trans-unit>
      <trans-unit id="50884">
        <source>如果没有标准化需要，那么去掉前缀在书写上更方便。</source>
        <target state="needs-translation">如果没有标准化需要，那么去掉前缀在书写上更方便。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1538" original="/[koishijs.docs] main/zh-CN/guide/basic/advanced.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="50886">
        <source>进阶用法</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">進階用法</target>
      </trans-unit>
      <trans-unit id="50888">
        <source>在前面的几节中，我们已经了解了基础的交互概念。</source>
        <target state="needs-translation">在前面的几节中，我们已经了解了基础的交互概念。</target>
      </trans-unit>
      <trans-unit id="50890">
        <source>以他们为基础，Koishi 提供了一些进阶的用法，用于处理真实应用场景中的交互需求。</source>
        <target state="needs-translation">以他们为基础，Koishi 提供了一些进阶的用法，用于处理真实应用场景中的交互需求。</target>
      </trans-unit>
      <trans-unit id="50892">
        <source>机器人对象</source>
        <target state="needs-translation">机器人对象</target>
      </trans-unit>
      <trans-unit id="50894">
        <source>我们通常将机器人做出的交互行为分为两种：主动交互和被动交互。</source>
        <target state="needs-translation">我们通常将机器人做出的交互行为分为两种：主动交互和被动交互。</target>
      </trans-unit>
      <trans-unit id="50896">
        <source>**主动交互**是指机器人主动进行某些操作，而**被动交互**则是指机器人接收到特定事件后做出的响应。</source>
        <target state="needs-translation">**主动交互**是指机器人主动进行某些操作，而**被动交互**则是指机器人接收到特定事件后做出的响应。</target>
      </trans-unit>
      <trans-unit id="50898">
        <source>一个机器人的大部分交互都应该是被动的，而主动交互则可用于一些特殊情况，比如定时任务、通知推送等。</source>
        <target state="needs-translation">一个机器人的大部分交互都应该是被动的，而主动交互则可用于一些特殊情况，比如定时任务、通知推送等。</target>
      </trans-unit>
      <trans-unit id="50900">
        <source>Koishi 提供的交互性 API 可能存在于 `ctx`，`session` 和 `bot` 三种对象中。</source>
        <target state="needs-translation">Koishi 提供的交互性 API 可能存在于 `ctx`，`session` 和 `bot` 三种对象中。</target>
      </trans-unit>
      <trans-unit id="50902">
        <source>其中，上下文对象 `ctx` 可以在插件参数中取得，会话对象 `session` 可以在被动交互中取得，而机器人对象 `bot` 则可以从上述两个对象中访问到：</source>
        <target state="needs-translation">其中，上下文对象 `ctx` 可以在插件参数中取得，会话对象 `session` 可以在被动交互中取得，而机器人对象 `bot` 则可以从上述两个对象中访问到：</target>
      </trans-unit>
      <trans-unit id="50904">
        <source>// 从 session 中访问 bot
session.bot

// 从 ctx 中访问 bot，其中 platform 和 selfId 分别是平台名称和机器人 ID
ctx.bots[`${platform}:${selfId}`]</source>
        <target state="needs-translation">// 从 session 中访问 bot
session.bot

// 从 ctx 中访问 bot，其中 platform 和 selfId 分别是平台名称和机器人 ID
ctx.bots[`${platform}:${selfId}`]</target>
      </trans-unit>
      <trans-unit id="50906">
        <source>在之后的章节中，我们将进一步了解这三种对象的用法。</source>
        <target state="needs-translation">在之后的章节中，我们将进一步了解这三种对象的用法。</target>
      </trans-unit>
      <trans-unit id="50908">
        <source>广播消息</source>
        <target state="needs-translation">广播消息</target>
      </trans-unit>
      <trans-unit id="50910">
        <source>主动交互中的一种常见需求是同时向多个频道发送消息。</source>
        <target state="needs-translation">主动交互中的一种常见需求是同时向多个频道发送消息。</target>
      </trans-unit>
      <trans-unit id="50912">
        <source>Koishi 提供了两套方法来实现消息的广播。</source>
        <target state="needs-translation">Koishi 提供了两套方法来实现消息的广播。</target>
      </trans-unit>
      <trans-unit id="50914">
        <source>最基础的写法是直接使用 `bot.broadcast()`：</source>
        <target state="needs-translation">最基础的写法是直接使用 `bot.broadcast()`：</target>
      </trans-unit>
      <trans-unit id="50916">
        <source>// 一参数填写你要发送到的频道 ID 列表
await bot.broadcast(['123456', '456789'], '全体目光向我看齐')</source>
        <target state="needs-translation">// 一参数填写你要发送到的频道 ID 列表
await bot.broadcast(['123456', '456789'], '全体目光向我看齐')</target>
      </trans-unit>
      <trans-unit id="50918">
        <source>但这样写需要知道每一个频道对应哪个机器人。</source>
        <target state="needs-translation">但这样写需要知道每一个频道对应哪个机器人。</target>
      </trans-unit>
      <trans-unit id="50920">
        <source>对于启用了多个机器人的场景下，这么写就有点不方便了。</source>
        <target state="needs-translation">对于启用了多个机器人的场景下，这么写就有点不方便了。</target>
      </trans-unit>
      <trans-unit id="50922">
        <source>幸运的是，Koishi 还有另一个方法：`ctx.broadcast()`。</source>
        <target state="needs-translation">幸运的是，Koishi 还有另一个方法：`ctx.broadcast()`。</target>
      </trans-unit>
      <trans-unit id="50924">
        <source>在启用了数据库的情况下，此方法会自动获取每个频道的 [受理人](../../manual/usage/customize.md#受理人机制)，并以对应的账号发送消息：</source>
        <target state="needs-translation">在启用了数据库的情况下，此方法会自动获取每个频道的 [受理人](../../manual/usage/customize.md#受理人机制)，并以对应的账号发送消息：</target>
      </trans-unit>
      <trans-unit id="50926">
        <source>await ctx.broadcast(['telegram:123456', 'discord:456789'], '全体目光向我看齐')</source>
        <target state="needs-translation">await ctx.broadcast(['telegram:123456', 'discord:456789'], '全体目光向我看齐')</target>
      </trans-unit>
      <trans-unit id="50928">
        <source>等待输入</source>
        <target state="needs-translation">等待输入</target>
      </trans-unit>
      <trans-unit id="50930">
        <source>当你需要进行一些交互式操作时，可以使用 `session.prompt()`：</source>
        <target state="needs-translation">当你需要进行一些交互式操作时，可以使用 `session.prompt()`：</target>
      </trans-unit>
      <trans-unit id="50932">
        <source>await session.send('请输入用户名：')

const name = await session.prompt()
if (!name) return '输入超时。'

// 执行后续操作
return `${name}，请多指教！`</source>
        <target state="needs-translation">await session.send('请输入用户名：')

const name = await session.prompt()
if (!name) return '输入超时。'

// 执行后续操作
return `${name}，请多指教！`</target>
      </trans-unit>
      <trans-unit id="50934">
        <source>你可以给这个方法传入一个 `timeout` 参数，或使用 `delay.prompt` 配置项，来作为等待的时间。</source>
        <target state="needs-translation">你可以给这个方法传入一个 `timeout` 参数，或使用 `delay.prompt` 配置项，来作为等待的时间。</target>
      </trans-unit>
      <trans-unit id="50936">
        <source>延时发送</source>
        <target state="needs-translation">延时发送</target>
      </trans-unit>
      <trans-unit id="50938">
        <source>如果你需要连续发送多条消息，那么在各条消息之间留下一定的时间间隔是很重要的：一方面它可以防止消息刷屏和消息错位 (后发的条消息呈现在先发的消息前面)，提高了阅读体验；另一方面它能够有效降低机器人发送消息的频率，防止被平台误封。</source>
        <target state="needs-translation">如果你需要连续发送多条消息，那么在各条消息之间留下一定的时间间隔是很重要的：一方面它可以防止消息刷屏和消息错位 (后发的条消息呈现在先发的消息前面)，提高了阅读体验；另一方面它能够有效降低机器人发送消息的频率，防止被平台误封。</target>
      </trans-unit>
      <trans-unit id="50940">
        <source>这个时候，`session.sendQueued()` 可以解决你的问题。</source>
        <target state="needs-translation">这个时候，`session.sendQueued()` 可以解决你的问题。</target>
      </trans-unit>
      <trans-unit id="50942">
        <source>// 发送两条消息，中间间隔一段时间，这个时间由系统计算决定
await session.sendQueued('message1')
await session.sendQueued('message2')

// 清空等待队列
await session.cancelQueued()</source>
        <target state="needs-translation">// 发送两条消息，中间间隔一段时间，这个时间由系统计算决定
await session.sendQueued('message1')
await session.sendQueued('message2')

// 清空等待队列
await session.cancelQueued()</target>
      </trans-unit>
      <trans-unit id="50944">
        <source>你也可以在发送时手动定义等待的时长：</source>
        <target state="needs-translation">你也可以在发送时手动定义等待的时长：</target>
      </trans-unit>
      <trans-unit id="50946">
        <source>import { Time } from 'koishi'

// 如果消息队列非空，在前一条消息发送完成后 1s 发送本消息
await session.sendQueued('message3', Time.second)

// 清空等待队列，并设定下一条消息发送距离现在至少 0.5s
await session.cancelQueued(0.5 * Time.second)</source>
        <target state="needs-translation">import { Time } from 'koishi'

// 如果消息队列非空，在前一条消息发送完成后 1s 发送本消息
await session.sendQueued('message3', Time.second)

// 清空等待队列，并设定下一条消息发送距离现在至少 0.5s
await session.cancelQueued(0.5 * Time.second)</target>
      </trans-unit>
      <trans-unit id="50948">
        <source>事实上，对于不同的消息长度，系统等待的时间也是不一样的，你可以通过配置项修改这个行为：</source>
        <target state="needs-translation">事实上，对于不同的消息长度，系统等待的时间也是不一样的，你可以通过配置项修改这个行为：</target>
      </trans-unit>
      <trans-unit id="50950">
        <source>delay:
  # 消息里每有一个字符就等待 0.02s
  character: 20
  # 每条消息至少等待 0.5s
  message: 500</source>
        <target state="needs-translation">delay:
  # 消息里每有一个字符就等待 0.02s
  character: 20
  # 每条消息至少等待 0.5s
  message: 500</target>
      </trans-unit>
      <trans-unit id="50952">
        <source>这样一来，一段长度为 60 个字符的消息发送后，下一条消息发送前就需要等待 1.2 秒了。</source>
        <target state="needs-translation">这样一来，一段长度为 60 个字符的消息发送后，下一条消息发送前就需要等待 1.2 秒了。</target>
      </trans-unit>
      <trans-unit id="50954">
        <source>执行指令</source>
        <target state="needs-translation">执行指令</target>
      </trans-unit>
      <trans-unit id="50956">
        <source>我们还可以实用 `session.execute()` 来让用户执行某条指令：</source>
        <target state="needs-translation">我们还可以实用 `session.execute()` 来让用户执行某条指令：</target>
      </trans-unit>
      <trans-unit id="50958">
        <source>// 当用户输入“查看帮助”时，执行 help 指令
ctx.middleware((session, next) =&gt; {
  if (session.content === '查看帮助') {
    return session.execute('help', next)
  } else {
    return next()
  }
})</source>
        <target state="needs-translation">// 当用户输入“查看帮助”时，执行 help 指令
ctx.middleware((session, next) =&gt; {
  if (session.content === '查看帮助') {
    return session.execute('help', next)
  } else {
    return next()
  }
})</target>
      </trans-unit>
    </body>
  </file>
  <file id="1540" original="/[koishijs.docs] main/zh-CN/guide/basic/command.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="50960">
        <source>指令开发</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">指令開發</target>
      </trans-unit>
      <trans-unit id="50962">
        <source>在学习本节之前，建议先完整阅读 [入门 &gt; 指令系统](../../manual/usage/command.md)。</source>
        <target state="needs-translation">在学习本节之前，建议先完整阅读 [入门 &gt; 指令系统](../../manual/usage/command.md)。</target>
      </trans-unit>
      <trans-unit id="50964">
        <source>正如我们在入门篇中介绍的那样，一个 Koishi 机器人的绝大部分功能都是通过指令提供给用户的。</source>
        <target state="needs-translation">正如我们在入门篇中介绍的那样，一个 Koishi 机器人的绝大部分功能都是通过指令提供给用户的。</target>
      </trans-unit>
      <trans-unit id="50966">
        <source>Koishi 的指令系统能够高效地处理大量消息的并发调用，同时还提供了快捷方式、调用前缀、权限管理、速率限制、本地化等大量功能。</source>
        <target state="needs-translation">Koishi 的指令系统能够高效地处理大量消息的并发调用，同时还提供了快捷方式、调用前缀、权限管理、速率限制、本地化等大量功能。</target>
      </trans-unit>
      <trans-unit id="50968">
        <source>因此，只需掌握指令开发并编写少量代码就可以轻松应对各类用户需求。</source>
        <target state="needs-translation">因此，只需掌握指令开发并编写少量代码就可以轻松应对各类用户需求。</target>
      </trans-unit>
      <trans-unit id="50970">
        <source>编写下面的代码，你就实现了一个简单的 echo 指令：</source>
        <target state="needs-translation">编写下面的代码，你就实现了一个简单的 echo 指令：</target>
      </trans-unit>
      <trans-unit id="50972">
        <source>ctx.command('echo &lt;message&gt;')
  .action((_, message) =&gt; message)</source>
        <target state="needs-translation">ctx.command('echo &lt;message&gt;')
  .action((_, message) =&gt; message)</target>
      </trans-unit>
      <trans-unit id="50974">
        <source>echo Hello!</source>
        <target state="needs-translation">echo Hello!</target>
      </trans-unit>
      <trans-unit id="50976">
        <source>Hello!</source>
        <target state="needs-translation">Hello!</target>
      </trans-unit>
      <trans-unit id="50978">
        <source>让我们回头看看这段代码是如何工作的：</source>
        <target state="needs-translation">让我们回头看看这段代码是如何工作的：</target>
      </trans-unit>
      <trans-unit id="50980">
        <source>`.command()` 方法定义了名为 echo 的指令，其有一个必选参数为 `message`</source>
        <target state="needs-translation">`.command()` 方法定义了名为 echo 的指令，其有一个必选参数为 `message`</target>
      </trans-unit>
      <trans-unit id="50982">
        <source>`.action()` 方法定义了指令触发时的回调函数，第一个参数是一个 `Argv` 对象，第二个参数是输入的 `message`</source>
        <target state="needs-translation">`.action()` 方法定义了指令触发时的回调函数，第一个参数是一个 `Argv` 对象，第二个参数是输入的 `message`</target>
      </trans-unit>
      <trans-unit id="50984">
        <source>这种链式的结构能够让我们非常方便地定义和扩展指令。</source>
        <target state="needs-translation">这种链式的结构能够让我们非常方便地定义和扩展指令。</target>
      </trans-unit>
      <trans-unit id="50986">
        <source>稍后我们将看到这两个函数的更多用法，以及更多指令相关的函数。</source>
        <target state="needs-translation">稍后我们将看到这两个函数的更多用法，以及更多指令相关的函数。</target>
      </trans-unit>
      <trans-unit id="50988">
        <source>定义参数</source>
        <target state="needs-translation">定义参数</target>
      </trans-unit>
      <trans-unit id="50990">
        <source>正如你在上面所见的那样，使用 `ctx.command(decl)` 方法可以定义一个指令，其中 `decl` 是一个字符串，包含了 **指令名** 和 **参数列表**。</source>
        <target state="needs-translation">正如你在上面所见的那样，使用 `ctx.command(decl)` 方法可以定义一个指令，其中 `decl` 是一个字符串，包含了 **指令名** 和 **参数列表**。</target>
      </trans-unit>
      <trans-unit id="50992">
        <source>指令名可以包含数字、字母、短横线甚至中文，但不应该包含空白字符、小数点 `.` 或斜杠 `/`；小数点和斜杠的用途参见 [注册子指令](#注册子指令) 章节</source>
        <target state="needs-translation">指令名可以包含数字、字母、短横线甚至中文，但不应该包含空白字符、小数点 `.` 或斜杠 `/`；小数点和斜杠的用途参见 [注册子指令](#注册子指令) 章节</target>
      </trans-unit>
      <trans-unit id="50994">
        <source>一个指令可以含有任意个参数，其中 **必选参数** 用尖括号包裹，**可选参数** 用方括号包裹；这些参数将作为 `action` 回调函数除 `Argv` 以外的的后续参数传入</source>
        <target state="needs-translation">一个指令可以含有任意个参数，其中 **必选参数** 用尖括号包裹，**可选参数** 用方括号包裹；这些参数将作为 `action` 回调函数除 `Argv` 以外的的后续参数传入</target>
      </trans-unit>
      <trans-unit id="50996">
        <source>例如，下面的程序定义了一个拥有三个参数的指令，第一个为必选参数，后面两个为可选参数，它们将分别作为 `action` 回调函数的第 2~4 个参数：</source>
        <target state="needs-translation">例如，下面的程序定义了一个拥有三个参数的指令，第一个为必选参数，后面两个为可选参数，它们将分别作为 `action` 回调函数的第 2~4 个参数：</target>
      </trans-unit>
      <trans-unit id="50998">
        <source>ctx.command('test &lt;arg1&gt; [arg2] [arg3]')
  .action((_, arg1, arg2, arg3) =&gt; { /* do something */ })</source>
        <target state="needs-translation">ctx.command('test &lt;arg1&gt; [arg2] [arg3]')
  .action((_, arg1, arg2, arg3) =&gt; { /* do something */ })</target>
      </trans-unit>
      <trans-unit id="51000">
        <source>除去表达的意义不同，以及参数个数不足时使用必选参数可能产生错误信息外，这两种参数在程序上是没有区别的。</source>
        <target state="needs-translation">除去表达的意义不同，以及参数个数不足时使用必选参数可能产生错误信息外，这两种参数在程序上是没有区别的。</target>
      </trans-unit>
      <trans-unit id="51002">
        <source>与此同时，默认情况下 `action` 回调函数从第二个参数起也总是字符串。</source>
        <target state="needs-translation">与此同时，默认情况下 `action` 回调函数从第二个参数起也总是字符串。</target>
      </trans-unit>
      <trans-unit id="51004">
        <source>如果传入的参数不足，则对应的参数不会被传入，因此你需要自己处理可能的 `undefined`。</source>
        <target state="needs-translation">如果传入的参数不足，则对应的参数不会被传入，因此你需要自己处理可能的 `undefined`。</target>
      </trans-unit>
      <trans-unit id="51006">
        <source>变长参数</source>
        <target state="needs-translation">变长参数</target>
      </trans-unit>
      <trans-unit id="51008">
        <source>有时我们需要传入未知数量的参数，这时我们可以使用 **变长参数**，它可以通过在括号中前置 `...` 来实现。</source>
        <target state="needs-translation">有时我们需要传入未知数量的参数，这时我们可以使用 **变长参数**，它可以通过在括号中前置 `...` 来实现。</target>
      </trans-unit>
      <trans-unit id="51010">
        <source>在下面的例子中，无论传入了多少个参数，都会被放入 `rest` 数组进行处理：</source>
        <target state="needs-translation">在下面的例子中，无论传入了多少个参数，都会被放入 `rest` 数组进行处理：</target>
      </trans-unit>
      <trans-unit id="51012">
        <source>ctx.command('test &lt;arg1&gt; [...rest]')
  .action((_, arg1, ...rest) =&gt; { /* do something */ })</source>
        <target state="needs-translation">ctx.command('test &lt;arg1&gt; [...rest]')
  .action((_, arg1, ...rest) =&gt; { /* do something */ })</target>
      </trans-unit>
      <trans-unit id="51014">
        <source>文本参数</source>
        <target state="needs-translation">文本参数</target>
      </trans-unit>
      <trans-unit id="51016">
        <source>通常来说传入的信息被解析成指令调用后，会被空格分割成若干个参数。</source>
        <target state="needs-translation">通常来说传入的信息被解析成指令调用后，会被空格分割成若干个参数。</target>
      </trans-unit>
      <trans-unit id="51018">
        <source>但如果你想输入的就是含有空格的内容，可以通过在括号中后置 `:text` 来声明一个 **文本参数**。</source>
        <target state="needs-translation">但如果你想输入的就是含有空格的内容，可以通过在括号中后置 `:text` 来声明一个 **文本参数**。</target>
      </trans-unit>
      <trans-unit id="51020">
        <source>在下面的例子中，即使 test 后面的内容中含有空格，也会被整体传入 `message` 中：</source>
        <target state="needs-translation">在下面的例子中，即使 test 后面的内容中含有空格，也会被整体传入 `message` 中：</target>
      </trans-unit>
      <trans-unit id="51022">
        <source>ctx.command('test &lt;message:text&gt;')
  .action((_, message) =&gt; { /* do something */ })</source>
        <target state="needs-translation">ctx.command('test &lt;message:text&gt;')
  .action((_, message) =&gt; { /* do something */ })</target>
      </trans-unit>
      <trans-unit id="51024">
        <source>文本参数的解析优先级很高，即使是之后的内容中含有选项也会被一并认为是该参数的一部分。</source>
        <target state="needs-translation">文本参数的解析优先级很高，即使是之后的内容中含有选项也会被一并认为是该参数的一部分。</target>
      </trans-unit>
      <trans-unit id="51026">
        <source>因此，当使用文本参数时，应确保选项写在该参数之前，或 [使用引号](../../manual/recipe/execution.md#使用引号) 将要输入的文本包裹起来。</source>
        <target state="needs-translation">因此，当使用文本参数时，应确保选项写在该参数之前，或 [使用引号](../../manual/recipe/execution.md#使用引号) 将要输入的文本包裹起来。</target>
      </trans-unit>
      <trans-unit id="64396">
        <source>参数类型 {#argument-type}</source>
        <target state="needs-translation">参数类型 {#argument-type}</target>
      </trans-unit>
      <trans-unit id="51030">
        <source>除去 `text` 以外，Koishi 还支持许多其他的类型。</source>
        <target state="needs-translation">除去 `text` 以外，Koishi 还支持许多其他的类型。</target>
      </trans-unit>
      <trans-unit id="51032">
        <source>它们的用法与 `text` 无异：</source>
        <target state="needs-translation">它们的用法与 `text` 无异：</target>
      </trans-unit>
      <trans-unit id="51034">
        <source>function showValue(value) {
  return `${typeof value} ${JSON.stringify(value)}`
}

ctx.command('test [arg:number]')
  .option('foo', '&lt;val:string&gt;')
  .action(({ options }, arg) =&gt; `${showValue(arg)} ${showValue(options.foo)}`)</source>
        <target state="needs-translation">function showValue(value) {
  return `${typeof value} ${JSON.stringify(value)}`
}

ctx.command('test [arg:number]')
  .option('foo', '&lt;val:string&gt;')
  .action(({ options }, arg) =&gt; `${showValue(arg)} ${showValue(options.foo)}`)</target>
      </trans-unit>
      <trans-unit id="51036">
        <source>test 100 --foo 200</source>
        <target state="needs-translation">test 100 --foo 200</target>
      </trans-unit>
      <trans-unit id="51038">
        <source>number 100 string &quot;200&quot;</source>
        <target state="needs-translation">number 100 string &quot;200&quot;</target>
      </trans-unit>
      <trans-unit id="51040">
        <source>test xyz</source>
        <target state="needs-translation">test xyz</target>
      </trans-unit>
      <trans-unit id="51042">
        <source>参数 arg 输入无效，请提供一个数字。</source>
        <target state="needs-translation">参数 arg 输入无效，请提供一个数字。</target>
      </trans-unit>
      <trans-unit id="51044">
        <source>目前 Koishi 支持的内置类型如下：</source>
        <target state="needs-translation">目前 Koishi 支持的内置类型如下：</target>
      </trans-unit>
      <trans-unit id="51046">
        <source>string: `string` 字符串</source>
        <target state="needs-translation">string: `string` 字符串</target>
      </trans-unit>
      <trans-unit id="51048">
        <source>number: `number` 数值</source>
        <target state="needs-translation">number: `number` 数值</target>
      </trans-unit>
      <trans-unit id="65168">
        <source>bigint: `bigint` [大整数](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/BigInt)</source>
        <target state="needs-translation">bigint: `bigint` [大整数](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/BigInt)</target>
      </trans-unit>
      <trans-unit id="51050">
        <source>text: `string` 贪婪匹配的字符串</source>
        <target state="needs-translation">text: `string` 贪婪匹配的字符串</target>
      </trans-unit>
      <trans-unit id="67028">
        <source>user: `string` 用户，格式为 `{platform}:{id}` (调用时可以使用 `at` 元素或者 `@{platform}:{id}` 的格式)</source>
        <target state="needs-translation">user: `string` 用户，格式为 `{platform}:{id}` (调用时可以使用 `at` 元素或者 `@{platform}:{id}` 的格式)</target>
      </trans-unit>
      <trans-unit id="67030">
        <source>channel: `string` 频道，格式为 `{platform}:{id}` (调用时可以使用 `sharp` 元素或者 `#{platform}:{id}` 的格式)</source>
        <target state="needs-translation">channel: `string` 频道，格式为 `{platform}:{id}` (调用时可以使用 `sharp` 元素或者 `#{platform}:{id}` 的格式)</target>
      </trans-unit>
      <trans-unit id="51056">
        <source>integer: `number` 整数</source>
        <target state="needs-translation">integer: `number` 整数</target>
      </trans-unit>
      <trans-unit id="51058">
        <source>posint: `number` 正整数</source>
        <target state="needs-translation">posint: `number` 正整数</target>
      </trans-unit>
      <trans-unit id="65164">
        <source>natural: `number` 正整数</source>
        <target state="needs-translation">natural: `number` 正整数</target>
      </trans-unit>
      <trans-unit id="51060">
        <source>date: `Date` 日期</source>
        <target state="needs-translation">date: `Date` 日期</target>
      </trans-unit>
      <trans-unit id="64398">
        <source>image: `Dict` 图片</source>
        <target state="needs-translation">image: `Dict` 图片</target>
      </trans-unit>
      <trans-unit id="51062">
        <source>定义选项</source>
        <target state="needs-translation">定义选项</target>
      </trans-unit>
      <trans-unit id="51064">
        <source>使用 `cmd.option(name, decl)` 方法可以给指令定义参数。</source>
        <target state="needs-translation">使用 `cmd.option(name, decl)` 方法可以给指令定义参数。</target>
      </trans-unit>
      <trans-unit id="51066">
        <source>这个方法也是支持链式调用的，就像这样：</source>
        <target state="needs-translation">这个方法也是支持链式调用的，就像这样：</target>
      </trans-unit>
      <trans-unit id="51068">
        <source>ctx.command('test')
  .option('alpha', '-a')          // 定义一个选项
  .option('beta', '-b [beta]')    // 定义一个带参数的可选选项
  .option('gamma', '-c &lt;gamma&gt;')  // 定义一个带参数的必选选项
  .action(({ options }) =&gt; JSON.stringify(options))</source>
        <target state="needs-translation">ctx.command('test')
  .option('alpha', '-a')          // 定义一个选项
  .option('beta', '-b [beta]')    // 定义一个带参数的可选选项
  .option('gamma', '-c &lt;gamma&gt;')  // 定义一个带参数的必选选项
  .action(({ options }) =&gt; JSON.stringify(options))</target>
      </trans-unit>
      <trans-unit id="51070">
        <source>test -adb text --gamma=1 --foo-bar baz --no-xyz</source>
        <target state="needs-translation">test -adb text --gamma=1 --foo-bar baz --no-xyz</target>
      </trans-unit>
      <trans-unit id="51072">
        <source>{ &quot;alpha&quot;: true, &quot;d&quot;: true, &quot;beta&quot;: &quot;text&quot;, &quot;gamma&quot;: 1, &quot;fooBar&quot;: &quot;baz&quot;, &quot;xyz&quot;: false }</source>
        <target state="needs-translation">{ &quot;alpha&quot;: true, &quot;d&quot;: true, &quot;beta&quot;: &quot;text&quot;, &quot;gamma&quot;: 1, &quot;fooBar&quot;: &quot;baz&quot;, &quot;xyz&quot;: false }</target>
      </trans-unit>
      <trans-unit id="51074">
        <source>从上面的例子中我们不难看出 Koishi 指令系统的许多方便的特性：</source>
        <target state="needs-translation">从上面的例子中我们不难看出 Koishi 指令系统的许多方便的特性：</target>
      </trans-unit>
      <trans-unit id="51076">
        <source>使用注册的多个别名中的任何一个都会被赋值到 `name` 中</source>
        <target state="needs-translation">使用注册的多个别名中的任何一个都会被赋值到 `name` 中</target>
      </trans-unit>
      <trans-unit id="51078">
        <source>选项和参数之间同时支持用空格或等号隔开的语法</source>
        <target state="needs-translation">选项和参数之间同时支持用空格或等号隔开的语法</target>
      </trans-unit>
      <trans-unit id="51080">
        <source>单个短横线后跟多个字母时，会把之后的参数赋给最后一个字母（如果需要参数的话）</source>
        <target state="needs-translation">单个短横线后跟多个字母时，会把之后的参数赋给最后一个字母（如果需要参数的话）</target>
      </trans-unit>
      <trans-unit id="51082">
        <source>多字母中如果有短横线，会被自动进行驼峰式处理</source>
        <target state="needs-translation">多字母中如果有短横线，会被自动进行驼峰式处理</target>
      </trans-unit>
      <trans-unit id="51084">
        <source>类型自动转换：无参数默认为 `true`，如果是数字会转化为数字，其余情况为字符串</source>
        <target state="needs-translation">类型自动转换：无参数默认为 `true`，如果是数字会转化为数字，其余情况为字符串</target>
      </trans-unit>
      <trans-unit id="51086">
        <source>支持识别未注册选项，同时会根据传入的命令行推测是否需要参数</source>
        <target state="needs-translation">支持识别未注册选项，同时会根据传入的命令行推测是否需要参数</target>
      </trans-unit>
      <trans-unit id="51088">
        <source>如果一个未注册选项以 `no-` 开头，则会自动去除这个前缀并处理为 `false`</source>
        <target state="needs-translation">如果一个未注册选项以 `no-` 开头，则会自动去除这个前缀并处理为 `false`</target>
      </trans-unit>
      <trans-unit id="51090">
        <source>在调用 `cmd.option()` 时，你还可以传入第三个参数，它应该是一个对象，用于配置选项的具体特性。</source>
        <target state="needs-translation">在调用 `cmd.option()` 时，你还可以传入第三个参数，它应该是一个对象，用于配置选项的具体特性。</target>
      </trans-unit>
      <trans-unit id="51092">
        <source>它们将在下面逐一介绍。</source>
        <target state="needs-translation">它们将在下面逐一介绍。</target>
      </trans-unit>
      <trans-unit id="51094">
        <source>选项的默认值</source>
        <target state="needs-translation">选项的默认值</target>
      </trans-unit>
      <trans-unit id="51096">
        <source>使用 `fallback` 配置选项的默认值。</source>
        <target state="needs-translation">使用 `fallback` 配置选项的默认值。</target>
      </trans-unit>
      <trans-unit id="51098">
        <source>配置了默认值的选项，如果没有被使用，则会按照注册的默认值进行赋值。</source>
        <target state="needs-translation">配置了默认值的选项，如果没有被使用，则会按照注册的默认值进行赋值。</target>
      </trans-unit>
      <trans-unit id="51100">
        <source>ctx.command('test')
  .option('alpha', '-a', { fallback: 100 })
  .option('beta', '-b', { fallback: 100 })
  .action(({ options }) =&gt; JSON.stringify(options))</source>
        <target state="needs-translation">ctx.command('test')
  .option('alpha', '-a', { fallback: 100 })
  .option('beta', '-b', { fallback: 100 })
  .action(({ options }) =&gt; JSON.stringify(options))</target>
      </trans-unit>
      <trans-unit id="51102">
        <source>test -b 80</source>
        <target state="needs-translation">test -b 80</target>
      </trans-unit>
      <trans-unit id="51104">
        <source>{ &quot;alpha&quot;: 100, &quot;beta&quot;: 80 }</source>
        <target state="needs-translation">{ &quot;alpha&quot;: 100, &quot;beta&quot;: 80 }</target>
      </trans-unit>
      <trans-unit id="51106">
        <source>选项的重载</source>
        <target state="needs-translation">选项的重载</target>
      </trans-unit>
      <trans-unit id="51108">
        <source>将同一个选项注册多次，并结合使用 `value` 配置选项的重载值。</source>
        <target state="needs-translation">将同一个选项注册多次，并结合使用 `value` 配置选项的重载值。</target>
      </trans-unit>
      <trans-unit id="51110">
        <source>如果使用了带有重载值的选项，将按照注册的重载值进行赋值。</source>
        <target state="needs-translation">如果使用了带有重载值的选项，将按照注册的重载值进行赋值。</target>
      </trans-unit>
      <trans-unit id="51112">
        <source>ctx.command('test')
  .option('writer', '-w &lt;id&gt;')
  .option('writer', '--anonymous', { value: 0 })
  .action(({ options }) =&gt; JSON.stringify(options))</source>
        <target state="needs-translation">ctx.command('test')
  .option('writer', '-w &lt;id&gt;')
  .option('writer', '--anonymous', { value: 0 })
  .action(({ options }) =&gt; JSON.stringify(options))</target>
      </trans-unit>
      <trans-unit id="51114">
        <source>test --anonymous</source>
        <target state="needs-translation">test --anonymous</target>
      </trans-unit>
      <trans-unit id="51116">
        <source>{ &quot;writer&quot;: 0 }</source>
        <target state="needs-translation">{ &quot;writer&quot;: 0 }</target>
      </trans-unit>
      <trans-unit id="64400">
        <source>选项类型 {#option-type}</source>
        <target state="needs-translation">选项类型 {#option-type}</target>
      </trans-unit>
      <trans-unit id="51120">
        <source>选项也可以像参数一样设置类型：</source>
        <target state="needs-translation">选项也可以像参数一样设置类型：</target>
      </trans-unit>
      <trans-unit id="51122">
        <source>ctx.command('text')
  .option('alpha', '-a &lt;value:number&gt;')</source>
        <target state="needs-translation">ctx.command('text')
  .option('alpha', '-a &lt;value:number&gt;')</target>
      </trans-unit>
      <trans-unit id="51124">
        <source>除了这种写法外，你还可以传入一个 `type` 属性，作为选项的临时类型声明。</source>
        <target state="needs-translation">除了这种写法外，你还可以传入一个 `type` 属性，作为选项的临时类型声明。</target>
      </trans-unit>
      <trans-unit id="51126">
        <source>它可以是像上面的例子一样的回调函数，也可以是一个 `RegExp` 对象，表示传入的选项应当匹配的正则表达式：</source>
        <target state="needs-translation">它可以是像上面的例子一样的回调函数，也可以是一个 `RegExp` 对象，表示传入的选项应当匹配的正则表达式：</target>
      </trans-unit>
      <trans-unit id="51128">
        <source>ctx.command('test')
  .option('beta', '-b &lt;value&gt;', { type: /^ba+r$/ })
  .action(({ options }) =&gt; options.beta)</source>
        <target state="needs-translation">ctx.command('test')
  .option('beta', '-b &lt;value&gt;', { type: /^ba+r$/ })
  .action(({ options }) =&gt; options.beta)</target>
      </trans-unit>
      <trans-unit id="51130">
        <source>test -f bar</source>
        <target state="needs-translation">test -f bar</target>
      </trans-unit>
      <trans-unit id="51132">
        <source>bar</source>
        <target state="needs-translation">bar</target>
      </trans-unit>
      <trans-unit id="51134">
        <source>test -f baaaz</source>
        <target state="needs-translation">test -f baaaz</target>
      </trans-unit>
      <trans-unit id="51136">
        <source>选项 beta 输入无效，请检查语法。</source>
        <target state="needs-translation">选项 beta 输入无效，请检查语法。</target>
      </trans-unit>
      <trans-unit id="51140">
        <source>指令别名</source>
        <target state="needs-translation">指令别名</target>
      </trans-unit>
      <trans-unit id="64632">
        <source>由于指令名可以在用户侧配置，因此**不建议**开发者设置过多别名或以常用词作为别名。</source>
        <target state="needs-translation">由于指令名可以在用户侧配置，因此**不建议**开发者设置过多别名或以常用词作为别名。</target>
      </trans-unit>
      <trans-unit id="64634">
        <source>如果用户加载的多个插件都注册了同一个指令别名，那么后一个加载的插件将直接加载失败。</source>
        <target state="needs-translation">如果用户加载的多个插件都注册了同一个指令别名，那么后一个加载的插件将直接加载失败。</target>
      </trans-unit>
      <trans-unit id="51142">
        <source>你可以为一条指令添加别名：</source>
        <target state="needs-translation">你可以为一条指令添加别名：</target>
      </trans-unit>
      <trans-unit id="64636">
        <source>ctx.command('echo &lt;message&gt;').alias('say')</source>
        <target state="needs-translation">ctx.command('echo &lt;message&gt;').alias('say')</target>
      </trans-unit>
      <trans-unit id="51146">
        <source>这样一来，无论是 `echo` 还是 `say` 都能触发这条指令了。</source>
        <target state="needs-translation">这样一来，无论是 `echo` 还是 `say` 都能触发这条指令了。</target>
      </trans-unit>
      <trans-unit id="64638">
        <source>你还可以为别名添加参数或选项：</source>
        <target state="needs-translation">你还可以为别名添加参数或选项：</target>
      </trans-unit>
      <trans-unit id="64640">
        <source>ctx.command('market &lt;area&gt; &lt;item&gt;').alias('市场', { args: ['China'] })</source>
        <target state="needs-translation">ctx.command('market &lt;area&gt; &lt;item&gt;').alias('市场', { args: ['China'] })</target>
      </trans-unit>
      <trans-unit id="64642">
        <source>此时调用 `市场` 时将等价于调用 `market China`。</source>
        <target state="needs-translation">此时调用 `市场` 时将等价于调用 `market China`。</target>
      </trans-unit>
      <trans-unit id="64644">
        <source>如果你传入了更多的参数，那么它们将被添加到 `China` 之后。</source>
        <target state="needs-translation">如果你传入了更多的参数，那么它们将被添加到 `China` 之后。</target>
      </trans-unit>
      <trans-unit id="51182">
        <source>编写帮助</source>
        <target state="needs-translation">编写帮助</target>
      </trans-unit>
      <trans-unit id="64646">
        <source>此功能需要安装 [@koishijs/plugin-help](../../plugins/common/help.md) 插件。</source>
        <target state="needs-translation">此功能需要安装 [@koishijs/plugin-help](../../plugins/common/help.md) 插件。</target>
      </trans-unit>
      <trans-unit id="51184">
        <source>之前已经介绍了 `ctx.command()` 和 `cmd.option()` 这两个方法，它们都能传入一个 `desc` 参数。</source>
        <target state="needs-translation">之前已经介绍了 `ctx.command()` 和 `cmd.option()` 这两个方法，它们都能传入一个 `desc` 参数。</target>
      </trans-unit>
      <trans-unit id="51186">
        <source>你可以在这个参数的结尾补上对于指令或参数的说明文字，就像这样：</source>
        <target state="needs-translation">你可以在这个参数的结尾补上对于指令或参数的说明文字，就像这样：</target>
      </trans-unit>
      <trans-unit id="51188">
        <source>ctx.command('echo &lt;message:text&gt; 输出收到的信息')
  .option('timeout', '-t &lt;seconds&gt; 设定延迟发送的时间')</source>
        <target state="needs-translation">ctx.command('echo &lt;message:text&gt; 输出收到的信息')
  .option('timeout', '-t &lt;seconds&gt; 设定延迟发送的时间')</target>
      </trans-unit>
      <trans-unit id="51190">
        <source>echo -h</source>
        <target state="needs-translation">echo -h</target>
      </trans-unit>
      <trans-unit id="51192">
        <source>echo &amp;lt;message&gt;</source>
        <target state="needs-translation">echo &amp;lt;message&gt;</target>
      </trans-unit>
      <trans-unit id="51194">
        <source>输出收到的信息</source>
        <target state="needs-translation">输出收到的信息</target>
      </trans-unit>
      <trans-unit id="51196">
        <source>可用的选项有：</source>
        <target state="translated">可用的選項有：</target>
      </trans-unit>
      <trans-unit id="51198">
        <source>-t, --timeout &amp;lt;seconds&gt;  设定延迟发送的时间</source>
        <target state="needs-translation">-t, --timeout &amp;lt;seconds&gt;  设定延迟发送的时间</target>
      </trans-unit>
      <trans-unit id="51200">
        <source>添加使用说明</source>
        <target state="needs-translation">添加使用说明</target>
      </trans-unit>
      <trans-unit id="51202">
        <source>当然，我们还可以加入具体的用法和使用示例，进一步丰富这则使用说明：</source>
        <target state="needs-translation">当然，我们还可以加入具体的用法和使用示例，进一步丰富这则使用说明：</target>
      </trans-unit>
      <trans-unit id="51204">
        <source>ctx.command('echo &lt;message:text&gt;', '输出收到的信息')
  .option('timeout', '-t &lt;seconds&gt; 设定延迟发送的时间')
  .usage('注意：参数请写在最前面，不然会被当成 message 的一部分！')
  .example('echo -t 300 Hello World  五分钟后发送 Hello World')</source>
        <target state="needs-translation">ctx.command('echo &lt;message:text&gt;', '输出收到的信息')
  .option('timeout', '-t &lt;seconds&gt; 设定延迟发送的时间')
  .usage('注意：参数请写在最前面，不然会被当成 message 的一部分！')
  .example('echo -t 300 Hello World  五分钟后发送 Hello World')</target>
      </trans-unit>
      <trans-unit id="51206">
        <source>这时再调用 `echo -h`，你便会发现使用说明中已经添加了你刚刚的补充文本：</source>
        <target state="needs-translation">这时再调用 `echo -h`，你便会发现使用说明中已经添加了你刚刚的补充文本：</target>
      </trans-unit>
      <trans-unit id="51208">
        <source>echo -h</source>
        <target state="needs-translation">echo -h</target>
      </trans-unit>
      <trans-unit id="51210">
        <source>echo &amp;lt;message&gt;</source>
        <target state="needs-translation">echo &amp;lt;message&gt;</target>
      </trans-unit>
      <trans-unit id="51212">
        <source>输出收到的信息</source>
        <target state="needs-translation">输出收到的信息</target>
      </trans-unit>
      <trans-unit id="51214">
        <source>注意：参数请写在最前面，不然会被当成 message 的一部分！</source>
        <target state="needs-translation">注意：参数请写在最前面，不然会被当成 message 的一部分！</target>
      </trans-unit>
      <trans-unit id="51216">
        <source>可用的选项有：</source>
        <target state="translated">可用的選項有：</target>
      </trans-unit>
      <trans-unit id="51218">
        <source>-t, --timeout &amp;lt;seconds&gt;  设定延迟发送的时间</source>
        <target state="needs-translation">-t, --timeout &amp;lt;seconds&gt;  设定延迟发送的时间</target>
      </trans-unit>
      <trans-unit id="51220">
        <source>使用示例：</source>
        <target state="translated">使用示例：</target>
      </trans-unit>
      <trans-unit id="51222">
        <source>echo -t 300 Hello World  五分钟后发送 Hello World</source>
        <target state="needs-translation">echo -t 300 Hello World  五分钟后发送 Hello World</target>
      </trans-unit>
      <trans-unit id="51224">
        <source>隐藏指令和选项</source>
        <target state="needs-translation">隐藏指令和选项</target>
      </trans-unit>
      <trans-unit id="51226">
        <source>读到这里，细心的你可能会产生一丝好奇：如果 `echo -h` 能够被解析成查看帮助的话，这个 `-h` 为什么不出现在这个帮助中呢？</source>
        <target state="needs-translation">读到这里，细心的你可能会产生一丝好奇：如果 `echo -h` 能够被解析成查看帮助的话，这个 `-h` 为什么不出现在这个帮助中呢？</target>
      </trans-unit>
      <trans-unit id="51228">
        <source>答案很简单，因为这个内置选项被 Koishi 隐藏起来了。</source>
        <target state="needs-translation">答案很简单，因为这个内置选项被 Koishi 隐藏起来了。</target>
      </trans-unit>
      <trans-unit id="51230">
        <source>如果你希望隐藏一条指令或一个选项，只需要注册时将配置项 `hidden` 设置为 `true` 即可：</source>
        <target state="needs-translation">如果你希望隐藏一条指令或一个选项，只需要注册时将配置项 `hidden` 设置为 `true` 即可：</target>
      </trans-unit>
      <trans-unit id="51232">
        <source>// 手动导入类型
import {} from '@koishijs/plugin-help'

ctx.command('bar 一条看不见的指令', { hidden: true })
  .option('foo', '&lt;text&gt; 一个看不见的选项', { hidden: true })
  .action(({ options }) =&gt; 'secret: ' + options.foo)</source>
        <target state="needs-translation">// 手动导入类型
import {} from '@koishijs/plugin-help'

ctx.command('bar 一条看不见的指令', { hidden: true })
  .option('foo', '&lt;text&gt; 一个看不见的选项', { hidden: true })
  .action(({ options }) =&gt; 'secret: ' + options.foo)</target>
      </trans-unit>
      <trans-unit id="51234">
        <source>help</source>
        <target state="needs-translation">help</target>
      </trans-unit>
      <trans-unit id="51236">
        <source>当前可用的指令有：</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">當前可用的指令有：</target>
      </trans-unit>
      <trans-unit id="51238">
        <source>help  显示帮助信息</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">help  顯示幫助資訊</target>
      </trans-unit>
      <trans-unit id="51262">
        <source>输入“帮助+指令名”查看特定指令的语法和使用示例。</source>
        <target state="needs-translation">输入“帮助+指令名”查看特定指令的语法和使用示例。</target>
      </trans-unit>
      <trans-unit id="51242">
        <source>help bar</source>
        <target state="needs-translation">help bar</target>
      </trans-unit>
      <trans-unit id="51266">
        <source>指令：bar</source>
        <target state="needs-translation">指令：bar</target>
      </trans-unit>
      <trans-unit id="51268">
        <source>一条看不见的指令</source>
        <target state="needs-translation">一条看不见的指令</target>
      </trans-unit>
      <trans-unit id="51248">
        <source>bar --foo 123</source>
        <target state="needs-translation">bar --foo 123</target>
      </trans-unit>
      <trans-unit id="51250">
        <source>secret: 123</source>
        <target state="needs-translation">secret: 123</target>
      </trans-unit>
      <trans-unit id="51252">
        <source>如果要查看隐藏的指令和选项，可以使用 `help -H`：</source>
        <target state="needs-translation">如果要查看隐藏的指令和选项，可以使用 `help -H`：</target>
      </trans-unit>
      <trans-unit id="51254">
        <source>help -H</source>
        <target state="needs-translation">help -H</target>
      </trans-unit>
      <trans-unit id="51256">
        <source>当前可用的指令有：</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">當前可用的指令有：</target>
      </trans-unit>
      <trans-unit id="51258">
        <source>help  显示帮助信息</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">help  顯示幫助資訊</target>
      </trans-unit>
      <trans-unit id="51260">
        <source>bar  一条看不见的指令</source>
        <target state="needs-translation">bar  一条看不见的指令</target>
      </trans-unit>
      <trans-unit id="64648">
        <source>输入“帮助+指令名”查看特定指令的语法和使用示例。</source>
        <target state="needs-translation">输入“帮助+指令名”查看特定指令的语法和使用示例。</target>
      </trans-unit>
      <trans-unit id="51264">
        <source>help bar -H</source>
        <target state="needs-translation">help bar -H</target>
      </trans-unit>
      <trans-unit id="64650">
        <source>指令：bar</source>
        <target state="needs-translation">指令：bar</target>
      </trans-unit>
      <trans-unit id="64652">
        <source>一条看不见的指令</source>
        <target state="needs-translation">一条看不见的指令</target>
      </trans-unit>
      <trans-unit id="51270">
        <source>可用的选项有：</source>
        <target state="translated">可用的選項有：</target>
      </trans-unit>
      <trans-unit id="51272">
        <source>--foo &amp;lt;text&gt;  一个看不见的选项</source>
        <target state="needs-translation">--foo &amp;lt;text&gt;  一个看不见的选项</target>
      </trans-unit>
      <trans-unit id="51274">
        <source>注册子指令</source>
        <target state="needs-translation">注册子指令</target>
      </trans-unit>
      <trans-unit id="51276">
        <source>在本节的最后，我们介绍一下[子指令](../../manual/usage/command.md#子指令)的注册方法：</source>
        <target state="needs-translation">在本节的最后，我们介绍一下[子指令](../../manual/usage/command.md#子指令)的注册方法：</target>
      </trans-unit>
      <trans-unit id="51278">
        <source>// 层级式子指令
ctx.command('foo/bar')

// 派生式子指令
ctx.command('foo.bar')</source>
        <target state="needs-translation">// 层级式子指令
ctx.command('foo/bar')

// 派生式子指令
ctx.command('foo.bar')</target>
      </trans-unit>
      <trans-unit id="51280">
        <source>是的，除了这里用到了斜杠 `/` 和小数点 `.` 来分别表示层级式和派生式子指令外，其他用法都是完全一致的。</source>
        <target state="needs-translation">是的，除了这里用到了斜杠 `/` 和小数点 `.` 来分别表示层级式和派生式子指令外，其他用法都是完全一致的。</target>
      </trans-unit>
      <trans-unit id="51282">
        <source>对于已经存在的指令，你也可以使用 `cmd.subcommand()` 方法来注册子指令：</source>
        <target state="needs-translation">对于已经存在的指令，你也可以使用 `cmd.subcommand()` 方法来注册子指令：</target>
      </trans-unit>
      <trans-unit id="51284">
        <source>// 层级式子指令
ctx.command('foo').subcommand('bar')

// 派生式子指令
ctx.command('foo').subcommand('.bar')</source>
        <target state="needs-translation">// 层级式子指令
ctx.command('foo').subcommand('bar')

// 派生式子指令
ctx.command('foo').subcommand('.bar')</target>
      </trans-unit>
    </body>
  </file>
  <file id="1542" original="/[koishijs.docs] main/zh-CN/guide/basic/element.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="51286">
        <source>消息元素</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">訊息元素</target>
      </trans-unit>
      <trans-unit id="51288">
        <source>当然，一个聊天平台所能发送或接收的内容往往不只有纯文本。</source>
        <target state="needs-translation">当然，一个聊天平台所能发送或接收的内容往往不只有纯文本。</target>
      </trans-unit>
      <trans-unit id="51290">
        <source>为此，我们引入了 **消息元素 (Element)** 的概念。</source>
        <target state="needs-translation">为此，我们引入了 **消息元素 (Element)** 的概念。</target>
      </trans-unit>
      <trans-unit id="51292">
        <source>消息元素类似于 HTML 元素，它是组成消息的基本单位。</source>
        <target state="needs-translation">消息元素类似于 HTML 元素，它是组成消息的基本单位。</target>
      </trans-unit>
      <trans-unit id="51294">
        <source>一个元素可以表示具有特定语义的内容，如文本、表情、图片、引用、元信息等。</source>
        <target state="needs-translation">一个元素可以表示具有特定语义的内容，如文本、表情、图片、引用、元信息等。</target>
      </trans-unit>
      <trans-unit id="51296">
        <source>Koishi 会将这些元素转换为平台所支持的格式，以便在不同平台之间发送和接收消息。</source>
        <target state="needs-translation">Koishi 会将这些元素转换为平台所支持的格式，以便在不同平台之间发送和接收消息。</target>
      </trans-unit>
      <trans-unit id="51298">
        <source>基本用法</source>
        <target state="needs-translation">基本用法</target>
      </trans-unit>
      <trans-unit id="51300">
        <source>一个典型的元素包含名称、属性和内容。</source>
        <target state="needs-translation">一个典型的元素包含名称、属性和内容。</target>
      </trans-unit>
      <trans-unit id="51302">
        <source>在 Koishi 中，我们通常使用 JSX 或 API 的方式创建元素。</source>
        <target state="needs-translation">在 Koishi 中，我们通常使用 JSX 或 API 的方式创建元素。</target>
      </trans-unit>
      <trans-unit id="51304">
        <source>下面是一些例子：</source>
        <target state="needs-translation">下面是一些例子：</target>
      </trans-unit>
      <trans-unit id="51306">
        <source>code</source>
        <target state="needs-translation">code</target>
      </trans-unit>
      <trans-unit id="64232">
        <source>// 欢迎 @用户名 入群！
session.send(&lt;&gt;欢迎 &lt;at id={userId}/&gt; 入群！&lt;/&gt;)

// 发送一张 Koishi 图标
session.send(&lt;img src=&quot;https://koishi.chat/logo.png&quot;/&gt;)</source>
        <target state="needs-translation">// 欢迎 @用户名 入群！
session.send(&lt;&gt;欢迎 &lt;at id={userId}/&gt; 入群！&lt;/&gt;)

// 发送一张 Koishi 图标
session.send(&lt;img src=&quot;https://koishi.chat/logo.png&quot;/&gt;)</target>
      </trans-unit>
      <trans-unit id="64100">
        <source>// 欢迎 @用户名 入群！
session.send('欢迎 ' + h('at', { id: session.userId }) + ' 入群！')

// 发送一张 Koishi 图标
session.send(h('img', { src: 'https://koishi.chat/logo.png' }))</source>
        <target state="needs-translation">// 欢迎 @用户名 入群！
session.send('欢迎 ' + h('at', { id: session.userId }) + ' 入群！')

// 发送一张 Koishi 图标
session.send(h('img', { src: 'https://koishi.chat/logo.png' }))</target>
      </trans-unit>
      <trans-unit id="51312">
        <source>这两种写法各有优劣，不同人可能会有不同的偏好。</source>
        <target state="needs-translation">这两种写法各有优劣，不同人可能会有不同的偏好。</target>
      </trans-unit>
      <trans-unit id="51314">
        <source>但无论哪一种写法都表达了同样的意思。</source>
        <target state="needs-translation">但无论哪一种写法都表达了同样的意思。</target>
      </trans-unit>
      <trans-unit id="51316">
        <source>使用 JSX</source>
        <target state="needs-translation">使用 JSX</target>
      </trans-unit>
      <trans-unit id="51318">
        <source>学习 JSX 的写法需要你有一定的 HTML 基础 (如果有 React 基础将更好，尽管这不是必需的)。</source>
        <target state="needs-translation">学习 JSX 的写法需要你有一定的 HTML 基础 (如果有 React 基础将更好，尽管这不是必需的)。</target>
      </trans-unit>
      <trans-unit id="51320">
        <source>如果你不熟悉 HTML，可以参考 [这篇文档](https://developer.mozilla.org/zh-CN/docs/Glossary/Element)。</source>
        <target state="needs-translation">如果你不熟悉 HTML，可以参考 [这篇文档](https://developer.mozilla.org/zh-CN/docs/Glossary/Element)。</target>
      </trans-unit>
      <trans-unit id="51322">
        <source>如果你已经学习过 HTML 的相关知识，你唯一额外需要了解的事情就是我们使用单花括号 `{}` 进行插值。</source>
        <target state="needs-translation">如果你已经学习过 HTML 的相关知识，你唯一额外需要了解的事情就是我们使用单花括号 `{}` 进行插值。</target>
      </trans-unit>
      <trans-unit id="51324">
        <source>你可以在单花括号中使用任何 JavaScript 表达式，它们会在运算完成后成为元素的一部分。</source>
        <target state="needs-translation">你可以在单花括号中使用任何 JavaScript 表达式，它们会在运算完成后成为元素的一部分。</target>
      </trans-unit>
      <trans-unit id="51326">
        <source>此外，我们还为消息元素编写了完整的 [语法规范](../../api/message/syntax.md)，供你参考。</source>
        <target state="needs-translation">此外，我们还为消息元素编写了完整的 [语法规范](../../api/message/syntax.md)，供你参考。</target>
      </trans-unit>
      <trans-unit id="51328">
        <source>使用 API</source>
        <target state="needs-translation">使用 API</target>
      </trans-unit>
      <trans-unit id="51330">
        <source>对于更喜欢原生 JavaScript 的人，我们也提供了 API 的方式来创建元素。</source>
        <target state="needs-translation">对于更喜欢原生 JavaScript 的人，我们也提供了 API 的方式来创建元素。</target>
      </trans-unit>
      <trans-unit id="51332">
        <source>Koishi 提供一个 `h` 函数，它有着灵活的使用方式：</source>
        <target state="needs-translation">Koishi 提供一个 `h` 函数，它有着灵活的使用方式：</target>
      </trans-unit>
      <trans-unit id="64102">
        <source>// 第一个参数是元素名称 (必选)
h('message')

// 你可以传入一个由属性构成的对象作为第二个参数
h('quote', { id })

// 后续参数是元素的内容，可以是字符串或其他元素
h('p', {}, 'hello')

// 没有属性时二参数可以忽略不写
h('p', 'hello', h('img', { src }))</source>
        <target state="needs-translation">// 第一个参数是元素名称 (必选)
h('message')

// 你可以传入一个由属性构成的对象作为第二个参数
h('quote', { id })

// 后续参数是元素的内容，可以是字符串或其他元素
h('p', {}, 'hello')

// 没有属性时二参数可以忽略不写
h('p', 'hello', h('img', { src }))</target>
      </trans-unit>
      <trans-unit id="51336">
        <source>混用两种写法</source>
        <target state="needs-translation">混用两种写法</target>
      </trans-unit>
      <trans-unit id="51338">
        <source>虽然大部分情况下你可能并不想这么做 (看起来很怪不是吗)，但事实上这两种写法也是可以混用的。</source>
        <target state="needs-translation">虽然大部分情况下你可能并不想这么做 (看起来很怪不是吗)，但事实上这两种写法也是可以混用的。</target>
      </trans-unit>
      <trans-unit id="51340">
        <source>例如，你可以在 JSX 中使用 `h` 函数：</source>
        <target state="needs-translation">例如，你可以在 JSX 中使用 `h` 函数：</target>
      </trans-unit>
      <trans-unit id="51342">
        <source>// 欢迎 @用户名 入群！
&lt;&gt;欢迎 {h('at', { id: userId })} 入群！&lt;/&gt;</source>
        <target state="needs-translation">// 欢迎 @用户名 入群！
&lt;&gt;欢迎 {h('at', { id: userId })} 入群！&lt;/&gt;</target>
      </trans-unit>
      <trans-unit id="51344">
        <source>也可以反过来，将由 JSX 创建出的元素传入 `h` 函数的参数中：</source>
        <target state="needs-translation">也可以反过来，将由 JSX 创建出的元素传入 `h` 函数的参数中：</target>
      </trans-unit>
      <trans-unit id="64234">
        <source>// 创建一个仅包含图片的消息
h('message', &lt;img src=&quot;https://koishi.chat/logo.png&quot;/&gt;)</source>
        <target state="needs-translation">// 创建一个仅包含图片的消息
h('message', &lt;img src=&quot;https://koishi.chat/logo.png&quot;/&gt;)</target>
      </trans-unit>
      <trans-unit id="51348">
        <source>标准元素</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">標準元素</target>
      </trans-unit>
      <trans-unit id="51350">
        <source>Koishi 提供了一系列标准元素，它们覆盖了绝大部分常见的需求。</source>
        <target state="needs-translation">Koishi 提供了一系列标准元素，它们覆盖了绝大部分常见的需求。</target>
      </trans-unit>
      <trans-unit id="51352">
        <source>例如：</source>
        <target state="needs-translation">例如：</target>
      </trans-unit>
      <trans-unit id="51354">
        <source>`at`：提及用户</source>
        <target state="needs-translation">`at`：提及用户</target>
      </trans-unit>
      <trans-unit id="51356">
        <source>`quote`：引用回复</source>
        <target state="needs-translation">`quote`：引用回复</target>
      </trans-unit>
      <trans-unit id="64236">
        <source>`img`：嵌入图片</source>
        <target state="needs-translation">`img`：嵌入图片</target>
      </trans-unit>
      <trans-unit id="51360">
        <source>`message`：发送消息</source>
        <target state="needs-translation">`message`：发送消息</target>
      </trans-unit>
      <trans-unit id="51362">
        <source>尽管一个平台不太可能支持所有的行为，但适配器对每一个标准元素都进行了最大程度的适配。</source>
        <target state="needs-translation">尽管一个平台不太可能支持所有的行为，但适配器对每一个标准元素都进行了最大程度的适配。</target>
      </trans-unit>
      <trans-unit id="51364">
        <source>例如，对于不支持斜体的平台，我们会将斜体元素转换为普通文本；对于无法同时发送多张图片的平台，我们会将多张图片转换为多条消息分别发送等等。</source>
        <target state="needs-translation">例如，对于不支持斜体的平台，我们会将斜体元素转换为普通文本；对于无法同时发送多张图片的平台，我们会将多张图片转换为多条消息分别发送等等。</target>
      </trans-unit>
      <trans-unit id="51366">
        <source>这样一来，开发者便可以在不同平台上使用同一套代码，而不用担心平台差异。</source>
        <target state="needs-translation">这样一来，开发者便可以在不同平台上使用同一套代码，而不用担心平台差异。</target>
      </trans-unit>
      <trans-unit id="51368">
        <source>我们先对比较常用的一些元素进行介绍，你可以稍后在 [这个页面](../../api/message/elements.md) 查看所有的标准元素。</source>
        <target state="needs-translation">我们先对比较常用的一些元素进行介绍，你可以稍后在 [这个页面](../../api/message/elements.md) 查看所有的标准元素。</target>
      </trans-unit>
      <trans-unit id="51370">
        <source>提及用户和消息</source>
        <target state="needs-translation">提及用户和消息</target>
      </trans-unit>
      <trans-unit id="51372">
        <source>使用 `at` 元素提及用户：</source>
        <target state="needs-translation">使用 `at` 元素提及用户：</target>
      </trans-unit>
      <trans-unit id="51374">
        <source>欢迎 &lt;at id={userId}/&gt; 入群！</source>
        <target state="needs-translation">欢迎 &lt;at id={userId}/&gt; 入群！</target>
      </trans-unit>
      <trans-unit id="51376">
        <source>欢迎 @用户名 入群！</source>
        <target state="needs-translation">欢迎 @用户名 入群！</target>
      </trans-unit>
      <trans-unit id="51378">
        <source>使用 `quote` 元素引用回复：</source>
        <target state="needs-translation">使用 `quote` 元素引用回复：</target>
      </trans-unit>
      <trans-unit id="51380">
        <source>&lt;quote id={messageId}/&gt; 你说得对</source>
        <target state="needs-translation">&lt;quote id={messageId}/&gt; 你说得对</target>
      </trans-unit>
      <trans-unit id="51382">
        <source>原消息文本</source>
        <target state="needs-translation">原消息文本</target>
      </trans-unit>
      <trans-unit id="51384">
        <source>

你说得对
</source>
        <target state="needs-translation">

你说得对
</target>
      </trans-unit>
      <trans-unit id="51386">
        <source>嵌入图片和其他资源</source>
        <target state="needs-translation">嵌入图片和其他资源</target>
      </trans-unit>
      <trans-unit id="64238">
        <source>使用 `img`, `audio`, `video` 和 `file` 元素嵌入图片、音频、视频和文件，它们的用法是类似的。</source>
        <target state="needs-translation">使用 `img`, `audio`, `video` 和 `file` 元素嵌入图片、音频、视频和文件，它们的用法是类似的。</target>
      </trans-unit>
      <trans-unit id="51390">
        <source>这里以图片为例：</source>
        <target state="needs-translation">这里以图片为例：</target>
      </trans-unit>
      <trans-unit id="64240">
        <source>&lt;img src=&quot;https://koishi.chat/logo.png&quot;/&gt;</source>
        <target state="needs-translation">&lt;img src=&quot;https://koishi.chat/logo.png&quot;/&gt;</target>
      </trans-unit>
      <trans-unit id="51394">
        <source>上面是对于网络图片的用法，如果你想发送本地图片，可以使用 `file:` URL：</source>
        <target state="needs-translation">上面是对于网络图片的用法，如果你想发送本地图片，可以使用 `file:` URL：</target>
      </trans-unit>
      <trans-unit id="64242">
        <source>import { pathToFileURL } from 'url'
import { resolve } from 'path'

// 发送相对路径下的 logo.png
h.image(pathToFileURL(resolve(__dirname, 'logo.png')).href)

// 等价于下面的写法
&lt;img src={pathToFileURL(resolve(__dirname, 'logo.png')).href}/&gt;</source>
        <target state="needs-translation">import { pathToFileURL } from 'url'
import { resolve } from 'path'

// 发送相对路径下的 logo.png
h.image(pathToFileURL(resolve(__dirname, 'logo.png')).href)

// 等价于下面的写法
&lt;img src={pathToFileURL(resolve(__dirname, 'logo.png')).href}/&gt;</target>
      </trans-unit>
      <trans-unit id="51398">
        <source>如果图片以二进制数据的形式存在于内存中，你也可以直接通过 `h.image()` 构造 `data:` URL：</source>
        <target state="needs-translation">如果图片以二进制数据的形式存在于内存中，你也可以直接通过 `h.image()` 构造 `data:` URL：</target>
      </trans-unit>
      <trans-unit id="64244">
        <source>// 这里的二参数是图片的 MIME 类型
h.image(buffer, 'image/png')

// 等价于下面的写法
&lt;img src={'data:image/png;base64,' + buffer.toString('base64')}/&gt;</source>
        <target state="needs-translation">// 这里的二参数是图片的 MIME 类型
h.image(buffer, 'image/png')

// 等价于下面的写法
&lt;img src={'data:image/png;base64,' + buffer.toString('base64')}/&gt;</target>
      </trans-unit>
      <trans-unit id="51402">
        <source>消息组件 &lt;badge type=&quot;warning&quot;&gt;实验性&lt;/badge&gt;</source>
        <target state="needs-translation">消息组件 &lt;badge type=&quot;warning&quot;&gt;实验性&lt;/badge&gt;</target>
      </trans-unit>
      <trans-unit id="51404">
        <source>**消息组件 (Component)** 是一种对消息元素的扩展和封装。</source>
        <target state="needs-translation">**消息组件 (Component)** 是一种对消息元素的扩展和封装。</target>
      </trans-unit>
      <trans-unit id="51406">
        <source>它允许你创建可重用的定制元素，并在渲染时引入自定义逻辑。</source>
        <target state="needs-translation">它允许你创建可重用的定制元素，并在渲染时引入自定义逻辑。</target>
      </trans-unit>
      <trans-unit id="51408">
        <source>例如，`&lt;execute&gt;` 组件会将其中的内容作为指令执行，并将执行结果替换该元素：</source>
        <target state="needs-translation">例如，`&lt;execute&gt;` 组件会将其中的内容作为指令执行，并将执行结果替换该元素：</target>
      </trans-unit>
      <trans-unit id="51410">
        <source>这是执行结果：&lt;execute&gt;echo hello&lt;/execute&gt;</source>
        <target state="needs-translation">这是执行结果：&lt;execute&gt;echo hello&lt;/execute&gt;</target>
      </trans-unit>
      <trans-unit id="51412">
        <source>这是执行结果：hello</source>
        <target state="needs-translation">这是执行结果：hello</target>
      </trans-unit>
      <trans-unit id="51414">
        <source>如你所见，你可以像使用普通的消息元素一样使用消息组件。</source>
        <target state="needs-translation">如你所见，你可以像使用普通的消息元素一样使用消息组件。</target>
      </trans-unit>
      <trans-unit id="51416">
        <source>唯一的区别是消息组件不由适配器实现，而是由 Koishi 直接处理。</source>
        <target state="needs-translation">唯一的区别是消息组件不由适配器实现，而是由 Koishi 直接处理。</target>
      </trans-unit>
      <trans-unit id="51418">
        <source>与之相对的，某些消息组件只有在特定的会话环境下才能使用 (例如在 `ctx.broadcast()` 中传入 `&lt;execute&gt;` 是无意义的，也会抛出错误)。</source>
        <target state="needs-translation">与之相对的，某些消息组件只有在特定的会话环境下才能使用 (例如在 `ctx.broadcast()` 中传入 `&lt;execute&gt;` 是无意义的，也会抛出错误)。</target>
      </trans-unit>
      <trans-unit id="51420">
        <source>Koishi 已经内置了一系列消息组件，包括：</source>
        <target state="needs-translation">Koishi 已经内置了一系列消息组件，包括：</target>
      </trans-unit>
      <trans-unit id="51422">
        <source>`&lt;execute&gt;`：执行指令</source>
        <target state="needs-translation">`&lt;execute&gt;`：执行指令</target>
      </trans-unit>
      <trans-unit id="51424">
        <source>`&lt;prompt&gt;`：等待输入</source>
        <target state="needs-translation">`&lt;prompt&gt;`：等待输入</target>
      </trans-unit>
      <trans-unit id="51426">
        <source>`&lt;i18n&gt;`：国际化</source>
        <target state="needs-translation">`&lt;i18n&gt;`：国际化</target>
      </trans-unit>
      <trans-unit id="51428">
        <source>`&lt;random&gt;`：随机选择</source>
        <target state="needs-translation">`&lt;random&gt;`：随机选择</target>
      </trans-unit>
      <trans-unit id="51430">
        <source>你可以在 [这个页面](../../api/message/components.md) 了解每个组件的详细用法和适用范围。</source>
        <target state="needs-translation">你可以在 [这个页面](../../api/message/components.md) 了解每个组件的详细用法和适用范围。</target>
      </trans-unit>
      <trans-unit id="51432">
        <source>定义消息组件</source>
        <target state="needs-translation">定义消息组件</target>
      </trans-unit>
      <trans-unit id="51434">
        <source>一个消息组件本质上是一个函数，它接受三个参数：</source>
        <target state="needs-translation">一个消息组件本质上是一个函数，它接受三个参数：</target>
      </trans-unit>
      <trans-unit id="51436">
        <source>**attrs:** 元素的属性</source>
        <target state="needs-translation">**attrs:** 元素的属性</target>
      </trans-unit>
      <trans-unit id="51438">
        <source>**children:** 子元素列表</source>
        <target state="needs-translation">**children:** 子元素列表</target>
      </trans-unit>
      <trans-unit id="51440">
        <source>**session:** 当前会话</source>
        <target state="needs-translation">**session:** 当前会话</target>
      </trans-unit>
      <trans-unit id="51442">
        <source>例如，下面的代码就定义了一个简单的消息组件：</source>
        <target state="needs-translation">例如，下面的代码就定义了一个简单的消息组件：</target>
      </trans-unit>
      <trans-unit id="51444">
        <source>// 请注意函数名必须以大写字母开头
function Custom(attrs, children, session) {
  return '自定义内容'
}</source>
        <target state="needs-translation">// 请注意函数名必须以大写字母开头
function Custom(attrs, children, session) {
  return '自定义内容'
}</target>
      </trans-unit>
      <trans-unit id="51446">
        <source>你可以直接在渲染时使用这个组件：</source>
        <target state="needs-translation">你可以直接在渲染时使用这个组件：</target>
      </trans-unit>
      <trans-unit id="51448">
        <source>code</source>
        <target state="needs-translation">code</target>
      </trans-unit>
      <trans-unit id="51450">
        <source>// 请注意这里的大写字母
session.send(&lt;Custom/&gt;)</source>
        <target state="needs-translation">// 请注意这里的大写字母
session.send(&lt;Custom/&gt;)</target>
      </trans-unit>
      <trans-unit id="51452">
        <source>// 请注意这里的大写字母
session.send(h(Custom))</source>
        <target state="needs-translation">// 请注意这里的大写字母
session.send(h(Custom))</target>
      </trans-unit>
      <trans-unit id="51454">
        <source>注册全局组件</source>
        <target state="needs-translation">注册全局组件</target>
      </trans-unit>
      <trans-unit id="51456">
        <source>上面的写法只能在当前文件中使用，并且必须以大写字母开头。</source>
        <target state="needs-translation">上面的写法只能在当前文件中使用，并且必须以大写字母开头。</target>
      </trans-unit>
      <trans-unit id="51458">
        <source>如果想要更自然的写法，并将组件提供给其他插件使用，只需使用 `ctx.component()` 将它注册为一个全局组件：</source>
        <target state="needs-translation">如果想要更自然的写法，并将组件提供给其他插件使用，只需使用 `ctx.component()` 将它注册为一个全局组件：</target>
      </trans-unit>
      <trans-unit id="51460">
        <source>ctx.component('custom', (attrs, children, session) =&gt; {
  return '自定义内容'
})

// 现在你可以在任何地方使用小写的 &lt;custom/&gt; 了
session.send(&lt;custom/&gt;)</source>
        <target state="needs-translation">ctx.component('custom', (attrs, children, session) =&gt; {
  return '自定义内容'
})

// 现在你可以在任何地方使用小写的 &lt;custom/&gt; 了
session.send(&lt;custom/&gt;)</target>
      </trans-unit>
      <trans-unit id="64914">
        <source>转义与解析</source>
        <target state="needs-translation">转义与解析</target>
      </trans-unit>
      <trans-unit id="64916">
        <source>直接发送未经转义的用户输入是非常危险的，因为它很容易导致 [XSS 攻击](https://zh.wikipedia.org/wiki/%E8%B7%A8%E7%B6%B2%E7%AB%99%E6%8C%87%E4%BB%A4%E7%A2%BC)。</source>
        <target state="needs-translation">直接发送未经转义的用户输入是非常危险的，因为它很容易导致 [XSS 攻击](https://zh.wikipedia.org/wiki/%E8%B7%A8%E7%B6%B2%E7%AB%99%E6%8C%87%E4%BB%A4%E7%A2%BC)。</target>
      </trans-unit>
      <trans-unit id="64918">
        <source>在使用诸如 `h.unescape()` 之类的 API 时，请务必确保输入的安全性。</source>
        <target state="needs-translation">在使用诸如 `h.unescape()` 之类的 API 时，请务必确保输入的安全性。</target>
      </trans-unit>
      <trans-unit id="64920">
        <source>在默认情况下，Koishi 会对指令参数进行转义以确保安全性。</source>
        <target state="needs-translation">在默认情况下，Koishi 会对指令参数进行转义以确保安全性。</target>
      </trans-unit>
      <trans-unit id="64922">
        <source>但在某些情况下，你可能希望手动处理消息元素的转义和解析。</source>
        <target state="needs-translation">但在某些情况下，你可能希望手动处理消息元素的转义和解析。</target>
      </trans-unit>
      <trans-unit id="64924">
        <source>为此，我们提供了一系列实用方法：</source>
        <target state="needs-translation">为此，我们提供了一系列实用方法：</target>
      </trans-unit>
      <trans-unit id="64926">
        <source>[`h.escape()`](../../api/message/api.md#h-escape): 转义字符串</source>
        <target state="needs-translation">[`h.escape()`](../../api/message/api.md#h-escape): 转义字符串</target>
      </trans-unit>
      <trans-unit id="64928">
        <source>[`h.unescape()`](../../api/message/api.md#h-unescape): 反转义字符串</source>
        <target state="needs-translation">[`h.unescape()`](../../api/message/api.md#h-unescape): 反转义字符串</target>
      </trans-unit>
      <trans-unit id="64930">
        <source>[`h.parse()`](../../api/message/api.md#h-parse): 将字符串解析为消息元素</source>
        <target state="needs-translation">[`h.parse()`](../../api/message/api.md#h-parse): 将字符串解析为消息元素</target>
      </trans-unit>
      <trans-unit id="64932">
        <source>[`h.select()`](../../api/message/api.md#h-select): 从消息元素中选择指定类型的元素</source>
        <target state="needs-translation">[`h.select()`](../../api/message/api.md#h-select): 从消息元素中选择指定类型的元素</target>
      </trans-unit>
      <trans-unit id="64934">
        <source>[`h.transform()`](../../api/message/api.md#h-transform): 在消息元素中查找并替换指定类型的元素</source>
        <target state="needs-translation">[`h.transform()`](../../api/message/api.md#h-transform): 在消息元素中查找并替换指定类型的元素</target>
      </trans-unit>
      <trans-unit id="64936">
        <source>[`h.transformAsync()`](../../api/message/api.md#h-transformasync): 上述方法的异步版本</source>
        <target state="needs-translation">[`h.transformAsync()`](../../api/message/api.md#h-transformasync): 上述方法的异步版本</target>
      </trans-unit>
    </body>
  </file>
  <file id="1544" original="/[koishijs.docs] main/zh-CN/guide/basic/events.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="51462">
        <source>事件系统</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">事件系統</target>
      </trans-unit>
      <trans-unit id="51464">
        <source>在上一节中我们了解了指令开发，现在让我们回到更加基础的事件系统。</source>
        <target state="needs-translation">在上一节中我们了解了指令开发，现在让我们回到更加基础的事件系统。</target>
      </trans-unit>
      <trans-unit id="51466">
        <source>事件系统在 Koishi 中扮演着底层的角色，它不仅包含由聊天平台触发的会话事件，还包含了监听运行状态的生命周期事件和提供扩展性的自定义事件。</source>
        <target state="needs-translation">事件系统在 Koishi 中扮演着底层的角色，它不仅包含由聊天平台触发的会话事件，还包含了监听运行状态的生命周期事件和提供扩展性的自定义事件。</target>
      </trans-unit>
      <trans-unit id="51468">
        <source>基本用法</source>
        <target state="needs-translation">基本用法</target>
      </trans-unit>
      <trans-unit id="51470">
        <source>让我们先从一个基本示例开始：</source>
        <target state="needs-translation">让我们先从一个基本示例开始：</target>
      </trans-unit>
      <trans-unit id="51472">
        <source>ctx.on('message', (session) =&gt; {
  if (session.content === '天王盖地虎') {
    session.send('宝塔镇河妖')
  }
})</source>
        <target state="needs-translation">ctx.on('message', (session) =&gt; {
  if (session.content === '天王盖地虎') {
    session.send('宝塔镇河妖')
  }
})</target>
      </trans-unit>
      <trans-unit id="51474">
        <source>上述代码片段实现了一个简单的功能：当任何用户发送「天王盖地虎」时，机器人将发送「宝塔镇河妖」。</source>
        <target state="needs-translation">上述代码片段实现了一个简单的功能：当任何用户发送「天王盖地虎」时，机器人将发送「宝塔镇河妖」。</target>
      </trans-unit>
      <trans-unit id="51476">
        <source>如你所见，`ctx.on()` 方法监听了一个事件。</source>
        <target state="needs-translation">如你所见，`ctx.on()` 方法监听了一个事件。</target>
      </trans-unit>
      <trans-unit id="51478">
        <source>传入的第一个参数 `message` 是事件的名称，而第二个参数则是事件的回调函数。</source>
        <target state="needs-translation">传入的第一个参数 `message` 是事件的名称，而第二个参数则是事件的回调函数。</target>
      </trans-unit>
      <trans-unit id="51480">
        <source>每一次 `message` 事件被触发 (即收到消息) 时都会调用该函数。</source>
        <target state="needs-translation">每一次 `message` 事件被触发 (即收到消息) 时都会调用该函数。</target>
      </trans-unit>
      <trans-unit id="51482">
        <source>回调函数接受一个参数 `session`，称为**会话对象**。</source>
        <target state="needs-translation">回调函数接受一个参数 `session`，称为**会话对象**。</target>
      </trans-unit>
      <trans-unit id="51484">
        <source>在这个例子中，我们通过它访问事件相关的数据 (使用 `session.content` 获取消息的内容)，并调用其上的 API 作为对此事件的响应 (使用 `session.send()` 在当前频道内发送消息)。</source>
        <target state="needs-translation">在这个例子中，我们通过它访问事件相关的数据 (使用 `session.content` 获取消息的内容)，并调用其上的 API 作为对此事件的响应 (使用 `session.send()` 在当前频道内发送消息)。</target>
      </trans-unit>
      <trans-unit id="51486">
        <source>事件与会话构成了最基础的交互模型。</source>
        <target state="needs-translation">事件与会话构成了最基础的交互模型。</target>
      </trans-unit>
      <trans-unit id="51488">
        <source>这种模型不仅能够处理消息，还能够处理其他类型的事件。</source>
        <target state="needs-translation">这种模型不仅能够处理消息，还能够处理其他类型的事件。</target>
      </trans-unit>
      <trans-unit id="51490">
        <source>我们再给出一个例子：</source>
        <target state="needs-translation">我们再给出一个例子：</target>
      </trans-unit>
      <trans-unit id="51492">
        <source>// 当有好友请求时，接受请求并发送欢迎消息
ctx.on('friend-request', async (session) =&gt; {
  // session.bot 是当前会话绑定的机器人实例
  await session.bot.handleFriendRequest(session.messageId, true)
  await session.bot.sendPrivateMessage(session.userId, '很高兴认识你！')
})</source>
        <target state="needs-translation">// 当有好友请求时，接受请求并发送欢迎消息
ctx.on('friend-request', async (session) =&gt; {
  // session.bot 是当前会话绑定的机器人实例
  await session.bot.handleFriendRequest(session.messageId, true)
  await session.bot.sendPrivateMessage(session.userId, '很高兴认识你！')
})</target>
      </trans-unit>
      <trans-unit id="51494">
        <source>像这样由聊天平台推送的事件，我们称之为 **会话事件**。</source>
        <target state="needs-translation">像这样由聊天平台推送的事件，我们称之为 **会话事件**。</target>
      </trans-unit>
      <trans-unit id="51496">
        <source>除此以外，Koishi 还有着其他类型的事件，例如由 Koishi 自身生成的 **生命周期事件**，又或者是由插件提供的 **自定义事件** 等等。</source>
        <target state="needs-translation">除此以外，Koishi 还有着其他类型的事件，例如由 Koishi 自身生成的 **生命周期事件**，又或者是由插件提供的 **自定义事件** 等等。</target>
      </trans-unit>
      <trans-unit id="51498">
        <source>这些事件的监听方式与会话事件基本一致，只不过它们的回调函数接受的参数不同。</source>
        <target state="needs-translation">这些事件的监听方式与会话事件基本一致，只不过它们的回调函数接受的参数不同。</target>
      </trans-unit>
      <trans-unit id="51500">
        <source>例如下面的代码实现了当 Bot 上线时自动给自己发送一条消息的功能：</source>
        <target state="needs-translation">例如下面的代码实现了当 Bot 上线时自动给自己发送一条消息的功能：</target>
      </trans-unit>
      <trans-unit id="51502">
        <source>// bot-status-updated 不是会话事件
// 所以回调函数接受的参数不是 session 而是 bot
ctx.on('bot-status-updated', (bot) =&gt; {
  if (bot.status === Status.ONLINE) {
    // 这里的 userId 换成你的账号
    bot.sendPrivateMessage(userId, '我上线了~')
  }
})</source>
        <target state="needs-translation">// bot-status-updated 不是会话事件
// 所以回调函数接受的参数不是 session 而是 bot
ctx.on('bot-status-updated', (bot) =&gt; {
  if (bot.status === Status.ONLINE) {
    // 这里的 userId 换成你的账号
    bot.sendPrivateMessage(userId, '我上线了~')
  }
})</target>
      </trans-unit>
      <trans-unit id="51504">
        <source>在后续的章节中，我们也将介绍更多的事件和会话的使用方法。</source>
        <target state="needs-translation">在后续的章节中，我们也将介绍更多的事件和会话的使用方法。</target>
      </trans-unit>
      <trans-unit id="51506">
        <source>监听事件</source>
        <target state="needs-translation">监听事件</target>
      </trans-unit>
      <trans-unit id="51508">
        <source>在上面的例子中，我们已经了解到事件系统的基本用法：使用 `ctx.on()` 注册监听器。</source>
        <target state="needs-translation">在上面的例子中，我们已经了解到事件系统的基本用法：使用 `ctx.on()` 注册监听器。</target>
      </trans-unit>
      <trans-unit id="51510">
        <source>它的写法与 Node.js 自带的 [EventEmitter](https://nodejs.org/api/events.html#events_class_eventemitter) 类似：第一个参数表示要监听的事件名称，第二个参数表示事件的回调函数。</source>
        <target state="needs-translation">它的写法与 Node.js 自带的 [EventEmitter](https://nodejs.org/api/events.html#events_class_eventemitter) 类似：第一个参数表示要监听的事件名称，第二个参数表示事件的回调函数。</target>
      </trans-unit>
      <trans-unit id="51512">
        <source>同时，我们也提供了类似的函数 `ctx.once()`，用于注册一个只触发一次的监听器；以及 `ctx.off()`，用于取消一个已注册的监听器。</source>
        <target state="needs-translation">同时，我们也提供了类似的函数 `ctx.once()`，用于注册一个只触发一次的监听器；以及 `ctx.off()`，用于取消一个已注册的监听器。</target>
      </trans-unit>
      <trans-unit id="51514">
        <source>这套事件系统与 EventEmitter 的一个不同点在于，无论是 `ctx.on()` 还是 `ctx.once()` 都会返回一个 dispose 函数，调用这个函数即可取消注册监听器。</source>
        <target state="needs-translation">这套事件系统与 EventEmitter 的一个不同点在于，无论是 `ctx.on()` 还是 `ctx.once()` 都会返回一个 dispose 函数，调用这个函数即可取消注册监听器。</target>
      </trans-unit>
      <trans-unit id="51516">
        <source>因此你其实不必使用 `ctx.once()` 和 `ctx.off()`。</source>
        <target state="needs-translation">因此你其实不必使用 `ctx.once()` 和 `ctx.off()`。</target>
      </trans-unit>
      <trans-unit id="51518">
        <source>下面给一个只触发一次的监听器的例子：</source>
        <target state="needs-translation">下面给一个只触发一次的监听器的例子：</target>
      </trans-unit>
      <trans-unit id="51520">
        <source>declare module 'koishi' {
  interface Events {
    foo(...args: any[]): void
  }
}
// ---cut---
// 回调函数只会被触发一次
const dispose = ctx.on('foo', (...args) =&gt; {
  dispose()
  // do something
})</source>
        <target state="needs-translation">declare module 'koishi' {
  interface Events {
    foo(...args: any[]): void
  }
}
// ---cut---
// 回调函数只会被触发一次
const dispose = ctx.on('foo', (...args) =&gt; {
  dispose()
  // do something
})</target>
      </trans-unit>
      <trans-unit id="51522">
        <source>事件的命名</source>
        <target state="needs-translation">事件的命名</target>
      </trans-unit>
      <trans-unit id="51524">
        <source>无论是会话事件，生命周期事件还是插件自定义的事件，Koishi 的事件名都遵循着一些既定的规范。</source>
        <target state="needs-translation">无论是会话事件，生命周期事件还是插件自定义的事件，Koishi 的事件名都遵循着一些既定的规范。</target>
      </trans-unit>
      <trans-unit id="51526">
        <source>遵守规范能够让开发者获得一致的体验，提高开发和调试的效率。</source>
        <target state="needs-translation">遵守规范能够让开发者获得一致的体验，提高开发和调试的效率。</target>
      </trans-unit>
      <trans-unit id="51528">
        <source>它们包括：</source>
        <target state="needs-translation">它们包括：</target>
      </trans-unit>
      <trans-unit id="51530">
        <source>总是使用 param-case 作为事件名</source>
        <target state="needs-translation">总是使用 param-case 作为事件名</target>
      </trans-unit>
      <trans-unit id="51532">
        <source>通过命名空间进行管理，使用 `/` 作为分隔符</source>
        <target state="needs-translation">通过命名空间进行管理，使用 `/` 作为分隔符</target>
      </trans-unit>
      <trans-unit id="51534">
        <source>配对使用 xxx 和 before-xxx 命名具有时序关系的事件</source>
        <target state="needs-translation">配对使用 xxx 和 before-xxx 命名具有时序关系的事件</target>
      </trans-unit>
      <trans-unit id="51536">
        <source>举个例子，koishi-plugin-dialogue 扩展了多达 20 个自定义事件。</source>
        <target state="needs-translation">举个例子，koishi-plugin-dialogue 扩展了多达 20 个自定义事件。</target>
      </trans-unit>
      <trans-unit id="51538">
        <source>为了防止命名冲突，所有的事件都以 `dialogue/` 开头，并且在特定操作前触发的事件都包含了 `before-` 前缀，例如：</source>
        <target state="needs-translation">为了防止命名冲突，所有的事件都以 `dialogue/` 开头，并且在特定操作前触发的事件都包含了 `before-` 前缀，例如：</target>
      </trans-unit>
      <trans-unit id="51540">
        <source>dialogue/before-search: 获取搜索结果前触发</source>
        <target state="needs-translation">dialogue/before-search: 获取搜索结果前触发</target>
      </trans-unit>
      <trans-unit id="51542">
        <source>dialogue/search: 获取完搜索结果后触发</source>
        <target state="needs-translation">dialogue/search: 获取完搜索结果后触发</target>
      </trans-unit>
      <trans-unit id="51544">
        <source>前置事件</source>
        <target state="needs-translation">前置事件</target>
      </trans-unit>
      <trans-unit id="51546">
        <source>前面介绍了，Koishi 有不少监听器满足 before-xxx 的形式。</source>
        <target state="needs-translation">前面介绍了，Koishi 有不少监听器满足 before-xxx 的形式。</target>
      </trans-unit>
      <trans-unit id="51548">
        <source>对于这类监听器的注册，我们也提供了一个语法糖，那就是 `ctx.before('xxx', callback)`。</source>
        <target state="needs-translation">对于这类监听器的注册，我们也提供了一个语法糖，那就是 `ctx.before('xxx', callback)`。</target>
      </trans-unit>
      <trans-unit id="51550">
        <source>这种写法也支持命名空间的情况：</source>
        <target state="needs-translation">这种写法也支持命名空间的情况：</target>
      </trans-unit>
      <trans-unit id="51552">
        <source>// @errors: 2304
ctx.before('dialogue/search', callback)
// 相当于
ctx.on('dialogue/before-search', callback, true)</source>
        <target state="needs-translation">// @errors: 2304
ctx.before('dialogue/search', callback)
// 相当于
ctx.on('dialogue/before-search', callback, true)</target>
      </trans-unit>
      <trans-unit id="51554">
        <source>默认情况下，事件的多个回调函数的执行顺序取决于它们添加的顺序。</source>
        <target state="needs-translation">默认情况下，事件的多个回调函数的执行顺序取决于它们添加的顺序。</target>
      </trans-unit>
      <trans-unit id="51556">
        <source>先注册的回调函数会先被执行。</source>
        <target state="needs-translation">先注册的回调函数会先被执行。</target>
      </trans-unit>
      <trans-unit id="51558">
        <source>如果你希望提高某个回调函数的优先级，可以给 `ctx.on()` 传入第三个参数 `prepend`，设置为 true 即表示添加到事件执行队列的开头而非结尾，相当于 [`emitter.prependListener()`](https://nodejs.org/api/events.html#emitterprependlistenereventname-listener)。</source>
        <target state="needs-translation">如果你希望提高某个回调函数的优先级，可以给 `ctx.on()` 传入第三个参数 `prepend`，设置为 true 即表示添加到事件执行队列的开头而非结尾，相当于 [`emitter.prependListener()`](https://nodejs.org/api/events.html#emitterprependlistenereventname-listener)。</target>
      </trans-unit>
      <trans-unit id="51560">
        <source>对于 `ctx.before()`，情况则正好相反。</source>
        <target state="needs-translation">对于 `ctx.before()`，情况则正好相反。</target>
      </trans-unit>
      <trans-unit id="51562">
        <source>默认的行为的先注册的回调函数后执行，同时 `ctx.before()` 的第三个参数 `append` 则表示添加到事件执行队列的末尾而非开头。</source>
        <target state="needs-translation">默认的行为的先注册的回调函数后执行，同时 `ctx.before()` 的第三个参数 `append` 则表示添加到事件执行队列的末尾而非开头。</target>
      </trans-unit>
      <trans-unit id="51564">
        <source>触发事件</source>
        <target state="needs-translation">触发事件</target>
      </trans-unit>
      <trans-unit id="51566">
        <source>如果你开发的插件希望允许其他插件扩展，那么触发事件就是最简单的方式。</source>
        <target state="needs-translation">如果你开发的插件希望允许其他插件扩展，那么触发事件就是最简单的方式。</target>
      </trans-unit>
      <trans-unit id="51568">
        <source>触发事件的基本用法也都与 EventEmitter 类似，第一个参数是事件名称，之后的参数对应回调函数的参数。</source>
        <target state="needs-translation">触发事件的基本用法也都与 EventEmitter 类似，第一个参数是事件名称，之后的参数对应回调函数的参数。</target>
      </trans-unit>
      <trans-unit id="51570">
        <source>下面是一个例子：</source>
        <target state="needs-translation">下面是一个例子：</target>
      </trans-unit>
      <trans-unit id="51572">
        <source>declare module 'koishi' {
  interface Events {
    'custom-event'(...args: any[]): void
  }
}

// ---cut---
// @errors: 2304
ctx.emit('custom-event', arg1, arg2, ...rest)
// 对应于
ctx.on('custom-event', (arg1, arg2, ...rest) =&gt; {})</source>
        <target state="needs-translation">declare module 'koishi' {
  interface Events {
    'custom-event'(...args: any[]): void
  }
}

// ---cut---
// @errors: 2304
ctx.emit('custom-event', arg1, arg2, ...rest)
// 对应于
ctx.on('custom-event', (arg1, arg2, ...rest) =&gt; {})</target>
      </trans-unit>
      <trans-unit id="51574">
        <source>触发方式</source>
        <target state="needs-translation">触发方式</target>
      </trans-unit>
      <trans-unit id="51576">
        <source>Koishi 的事件系统与 EventEmitter 的另一个区别在于，触发一个事件可以有着多种形式，目前支持 4 个不同的方法，足以适应绝大多数需求。</source>
        <target state="needs-translation">Koishi 的事件系统与 EventEmitter 的另一个区别在于，触发一个事件可以有着多种形式，目前支持 4 个不同的方法，足以适应绝大多数需求。</target>
      </trans-unit>
      <trans-unit id="51578">
        <source>emit: 同时触发所有 event 事件的回调函数</source>
        <target state="needs-translation">emit: 同时触发所有 event 事件的回调函数</target>
      </trans-unit>
      <trans-unit id="51580">
        <source>parallel: 上述方法对应的异步版本</source>
        <target state="needs-translation">parallel: 上述方法对应的异步版本</target>
      </trans-unit>
      <trans-unit id="51582">
        <source>bail: 依次触发所有 event 事件的回调函数；当返回一个 `false`, `null`, `undefined` 以外的值时将这个值作为结果返回</source>
        <target state="needs-translation">bail: 依次触发所有 event 事件的回调函数；当返回一个 `false`, `null`, `undefined` 以外的值时将这个值作为结果返回</target>
      </trans-unit>
      <trans-unit id="51584">
        <source>serial: 上述方法对应的异步版本</source>
        <target state="needs-translation">serial: 上述方法对应的异步版本</target>
      </trans-unit>
      <trans-unit id="51586">
        <source>此外，你还将在下一节学习 [中间件](./middleware.md)，它提供了一种更加强大的消息事件处理流程。</source>
        <target state="needs-translation">此外，你还将在下一节学习 [中间件](./middleware.md)，它提供了一种更加强大的消息事件处理流程。</target>
      </trans-unit>
      <trans-unit id="51588">
        <source>过滤触发上下文</source>
        <target state="needs-translation">过滤触发上下文</target>
      </trans-unit>
      <trans-unit id="51590">
        <source>如果你的自定义事件与某个特定会话相关 (并不需要是会话事件)，你可以在触发事件的时候传入一个额外的一参数 `session`，以实现对触发上下文的过滤：</source>
        <target state="needs-translation">如果你的自定义事件与某个特定会话相关 (并不需要是会话事件)，你可以在触发事件的时候传入一个额外的一参数 `session`，以实现对触发上下文的过滤：</target>
      </trans-unit>
      <trans-unit id="51592">
        <source>declare module 'koishi' {
  interface Events {
    'custom-event'(...args: any[]): void
  }
}

// ---cut---
// @errors: 2304
// 无法匹配该会话的上下文中注册的回调函数不会被执行 (可能有点绕)
ctx.emit(session, 'custom-event', arg1, arg2, ...rest)</source>
        <target state="needs-translation">declare module 'koishi' {
  interface Events {
    'custom-event'(...args: any[]): void
  }
}

// ---cut---
// @errors: 2304
// 无法匹配该会话的上下文中注册的回调函数不会被执行 (可能有点绕)
ctx.emit(session, 'custom-event', arg1, arg2, ...rest)</target>
      </trans-unit>
      <trans-unit id="51594">
        <source>过滤触发上下文的效果将在 [过滤器](../plugin/filter.md) 一节中详细介绍。</source>
        <target state="needs-translation">过滤触发上下文的效果将在 [过滤器](../plugin/filter.md) 一节中详细介绍。</target>
      </trans-unit>
      <trans-unit id="51596">
        <source>更一般地，即使是不使用会话的事件也能主动选择触发的上下文，其语法完全一致：</source>
        <target state="needs-translation">更一般地，即使是不使用会话的事件也能主动选择触发的上下文，其语法完全一致：</target>
      </trans-unit>
      <trans-unit id="51598">
        <source>const thisArg = { [Context.filter]: callback }
ctx.emit(thisArg, 'custom-event', arg1, arg2, ...rest)</source>
        <target state="needs-translation">const thisArg = { [Context.filter]: callback }
ctx.emit(thisArg, 'custom-event', arg1, arg2, ...rest)</target>
      </trans-unit>
      <trans-unit id="51600">
        <source>触发事件时传入的一参数如果是对象，则会作为事件回调函数的 `this`。</source>
        <target state="needs-translation">触发事件时传入的一参数如果是对象，则会作为事件回调函数的 `this`。</target>
      </trans-unit>
      <trans-unit id="51602">
        <source>并且如果这个对象有 `Context.filter` 属性，那么这个属性将被用于过滤触发上下文。</source>
        <target state="needs-translation">并且如果这个对象有 `Context.filter` 属性，那么这个属性将被用于过滤触发上下文。</target>
      </trans-unit>
      <trans-unit id="51604">
        <source>对应的值是一个函数，传入一个上下文对象，返回一个 boolean 表示是否应该在该上下文上触发该事件。</source>
        <target state="needs-translation">对应的值是一个函数，传入一个上下文对象，返回一个 boolean 表示是否应该在该上下文上触发该事件。</target>
      </trans-unit>
      <trans-unit id="51606">
        <source>而上面介绍的会话事件只是一种特殊情况而已。</source>
        <target state="needs-translation">而上面介绍的会话事件只是一种特殊情况而已。</target>
      </trans-unit>
      <trans-unit id="51608">
        <source>自定义事件</source>
        <target state="needs-translation">自定义事件</target>
      </trans-unit>
      <trans-unit id="51610">
        <source>在本节的最后，我们来聊聊插件扩展的事件系统。</source>
        <target state="needs-translation">在本节的最后，我们来聊聊插件扩展的事件系统。</target>
      </trans-unit>
      <trans-unit id="51612">
        <source>如果你是插件的开发者，想要自定义一些事件，那么只需要在你的插件中添加下面的代码：</source>
        <target state="needs-translation">如果你是插件的开发者，想要自定义一些事件，那么只需要在你的插件中添加下面的代码：</target>
      </trans-unit>
      <trans-unit id="51614">
        <source>declare module 'koishi' {
  interface Events {
    // 方法名称对应自定义事件的名称
    // 方法签名对应事件的回调函数签名
    'kook/message-btn-click'(...args: any[]): void
  }
}</source>
        <target state="needs-translation">declare module 'koishi' {
  interface Events {
    // 方法名称对应自定义事件的名称
    // 方法签名对应事件的回调函数签名
    'kook/message-btn-click'(...args: any[]): void
  }
}</target>
      </trans-unit>
      <trans-unit id="51616">
        <source>如果你监听的事件由其他插件扩展而来，那么你同样需要通过一行额外的代码来导入相应的类型：</source>
        <target state="needs-translation">如果你监听的事件由其他插件扩展而来，那么你同样需要通过一行额外的代码来导入相应的类型：</target>
      </trans-unit>
      <trans-unit id="51618">
        <source>// 从 @koishijs/plugin-adapter-kook 导入事件类型
// 这里的 import {} from 会在编译时被删除，不会影响运行时的行为
// 请不要写成 import '@koishijs/plugin-adapter-kook'
import {} from '@koishijs/plugin-adapter-kook'

// 如果没有上面的类型导入，下面的代码会报错
ctx.on('kook/message-btn-click', callback)</source>
        <target state="needs-translation">// 从 @koishijs/plugin-adapter-kook 导入事件类型
// 这里的 import {} from 会在编译时被删除，不会影响运行时的行为
// 请不要写成 import '@koishijs/plugin-adapter-kook'
import {} from '@koishijs/plugin-adapter-kook'

// 如果没有上面的类型导入，下面的代码会报错
ctx.on('kook/message-btn-click', callback)</target>
      </trans-unit>
    </body>
  </file>
  <file id="1546" original="/[koishijs.docs] main/zh-CN/guide/basic/middleware.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="51620">
        <source>中间件</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">中介軟體</target>
      </trans-unit>
      <trans-unit id="51622">
        <source>有了接收事件和发送消息的能力，似乎你就能完成一切工作了——很多机器人框架也的确是这么想的。</source>
        <target state="needs-translation">有了接收事件和发送消息的能力，似乎你就能完成一切工作了——很多机器人框架也的确是这么想的。</target>
      </trans-unit>
      <trans-unit id="51624">
        <source>但是从 Koishi 的角度，这还远远不够。</source>
        <target state="needs-translation">但是从 Koishi 的角度，这还远远不够。</target>
      </trans-unit>
      <trans-unit id="51626">
        <source>因为当我们面临更复杂的需求时，新的问题也会随之产生：如何限制消息能触发的应答次数？</source>
        <target state="needs-translation">因为当我们面临更复杂的需求时，新的问题也会随之产生：如何限制消息能触发的应答次数？</target>
      </trans-unit>
      <trans-unit id="51628">
        <source>如何进行权限管理？</source>
        <target state="needs-translation">如何进行权限管理？</target>
      </trans-unit>
      <trans-unit id="51630">
        <source>如何提高机器人的性能？</source>
        <target state="needs-translation">如何提高机器人的性能？</target>
      </trans-unit>
      <trans-unit id="51632">
        <source>这些问题的答案将我们引向另一套更高级的系统——这也就是中间件的由来。</source>
        <target state="needs-translation">这些问题的答案将我们引向另一套更高级的系统——这也就是中间件的由来。</target>
      </trans-unit>
      <trans-unit id="51634">
        <source>中间件是对消息事件处理流程的再封装。</source>
        <target state="needs-translation">中间件是对消息事件处理流程的再封装。</target>
      </trans-unit>
      <trans-unit id="51636">
        <source>你注册的所有中间件将会由一个事件监听器进行统一管理，数据流向下游，控制权流回上游——这可以有效确保了任意消息都只被处理一次。</source>
        <target state="needs-translation">你注册的所有中间件将会由一个事件监听器进行统一管理，数据流向下游，控制权流回上游——这可以有效确保了任意消息都只被处理一次。</target>
      </trans-unit>
      <trans-unit id="51638">
        <source>被认定为无需继续处理的消息不会进入下游的中间件——这让我们能够轻易地实现权限管理。</source>
        <target state="needs-translation">被认定为无需继续处理的消息不会进入下游的中间件——这让我们能够轻易地实现权限管理。</target>
      </trans-unit>
      <trans-unit id="51640">
        <source>与此同时，Koishi 的中间件也支持异步调用，这使得你可以在中间件函数中实现任何逻辑。</source>
        <target state="needs-translation">与此同时，Koishi 的中间件也支持异步调用，这使得你可以在中间件函数中实现任何逻辑。</target>
      </trans-unit>
      <trans-unit id="51642">
        <source>事实上，相比更加底层地调用事件监听器，**使用中间件处理消息才是 Koishi 更加推荐的做法**。</source>
        <target state="needs-translation">事实上，相比更加底层地调用事件监听器，**使用中间件处理消息才是 Koishi 更加推荐的做法**。</target>
      </trans-unit>
      <trans-unit id="51644">
        <source>与事件系统的通用性不同，中间件专注于消息事件。</source>
        <target state="needs-translation">与事件系统的通用性不同，中间件专注于消息事件。</target>
      </trans-unit>
      <trans-unit id="51646">
        <source>你不能使用中间件处理其他类型的事件。</source>
        <target state="needs-translation">你不能使用中间件处理其他类型的事件。</target>
      </trans-unit>
      <trans-unit id="51648">
        <source>基本用法</source>
        <target state="needs-translation">基本用法</target>
      </trans-unit>
      <trans-unit id="51650">
        <source>还记得上一节介绍的 [基本示例](./events.md#基本用法) 吗？</source>
        <target state="needs-translation">还记得上一节介绍的 [基本示例](./events.md#基本用法) 吗？</target>
      </trans-unit>
      <trans-unit id="51652">
        <source>让我们把它改成中间件的形式：</source>
        <target state="needs-translation">让我们把它改成中间件的形式：</target>
      </trans-unit>
      <trans-unit id="51654">
        <source>// 如果收到“天王盖地虎”，就回应“宝塔镇河妖”
ctx.middleware((session, next) =&gt; {
  if (session.content === '天王盖地虎') {
    return '宝塔镇河妖'
  } else {
    // 如果去掉这一行，那么不满足上述条件的消息就不会进入下一个中间件了
    return next()
  }
})</source>
        <target state="needs-translation">// 如果收到“天王盖地虎”，就回应“宝塔镇河妖”
ctx.middleware((session, next) =&gt; {
  if (session.content === '天王盖地虎') {
    return '宝塔镇河妖'
  } else {
    // 如果去掉这一行，那么不满足上述条件的消息就不会进入下一个中间件了
    return next()
  }
})</target>
      </trans-unit>
      <trans-unit id="51656">
        <source>中间件与事件的写法非常相似，但有三点区别：</source>
        <target state="needs-translation">中间件与事件的写法非常相似，但有三点区别：</target>
      </trans-unit>
      <trans-unit id="51658">
        <source>事件使用 `ctx.on()` 注册，而中间件使用 `ctx.middleware()` 注册</source>
        <target state="needs-translation">事件使用 `ctx.on()` 注册，而中间件使用 `ctx.middleware()` 注册</target>
      </trans-unit>
      <trans-unit id="51660">
        <source>中间件的回调函数接受额外的第二个参数 `next`，只有调用了它才会进入接下来的流程</source>
        <target state="needs-translation">中间件的回调函数接受额外的第二个参数 `next`，只有调用了它才会进入接下来的流程</target>
      </trans-unit>
      <trans-unit id="51662">
        <source>中间件支持直接返回要发送的内容，而事件需要手动调用 `session.send()`</source>
        <target state="needs-translation">中间件支持直接返回要发送的内容，而事件需要手动调用 `session.send()`</target>
      </trans-unit>
      <trans-unit id="51664">
        <source>同事件类似，注册中间件时也会返回一个新的函数，调用这个函数就可以取消该中间件：</source>
        <target state="needs-translation">同事件类似，注册中间件时也会返回一个新的函数，调用这个函数就可以取消该中间件：</target>
      </trans-unit>
      <trans-unit id="51666">
        <source>declare const callback: import('koishi').Middleware
// ---cut---
const dispose = ctx.middleware(callback)
dispose() // 取消中间件</source>
        <target state="needs-translation">declare const callback: import('koishi').Middleware
// ---cut---
const dispose = ctx.middleware(callback)
dispose() // 取消中间件</target>
      </trans-unit>
      <trans-unit id="51668">
        <source>异步中间件</source>
        <target state="needs-translation">异步中间件</target>
      </trans-unit>
      <trans-unit id="51670">
        <source>中间件也可以是异步的。</source>
        <target state="needs-translation">中间件也可以是异步的。</target>
      </trans-unit>
      <trans-unit id="51672">
        <source>下面给出一个示例：</source>
        <target state="needs-translation">下面给出一个示例：</target>
      </trans-unit>
      <trans-unit id="51674">
        <source>ctx.middleware(async (session, next) =&gt; {
  // 获取数据库中的用户信息
  // 这里只是示例，事实上 Koishi 会自动获取数据库中的信息并存放在 session.user 中
  const user = await session.getUser(session.userId)
  if (user.authority === 0) {
    return '抱歉，你没有权限访问机器人。'
  } else {
    return next()
  }
})</source>
        <target state="needs-translation">ctx.middleware(async (session, next) =&gt; {
  // 获取数据库中的用户信息
  // 这里只是示例，事实上 Koishi 会自动获取数据库中的信息并存放在 session.user 中
  const user = await session.getUser(session.userId)
  if (user.authority === 0) {
    return '抱歉，你没有权限访问机器人。'
  } else {
    return next()
  }
})</target>
      </trans-unit>
      <trans-unit id="51676">
        <source>注意</source>
        <target state="needs-translation">注意</target>
      </trans-unit>
      <trans-unit id="51678">
        <source>异步中间件代码中，`next` 函数被调用时前面必须加上 await (或者 return)。</source>
        <target state="needs-translation">异步中间件代码中，`next` 函数被调用时前面必须加上 await (或者 return)。</target>
      </trans-unit>
      <trans-unit id="51680">
        <source>如果删去将可能会导致时序错误，这在 Koishi 中将会抛出一个运行时警告。</source>
        <target state="needs-translation">如果删去将可能会导致时序错误，这在 Koishi 中将会抛出一个运行时警告。</target>
      </trans-unit>
      <trans-unit id="51682">
        <source>前置中间件</source>
        <target state="needs-translation">前置中间件</target>
      </trans-unit>
      <trans-unit id="51684">
        <source>从上面的两个例子中不难看出，中间件是一种消息过滤的利器。</source>
        <target state="needs-translation">从上面的两个例子中不难看出，中间件是一种消息过滤的利器。</target>
      </trans-unit>
      <trans-unit id="51686">
        <source>但是反过来，当你需要的恰恰是捕获全部消息时，中间件反而不会是最佳选择——因为更早注册的中间件可能会将消息过滤掉，导致你注册的回调函数根本不被执行。</source>
        <target state="needs-translation">但是反过来，当你需要的恰恰是捕获全部消息时，中间件反而不会是最佳选择——因为更早注册的中间件可能会将消息过滤掉，导致你注册的回调函数根本不被执行。</target>
      </trans-unit>
      <trans-unit id="51688">
        <source>因此在这种情况下，我们更推荐使用事件监听器。</source>
        <target state="needs-translation">因此在这种情况下，我们更推荐使用事件监听器。</target>
      </trans-unit>
      <trans-unit id="51690">
        <source>然而，还存在着这样一种情况：你既需要捕获全部的消息，又要对其中的一些加以回复，这又该怎么处理呢？</source>
        <target state="needs-translation">然而，还存在着这样一种情况：你既需要捕获全部的消息，又要对其中的一些加以回复，这又该怎么处理呢？</target>
      </trans-unit>
      <trans-unit id="51692">
        <source>听起来这种需求有些奇怪，让我们举个具体点例子吧：假如你写的是一个复读插件，它需要在每次连续接收到 3 条相同消息时进行复读。</source>
        <target state="needs-translation">听起来这种需求有些奇怪，让我们举个具体点例子吧：假如你写的是一个复读插件，它需要在每次连续接收到 3 条相同消息时进行复读。</target>
      </trans-unit>
      <trans-unit id="51694">
        <source>我们不难使用事件监听器实现这种逻辑：</source>
        <target state="needs-translation">我们不难使用事件监听器实现这种逻辑：</target>
      </trans-unit>
      <trans-unit id="51696">
        <source>let times = 0 // 复读次数
let message = '' // 当前消息

ctx.on('message', (session) =&gt; {
  // 这里其实有个小问题，因为来自不同群的消息都会触发这个回调函数
  // 因此理想的做法应该是分别记录每个群的当前消息和复读次数
  // 但这里我们假设机器人只处理一个群，简化示例的逻辑
  if (session.content === message) {
    times += 1
    if (times === 3) session.send(message)
  } else {
    times = 0
    message = session.content
  }
})</source>
        <target state="needs-translation">let times = 0 // 复读次数
let message = '' // 当前消息

ctx.on('message', (session) =&gt; {
  // 这里其实有个小问题，因为来自不同群的消息都会触发这个回调函数
  // 因此理想的做法应该是分别记录每个群的当前消息和复读次数
  // 但这里我们假设机器人只处理一个群，简化示例的逻辑
  if (session.content === message) {
    times += 1
    if (times === 3) session.send(message)
  } else {
    times = 0
    message = session.content
  }
})</target>
      </trans-unit>
      <trans-unit id="51698">
        <source>但是这样写出的机器人就存在所有用事件监听器写出的机器人的通病——如果这条消息本身可以触发其他回应，机器人就会多次回应。</source>
        <target state="needs-translation">但是这样写出的机器人就存在所有用事件监听器写出的机器人的通病——如果这条消息本身可以触发其他回应，机器人就会多次回应。</target>
      </trans-unit>
      <trans-unit id="51700">
        <source>更糟糕的是，你无法预测哪一次回应先发生，因此这样写出的机器人就会产生延迟复读的迷惑行为。</source>
        <target state="needs-translation">更糟糕的是，你无法预测哪一次回应先发生，因此这样写出的机器人就会产生延迟复读的迷惑行为。</target>
      </trans-unit>
      <trans-unit id="51702">
        <source>为了避免这种情况发生，Koishi 对这种情况也有对应的解决方案，那就是 **前置中间件**。</source>
        <target state="needs-translation">为了避免这种情况发生，Koishi 对这种情况也有对应的解决方案，那就是 **前置中间件**。</target>
      </trans-unit>
      <trans-unit id="51704">
        <source>与前置事件类似，向 `ctx.middleware()` 传入额外的第二个参数 `true` 以注册前置中间件。</source>
        <target state="needs-translation">与前置事件类似，向 `ctx.middleware()` 传入额外的第二个参数 `true` 以注册前置中间件。</target>
      </trans-unit>
      <trans-unit id="51706">
        <source>所有消息会优先经过前置中间件，像事件监听器一样，并且你获得了决定这条消息是否继续触发其他中间件的能力，这是事件监听器所不具有的。</source>
        <target state="needs-translation">所有消息会优先经过前置中间件，像事件监听器一样，并且你获得了决定这条消息是否继续触发其他中间件的能力，这是事件监听器所不具有的。</target>
      </trans-unit>
      <trans-unit id="51708">
        <source>let times = 0 // 复读次数
let message = '' // 当前消息

ctx.middleware((session, next) =&gt; {
  if (session.content === message) {
    times += 1
    if (times === 3) return message
  } else {
    times = 0
    message = session.content
    return next()
  }
}, true /* true 表示这是前置中间件 */)</source>
        <target state="needs-translation">let times = 0 // 复读次数
let message = '' // 当前消息

ctx.middleware((session, next) =&gt; {
  if (session.content === message) {
    times += 1
    if (times === 3) return message
  } else {
    times = 0
    message = session.content
    return next()
  }
}, true /* true 表示这是前置中间件 */)</target>
      </trans-unit>
      <trans-unit id="51710">
        <source>临时中间件</source>
        <target state="needs-translation">临时中间件</target>
      </trans-unit>
      <trans-unit id="51712">
        <source>有的时候，你也可能需要实现这样一种逻辑：你的中间件产生了一个响应，但你认为这个响应优先级较低，希望等后续中间件执行完毕后，如果信号仍然未被截取，就执行之前的响应。</source>
        <target state="needs-translation">有的时候，你也可能需要实现这样一种逻辑：你的中间件产生了一个响应，但你认为这个响应优先级较低，希望等后续中间件执行完毕后，如果信号仍然未被截取，就执行之前的响应。</target>
      </trans-unit>
      <trans-unit id="51714">
        <source>这当然可以通过注册新的中间件并取消的方法来实现，但是由于这个新注册的中间件可能不被执行，你需要手动处理许多的边界情况。</source>
        <target state="needs-translation">这当然可以通过注册新的中间件并取消的方法来实现，但是由于这个新注册的中间件可能不被执行，你需要手动处理许多的边界情况。</target>
      </trans-unit>
      <trans-unit id="51716">
        <source>为了应对这种问题 Koishi 提供了更加方便的写法：你只需要在调用 `next` 时再次传入一个回调函数即可！</source>
        <target state="needs-translation">为了应对这种问题 Koishi 提供了更加方便的写法：你只需要在调用 `next` 时再次传入一个回调函数即可！</target>
      </trans-unit>
      <trans-unit id="51718">
        <source>这个回调函数只接受一个 `next` 参数，且只会加入当前的中间件执行队列；无论这个回调函数执行与否，在本次中间件解析完成后，它都会被清除。</source>
        <target state="needs-translation">这个回调函数只接受一个 `next` 参数，且只会加入当前的中间件执行队列；无论这个回调函数执行与否，在本次中间件解析完成后，它都会被清除。</target>
      </trans-unit>
      <trans-unit id="51720">
        <source>下面是一个例子：</source>
        <target state="needs-translation">下面是一个例子：</target>
      </trans-unit>
      <trans-unit id="51722">
        <source>ctx.middleware((session, next) =&gt; {
  if (session.content === 'hlep') {
    // 如果该 session 没有被截获，则这里的回调函数将会被执行
    return next('你想说的是 help 吗？')
  } else {
    return next()
  }
})</source>
        <target state="needs-translation">ctx.middleware((session, next) =&gt; {
  if (session.content === 'hlep') {
    // 如果该 session 没有被截获，则这里的回调函数将会被执行
    return next('你想说的是 help 吗？')
  } else {
    return next()
  }
})</target>
      </trans-unit>
      <trans-unit id="51724">
        <source>除此以外，临时中间件还有下面的用途。</source>
        <target state="needs-translation">除此以外，临时中间件还有下面的用途。</target>
      </trans-unit>
      <trans-unit id="51726">
        <source>让我们先回到上面介绍的前置中间件。</source>
        <target state="needs-translation">让我们先回到上面介绍的前置中间件。</target>
      </trans-unit>
      <trans-unit id="51728">
        <source>它虽然能够成功解决问题，但是如果有两个插件都注册了类似的前置中间件，就仍然可能发生一个前置中间件截获了消息，导致另一个前置中间件获取不到消息的情况发生。</source>
        <target state="needs-translation">它虽然能够成功解决问题，但是如果有两个插件都注册了类似的前置中间件，就仍然可能发生一个前置中间件截获了消息，导致另一个前置中间件获取不到消息的情况发生。</target>
      </trans-unit>
      <trans-unit id="51730">
        <source>但是，借助临时中间件，我们便有了更好的解决方案：</source>
        <target state="needs-translation">但是，借助临时中间件，我们便有了更好的解决方案：</target>
      </trans-unit>
      <trans-unit id="51732">
        <source>let times = 0 // 复读次数
let message = '' // 当前消息

ctx.middleware((session, next) =&gt; {
  if (session.content === message) {
    times += 1
    if (times === 3) return next(message)
  } else {
    times = 0
    message = session.content
    return next()
  }
}, true)</source>
        <target state="needs-translation">let times = 0 // 复读次数
let message = '' // 当前消息

ctx.middleware((session, next) =&gt; {
  if (session.content === message) {
    times += 1
    if (times === 3) return next(message)
  } else {
    times = 0
    message = session.content
    return next()
  }
}, true)</target>
      </trans-unit>
      <trans-unit id="51734">
        <source>搭配使用上面几种中间件，你的机器人便拥有了无限可能。</source>
        <target state="needs-translation">搭配使用上面几种中间件，你的机器人便拥有了无限可能。</target>
      </trans-unit>
      <trans-unit id="51736">
        <source>在 koishi-plugin-repeater 库中，就有着一个官方实现的复读功能，它远比上面的示例所显示的更加强大。</source>
        <target state="needs-translation">在 koishi-plugin-repeater 库中，就有着一个官方实现的复读功能，它远比上面的示例所显示的更加强大。</target>
      </trans-unit>
      <trans-unit id="51738">
        <source>如果想深入了解中间件机制，可以去研究一下这个功能的 [源代码](https://github.com/koishijs/koishi-plugin-repeater/blob/main/src/index.ts)。</source>
        <target state="needs-translation">如果想深入了解中间件机制，可以去研究一下这个功能的 [源代码](https://github.com/koishijs/koishi-plugin-repeater/blob/main/src/index.ts)。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1548" original="/[koishijs.docs] main/zh-CN/guide/console/client.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="51740">
        <source>客户端开发</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">客戶端開發</target>
      </trans-unit>
      <trans-unit id="51742">
        <source>布局组件</source>
        <target state="needs-translation">布局组件</target>
      </trans-unit>
      <trans-unit id="51744">
        <source>为了方便控制台开发，Koishi 也提供了一些组件。</source>
        <target state="needs-translation">为了方便控制台开发，Koishi 也提供了一些组件。</target>
      </trans-unit>
      <trans-unit id="51746">
        <source>其中的一部分你已经在前面的两节中见过了。</source>
        <target state="needs-translation">其中的一部分你已经在前面的两节中见过了。</target>
      </trans-unit>
      <trans-unit id="51748">
        <source>[`&lt;k-layout&gt;`](../../api/console/component.md#k-layout) 创建了一个新的页面布局。</source>
        <target state="needs-translation">[`&lt;k-layout&gt;`](../../api/console/component.md#k-layout) 创建了一个新的页面布局。</target>
      </trans-unit>
      <trans-unit id="51750">
        <source>你扩展任何页面都需要用到它。</source>
        <target state="needs-translation">你扩展任何页面都需要用到它。</target>
      </trans-unit>
      <trans-unit id="51752">
        <source>这个组件有一些插槽：</source>
        <target state="needs-translation">这个组件有一些插槽：</target>
      </trans-unit>
      <trans-unit id="51754">
        <source>`header`：标题栏的内容</source>
        <target state="needs-translation">`header`：标题栏的内容</target>
      </trans-unit>
      <trans-unit id="51756">
        <source>`left`：左侧栏的内容</source>
        <target state="needs-translation">`left`：左侧栏的内容</target>
      </trans-unit>
      <trans-unit id="51758">
        <source>`default`：页面主体的内容</source>
        <target state="needs-translation">`default`：页面主体的内容</target>
      </trans-unit>
      <trans-unit id="51760">
        <source>除了添加新页面外，窗口底部的状态栏也可以扩展：</source>
        <target state="needs-translation">除了添加新页面外，窗口底部的状态栏也可以扩展：</target>
      </trans-unit>
      <trans-unit id="51762">
        <source>import Status from './status.vue'

ctx.slot({
  type: 'status-left',
  component: Status,
})</source>
        <target state="needs-translation">import Status from './status.vue'

ctx.slot({
  type: 'status-left',
  component: Status,
})</target>
      </trans-unit>
      <trans-unit id="51764">
        <source>&lt;template&gt;
  &lt;k-status&gt;
    这段文字将会显示在状态栏中。
  &lt;/k-status&gt;
&lt;/template&gt;</source>
        <target state="needs-translation">&lt;template&gt;
  &lt;k-status&gt;
    这段文字将会显示在状态栏中。
  &lt;/k-status&gt;
&lt;/template&gt;</target>
      </trans-unit>
      <trans-unit id="51766">
        <source>在上面的例子中，[`&lt;k-status&gt;`](../../api/console/component.md#k-status) 创建了一个状态栏元素。</source>
        <target state="needs-translation">在上面的例子中，[`&lt;k-status&gt;`](../../api/console/component.md#k-status) 创建了一个状态栏元素。</target>
      </trans-unit>
      <trans-unit id="51768">
        <source>你甚至还可以直接添加页面元素，例如 [live2d](https://github.com/koishijs/koishi-plugin-live2d) 插件就为控制台添加了一个 live2d 的看板娘：</source>
        <target state="needs-translation">你甚至还可以直接添加页面元素，例如 [live2d](https://github.com/koishijs/koishi-plugin-live2d) 插件就为控制台添加了一个 live2d 的看板娘：</target>
      </trans-unit>
      <trans-unit id="51770">
        <source>import Live2D from './live2d.vue'

ctx.slot({
  type: 'global',
  component: Live2D,
})</source>
        <target state="needs-translation">import Live2D from './live2d.vue'

ctx.slot({
  type: 'global',
  component: Live2D,
})</target>
      </trans-unit>
      <trans-unit id="51772">
        <source>使用插槽</source>
        <target state="needs-translation">使用插槽</target>
      </trans-unit>
      <trans-unit id="51774">
        <source>你应该已经注意到了，在上面的两个例子中，我们都使用了 [`ctx.slot()`](../../api/console/context.md#ctx-slot) 来扩展某些元素。</source>
        <target state="needs-translation">你应该已经注意到了，在上面的两个例子中，我们都使用了 [`ctx.slot()`](../../api/console/context.md#ctx-slot) 来扩展某些元素。</target>
      </trans-unit>
      <trans-unit id="51776">
        <source>这个方法的作用是向控制台的某个区域中注入 Vue 组件。</source>
        <target state="needs-translation">这个方法的作用是向控制台的某个区域中注入 Vue 组件。</target>
      </trans-unit>
      <trans-unit id="51778">
        <source>而上面的 `status-left` 和 `global` 则是两个插槽的名称，分别对应了状态栏左侧区域和整个页面区域。</source>
        <target state="needs-translation">而上面的 `status-left` 和 `global` 则是两个插槽的名称，分别对应了状态栏左侧区域和整个页面区域。</target>
      </trans-unit>
      <trans-unit id="51780">
        <source>这种注入方式不仅可以作用于控制台本身，也可以作用于其他控制台扩展。</source>
        <target state="needs-translation">这种注入方式不仅可以作用于控制台本身，也可以作用于其他控制台扩展。</target>
      </trans-unit>
      <trans-unit id="51782">
        <source>例如，当你开发了一个控制台页面，并希望其他插件可以在你的页面中注入一些内容时，你可以这样做：</source>
        <target state="needs-translation">例如，当你开发了一个控制台页面，并希望其他插件可以在你的页面中注入一些内容时，你可以这样做：</target>
      </trans-unit>
      <trans-unit id="51784">
        <source>&lt;template&gt;
  &lt;k-layout&gt;
    &lt;p&gt;这里是一些文字&lt;/p&gt;
    &lt;k-slot name=&quot;custom&quot; /&gt;
    &lt;p&gt;这里是一些文字&lt;/p&gt;
  &lt;/k-layout&gt;
&lt;/template&gt;</source>
        <target state="needs-translation">&lt;template&gt;
  &lt;k-layout&gt;
    &lt;p&gt;这里是一些文字&lt;/p&gt;
    &lt;k-slot name=&quot;custom&quot; /&gt;
    &lt;p&gt;这里是一些文字&lt;/p&gt;
  &lt;/k-layout&gt;
&lt;/template&gt;</target>
      </trans-unit>
      <trans-unit id="51786">
        <source>这样一来，其他控制台插件就可以通过 `ctx.slot()` 来向你的页面中注入内容了。</source>
        <target state="needs-translation">这样一来，其他控制台插件就可以通过 `ctx.slot()` 来向你的页面中注入内容了。</target>
      </trans-unit>
      <trans-unit id="51788">
        <source>一个插槽可以同时被注入多次。</source>
        <target state="needs-translation">一个插槽可以同时被注入多次。</target>
      </trans-unit>
      <trans-unit id="51790">
        <source>你可以为每次插槽注入指定优先级和显示条件：</source>
        <target state="needs-translation">你可以为每次插槽注入指定优先级和显示条件：</target>
      </trans-unit>
      <trans-unit id="51792">
        <source>ctx.slot({
  type: 'custom',
  component: Foo,
  order: 100,
})

ctx.slot({
  type: 'custom',
  component: Bar,
  order: 200,
  disabled: () =&gt; !store.bar,
})</source>
        <target state="needs-translation">ctx.slot({
  type: 'custom',
  component: Foo,
  order: 100,
})

ctx.slot({
  type: 'custom',
  component: Bar,
  order: 200,
  disabled: () =&gt; !store.bar,
})</target>
      </trans-unit>
      <trans-unit id="51794">
        <source>`order` 更高的插槽会被优先显示；`disabled` 函数返回 `true` 时，插槽不会被显示。</source>
        <target state="needs-translation">`order` 更高的插槽会被优先显示；`disabled` 函数返回 `true` 时，插槽不会被显示。</target>
      </trans-unit>
      <trans-unit id="51796">
        <source>因此在上面的例子中，`Bar` 组件总是显示在 `Foo` 组件的前面，但只有当 `store.bar` 存在时才会显示。</source>
        <target state="needs-translation">因此在上面的例子中，`Bar` 组件总是显示在 `Foo` 组件的前面，但只有当 `store.bar` 存在时才会显示。</target>
      </trans-unit>
      <trans-unit id="51798">
        <source>用户设置 &lt;badge type=&quot;warning&quot;&gt;实验性&lt;/badge&gt;</source>
        <target state="needs-translation">用户设置 &lt;badge type=&quot;warning&quot;&gt;实验性&lt;/badge&gt;</target>
      </trans-unit>
      <trans-unit id="51800">
        <source>到此为止，我们所了解的插件配置都是 [直接在插件中声明](../plugin/schema.md)、[存储于配置文件中](../develop/config.md) 的。</source>
        <target state="needs-translation">到此为止，我们所了解的插件配置都是 [直接在插件中声明](../plugin/schema.md)、[存储于配置文件中](../develop/config.md) 的。</target>
      </trans-unit>
      <trans-unit id="51802">
        <source>这在绝大多数情况下都是合理的——机器人管理员决定了插件的具体行为，而这些行为也不应该由用户决定。</source>
        <target state="needs-translation">这在绝大多数情况下都是合理的——机器人管理员决定了插件的具体行为，而这些行为也不应该由用户决定。</target>
      </trans-unit>
      <trans-unit id="51804">
        <source>但实际上还有另一种情况：插件的某些行为可以由用户自由决定。</source>
        <target state="needs-translation">但实际上还有另一种情况：插件的某些行为可以由用户自由决定。</target>
      </trans-unit>
      <trans-unit id="51806">
        <source>例如机器人所使用的语言、控制台的主题等等。</source>
        <target state="needs-translation">例如机器人所使用的语言、控制台的主题等等。</target>
      </trans-unit>
      <trans-unit id="51808">
        <source>我们将这些配置统称为「用户设置」。</source>
        <target state="needs-translation">我们将这些配置统称为「用户设置」。</target>
      </trans-unit>
      <trans-unit id="51810">
        <source>在控制台中，插件配置和用户配置是分离的。</source>
        <target state="needs-translation">在控制台中，插件配置和用户配置是分离的。</target>
      </trans-unit>
      <trans-unit id="51812">
        <source>插件配置只有机器人的管理员有权查看和修改，而每个用户都可以查看和修改自己的用户配置。</source>
        <target state="needs-translation">插件配置只有机器人的管理员有权查看和修改，而每个用户都可以查看和修改自己的用户配置。</target>
      </trans-unit>
      <trans-unit id="51814">
        <source>插件开发者也应当妥善区分这两种配置，以提高插件的可定制性。</source>
        <target state="needs-translation">插件开发者也应当妥善区分这两种配置，以提高插件的可定制性。</target>
      </trans-unit>
      <trans-unit id="51816">
        <source>使用 [`ctx.settings()`](../../api/console/context.md#ctx-settings) 可以在用户设置界面中添加配置表单：</source>
        <target state="needs-translation">使用 [`ctx.settings()`](../../api/console/context.md#ctx-settings) 可以在用户设置界面中添加配置表单：</target>
      </trans-unit>
      <trans-unit id="65166">
        <source>ctx.settings({
  id: 'appearance',
  schema: Schema.object({
    wallpaper: Schema.object({
      image: Schema.string().description('要使用的背景图片。'),
      opacity: Schema.number().description('前景的不透明度。'),
    }).description('壁纸设置'),
  }),
})</source>
        <target state="needs-translation">ctx.settings({
  id: 'appearance',
  schema: Schema.object({
    wallpaper: Schema.object({
      image: Schema.string().description('要使用的背景图片。'),
      opacity: Schema.number().description('前景的不透明度。'),
    }).description('壁纸设置'),
  }),
})</target>
      </trans-unit>
      <trans-unit id="51820">
        <source>使用 `useConfig()` 可以在控制台中读取用户设置：</source>
        <target state="needs-translation">使用 `useConfig()` 可以在控制台中读取用户设置：</target>
      </trans-unit>
      <trans-unit id="51822">
        <source>const config = useConfig()
config.value.wallpaper.image</source>
        <target state="needs-translation">const config = useConfig()
config.value.wallpaper.image</target>
      </trans-unit>
      <trans-unit id="51824">
        <source>动作与菜单 &lt;badge type=&quot;warning&quot;&gt;实验性&lt;/badge&gt;</source>
        <target state="needs-translation">动作与菜单 &lt;badge type=&quot;warning&quot;&gt;实验性&lt;/badge&gt;</target>
      </trans-unit>
      <trans-unit id="51826">
        <source>控制台的许多地方都会用到菜单，其中大家最熟悉的便是每个页面标题栏右侧的菜单按钮。</source>
        <target state="needs-translation">控制台的许多地方都会用到菜单，其中大家最熟悉的便是每个页面标题栏右侧的菜单按钮。</target>
      </trans-unit>
      <trans-unit id="51828">
        <source>除此以外，部分页面还提供了上下文菜单。</source>
        <target state="needs-translation">除此以外，部分页面还提供了上下文菜单。</target>
      </trans-unit>
      <trans-unit id="51830">
        <source>想要定义菜单，我们首先需要了解 **动作 (Action)** 这一概念。</source>
        <target state="needs-translation">想要定义菜单，我们首先需要了解 **动作 (Action)** 这一概念。</target>
      </trans-unit>
      <trans-unit id="51832">
        <source>控制台中可以执行的任何一个操作都可以视为一个动作。</source>
        <target state="needs-translation">控制台中可以执行的任何一个操作都可以视为一个动作。</target>
      </trans-unit>
      <trans-unit id="51834">
        <source>每个动作都有着唯一的标识符，例如 `explorer.save` 表示保存当前文件、`explorer.refresh` 表示刷新文件列表等等。</source>
        <target state="needs-translation">每个动作都有着唯一的标识符，例如 `explorer.save` 表示保存当前文件、`explorer.refresh` 表示刷新文件列表等等。</target>
      </trans-unit>
      <trans-unit id="51836">
        <source>已知动作标识符的情况下，可以通过 [`ctx.menu()`](../../api/console/context.md#ctx-menu) 来描述一个菜单，并在 `&lt;k-layout&gt;` 中引用它：</source>
        <target state="needs-translation">已知动作标识符的情况下，可以通过 [`ctx.menu()`](../../api/console/context.md#ctx-menu) 来描述一个菜单，并在 `&lt;k-layout&gt;` 中引用它：</target>
      </trans-unit>
      <trans-unit id="51838">
        <source>ctx.menu('explorer', [{
  id: '.save',
  icon: 'save',
  label: '保存',
}, {
  id: '.refresh',
  icon: 'refresh',
  label: '刷新',
}])</source>
        <target state="needs-translation">ctx.menu('explorer', [{
  id: '.save',
  icon: 'save',
  label: '保存',
}, {
  id: '.refresh',
  icon: 'refresh',
  label: '刷新',
}])</target>
      </trans-unit>
      <trans-unit id="51840">
        <source>&lt;template&gt;
  &lt;!-- 在页面中指定菜单 --&gt;
  &lt;k-layout menu=&quot;explorer&quot;&gt;
    页面内容
  &lt;/k-layout&gt;
&lt;/template&gt;</source>
        <target state="needs-translation">&lt;template&gt;
  &lt;!-- 在页面中指定菜单 --&gt;
  &lt;k-layout menu=&quot;explorer&quot;&gt;
    页面内容
  &lt;/k-layout&gt;
&lt;/template&gt;</target>
      </trans-unit>
      <trans-unit id="51842">
        <source>当然，光有菜单还不够，我们还需要实现上面的动作。</source>
        <target state="needs-translation">当然，光有菜单还不够，我们还需要实现上面的动作。</target>
      </trans-unit>
      <trans-unit id="51844">
        <source>这可以通过 [`ctx.action()`](../../api/console/context.md#ctx-action) 来完成：</source>
        <target state="needs-translation">这可以通过 [`ctx.action()`](../../api/console/context.md#ctx-action) 来完成：</target>
      </trans-unit>
      <trans-unit id="51846">
        <source>&lt;script lang=&quot;ts&quot; setup&gt;
import { send, useContext } from '@koishijs/client'

const ctx = useContext()

// 实现菜单动作
ctx.action('explorer.save', {
  disabled: () =&gt; content === oldContent,
  action: () =&gt; send('explorer/write', filename, content),
})
&lt;/script&gt;</source>
        <target state="needs-translation">&lt;script lang=&quot;ts&quot; setup&gt;
import { send, useContext } from '@koishijs/client'

const ctx = useContext()

// 实现菜单动作
ctx.action('explorer.save', {
  disabled: () =&gt; content === oldContent,
  action: () =&gt; send('explorer/write', filename, content),
})
&lt;/script&gt;</target>
      </trans-unit>
      <trans-unit id="51848">
        <source>如果要实现上下文菜单，同样需要首先在入口文件中描述菜单项：</source>
        <target state="needs-translation">如果要实现上下文菜单，同样需要首先在入口文件中描述菜单项：</target>
      </trans-unit>
      <trans-unit id="51850">
        <source>ctx.menu('entry', [{
  id: '.rename',
  label: '重命名',
}, {
  id: '.remove',
  label: '删除',
}])</source>
        <target state="needs-translation">ctx.menu('entry', [{
  id: '.rename',
  label: '重命名',
}, {
  id: '.remove',
  label: '删除',
}])</target>
      </trans-unit>
      <trans-unit id="51852">
        <source>然后在组件中使用 [`useMenu()`](../../api/console/composition.md#usemenu) 来获取菜单项的点击事件：</source>
        <target state="needs-translation">然后在组件中使用 [`useMenu()`](../../api/console/composition.md#usemenu) 来获取菜单项的点击事件：</target>
      </trans-unit>
      <trans-unit id="51854">
        <source>&lt;template&gt;
  &lt;!-- 这里显示了文件列表 --&gt;
  &lt;div v-for=&quot;entry in entries&quot;&gt;
    &lt;!-- 右击任意文件名会呼出上述菜单 --&gt;
    &lt;div @contextmenu.stop=&quot;trigger($event, entry)&quot;&gt;{{ entry.filename }}&lt;/div&gt;
  &lt;/div&gt;
&lt;/template&gt;

&lt;script lang=&quot;ts&quot; setup&gt;
import { useContext, useMenu } from '@koishijs/client'

const ctx = useContext()
const trigger = useMenu('entry')

// 实现菜单动作
ctx.action('entry.remove', {
  action: ({ entry }) =&gt; send('explorer/remove', entry.filename),
})
&lt;/script&gt;</source>
        <target state="needs-translation">&lt;template&gt;
  &lt;!-- 这里显示了文件列表 --&gt;
  &lt;div v-for=&quot;entry in entries&quot;&gt;
    &lt;!-- 右击任意文件名会呼出上述菜单 --&gt;
    &lt;div @contextmenu.stop=&quot;trigger($event, entry)&quot;&gt;{{ entry.filename }}&lt;/div&gt;
  &lt;/div&gt;
&lt;/template&gt;

&lt;script lang=&quot;ts&quot; setup&gt;
import { useContext, useMenu } from '@koishijs/client'

const ctx = useContext()
const trigger = useMenu('entry')

// 实现菜单动作
ctx.action('entry.remove', {
  action: ({ entry }) =&gt; send('explorer/remove', entry.filename),
})
&lt;/script&gt;</target>
      </trans-unit>
    </body>
  </file>
  <file id="1550" original="/[koishijs.docs] main/zh-CN/guide/console/data.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="51856">
        <source>数据交互</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">資料互動</target>
      </trans-unit>
      <trans-unit id="51858">
        <source>Koishi 控制台前后端的数据交互基本是通过 WebSocket 实现的。</source>
        <target state="needs-translation">Koishi 控制台前后端的数据交互基本是通过 WebSocket 实现的。</target>
      </trans-unit>
      <trans-unit id="51860">
        <source>为了适应不同的场景，我们提供了多种数据交互的形式。</source>
        <target state="needs-translation">为了适应不同的场景，我们提供了多种数据交互的形式。</target>
      </trans-unit>
      <trans-unit id="51862">
        <source>被动推送</source>
        <target state="needs-translation">被动推送</target>
      </trans-unit>
      <trans-unit id="51864">
        <source>后端代码：</source>
        <target state="needs-translation">后端代码：</target>
      </trans-unit>
      <trans-unit id="51866">
        <source>import { Context } from 'koishi'
import { resolve } from 'path'
import { DataService } from '@koishijs/plugin-console'

declare module '@koishijs/plugin-console' {
  namespace Console {
    interface Services {
      custom: CustomProvider
    }
  }
}

class CustomProvider extends DataService&lt;string[]&gt; {
  constructor(ctx: Context) {
    super(ctx, 'custom')
  }

  async get() {
    return ['Hello', 'World']
  }
}

export const name = 'my-plugin'
export const inject = ['console']

export function apply(ctx: Context) {
  ctx.plugin(CustomProvider)

  ctx.console.addEntry({
    dev: resolve(__dirname, 'client/index.ts'),
    prod: resolve(__dirname, 'dist'),
  })
}</source>
        <target state="needs-translation">import { Context } from 'koishi'
import { resolve } from 'path'
import { DataService } from '@koishijs/plugin-console'

declare module '@koishijs/plugin-console' {
  namespace Console {
    interface Services {
      custom: CustomProvider
    }
  }
}

class CustomProvider extends DataService&lt;string[]&gt; {
  constructor(ctx: Context) {
    super(ctx, 'custom')
  }

  async get() {
    return ['Hello', 'World']
  }
}

export const name = 'my-plugin'
export const inject = ['console']

export function apply(ctx: Context) {
  ctx.plugin(CustomProvider)

  ctx.console.addEntry({
    dev: resolve(__dirname, 'client/index.ts'),
    prod: resolve(__dirname, 'dist'),
  })
}</target>
      </trans-unit>
      <trans-unit id="51868">
        <source>前端代码：</source>
        <target state="needs-translation">前端代码：</target>
      </trans-unit>
      <trans-unit id="51870">
        <source>import { Context } from '@koishijs/client'
import Page from './page.vue'

export default (ctx: Context) =&gt; {
  ctx.page({
    name: '页面标题',
    path: '/custom-page',
    // 只有当获得了 custom 数据，才可以访问页面
    fields: ['custom'],
    component: Page,
  })
}</source>
        <target state="needs-translation">import { Context } from '@koishijs/client'
import Page from './page.vue'

export default (ctx: Context) =&gt; {
  ctx.page({
    name: '页面标题',
    path: '/custom-page',
    // 只有当获得了 custom 数据，才可以访问页面
    fields: ['custom'],
    component: Page,
  })
}</target>
      </trans-unit>
      <trans-unit id="51872">
        <source>&lt;template&gt;
  &lt;!-- 这里应该有类型支持，并且支持数据响应式变化 --&gt;
  &lt;k-card&gt;{{ store.custom }}&lt;/k-card&gt;
&lt;/template&gt;

&lt;script&gt;
import { store } from '@koishijs/client'
&lt;/script&gt;</source>
        <target state="needs-translation">&lt;template&gt;
  &lt;!-- 这里应该有类型支持，并且支持数据响应式变化 --&gt;
  &lt;k-card&gt;{{ store.custom }}&lt;/k-card&gt;
&lt;/template&gt;

&lt;script&gt;
import { store } from '@koishijs/client'
&lt;/script&gt;</target>
      </trans-unit>
      <trans-unit id="51874">
        <source>主动获取</source>
        <target state="needs-translation">主动获取</target>
      </trans-unit>
      <trans-unit id="51876">
        <source>后端代码：</source>
        <target state="needs-translation">后端代码：</target>
      </trans-unit>
      <trans-unit id="51878">
        <source>import { Context } from 'koishi'
import { resolve } from 'path'
import { DataService } from '@koishijs/plugin-console'

declare module '@koishijs/plugin-console' {
  interface Events {
    'get-greeting'(): string[]
  }
}

export const name = 'my-plugin'
export const inject = ['console']

export function apply(ctx: Context) {
  ctx.console.addListener('get-greeting', () =&gt; {
    return ['Hello', 'World']
  })

  ctx.console.addEntry({
    dev: resolve(__dirname, 'client/index.ts'),
    prod: resolve(__dirname, 'dist'),
  })
}</source>
        <target state="needs-translation">import { Context } from 'koishi'
import { resolve } from 'path'
import { DataService } from '@koishijs/plugin-console'

declare module '@koishijs/plugin-console' {
  interface Events {
    'get-greeting'(): string[]
  }
}

export const name = 'my-plugin'
export const inject = ['console']

export function apply(ctx: Context) {
  ctx.console.addListener('get-greeting', () =&gt; {
    return ['Hello', 'World']
  })

  ctx.console.addEntry({
    dev: resolve(__dirname, 'client/index.ts'),
    prod: resolve(__dirname, 'dist'),
  })
}</target>
      </trans-unit>
      <trans-unit id="51880">
        <source>&lt;template&gt;
  &lt;k-card&gt;{{ greeting }}&lt;/k-card&gt;
&lt;/template&gt;

&lt;script&gt;
import { send } from '@koishijs/client'
import { ref } from 'vue'

const greeting = ref&lt;string[]&gt;()

send('get-greeting').then(data =&gt; {
  greeting.value = data
})
&lt;/script&gt;</source>
        <target state="needs-translation">&lt;template&gt;
  &lt;k-card&gt;{{ greeting }}&lt;/k-card&gt;
&lt;/template&gt;

&lt;script&gt;
import { send } from '@koishijs/client'
import { ref } from 'vue'

const greeting = ref&lt;string[]&gt;()

send('get-greeting').then(data =&gt; {
  greeting.value = data
})
&lt;/script&gt;</target>
      </trans-unit>
      <trans-unit id="51882">
        <source>权限管理</source>
        <target state="translated">權限管理</target>
      </trans-unit>
      <trans-unit id="51884">
        <source>当你引入了 @koishijs/plugin-auth 插件之后，你可以为你的页面访问和数据交互引入鉴权机制：</source>
        <target state="needs-translation">当你引入了 @koishijs/plugin-auth 插件之后，你可以为你的页面访问和数据交互引入鉴权机制：</target>
      </trans-unit>
      <trans-unit id="51886">
        <source>// 只有已登录并且权限等级不低于 3 的用户才能访问此接口
ctx.console.addListener('get-greeting', () =&gt; {
  return ['Hello', 'World']
}, { authority: 3 })</source>
        <target state="needs-translation">// 只有已登录并且权限等级不低于 3 的用户才能访问此接口
ctx.console.addListener('get-greeting', () =&gt; {
  return ['Hello', 'World']
}, { authority: 3 })</target>
      </trans-unit>
      <trans-unit id="51888">
        <source>ctx.page({
  name: '页面标题',
  path: '/custom-page',
  // 只有已登录并且权限等级不低于 3 的用户才能访问此界面
  authority: 3,
  component: Page,
})</source>
        <target state="needs-translation">ctx.page({
  name: '页面标题',
  path: '/custom-page',
  // 只有已登录并且权限等级不低于 3 的用户才能访问此界面
  authority: 3,
  component: Page,
})</target>
      </trans-unit>
    </body>
  </file>
  <file id="1552" original="/[koishijs.docs] main/zh-CN/guide/console/index.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="51890">
        <source>扩展控制台</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">擴充套件控制檯</target>
      </trans-unit>
      <trans-unit id="51892">
        <source>在学习本章之前，建议先完整阅读 [入门 &gt; 认识控制台](../../manual/usage/market.md#认识控制台)。</source>
        <target state="needs-translation">在学习本章之前，建议先完整阅读 [入门 &gt; 认识控制台](../../manual/usage/market.md#认识控制台)。</target>
      </trans-unit>
      <trans-unit id="51894">
        <source>创建扩展</source>
        <target state="needs-translation">创建扩展</target>
      </trans-unit>
      <trans-unit id="51896">
        <source>在插件目录中新建这几个文件：</source>
        <target state="needs-translation">在插件目录中新建这几个文件：</target>
      </trans-unit>
      <trans-unit id="51898">
        <source>└── example
+   ├── client
+   │   ├── index.ts
+   │   ├── page.vue
+   │   └── tsconfig.json
    ├── src
    │   └── index.ts
    ├── package.json
    └── tsconfig.json</source>
        <target state="needs-translation">└── example
+   ├── client
+   │   ├── index.ts
+   │   ├── page.vue
+   │   └── tsconfig.json
    ├── src
    │   └── index.ts
    ├── package.json
    └── tsconfig.json</target>
      </trans-unit>
      <trans-unit id="51900">
        <source>import { Context } from '@koishijs/client'
import Page from './page.vue'

export default (ctx: Context) =&gt; {
  // 此 Context 非彼 Context
  // 我们只是在前端同样实现了一套插件逻辑
  ctx.page({
    name: '页面标题',
    path: '/custom-page',
    component: Page,
  })
}</source>
        <target state="needs-translation">import { Context } from '@koishijs/client'
import Page from './page.vue'

export default (ctx: Context) =&gt; {
  // 此 Context 非彼 Context
  // 我们只是在前端同样实现了一套插件逻辑
  ctx.page({
    name: '页面标题',
    path: '/custom-page',
    component: Page,
  })
}</target>
      </trans-unit>
      <trans-unit id="51902">
        <source>&lt;template&gt;
  &lt;k-layout&gt;
    &lt;k-card&gt;扩展内容&lt;/k-card&gt;
  &lt;/k-layout&gt;
&lt;/template&gt;</source>
        <target state="needs-translation">&lt;template&gt;
  &lt;k-layout&gt;
    &lt;k-card&gt;扩展内容&lt;/k-card&gt;
  &lt;/k-layout&gt;
&lt;/template&gt;</target>
      </trans-unit>
      <trans-unit id="51904">
        <source>{
  &quot;compilerOptions&quot;: {
    &quot;rootDir&quot;: &quot;.&quot;,
    &quot;module&quot;: &quot;esnext&quot;,
    &quot;moduleResolution&quot;: &quot;node&quot;,
    &quot;types&quot;: [
      // 这一行的作用是导入相关全局类型
      // 以便于在编辑器中显示更好的代码提示
      &quot;@koishijs/client/global&quot;,
    ],
  },
  &quot;include&quot;: [&quot;.&quot;],
}</source>
        <target state="needs-translation">{
  &quot;compilerOptions&quot;: {
    &quot;rootDir&quot;: &quot;.&quot;,
    &quot;module&quot;: &quot;esnext&quot;,
    &quot;moduleResolution&quot;: &quot;node&quot;,
    &quot;types&quot;: [
      // 这一行的作用是导入相关全局类型
      // 以便于在编辑器中显示更好的代码提示
      &quot;@koishijs/client/global&quot;,
    ],
  },
  &quot;include&quot;: [&quot;.&quot;],
}</target>
      </trans-unit>
      <trans-unit id="51906">
        <source>然后修改插件的 `package.json`，添加以下依赖：</source>
        <target state="needs-translation">然后修改插件的 `package.json`，添加以下依赖：</target>
      </trans-unit>
      <trans-unit id="51908">
        <source>{
  &quot;peerDependencies&quot;: {
    &quot;@koishijs/plugin-console&quot;: &quot;^5.11.0&quot;
  },
  &quot;devDependencies&quot;: {
    &quot;@koishijs/client&quot;: &quot;^5.11.0&quot;
  }
}</source>
        <target state="needs-translation">{
  &quot;peerDependencies&quot;: {
    &quot;@koishijs/plugin-console&quot;: &quot;^5.11.0&quot;
  },
  &quot;devDependencies&quot;: {
    &quot;@koishijs/client&quot;: &quot;^5.11.0&quot;
  }
}</target>
      </trans-unit>
      <trans-unit id="51910">
        <source>接着修改你的入口文件：</source>
        <target state="needs-translation">接着修改你的入口文件：</target>
      </trans-unit>
      <trans-unit id="51912">
        <source>import { Context } from 'koishi'
// 此处需要导入 @koishijs/plugin-console 以获取类型
import {} from '@koishijs/plugin-console'
import { resolve } from 'path'

export const name = 'my-plugin'

export function apply(ctx: Context) {
  // 在已有插件逻辑的基础上，添加下面这段
  ctx.inject(['console'], (ctx) =&gt; {
    ctx.console.addEntry({
      dev: resolve(__dirname, '../client/index.ts'),
      prod: resolve(__dirname, '../dist'),
    })
  })
}</source>
        <target state="needs-translation">import { Context } from 'koishi'
// 此处需要导入 @koishijs/plugin-console 以获取类型
import {} from '@koishijs/plugin-console'
import { resolve } from 'path'

export const name = 'my-plugin'

export function apply(ctx: Context) {
  // 在已有插件逻辑的基础上，添加下面这段
  ctx.inject(['console'], (ctx) =&gt; {
    ctx.console.addEntry({
      dev: resolve(__dirname, '../client/index.ts'),
      prod: resolve(__dirname, '../dist'),
    })
  })
}</target>
      </trans-unit>
      <trans-unit id="51914">
        <source>启动应用，并在控制台中配置你的插件。</source>
        <target state="needs-translation">启动应用，并在控制台中配置你的插件。</target>
      </trans-unit>
      <trans-unit id="51916">
        <source>现在你已经可以在网页中看到并调试自己刚刚创建的页面了。</source>
        <target state="needs-translation">现在你已经可以在网页中看到并调试自己刚刚创建的页面了。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1554" original="/[koishijs.docs] main/zh-CN/guide/console/theme.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="51918">
        <source>主题开发 &lt;badge type=&quot;warning&quot;&gt;实验性&lt;/badge&gt;</source>
        <target state="needs-translation">主题开发 &lt;badge type=&quot;warning&quot;&gt;实验性&lt;/badge&gt;</target>
      </trans-unit>
      <trans-unit id="51920">
        <source>Koishi 也允许插件定义控制台主题。</source>
        <target state="needs-translation">Koishi 也允许插件定义控制台主题。</target>
      </trans-unit>
      <trans-unit id="51922">
        <source>让我们先从简单的色彩主题开始。</source>
        <target state="needs-translation">让我们先从简单的色彩主题开始。</target>
      </trans-unit>
      <trans-unit id="51924">
        <source>色彩主题</source>
        <target state="needs-translation">色彩主题</target>
      </trans-unit>
      <trans-unit id="51926">
        <source>[theme-vanilla](https://github.com/koishijs/koishi-plugin-theme-vanilla) 插件提供了许多色彩主题，你可以参考它的源码来开发自己的主题：</source>
        <target state="needs-translation">[theme-vanilla](https://github.com/koishijs/koishi-plugin-theme-vanilla) 插件提供了许多色彩主题，你可以参考它的源码来开发自己的主题：</target>
      </trans-unit>
      <trans-unit id="51928">
        <source>// 引入定义主题色的 CSS 文件
import './index.scss'

ctx.theme({
  id: 'coffee-dark',
  name: 'Coffee Dark',
})

ctx.theme({
  id: 'coffee-light',
  name: 'Coffee Light',
})</source>
        <target state="needs-translation">// 引入定义主题色的 CSS 文件
import './index.scss'

ctx.theme({
  id: 'coffee-dark',
  name: 'Coffee Dark',
})

ctx.theme({
  id: 'coffee-light',
  name: 'Coffee Light',
})</target>
      </trans-unit>
      <trans-unit id="51930">
        <source>如你所见，要定义一个色彩主题非常简单，只需要调用 [`ctx.theme()`](../../api/console/context.md#ctx-theme) 即可。</source>
        <target state="needs-translation">如你所见，要定义一个色彩主题非常简单，只需要调用 [`ctx.theme()`](../../api/console/context.md#ctx-theme) 即可。</target>
      </trans-unit>
      <trans-unit id="51932">
        <source>其中，`id` 用于标识主题，`name` 则会显示在主题选择器中。</source>
        <target state="needs-translation">其中，`id` 用于标识主题，`name` 则会显示在主题选择器中。</target>
      </trans-unit>
      <trans-unit id="51934">
        <source>请注意：`id` 必须以 `-dark` 或 `-light` 结尾，否则 Koishi 将无法正确回退 CSS 变量！</source>
        <target state="needs-translation">请注意：`id` 必须以 `-dark` 或 `-light` 结尾，否则 Koishi 将无法正确回退 CSS 变量！</target>
      </trans-unit>
      <trans-unit id="51936">
        <source>接下来让我们看看 `index.scss` 的内容：</source>
        <target state="needs-translation">接下来让我们看看 `index.scss` 的内容：</target>
      </trans-unit>
      <trans-unit id="51938">
        <source>:root, .theme-root {
  &amp;[theme=coffee-dark] {
    --bg1: #231F1E;
    --bg2: #262120;
    --bg3: #292423;
    --bg4: #342A27;
  }

  &amp;[theme=coffee-light] {
    --bg1: #EEE9E7;
    --bg2: #EAE4E1;
    --bg3: #E6DFDC;
    --bg4: #E3DBD6;
  }
}</source>
        <target state="needs-translation">:root, .theme-root {
  &amp;[theme=coffee-dark] {
    --bg1: #231F1E;
    --bg2: #262120;
    --bg3: #292423;
    --bg4: #342A27;
  }

  &amp;[theme=coffee-light] {
    --bg1: #EEE9E7;
    --bg2: #EAE4E1;
    --bg3: #E6DFDC;
    --bg4: #E3DBD6;
  }
}</target>
      </trans-unit>
      <trans-unit id="51940">
        <source>Koishi 为主题系统预定义了许多 CSS 变量。</source>
        <target state="needs-translation">Koishi 为主题系统预定义了许多 CSS 变量。</target>
      </trans-unit>
      <trans-unit id="51942">
        <source>只需要在属性选择器中修改这些变量的值，一个色彩主题就大功告成了。</source>
        <target state="needs-translation">只需要在属性选择器中修改这些变量的值，一个色彩主题就大功告成了。</target>
      </trans-unit>
      <trans-unit id="51944">
        <source>改变布局</source>
        <target state="needs-translation">改变布局</target>
      </trans-unit>
      <trans-unit id="51946">
        <source>Koishi 同样允许主题改变控制台的布局：</source>
        <target state="needs-translation">Koishi 同样允许主题改变控制台的布局：</target>
      </trans-unit>
      <trans-unit id="51948">
        <source>import root from './root.vue'
import layout from './layout.vue'

ctx.theme({
  id: 'windows-light',
  name: 'Windows Light',
  components: { root, layout },
})</source>
        <target state="needs-translation">import root from './root.vue'
import layout from './layout.vue'

ctx.theme({
  id: 'windows-light',
  name: 'Windows Light',
  components: { root, layout },
})</target>
      </trans-unit>
      <trans-unit id="51950">
        <source>在上面的例子中，[`ctx.theme()`](../../api/console/context.md#ctx-theme) 接受一个额外的 `components` 选项，用于覆盖默认的布局组件。</source>
        <target state="needs-translation">在上面的例子中，[`ctx.theme()`](../../api/console/context.md#ctx-theme) 接受一个额外的 `components` 选项，用于覆盖默认的布局组件。</target>
      </trans-unit>
      <trans-unit id="51952">
        <source>其中，`root` 用于定制整个控制台的布局，`layout` 用于定制 `&lt;k-layout&gt;` 的实现。</source>
        <target state="needs-translation">其中，`root` 用于定制整个控制台的布局，`layout` 用于定制 `&lt;k-layout&gt;` 的实现。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1556" original="/[koishijs.docs] main/zh-CN/guide/database/builtin.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="51954">
        <source>内置数据结构</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">內建資料結構</target>
      </trans-unit>
      <trans-unit id="51956">
        <source>通常来说，中间件、插件的设计可以让机器人的开发变得更加模块化，但是缺乏统一的数据流管理也带来了额外的问题。</source>
        <target state="needs-translation">通常来说，中间件、插件的设计可以让机器人的开发变得更加模块化，但是缺乏统一的数据流管理也带来了额外的问题。</target>
      </trans-unit>
      <trans-unit id="51958">
        <source>如果每个中间件分别从数据库中读取和更新自己所需的字段，那会造成大量重复的请求，导致严重的资源浪费；将所有可能请求的数据都在中间件的一开始就请求完成，也并不会解决问题，因为一条信息的解读可能只需要少数几个字段，而大部分都是不需要的；更严重的是，后一种做法将导致资源单次请求，多次更新，从而产生种种数据安全性问题。</source>
        <target state="needs-translation">如果每个中间件分别从数据库中读取和更新自己所需的字段，那会造成大量重复的请求，导致严重的资源浪费；将所有可能请求的数据都在中间件的一开始就请求完成，也并不会解决问题，因为一条信息的解读可能只需要少数几个字段，而大部分都是不需要的；更严重的是，后一种做法将导致资源单次请求，多次更新，从而产生种种数据安全性问题。</target>
      </trans-unit>
      <trans-unit id="51960">
        <source>针对这些问题，Koishi 提供了一套完善的数据流管理机制，它能够在保证数据安全的同时，最大化地减少数据库访问次数。</source>
        <target state="needs-translation">针对这些问题，Koishi 提供了一套完善的数据流管理机制，它能够在保证数据安全的同时，最大化地减少数据库访问次数。</target>
      </trans-unit>
      <trans-unit id="51962">
        <source>在这一节中，我们将会介绍这套机制的使用方法。</source>
        <target state="needs-translation">在这一节中，我们将会介绍这套机制的使用方法。</target>
      </trans-unit>
      <trans-unit id="51964">
        <source>观察者对象</source>
        <target state="needs-translation">观察者对象</target>
      </trans-unit>
      <trans-unit id="51966">
        <source>假设我们正在开发一个抽奖插件，每调用一次 lottery 指令，用户会获得一件物品，并存入用户表的 `inventory` 属性中。</source>
        <target state="needs-translation">假设我们正在开发一个抽奖插件，每调用一次 lottery 指令，用户会获得一件物品，并存入用户表的 `inventory` 属性中。</target>
      </trans-unit>
      <trans-unit id="51968">
        <source>下面是这个插件的实现：</source>
        <target state="needs-translation">下面是这个插件的实现：</target>
      </trans-unit>
      <trans-unit id="51970">
        <source>declare function getLottery(): string

// ---cut---
// 定义一个 inventory 字段，用于存放物品列表
declare module 'koishi' {
  interface User {
    inventory: string[]
  }
}

ctx.model.extend('user', {
  inventory: 'list',
})

ctx.command('lottery')
  // 声明所需字段
  .userFields(['inventory'])
  .action(({ session }) =&gt; {
    // 这里假设 inventory 是一个字符串，表示抽到的物品
    const item = getLottery()
    // 将抽到的物品存放到 user.items 中
    session.user.inventory.push(item)
    return `恭喜您获得了 ${item}！`
  })</source>
        <target state="needs-translation">declare function getLottery(): string

// ---cut---
// 定义一个 inventory 字段，用于存放物品列表
declare module 'koishi' {
  interface User {
    inventory: string[]
  }
}

ctx.model.extend('user', {
  inventory: 'list',
})

ctx.command('lottery')
  // 声明所需字段
  .userFields(['inventory'])
  .action(({ session }) =&gt; {
    // 这里假设 inventory 是一个字符串，表示抽到的物品
    const item = getLottery()
    // 将抽到的物品存放到 user.items 中
    session.user.inventory.push(item)
    return `恭喜您获得了 ${item}！`
  })</target>
      </trans-unit>
      <trans-unit id="51972">
        <source>我们都知道，写入数据库是一个异步的操作，而上面的代码看起来完全没有异步操作。</source>
        <target state="needs-translation">我们都知道，写入数据库是一个异步的操作，而上面的代码看起来完全没有异步操作。</target>
      </trans-unit>
      <trans-unit id="51974">
        <source>然而如果你运行这段代码，你会发现用户数据被成功地更新了。</source>
        <target state="needs-translation">然而如果你运行这段代码，你会发现用户数据被成功地更新了。</target>
      </trans-unit>
      <trans-unit id="51976">
        <source>这就归功于观察者机制。</source>
        <target state="needs-translation">这就归功于观察者机制。</target>
      </trans-unit>
      <trans-unit id="51978">
        <source>`session.user` 是一个 **观察者 (Observer)** 对象，它会检测在其上面做的一切更改并缓存下来。</source>
        <target state="needs-translation">`session.user` 是一个 **观察者 (Observer)** 对象，它会检测在其上面做的一切更改并缓存下来。</target>
      </trans-unit>
      <trans-unit id="51980">
        <source>当中间件执行完毕后，Koishi 又会自动将变化的部分进行更新，同时将缓冲区清空。</source>
        <target state="needs-translation">当中间件执行完毕后，Koishi 又会自动将变化的部分进行更新，同时将缓冲区清空。</target>
      </trans-unit>
      <trans-unit id="51982">
        <source>我们因此得以直接在 `session.user` 上进行赋值，而不必手动调用 `ctx.database` 上的方法。</source>
        <target state="needs-translation">我们因此得以直接在 `session.user` 上进行赋值，而不必手动调用 `ctx.database` 上的方法。</target>
      </trans-unit>
      <trans-unit id="51984">
        <source>声明所需字段</source>
        <target state="needs-translation">声明所需字段</target>
      </trans-unit>
      <trans-unit id="51986">
        <source>`cmd.userFields()` 方法用于声明所需的用户字段。</source>
        <target state="needs-translation">`cmd.userFields()` 方法用于声明所需的用户字段。</target>
      </trans-unit>
      <trans-unit id="51988">
        <source>未声明的字段将不会被加载，也无法直接被修改。</source>
        <target state="needs-translation">未声明的字段将不会被加载，也无法直接被修改。</target>
      </trans-unit>
      <trans-unit id="51990">
        <source>这样做的好处是，无论用户表有多少字段，我们都可以只加载所需的字段，从而提高性能。</source>
        <target state="needs-translation">这样做的好处是，无论用户表有多少字段，我们都可以只加载所需的字段，从而提高性能。</target>
      </trans-unit>
      <trans-unit id="51992">
        <source>同理我们也有 `cmd.channelFields()` 方法，功能类似。</source>
        <target state="needs-translation">同理我们也有 `cmd.channelFields()` 方法，功能类似。</target>
      </trans-unit>
      <trans-unit id="51994">
        <source>这两个方法不仅可以接受一个可迭代对象，还可以接受一个回调函数。</source>
        <target state="needs-translation">这两个方法不仅可以接受一个可迭代对象，还可以接受一个回调函数。</target>
      </trans-unit>
      <trans-unit id="51996">
        <source>第一个参数是当前的 `Argv` 对象，第二个参数是 `Set&lt;keyof User&gt;`，可以通过 add / delete 方法来添加或删除字段。</source>
        <target state="needs-translation">第一个参数是当前的 `Argv` 对象，第二个参数是 `Set&lt;keyof User&gt;`，可以通过 add / delete 方法来添加或删除字段。</target>
      </trans-unit>
      <trans-unit id="51998">
        <source>因此上面的代码等价于：</source>
        <target state="needs-translation">因此上面的代码等价于：</target>
      </trans-unit>
      <trans-unit id="52000">
        <source>cmd.userFields((argv, fields) =&gt; {
  fields.add('inventory')
})</source>
        <target state="needs-translation">cmd.userFields((argv, fields) =&gt; {
  fields.add('inventory')
})</target>
      </trans-unit>
      <trans-unit id="52002">
        <source>阻塞式更新</source>
        <target state="needs-translation">阻塞式更新</target>
      </trans-unit>
      <trans-unit id="52004">
        <source>观察者机制不仅可以将多次更新合并成一次以提高程序性能，更能解决数据竞争的问题。</source>
        <target state="needs-translation">观察者机制不仅可以将多次更新合并成一次以提高程序性能，更能解决数据竞争的问题。</target>
      </trans-unit>
      <trans-unit id="52006">
        <source>如果两条消息在临近的时间点被接收到，如果单纯地使用 get / set 进行处理，可能会发生后一次 get 在前一次 set 之前完成，导致本应获得 2 件物品，但实际只获得了 1 件的问题。</source>
        <target state="needs-translation">如果两条消息在临近的时间点被接收到，如果单纯地使用 get / set 进行处理，可能会发生后一次 get 在前一次 set 之前完成，导致本应获得 2 件物品，但实际只获得了 1 件的问题。</target>
      </trans-unit>
      <trans-unit id="52008">
        <source>而观察者会随时同步同源数据，数据安全得以保证。</source>
        <target state="needs-translation">而观察者会随时同步同源数据，数据安全得以保证。</target>
      </trans-unit>
      <trans-unit id="52010">
        <source>当然，如果你确实需要阻塞式地等待数据写入，我们也提供了 `user.$update()` 方法。</source>
        <target state="needs-translation">当然，如果你确实需要阻塞式地等待数据写入，我们也提供了 `user.$update()` 方法。</target>
      </trans-unit>
      <trans-unit id="52012">
        <source>顺便一提，一旦成功执行了观察者的 `$update()` 方法，之前的缓冲区将会被清空，因此之后不会重复更新数据；对于缓冲区为空的观察者，`$update()` 方法也会直接返回，不会产生任何的数据库访问。</source>
        <target state="needs-translation">顺便一提，一旦成功执行了观察者的 `$update()` 方法，之前的缓冲区将会被清空，因此之后不会重复更新数据；对于缓冲区为空的观察者，`$update()` 方法也会直接返回，不会产生任何的数据库访问。</target>
      </trans-unit>
      <trans-unit id="52014">
        <source>这些都是我们优化的几个细节。</source>
        <target state="needs-translation">这些都是我们优化的几个细节。</target>
      </trans-unit>
      <trans-unit id="52016">
        <source>你可以在 [这里](../../api/utils/observer.md) 看到完整的观察者 API。</source>
        <target state="needs-translation">你可以在 [这里](../../api/utils/observer.md) 看到完整的观察者 API。</target>
      </trans-unit>
      <trans-unit id="52018">
        <source>进阶用法</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">進階用法</target>
      </trans-unit>
      <trans-unit id="52020">
        <source>attach 事件</source>
        <target state="needs-translation">attach 事件</target>
      </trans-unit>
      <trans-unit id="52022">
        <source>Koishi 内置了四个与观察者相关的事件，分别是：</source>
        <target state="needs-translation">Koishi 内置了四个与观察者相关的事件，分别是：</target>
      </trans-unit>
      <trans-unit id="52024">
        <source>`before-attach-channel`：在频道观察者被绑定到会话上之前触发</source>
        <target state="needs-translation">`before-attach-channel`：在频道观察者被绑定到会话上之前触发</target>
      </trans-unit>
      <trans-unit id="52026">
        <source>`attach-channel`：在频道观察者被绑定到会话上之后触发</source>
        <target state="needs-translation">`attach-channel`：在频道观察者被绑定到会话上之后触发</target>
      </trans-unit>
      <trans-unit id="52028">
        <source>`before-attach-user`：在用户观察者被绑定到会话上之前触发</source>
        <target state="needs-translation">`before-attach-user`：在用户观察者被绑定到会话上之前触发</target>
      </trans-unit>
      <trans-unit id="52030">
        <source>`attach-user`：在用户观察者被绑定到会话上之后触发</source>
        <target state="needs-translation">`attach-user`：在用户观察者被绑定到会话上之后触发</target>
      </trans-unit>
      <trans-unit id="52032">
        <source>下面是一个例子，我们在用户对象上实现了一个 `msgCount` 字段，用于存放收到的信息数量：</source>
        <target state="needs-translation">下面是一个例子，我们在用户对象上实现了一个 `msgCount` 字段，用于存放收到的信息数量：</target>
      </trans-unit>
      <trans-unit id="52034">
        <source>// 定义一个 msgCount 字段，用于存放收到的信息数量
declare module 'koishi' {
  interface User {
    msgCount: number
  }
}

ctx.model.extend('user', {
  msgCount: 'integer',
})

ctx.before('attach-user', (session, fields) =&gt; {
  fields.add('msgCount')
})

ctx.middleware((session: Session&lt;'msgCount'&gt;, next) =&gt; {
  // 这里更新了 msgCount 数据
  session.user.msgCount++
  return next()
})</source>
        <target state="needs-translation">// 定义一个 msgCount 字段，用于存放收到的信息数量
declare module 'koishi' {
  interface User {
    msgCount: number
  }
}

ctx.model.extend('user', {
  msgCount: 'integer',
})

ctx.before('attach-user', (session, fields) =&gt; {
  fields.add('msgCount')
})

ctx.middleware((session: Session&lt;'msgCount'&gt;, next) =&gt; {
  // 这里更新了 msgCount 数据
  session.user.msgCount++
  return next()
})</target>
      </trans-unit>
      <trans-unit id="52036">
        <source>手动绑定</source>
        <target state="needs-translation">手动绑定</target>
      </trans-unit>
      <trans-unit id="52038">
        <source>如果要绑定的字段无法提前判断，我们也提供了动态补充观察者字段的方法：</source>
        <target state="needs-translation">如果要绑定的字段无法提前判断，我们也提供了动态补充观察者字段的方法：</target>
      </trans-unit>
      <trans-unit id="52040">
        <source>declare const fields: any[]

// ---cut---
// 绑定一个用户观察者，确保 fields 中的字段都被加载
session.observeUser(fields)

// 绑定一个频道观察者，确保 fields 中的字段都被加载
session.observeChannel(fields)</source>
        <target state="needs-translation">declare const fields: any[]

// ---cut---
// 绑定一个用户观察者，确保 fields 中的字段都被加载
session.observeUser(fields)

// 绑定一个频道观察者，确保 fields 中的字段都被加载
session.observeChannel(fields)</target>
      </trans-unit>
    </body>
  </file>
  <file id="1558" original="/[koishijs.docs] main/zh-CN/guide/database/index.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="52042">
        <source>基本用法</source>
        <target state="needs-translation">基本用法</target>
      </trans-unit>
      <trans-unit id="52044">
        <source>`ctx.database` 并非内置服务，因此如果你的插件需要使用数据库功能，需要[声明依赖](../plugin/service.md#inject-属性)。</source>
        <target state="needs-translation">`ctx.database` 并非内置服务，因此如果你的插件需要使用数据库功能，需要[声明依赖](../plugin/service.md#inject-属性)。</target>
      </trans-unit>
      <trans-unit id="52046">
        <source>对于几乎所有大型机器人项目，数据库的使用都是不可或缺的。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">對於幾乎所有大型機器人專案，資料庫的使用都是不可或缺的。</target>
      </trans-unit>
      <trans-unit id="52048">
        <source>但如果每个插件都独立处理与数据库的交互，这将导致插件之间的兼容性非常差——用户要么选择同时安装多个数据库，要么只能放弃一些功能。</source>
        <target state="needs-translation">但如果每个插件都独立处理与数据库的交互，这将导致插件之间的兼容性非常差——用户要么选择同时安装多个数据库，要么只能放弃一些功能。</target>
      </trans-unit>
      <trans-unit id="52050">
        <source>为此，Koishi 设计了一整套对象关系映射 (ORM) 接口，它易于扩展并广泛地运用于各种插件中，足以应对绝大部分使用场景。</source>
        <target state="needs-translation">为此，Koishi 设计了一整套对象关系映射 (ORM) 接口，它易于扩展并广泛地运用于各种插件中，足以应对绝大部分使用场景。</target>
      </trans-unit>
      <trans-unit id="64984">
        <source>本页中涉及的完整 API：</source>
        <target state="needs-translation">本页中涉及的完整 API：</target>
      </trans-unit>
      <trans-unit id="64986">
        <source>[数据库操作](../../api/database/database.md)</source>
        <target state="needs-translation">[数据库操作](../../api/database/database.md)</target>
      </trans-unit>
      <trans-unit id="64988">
        <source>[查询表达式](../../api/database/query.md)</source>
        <target state="needs-translation">[查询表达式](../../api/database/query.md)</target>
      </trans-unit>
      <trans-unit id="64990">
        <source>[求值表达式](../../api/database/evaluation.md)</source>
        <target state="needs-translation">[求值表达式](../../api/database/evaluation.md)</target>
      </trans-unit>
      <trans-unit id="64992">
        <source>`get`：查询数据 {#get}</source>
        <target state="needs-translation">`get`：查询数据 {#get}</target>
      </trans-unit>
      <trans-unit id="52054">
        <source>使用 `database.get()` 方法以获取特定表中的数据。</source>
        <target state="needs-translation">使用 `database.get()` 方法以获取特定表中的数据。</target>
      </trans-unit>
      <trans-unit id="52056">
        <source>下面是一个最基本的形式：</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">下面是一個最基本的形式：</target>
      </trans-unit>
      <trans-unit id="52058">
        <source>// 获取 schedule 表中 id 为 1234 的数据行，返回一个数组
await ctx.database.get('schedule', 1234)

// 获取 schedule 表中 id 为 1234 或 5678 的数据行，返回一个数组
await ctx.database.get('schedule', [1234, 5678])</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">// 獲取 schedule 表中 id 為 1234 的資料行，返回一個陣列
await ctx.database.get('schedule', 1234)

// 獲取 schedule 表中 id 為 1234 或 5678 的資料行，返回一個陣列
await ctx.database.get('schedule', [1234, 5678])</target>
      </trans-unit>
      <trans-unit id="52060">
        <source>对于复杂的数据表，如果你只需要获取少数字段，你可以通过第三个参数手动指定要获取的字段：</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">對於複雜的資料表，如果你只需要獲取少數欄位，你可以透過第三個引數手動指定要獲取的欄位：</target>
      </trans-unit>
      <trans-unit id="52062">
        <source>// 返回的数组中每个元素只会包含 command, time 属性
await ctx.database.get('schedule', [1234], ['command', 'time'])</source>
        <target state="needs-translation">// 返回的数组中每个元素只会包含 command, time 属性
await ctx.database.get('schedule', [1234], ['command', 'time'])</target>
      </trans-unit>
      <trans-unit id="52064">
        <source>你还可以向第二个参数传入一个对象，用来查询非主键上的数据或者同时指定多列的值：</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">你還可以向第二個引數傳入一個物件，用來查詢非主鍵上的資料或者同時指定多行的值：</target>
      </trans-unit>
      <trans-unit id="64994">
        <source>// 获取名为 schedule 的表中 assignee 为 123456 或 456789 的数据行
await ctx.database.get('schedule', {
  assignee: ['123456', '456789'],
})</source>
        <target state="needs-translation">// 获取名为 schedule 的表中 assignee 为 123456 或 456789 的数据行
await ctx.database.get('schedule', {
  assignee: ['123456', '456789'],
})</target>
      </trans-unit>
      <trans-unit id="64996">
        <source>对于需要进行复杂的数据库搜索的，你可以使用查询表达式：</source>
        <target state="needs-translation">对于需要进行复杂的数据库搜索的，你可以使用查询表达式：</target>
      </trans-unit>
      <trans-unit id="52070">
        <source>// 获取名为 schedule 的表中 id 大于 2 但是小于等于 5 的数据行
await ctx.database.get('schedule', {
  id: { $gt: 2, $lte: 5 },
})</source>
        <target state="needs-translation">// 获取名为 schedule 的表中 id 大于 2 但是小于等于 5 的数据行
await ctx.database.get('schedule', {
  id: { $gt: 2, $lte: 5 },
})</target>
      </trans-unit>
      <trans-unit id="64998">
        <source>为了处理更加复杂的需求，我们还引入了求值表达式。</source>
        <target state="needs-translation">为了处理更加复杂的需求，我们还引入了求值表达式。</target>
      </trans-unit>
      <trans-unit id="65000">
        <source>它表现为一个接受 `row` 参数的回调函数，并通过一系列 `$` 上的运算返回一个 `Boolean` 类型的值。</source>
        <target state="needs-translation">它表现为一个接受 `row` 参数的回调函数，并通过一系列 `$` 上的运算返回一个 `Boolean` 类型的值。</target>
      </trans-unit>
      <trans-unit id="65002">
        <source>这种写法的表达能力更强，例如你可以让多个字段共同参与运算：</source>
        <target state="needs-translation">这种写法的表达能力更强，例如你可以让多个字段共同参与运算：</target>
      </trans-unit>
      <trans-unit id="65004">
        <source>import { $ } from 'koishi'

// 上述两个搜索条件的或运算
await ctx.database.get('schedule', (row) =&gt;
  $.or(
    $.in(row.assignee, [
      '123456',
      '456789',
    ]),
    $.and(
      $.gt(row.id, 2),
      $.lte(row.id, 5),
    ),
  ),
)</source>
        <target state="needs-translation">import { $ } from 'koishi'

// 上述两个搜索条件的或运算
await ctx.database.get('schedule', (row) =&gt;
  $.or(
    $.in(row.assignee, [
      '123456',
      '456789',
    ]),
    $.and(
      $.gt(row.id, 2),
      $.lte(row.id, 5),
    ),
  ),
)</target>
      </trans-unit>
      <trans-unit id="65006">
        <source>虽然求值表达式在形式上是一个回调函数，但是 Koishi 并不会将数据全部拉取到内存中，而是会将这个函数的行为编译成相对应的查询语句，提交给数据库运行。</source>
        <target state="needs-translation">虽然求值表达式在形式上是一个回调函数，但是 Koishi 并不会将数据全部拉取到内存中，而是会将这个函数的行为编译成相对应的查询语句，提交给数据库运行。</target>
      </trans-unit>
      <trans-unit id="65008">
        <source>因此你可以放心地使用这种写法，它并不会带来额外的性能问题 (如果你遇到查询性能瓶颈，这更有可能是数据模型本身导致的，例如缺少必要的索引)。</source>
        <target state="needs-translation">因此你可以放心地使用这种写法，它并不会带来额外的性能问题 (如果你遇到查询性能瓶颈，这更有可能是数据模型本身导致的，例如缺少必要的索引)。</target>
      </trans-unit>
      <trans-unit id="65010">
        <source>`create`：插入数据 {#create}</source>
        <target state="needs-translation">`create`：插入数据 {#create}</target>
      </trans-unit>
      <trans-unit id="52080">
        <source>使用 `database.create()` 方法以插入数据。</source>
        <target state="needs-translation">使用 `database.create()` 方法以插入数据。</target>
      </trans-unit>
      <trans-unit id="64938">
        <source>// 向 schedule 表中添加一行数据，data 是要添加的数据行
// 返回值是添加的行的完整数据 (包括自动填充的 id 和默认属性等)
await ctx.database.create('schedule', data)</source>
        <target state="needs-translation">// 向 schedule 表中添加一行数据，data 是要添加的数据行
// 返回值是添加的行的完整数据 (包括自动填充的 id 和默认属性等)
await ctx.database.create('schedule', data)</target>
      </trans-unit>
      <trans-unit id="65012">
        <source>如果你想要批量插入数据，可以使用下面介绍的 [`database.upsert()`](#upsert) 方法。</source>
        <target state="needs-translation">如果你想要批量插入数据，可以使用下面介绍的 [`database.upsert()`](#upsert) 方法。</target>
      </trans-unit>
      <trans-unit id="65014">
        <source>`set`：修改数据 {#set}</source>
        <target state="needs-translation">`set`：修改数据 {#set}</target>
      </trans-unit>
      <trans-unit id="52088">
        <source>`database.set()` 方法需要传入三个参数：表名、查询条件和要修改的数据。</source>
        <target state="needs-translation">`database.set()` 方法需要传入三个参数：表名、查询条件和要修改的数据。</target>
      </trans-unit>
      <trans-unit id="52090">
        <source>// 第二个参数也可以使用上面介绍的查询表达式
await ctx.database.set('schedule', 1234, {
  assignee: 'telegram:123456',
  time: new Date(),
})</source>
        <target state="needs-translation">// 第二个参数也可以使用上面介绍的查询表达式
await ctx.database.set('schedule', 1234, {
  assignee: 'telegram:123456',
  time: new Date(),
})</target>
      </trans-unit>
      <trans-unit id="52092">
        <source>如果要修改的数据与已有数据相关，可以使用求值表达式：</source>
        <target state="needs-translation">如果要修改的数据与已有数据相关，可以使用求值表达式：</target>
      </trans-unit>
      <trans-unit id="65016">
        <source>// 让所有日期为今天的数据行的 count 字段在原有基础上增加 1
await ctx.database.set('foo', { date: new Date() }, (row) =&gt; ({
  count: $.add(row.count, 1),
}))</source>
        <target state="needs-translation">// 让所有日期为今天的数据行的 count 字段在原有基础上增加 1
await ctx.database.set('foo', { date: new Date() }, (row) =&gt; ({
  count: $.add(row.count, 1),
}))</target>
      </trans-unit>
      <trans-unit id="65018">
        <source>`upsert`：修改或插入数据 {#upsert}</source>
        <target state="needs-translation">`upsert`：修改或插入数据 {#upsert}</target>
      </trans-unit>
      <trans-unit id="52100">
        <source>`database.upsert()` 的逻辑稍微有些不同，需要你传入一个数组：</source>
        <target state="needs-translation">`database.upsert()` 的逻辑稍微有些不同，需要你传入一个数组：</target>
      </trans-unit>
      <trans-unit id="65020">
        <source>// 用一个数组来对数据进行更新，你需要确保每一个元素都拥有这个数据表的主键
// 修改时只会用每一行中出现的键进行覆盖，不会影响未定义的字段
await ctx.database.upsert('foo', (row) =&gt; [
  { id: 1, foo: 'hello' },
  { id: 2, foo: 'world' },
  // 如果此列存在，则会按照 $.concat() 的行为进行修改
  // 如果此列不存在，row.bar 则会使用默认值
  { id: 3, bar: $.concat(row.bar, ['koishi']) },
])</source>
        <target state="needs-translation">// 用一个数组来对数据进行更新，你需要确保每一个元素都拥有这个数据表的主键
// 修改时只会用每一行中出现的键进行覆盖，不会影响未定义的字段
await ctx.database.upsert('foo', (row) =&gt; [
  { id: 1, foo: 'hello' },
  { id: 2, foo: 'world' },
  // 如果此列存在，则会按照 $.concat() 的行为进行修改
  // 如果此列不存在，row.bar 则会使用默认值
  { id: 3, bar: $.concat(row.bar, ['koishi']) },
])</target>
      </trans-unit>
      <trans-unit id="52104">
        <source>如果初始的数据库是这样的：</source>
        <target state="needs-translation">如果初始的数据库是这样的：</target>
      </trans-unit>
      <trans-unit id="52106">
        <source>id</source>
        <target state="needs-translation">id</target>
      </trans-unit>
      <trans-unit id="65022">
        <source>foo</source>
        <target state="needs-translation">foo</target>
      </trans-unit>
      <trans-unit id="52110">
        <source>bar</source>
        <target state="needs-translation">bar</target>
      </trans-unit>
      <trans-unit id="52112">
        <source>(默认值)</source>
        <target state="needs-translation">(默认值)</target>
      </trans-unit>
      <trans-unit id="52114">
        <source>null</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">null</target>
      </trans-unit>
      <trans-unit id="52116">
        <source>bar</source>
        <target state="needs-translation">bar</target>
      </trans-unit>
      <trans-unit id="52118">
        <source>1</source>
        <target state="needs-translation">1</target>
      </trans-unit>
      <trans-unit id="52108">
        <source>foo</source>
        <target state="needs-translation">foo</target>
      </trans-unit>
      <trans-unit id="52122">
        <source>baz</source>
        <target state="needs-translation">baz</target>
      </trans-unit>
      <trans-unit id="52124">
        <source>那么进行上述操作后的数据库将是这样的：</source>
        <target state="needs-translation">那么进行上述操作后的数据库将是这样的：</target>
      </trans-unit>
      <trans-unit id="52126">
        <source>id</source>
        <target state="needs-translation">id</target>
      </trans-unit>
      <trans-unit id="52128">
        <source>foo</source>
        <target state="needs-translation">foo</target>
      </trans-unit>
      <trans-unit id="52130">
        <source>bar</source>
        <target state="needs-translation">bar</target>
      </trans-unit>
      <trans-unit id="52132">
        <source>说明</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">說明</target>
      </trans-unit>
      <trans-unit id="52134">
        <source>1</source>
        <target state="needs-translation">1</target>
      </trans-unit>
      <trans-unit id="52136">
        <source>hello</source>
        <target state="needs-translation">hello</target>
      </trans-unit>
      <trans-unit id="52138">
        <source>baz</source>
        <target state="needs-translation">baz</target>
      </trans-unit>
      <trans-unit id="52140">
        <source>该行已经存在，只更新了 foo 字段</source>
        <target state="needs-translation">该行已经存在，只更新了 foo 字段</target>
      </trans-unit>
      <trans-unit id="52142">
        <source>2</source>
        <target state="needs-translation">2</target>
      </trans-unit>
      <trans-unit id="52144">
        <source>world</source>
        <target state="needs-translation">world</target>
      </trans-unit>
      <trans-unit id="52146">
        <source>bar</source>
        <target state="needs-translation">bar</target>
      </trans-unit>
      <trans-unit id="52148">
        <source>插入了新行，其中 foo 字段取自传入的数据，bar 字段取自默认值</source>
        <target state="needs-translation">插入了新行，其中 foo 字段取自传入的数据，bar 字段取自默认值</target>
      </trans-unit>
      <trans-unit id="52150">
        <source>3</source>
        <target state="needs-translation">3</target>
      </trans-unit>
      <trans-unit id="52152">
        <source>null</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">null</target>
      </trans-unit>
      <trans-unit id="65024">
        <source>barkoishi</source>
        <target state="needs-translation">barkoishi</target>
      </trans-unit>
      <trans-unit id="52156">
        <source>插入了新行，其中 bar 字段取自传入的数据，foo 字段取自默认值</source>
        <target state="needs-translation">插入了新行，其中 bar 字段取自传入的数据，foo 字段取自默认值</target>
      </trans-unit>
      <trans-unit id="52158">
        <source>如果想以非主键来索引要修改的数据，可以使用第三个参数：</source>
        <target state="needs-translation">如果想以非主键来索引要修改的数据，可以使用第三个参数：</target>
      </trans-unit>
      <trans-unit id="65026">
        <source>// 以非主键为基准对数据表进行更新，你需要确保每一个元素都拥有 telegram 属性
await ctx.database.upsert('user', rows, 'telegram')

// 以复合键为基准对数据表进行更新，你需要确保每一个元素都拥有 platform 和 id 属性
await ctx.database.upsert('channel', rows, ['platform', 'id'])</source>
        <target state="needs-translation">// 以非主键为基准对数据表进行更新，你需要确保每一个元素都拥有 telegram 属性
await ctx.database.upsert('user', rows, 'telegram')

// 以复合键为基准对数据表进行更新，你需要确保每一个元素都拥有 platform 和 id 属性
await ctx.database.upsert('channel', rows, ['platform', 'id'])</target>
      </trans-unit>
      <trans-unit id="65028">
        <source>`remove`：删除数据 {#remove}</source>
        <target state="needs-translation">`remove`：删除数据 {#remove}</target>
      </trans-unit>
      <trans-unit id="52164">
        <source>使用 `database.remove()` 方法以删除特定表中的数据。</source>
        <target state="needs-translation">使用 `database.remove()` 方法以删除特定表中的数据。</target>
      </trans-unit>
      <trans-unit id="52166">
        <source>// 从 schedule 表中删除特定 id 的数据行
// 第二个参数也可以使用上面介绍的查询表达式
await ctx.database.remove('schedule', [id])</source>
        <target state="needs-translation">// 从 schedule 表中删除特定 id 的数据行
// 第二个参数也可以使用上面介绍的查询表达式
await ctx.database.remove('schedule', [id])</target>
      </trans-unit>
      <trans-unit id="65030">
        <source>获取改动行数 {#write-result}</source>
        <target state="needs-translation">获取改动行数 {#write-result}</target>
      </trans-unit>
      <trans-unit id="52170">
        <source>`set`, `upsert` 和 `remove` 操作都会返回一个 `WriteResult` 对象，它包含了这次操作的结果。</source>
        <target state="needs-translation">`set`, `upsert` 和 `remove` 操作都会返回一个 `WriteResult` 对象，它包含了这次操作的结果。</target>
      </trans-unit>
      <trans-unit id="52172">
        <source>你可以通过 `matched` 属性来获取匹配的数据行数 (注意不是修改的函数)，通过 `inserted` 属性来获取插入的数据行数 (仅限 `upsert` 操作)。</source>
        <target state="needs-translation">你可以通过 `matched` 属性来获取匹配的数据行数 (注意不是修改的函数)，通过 `inserted` 属性来获取插入的数据行数 (仅限 `upsert` 操作)。</target>
      </trans-unit>
      <trans-unit id="52174">
        <source>// 对某个用户的余额进行扣除
const result = await ctx.database.set(
  'user',
  { id, money: { $gte: 100 } },
  (row) =&gt; ({ money: $.sub(row.money, 100) }),
)
// 如果用户不存在或余额不足，此时 result.matched 为 0
if (!result.matched) {
  throw new Error('用户不存在或余额不足！')
}</source>
        <target state="needs-translation">// 对某个用户的余额进行扣除
const result = await ctx.database.set(
  'user',
  { id, money: { $gte: 100 } },
  (row) =&gt; ({ money: $.sub(row.money, 100) }),
)
// 如果用户不存在或余额不足，此时 result.matched 为 0
if (!result.matched) {
  throw new Error('用户不存在或余额不足！')
}</target>
      </trans-unit>
      <trans-unit id="65032">
        <source>对比 set 和 upsert {#set-upsert}</source>
        <target state="needs-translation">对比 set 和 upsert {#set-upsert}</target>
      </trans-unit>
      <trans-unit id="52178">
        <source>`set` 与 `upsert` 方法都可以用于修改已经存在的数据，它们的区别如下表所示：</source>
        <target state="needs-translation">`set` 与 `upsert` 方法都可以用于修改已经存在的数据，它们的区别如下表所示：</target>
      </trans-unit>
      <trans-unit id="52180">
        <source>set</source>
        <target state="needs-translation">set</target>
      </trans-unit>
      <trans-unit id="52182">
        <source>upsert</source>
        <target state="needs-translation">upsert</target>
      </trans-unit>
      <trans-unit id="52184">
        <source>作用范围</source>
        <target state="needs-translation">作用范围</target>
      </trans-unit>
      <trans-unit id="52186">
        <source>支持复杂的查询表达式</source>
        <target state="needs-translation">支持复杂的查询表达式</target>
      </trans-unit>
      <trans-unit id="52188">
        <source>只能限定特定字段的值</source>
        <target state="needs-translation">只能限定特定字段的值</target>
      </trans-unit>
      <trans-unit id="52190">
        <source>插入行为</source>
        <target state="needs-translation">插入行为</target>
      </trans-unit>
      <trans-unit id="52192">
        <source>如果数据不存在则不会进行任何操作</source>
        <target state="needs-translation">如果数据不存在则不会进行任何操作</target>
      </trans-unit>
      <trans-unit id="52194">
        <source>如果数据不存在则会插入新行</source>
        <target state="needs-translation">如果数据不存在则会插入新行</target>
      </trans-unit>
      <trans-unit id="65034">
        <source>对比 create 和 upsert {#create-upsert}</source>
        <target state="needs-translation">对比 create 和 upsert {#create-upsert}</target>
      </trans-unit>
      <trans-unit id="52198">
        <source>`create` 与 `upsert` 方法都可以用于插入新的数据，它们的区别如下表所示：</source>
        <target state="needs-translation">`create` 与 `upsert` 方法都可以用于插入新的数据，它们的区别如下表所示：</target>
      </trans-unit>
      <trans-unit id="52200">
        <source>create</source>
        <target state="needs-translation">create</target>
      </trans-unit>
      <trans-unit id="52202">
        <source>upsert</source>
        <target state="needs-translation">upsert</target>
      </trans-unit>
      <trans-unit id="52204">
        <source>插入数量</source>
        <target state="needs-translation">插入数量</target>
      </trans-unit>
      <trans-unit id="52206">
        <source>只能插入一条数据</source>
        <target state="needs-translation">只能插入一条数据</target>
      </trans-unit>
      <trans-unit id="52208">
        <source>可以批量插入多条数据</source>
        <target state="needs-translation">可以批量插入多条数据</target>
      </trans-unit>
      <trans-unit id="52210">
        <source>返回值</source>
        <target state="needs-translation">返回值</target>
      </trans-unit>
      <trans-unit id="52212">
        <source>返回经过填充后的数据</source>
        <target state="needs-translation">返回经过填充后的数据</target>
      </trans-unit>
      <trans-unit id="52214">
        <source>没有返回值</source>
        <target state="needs-translation">没有返回值</target>
      </trans-unit>
      <trans-unit id="52216">
        <source>冲突行为</source>
        <target state="needs-translation">冲突行为</target>
      </trans-unit>
      <trans-unit id="52218">
        <source>如果数据已存在则会报错</source>
        <target state="needs-translation">如果数据已存在则会报错</target>
      </trans-unit>
      <trans-unit id="52220">
        <source>如果数据已存在则会执行修改</source>
        <target state="needs-translation">如果数据已存在则会执行修改</target>
      </trans-unit>
    </body>
  </file>
  <file id="1560" original="/[koishijs.docs] main/zh-CN/guide/database/model.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="52222">
        <source>数据模型</source>
        <target state="needs-translation">数据模型</target>
      </trans-unit>
      <trans-unit id="52224">
        <source>Koishi 的架构允许任何插件对数据库的结构进行扩展。</source>
        <target state="needs-translation">Koishi 的架构允许任何插件对数据库的结构进行扩展。</target>
      </trans-unit>
      <trans-unit id="52226">
        <source>你就可以在不修改 Koishi 或其他插件源码的情况下，为数据库添加新的字段或者表。</source>
        <target state="needs-translation">你就可以在不修改 Koishi 或其他插件源码的情况下，为数据库添加新的字段或者表。</target>
      </trans-unit>
      <trans-unit id="52228">
        <source>这些功能都是通过 `ctx.model` 提供的。</source>
        <target state="needs-translation">这些功能都是通过 `ctx.model` 提供的。</target>
      </trans-unit>
      <trans-unit id="52230">
        <source>请注意：数据模型的扩展一定要在使用前完成，不然后续数据库操作可能会失败。</source>
        <target state="needs-translation">请注意：数据模型的扩展一定要在使用前完成，不然后续数据库操作可能会失败。</target>
      </trans-unit>
      <trans-unit id="52232">
        <source>扩展表和字段</source>
        <target state="needs-translation">扩展表和字段</target>
      </trans-unit>
      <trans-unit id="52234">
        <source>可以使用 `model.extend()` 方法扩展一个新的数据表，其中的第一个参数是表名，第二个参数包含了各字段的类型声明。</source>
        <target state="needs-translation">可以使用 `model.extend()` 方法扩展一个新的数据表，其中的第一个参数是表名，第二个参数包含了各字段的类型声明。</target>
      </trans-unit>
      <trans-unit id="52236">
        <source>下面的代码向数据库中扩展了一个名为 `schedule` 的表：</source>
        <target state="needs-translation">下面的代码向数据库中扩展了一个名为 `schedule` 的表：</target>
      </trans-unit>
      <trans-unit id="52238">
        <source>declare module 'koishi' {
  interface Tables {
    schedule: Schedule
  }
}

// 这里是新增表的接口类型
export interface Schedule {
  id: number
  assignee: string
  time: Date
  interval: number
  command: string
  session: Session.Payload
}

ctx.model.extend('schedule', {
  // 各字段的类型声明
  id: 'unsigned',
  assignee: 'string',
  time: 'timestamp',
  interval: 'integer',
  command: 'text',
  session: 'json',
})</source>
        <target state="needs-translation">declare module 'koishi' {
  interface Tables {
    schedule: Schedule
  }
}

// 这里是新增表的接口类型
export interface Schedule {
  id: number
  assignee: string
  time: Date
  interval: number
  command: string
  session: Session.Payload
}

ctx.model.extend('schedule', {
  // 各字段的类型声明
  id: 'unsigned',
  assignee: 'string',
  time: 'timestamp',
  interval: 'integer',
  command: 'text',
  session: 'json',
})</target>
      </trans-unit>
      <trans-unit id="52240">
        <source>`model.extend()` 同样也可以向已经存在的表中注入新的字段，使用方法与上面完全一致。</source>
        <target state="needs-translation">`model.extend()` 同样也可以向已经存在的表中注入新的字段，使用方法与上面完全一致。</target>
      </trans-unit>
      <trans-unit id="52242">
        <source>例如，下面的代码向内置的 `User` 表中注入了 `foo` 字段：</source>
        <target state="needs-translation">例如，下面的代码向内置的 `User` 表中注入了 `foo` 字段：</target>
      </trans-unit>
      <trans-unit id="52244">
        <source>declare module 'koishi' {
  interface User {
    foo: string
  }
}

ctx.model.extend('user', {
  // 向用户表中注入字符串字段 foo
  foo: 'string',
})</source>
        <target state="needs-translation">declare module 'koishi' {
  interface User {
    foo: string
  }
}

ctx.model.extend('user', {
  // 向用户表中注入字符串字段 foo
  foo: 'string',
})</target>
      </trans-unit>
      <trans-unit id="52246">
        <source>数据类型</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">資料型別</target>
      </trans-unit>
      <trans-unit id="52248">
        <source>上面的数据类型均直接使用字符串来定义。</source>
        <target state="needs-translation">上面的数据类型均直接使用字符串来定义。</target>
      </trans-unit>
      <trans-unit id="52250">
        <source>对于更复杂的需求，你也可以选择传入一个对象：</source>
        <target state="needs-translation">对于更复杂的需求，你也可以选择传入一个对象：</target>
      </trans-unit>
      <trans-unit id="52252">
        <source>ctx.model.extend('user', {
  foo: {
    type: 'string',
    // 占据的字节长度
    length: 65535,
    // 该字段的默认值
    initial: 'bar',
    // 是否允许为空
    nullable: false,
  },
})</source>
        <target state="needs-translation">ctx.model.extend('user', {
  foo: {
    type: 'string',
    // 占据的字节长度
    length: 65535,
    // 该字段的默认值
    initial: 'bar',
    // 是否允许为空
    nullable: false,
  },
})</target>
      </trans-unit>
      <trans-unit id="52254">
        <source>当你直接使用 `string` 作为类型时，其默认字节长度为 255，默认初始值为 `''`。</source>
        <target state="needs-translation">当你直接使用 `string` 作为类型时，其默认字节长度为 255，默认初始值为 `''`。</target>
      </trans-unit>
      <trans-unit id="52256">
        <source>不同字段的默认值也有所区别，你可以在 [这里](../../api/database/model.md) 查看完整的数据类型列表。</source>
        <target state="needs-translation">不同字段的默认值也有所区别，你可以在 [这里](../../api/database/model.md) 查看完整的数据类型列表。</target>
      </trans-unit>
      <trans-unit id="52258">
        <source>字段迁移</source>
        <target state="needs-translation">字段迁移</target>
      </trans-unit>
      <trans-unit id="52260">
        <source>如果你想要修改一个已有的字段 (只修改名称，不修改逻辑)，你并不能单纯地将源码中的字段名改成新名称。</source>
        <target state="needs-translation">如果你想要修改一个已有的字段 (只修改名称，不修改逻辑)，你并不能单纯地将源码中的字段名改成新名称。</target>
      </trans-unit>
      <trans-unit id="52262">
        <source>如果这样做，数据仍然会停留在旧的字段中，它们实质上已经丢失了，却仍然占据的数据库的空间。</source>
        <target state="needs-translation">如果这样做，数据仍然会停留在旧的字段中，它们实质上已经丢失了，却仍然占据的数据库的空间。</target>
      </trans-unit>
      <trans-unit id="52264">
        <source>此时你需要将旧的字段一并声明到表中：</source>
        <target state="needs-translation">此时你需要将旧的字段一并声明到表中：</target>
      </trans-unit>
      <trans-unit id="52266">
        <source>ctx.model.extend('user', {
  foo: {
    type: 'string',
    legacy: ['bar', 'baz'],
  },
})</source>
        <target state="needs-translation">ctx.model.extend('user', {
  foo: {
    type: 'string',
    legacy: ['bar', 'baz'],
  },
})</target>
      </trans-unit>
      <trans-unit id="52268">
        <source>这样一来，Koishi 就知道 `foo`, `bar`, `baz` 这三个字段实际上对应是同一列数据，并在启动时自动将旧字段中的数据迁移到 `foo` 字段中。</source>
        <target state="needs-translation">这样一来，Koishi 就知道 `foo`, `bar`, `baz` 这三个字段实际上对应是同一列数据，并在启动时自动将旧字段中的数据迁移到 `foo` 字段中。</target>
      </trans-unit>
      <trans-unit id="52270">
        <source>嵌套字段 &lt;badge type=&quot;warning&quot;&gt;实验性&lt;/badge&gt;</source>
        <target state="needs-translation">嵌套字段 &lt;badge type=&quot;warning&quot;&gt;实验性&lt;/badge&gt;</target>
      </trans-unit>
      <trans-unit id="52272">
        <source>数据模型中的字段也可以是一个对象。</source>
        <target state="needs-translation">数据模型中的字段也可以是一个对象。</target>
      </trans-unit>
      <trans-unit id="52274">
        <source>有两种方式可以实现这一点：</source>
        <target state="needs-translation">有两种方式可以实现这一点：</target>
      </trans-unit>
      <trans-unit id="52276">
        <source>使用 `json` 类型，适用于对象内部属性不固定的情况</source>
        <target state="needs-translation">使用 `json` 类型，适用于对象内部属性不固定的情况</target>
      </trans-unit>
      <trans-unit id="52278">
        <source>为每个属性单独声明嵌套类型，这种做法在查询时更加高效</source>
        <target state="needs-translation">为每个属性单独声明嵌套类型，这种做法在查询时更加高效</target>
      </trans-unit>
      <trans-unit id="52280">
        <source>下面是第二种方式的声明示例：</source>
        <target state="needs-translation">下面是第二种方式的声明示例：</target>
      </trans-unit>
      <trans-unit id="52282">
        <source>declare module 'koishi' {
  interface User {
    foo: {
      bar: string
      baz: number
    }
  }
}

// 声明嵌套类型时，对象的多级属性被拼接为一个字符串
ctx.model.extend('user', {
  'foo.bar': 'string',
  'foo.baz': 'integer',
})</source>
        <target state="needs-translation">declare module 'koishi' {
  interface User {
    foo: {
      bar: string
      baz: number
    }
  }
}

// 声明嵌套类型时，对象的多级属性被拼接为一个字符串
ctx.model.extend('user', {
  'foo.bar': 'string',
  'foo.baz': 'integer',
})</target>
      </trans-unit>
      <trans-unit id="52284">
        <source>无论是哪一种情况，在查询时 `foo` 都会被视为一个独立的字段。</source>
        <target state="needs-translation">无论是哪一种情况，在查询时 `foo` 都会被视为一个独立的字段。</target>
      </trans-unit>
      <trans-unit id="52286">
        <source>我们甚至还可以把上述两种方式相结合起来，例如指定 `foo.bar` 的类型为 `json`。</source>
        <target state="needs-translation">我们甚至还可以把上述两种方式相结合起来，例如指定 `foo.bar` 的类型为 `json`。</target>
      </trans-unit>
      <trans-unit id="52288">
        <source>声明索引 &lt;badge type=&quot;warning&quot;&gt;实验性&lt;/badge&gt;</source>
        <target state="needs-translation">声明索引 &lt;badge type=&quot;warning&quot;&gt;实验性&lt;/badge&gt;</target>
      </trans-unit>
      <trans-unit id="52290">
        <source>`model.extend()` 还接受一个可选的三参数，在这里你可以对表的索引进行设置：</source>
        <target state="needs-translation">`model.extend()` 还接受一个可选的三参数，在这里你可以对表的索引进行设置：</target>
      </trans-unit>
      <trans-unit id="52292">
        <source>// 注意这里配置的是第三个参数，也就是之前 autoInc 所在的参数
ctx.model.extend('foo', {}, {
  // 主键，默认为 'id'
  // 主键将会被用于 Query 的简写形式，如果传入的是原始类型或数组则会自行理解成主键的值
  primary: 'name',
  // 自增主键值
  autoInc: true,
  // 唯一键，这应该是一个列表
  // 这个列表中的字段对应的值在创建和修改的时候都不允许与其他行重复
  unique: ['bar', 'baz'],
  // 外键，这应该是一个键值对
  foreign: {
    // 相当于约束了 foo.uid 必须是某一个 user.id
    uid: ['user', 'id'],
  },
})</source>
        <target state="needs-translation">// 注意这里配置的是第三个参数，也就是之前 autoInc 所在的参数
ctx.model.extend('foo', {}, {
  // 主键，默认为 'id'
  // 主键将会被用于 Query 的简写形式，如果传入的是原始类型或数组则会自行理解成主键的值
  primary: 'name',
  // 自增主键值
  autoInc: true,
  // 唯一键，这应该是一个列表
  // 这个列表中的字段对应的值在创建和修改的时候都不允许与其他行重复
  unique: ['bar', 'baz'],
  // 外键，这应该是一个键值对
  foreign: {
    // 相当于约束了 foo.uid 必须是某一个 user.id
    uid: ['user', 'id'],
  },
})</target>
      </trans-unit>
      <trans-unit id="52294">
        <source>整表迁移 &lt;badge type=&quot;warning&quot;&gt;实验性&lt;/badge&gt;</source>
        <target state="needs-translation">整表迁移 &lt;badge type=&quot;warning&quot;&gt;实验性&lt;/badge&gt;</target>
      </trans-unit>
      <trans-unit id="52296">
        <source>整表迁移的性能较差，建议谨慎设计数据库结构而不是依赖迁移。</source>
        <target state="needs-translation">整表迁移的性能较差，建议谨慎设计数据库结构而不是依赖迁移。</target>
      </trans-unit>
      <trans-unit id="52298">
        <source>前面介绍的 [字段迁移](#字段迁移) 仅仅适用于修改字段名称的情况。</source>
        <target state="needs-translation">前面介绍的 [字段迁移](#字段迁移) 仅仅适用于修改字段名称的情况。</target>
      </trans-unit>
      <trans-unit id="52300">
        <source>如果你的插件需要重构表的数据结构，这种方法就不适用了。</source>
        <target state="needs-translation">如果你的插件需要重构表的数据结构，这种方法就不适用了。</target>
      </trans-unit>
      <trans-unit id="52302">
        <source>此时你可以使用 `model.migrate()` 方法来进行整表迁移：</source>
        <target state="needs-translation">此时你可以使用 `model.migrate()` 方法来进行整表迁移：</target>
      </trans-unit>
      <trans-unit id="52304">
        <source>ctx.model.extend('qux', {
  id: 'unsigned',
  text: 'string',
})

ctx.model.extend('qux2', {
  id: 'unsigned',
  flag: 'boolean',
})

// 如果 qux 中存在 flag 列，则对这部分数据进行迁移
ctx.model.migrate('qux', {
  flag: 'boolean',
}, async (database) =&gt; {
  const data = await database.get('qux', {}, ['id', 'flag'])
  await database.upsert('qux2', data)
})</source>
        <target state="needs-translation">ctx.model.extend('qux', {
  id: 'unsigned',
  text: 'string',
})

ctx.model.extend('qux2', {
  id: 'unsigned',
  flag: 'boolean',
})

// 如果 qux 中存在 flag 列，则对这部分数据进行迁移
ctx.model.migrate('qux', {
  flag: 'boolean',
}, async (database) =&gt; {
  const data = await database.get('qux', {}, ['id', 'flag'])
  await database.upsert('qux2', data)
})</target>
      </trans-unit>
      <trans-unit id="52306">
        <source>上面的例子展示了如何将 `qux` 表中的 `flag` 数据迁移到 `qux2` 表中。</source>
        <target state="needs-translation">上面的例子展示了如何将 `qux` 表中的 `flag` 数据迁移到 `qux2` 表中。</target>
      </trans-unit>
      <trans-unit id="52308">
        <source>迁移完成后，`qux` 表中的 `flag` 列将会被删除，而其他列则会保留。</source>
        <target state="needs-translation">迁移完成后，`qux` 表中的 `flag` 列将会被删除，而其他列则会保留。</target>
      </trans-unit>
      <trans-unit id="52310">
        <source>如果你希望删除旧表，可以在回调函数的最后加上一句 `database.drop('qux')`。</source>
        <target state="needs-translation">如果你希望删除旧表，可以在回调函数的最后加上一句 `database.drop('qux')`。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1562" original="/[koishijs.docs] main/zh-CN/guide/database/permission.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="52312">
        <source>权限管理 &lt;badge type=&quot;warning&quot;&gt;实验性&lt;/badge&gt;</source>
        <target state="needs-translation">权限管理 &lt;badge type=&quot;warning&quot;&gt;实验性&lt;/badge&gt;</target>
      </trans-unit>
      <trans-unit id="52314">
        <source>权限管理目前属于实验性功能，API 可能随时会发生变化。</source>
        <target state="needs-translation">权限管理目前属于实验性功能，API 可能随时会发生变化。</target>
      </trans-unit>
      <trans-unit id="52316">
        <source>权限是什么？</source>
        <target state="needs-translation">权限是什么？</target>
      </trans-unit>
      <trans-unit id="52318">
        <source>权限其实就是执行某些操作的能力。</source>
        <target state="needs-translation">权限其实就是执行某些操作的能力。</target>
      </trans-unit>
      <trans-unit id="52320">
        <source>权限具有唯一的标识符，通常由小写英文字母、数字、短横线和点构成。</source>
        <target state="needs-translation">权限具有唯一的标识符，通常由小写英文字母、数字、短横线和点构成。</target>
      </trans-unit>
      <trans-unit id="52322">
        <source>下面是一些你可能会见到的权限名称：</source>
        <target state="needs-translation">下面是一些你可能会见到的权限名称：</target>
      </trans-unit>
      <trans-unit id="64104">
        <source>`user:514`：ID 为 514 的用户的权限</source>
        <target state="needs-translation">`user:514`：ID 为 514 的用户的权限</target>
      </trans-unit>
      <trans-unit id="64106">
        <source>`group:114`：ID 为 114 的用户组的权限</source>
        <target state="needs-translation">`group:114`：ID 为 114 的用户组的权限</target>
      </trans-unit>
      <trans-unit id="64108">
        <source>`authority:3`：权限等级 3 的权限</source>
        <target state="needs-translation">`authority:3`：权限等级 3 的权限</target>
      </trans-unit>
      <trans-unit id="64110">
        <source>`command:foo`：指令 foo 的权限</source>
        <target state="needs-translation">`command:foo`：指令 foo 的权限</target>
      </trans-unit>
      <trans-unit id="64112">
        <source>`command:foo:option:bar`：指令 foo 选项 bar 的权限</source>
        <target state="needs-translation">`command:foo:option:bar`：指令 foo 选项 bar 的权限</target>
      </trans-unit>
      <trans-unit id="64114">
        <source>`telegram:admin`：telegram 平台下群管理员的权限</source>
        <target state="needs-translation">`telegram:admin`：telegram 平台下群管理员的权限</target>
      </trans-unit>
      <trans-unit id="64116">
        <source>`bot:channel.mute`：能够禁言频道的机器人的权限</source>
        <target state="needs-translation">`bot:channel.mute`：能够禁言频道的机器人的权限</target>
      </trans-unit>
      <trans-unit id="64118">
        <source>`config:write`：能够写入配置文件的权限</source>
        <target state="needs-translation">`config:write`：能够写入配置文件的权限</target>
      </trans-unit>
      <trans-unit id="52340">
        <source>权限之间存在两种关系：继承和依赖。</source>
        <target state="needs-translation">权限之间存在两种关系：继承和依赖。</target>
      </trans-unit>
      <trans-unit id="52342">
        <source>Koishi 不区分权限与权限组的概念，权限组只是继承了其他权限的权限。</source>
        <target state="needs-translation">Koishi 不区分权限与权限组的概念，权限组只是继承了其他权限的权限。</target>
      </trans-unit>
      <trans-unit id="52344">
        <source>你可以将用户和用户组也都视为一种权限组。</source>
        <target state="needs-translation">你可以将用户和用户组也都视为一种权限组。</target>
      </trans-unit>
      <trans-unit id="52346">
        <source>权限的继承</source>
        <target state="needs-translation">权限的继承</target>
      </trans-unit>
      <trans-unit id="52348">
        <source>权限可以继承其他权限。</source>
        <target state="needs-translation">权限可以继承其他权限。</target>
      </trans-unit>
      <trans-unit id="52350">
        <source>它的基本写法如下：</source>
        <target state="needs-translation">它的基本写法如下：</target>
      </trans-unit>
      <trans-unit id="52352">
        <source>ctx.permissions.inherit(A, B)</source>
        <target state="needs-translation">ctx.permissions.inherit(A, B)</target>
      </trans-unit>
      <trans-unit id="52354">
        <source>如果权限 A 继承了权限 B，那么拥有权限 A 的主体将被视为同时拥有权限 B。</source>
        <target state="needs-translation">如果权限 A 继承了权限 B，那么拥有权限 A 的主体将被视为同时拥有权限 B。</target>
      </trans-unit>
      <trans-unit id="52356">
        <source>例：ID 为 514 的用户拥有权限等级 3，指令 foo 所需要的权限等级是 2。</source>
        <target state="needs-translation">例：ID 为 514 的用户拥有权限等级 3，指令 foo 所需要的权限等级是 2。</target>
      </trans-unit>
      <trans-unit id="52358">
        <source>这种情况下该用户显然应该可以调用该指令。</source>
        <target state="needs-translation">这种情况下该用户显然应该可以调用该指令。</target>
      </trans-unit>
      <trans-unit id="52360">
        <source>那么这种调用关系具体是如何体现的呢？</source>
        <target state="needs-translation">那么这种调用关系具体是如何体现的呢？</target>
      </trans-unit>
      <trans-unit id="64120">
        <source>user:514 &gt; authority:3 &gt; authority:2 &gt; command:foo</source>
        <target state="needs-translation">user:514 &gt; authority:3 &gt; authority:2 &gt; command:foo</target>
      </trans-unit>
      <trans-unit id="52364">
        <source>这里出现了三个继承关系：</source>
        <target state="needs-translation">这里出现了三个继承关系：</target>
      </trans-unit>
      <trans-unit id="64122">
        <source>`user:114 &gt; authority:3`，因为 ID 为 514 的用户拥有权限等级 3</source>
        <target state="needs-translation">`user:114 &gt; authority:3`，因为 ID 为 514 的用户拥有权限等级 3</target>
      </trans-unit>
      <trans-unit id="64124">
        <source>`authority:3 &gt; authority:2`，因为权限等级 3 天生比权限等级 2 大（内置逻辑）</source>
        <target state="needs-translation">`authority:3 &gt; authority:2`，因为权限等级 3 天生比权限等级 2 大（内置逻辑）</target>
      </trans-unit>
      <trans-unit id="64126">
        <source>`authority:2 &gt; command:foo`，因为指令 foo 被权限等级 2 继承</source>
        <target state="needs-translation">`authority:2 &gt; command:foo`，因为指令 foo 被权限等级 2 继承</target>
      </trans-unit>
      <trans-unit id="52372">
        <source>由此，权限的继承关系能够顺利表达已有的权限等级机制，并且具备更强的表达能力。</source>
        <target state="needs-translation">由此，权限的继承关系能够顺利表达已有的权限等级机制，并且具备更强的表达能力。</target>
      </trans-unit>
      <trans-unit id="52374">
        <source>权限的多继承</source>
        <target state="needs-translation">权限的多继承</target>
      </trans-unit>
      <trans-unit id="52376">
        <source>权限继承除了不能循环外，几乎没有任何限制。</source>
        <target state="needs-translation">权限继承除了不能循环外，几乎没有任何限制。</target>
      </trans-unit>
      <trans-unit id="52378">
        <source>因此，任何一个权限既可以被多个权限继承，也可以继承多个权限。</source>
        <target state="needs-translation">因此，任何一个权限既可以被多个权限继承，也可以继承多个权限。</target>
      </trans-unit>
      <trans-unit id="52380">
        <source>下面分别展示一些使用例。</source>
        <target state="needs-translation">下面分别展示一些使用例。</target>
      </trans-unit>
      <trans-unit id="52382">
        <source>例：ID 为 514 的用户同时继承了权限等级 1，而指令 foo 所需权限等级 2，此时该用户并不能调用 foo 指令。</source>
        <target state="needs-translation">例：ID 为 514 的用户同时继承了权限等级 1，而指令 foo 所需权限等级 2，此时该用户并不能调用 foo 指令。</target>
      </trans-unit>
      <trans-unit id="52384">
        <source>但如果现在我们让该用户直接继承 foo 指令的调用权限，会发生什么呢？</source>
        <target state="needs-translation">但如果现在我们让该用户直接继承 foo 指令的调用权限，会发生什么呢？</target>
      </trans-unit>
      <trans-unit id="64128">
        <source>user:514 &gt; authority:1
         &gt; command:foo</source>
        <target state="needs-translation">user:514 &gt; authority:1
         &gt; command:foo</target>
      </trans-unit>
      <trans-unit id="64130">
        <source>在这张图中，`user:514` 并不能经由 `authority:1` 到达 `command:foo`，但是添加第二条边后又可以直接到达 `command:foo` 了。</source>
        <target state="needs-translation">在这张图中，`user:514` 并不能经由 `authority:1` 到达 `command:foo`，但是添加第二条边后又可以直接到达 `command:foo` 了。</target>
      </trans-unit>
      <trans-unit id="52390">
        <source>因此该用户此时就又可以调用 foo 指令了。</source>
        <target state="needs-translation">因此该用户此时就又可以调用 foo 指令了。</target>
      </trans-unit>
      <trans-unit id="52392">
        <source>可以看到，权限的继承为我们提供了一种能力，可以允许特定低等级用户去调用高级权限的指令，这种能力是过去的权限等级所不具有的。</source>
        <target state="needs-translation">可以看到，权限的继承为我们提供了一种能力，可以允许特定低等级用户去调用高级权限的指令，这种能力是过去的权限等级所不具有的。</target>
      </trans-unit>
      <trans-unit id="52394">
        <source>例：我们希望某个管理型指令 foo 既可以被权限等级 2 的用户调用，又可以被 QQ 群的管理员调用。</source>
        <target state="needs-translation">例：我们希望某个管理型指令 foo 既可以被权限等级 2 的用户调用，又可以被 QQ 群的管理员调用。</target>
      </trans-unit>
      <trans-unit id="52396">
        <source>此时我们可以对 foo 指令进行以下配置：</source>
        <target state="needs-translation">此时我们可以对 foo 指令进行以下配置：</target>
      </trans-unit>
      <trans-unit id="64132">
        <source>authority:2  &gt;
telegram:admin &gt; command:foo</source>
        <target state="needs-translation">authority:2  &gt;
telegram:admin &gt; command:foo</target>
      </trans-unit>
      <trans-unit id="52400">
        <source>这样一来，一个用户只需满足上述两个条件之一就可以调用此指令了。</source>
        <target state="needs-translation">这样一来，一个用户只需满足上述两个条件之一就可以调用此指令了。</target>
      </trans-unit>
      <trans-unit id="52402">
        <source>可以看到，判断指令是否可以被用户调用，本质上是判断用户自身的权限是否可以顺着权限继承的关系到达指令的权限。</source>
        <target state="needs-translation">可以看到，判断指令是否可以被用户调用，本质上是判断用户自身的权限是否可以顺着权限继承的关系到达指令的权限。</target>
      </trans-unit>
      <trans-unit id="52404">
        <source>同时，权限的继承允许我们给指令的调用设置多个不同条件。</source>
        <target state="needs-translation">同时，权限的继承允许我们给指令的调用设置多个不同条件。</target>
      </trans-unit>
      <trans-unit id="52406">
        <source>权限的依赖</source>
        <target state="needs-translation">权限的依赖</target>
      </trans-unit>
      <trans-unit id="52408">
        <source>Koishi 中的权限不仅存在继承关系，还存在依赖关系。</source>
        <target state="needs-translation">Koishi 中的权限不仅存在继承关系，还存在依赖关系。</target>
      </trans-unit>
      <trans-unit id="52410">
        <source>它的基本写法如下：</source>
        <target state="needs-translation">它的基本写法如下：</target>
      </trans-unit>
      <trans-unit id="52412">
        <source>ctx.permissions.depend(A, B)</source>
        <target state="needs-translation">ctx.permissions.depend(A, B)</target>
      </trans-unit>
      <trans-unit id="52414">
        <source>如果权限 A 依赖了权限 B，那么要执行权限 A 的操作时必须同时检查权限 B。</source>
        <target state="needs-translation">如果权限 A 依赖了权限 B，那么要执行权限 A 的操作时必须同时检查权限 B。</target>
      </trans-unit>
      <trans-unit id="52416">
        <source>例：foo 指令的代码中调用了 bar 指令，因此 foo 指令依赖 bar 指令。</source>
        <target state="needs-translation">例：foo 指令的代码中调用了 bar 指令，因此 foo 指令依赖 bar 指令。</target>
      </trans-unit>
      <trans-unit id="64134">
        <source>command:foo -&gt; command:bar</source>
        <target state="needs-translation">command:foo -&gt; command:bar</target>
      </trans-unit>
      <trans-unit id="52420">
        <source>如果用户只拥有 foo 的权限，没有调用 bar 的权限，他依然无法调用 foo 指令。</source>
        <target state="needs-translation">如果用户只拥有 foo 的权限，没有调用 bar 的权限，他依然无法调用 foo 指令。</target>
      </trans-unit>
      <trans-unit id="52422">
        <source>例：foo 指令的代码中使用了 `bot.muteChannel()`。</source>
        <target state="needs-translation">例：foo 指令的代码中使用了 `bot.muteChannel()`。</target>
      </trans-unit>
      <trans-unit id="64136">
        <source>command:foo -&gt; bot:channel.mute</source>
        <target state="needs-translation">command:foo -&gt; bot:channel.mute</target>
      </trans-unit>
      <trans-unit id="52426">
        <source>如果机器人没有实现此 API，用户就无法在该机器人上调用 foo 指令。</source>
        <target state="needs-translation">如果机器人没有实现此 API，用户就无法在该机器人上调用 foo 指令。</target>
      </trans-unit>
      <trans-unit id="52428">
        <source>由此可见，权限的依赖与继承不同。</source>
        <target state="needs-translation">由此可见，权限的依赖与继承不同。</target>
      </trans-unit>
      <trans-unit id="52430">
        <source>继承更多的是一种管理上的考虑，而依赖则关乎具体的功能实现。</source>
        <target state="needs-translation">继承更多的是一种管理上的考虑，而依赖则关乎具体的功能实现。</target>
      </trans-unit>
      <trans-unit id="52432">
        <source>权限访问器</source>
        <target state="needs-translation">权限访问器</target>
      </trans-unit>
      <trans-unit id="52434">
        <source>在上面的介绍中，如果要定义新的权限，就必须手动分配给用户或用户组后才能使用。</source>
        <target state="needs-translation">在上面的介绍中，如果要定义新的权限，就必须手动分配给用户或用户组后才能使用。</target>
      </trans-unit>
      <trans-unit id="52436">
        <source>有没有方法自动为一个会话分配权限呢？</source>
        <target state="needs-translation">有没有方法自动为一个会话分配权限呢？</target>
      </trans-unit>
      <trans-unit id="52438">
        <source>这就是权限访问器的功能。</source>
        <target state="needs-translation">这就是权限访问器的功能。</target>
      </trans-unit>
      <trans-unit id="64138">
        <source>ctx.permissions.provide('telegram:admin', async (name, session) =&gt; {
  return session.telegram?.sender?.role === 'admin'
})</source>
        <target state="needs-translation">ctx.permissions.provide('telegram:admin', async (name, session) =&gt; {
  return session.telegram?.sender?.role === 'admin'
})</target>
      </trans-unit>
      <trans-unit id="64140">
        <source>上面的代码的作用是：当某个会话处于 telegram 平台，并且发送者是群内管理员时，自动附加一个 `telegram:admin` 权限。</source>
        <target state="needs-translation">上面的代码的作用是：当某个会话处于 telegram 平台，并且发送者是群内管理员时，自动附加一个 `telegram:admin` 权限。</target>
      </trans-unit>
      <trans-unit id="52444">
        <source>利用这种技术，我们就可以为特定平台提供权限能力了。</source>
        <target state="needs-translation">利用这种技术，我们就可以为特定平台提供权限能力了。</target>
      </trans-unit>
      <trans-unit id="52446">
        <source>每个权限可以定义多个访问器函数。</source>
        <target state="needs-translation">每个权限可以定义多个访问器函数。</target>
      </trans-unit>
      <trans-unit id="52448">
        <source>在运行时必须通过每一个访问器函数的检查才能视为拥有权限。</source>
        <target state="needs-translation">在运行时必须通过每一个访问器函数的检查才能视为拥有权限。</target>
      </trans-unit>
      <trans-unit id="52450">
        <source>一个权限要么是普通权限，要么是访问器权限。</source>
        <target state="needs-translation">一个权限要么是普通权限，要么是访问器权限。</target>
      </trans-unit>
      <trans-unit id="52452">
        <source>下面是一些区别：</source>
        <target state="needs-translation">下面是一些区别：</target>
      </trans-unit>
      <trans-unit id="52454">
        <source>普通权限</source>
        <target state="needs-translation">普通权限</target>
      </trans-unit>
      <trans-unit id="52456">
        <source>访问器权限</source>
        <target state="needs-translation">访问器权限</target>
      </trans-unit>
      <trans-unit id="52458">
        <source>手动分配给用户 (组)</source>
        <target state="needs-translation">手动分配给用户 (组)</target>
      </trans-unit>
      <trans-unit id="52460">
        <source>自动分配给会话</source>
        <target state="needs-translation">自动分配给会话</target>
      </trans-unit>
      <trans-unit id="52462">
        <source>可以被其他权限继承</source>
        <target state="needs-translation">可以被其他权限继承</target>
      </trans-unit>
      <trans-unit id="52464">
        <source>不能被其他权限继承</source>
        <target state="needs-translation">不能被其他权限继承</target>
      </trans-unit>
      <trans-unit id="52466">
        <source>权限国际化</source>
        <target state="needs-translation">权限国际化</target>
      </trans-unit>
      <trans-unit id="52468">
        <source>普通权限要被用于指令和控制台中显示，因此需要做国际化。</source>
        <target state="needs-translation">普通权限要被用于指令和控制台中显示，因此需要做国际化。</target>
      </trans-unit>
      <trans-unit id="52470">
        <source>具体的做法也很简单：</source>
        <target state="needs-translation">具体的做法也很简单：</target>
      </trans-unit>
      <trans-unit id="52472">
        <source>通过 API 定义：使用 `permission.{name}` 提供翻译文本</source>
        <target state="needs-translation">通过 API 定义：使用 `permission.{name}` 提供翻译文本</target>
      </trans-unit>
      <trans-unit id="52474">
        <source>通过指令定义：定义时提供文本 (自动视为当前用户语言)，或通过 `--locale` 指定特定语言的文本</source>
        <target state="needs-translation">通过指令定义：定义时提供文本 (自动视为当前用户语言)，或通过 `--locale` 指定特定语言的文本</target>
      </trans-unit>
      <trans-unit id="52476">
        <source>通过控制台定义：可以在控制台「用户管理」界面中配置用户组文本</source>
        <target state="needs-translation">通过控制台定义：可以在控制台「用户管理」界面中配置用户组文本</target>
      </trans-unit>
      <trans-unit id="52478">
        <source>访问器权限由于其不能被其他权限继承，因此不需要做国际化。</source>
        <target state="needs-translation">访问器权限由于其不能被其他权限继承，因此不需要做国际化。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1564" original="/[koishijs.docs] main/zh-CN/guide/database/selection.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="52480">
        <source>进阶查询技巧</source>
        <target state="needs-translation">进阶查询技巧</target>
      </trans-unit>
      <trans-unit id="52482">
        <source>`database.get()` 已经能实现一些简单的查询了。</source>
        <target state="needs-translation">`database.get()` 已经能实现一些简单的查询了。</target>
      </trans-unit>
      <trans-unit id="52484">
        <source>然而在实际的开发中，我们通常会遇到排序、分组乃至聚合等更复杂的查询需求。</source>
        <target state="needs-translation">然而在实际的开发中，我们通常会遇到排序、分组乃至聚合等更复杂的查询需求。</target>
      </trans-unit>
      <trans-unit id="52486">
        <source>此时就轮到更加强大的 `database.select()` 方法登场了。</source>
        <target state="needs-translation">此时就轮到更加强大的 `database.select()` 方法登场了。</target>
      </trans-unit>
      <trans-unit id="52488">
        <source>基本用法</source>
        <target state="needs-translation">基本用法</target>
      </trans-unit>
      <trans-unit id="52490">
        <source>`database.select()` 会创建一个 `Selection` 对象。</source>
        <target state="needs-translation">`database.select()` 会创建一个 `Selection` 对象。</target>
      </trans-unit>
      <trans-unit id="52492">
        <source>它提供了一系列的链式方法，你可以将其理解成一个查询语句的构造器。</source>
        <target state="needs-translation">它提供了一系列的链式方法，你可以将其理解成一个查询语句的构造器。</target>
      </trans-unit>
      <trans-unit id="52494">
        <source>构造完成后，你可以调用 `.execute()` 方法来执行最终的查询。</source>
        <target state="needs-translation">构造完成后，你可以调用 `.execute()` 方法来执行最终的查询。</target>
      </trans-unit>
      <trans-unit id="52496">
        <source>下面是一个简单的例子：</source>
        <target state="needs-translation">下面是一个简单的例子：</target>
      </trans-unit>
      <trans-unit id="65036">
        <source>ctx.database.get('foo', { id: { $gt: 5 } })
// 等价于
ctx.database
  .select('foo')
  .where(row =&gt; $.gt(row.id, 5))
  .execute()</source>
        <target state="needs-translation">ctx.database.get('foo', { id: { $gt: 5 } })
// 等价于
ctx.database
  .select('foo')
  .where(row =&gt; $.gt(row.id, 5))
  .execute()</target>
      </trans-unit>
      <trans-unit id="52500">
        <source>排序与分页</source>
        <target state="needs-translation">排序与分页</target>
      </trans-unit>
      <trans-unit id="52502">
        <source>使用 `.orderBy()` 方法来对查询结果排序，使用 `.limit()` 和 `.offset()` 方法来分页：</source>
        <target state="needs-translation">使用 `.orderBy()` 方法来对查询结果排序，使用 `.limit()` 和 `.offset()` 方法来分页：</target>
      </trans-unit>
      <trans-unit id="52504">
        <source>// 按 id 降序排列，从第 100 条开始取 10 条数据
ctx.database
  .select('foo')
  .orderBy('id', 'desc')
  .limit(10)
  .offset(100)
  .execute()</source>
        <target state="needs-translation">// 按 id 降序排列，从第 100 条开始取 10 条数据
ctx.database
  .select('foo')
  .orderBy('id', 'desc')
  .limit(10)
  .offset(100)
  .execute()</target>
      </trans-unit>
      <trans-unit id="52506">
        <source>求值表达式</source>
        <target state="needs-translation">求值表达式</target>
      </trans-unit>
      <trans-unit id="65038">
        <source>`.orderBy()` 和 `.where()` 等方法都支持传入一个函数，这个函数会接受一个 `row` 参数，表示当前正在处理的数据行。</source>
        <target state="needs-translation">`.orderBy()` 和 `.where()` 等方法都支持传入一个函数，这个函数会接受一个 `row` 参数，表示当前正在处理的数据行。</target>
      </trans-unit>
      <trans-unit id="52510">
        <source>你可以在这个函数中返回一个值，这个值会被用于排序或筛选。</source>
        <target state="needs-translation">你可以在这个函数中返回一个值，这个值会被用于排序或筛选。</target>
      </trans-unit>
      <trans-unit id="52512">
        <source>// 返回 id 大于 5 的数据行，并按 id 升序排列
ctx.database
  .select('foo')
  .where(row =&gt; $.gt(row.id, 5))
  .orderBy(row =&gt; row.id)
  .execute()</source>
        <target state="needs-translation">// 返回 id 大于 5 的数据行，并按 id 升序排列
ctx.database
  .select('foo')
  .where(row =&gt; $.gt(row.id, 5))
  .orderBy(row =&gt; row.id)
  .execute()</target>
      </trans-unit>
      <trans-unit id="52518">
        <source>字段映射</source>
        <target state="needs-translation">字段映射</target>
      </trans-unit>
      <trans-unit id="52520">
        <source>`.project()` 方法可以用于映射查询结果。</source>
        <target state="needs-translation">`.project()` 方法可以用于映射查询结果。</target>
      </trans-unit>
      <trans-unit id="52522">
        <source>它接受一个对象，对象的键表示要映射的字段名，值表示映射的表达式。</source>
        <target state="needs-translation">它接受一个对象，对象的键表示要映射的字段名，值表示映射的表达式。</target>
      </trans-unit>
      <trans-unit id="52524">
        <source>下面是一个例子：</source>
        <target state="needs-translation">下面是一个例子：</target>
      </trans-unit>
      <trans-unit id="52526">
        <source>// 返回的数组元素将只含有 a, b 属性
ctx.database
  .select('foo')
  .project({
    a: row =&gt; $.add(row.id, 1),         // a = id + 1
    b: row =&gt; $.multiply(row.id, 2),    // b = id * 2
  })
  .execute()</source>
        <target state="needs-translation">// 返回的数组元素将只含有 a, b 属性
ctx.database
  .select('foo')
  .project({
    a: row =&gt; $.add(row.id, 1),         // a = id + 1
    b: row =&gt; $.multiply(row.id, 2),    // b = id * 2
  })
  .execute()</target>
      </trans-unit>
      <trans-unit id="52528">
        <source>聚合查询</source>
        <target state="needs-translation">聚合查询</target>
      </trans-unit>
      <trans-unit id="52530">
        <source>`.execute()` 也可以传入一个带有聚合运算的求值函数。</source>
        <target state="needs-translation">`.execute()` 也可以传入一个带有聚合运算的求值函数。</target>
      </trans-unit>
      <trans-unit id="52532">
        <source>如果你这样做，此时返回的结果将不再是一个数组，而是该表达式计算出的值。</source>
        <target state="needs-translation">如果你这样做，此时返回的结果将不再是一个数组，而是该表达式计算出的值。</target>
      </trans-unit>
      <trans-unit id="52534">
        <source>// 返回 id 大于 5 的数据行的数量
ctx.database
  .select('foo')
  .where(row =&gt; $.gt(row.id, 5))
  .execute(row =&gt; $.count(row.id))</source>
        <target state="needs-translation">// 返回 id 大于 5 的数据行的数量
ctx.database
  .select('foo')
  .where(row =&gt; $.gt(row.id, 5))
  .execute(row =&gt; $.count(row.id))</target>
      </trans-unit>
      <trans-unit id="52536">
        <source>除了 `.count()` 外还有其他的一些聚合运算，例如 `$.sum()`，`$.max()` 等。</source>
        <target state="needs-translation">除了 `.count()` 外还有其他的一些聚合运算，例如 `$.sum()`，`$.max()` 等。</target>
      </trans-unit>
      <trans-unit id="52538">
        <source>聚合运算与其他求值函数的区别在于，聚合运算的外部不能再包含 `row` 的引用。</source>
        <target state="needs-translation">聚合运算与其他求值函数的区别在于，聚合运算的外部不能再包含 `row` 的引用。</target>
      </trans-unit>
      <trans-unit id="52540">
        <source>此外，只有特定方法中才能使用聚合运算，例如 `.execute()` 和 `.having()` 等。</source>
        <target state="needs-translation">此外，只有特定方法中才能使用聚合运算，例如 `.execute()` 和 `.having()` 等。</target>
      </trans-unit>
      <trans-unit id="52542">
        <source>分组查询</source>
        <target state="needs-translation">分组查询</target>
      </trans-unit>
      <trans-unit id="52544">
        <source>`.groupBy()` 和 `.having()` 方法可以用于分组查询。</source>
        <target state="needs-translation">`.groupBy()` 和 `.having()` 方法可以用于分组查询。</target>
      </trans-unit>
      <trans-unit id="52546">
        <source>`.groupBy()` 方法接受一个字段名或求值函数，`.having()` 方法接受一个含有聚合运算并返回布尔值的表达式。</source>
        <target state="needs-translation">`.groupBy()` 方法接受一个字段名或求值函数，`.having()` 方法接受一个含有聚合运算并返回布尔值的表达式。</target>
      </trans-unit>
      <trans-unit id="52548">
        <source>下面是一个例子：</source>
        <target state="needs-translation">下面是一个例子：</target>
      </trans-unit>
      <trans-unit id="52550">
        <source>// 按照 value 字段分组，返回结果数大于 5 的分组
ctx.database
  .select('foo')
  .groupBy('value')
  .having(row =&gt; $.gt($.count(row.id), 5))
  .execute()</source>
        <target state="needs-translation">// 按照 value 字段分组，返回结果数大于 5 的分组
ctx.database
  .select('foo')
  .groupBy('value')
  .having(row =&gt; $.gt($.count(row.id), 5))
  .execute()</target>
      </trans-unit>
      <trans-unit id="52552">
        <source>`.groupBy()` 可以接受一个数组，表示同时对数组中的字段进行分组。</source>
        <target state="needs-translation">`.groupBy()` 可以接受一个数组，表示同时对数组中的字段进行分组。</target>
      </trans-unit>
      <trans-unit id="52554">
        <source>甚至也可以是一个对象，与 `.project()` 中的用法类似。</source>
        <target state="needs-translation">甚至也可以是一个对象，与 `.project()` 中的用法类似。</target>
      </trans-unit>
      <trans-unit id="52556">
        <source>// 返回的数据将按照 id - value 的值分组
ctx.database
  .select('foo')
  .groupBy({
    key: row =&gt; $.subtract(row.id, row.value),
  })
  .execute()</source>
        <target state="needs-translation">// 返回的数据将按照 id - value 的值分组
ctx.database
  .select('foo')
  .groupBy({
    key: row =&gt; $.subtract(row.id, row.value),
  })
  .execute()</target>
      </trans-unit>
      <trans-unit id="52558">
        <source>`.having()` 中可以使用的 `row` 属性仅限于 `.groupBy()` 中的字段。</source>
        <target state="needs-translation">`.having()` 中可以使用的 `row` 属性仅限于 `.groupBy()` 中的字段。</target>
      </trans-unit>
      <trans-unit id="52560">
        <source>添加字段</source>
        <target state="needs-translation">添加字段</target>
      </trans-unit>
      <trans-unit id="52562">
        <source>`.groupBy()` 还额外接受一个二参数，用于在查询结果中添加聚合字段。</source>
        <target state="needs-translation">`.groupBy()` 还额外接受一个二参数，用于在查询结果中添加聚合字段。</target>
      </trans-unit>
      <trans-unit id="52564">
        <source>这个参数是一个对象，同样与 `.project()` 中的用法类似。</source>
        <target state="needs-translation">这个参数是一个对象，同样与 `.project()` 中的用法类似。</target>
      </trans-unit>
      <trans-unit id="52566">
        <source>下面是一个例子：</source>
        <target state="needs-translation">下面是一个例子：</target>
      </trans-unit>
      <trans-unit id="52568">
        <source>// 返回的数据包含 value, sum, count 三个属性
ctx.database
  .select('foo')
  .groupBy('value', {
    sum: row =&gt; $.sum(row.id),
    count: row =&gt; $.count(row.id),
  })
  .execute()</source>
        <target state="needs-translation">// 返回的数据包含 value, sum, count 三个属性
ctx.database
  .select('foo')
  .groupBy('value', {
    sum: row =&gt; $.sum(row.id),
    count: row =&gt; $.count(row.id),
  })
  .execute()</target>
      </trans-unit>
      <trans-unit id="52570">
        <source>多级分组</source>
        <target state="needs-translation">多级分组</target>
      </trans-unit>
      <trans-unit id="52572">
        <source>可以通过链式调用 `.groupBy()` 方法来实现多级分组。</source>
        <target state="needs-translation">可以通过链式调用 `.groupBy()` 方法来实现多级分组。</target>
      </trans-unit>
      <trans-unit id="52574">
        <source>下面是一个例子：</source>
        <target state="needs-translation">下面是一个例子：</target>
      </trans-unit>
      <trans-unit id="52576">
        <source>ctx.database
  .select('foo')
  .groupBy(['uid', 'pid'], {
    submit: row =&gt; $.sum(1),
    accept: row =&gt; $.sum(row.value),
  })
  .groupBy(['uid'], {
    submit: row =&gt; $.sum(row.submit),
    accept: row =&gt; $.sum($.if($.gt(row.accept, 0), 1, 0)),
  })
  .orderBy('uid')
  .execute()</source>
        <target state="needs-translation">ctx.database
  .select('foo')
  .groupBy(['uid', 'pid'], {
    submit: row =&gt; $.sum(1),
    accept: row =&gt; $.sum(row.value),
  })
  .groupBy(['uid'], {
    submit: row =&gt; $.sum(row.submit),
    accept: row =&gt; $.sum($.if($.gt(row.accept, 0), 1, 0)),
  })
  .orderBy('uid')
  .execute()</target>
      </trans-unit>
      <trans-unit id="52578">
        <source>连接查询 &lt;badge type=&quot;warning&quot;&gt;实验性&lt;/badge&gt;</source>
        <target state="needs-translation">连接查询 &lt;badge type=&quot;warning&quot;&gt;实验性&lt;/badge&gt;</target>
      </trans-unit>
      <trans-unit id="52580">
        <source>最后介绍一下连接查询的用法。</source>
        <target state="needs-translation">最后介绍一下连接查询的用法。</target>
      </trans-unit>
      <trans-unit id="52582">
        <source>使用 `.join()` 可以将多个表连接起来，返回一个新的 `Selection`，其属性分别对应多个表的名称。</source>
        <target state="needs-translation">使用 `.join()` 可以将多个表连接起来，返回一个新的 `Selection`，其属性分别对应多个表的名称。</target>
      </trans-unit>
      <trans-unit id="52584">
        <source>下面是一个例子：</source>
        <target state="needs-translation">下面是一个例子：</target>
      </trans-unit>
      <trans-unit id="65118">
        <source>// 返回的数据包含 foo, bar 两个属性
ctx.database
  .join(['foo', 'bar'], (foo, bar) =&gt; $.eq(foo.id, bar.id))
  .orderBy('foo.id') // orderBy 可以使用 'a.b' 的形式
  .execute()</source>
        <target state="needs-translation">// 返回的数据包含 foo, bar 两个属性
ctx.database
  .join(['foo', 'bar'], (foo, bar) =&gt; $.eq(foo.id, bar.id))
  .orderBy('foo.id') // orderBy 可以使用 'a.b' 的形式
  .execute()</target>
      </trans-unit>
      <trans-unit id="64972">
        <source>如果你的表名比较复杂，你也可以为参与连接的各个表指定别名。</source>
        <target state="needs-translation">如果你的表名比较复杂，你也可以为参与连接的各个表指定别名。</target>
      </trans-unit>
      <trans-unit id="64974">
        <source>将用于指定表名的数组改为传入一个对象，并修改传入函数的参数即可。</source>
        <target state="needs-translation">将用于指定表名的数组改为传入一个对象，并修改传入函数的参数即可。</target>
      </trans-unit>
      <trans-unit id="64976">
        <source>下面是一个例子：</source>
        <target state="needs-translation">下面是一个例子：</target>
      </trans-unit>
      <trans-unit id="65120">
        <source>// 返回的数据包含 t1, t2 两个属性
ctx.database
  .join({ t1: 'foo', t2: 'bar' }, row =&gt; $.eq(row.t1.id, row.t2.id))
  .orderBy('t1.id') // orderBy 可以使用 'a.b' 的形式
  .execute()</source>
        <target state="needs-translation">// 返回的数据包含 t1, t2 两个属性
ctx.database
  .join({ t1: 'foo', t2: 'bar' }, row =&gt; $.eq(row.t1.id, row.t2.id))
  .orderBy('t1.id') // orderBy 可以使用 'a.b' 的形式
  .execute()</target>
      </trans-unit>
    </body>
  </file>
  <file id="1566" original="/[koishijs.docs] main/zh-CN/guide/database/writing.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="52588">
        <source>编写数据库插件</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">編寫資料庫外掛</target>
      </trans-unit>
      <trans-unit id="52590">
        <source>注意</source>
        <target state="needs-translation">注意</target>
      </trans-unit>
      <trans-unit id="52592">
        <source>此页文档正在施工，其中的内容可能不是最新。</source>
        <target state="needs-translation">此页文档正在施工，其中的内容可能不是最新。</target>
      </trans-unit>
      <trans-unit id="52594">
        <source>现在让我们介绍一下如何编写一个数据库支持。</source>
        <target state="needs-translation">现在让我们介绍一下如何编写一个数据库支持。</target>
      </trans-unit>
      <trans-unit id="52596">
        <source>与上面介绍的方法类似，我们也采用注入的方式，不过这次我们需要先实现一个类。</source>
        <target state="needs-translation">与上面介绍的方法类似，我们也采用注入的方式，不过这次我们需要先实现一个类。</target>
      </trans-unit>
      <trans-unit id="52598">
        <source>我们用 mysql 来举个例子：</source>
        <target state="needs-translation">我们用 mysql 来举个例子：</target>
      </trans-unit>
      <trans-unit id="52600">
        <source>由于数据库支持往往要被其他插件或用户所使用，有一个好的类型标注是非常重要的。</source>
        <target state="needs-translation">由于数据库支持往往要被其他插件或用户所使用，有一个好的类型标注是非常重要的。</target>
      </trans-unit>
      <trans-unit id="52602">
        <source>因此这里我们就只提供 TypeScript 的范例了。</source>
        <target state="needs-translation">因此这里我们就只提供 TypeScript 的范例了。</target>
      </trans-unit>
      <trans-unit id="52604">
        <source>代码示例</source>
        <target state="needs-translation">代码示例</target>
      </trans-unit>
      <trans-unit id="52606">
        <source>// @errors: 2416

import { createPool, Pool, PoolConfig } from 'mysql'
import { Context, Database } from 'koishi'

// 从 Database 类派生出一个子类并将其默认导出
export default class MysqlDatabase extends Database {
  private pool: Pool

  constructor(ctx: Context, config: PoolConfig = {}) {
    super(ctx)
    this.pool = createPool(config)
  }

  query(sql: string, values?: any): Promise&lt;any&gt; {
    return new Promise((resolve, reject) =&gt; {
      this.pool.query(sql, values, (error, results, fields) =&gt; {
        if (error) {
          reject(error)
        } else {
          resolve(results)
        }
      })
    })
  }

  // 实现内置方法
  get() {}
  set() {}
  upsert() {}
  remove() {}
  create() {}
  drop() {}
  eval() {}
  stats() {}
}</source>
        <target state="needs-translation">// @errors: 2416

import { createPool, Pool, PoolConfig } from 'mysql'
import { Context, Database } from 'koishi'

// 从 Database 类派生出一个子类并将其默认导出
export default class MysqlDatabase extends Database {
  private pool: Pool

  constructor(ctx: Context, config: PoolConfig = {}) {
    super(ctx)
    this.pool = createPool(config)
  }

  query(sql: string, values?: any): Promise&lt;any&gt; {
    return new Promise((resolve, reject) =&gt; {
      this.pool.query(sql, values, (error, results, fields) =&gt; {
        if (error) {
          reject(error)
        } else {
          resolve(results)
        }
      })
    })
  }

  // 实现内置方法
  get() {}
  set() {}
  upsert() {}
  remove() {}
  create() {}
  drop() {}
  eval() {}
  stats() {}
}</target>
      </trans-unit>
      <trans-unit id="52608">
        <source>当然，真正的 [@koishijs/plugin-database-mysql](../../plugins/database/mysql.md) 要比上面的例子复杂的多，我们还需要处理有关数据库的更多细节。</source>
        <target state="needs-translation">当然，真正的 [@koishijs/plugin-database-mysql](../../plugins/database/mysql.md) 要比上面的例子复杂的多，我们还需要处理有关数据库的更多细节。</target>
      </trans-unit>
      <trans-unit id="52610">
        <source>你可以在 [这里](https://github.com/koishijs/koishi/tree/master/plugins/database/mysql) 看到完整的源代码。</source>
        <target state="needs-translation">你可以在 [这里](https://github.com/koishijs/koishi/tree/master/plugins/database/mysql) 看到完整的源代码。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1568" original="/[koishijs.docs] main/zh-CN/guide/develop/config.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="52612">
        <source>配置文件</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">配置檔案</target>
      </trans-unit>
      <trans-unit id="52614">
        <source>配置文件的结构未来可能会发生变化，请留意后续更新。</source>
        <target state="needs-translation">配置文件的结构未来可能会发生变化，请留意后续更新。</target>
      </trans-unit>
      <trans-unit id="52616">
        <source>每个 Koishi 应用都有一个配置文件，它管理了应用及其插件的全部配置。</source>
        <target state="needs-translation">每个 Koishi 应用都有一个配置文件，它管理了应用及其插件的全部配置。</target>
      </trans-unit>
      <trans-unit id="52618">
        <source>在绝大多数情况下，我们都可以使用控制台修改这些配置，而无需手动编辑配置文件。</source>
        <target state="needs-translation">在绝大多数情况下，我们都可以使用控制台修改这些配置，而无需手动编辑配置文件。</target>
      </trans-unit>
      <trans-unit id="52620">
        <source>但作为开发指南的一部分，我们还是需要了解一下配置文件的结构，并介绍一些你可能会用到的进阶用法。</source>
        <target state="needs-translation">但作为开发指南的一部分，我们还是需要了解一下配置文件的结构，并介绍一些你可能会用到的进阶用法。</target>
      </trans-unit>
      <trans-unit id="52622">
        <source>默认情况下配置文件的格式为 [YAML](https://en.wikipedia.org/wiki/YAML)，它是一种易于阅读和编辑的文本格式，你可以用任何文本编辑器打开。</source>
        <target state="needs-translation">默认情况下配置文件的格式为 [YAML](https://en.wikipedia.org/wiki/YAML)，它是一种易于阅读和编辑的文本格式，你可以用任何文本编辑器打开。</target>
      </trans-unit>
      <trans-unit id="52624">
        <source>应用目录</source>
        <target state="needs-translation">应用目录</target>
      </trans-unit>
      <trans-unit id="52626">
        <source>配置文件所在的目录叫**应用目录**。</source>
        <target state="needs-translation">配置文件所在的目录叫**应用目录**。</target>
      </trans-unit>
      <trans-unit id="52628">
        <source>根据你的安装方式，应用目录的位置可能不同：</source>
        <target state="needs-translation">根据你的安装方式，应用目录的位置可能不同：</target>
      </trans-unit>
      <trans-unit id="52630">
        <source>模板项目：你创建的项目目录，例如 `D:/dev/koishi-app`</source>
        <target state="needs-translation">模板项目：你创建的项目目录，例如 `D:/dev/koishi-app`</target>
      </trans-unit>
      <trans-unit id="52632">
        <source>启动器 (zip)：解压目录下 `data/instances/default`</source>
        <target state="needs-translation">启动器 (zip)：解压目录下 `data/instances/default`</target>
      </trans-unit>
      <trans-unit id="52634">
        <source>启动器 (msi)：`C:/Users/你的用户名/AppData/Roaming/Koishi/Desktop/data/instances/default`</source>
        <target state="needs-translation">启动器 (msi)：`C:/Users/你的用户名/AppData/Roaming/Koishi/Desktop/data/instances/default`</target>
      </trans-unit>
      <trans-unit id="52636">
        <source>启动器 (pkg)：`~/Library/Application Support/Koishi/Desktop/data/instances/default`</source>
        <target state="needs-translation">启动器 (pkg)：`~/Library/Application Support/Koishi/Desktop/data/instances/default`</target>
      </trans-unit>
      <trans-unit id="52638">
        <source>配置文件是应用目录下名为 `koishi.yml` 的文件。</source>
        <target state="needs-translation">配置文件是应用目录下名为 `koishi.yml` 的文件。</target>
      </trans-unit>
      <trans-unit id="52640">
        <source>当你遇到问题时，开发者可能会要求你提供配置文件的内容。</source>
        <target state="needs-translation">当你遇到问题时，开发者可能会要求你提供配置文件的内容。</target>
      </trans-unit>
      <trans-unit id="52642">
        <source>此时去上面的地方找就好了。</source>
        <target state="needs-translation">此时去上面的地方找就好了。</target>
      </trans-unit>
      <trans-unit id="52644">
        <source>理解配置文件</source>
        <target state="needs-translation">理解配置文件</target>
      </trans-unit>
      <trans-unit id="52646">
        <source>尝试打开配置文件，你会发现它的内容大致如下：</source>
        <target state="needs-translation">尝试打开配置文件，你会发现它的内容大致如下：</target>
      </trans-unit>
      <trans-unit id="52648">
        <source># 全局设置
host: localhost
port: 5140

# 插件列表
plugins:
  # group 表示这是一个插件组
  group:console:
    # 波浪线前缀表示一个不启用的插件
    ~auth:
    console:
    logger:
    insight:
    market:
      # 以缩进的方式显示插件的配置项
      registry:
        endpoint: https://registry.npmmirror.com

  # 这里是一些零散的插件
  github:
  dialogue:</source>
        <target state="needs-translation"># 全局设置
host: localhost
port: 5140

# 插件列表
plugins:
  # group 表示这是一个插件组
  group:console:
    # 波浪线前缀表示一个不启用的插件
    ~auth:
    console:
    logger:
    insight:
    market:
      # 以缩进的方式显示插件的配置项
      registry:
        endpoint: https://registry.npmmirror.com

  # 这里是一些零散的插件
  github:
  dialogue:</target>
      </trans-unit>
      <trans-unit id="52650">
        <source>具体而言，配置文件中包含的内容如下。</source>
        <target state="needs-translation">具体而言，配置文件中包含的内容如下。</target>
      </trans-unit>
      <trans-unit id="52652">
        <source>全局设置</source>
        <target state="needs-translation">全局设置</target>
      </trans-unit>
      <trans-unit id="52654">
        <source>全局设置对应于配置文件中 `plugins:` 一行以上的部分。</source>
        <target state="needs-translation">全局设置对应于配置文件中 `plugins:` 一行以上的部分。</target>
      </trans-unit>
      <trans-unit id="52656">
        <source>这里会包含一些最基础的配置项，例如网络设置、指令前缀、默认权限等。</source>
        <target state="needs-translation">这里会包含一些最基础的配置项，例如网络设置、指令前缀、默认权限等。</target>
      </trans-unit>
      <trans-unit id="52658">
        <source>修改这里的配置项，会影响整个 Koishi 应用的行为而非某个插件。</source>
        <target state="needs-translation">修改这里的配置项，会影响整个 Koishi 应用的行为而非某个插件。</target>
      </trans-unit>
      <trans-unit id="52660">
        <source>你可以在 [这个页面](../../api/core/app.md) 了解全部的全局设置。</source>
        <target state="needs-translation">你可以在 [这个页面](../../api/core/app.md) 了解全部的全局设置。</target>
      </trans-unit>
      <trans-unit id="52662">
        <source>插件配置</source>
        <target state="needs-translation">插件配置</target>
      </trans-unit>
      <trans-unit id="52664">
        <source>`plugins` 是一个 YAML 对象，它的每一个键对应于插件的名称，而值则对应于插件的配置。</source>
        <target state="needs-translation">`plugins` 是一个 YAML 对象，它的每一个键对应于插件的名称，而值则对应于插件的配置。</target>
      </trans-unit>
      <trans-unit id="52666">
        <source>当没有进行配置时，值可以省略 (或者写成 `{}`)。</source>
        <target state="needs-translation">当没有进行配置时，值可以省略 (或者写成 `{}`)。</target>
      </trans-unit>
      <trans-unit id="52668">
        <source>当存在配置时，值需要在插件的基础上缩进并写在接下来的几行中。</source>
        <target state="needs-translation">当存在配置时，值需要在插件的基础上缩进并写在接下来的几行中。</target>
      </trans-unit>
      <trans-unit id="52670">
        <source>例如：</source>
        <target state="needs-translation">例如：</target>
      </trans-unit>
      <trans-unit id="52672">
        <source>plugins:
  dialogue:
    # 这里是 koishi-plugin-dialogue 的配置
    context:
      enable: true</source>
        <target state="needs-translation">plugins:
  dialogue:
    # 这里是 koishi-plugin-dialogue 的配置
    context:
      enable: true</target>
      </trans-unit>
      <trans-unit id="52674">
        <source>插件名称</source>
        <target state="needs-translation">插件名称</target>
      </trans-unit>
      <trans-unit id="52676">
        <source>插件名称通常对应于插件发布时的包名。</source>
        <target state="needs-translation">插件名称通常对应于插件发布时的包名。</target>
      </trans-unit>
      <trans-unit id="52678">
        <source>例如：</source>
        <target state="needs-translation">例如：</target>
      </trans-unit>
      <trans-unit id="52680">
        <source>`market` 对应于官方插件 `@koishijs/plugin-market`</source>
        <target state="needs-translation">`market` 对应于官方插件 `@koishijs/plugin-market`</target>
      </trans-unit>
      <trans-unit id="52682">
        <source>`dialogue` 对应于社区插件 `koishi-plugin-dialogue`</source>
        <target state="needs-translation">`dialogue` 对应于社区插件 `koishi-plugin-dialogue`</target>
      </trans-unit>
      <trans-unit id="52684">
        <source>除了插件的包名外，插件名称还可以拥有一个可选的前缀 (`~`) 和后缀 (`:xxx`)。</source>
        <target state="needs-translation">除了插件的包名外，插件名称还可以拥有一个可选的前缀 (`~`) 和后缀 (`:xxx`)。</target>
      </trans-unit>
      <trans-unit id="52686">
        <source>插件名称前的波浪线 (`~`) 表示该插件不会被启用。</source>
        <target state="needs-translation">插件名称前的波浪线 (`~`) 表示该插件不会被启用。</target>
      </trans-unit>
      <trans-unit id="52688">
        <source>插件名称后的冒号后是插件的别名，当某个插件需要存在多组配置时这会非常有用。</source>
        <target state="needs-translation">插件名称后的冒号后是插件的别名，当某个插件需要存在多组配置时这会非常有用。</target>
      </trans-unit>
      <trans-unit id="52690">
        <source>插件组</source>
        <target state="needs-translation">插件组</target>
      </trans-unit>
      <trans-unit id="52692">
        <source>你可以将插件组理解为一个名为 `group` 的特殊插件。</source>
        <target state="needs-translation">你可以将插件组理解为一个名为 `group` 的特殊插件。</target>
      </trans-unit>
      <trans-unit id="52694">
        <source>它的语法与 `plugins` 一致，都是一个包含了插件名称和插件配置的 YAML 对象。</source>
        <target state="needs-translation">它的语法与 `plugins` 一致，都是一个包含了插件名称和插件配置的 YAML 对象。</target>
      </trans-unit>
      <trans-unit id="52696">
        <source>使用插件组不仅能更好地帮助你整理插件，还能批量控制其中插件的行为。</source>
        <target state="needs-translation">使用插件组不仅能更好地帮助你整理插件，还能批量控制其中插件的行为。</target>
      </trans-unit>
      <trans-unit id="52698">
        <source>插件组也支持嵌套，例如：</source>
        <target state="needs-translation">插件组也支持嵌套，例如：</target>
      </trans-unit>
      <trans-unit id="52700">
        <source>plugins:
  group:official:
    # 一层嵌套插件组下的 help 插件
    help:
    group:console:
      # 两层嵌套插件组下的 market 插件
      market:</source>
        <target state="needs-translation">plugins:
  group:official:
    # 一层嵌套插件组下的 help 插件
    help:
    group:console:
      # 两层嵌套插件组下的 market 插件
      market:</target>
      </trans-unit>
      <trans-unit id="52702">
        <source>元信息</source>
        <target state="needs-translation">元信息</target>
      </trans-unit>
      <trans-unit id="52704">
        <source>一些以 `$` 开头的属性会记录插件和插件组的元信息。</source>
        <target state="needs-translation">一些以 `$` 开头的属性会记录插件和插件组的元信息。</target>
      </trans-unit>
      <trans-unit id="52706">
        <source>例如：</source>
        <target state="needs-translation">例如：</target>
      </trans-unit>
      <trans-unit id="52708">
        <source>plugins:
  group:console:
    # 在控制台中折叠该插件组
    $collapsed: true
    status:
      # 仅对于 telegram 平台启用该插件
      $filter:
        $eq:
          - $: platform
          - telegram</source>
        <target state="needs-translation">plugins:
  group:console:
    # 在控制台中折叠该插件组
    $collapsed: true
    status:
      # 仅对于 telegram 平台启用该插件
      $filter:
        $eq:
          - $: platform
          - telegram</target>
      </trans-unit>
      <trans-unit id="52710">
        <source>修改配置文件</source>
        <target state="needs-translation">修改配置文件</target>
      </trans-unit>
      <trans-unit id="52712">
        <source>如果你不了解 YAML 的语法，请不要随意修改配置文件，否则将可能导致 Koishi 应用无法运行。</source>
        <target state="needs-translation">如果你不了解 YAML 的语法，请不要随意修改配置文件，否则将可能导致 Koishi 应用无法运行。</target>
      </trans-unit>
      <trans-unit id="52714">
        <source>你可以在 [这篇教程](https://www.runoob.com/w3cnote/yaml-intro.html) 中学习 YAML 的语法。</source>
        <target state="needs-translation">你可以在 [这篇教程](https://www.runoob.com/w3cnote/yaml-intro.html) 中学习 YAML 的语法。</target>
      </trans-unit>
      <trans-unit id="52716">
        <source>当你启动 Koishi 应用时，Koishi 会读取上述配置文件并加载所需的插件。</source>
        <target state="needs-translation">当你启动 Koishi 应用时，Koishi 会读取上述配置文件并加载所需的插件。</target>
      </trans-unit>
      <trans-unit id="52718">
        <source>反过来，如果你想调整 Koishi 及其插件的行为，你就需要修改这个配置文件。</source>
        <target state="needs-translation">反过来，如果你想调整 Koishi 及其插件的行为，你就需要修改这个配置文件。</target>
      </trans-unit>
      <trans-unit id="52720">
        <source>如果你使用的是模板项目，你需要手动修改它并重新启动 Koishi 应用；如果你使用的是启动器，则你可以直接在「插件配置」中进行调整，Koishi 会自动将这些改动写入配置文件。</source>
        <target state="needs-translation">如果你使用的是模板项目，你需要手动修改它并重新启动 Koishi 应用；如果你使用的是启动器，则你可以直接在「插件配置」中进行调整，Koishi 会自动将这些改动写入配置文件。</target>
      </trans-unit>
      <trans-unit id="52722">
        <source>事实上你会发现，配置文件的结构与「插件配置」页面基本是一致的。</source>
        <target state="needs-translation">事实上你会发现，配置文件的结构与「插件配置」页面基本是一致的。</target>
      </trans-unit>
      <trans-unit id="52724">
        <source>绝大多数的功能都可以通过「插件配置」页面来完成，但目前尚有一些功能没有做好相应的交互界面，这时你仍然需要手动修改配置文件。</source>
        <target state="needs-translation">绝大多数的功能都可以通过「插件配置」页面来完成，但目前尚有一些功能没有做好相应的交互界面，这时你仍然需要手动修改配置文件。</target>
      </trans-unit>
      <trans-unit id="52726">
        <source>具体的步骤与模板项目类似：</source>
        <target state="needs-translation">具体的步骤与模板项目类似：</target>
      </trans-unit>
      <trans-unit id="52728">
        <source>关闭当前 Koishi 应用</source>
        <target state="needs-translation">关闭当前 Koishi 应用</target>
      </trans-unit>
      <trans-unit id="52730">
        <source>在 [应用目录](#应用目录) 下找到配置文件并进行编辑</source>
        <target state="needs-translation">在 [应用目录](#应用目录) 下找到配置文件并进行编辑</target>
      </trans-unit>
      <trans-unit id="52732">
        <source>保存配置文件后再次启动 Koishi 应用</source>
        <target state="needs-translation">保存配置文件后再次启动 Koishi 应用</target>
      </trans-unit>
      <trans-unit id="52734">
        <source>使用环境变量</source>
        <target state="needs-translation">使用环境变量</target>
      </trans-unit>
      <trans-unit id="52736">
        <source>你可以通过插值语法在配置文件中使用环境变量。</source>
        <target state="needs-translation">你可以通过插值语法在配置文件中使用环境变量。</target>
      </trans-unit>
      <trans-unit id="52738">
        <source>例如：</source>
        <target state="needs-translation">例如：</target>
      </trans-unit>
      <trans-unit id="52740">
        <source>plugins:
  adapter-discord:
    token: ${{ env.DISCORD_TOKEN }}</source>
        <target state="needs-translation">plugins:
  adapter-discord:
    token: ${{ env.DISCORD_TOKEN }}</target>
      </trans-unit>
      <trans-unit id="52742">
        <source>当项目启动时，会将环境变量中的值替换进去。</source>
        <target state="needs-translation">当项目启动时，会将环境变量中的值替换进去。</target>
      </trans-unit>
      <trans-unit id="52744">
        <source>除了系统提供的环境变量外，Koishi 还原生支持 [dotenv](https://github.com/motdotla/dotenv)。</source>
        <target state="needs-translation">除了系统提供的环境变量外，Koishi 还原生支持 [dotenv](https://github.com/motdotla/dotenv)。</target>
      </trans-unit>
      <trans-unit id="63970">
        <source>你可以在当前目录创建一个 `.env.local` 文件，并在里面填写你的环境变量。</source>
        <target state="needs-translation">你可以在当前目录创建一个 `.env.local` 文件，并在里面填写你的环境变量。</target>
      </trans-unit>
      <trans-unit id="52748">
        <source>这个文件已经被包含在 `.gitignore` 中，你可以在其中填写隐私信息 (例如账号密码) 而不用担心被上传到远端。</source>
        <target state="needs-translation">这个文件已经被包含在 `.gitignore` 中，你可以在其中填写隐私信息 (例如账号密码) 而不用担心被上传到远端。</target>
      </trans-unit>
      <trans-unit id="52750">
        <source>例如在上面的例子中你就可以这样写：</source>
        <target state="needs-translation">例如在上面的例子中你就可以这样写：</target>
      </trans-unit>
      <trans-unit id="52752">
        <source>DISCORD_TOKEN = xxx</source>
        <target state="needs-translation">DISCORD_TOKEN = xxx</target>
      </trans-unit>
      <trans-unit id="52754">
        <source>环境变量的另一个作用是条件判断。</source>
        <target state="needs-translation">环境变量的另一个作用是条件判断。</target>
      </trans-unit>
      <trans-unit id="52756">
        <source>例如官方提供的模板项目里：</source>
        <target state="needs-translation">例如官方提供的模板项目里：</target>
      </trans-unit>
      <trans-unit id="52758">
        <source>plugins:
  desktop:
    $if: env.KOISHI_AGENT?.includes('Desktop')</source>
        <target state="needs-translation">plugins:
  desktop:
    $if: env.KOISHI_AGENT?.includes('Desktop')</target>
      </trans-unit>
      <trans-unit id="52760">
        <source>这样一来，只有当你使用桌面客户端启动 Koishi 时，这个插件才会被启用。</source>
        <target state="needs-translation">这样一来，只有当你使用桌面客户端启动 Koishi 时，这个插件才会被启用。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1570" original="/[koishijs.docs] main/zh-CN/guide/develop/publish.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="52762">
        <source>发布插件</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">釋出外掛</target>
      </trans-unit>
      <trans-unit id="52764">
        <source>为了让别人更方便地使用你编写的插件，你需要将其作为一个 npm 包进行发布。</source>
        <target state="needs-translation">为了让别人更方便地使用你编写的插件，你需要将其作为一个 npm 包进行发布。</target>
      </trans-unit>
      <trans-unit id="52766">
        <source>只需满足一定的规范，你的插件就能显示在 [插件市场](../../market/) 中，其他人可以通过控制台来安装它。</source>
        <target state="needs-translation">只需满足一定的规范，你的插件就能显示在 [插件市场](../../market/) 中，其他人可以通过控制台来安装它。</target>
      </trans-unit>
      <trans-unit id="52768">
        <source>本节中介绍的命令行都需要在 [应用目录](./config.md#应用目录) 下运行。</source>
        <target state="needs-translation">本节中介绍的命令行都需要在 [应用目录](./config.md#应用目录) 下运行。</target>
      </trans-unit>
      <trans-unit id="52770">
        <source>准备工作</source>
        <target state="needs-translation">准备工作</target>
      </trans-unit>
      <trans-unit id="52772">
        <source>首先让我们关注插件目录中的 `package.json` 文件。</source>
        <target state="needs-translation">首先让我们关注插件目录中的 `package.json` 文件。</target>
      </trans-unit>
      <trans-unit id="52774">
        <source>这个文件非常重要，它包含了要发布插件的一切元信息。</source>
        <target state="needs-translation">这个文件非常重要，它包含了要发布插件的一切元信息。</target>
      </trans-unit>
      <trans-unit id="52776">
        <source>root
├── plugins
│   └── example
│       ├── src
│       │   └── index.ts
│       └── package.json        # 你应该修改这里
├── koishi.yml
└── package.json                # 而不是这里</source>
        <target state="needs-translation">root
├── plugins
│   └── example
│       ├── src
│       │   └── index.ts
│       └── package.json        # 你应该修改这里
├── koishi.yml
└── package.json                # 而不是这里</target>
      </trans-unit>
      <trans-unit id="52778">
        <source>请注意 `package.json` 文件不是唯一的，它在应用目录和每个插件目录都会存在。</source>
        <target state="needs-translation">请注意 `package.json` 文件不是唯一的，它在应用目录和每个插件目录都会存在。</target>
      </trans-unit>
      <trans-unit id="52780">
        <source>请确保你修改了正确的文件。</source>
        <target state="needs-translation">请确保你修改了正确的文件。</target>
      </trans-unit>
      <trans-unit id="52782">
        <source>打开上述文件，你会看到它大概长这样：</source>
        <target state="needs-translation">打开上述文件，你会看到它大概长这样：</target>
      </trans-unit>
      <trans-unit id="52784">
        <source>{
  &quot;name&quot;: &quot;koishi-plugin-example&quot;,
  &quot;version&quot;: &quot;1.0.0&quot;,
  // ……
}</source>
        <target state="needs-translation">{
  &quot;name&quot;: &quot;koishi-plugin-example&quot;,
  &quot;version&quot;: &quot;1.0.0&quot;,
  // ……
}</target>
      </trans-unit>
      <trans-unit id="52786">
        <source>其中最重要的属性有两个：`name` 是要发布的包名，`version` 是当前版本号。</source>
        <target state="needs-translation">其中最重要的属性有两个：`name` 是要发布的包名，`version` 是当前版本号。</target>
      </trans-unit>
      <trans-unit id="52788">
        <source>可以看到，这里的包名相比实际在插件市场中看到的插件名多了一个 `koishi-plugin-` 的前缀，这使得我们很容易区分 Koishi 插件与其他 npm 包，同时也方便了用户安装和配置插件。</source>
        <target state="needs-translation">可以看到，这里的包名相比实际在插件市场中看到的插件名多了一个 `koishi-plugin-` 的前缀，这使得我们很容易区分 Koishi 插件与其他 npm 包，同时也方便了用户安装和配置插件。</target>
      </trans-unit>
      <trans-unit id="52790">
        <source>请注意：包名和版本号都是唯一的：包名不能与其他已经发布的包相同，而同一个包的同一个版本号也只能发布一次。</source>
        <target state="needs-translation">请注意：包名和版本号都是唯一的：包名不能与其他已经发布的包相同，而同一个包的同一个版本号也只能发布一次。</target>
      </trans-unit>
      <trans-unit id="52792">
        <source>如果出现了包名冲突或版本号冲突，则会在之后的发布流程中出现错误提示。</source>
        <target state="needs-translation">如果出现了包名冲突或版本号冲突，则会在之后的发布流程中出现错误提示。</target>
      </trans-unit>
      <trans-unit id="52794">
        <source>你可以自行根据错误提示更改包名或更新插件版本。</source>
        <target state="needs-translation">你可以自行根据错误提示更改包名或更新插件版本。</target>
      </trans-unit>
      <trans-unit id="52796">
        <source>补充更多信息</source>
        <target state="needs-translation">补充更多信息</target>
      </trans-unit>
      <trans-unit id="52798">
        <source>除了包名和版本号以外，`package.json` 还包括了插件的依赖、描述、贡献者、许可证、关键词等更多信息。</source>
        <target state="needs-translation">除了包名和版本号以外，`package.json` 还包括了插件的依赖、描述、贡献者、许可证、关键词等更多信息。</target>
      </trans-unit>
      <trans-unit id="52800">
        <source>你并不需要一上来就把所有信息都填写完整，因为你可以随后再进行修改。</source>
        <target state="needs-translation">你并不需要一上来就把所有信息都填写完整，因为你可以随后再进行修改。</target>
      </trans-unit>
      <trans-unit id="52802">
        <source>但请别忘了，这些内容也是插件的一部分，修改完成后别忘了 [更新版本](#更新插件版本) 并 [再次发布](#发布插件)。</source>
        <target state="needs-translation">但请别忘了，这些内容也是插件的一部分，修改完成后别忘了 [更新版本](#更新插件版本) 并 [再次发布](#发布插件)。</target>
      </trans-unit>
      <trans-unit id="52804">
        <source>准入条件</source>
        <target state="needs-translation">准入条件</target>
      </trans-unit>
      <trans-unit id="52806">
        <source>使用模板项目创建的插件一定是符合要求的，因此你可以跳过这一节。</source>
        <target state="needs-translation">使用模板项目创建的插件一定是符合要求的，因此你可以跳过这一节。</target>
      </trans-unit>
      <trans-unit id="52808">
        <source>要想显示在插件市场中，插件的 `package.json` 需要满足以下基本要求：</source>
        <target state="needs-translation">要想显示在插件市场中，插件的 `package.json` 需要满足以下基本要求：</target>
      </trans-unit>
      <trans-unit id="52810">
        <source>[`name`](https://docs.npmjs.com/cli/v8/configuring-npm/package-json#name) 必须符合以下格式之一：</source>
        <target state="needs-translation">[`name`](https://docs.npmjs.com/cli/v8/configuring-npm/package-json#name) 必须符合以下格式之一：</target>
      </trans-unit>
      <trans-unit id="52812">
        <source>`koishi-plugin-*`</source>
        <target state="needs-translation">`koishi-plugin-*`</target>
      </trans-unit>
      <trans-unit id="52814">
        <source>`@bar/koishi-plugin-*`</source>
        <target state="needs-translation">`@bar/koishi-plugin-*`</target>
      </trans-unit>
      <trans-unit id="52816">
        <source>`@koishijs/plugin-*` (官方插件)</source>
        <target state="needs-translation">`@koishijs/plugin-*` (官方插件)</target>
      </trans-unit>
      <trans-unit id="52818">
        <source>其中 `*` 是由数字、小写字母和连字符 `-` 组成的字符串</source>
        <target state="needs-translation">其中 `*` 是由数字、小写字母和连字符 `-` 组成的字符串</target>
      </trans-unit>
      <trans-unit id="52820">
        <source>[`name`](https://docs.npmjs.com/cli/v10/configuring-npm/package-json#name) 不能与已发布的插件重复或相似</source>
        <target state="needs-translation">[`name`](https://docs.npmjs.com/cli/v10/configuring-npm/package-json#name) 不能与已发布的插件重复或相似</target>
      </trans-unit>
      <trans-unit id="52822">
        <source>[`version`](https://docs.npmjs.com/cli/v10/configuring-npm/package-json#version) 应当符合 [语义化版本](https://semver.org/lang/zh-CN/) (通常从 `1.0.0` 开始)</source>
        <target state="needs-translation">[`version`](https://docs.npmjs.com/cli/v10/configuring-npm/package-json#version) 应当符合 [语义化版本](https://semver.org/lang/zh-CN/) (通常从 `1.0.0` 开始)</target>
      </trans-unit>
      <trans-unit id="52824">
        <source>[`peerDependencies`](https://docs.npmjs.com/cli/v10/configuring-npm/package-json#peerdependencies) 必须包含 `koishi`</source>
        <target state="needs-translation">[`peerDependencies`](https://docs.npmjs.com/cli/v10/configuring-npm/package-json#peerdependencies) 必须包含 `koishi`</target>
      </trans-unit>
      <trans-unit id="52826">
        <source>不能声明 [`private`](https://docs.npmjs.com/cli/v10/configuring-npm/package-json#private) 为 `true` (否则你的插件无法发布)</source>
        <target state="needs-translation">不能声明 [`private`](https://docs.npmjs.com/cli/v10/configuring-npm/package-json#private) 为 `true` (否则你的插件无法发布)</target>
      </trans-unit>
      <trans-unit id="63720">
        <source>最新版本不能被 [弃用](https://docs.npmjs.com/deprecating-and-undeprecating-packages-or-package-versions)</source>
        <target state="needs-translation">最新版本不能被 [弃用](https://docs.npmjs.com/deprecating-and-undeprecating-packages-or-package-versions)</target>
      </trans-unit>
      <trans-unit id="52830">
        <source>一个符合上述标准的示例：</source>
        <target state="needs-translation">一个符合上述标准的示例：</target>
      </trans-unit>
      <trans-unit id="52832">
        <source>{
  &quot;name&quot;: &quot;koishi-plugin-example&quot;,
  &quot;version&quot;: &quot;1.0.0&quot;,
  &quot;peerDependencies&quot;: {
    &quot;koishi&quot;: &quot;^4.3.2&quot;
  }
}</source>
        <target state="needs-translation">{
  &quot;name&quot;: &quot;koishi-plugin-example&quot;,
  &quot;version&quot;: &quot;1.0.0&quot;,
  &quot;peerDependencies&quot;: {
    &quot;koishi&quot;: &quot;^4.3.2&quot;
  }
}</target>
      </trans-unit>
      <trans-unit id="52834">
        <source>添加相关信息</source>
        <target state="needs-translation">添加相关信息</target>
      </trans-unit>
      <trans-unit id="52836">
        <source>除去上面的基本要求外，`package.json` 中还有一些字段能帮助显示插件的相关信息。</source>
        <target state="needs-translation">除去上面的基本要求外，`package.json` 中还有一些字段能帮助显示插件的相关信息。</target>
      </trans-unit>
      <trans-unit id="52838">
        <source>{
  &quot;name&quot;: &quot;koishi-plugin-example&quot;,
  &quot;version&quot;: &quot;1.0.0&quot;,
  &quot;contributors&quot;: [                         // 贡献者
    &quot;Alice &lt;alice@gmail.com&gt;&quot;,
    &quot;Bob &lt;bob@gmail.com&gt;&quot;
  ],
  &quot;license&quot;: &quot;MIT&quot;,                         // 许可证
  &quot;homepage&quot;: &quot;https://example.com&quot;,        // 主页
  &quot;repository&quot;: {                           // 源码仓库
    &quot;type&quot;: &quot;git&quot;,
    &quot;url&quot;: &quot;git+https://github.com/alice/koishi-plugin-example.git&quot;
  },
  &quot;keywords&quot;: [&quot;example&quot;],                  // 关键词
  &quot;peerDependencies&quot;: {
    &quot;koishi&quot;: &quot;^4.3.2&quot;
  }
}</source>
        <target state="needs-translation">{
  &quot;name&quot;: &quot;koishi-plugin-example&quot;,
  &quot;version&quot;: &quot;1.0.0&quot;,
  &quot;contributors&quot;: [                         // 贡献者
    &quot;Alice &lt;alice@gmail.com&gt;&quot;,
    &quot;Bob &lt;bob@gmail.com&gt;&quot;
  ],
  &quot;license&quot;: &quot;MIT&quot;,                         // 许可证
  &quot;homepage&quot;: &quot;https://example.com&quot;,        // 主页
  &quot;repository&quot;: {                           // 源码仓库
    &quot;type&quot;: &quot;git&quot;,
    &quot;url&quot;: &quot;git+https://github.com/alice/koishi-plugin-example.git&quot;
  },
  &quot;keywords&quot;: [&quot;example&quot;],                  // 关键词
  &quot;peerDependencies&quot;: {
    &quot;koishi&quot;: &quot;^4.3.2&quot;
  }
}</target>
      </trans-unit>
      <trans-unit id="52840">
        <source>**contributors:** 插件维护者，应该是一个数组，其中的元素通常使用 `名字 &lt;邮箱&gt;` 的格式</source>
        <target state="needs-translation">**contributors:** 插件维护者，应该是一个数组，其中的元素通常使用 `名字 &lt;邮箱&gt;` 的格式</target>
      </trans-unit>
      <trans-unit id="52842">
        <source>**license:** 插件许可证，你可以在 [这里](https://choosealicense.com/licenses/) 了解各种许可证的详细信息</source>
        <target state="needs-translation">**license:** 插件许可证，你可以在 [这里](https://choosealicense.com/licenses/) 了解各种许可证的详细信息</target>
      </trans-unit>
      <trans-unit id="52844">
        <source>**homepage:** 插件主页，可以是一个网址 (比如你的 GitHub 项目地址)</source>
        <target state="needs-translation">**homepage:** 插件主页，可以是一个网址 (比如你的 GitHub 项目地址)</target>
      </trans-unit>
      <trans-unit id="52846">
        <source>**repository:** 插件源码仓库，应该是一个对象，其中 `type` 字段指定仓库类型，`url` 字段指定仓库地址</source>
        <target state="needs-translation">**repository:** 插件源码仓库，应该是一个对象，其中 `type` 字段指定仓库类型，`url` 字段指定仓库地址</target>
      </trans-unit>
      <trans-unit id="52848">
        <source>**keywords:** 插件关键词，应该是一个字符串数组，会用于插件市场中的搜索功能</source>
        <target state="needs-translation">**keywords:** 插件关键词，应该是一个字符串数组，会用于插件市场中的搜索功能</target>
      </trans-unit>
      <trans-unit id="52850">
        <source>`package.json` 中还有一些字段没有在这里提及，如果你对此感兴趣，可以前往 [npmjs.com](https://docs.npmjs.com/files/package.json/) 查看文档。</source>
        <target state="needs-translation">`package.json` 中还有一些字段没有在这里提及，如果你对此感兴趣，可以前往 [npmjs.com](https://docs.npmjs.com/files/package.json/) 查看文档。</target>
      </trans-unit>
      <trans-unit id="52852">
        <source>`koishi` 字段</source>
        <target state="needs-translation">`koishi` 字段</target>
      </trans-unit>
      <trans-unit id="52854">
        <source>除此以外，我们还提供了一个额外的 `koishi` 字段，用于指定与 Koishi 相关的信息。</source>
        <target state="needs-translation">除此以外，我们还提供了一个额外的 `koishi` 字段，用于指定与 Koishi 相关的信息。</target>
      </trans-unit>
      <trans-unit id="65170">
        <source>{
  &quot;name&quot;: &quot;koishi-plugin-dialogue&quot;,
  &quot;version&quot;: &quot;1.0.0&quot;,
  &quot;peerDependencies&quot;: {
    &quot;koishi&quot;: &quot;^4.3.2&quot;
  },
  &quot;koishi&quot;: {
    &quot;description&quot;: {                        // 不同语言的插件描述
      &quot;en&quot;: &quot;English Description&quot;,
      &quot;zh&quot;: &quot;中文描述&quot;
    },
    &quot;service&quot;: {
      &quot;required&quot;: [&quot;database&quot;],             // 必需的服务
      &quot;optional&quot;: [&quot;assets&quot;],               // 可选的服务
      &quot;implements&quot;: [&quot;dialogue&quot;],           // 实现的服务
    },
  }
}</source>
        <target state="needs-translation">{
  &quot;name&quot;: &quot;koishi-plugin-dialogue&quot;,
  &quot;version&quot;: &quot;1.0.0&quot;,
  &quot;peerDependencies&quot;: {
    &quot;koishi&quot;: &quot;^4.3.2&quot;
  },
  &quot;koishi&quot;: {
    &quot;description&quot;: {                        // 不同语言的插件描述
      &quot;en&quot;: &quot;English Description&quot;,
      &quot;zh&quot;: &quot;中文描述&quot;
    },
    &quot;service&quot;: {
      &quot;required&quot;: [&quot;database&quot;],             // 必需的服务
      &quot;optional&quot;: [&quot;assets&quot;],               // 可选的服务
      &quot;implements&quot;: [&quot;dialogue&quot;],           // 实现的服务
    },
  }
}</target>
      </trans-unit>
      <trans-unit id="52858">
        <source>**description:** 插件描述，应该是一个对象，其中的键代表语言名，值是对应语言下的描述</source>
        <target state="needs-translation">**description:** 插件描述，应该是一个对象，其中的键代表语言名，值是对应语言下的描述</target>
      </trans-unit>
      <trans-unit id="65172">
        <source>**service:** 插件的服务相关信息，详情请参见 [服务与依赖](../plugin/service.html#package-json)</source>
        <target state="needs-translation">**service:** 插件的服务相关信息，详情请参见 [服务与依赖](../plugin/service.html#package-json)</target>
      </trans-unit>
      <trans-unit id="52866">
        <source>**preview:** 配置为 `true` 可以让插件显示为「开发中」状态</source>
        <target state="needs-translation">**preview:** 配置为 `true` 可以让插件显示为「开发中」状态</target>
      </trans-unit>
      <trans-unit id="52868">
        <source>**hidden:** 配置为 `true` 可以让插件市场中不显示该插件 (通常情况下你不需要这么做)</source>
        <target state="needs-translation">**hidden:** 配置为 `true` 可以让插件市场中不显示该插件 (通常情况下你不需要这么做)</target>
      </trans-unit>
      <trans-unit id="52870">
        <source>此外，还有一些字段与 [Koishi Online](../../cookbook/practice/online.md) 的部署流程相关 (如 `browser`, `exports` 等)。</source>
        <target state="needs-translation">此外，还有一些字段与 [Koishi Online](../../cookbook/practice/online.md) 的部署流程相关 (如 `browser`, `exports` 等)。</target>
      </trans-unit>
      <trans-unit id="52872">
        <source>由于不影响主线开发，你可以稍后再进行了解。</source>
        <target state="needs-translation">由于不影响主线开发，你可以稍后再进行了解。</target>
      </trans-unit>
      <trans-unit id="52874">
        <source>发布插件</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">釋出外掛</target>
      </trans-unit>
      <trans-unit id="65422">
        <source>编辑完上面的清单文件并 [构建源代码](./workspace.md#build) 后，你就可以公开发布你的插件了。</source>
        <target state="needs-translation">编辑完上面的清单文件并 [构建源代码](./workspace.md#build) 后，你就可以公开发布你的插件了。</target>
      </trans-unit>
      <trans-unit id="52878">
        <source>code</source>
        <target state="needs-translation">code</target>
      </trans-unit>
      <trans-unit id="52880">
        <source>npm run pub [...name]</source>
        <target state="needs-translation">npm run pub [...name]</target>
      </trans-unit>
      <trans-unit id="52882">
        <source>yarn pub [...name]</source>
        <target state="needs-translation">yarn pub [...name]</target>
      </trans-unit>
      <trans-unit id="52884">
        <source>**name:** 要发布的插件列表，缺省时表示全部 (此处 `name` 不包含 `koishi-plugin-` 前缀，而是你的工作区目录名)</source>
        <target state="needs-translation">**name:** 要发布的插件列表，缺省时表示全部 (此处 `name` 不包含 `koishi-plugin-` 前缀，而是你的工作区目录名)</target>
      </trans-unit>
      <trans-unit id="52886">
        <source>这将发布所有版本号发生变动的插件。</source>
        <target state="needs-translation">这将发布所有版本号发生变动的插件。</target>
      </trans-unit>
      <trans-unit id="52888">
        <source>从插件成功发布到进插件市场需要一定的时间 (通常在 15 分钟内)，请耐心等待。</source>
        <target state="needs-translation">从插件成功发布到进插件市场需要一定的时间 (通常在 15 分钟内)，请耐心等待。</target>
      </trans-unit>
      <trans-unit id="52890">
        <source>:::: tip
如果你配置了国内镜像，你可能会遇到以下的错误提示：</source>
        <target state="needs-translation">:::: tip
如果你配置了国内镜像，你可能会遇到以下的错误提示：</target>
      </trans-unit>
      <trans-unit id="52892">
        <source>No token found and can't prompt for login when running with --non-interactive.</source>
        <target state="needs-translation">No token found and can't prompt for login when running with --non-interactive.</target>
      </trans-unit>
      <trans-unit id="52894">
        <source>此时你需要在发布时使用官方镜像，具体操作如下：</source>
        <target state="needs-translation">此时你需要在发布时使用官方镜像，具体操作如下：</target>
      </trans-unit>
      <trans-unit id="52896">
        <source>code</source>
        <target state="needs-translation">code</target>
      </trans-unit>
      <trans-unit id="52898">
        <source>npm run pub [...name] -- --registry https://registry.npmjs.org</source>
        <target state="needs-translation">npm run pub [...name] -- --registry https://registry.npmjs.org</target>
      </trans-unit>
      <trans-unit id="52900">
        <source>yarn pub [...name] --registry https://registry.yarnpkg.com</source>
        <target state="needs-translation">yarn pub [...name] --registry https://registry.yarnpkg.com</target>
      </trans-unit>
      <trans-unit id="52902">
        <source>对于 Yarn v2 及以上版本，你还可以分别针对发布和安装设置不同的镜像：</source>
        <target state="needs-translation">对于 Yarn v2 及以上版本，你还可以分别针对发布和安装设置不同的镜像：</target>
      </trans-unit>
      <trans-unit id="52904">
        <source>code</source>
        <target state="needs-translation">code</target>
      </trans-unit>
      <trans-unit id="52906">
        <source># 安装时使用国内镜像
yarn config set npmRegistryServer https://registry.npmmirror.com
# 发布时使用官方镜像
yarn config set npmPublishRegistry https://registry.yarnpkg.com</source>
        <target state="needs-translation"># 安装时使用国内镜像
yarn config set npmRegistryServer https://registry.npmmirror.com
# 发布时使用官方镜像
yarn config set npmPublishRegistry https://registry.yarnpkg.com</target>
      </trans-unit>
      <trans-unit id="52908">
        <source>:::
::::</source>
        <target state="needs-translation">:::
::::</target>
      </trans-unit>
      <trans-unit id="52910">
        <source>更新插件版本</source>
        <target state="needs-translation">更新插件版本</target>
      </trans-unit>
      <trans-unit id="52912">
        <source>初始创建的插件版本号为 `1.0.0`。</source>
        <target state="needs-translation">初始创建的插件版本号为 `1.0.0`。</target>
      </trans-unit>
      <trans-unit id="52914">
        <source>当你修改过插件后，你需要更新版本号才能重新发布。</source>
        <target state="needs-translation">当你修改过插件后，你需要更新版本号才能重新发布。</target>
      </trans-unit>
      <trans-unit id="52916">
        <source>在应用目录运行下面的命令以更新版本号：</source>
        <target state="needs-translation">在应用目录运行下面的命令以更新版本号：</target>
      </trans-unit>
      <trans-unit id="52918">
        <source>code</source>
        <target state="needs-translation">code</target>
      </trans-unit>
      <trans-unit id="52920">
        <source>npm run bump [...name] -- [-1|-2|-3|-p|-v &lt;ver&gt;] [-r]</source>
        <target state="needs-translation">npm run bump [...name] -- [-1|-2|-3|-p|-v &lt;ver&gt;] [-r]</target>
      </trans-unit>
      <trans-unit id="52922">
        <source>yarn bump [...name] [-1|-2|-3|-p|-v &lt;ver&gt;] [-r]</source>
        <target state="needs-translation">yarn bump [...name] [-1|-2|-3|-p|-v &lt;ver&gt;] [-r]</target>
      </trans-unit>
      <trans-unit id="52924">
        <source>**name:** 要更新的插件列表，不能为空</source>
        <target state="needs-translation">**name:** 要更新的插件列表，不能为空</target>
      </trans-unit>
      <trans-unit id="52926">
        <source>**-1, --major:** 跳到下一个大版本，例如 `3.1.4` -&gt; `4.0.0`</source>
        <target state="needs-translation">**-1, --major:** 跳到下一个大版本，例如 `3.1.4` -&gt; `4.0.0`</target>
      </trans-unit>
      <trans-unit id="52928">
        <source>**-2, --minor:** 跳到下一个中版本，例如 `3.1.4` -&gt; `3.2.0`</source>
        <target state="needs-translation">**-2, --minor:** 跳到下一个中版本，例如 `3.1.4` -&gt; `3.2.0`</target>
      </trans-unit>
      <trans-unit id="52930">
        <source>**-3, --patch:** 跳到下一个小版本，例如 `3.1.4` -&gt; `3.1.5`</source>
        <target state="needs-translation">**-3, --patch:** 跳到下一个小版本，例如 `3.1.4` -&gt; `3.1.5`</target>
      </trans-unit>
      <trans-unit id="52932">
        <source>**-p, --prerelease:** 跳到下一个预览版本，具体行为如下</source>
        <target state="needs-translation">**-p, --prerelease:** 跳到下一个预览版本，具体行为如下</target>
      </trans-unit>
      <trans-unit id="52934">
        <source>如果当前版本是 `alpha.x`，则跳到 `beta.0`</source>
        <target state="needs-translation">如果当前版本是 `alpha.x`，则跳到 `beta.0`</target>
      </trans-unit>
      <trans-unit id="52936">
        <source>如果当前版本是 `beta.x`，则跳到 `rc.0`</source>
        <target state="needs-translation">如果当前版本是 `beta.x`，则跳到 `rc.0`</target>
      </trans-unit>
      <trans-unit id="52938">
        <source>如果当前版本是 `rc.x`，则移除 prerelease 部分</source>
        <target state="needs-translation">如果当前版本是 `rc.x`，则移除 prerelease 部分</target>
      </trans-unit>
      <trans-unit id="52940">
        <source>其他情况下，跳到下一个大版本的 `alpha.0`</source>
        <target state="needs-translation">其他情况下，跳到下一个大版本的 `alpha.0`</target>
      </trans-unit>
      <trans-unit id="52942">
        <source>**-v, --version:** 设置具体的版本号</source>
        <target state="needs-translation">**-v, --version:** 设置具体的版本号</target>
      </trans-unit>
      <trans-unit id="52944">
        <source>**-r, --recursive:** 递归更新依赖版本</source>
        <target state="needs-translation">**-r, --recursive:** 递归更新依赖版本</target>
      </trans-unit>
      <trans-unit id="52946">
        <source>缺省情况：按照当前版本的最后一位递增</source>
        <target state="needs-translation">缺省情况：按照当前版本的最后一位递增</target>
      </trans-unit>
      <trans-unit id="52948">
        <source>当进行此操作时，其他相关插件的依赖版本也会同步更新，确保所有工作区内依赖的插件版本一致。</source>
        <target state="needs-translation">当进行此操作时，其他相关插件的依赖版本也会同步更新，确保所有工作区内依赖的插件版本一致。</target>
      </trans-unit>
      <trans-unit id="52950">
        <source>进一步，如果你希望更新了依赖版本的插件也同时更新自身的版本，那么可以附加 `-r, --recursive` 选项。</source>
        <target state="needs-translation">进一步，如果你希望更新了依赖版本的插件也同时更新自身的版本，那么可以附加 `-r, --recursive` 选项。</target>
      </trans-unit>
      <trans-unit id="63952">
        <source>弃用插件 {#deprecate}</source>
        <target state="needs-translation">弃用插件 {#deprecate}</target>
      </trans-unit>
      <trans-unit id="63724">
        <source>如果你不再维护某个插件，或者你希望更换一个名字重新发布，那么你可以弃用该插件。</source>
        <target state="needs-translation">如果你不再维护某个插件，或者你希望更换一个名字重新发布，那么你可以弃用该插件。</target>
      </trans-unit>
      <trans-unit id="63726">
        <source>在任意目录运行下面的命令以弃用插件：</source>
        <target state="needs-translation">在任意目录运行下面的命令以弃用插件：</target>
      </trans-unit>
      <trans-unit id="63728">
        <source>npm deprecate &lt;full-name&gt; &lt;message&gt;
# 例如
npm deprecate koishi-plugin-example &quot;this plugin is deprecated&quot;</source>
        <target state="needs-translation">npm deprecate &lt;full-name&gt; &lt;message&gt;
# 例如
npm deprecate koishi-plugin-example &quot;this plugin is deprecated&quot;</target>
      </trans-unit>
      <trans-unit id="63730">
        <source>请注意这里要写出的是完整的包名，而不是插件的目录名。</source>
        <target state="needs-translation">请注意这里要写出的是完整的包名，而不是插件的目录名。</target>
      </trans-unit>
      <trans-unit id="63732">
        <source>你也可以弃用某个特定版本或版本区间 (默认情况下将弃用所有版本)：</source>
        <target state="needs-translation">你也可以弃用某个特定版本或版本区间 (默认情况下将弃用所有版本)：</target>
      </trans-unit>
      <trans-unit id="63954">
        <source>npm deprecate &lt;full-name&gt;[@&lt;version&gt;] &lt;message&gt;</source>
        <target state="needs-translation">npm deprecate &lt;full-name&gt;[@&lt;version&gt;] &lt;message&gt;</target>
      </trans-unit>
      <trans-unit id="63736">
        <source>弃用插件的最新版本后，该插件将不再显示在插件市场中。</source>
        <target state="needs-translation">弃用插件的最新版本后，该插件将不再显示在插件市场中。</target>
      </trans-unit>
      <trans-unit id="63738">
        <source>未来你仍然可以发布新版本，这将使你的插件重新进入插件市场。</source>
        <target state="needs-translation">未来你仍然可以发布新版本，这将使你的插件重新进入插件市场。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1572" original="/[koishijs.docs] main/zh-CN/guide/develop/script.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="52952">
        <source>启动脚本</source>
        <target state="translated">啟動指令碼</target>
      </trans-unit>
      <trans-unit id="52954">
        <source>Koishi 提供了一套命令行工具，用于读取配置文件快速启动应用。</source>
        <target state="needs-translation">Koishi 提供了一套命令行工具，用于读取配置文件快速启动应用。</target>
      </trans-unit>
      <trans-unit id="52956">
        <source>本节中介绍的命令行都需要在 [应用目录](./config.md#应用目录) 下运行。</source>
        <target state="needs-translation">本节中介绍的命令行都需要在 [应用目录](./config.md#应用目录) 下运行。</target>
      </trans-unit>
      <trans-unit id="52958">
        <source>基本用法</source>
        <target state="needs-translation">基本用法</target>
      </trans-unit>
      <trans-unit id="52960">
        <source>我们通常使用 **启动脚本** 来启动 Koishi 应用。</source>
        <target state="needs-translation">我们通常使用 **启动脚本** 来启动 Koishi 应用。</target>
      </trans-unit>
      <trans-unit id="52962">
        <source>打开应用目录下的 `package.json` 文件：</source>
        <target state="needs-translation">打开应用目录下的 `package.json` 文件：</target>
      </trans-unit>
      <trans-unit id="52964">
        <source>{
  &quot;scripts&quot;: {
    &quot;dev&quot;: &quot;cross-env NODE_ENV=development koishi start -r esbuild-register -r yml-register&quot;,
    &quot;start&quot;: &quot;koishi start&quot;
  }
}</source>
        <target state="needs-translation">{
  &quot;scripts&quot;: {
    &quot;dev&quot;: &quot;cross-env NODE_ENV=development koishi start -r esbuild-register -r yml-register&quot;,
    &quot;start&quot;: &quot;koishi start&quot;
  }
}</target>
      </trans-unit>
      <trans-unit id="52966">
        <source>在应用目录运行下面的命令行以启动 Koishi 应用：</source>
        <target state="needs-translation">在应用目录运行下面的命令行以启动 Koishi 应用：</target>
      </trans-unit>
      <trans-unit id="52968">
        <source>code</source>
        <target state="needs-translation">code</target>
      </trans-unit>
      <trans-unit id="52970">
        <source>npm run start</source>
        <target state="needs-translation">npm run start</target>
      </trans-unit>
      <trans-unit id="52972">
        <source>yarn start</source>
        <target state="needs-translation">yarn start</target>
      </trans-unit>
      <trans-unit id="52974">
        <source>在本节的后续部分，我们会介绍上述启动脚本的更多参数。</source>
        <target state="needs-translation">在本节的后续部分，我们会介绍上述启动脚本的更多参数。</target>
      </trans-unit>
      <trans-unit id="52976">
        <source>无论你做何改动，你都可以使用上面的命令行来快速启动。</source>
        <target state="needs-translation">无论你做何改动，你都可以使用上面的命令行来快速启动。</target>
      </trans-unit>
      <trans-unit id="52978">
        <source>这也是启动脚本的意义所在。</source>
        <target state="needs-translation">这也是启动脚本的意义所在。</target>
      </trans-unit>
      <trans-unit id="52980">
        <source>启动参数</source>
        <target state="needs-translation">启动参数</target>
      </trans-unit>
      <trans-unit id="52982">
        <source>启动脚本支持 Node.js 的 [命令行参数](https://nodejs.org/api/cli.html)。</source>
        <target state="needs-translation">启动脚本支持 Node.js 的 [命令行参数](https://nodejs.org/api/cli.html)。</target>
      </trans-unit>
      <trans-unit id="52984">
        <source>例如，上面的 `-r` 对应于 `--require`，它将允许你加载 `.ts` 和 `.yml` 后缀的文件。</source>
        <target state="needs-translation">例如，上面的 `-r` 对应于 `--require`，它将允许你加载 `.ts` 和 `.yml` 后缀的文件。</target>
      </trans-unit>
      <trans-unit id="52986">
        <source>除了 Node.js 的命令行参数，Koishi 还提供了一些额外的参数。</source>
        <target state="needs-translation">除了 Node.js 的命令行参数，Koishi 还提供了一些额外的参数。</target>
      </trans-unit>
      <trans-unit id="52988">
        <source>我们将在下面逐一介绍。</source>
        <target state="needs-translation">我们将在下面逐一介绍。</target>
      </trans-unit>
      <trans-unit id="52990">
        <source>自动重启</source>
        <target state="needs-translation">自动重启</target>
      </trans-unit>
      <trans-unit id="52992">
        <source>Koishi 的命令行工具支持自动重启。</source>
        <target state="needs-translation">Koishi 的命令行工具支持自动重启。</target>
      </trans-unit>
      <trans-unit id="52994">
        <source>当运行 Koishi 的进程崩溃时，如果 Koishi 已经启动成功，则监视进程将自动重新启动一个新的进程。</source>
        <target state="needs-translation">当运行 Koishi 的进程崩溃时，如果 Koishi 已经启动成功，则监视进程将自动重新启动一个新的进程。</target>
      </trans-unit>
      <trans-unit id="52996">
        <source>开发模式</source>
        <target state="needs-translation">开发模式</target>
      </trans-unit>
      <trans-unit id="52998">
        <source>除了 `start` 以外，模板项目还准备了名为 `dev` 的开发模式启动脚本。</source>
        <target state="needs-translation">除了 `start` 以外，模板项目还准备了名为 `dev` 的开发模式启动脚本。</target>
      </trans-unit>
      <trans-unit id="53000">
        <source>在应用目录运行下面的命令行可以以开发模式启动应用：</source>
        <target state="needs-translation">在应用目录运行下面的命令行可以以开发模式启动应用：</target>
      </trans-unit>
      <trans-unit id="53002">
        <source>code</source>
        <target state="needs-translation">code</target>
      </trans-unit>
      <trans-unit id="53004">
        <source>npm run dev</source>
        <target state="needs-translation">npm run dev</target>
      </trans-unit>
      <trans-unit id="53006">
        <source>yarn dev</source>
        <target state="needs-translation">yarn dev</target>
      </trans-unit>
      <trans-unit id="53008">
        <source>如你所见，`dev` 相当于在 `start` 指令的基础上添加了额外的参数和环境变量。</source>
        <target state="needs-translation">如你所见，`dev` 相当于在 `start` 指令的基础上添加了额外的参数和环境变量。</target>
      </trans-unit>
      <trans-unit id="53010">
        <source>这些参数为我们启用了额外的特性，而环境变量则能影响插件的部分行为。</source>
        <target state="needs-translation">这些参数为我们启用了额外的特性，而环境变量则能影响插件的部分行为。</target>
      </trans-unit>
      <trans-unit id="53012">
        <source>TypeScript 支持</source>
        <target state="needs-translation">TypeScript 支持</target>
      </trans-unit>
      <trans-unit id="53014">
        <source>Koishi 模板项目原生地支持 TypeScript 开发。</source>
        <target state="needs-translation">Koishi 模板项目原生地支持 TypeScript 开发。</target>
      </trans-unit>
      <trans-unit id="53016">
        <source>上述 `-r esbuild-register` 参数允许我们在运行时直接使用工作区插件的 TypeScript 源代码。</source>
        <target state="needs-translation">上述 `-r esbuild-register` 参数允许我们在运行时直接使用工作区插件的 TypeScript 源代码。</target>
      </trans-unit>
      <trans-unit id="53018">
        <source>你也可以自行扩展更多的后缀名支持。</source>
        <target state="needs-translation">你也可以自行扩展更多的后缀名支持。</target>
      </trans-unit>
      <trans-unit id="53020">
        <source>例如，如果你更喜欢 CoffeeScript，你可以这样修改你的开发脚本为：</source>
        <target state="needs-translation">例如，如果你更喜欢 CoffeeScript，你可以这样修改你的开发脚本为：</target>
      </trans-unit>
      <trans-unit id="53022">
        <source>{
  &quot;scripts&quot;: {
    &quot;dev&quot;: &quot;koishi start -r coffeescript/register&quot;
  },
  &quot;devDependencies&quot;: {
    &quot;coffeescript&quot;: &quot;^2.7.0&quot;
  }
}</source>
        <target state="needs-translation">{
  &quot;scripts&quot;: {
    &quot;dev&quot;: &quot;koishi start -r coffeescript/register&quot;
  },
  &quot;devDependencies&quot;: {
    &quot;coffeescript&quot;: &quot;^2.7.0&quot;
  }
}</target>
      </trans-unit>
      <trans-unit id="53024">
        <source>这样你就可以使用 CoffeeScript 编写你的插件源代码 (当然你还得自行处理构建逻辑)，甚至连配置文件都可以使用 `koishi.coffee` 书写了。</source>
        <target state="needs-translation">这样你就可以使用 CoffeeScript 编写你的插件源代码 (当然你还得自行处理构建逻辑)，甚至连配置文件都可以使用 `koishi.coffee` 书写了。</target>
      </trans-unit>
      <trans-unit id="53026">
        <source>我们并不推荐使用高级语言来编写配置文件，因为动态的配置无法支持环境变量、配置热重载和插件市场等特性。</source>
        <target state="needs-translation">我们并不推荐使用高级语言来编写配置文件，因为动态的配置无法支持环境变量、配置热重载和插件市场等特性。</target>
      </trans-unit>
      <trans-unit id="53028">
        <source>大部分情况下我们建议仅将 `-r` 用于开发目的。</source>
        <target state="needs-translation">大部分情况下我们建议仅将 `-r` 用于开发目的。</target>
      </trans-unit>
      <trans-unit id="67022">
        <source>模块热替换 {#hmr}</source>
        <target state="needs-translation">模块热替换 {#hmr}</target>
      </trans-unit>
      <trans-unit id="53032">
        <source>如果你开发着一个巨大的 Koishi 项目，可能光是加载一遍全部插件就需要好几秒了。</source>
        <target state="needs-translation">如果你开发着一个巨大的 Koishi 项目，可能光是加载一遍全部插件就需要好几秒了。</target>
      </trans-unit>
      <trans-unit id="53034">
        <source>在这种时候，像前端框架一样支持模块热替换就成了一个很棒的主意。</source>
        <target state="needs-translation">在这种时候，像前端框架一样支持模块热替换就成了一个很棒的主意。</target>
      </trans-unit>
      <trans-unit id="53036">
        <source>幸运的是，Koishi 也做到了这一点！</source>
        <target state="needs-translation">幸运的是，Koishi 也做到了这一点！</target>
      </trans-unit>
      <trans-unit id="53038">
        <source>内置插件 @koishijs/plugin-hmr 实现了插件级别的热替换。</source>
        <target state="needs-translation">内置插件 @koishijs/plugin-hmr 实现了插件级别的热替换。</target>
      </trans-unit>
      <trans-unit id="53040">
        <source>每当你修改你的本地文件时，Koishi 就会尝试重载你的插件，并在命令行中提醒你。</source>
        <target state="needs-translation">每当你修改你的本地文件时，Koishi 就会尝试重载你的插件，并在命令行中提醒你。</target>
      </trans-unit>
      <trans-unit id="53042">
        <source>这里的行为也可以在配置文件中进行定制：</source>
        <target state="needs-translation">这里的行为也可以在配置文件中进行定制：</target>
      </trans-unit>
      <trans-unit id="53044">
        <source>plugins:
  group:develop:
    $if: env.NODE_ENV === 'development'
    hmr:
      root: '.'
      # 要忽略的文件列表，支持 glob patterns
      ignore:
        - some-file</source>
        <target state="needs-translation">plugins:
  group:develop:
    $if: env.NODE_ENV === 'development'
    hmr:
      root: '.'
      # 要忽略的文件列表，支持 glob patterns
      ignore:
        - some-file</target>
      </trans-unit>
      <trans-unit id="53046">
        <source>NOSPC: System limit for number of file watchers reached</source>
        <target state="needs-translation">NOSPC: System limit for number of file watchers reached</target>
      </trans-unit>
      <trans-unit id="53048">
        <source>此时你可以使用下面的命令来增加监听数量限制：</source>
        <target state="needs-translation">此时你可以使用下面的命令来增加监听数量限制：</target>
      </trans-unit>
      <trans-unit id="53050">
        <source>echo fs.inotify.max_user_watches=524288 |
sudo tee -a /etc/sysctl.conf &amp;&amp;
sudo sysctl -p</source>
        <target state="needs-translation">echo fs.inotify.max_user_watches=524288 |
sudo tee -a /etc/sysctl.conf &amp;&amp;
sudo sysctl -p</target>
      </trans-unit>
      <trans-unit id="53052">
        <source>另一种方案是只监听部分子路径，例如将 `root` 改为 `external/foo` (其中 `foo` 是你正在开发的插件目录，参见下一节的工作区指南)，这将忽略其他目录下的变化，并依然对你的插件进行热重载。</source>
        <target state="needs-translation">另一种方案是只监听部分子路径，例如将 `root` 改为 `external/foo` (其中 `foo` 是你正在开发的插件目录，参见下一节的工作区指南)，这将忽略其他目录下的变化，并依然对你的插件进行热重载。</target>
      </trans-unit>
      <trans-unit id="53054">
        <source>当你同时开发多个插件时，你也可以将 `root` 改成一个数组来使用。</source>
        <target state="needs-translation">当你同时开发多个插件时，你也可以将 `root` 改成一个数组来使用。</target>
      </trans-unit>
      <trans-unit id="53056">
        <source>:::</source>
        <target state="needs-translation">:::</target>
      </trans-unit>
    </body>
  </file>
  <file id="1574" original="/[koishijs.docs] main/zh-CN/guide/develop/setup.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="53058">
        <source>环境搭建</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">環境搭建</target>
      </trans-unit>
      <trans-unit id="53060">
        <source>本节将介绍推荐的开发环境搭建流程。</source>
        <target state="needs-translation">本节将介绍推荐的开发环境搭建流程。</target>
      </trans-unit>
      <trans-unit id="53062">
        <source>如果某些软件已经安装完成，可以跳过对应的步骤。</source>
        <target state="needs-translation">如果某些软件已经安装完成，可以跳过对应的步骤。</target>
      </trans-unit>
      <trans-unit id="53064">
        <source>注册 npm</source>
        <target state="needs-translation">注册 npm</target>
      </trans-unit>
      <trans-unit id="53066">
        <source>如果你打算发布插件，你还需要注册一个 npm 账号。</source>
        <target state="needs-translation">如果你打算发布插件，你还需要注册一个 npm 账号。</target>
      </trans-unit>
      <trans-unit id="53068">
        <source>这一步非常简单，只需前往这里的 [注册页面](https://www.npmjs.com/signup)。</source>
        <target state="needs-translation">这一步非常简单，只需前往这里的 [注册页面](https://www.npmjs.com/signup)。</target>
      </trans-unit>
      <trans-unit id="53070">
        <source>填写你的用户名、邮箱和密码，勾选同意协议，点击注册即可。</source>
        <target state="needs-translation">填写你的用户名、邮箱和密码，勾选同意协议，点击注册即可。</target>
      </trans-unit>
      <trans-unit id="53072">
        <source>注册完成后，你就可以在命令行中使用 `npm login` 来登录你的账号：</source>
        <target state="needs-translation">注册完成后，你就可以在命令行中使用 `npm login` 来登录你的账号：</target>
      </trans-unit>
      <trans-unit id="53074" translate="no">
        <source>npm login --registry=https://registry.npmjs.org</source>
        <target>npm login --registry=https://registry.npmjs.org</target>
      </trans-unit>
      <trans-unit id="53076">
        <source>版本控制</source>
        <target state="needs-translation">版本控制</target>
      </trans-unit>
      <trans-unit id="53078">
        <source>我们强烈推荐使用版本控制系统 (VCS) 来管理你的代码。</source>
        <target state="needs-translation">我们强烈推荐使用版本控制系统 (VCS) 来管理你的代码。</target>
      </trans-unit>
      <trans-unit id="53080">
        <source>这一方面允许你在任何时候回退到之前的版本，另一方面也能让你与其他开发者协作。</source>
        <target state="needs-translation">这一方面允许你在任何时候回退到之前的版本，另一方面也能让你与其他开发者协作。</target>
      </trans-unit>
      <trans-unit id="53082">
        <source>安装 Git</source>
        <target state="needs-translation">安装 Git</target>
      </trans-unit>
      <trans-unit id="53084">
        <source>Git 是最普遍使用的版本控制工具。</source>
        <target state="needs-translation">Git 是最普遍使用的版本控制工具。</target>
      </trans-unit>
      <trans-unit id="53086">
        <source>前往 [官网](https://git-scm.com/downloads)，点击右上角的青色按钮下载安装包。</source>
        <target state="needs-translation">前往 [官网](https://git-scm.com/downloads)，点击右上角的青色按钮下载安装包。</target>
      </trans-unit>
      <trans-unit id="53088">
        <source>![downloads](/manual/git/downloads.webp)</source>
        <target state="needs-translation">![downloads](/manual/git/downloads.webp)</target>
      </trans-unit>
      <trans-unit id="53090">
        <source>国内的 Windows 用户也可以选择从 [镜像](https://registry.npmmirror.com/binary.html?path=git-for-windows/) 下载。</source>
        <target state="needs-translation">国内的 Windows 用户也可以选择从 [镜像](https://registry.npmmirror.com/binary.html?path=git-for-windows/) 下载。</target>
      </trans-unit>
      <trans-unit id="53092">
        <source>如果不知道下载哪个版本，可以在上面的官网中看到 (比如图中就是 2.39.1)。</source>
        <target state="needs-translation">如果不知道下载哪个版本，可以在上面的官网中看到 (比如图中就是 2.39.1)。</target>
      </trans-unit>
      <trans-unit id="53094">
        <source>获取到安装包后，双击运行。</source>
        <target state="needs-translation">获取到安装包后，双击运行。</target>
      </trans-unit>
      <trans-unit id="53096">
        <source>安装过程无需手动配置，一直点击下一步即可完成安装。</source>
        <target state="needs-translation">安装过程无需手动配置，一直点击下一步即可完成安装。</target>
      </trans-unit>
      <trans-unit id="53098">
        <source>安装完成后，可以在命令行中输入 `git --version` 来查看版本号，以确认安装成功：</source>
        <target state="needs-translation">安装完成后，可以在命令行中输入 `git --version` 来查看版本号，以确认安装成功：</target>
      </trans-unit>
      <trans-unit id="53100">
        <source>git --version           # git version 2.39.1</source>
        <target state="needs-translation">git --version           # git version 2.39.1</target>
      </trans-unit>
      <trans-unit id="53102">
        <source>最后你还需要设置你的姓名和邮箱。</source>
        <target state="needs-translation">最后你还需要设置你的姓名和邮箱。</target>
      </trans-unit>
      <trans-unit id="53104">
        <source>它们将会默认作为你创建的插件的作者，也会出现在你的提交记录中：</source>
        <target state="needs-translation">它们将会默认作为你创建的插件的作者，也会出现在你的提交记录中：</target>
      </trans-unit>
      <trans-unit id="65410">
        <source>git config --global user.name &quot;Your Name&quot;
git config --global user.email &quot;you@example.com&quot;</source>
        <target state="needs-translation">git config --global user.name &quot;Your Name&quot;
git config --global user.email &quot;you@example.com&quot;</target>
      </trans-unit>
      <trans-unit id="53108">
        <source>注册 GitHub</source>
        <target state="needs-translation">注册 GitHub</target>
      </trans-unit>
      <trans-unit id="53110">
        <source>通常来说我还会建议你注册一个 GitHub 账号。</source>
        <target state="needs-translation">通常来说我还会建议你注册一个 GitHub 账号。</target>
      </trans-unit>
      <trans-unit id="53112">
        <source>[GitHub](https://github.com) 是一个代码托管平台，我们可以在上面创建仓库来存放我们的代码。</source>
        <target state="needs-translation">[GitHub](https://github.com) 是一个代码托管平台，我们可以在上面创建仓库来存放我们的代码。</target>
      </trans-unit>
      <trans-unit id="53114">
        <source>由于篇幅有限，请在互联网搜索相关的教程，自行完成注册。</source>
        <target state="needs-translation">由于篇幅有限，请在互联网搜索相关的教程，自行完成注册。</target>
      </trans-unit>
      <trans-unit id="53116">
        <source>如果发现无法注册，也不用担心，你仍然可以在本地进行开发。</source>
        <target state="needs-translation">如果发现无法注册，也不用担心，你仍然可以在本地进行开发。</target>
      </trans-unit>
      <trans-unit id="53118">
        <source>安装 Koishi</source>
        <target state="needs-translation">安装 Koishi</target>
      </trans-unit>
      <trans-unit id="53120">
        <source>打开命令行，并进入你想要创建 Koishi 项目的目录。</source>
        <target state="needs-translation">打开命令行，并进入你想要创建 Koishi 项目的目录。</target>
      </trans-unit>
      <trans-unit id="53122">
        <source>Windows：`C:\dev` 或者 `D:\dev` (也不要直接在盘根创建项目，最好是建一层目录)</source>
        <target state="needs-translation">Windows：`C:\dev` 或者 `D:\dev` (也不要直接在盘根创建项目，最好是建一层目录)</target>
      </trans-unit>
      <trans-unit id="53124">
        <source>其他操作系统：`~/dev`
:::</source>
        <target state="needs-translation">其他操作系统：`~/dev`
:::</target>
      </trans-unit>
      <trans-unit id="53126">
        <source>输入下面的命令以创建 Koishi 项目：</source>
        <target state="needs-translation">输入下面的命令以创建 Koishi 项目：</target>
      </trans-unit>
      <trans-unit id="53128">
        <source>code</source>
        <target state="needs-translation">code</target>
      </trans-unit>
      <trans-unit id="53130">
        <source>npm init koishi@latest</source>
        <target state="needs-translation">npm init koishi@latest</target>
      </trans-unit>
      <trans-unit id="53132">
        <source>yarn create koishi</source>
        <target state="needs-translation">yarn create koishi</target>
      </trans-unit>
      <trans-unit id="53134">
        <source>跟随提示即可完成全套初始化流程。</source>
        <target state="needs-translation">跟随提示即可完成全套初始化流程。</target>
      </trans-unit>
      <trans-unit id="53136">
        <source>如果你顺利完成了上述操作，你的应用此时应该已经是启动状态，并弹出了控制台界面。</source>
        <target state="needs-translation">如果你顺利完成了上述操作，你的应用此时应该已经是启动状态，并弹出了控制台界面。</target>
      </trans-unit>
      <trans-unit id="53138">
        <source>接下来的几节中我们将学习更多的命令行用法，因此我们可以先关闭 Koishi。</source>
        <target state="needs-translation">接下来的几节中我们将学习更多的命令行用法，因此我们可以先关闭 Koishi。</target>
      </trans-unit>
      <trans-unit id="53140">
        <source>在命令行中按下 `Ctrl+C` 组合键即可停止 Koishi 的运行。</source>
        <target state="needs-translation">在命令行中按下 `Ctrl+C` 组合键即可停止 Koishi 的运行。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1576" original="/[koishijs.docs] main/zh-CN/guide/develop/workspace.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="53142">
        <source>工作区开发</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">工作區開發</target>
      </trans-unit>
      <trans-unit id="53144">
        <source>Koishi 的核心是插件系统，绝大部分 Koishi 功能都可以通过插件实现。</source>
        <target state="needs-translation">Koishi 的核心是插件系统，绝大部分 Koishi 功能都可以通过插件实现。</target>
      </trans-unit>
      <trans-unit id="53146">
        <source>本章节将介绍如何使用模板项目开发和构建自己的 Koishi 插件。</source>
        <target state="needs-translation">本章节将介绍如何使用模板项目开发和构建自己的 Koishi 插件。</target>
      </trans-unit>
      <trans-unit id="53148">
        <source>本节中介绍的命令行都需要在 [应用目录](./config.md#应用目录) 下运行。</source>
        <target state="needs-translation">本节中介绍的命令行都需要在 [应用目录](./config.md#应用目录) 下运行。</target>
      </trans-unit>
      <trans-unit id="63984">
        <source>创建新插件 {#setup}</source>
        <target state="needs-translation">创建新插件 {#setup}</target>
      </trans-unit>
      <trans-unit id="53152">
        <source>在应用目录运行下面的命令以创建一个新的插件工作区：</source>
        <target state="needs-translation">在应用目录运行下面的命令以创建一个新的插件工作区：</target>
      </trans-unit>
      <trans-unit id="53154">
        <source>code</source>
        <target state="needs-translation">code</target>
      </trans-unit>
      <trans-unit id="53156">
        <source>npm run setup [name] -- [-c] [-m] [-G]</source>
        <target state="needs-translation">npm run setup [name] -- [-c] [-m] [-G]</target>
      </trans-unit>
      <trans-unit id="53158">
        <source>yarn setup [name] [-c] [-m] [-G]</source>
        <target state="needs-translation">yarn setup [name] [-c] [-m] [-G]</target>
      </trans-unit>
      <trans-unit id="53160">
        <source>**name:** 插件的包名，缺省时将进行提问</source>
        <target state="needs-translation">**name:** 插件的包名，缺省时将进行提问</target>
      </trans-unit>
      <trans-unit id="53162">
        <source>**-c, --console:** 创建一个带控制台扩展的插件</source>
        <target state="needs-translation">**-c, --console:** 创建一个带控制台扩展的插件</target>
      </trans-unit>
      <trans-unit id="53164">
        <source>**-m, --monorepo:** 创建 monorepo 的插件</source>
        <target state="needs-translation">**-m, --monorepo:** 创建 monorepo 的插件</target>
      </trans-unit>
      <trans-unit id="53166">
        <source>**-G, --no-git:** 跳过 git 初始化</source>
        <target state="needs-translation">**-G, --no-git:** 跳过 git 初始化</target>
      </trans-unit>
      <trans-unit id="53168">
        <source>我们假设你创建了一个叫 `example` 的插件。</source>
        <target state="needs-translation">我们假设你创建了一个叫 `example` 的插件。</target>
      </trans-unit>
      <trans-unit id="53170">
        <source>那么，你将看到下面的目录结构：</source>
        <target state="needs-translation">那么，你将看到下面的目录结构：</target>
      </trans-unit>
      <trans-unit id="53172">
        <source>root
├── external
│   └── example
│       ├── src
│       │   └── index.ts
│       └── package.json
├── koishi.yml
└── package.json</source>
        <target state="needs-translation">root
├── external
│   └── example
│       ├── src
│       │   └── index.ts
│       └── package.json
├── koishi.yml
└── package.json</target>
      </trans-unit>
      <trans-unit id="53174">
        <source>打开 `index.ts` 文件，并修改其中的代码：</source>
        <target state="needs-translation">打开 `index.ts` 文件，并修改其中的代码：</target>
      </trans-unit>
      <trans-unit id="53176">
        <source>import { Context } from 'koishi'

export const name = 'example'

export function apply(ctx: Context) {
  // 如果收到“天王盖地虎”，就回应“宝塔镇河妖”
  ctx.on('message', (session) =&gt; {
    if (session.content === '天王盖地虎') {
      session.send('宝塔镇河妖')
    }
  })
}</source>
        <target state="needs-translation">import { Context } from 'koishi'

export const name = 'example'

export function apply(ctx: Context) {
  // 如果收到“天王盖地虎”，就回应“宝塔镇河妖”
  ctx.on('message', (session) =&gt; {
    if (session.content === '天王盖地虎') {
      session.send('宝塔镇河妖')
    }
  })
}</target>
      </trans-unit>
      <trans-unit id="53178">
        <source>以 [开发模式](./script.md#开发模式) 重新运行你的项目，点击右上角的「添加插件」按钮，选择你刚才创建的插件名称，你会立即在网页控制台的配置界面中看到 `example` 插件。</source>
        <target state="needs-translation">以 [开发模式](./script.md#开发模式) 重新运行你的项目，点击右上角的「添加插件」按钮，选择你刚才创建的插件名称，你会立即在网页控制台的配置界面中看到 `example` 插件。</target>
      </trans-unit>
      <trans-unit id="53180">
        <source>只需点击启用，你就可以实现与机器人的对话了：</source>
        <target state="needs-translation">只需点击启用，你就可以实现与机器人的对话了：</target>
      </trans-unit>
      <trans-unit id="53182">
        <source>天王盖地虎</source>
        <target state="needs-translation">天王盖地虎</target>
      </trans-unit>
      <trans-unit id="53184">
        <source>宝塔镇河妖</source>
        <target state="needs-translation">宝塔镇河妖</target>
      </trans-unit>
      <trans-unit id="63986">
        <source>创建私域插件 {#scoped}</source>
        <target state="needs-translation">创建私域插件 {#scoped}</target>
      </trans-unit>
      <trans-unit id="53188">
        <source>如果你发现想要创建的插件名称已经被占用了，除了重新想名字或在后面加上数字之外，你还可以改为创建私域插件。</source>
        <target state="needs-translation">如果你发现想要创建的插件名称已经被占用了，除了重新想名字或在后面加上数字之外，你还可以改为创建私域插件。</target>
      </trans-unit>
      <trans-unit id="53190">
        <source>私域插件使用你自己的 [npm 用户名](./setup.md#注册-npm) 作为包名前缀，因此不用担心与其他人的插件冲突。</source>
        <target state="needs-translation">私域插件使用你自己的 [npm 用户名](./setup.md#注册-npm) 作为包名前缀，因此不用担心与其他人的插件冲突。</target>
      </trans-unit>
      <trans-unit id="53192">
        <source>假设你的 npm 用户名是 `alice`，那么你可以使用下面的命令创建一个私域插件工作区：</source>
        <target state="needs-translation">假设你的 npm 用户名是 `alice`，那么你可以使用下面的命令创建一个私域插件工作区：</target>
      </trans-unit>
      <trans-unit id="53194">
        <source>code</source>
        <target state="needs-translation">code</target>
      </trans-unit>
      <trans-unit id="53196">
        <source>npm run setup @alice/example</source>
        <target state="needs-translation">npm run setup @alice/example</target>
      </trans-unit>
      <trans-unit id="53198">
        <source>yarn setup @alice/example</source>
        <target state="needs-translation">yarn setup @alice/example</target>
      </trans-unit>
      <trans-unit id="53200">
        <source>此外，你还需要额外修改 `tsconfig.json` 文件。</source>
        <target state="needs-translation">此外，你还需要额外修改 `tsconfig.json` 文件。</target>
      </trans-unit>
      <trans-unit id="53202">
        <source>打开这个文件，你将看到下面的内容：</source>
        <target state="needs-translation">打开这个文件，你将看到下面的内容：</target>
      </trans-unit>
      <trans-unit id="53204">
        <source>{
  &quot;extends&quot;: &quot;./tsconfig.base&quot;,
  &quot;compilerOptions&quot;: {
    &quot;baseUrl&quot;: &quot;.&quot;,
    &quot;paths&quot;: {
      // &quot;@scope/koishi-plugin-*&quot;: [&quot;external/*/src&quot;],
      &quot;@alice/koishi-plugin-*&quot;: [&quot;external/*/src&quot;],
    },
  },
}</source>
        <target state="needs-translation">{
  &quot;extends&quot;: &quot;./tsconfig.base&quot;,
  &quot;compilerOptions&quot;: {
    &quot;baseUrl&quot;: &quot;.&quot;,
    &quot;paths&quot;: {
      // &quot;@scope/koishi-plugin-*&quot;: [&quot;external/*/src&quot;],
      &quot;@alice/koishi-plugin-*&quot;: [&quot;external/*/src&quot;],
    },
  },
}</target>
      </trans-unit>
      <trans-unit id="53206">
        <source>找到高亮的一行代码，将其复制一份，并将 `@scope` 替换为你的 npm 用户名，然后将复制的这一行代码前面的注释符号去掉。</source>
        <target state="needs-translation">找到高亮的一行代码，将其复制一份，并将 `@scope` 替换为你的 npm 用户名，然后将复制的这一行代码前面的注释符号去掉。</target>
      </trans-unit>
      <trans-unit id="63988">
        <source>构建源代码 {#build}</source>
        <target state="needs-translation">构建源代码 {#build}</target>
      </trans-unit>
      <trans-unit id="53210">
        <source>上面的插件暂时还只能在开发模式下运行。</source>
        <target state="needs-translation">上面的插件暂时还只能在开发模式下运行。</target>
      </trans-unit>
      <trans-unit id="53212">
        <source>如果想要在生产模式下使用或发布到插件市场，你需要构建你的源代码。</source>
        <target state="needs-translation">如果想要在生产模式下使用或发布到插件市场，你需要构建你的源代码。</target>
      </trans-unit>
      <trans-unit id="53214">
        <source>在应用目录运行下面的命令：</source>
        <target state="needs-translation">在应用目录运行下面的命令：</target>
      </trans-unit>
      <trans-unit id="53216">
        <source>code</source>
        <target state="needs-translation">code</target>
      </trans-unit>
      <trans-unit id="53218">
        <source>npm run build [...name]</source>
        <target state="needs-translation">npm run build [...name]</target>
      </trans-unit>
      <trans-unit id="53220">
        <source>yarn build [...name]</source>
        <target state="needs-translation">yarn build [...name]</target>
      </trans-unit>
      <trans-unit id="53222">
        <source>**name:** 要构建的插件列表，缺省时表示全部插件</source>
        <target state="needs-translation">**name:** 要构建的插件列表，缺省时表示全部插件</target>
      </trans-unit>
      <trans-unit id="53224">
        <source>还是以上面的插件 `example` 为例：</source>
        <target state="needs-translation">还是以上面的插件 `example` 为例：</target>
      </trans-unit>
      <trans-unit id="53226">
        <source>后端代码将输出到 `external/example/lib` 目录</source>
        <target state="needs-translation">后端代码将输出到 `external/example/lib` 目录</target>
      </trans-unit>
      <trans-unit id="53228">
        <source>前端代码将输出到 `external/example/dist` 目录 (如果存在)</source>
        <target state="needs-translation">前端代码将输出到 `external/example/dist` 目录 (如果存在)</target>
      </trans-unit>
      <trans-unit id="63990">
        <source>添加依赖 {#add}</source>
        <target state="needs-translation">添加依赖 {#add}</target>
      </trans-unit>
      <trans-unit id="53232">
        <source>插件创建时，`package.json` 中已经包含了一些必要的依赖。</source>
        <target state="needs-translation">插件创建时，`package.json` 中已经包含了一些必要的依赖。</target>
      </trans-unit>
      <trans-unit id="53234">
        <source>如果你需要添加其他依赖，可以使用下面的命令：</source>
        <target state="needs-translation">如果你需要添加其他依赖，可以使用下面的命令：</target>
      </trans-unit>
      <trans-unit id="53236">
        <source>code</source>
        <target state="needs-translation">code</target>
      </trans-unit>
      <trans-unit id="53238">
        <source>npm install [...deps] -w koishi-plugin-[name]</source>
        <target state="needs-translation">npm install [...deps] -w koishi-plugin-[name]</target>
      </trans-unit>
      <trans-unit id="53240">
        <source>yarn workspace koishi-plugin-[name] add [...deps]</source>
        <target state="needs-translation">yarn workspace koishi-plugin-[name] add [...deps]</target>
      </trans-unit>
      <trans-unit id="53242">
        <source>**name:** 你的插件名称</source>
        <target state="needs-translation">**name:** 你的插件名称</target>
      </trans-unit>
      <trans-unit id="53244">
        <source>**deps:** 要添加的依赖列表</source>
        <target state="needs-translation">**deps:** 要添加的依赖列表</target>
      </trans-unit>
      <trans-unit id="53246">
        <source>如果要添加的是 `devDependencies` 或者 `peerDependencies`，你也需要在命令后面加上 `-D` 或 `-P` 参数。</source>
        <target state="needs-translation">如果要添加的是 `devDependencies` 或者 `peerDependencies`，你也需要在命令后面加上 `-D` 或 `-P` 参数。</target>
      </trans-unit>
      <trans-unit id="53248">
        <source>关于服务类插件的依赖声明，请参考 [后续章节](../plugin/service.md#关于-peerdependencies)。</source>
        <target state="needs-translation">关于服务类插件的依赖声明，请参考 [后续章节](../plugin/service.md#关于-peerdependencies)。</target>
      </trans-unit>
      <trans-unit id="63992">
        <source>更新依赖版本 {#dep}</source>
        <target state="needs-translation">更新依赖版本 {#dep}</target>
      </trans-unit>
      <trans-unit id="53252">
        <source>尽管 npm 和 yarn 等包管理器都提供了依赖更新功能，但它们对工作区开发的支持都不是很好。</source>
        <target state="needs-translation">尽管 npm 和 yarn 等包管理器都提供了依赖更新功能，但它们对工作区开发的支持都不是很好。</target>
      </trans-unit>
      <trans-unit id="53254">
        <source>因此，我们也提供了一个简单的命令用于批量更新依赖版本。</source>
        <target state="needs-translation">因此，我们也提供了一个简单的命令用于批量更新依赖版本。</target>
      </trans-unit>
      <trans-unit id="53256">
        <source>code</source>
        <target state="needs-translation">code</target>
      </trans-unit>
      <trans-unit id="53258">
        <source>npm run dep</source>
        <target state="needs-translation">npm run dep</target>
      </trans-unit>
      <trans-unit id="53260">
        <source>yarn dep</source>
        <target state="needs-translation">yarn dep</target>
      </trans-unit>
      <trans-unit id="53262">
        <source>这将按照每个 `package.json` 中声明的依赖版本进行更新。</source>
        <target state="needs-translation">这将按照每个 `package.json` 中声明的依赖版本进行更新。</target>
      </trans-unit>
      <trans-unit id="53264">
        <source>举个例子，如果某个依赖的版本是 `^1.1.4`，而这个依赖之后发布了新版本 `1.2.3` 和 `2.3.3`，那么运行该指令后，依赖的版本将会被更新为 `^1.2.3`。</source>
        <target state="needs-translation">举个例子，如果某个依赖的版本是 `^1.1.4`，而这个依赖之后发布了新版本 `1.2.3` 和 `2.3.3`，那么运行该指令后，依赖的版本将会被更新为 `^1.2.3`。</target>
      </trans-unit>
      <trans-unit id="63994">
        <source>二次开发 {#clone}</source>
        <target state="needs-translation">二次开发 {#clone}</target>
      </trans-unit>
      <trans-unit id="53268">
        <source>阅读本节前请确保你已经完成 [版本控制](./setup.md#版本控制) 中的全部准备工作。</source>
        <target state="needs-translation">阅读本节前请确保你已经完成 [版本控制](./setup.md#版本控制) 中的全部准备工作。</target>
      </trans-unit>
      <trans-unit id="53270">
        <source>如果你想要贡献原始仓库，在开始执行下面的操作之前，请确保你对要开发的仓库有写入权限。</source>
        <target state="needs-translation">如果你想要贡献原始仓库，在开始执行下面的操作之前，请确保你对要开发的仓库有写入权限。</target>
      </trans-unit>
      <trans-unit id="53272">
        <source>如果没有，你应当先创建属于自己的 fork，然后将下面的仓库名称替换为你的 fork 仓库名称。</source>
        <target state="needs-translation">如果没有，你应当先创建属于自己的 fork，然后将下面的仓库名称替换为你的 fork 仓库名称。</target>
      </trans-unit>
      <trans-unit id="53274">
        <source>举个例子，假如你的 GitHub 用户名是 `alice`，那么下面你使用的仓库名称应当是 `alice/koishi-plugin-forward` 而不是 `koishijs/koishi-plugin-forward`。</source>
        <target state="needs-translation">举个例子，假如你的 GitHub 用户名是 `alice`，那么下面你使用的仓库名称应当是 `alice/koishi-plugin-forward` 而不是 `koishijs/koishi-plugin-forward`。</target>
      </trans-unit>
      <trans-unit id="53276">
        <source>二次开发是指调试或修改其他仓库中的插件。</source>
        <target state="needs-translation">二次开发是指调试或修改其他仓库中的插件。</target>
      </trans-unit>
      <trans-unit id="53278">
        <source>这种情况下，你需要先将对应的仓库克隆到本地，然后在本地进行调试和修改。</source>
        <target state="needs-translation">这种情况下，你需要先将对应的仓库克隆到本地，然后在本地进行调试和修改。</target>
      </trans-unit>
      <trans-unit id="53280">
        <source>开发插件</source>
        <target state="needs-translation">开发插件</target>
      </trans-unit>
      <trans-unit id="53282">
        <source>其他人创建的工作区插件可以直接克隆到你的 `external` 目录下。</source>
        <target state="needs-translation">其他人创建的工作区插件可以直接克隆到你的 `external` 目录下。</target>
      </trans-unit>
      <trans-unit id="53284">
        <source>例如，你可以使用下面的命令将 `koishi-plugin-forward` 插件克隆到本地：</source>
        <target state="needs-translation">例如，你可以使用下面的命令将 `koishi-plugin-forward` 插件克隆到本地：</target>
      </trans-unit>
      <trans-unit id="53286">
        <source>code</source>
        <target state="needs-translation">code</target>
      </trans-unit>
      <trans-unit id="53288">
        <source>npm run clone koishijs/koishi-plugin-forward</source>
        <target state="needs-translation">npm run clone koishijs/koishi-plugin-forward</target>
      </trans-unit>
      <trans-unit id="53290">
        <source>yarn clone koishijs/koishi-plugin-forward</source>
        <target state="needs-translation">yarn clone koishijs/koishi-plugin-forward</target>
      </trans-unit>
      <trans-unit id="53292">
        <source>开发 Koishi</source>
        <target state="needs-translation">开发 Koishi</target>
      </trans-unit>
      <trans-unit id="53294">
        <source>工作区不仅可以用于插件的二次开发，还可以用于开发 Koishi 本身。</source>
        <target state="needs-translation">工作区不仅可以用于插件的二次开发，还可以用于开发 Koishi 本身。</target>
      </trans-unit>
      <trans-unit id="53296">
        <source>只需使用下面的命令将 Koishi 仓库克隆到本地，并完成构建：</source>
        <target state="needs-translation">只需使用下面的命令将 Koishi 仓库克隆到本地，并完成构建：</target>
      </trans-unit>
      <trans-unit id="53298">
        <source>code</source>
        <target state="needs-translation">code</target>
      </trans-unit>
      <trans-unit id="53300">
        <source>npm run clone koishijs/koishi
npm run build -w @root/koishi</source>
        <target state="needs-translation">npm run clone koishijs/koishi
npm run build -w @root/koishi</target>
      </trans-unit>
      <trans-unit id="53302">
        <source>yarn clone koishijs/koishi
yarn workspace @root/koishi build</source>
        <target state="needs-translation">yarn clone koishijs/koishi
yarn workspace @root/koishi build</target>
      </trans-unit>
      <trans-unit id="53304">
        <source>通常来说，非插件仓库在克隆下来之后还需经过路径配置才可以正常使用。</source>
        <target state="needs-translation">通常来说，非插件仓库在克隆下来之后还需经过路径配置才可以正常使用。</target>
      </trans-unit>
      <trans-unit id="53306">
        <source>不过不同担心，模板项目支持已经内置了 Koishi 生态中的几个核心仓库 ([koishi](https://github.com/koishijs/koishi), [satori](https://github.com/satorijs/satori), [minato](https://github.com/shigma/minato)) 的路径配置。</source>
        <target state="needs-translation">不过不同担心，模板项目支持已经内置了 Koishi 生态中的几个核心仓库 ([koishi](https://github.com/koishijs/koishi), [satori](https://github.com/satorijs/satori), [minato](https://github.com/shigma/minato)) 的路径配置。</target>
      </trans-unit>
      <trans-unit id="53308">
        <source>完成上述操作后，现在你的 `yarn dev` 已经能直接使用 Koishi 的 TypeScript 源码了！</source>
        <target state="needs-translation">完成上述操作后，现在你的 `yarn dev` 已经能直接使用 Koishi 的 TypeScript 源码了！</target>
      </trans-unit>
    </body>
  </file>
  <file id="1578" original="/[koishijs.docs] main/zh-CN/guide/i18n/crowdin.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="53310">
        <source>接入 Crowdin</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">接入 Crowdin</target>
      </trans-unit>
      <trans-unit id="53312">
        <source>[Crowdin](https://crowdin.com/) 是一个专业的本地化内容管理平台，不少商业项目使用该网站翻译并管理其本地化资源。</source>
        <target state="needs-translation">[Crowdin](https://crowdin.com/) 是一个专业的本地化内容管理平台，不少商业项目使用该网站翻译并管理其本地化资源。</target>
      </trans-unit>
      <trans-unit id="53314">
        <source>同时，该网站也为开源项目和教学项目提供了免费或优惠的许可证。</source>
        <target state="needs-translation">同时，该网站也为开源项目和教学项目提供了免费或优惠的许可证。</target>
      </trans-unit>
      <trans-unit id="53316">
        <source>当你的项目中需要翻译的字符串较多，或需要支持很多种不同的语言，那么使用专业的管理平台会十分方便。</source>
        <target state="needs-translation">当你的项目中需要翻译的字符串较多，或需要支持很多种不同的语言，那么使用专业的管理平台会十分方便。</target>
      </trans-unit>
      <trans-unit id="53318">
        <source>同时，Crowdin 也不仅仅是 CAT (计算机辅助翻译)，也提供了内容管理的功能，以及多种与第三方工具集成的方案，包括与 GitHub 等代码托管平台集成。</source>
        <target state="needs-translation">同时，Crowdin 也不仅仅是 CAT (计算机辅助翻译)，也提供了内容管理的功能，以及多种与第三方工具集成的方案，包括与 GitHub 等代码托管平台集成。</target>
      </trans-unit>
      <trans-unit id="53320">
        <source>由于 Crowdin 提供了 CLI 和 API 等多种方式管理项目资源，你也可以使用 CI (Continuous Integration，持续集成) 等方式管理你的项目资源。</source>
        <target state="needs-translation">由于 Crowdin 提供了 CLI 和 API 等多种方式管理项目资源，你也可以使用 CI (Continuous Integration，持续集成) 等方式管理你的项目资源。</target>
      </trans-unit>
      <trans-unit id="53322">
        <source>[Transifex](https://www.transifex.com)</source>
        <target state="needs-translation">[Transifex](https://www.transifex.com)</target>
      </trans-unit>
      <trans-unit id="53324">
        <source>[Memsource](https://www.memsource.com/)</source>
        <target state="needs-translation">[Memsource](https://www.memsource.com/)</target>
      </trans-unit>
      <trans-unit id="53326" translate="no">
        <source>[Lokalise](https://lokalise.com/)</source>
        <target>[Lokalise](https://lokalise.com/)</target>
      </trans-unit>
      <trans-unit id="53328" translate="no">
        <source>[POEditor](https://poeditor.com/)</source>
        <target>[POEditor](https://poeditor.com/)</target>
      </trans-unit>
      <trans-unit id="53330">
        <source>你也可以尝试搜索 Translation Management System 或 Localization Platform 等关键词，整个互联网上有无数的本地化管理平台等着你去发掘。</source>
        <target state="needs-translation">你也可以尝试搜索 Translation Management System 或 Localization Platform 等关键词，整个互联网上有无数的本地化管理平台等着你去发掘。</target>
      </trans-unit>
      <trans-unit id="53332">
        <source>:::</source>
        <target state="needs-translation">:::</target>
      </trans-unit>
      <trans-unit id="53334">
        <source>注册及登录 Crowdin</source>
        <target state="needs-translation">注册及登录 Crowdin</target>
      </trans-unit>
      <trans-unit id="53336">
        <source>你可以使用邮箱注册，也可以用谷歌账号、Github 账号等登录，与其他网站异曲同工，因此此处不再赘述。</source>
        <target state="needs-translation">你可以使用邮箱注册，也可以用谷歌账号、Github 账号等登录，与其他网站异曲同工，因此此处不再赘述。</target>
      </trans-unit>
      <trans-unit id="53338">
        <source>如果你还是学生，并且成功申请了 GitHub 的学生开发包 (Student Pack)，在你使用 GitHub 账号成功登录 Crowdin 后会自动获赠价值 1500 美元的 1 年 Bronze 计划。</source>
        <target state="needs-translation">如果你还是学生，并且成功申请了 GitHub 的学生开发包 (Student Pack)，在你使用 GitHub 账号成功登录 Crowdin 后会自动获赠价值 1500 美元的 1 年 Bronze 计划。</target>
      </trans-unit>
      <trans-unit id="53340">
        <source>创建本地化项目</source>
        <target state="needs-translation">创建本地化项目</target>
      </trans-unit>
      <trans-unit id="53342">
        <source>成功注册并登录 Crowdin 后，你会被自动导向你的[个人页面](https://crowdin.com/profile)。</source>
        <target state="needs-translation">成功注册并登录 Crowdin 后，你会被自动导向你的[个人页面](https://crowdin.com/profile)。</target>
      </trans-unit>
      <trans-unit id="53344">
        <source>点击右上角的加号，即可创建项目。</source>
        <target state="needs-translation">点击右上角的加号，即可创建项目。</target>
      </trans-unit>
      <trans-unit id="53346">
        <source>若你的项目是开放源代码的，并且活跃了 4 个月及以上，你可以申请 Crowdin 的开源项目许可。</source>
        <target state="needs-translation">若你的项目是开放源代码的，并且活跃了 4 个月及以上，你可以申请 Crowdin 的开源项目许可。</target>
      </trans-unit>
      <trans-unit id="53348">
        <source>当你成功创建项目后，填写[这个表单](https://crowdin.com/page/open-source-project-setup-request)，Crowdin 的客服人员会帮助你。</source>
        <target state="needs-translation">当你成功创建项目后，填写[这个表单](https://crowdin.com/page/open-source-project-setup-request)，Crowdin 的客服人员会帮助你。</target>
      </trans-unit>
      <trans-unit id="53350">
        <source>在新建项目界面，需要填写项目名称 (推荐和插件或机器人的名称一致)，选择是否公开项目，设置源语言和目标语言，然后点击创建项目按钮。</source>
        <target state="needs-translation">在新建项目界面，需要填写项目名称 (推荐和插件或机器人的名称一致)，选择是否公开项目，设置源语言和目标语言，然后点击创建项目按钮。</target>
      </trans-unit>
      <trans-unit id="53352">
        <source>公开项目意味着所有 Crowdin 用户都能搜索到你的项目，也可以看到你的项目的所有内容，也可以向项目贡献翻译。</source>
        <target state="needs-translation">公开项目意味着所有 Crowdin 用户都能搜索到你的项目，也可以看到你的项目的所有内容，也可以向项目贡献翻译。</target>
      </trans-unit>
      <trans-unit id="53354">
        <source>如果你是通过开源项目免费许可的方式创建的项目，则只能创建公开项目。</source>
        <target state="needs-translation">如果你是通过开源项目免费许可的方式创建的项目，则只能创建公开项目。</target>
      </trans-unit>
      <trans-unit id="53356">
        <source>项目结构</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">專案結構</target>
      </trans-unit>
      <trans-unit id="53358">
        <source>由于 Crowdin 会将待翻译的文件名显示在项目的文件列表中，为了不引起误会，你需要为每个待翻译的文件设置一个易懂的名称。</source>
        <target state="needs-translation">由于 Crowdin 会将待翻译的文件名显示在项目的文件列表中，为了不引起误会，你需要为每个待翻译的文件设置一个易懂的名称。</target>
      </trans-unit>
      <trans-unit id="53360">
        <source>同时，要保证 Crowdin 输出的翻译结果与你的项目结构一致。</source>
        <target state="needs-translation">同时，要保证 Crowdin 输出的翻译结果与你的项目结构一致。</target>
      </trans-unit>
      <trans-unit id="53362">
        <source>因此推荐的做法是，为每种语言建立一个独立的文件夹，然后将待翻译的文件命名为项目名称，如下所示：</source>
        <target state="needs-translation">因此推荐的做法是，为每种语言建立一个独立的文件夹，然后将待翻译的文件命名为项目名称，如下所示：</target>
      </trans-unit>
      <trans-unit id="53364">
        <source>echo/
  |-- i18n/
      |-- en/
          |-- echo.yaml
      |-- zh-CN/
          |-- echo.yaml
  |-- index.js
  |-- package.json</source>
        <target state="needs-translation">echo/
  |-- i18n/
      |-- en/
          |-- echo.yaml
      |-- zh-CN/
          |-- echo.yaml
  |-- index.js
  |-- package.json</target>
      </trans-unit>
      <trans-unit id="53366">
        <source>上传项目文件</source>
        <target state="needs-translation">上传项目文件</target>
      </trans-unit>
      <trans-unit id="53368">
        <source>你可以通过网页手动上传文件，也可以通过 Crowdin 的 CLI 程序进行上传，或是使用集成让 Crowdin 直接从代码仓库同步文件。</source>
        <target state="needs-translation">你可以通过网页手动上传文件，也可以通过 Crowdin 的 CLI 程序进行上传，或是使用集成让 Crowdin 直接从代码仓库同步文件。</target>
      </trans-unit>
      <trans-unit id="53370">
        <source>手动上传</source>
        <target state="needs-translation">手动上传</target>
      </trans-unit>
      <trans-unit id="53372">
        <source>导航至 Crowdin 的内容 (Content) 界面，你可以点击上传文件 (Upload Files) 按钮上传**源语言**文件。</source>
        <target state="needs-translation">导航至 Crowdin 的内容 (Content) 界面，你可以点击上传文件 (Upload Files) 按钮上传**源语言**文件。</target>
      </trans-unit>
      <trans-unit id="53374">
        <source>设置代码仓库集成</source>
        <target state="needs-translation">设置代码仓库集成</target>
      </trans-unit>
      <trans-unit id="53376">
        <source>除了手动上传，你还可以设置集成，让 Crowdin 自动同步 GitHub 等仓库里的文件，并可设置定期推送译文到相应的分支。</source>
        <target state="needs-translation">除了手动上传，你还可以设置集成，让 Crowdin 自动同步 GitHub 等仓库里的文件，并可设置定期推送译文到相应的分支。</target>
      </trans-unit>
      <trans-unit id="53378">
        <source>你可以点击[这里](https://support.crowdin.com/github-integration/)直达 Crowdin 关于 GitHub 集成的文档。</source>
        <target state="needs-translation">你可以点击[这里](https://support.crowdin.com/github-integration/)直达 Crowdin 关于 GitHub 集成的文档。</target>
      </trans-unit>
      <trans-unit id="53380">
        <source>如果你使用的是 Gitlab 等其他仓库，也可以在知识库里找到相应的指南。</source>
        <target state="needs-translation">如果你使用的是 Gitlab 等其他仓库，也可以在知识库里找到相应的指南。</target>
      </trans-unit>
      <trans-unit id="53382">
        <source>回到项目主页，单击集成 (Integrations) 标签页，可以为你的项目设置集成。</source>
        <target state="needs-translation">回到项目主页，单击集成 (Integrations) 标签页，可以为你的项目设置集成。</target>
      </trans-unit>
      <trans-unit id="53384">
        <source>Crowdin 支持许多集成方案，找到你所使用的代码仓库并点击。</source>
        <target state="needs-translation">Crowdin 支持许多集成方案，找到你所使用的代码仓库并点击。</target>
      </trans-unit>
      <trans-unit id="53386">
        <source>然后，单击 Set Up Integration，连接到你的代码仓库的账户，选择你想要设置集成的仓库，选择你想要获取原文和推送译文的分支，默认情况下 Crowdin 创建一个新的分支，名为 `l10n_` 加上原分支名，如图中所示的 `l10n_master`。</source>
        <target state="needs-translation">然后，单击 Set Up Integration，连接到你的代码仓库的账户，选择你想要设置集成的仓库，选择你想要获取原文和推送译文的分支，默认情况下 Crowdin 创建一个新的分支，名为 `l10n_` 加上原分支名，如图中所示的 `l10n_master`。</target>
      </trans-unit>
      <trans-unit id="53388">
        <source>![github integration connecting github](https://support.crowdin.com/assets/docs/github_integration_connecting_github.png)</source>
        <target state="needs-translation">![github integration connecting github](https://support.crowdin.com/assets/docs/github_integration_connecting_github.png)</target>
      </trans-unit>
      <trans-unit id="53390">
        <source>![github integration unconfigured](https://support.crowdin.com/assets/docs/github_integration_unconfigured.png)</source>
        <target state="needs-translation">![github integration unconfigured](https://support.crowdin.com/assets/docs/github_integration_unconfigured.png)</target>
      </trans-unit>
      <trans-unit id="53392">
        <source>此外，你还需要点击分支名右边的编辑按钮，然后点添加文件筛选器 (Add File Filter)，在视图左边写上源文件和目标文件的模式匹配字符串之后，在右边切换并预览将会同步到 Crowdin 的文件列表，以及翻译后的文件名及其路径，你还可以添加更多的筛选器。</source>
        <target state="needs-translation">此外，你还需要点击分支名右边的编辑按钮，然后点添加文件筛选器 (Add File Filter)，在视图左边写上源文件和目标文件的模式匹配字符串之后，在右边切换并预览将会同步到 Crowdin 的文件列表，以及翻译后的文件名及其路径，你还可以添加更多的筛选器。</target>
      </trans-unit>
      <trans-unit id="53394">
        <source>确认添加无误后，单击 Save 按钮保存。</source>
        <target state="needs-translation">确认添加无误后，单击 Save 按钮保存。</target>
      </trans-unit>
      <trans-unit id="53396">
        <source>视图下方的 Push Source 选项默认是不勾选的，即 Crowdin 不会自动将翻译推送到仓库，打开这个选项后，Crowdin 会在对应的仓库开启一个 PR，并自动 rebase 到最新的分支，然后同步 Crowdin 上的同步到仓库。</source>
        <target state="needs-translation">视图下方的 Push Source 选项默认是不勾选的，即 Crowdin 不会自动将翻译推送到仓库，打开这个选项后，Crowdin 会在对应的仓库开启一个 PR，并自动 rebase 到最新的分支，然后同步 Crowdin 上的同步到仓库。</target>
      </trans-unit>
      <trans-unit id="53398">
        <source>设置完成后，Crowdin 并不会自动开始同步，需要手动触发一次：点击表格右上角的 Sync Now，静待片刻即可同步完成。</source>
        <target state="needs-translation">设置完成后，Crowdin 并不会自动开始同步，需要手动触发一次：点击表格右上角的 Sync Now，静待片刻即可同步完成。</target>
      </trans-unit>
      <trans-unit id="53400">
        <source>通过 CLI 上传文件</source>
        <target state="needs-translation">通过 CLI 上传文件</target>
      </trans-unit>
      <trans-unit id="53402">
        <source>Crowdin 还提供了一个 CLI 工具，可以通过命令行管理本地和远程的本地化资源文件。</source>
        <target state="needs-translation">Crowdin 还提供了一个 CLI 工具，可以通过命令行管理本地和远程的本地化资源文件。</target>
      </trans-unit>
      <trans-unit id="53404">
        <source>你可以通过 npm 或 yarn 安装。</source>
        <target state="needs-translation">你可以通过 npm 或 yarn 安装。</target>
      </trans-unit>
      <trans-unit id="53406">
        <source>$ npm i -g @crowdin/cli
$ yarn global add @crowdin/cli</source>
        <target state="needs-translation">$ npm i -g @crowdin/cli
$ yarn global add @crowdin/cli</target>
      </trans-unit>
      <trans-unit id="53408">
        <source>Crowdin 也提供了 Homebrew / apt 等多种安装方式，对于 Windows 用户，你也可以直接下载 Crowdin 所提供的安装程序安装，请查看 [Crowdin 的文档](https://support.crowdin.com/cli-tool/#installation)获知更多详情。</source>
        <target state="needs-translation">Crowdin 也提供了 Homebrew / apt 等多种安装方式，对于 Windows 用户，你也可以直接下载 Crowdin 所提供的安装程序安装，请查看 [Crowdin 的文档](https://support.crowdin.com/cli-tool/#installation)获知更多详情。</target>
      </trans-unit>
      <trans-unit id="53410">
        <source>在运行 Crowdin 的 CLI 工具之前，你需要确保当前项目的根目录下存在名为 `crowdin.yml` 的配置文件，你可以运行 `crowdin init` 创建一个基础配置文件，修改其中的条目以适应你的项目。</source>
        <target state="needs-translation">在运行 Crowdin 的 CLI 工具之前，你需要确保当前项目的根目录下存在名为 `crowdin.yml` 的配置文件，你可以运行 `crowdin init` 创建一个基础配置文件，修改其中的条目以适应你的项目。</target>
      </trans-unit>
      <trans-unit id="53412">
        <source>详细的介绍可以看 [Crowdin 的文档](https://support.crowdin.com/configuration-file/)。</source>
        <target state="needs-translation">详细的介绍可以看 [Crowdin 的文档](https://support.crowdin.com/configuration-file/)。</target>
      </trans-unit>
      <trans-unit id="53414">
        <source>`crowdin.yml` 中的配置项不仅适用于 Crowdin CLI，还可以在上述的代码仓库集成中发挥作用，Crowdin 会自动读取该文件以确定翻译的范围。</source>
        <target state="needs-translation">`crowdin.yml` 中的配置项不仅适用于 Crowdin CLI，还可以在上述的代码仓库集成中发挥作用，Crowdin 会自动读取该文件以确定翻译的范围。</target>
      </trans-unit>
      <trans-unit id="53416">
        <source>推荐在项目目录下的 `crowdin.yml` 文件中配置好文件筛选器，并且在 `$HOME/.crowdin.yml` 文件中存储你的 Crowdin 密钥等敏感信息，然后你就可以简单地运行 `crowdin upload sources` 上传源文件，而不需要每次都打出冗长的包含通配符的文件路径了。</source>
        <target state="needs-translation">推荐在项目目录下的 `crowdin.yml` 文件中配置好文件筛选器，并且在 `$HOME/.crowdin.yml` 文件中存储你的 Crowdin 密钥等敏感信息，然后你就可以简单地运行 `crowdin upload sources` 上传源文件，而不需要每次都打出冗长的包含通配符的文件路径了。</target>
      </trans-unit>
      <trans-unit id="53418">
        <source>文件类型</source>
        <target state="needs-translation">文件类型</target>
      </trans-unit>
      <trans-unit id="53420">
        <source>Crowdin 支持许多常见文件类型，如 `HTML`、`docx`、`pdf`，本地化软件框架支持的 `xliff` 与 `po` 等自然也不在话下，如果你不确定你的文件类型是否受支持，你可以在[这里](https://support.crowdin.com/supported-formats/)查看 Crowdin 支持的文件类型列表。</source>
        <target state="needs-translation">Crowdin 支持许多常见文件类型，如 `HTML`、`docx`、`pdf`，本地化软件框架支持的 `xliff` 与 `po` 等自然也不在话下，如果你不确定你的文件类型是否受支持，你可以在[这里](https://support.crowdin.com/supported-formats/)查看 Crowdin 支持的文件类型列表。</target>
      </trans-unit>
      <trans-unit id="53422">
        <source>作为示例，我们使用的是 `YAML` 格式的文档，Crowdin 目前仅支持纯文本的 `YAML` 格式的文档，不支持 `anchor` 等高级功能。</source>
        <target state="needs-translation">作为示例，我们使用的是 `YAML` 格式的文档，Crowdin 目前仅支持纯文本的 `YAML` 格式的文档，不支持 `anchor` 等高级功能。</target>
      </trans-unit>
      <trans-unit id="53424">
        <source>当然你也可以使用 `JSON` 格式，但传统的 `JSON` 无法添加注释，显示在 Crowdin 上则会缺少足够的上下文信息。</source>
        <target state="needs-translation">当然你也可以使用 `JSON` 格式，但传统的 `JSON` 无法添加注释，显示在 Crowdin 上则会缺少足够的上下文信息。</target>
      </trans-unit>
      <trans-unit id="53426">
        <source>因为译者在 Crowdin 上无法看到源码，也无法看到翻译后的结果的显示样式，作为开发者应当通过各种方式向译者提供详尽的上下文信息。</source>
        <target state="needs-translation">因为译者在 Crowdin 上无法看到源码，也无法看到翻译后的结果的显示样式，作为开发者应当通过各种方式向译者提供详尽的上下文信息。</target>
      </trans-unit>
      <trans-unit id="53428">
        <source>再综合考虑 `koishi` 对 i18n 的处理方式与 Crowdin 支持的格式，采用 `YAML` 是较为经济的选择。</source>
        <target state="needs-translation">再综合考虑 `koishi` 对 i18n 的处理方式与 Crowdin 支持的格式，采用 `YAML` 是较为经济的选择。</target>
      </trans-unit>
      <trans-unit id="53430">
        <source>Crowdin 会读取 `YAML` 中的键值和注释作为该待翻译字符串的上下文。</source>
        <target state="needs-translation">Crowdin 会读取 `YAML` 中的键值和注释作为该待翻译字符串的上下文。</target>
      </trans-unit>
      <trans-unit id="53432">
        <source>以下面的 `YAML` 为例：</source>
        <target state="needs-translation">以下面的 `YAML` 为例：</target>
      </trans-unit>
      <trans-unit id="53434">
        <source>commands:
  ping:
    description: 回复 ping 信息
    options:
      # 这是一段注释
      detail: 显示网络连接情况
    messages:
      pong: PONG! # 注释也可以写在后方</source>
        <target state="needs-translation">commands:
  ping:
    description: 回复 ping 信息
    options:
      # 这是一段注释
      detail: 显示网络连接情况
    messages:
      pong: PONG! # 注释也可以写在后方</target>
      </trans-unit>
      <trans-unit id="53436">
        <source>那么在翻译界面，Crowdin 会为 `回复 ping 信息` 这一字符串添加 `commands.ping.description` 作为其上下文信息。</source>
        <target state="needs-translation">那么在翻译界面，Crowdin 会为 `回复 ping 信息` 这一字符串添加 `commands.ping.description` 作为其上下文信息。</target>
      </trans-unit>
      <trans-unit id="53438">
        <source>而对于 `显示网络连接情况` 这一字符串，除了显示 `commands.ping.options.detail` 以外，还会显示 `这是一段注释` 作为其上下文信息。</source>
        <target state="needs-translation">而对于 `显示网络连接情况` 这一字符串，除了显示 `commands.ping.options.detail` 以外，还会显示 `这是一段注释` 作为其上下文信息。</target>
      </trans-unit>
      <trans-unit id="53440">
        <source>当然，除了写在键值的上方，你也可以写在键值后方，效果是一样的。</source>
        <target state="needs-translation">当然，除了写在键值的上方，你也可以写在键值后方，效果是一样的。</target>
      </trans-unit>
      <trans-unit id="53442">
        <source>commands:
  dress:
    message:
      dress: '{name}今天穿了{color}色的裙子'</source>
        <target state="needs-translation">commands:
  dress:
    message:
      dress: '{name}今天穿了{color}色的裙子'</target>
      </trans-unit>
      <trans-unit id="53444">
        <source>与大部分 CAT 工具一样，Crowdin 同样会标识出诸如 `{name}` 这样的插值语法，并且在译文缺少插值或译者翻译插值变量时报告错误。</source>
        <target state="needs-translation">与大部分 CAT 工具一样，Crowdin 同样会标识出诸如 `{name}` 这样的插值语法，并且在译文缺少插值或译者翻译插值变量时报告错误。</target>
      </trans-unit>
      <trans-unit id="53446">
        <source>进行翻译</source>
        <target state="needs-translation">进行翻译</target>
      </trans-unit>
      <trans-unit id="53448">
        <source>当你成功添加源文件之后，就可以着手进行翻译了。</source>
        <target state="needs-translation">当你成功添加源文件之后，就可以着手进行翻译了。</target>
      </trans-unit>
      <trans-unit id="53450">
        <source>点开想要翻译的语言，打开对应文件，就可以进入 Crowdin 的在线翻译编辑器。</source>
        <target state="needs-translation">点开想要翻译的语言，打开对应文件，就可以进入 Crowdin 的在线翻译编辑器。</target>
      </trans-unit>
      <trans-unit id="53452">
        <source>假设你是从个人电脑打开的，那么视图会从左到右分成三个部分，左边是待翻译的字符串，中间是翻译区，右边是评论和参考区。</source>
        <target state="needs-translation">假设你是从个人电脑打开的，那么视图会从左到右分成三个部分，左边是待翻译的字符串，中间是翻译区，右边是评论和参考区。</target>
      </trans-unit>
      <trans-unit id="53454">
        <source>![crowdin online editor](https://support.crowdin.com/assets/docs/online_editor_sections.png)</source>
        <target state="needs-translation">![crowdin online editor](https://support.crowdin.com/assets/docs/online_editor_sections.png)</target>
      </trans-unit>
      <trans-unit id="53456">
        <source>如果你对该项目申请了开源项目免费许可，那么该项目还会启用 Global TM 功能。</source>
        <target state="needs-translation">如果你对该项目申请了开源项目免费许可，那么该项目还会启用 Global TM 功能。</target>
      </trans-unit>
      <trans-unit id="53458">
        <source>这是 Crowdin 的共享翻译语料库，可以根据其他人的项目中存在的类似文本对当前的待翻译字符串进行提示，你的项目的字符串及翻译结果也会上传到这个语料库中。</source>
        <target state="needs-translation">这是 Crowdin 的共享翻译语料库，可以根据其他人的项目中存在的类似文本对当前的待翻译字符串进行提示，你的项目的字符串及翻译结果也会上传到这个语料库中。</target>
      </trans-unit>
      <trans-unit id="53460">
        <source>下载翻译</source>
        <target state="needs-translation">下载翻译</target>
      </trans-unit>
      <trans-unit id="53462">
        <source>与上传翻译一样，Crowdin 提供了多种方式可以下载翻译结果，你可以直接通过网页下载单个或多个文件，也可以通过 Crowdin CLI 下载。</source>
        <target state="needs-translation">与上传翻译一样，Crowdin 提供了多种方式可以下载翻译结果，你可以直接通过网页下载单个或多个文件，也可以通过 Crowdin CLI 下载。</target>
      </trans-unit>
      <trans-unit id="53464">
        <source>如果你设置了与任何代码仓库的集成，并勾选了定时同步，则 Crowdin 会自动推送翻译结果到指定的分支。</source>
        <target state="needs-translation">如果你设置了与任何代码仓库的集成，并勾选了定时同步，则 Crowdin 会自动推送翻译结果到指定的分支。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1580" original="/[koishijs.docs] main/zh-CN/guide/i18n/index.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="53466">
        <source>基本用法</source>
        <target state="needs-translation">基本用法</target>
      </trans-unit>
      <trans-unit id="53468">
        <source>在学习本章之前，建议先完整阅读 [入门 &gt; 国际化](../../manual/usage/customize.md#国际化)。</source>
        <target state="needs-translation">在学习本章之前，建议先完整阅读 [入门 &gt; 国际化](../../manual/usage/customize.md#国际化)。</target>
      </trans-unit>
      <trans-unit id="53470">
        <source>如果你在运营一个大型社区，那么你可能会遇到这种场景：群组内设立了许多不同语言的频道，每个频道分别供不同地区的用户进行交流。</source>
        <target state="needs-translation">如果你在运营一个大型社区，那么你可能会遇到这种场景：群组内设立了许多不同语言的频道，每个频道分别供不同地区的用户进行交流。</target>
      </trans-unit>
      <trans-unit id="53472">
        <source>在这种情况下，最合适的做法是让你的机器人在不同的频道下使用不同的语言进行回复。</source>
        <target state="needs-translation">在这种情况下，最合适的做法是让你的机器人在不同的频道下使用不同的语言进行回复。</target>
      </trans-unit>
      <trans-unit id="53474">
        <source>本质上，这不会改变机器人的运行逻辑，因此最好的做法是将涉及的每一段文本都抽离出来，通过统一的方式进行管理，并在发送前进行本地化渲染。</source>
        <target state="needs-translation">本质上，这不会改变机器人的运行逻辑，因此最好的做法是将涉及的每一段文本都抽离出来，通过统一的方式进行管理，并在发送前进行本地化渲染。</target>
      </trans-unit>
      <trans-unit id="53476">
        <source>基本示例</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">基礎實例</target>
      </trans-unit>
      <trans-unit id="53478">
        <source>让我们先看一个最简单的例子：</source>
        <target state="needs-translation">让我们先看一个最简单的例子：</target>
      </trans-unit>
      <trans-unit id="53480">
        <source>ctx.i18n.define('zh-CN', { hello: '你好！' })
ctx.i18n.define('en-US', { hello: 'Hello!' })</source>
        <target state="needs-translation">ctx.i18n.define('zh-CN', { hello: '你好！' })
ctx.i18n.define('en-US', { hello: 'Hello!' })</target>
      </trans-unit>
      <trans-unit id="53482">
        <source>上面的代码定义了两种语言下 `hello` 对应的翻译文本。</source>
        <target state="needs-translation">上面的代码定义了两种语言下 `hello` 对应的翻译文本。</target>
      </trans-unit>
      <trans-unit id="53484">
        <source>其中 `zh-CN` 和 `en-US` 称为语言名，`hello` 称为渲染路径，后面的字符串是对应的翻译文本。</source>
        <target state="needs-translation">其中 `zh-CN` 和 `en-US` 称为语言名，`hello` 称为渲染路径，后面的字符串是对应的翻译文本。</target>
      </trans-unit>
      <trans-unit id="53486">
        <source>现在我们把它用在 `session.text()` 中：</source>
        <target state="needs-translation">现在我们把它用在 `session.text()` 中：</target>
      </trans-unit>
      <trans-unit id="53488">
        <source>ctx.middleware((session, next) =&gt; {
  if (session.content === 'greeting') {
    return session.text('hello')
  } else {
    return next()
  }
})</source>
        <target state="needs-translation">ctx.middleware((session, next) =&gt; {
  if (session.content === 'greeting') {
    return session.text('hello')
  } else {
    return next()
  }
})</target>
      </trans-unit>
      <trans-unit id="53490">
        <source>greeting</source>
        <target state="needs-translation">greeting</target>
      </trans-unit>
      <trans-unit id="53492">
        <source>你好！</source>
        <target state="needs-translation">你好！</target>
      </trans-unit>
      <trans-unit id="53494">
        <source>我们看到机器人回复了「你好！」，这是因为 Koishi 使用的默认语言是中文。</source>
        <target state="needs-translation">我们看到机器人回复了「你好！」，这是因为 Koishi 使用的默认语言是中文。</target>
      </trans-unit>
      <trans-unit id="53496">
        <source>现在，如果我们希望它在某个频道使用英文，我们只需设置这个频道的属性：</source>
        <target state="needs-translation">现在，如果我们希望它在某个频道使用英文，我们只需设置这个频道的属性：</target>
      </trans-unit>
      <trans-unit id="53498">
        <source>channel.locales = ['en-US']</source>
        <target state="needs-translation">channel.locales = ['en-US']</target>
      </trans-unit>
      <trans-unit id="53500">
        <source>greeting</source>
        <target state="needs-translation">greeting</target>
      </trans-unit>
      <trans-unit id="53502">
        <source>Hello!</source>
        <target state="needs-translation">Hello!</target>
      </trans-unit>
      <trans-unit id="53504">
        <source>模板能力</source>
        <target state="needs-translation">模板能力</target>
      </trans-unit>
      <trans-unit id="53506">
        <source>插值语法</source>
        <target state="needs-translation">插值语法</target>
      </trans-unit>
      <trans-unit id="53508">
        <source>向 `session.text()` 中传入第二个参数，就可以在模板中使用单花括号插值。</source>
        <target state="needs-translation">向 `session.text()` 中传入第二个参数，就可以在模板中使用单花括号插值。</target>
      </trans-unit>
      <trans-unit id="53510">
        <source>花括号 `{}` 中的内容将对应传入列表的索引。</source>
        <target state="needs-translation">花括号 `{}` 中的内容将对应传入列表的索引。</target>
      </trans-unit>
      <trans-unit id="53512">
        <source>ctx.i18n.define('zh-CN', { hello: '你好，{0}！' })
ctx.i18n.define('en-US', { hello: 'Hello, {0}!' })

ctx.middleware((session, next) =&gt; {
  if (session.content === 'greeting') {
    return session.text('hello', [session.author.name])
  } else {
    return next()
  }
})</source>
        <target state="needs-translation">ctx.i18n.define('zh-CN', { hello: '你好，{0}！' })
ctx.i18n.define('en-US', { hello: 'Hello, {0}!' })

ctx.middleware((session, next) =&gt; {
  if (session.content === 'greeting') {
    return session.text('hello', [session.author.name])
  } else {
    return next()
  }
})</target>
      </trans-unit>
      <trans-unit id="53514">
        <source>greeting</source>
        <target state="needs-translation">greeting</target>
      </trans-unit>
      <trans-unit id="53516">
        <source>Hello, Alice!</source>
        <target state="needs-translation">Hello, Alice!</target>
      </trans-unit>
      <trans-unit id="53518">
        <source>这里的参数也可以是一个对象，此时花括号中的内容仍然表示对象的索引。</source>
        <target state="needs-translation">这里的参数也可以是一个对象，此时花括号中的内容仍然表示对象的索引。</target>
      </trans-unit>
      <trans-unit id="53520">
        <source>ctx.i18n.define('zh-CN', { hello: '你好，{username}！' })
ctx.i18n.define('en-US', { hello: 'Hello, {username}!' })

ctx.middleware((session, next) =&gt; {
  if (session.content === 'greeting') {
    return session.text('hello', session.author)
  } else {
    return next()
  }
})</source>
        <target state="needs-translation">ctx.i18n.define('zh-CN', { hello: '你好，{username}！' })
ctx.i18n.define('en-US', { hello: 'Hello, {username}!' })

ctx.middleware((session, next) =&gt; {
  if (session.content === 'greeting') {
    return session.text('hello', session.author)
  } else {
    return next()
  }
})</target>
      </trans-unit>
      <trans-unit id="53522">
        <source>如果要访问对象深层的内容，只需将多个属性之间用 `.` 连接。</source>
        <target state="needs-translation">如果要访问对象深层的内容，只需将多个属性之间用 `.` 连接。</target>
      </trans-unit>
      <trans-unit id="53524">
        <source>利用这种方法，你甚至可以把整个 `session` 传进去：</source>
        <target state="needs-translation">利用这种方法，你甚至可以把整个 `session` 传进去：</target>
      </trans-unit>
      <trans-unit id="53526">
        <source>ctx.i18n.define('zh-CN', { hello: '你好，{author.name}！' })
ctx.i18n.define('en-US', { hello: 'Hello, {author.name}!' })</source>
        <target state="needs-translation">ctx.i18n.define('zh-CN', { hello: '你好，{author.name}！' })
ctx.i18n.define('en-US', { hello: 'Hello, {author.name}!' })</target>
      </trans-unit>
      <trans-unit id="53528">
        <source>上述三段代码的实际效果完全相同，可以根据自己的需要进行选择。</source>
        <target state="needs-translation">上述三段代码的实际效果完全相同，可以根据自己的需要进行选择。</target>
      </trans-unit>
      <trans-unit id="65400">
        <source>如果你希望对属性值进行某些计算，传入 Javascript 表达式也是可以的：</source>
        <target state="needs-translation">如果你希望对属性值进行某些计算，传入 Javascript 表达式也是可以的：</target>
      </trans-unit>
      <trans-unit id="65402">
        <source>ctx.i18n.define('zh-CN', { list: '列表：{arr.join(&quot;,&quot;)}' })
ctx.i18n.define('en-US', { list: 'List: {arr.join(&quot;,&quot;)}' })</source>
        <target state="needs-translation">ctx.i18n.define('zh-CN', { list: '列表：{arr.join(&quot;,&quot;)}' })
ctx.i18n.define('en-US', { list: 'List: {arr.join(&quot;,&quot;)}' })</target>
      </trans-unit>
      <trans-unit id="65404">
        <source>此外，如果向 `session.text()` 传入的二参数是一个数组，那么直接写 `{0}` 将表示数组中的第一个元素 (而非作为 JavaScript 表达式的 `0`)。</source>
        <target state="needs-translation">此外，如果向 `session.text()` 传入的二参数是一个数组，那么直接写 `{0}` 将表示数组中的第一个元素 (而非作为 JavaScript 表达式的 `0`)。</target>
      </trans-unit>
      <trans-unit id="65406">
        <source>:::</source>
        <target state="needs-translation">:::</target>
      </trans-unit>
      <trans-unit id="53530">
        <source>使用消息元素</source>
        <target state="needs-translation">使用消息元素</target>
      </trans-unit>
      <trans-unit id="53532">
        <source>你也可以在模板中使用 [消息元素](../basic/element.md) 语法。</source>
        <target state="needs-translation">你也可以在模板中使用 [消息元素](../basic/element.md) 语法。</target>
      </trans-unit>
      <trans-unit id="53534">
        <source>消息元素的属性同样使用 `{}` 进行插值：</source>
        <target state="needs-translation">消息元素的属性同样使用 `{}` 进行插值：</target>
      </trans-unit>
      <trans-unit id="53536">
        <source>ctx.i18n.define('zh-CN', { hello: '你好，&lt;at id={userId}/&gt;！' })
ctx.i18n.define('en-US', { hello: 'Hello, &lt;at id={userId}/&gt;!' })</source>
        <target state="needs-translation">ctx.i18n.define('zh-CN', { hello: '你好，&lt;at id={userId}/&gt;！' })
ctx.i18n.define('en-US', { hello: 'Hello, &lt;at id={userId}/&gt;!' })</target>
      </trans-unit>
      <trans-unit id="53538">
        <source>你也可以使用消息组件，例如使用 `&lt;i18n&gt;` 组件引用其他翻译，或使用 `&lt;i18n:time&gt;` 表示本地化的时间：</source>
        <target state="needs-translation">你也可以使用消息组件，例如使用 `&lt;i18n&gt;` 组件引用其他翻译，或使用 `&lt;i18n:time&gt;` 表示本地化的时间：</target>
      </trans-unit>
      <trans-unit id="53540">
        <source>ctx.i18n.define('zh-CN', { remain: '剩余时间：&lt;i18n:time value={value}/&gt;' })
ctx.i18n.define('en-US', { remain: 'Time Remain: &lt;i18n:time value={value}/&gt;' })</source>
        <target state="needs-translation">ctx.i18n.define('zh-CN', { remain: '剩余时间：&lt;i18n:time value={value}/&gt;' })
ctx.i18n.define('en-US', { remain: 'Time Remain: &lt;i18n:time value={value}/&gt;' })</target>
      </trans-unit>
      <trans-unit id="53542">
        <source>条件和循环 &lt;badge type=&quot;warning&quot;&gt;实验性&lt;/badge&gt;</source>
        <target state="needs-translation">条件和循环 &lt;badge type=&quot;warning&quot;&gt;实验性&lt;/badge&gt;</target>
      </trans-unit>
      <trans-unit id="53544">
        <source>我们为模板提供了一些基本的控制流语法，它参考了 [Svelte](https://svelte.dev/) 的设计 (但并未完整实现)。</source>
        <target state="needs-translation">我们为模板提供了一些基本的控制流语法，它参考了 [Svelte](https://svelte.dev/) 的设计 (但并未完整实现)。</target>
      </trans-unit>
      <trans-unit id="53546">
        <source>你可以在模板中通过 `{#if}` 和 `{#each}` 来实现条件和循环。</source>
        <target state="needs-translation">你可以在模板中通过 `{#if}` 和 `{#each}` 来实现条件和循环。</target>
      </trans-unit>
      <trans-unit id="53548">
        <source>例如，下面的代码将会渲染一个列表：</source>
        <target state="needs-translation">例如，下面的代码将会渲染一个列表：</target>
      </trans-unit>
      <trans-unit id="53550">
        <source>{#if list.length === 0}
  列表中没有元素。
{:else}
  {#each list as item}
    {item}
  {/each}
{/if}</source>
        <target state="needs-translation">{#if list.length === 0}
  列表中没有元素。
{:else}
  {#each list as item}
    {item}
  {/each}
{/if}</target>
      </trans-unit>
      <trans-unit id="53552">
        <source>如果要使用这种层面的模板能力，那么你的代码已经不适合使用 `ctx.i18n.define()` 定义了。</source>
        <target state="needs-translation">如果要使用这种层面的模板能力，那么你的代码已经不适合使用 `ctx.i18n.define()` 定义了。</target>
      </trans-unit>
      <trans-unit id="53554">
        <source>建议参考 [下一节](./translation.md) 中的做法，将不同语言的模板放入不同的文件中，以方便编辑和管理。</source>
        <target state="needs-translation">建议参考 [下一节](./translation.md) 中的做法，将不同语言的模板放入不同的文件中，以方便编辑和管理。</target>
      </trans-unit>
      <trans-unit id="53556">
        <source>渲染回退</source>
        <target state="needs-translation">渲染回退</target>
      </trans-unit>
      <trans-unit id="53558">
        <source>一次完整的本地化渲染可能涉及多种不同优先级的语言和渲染路径。</source>
        <target state="needs-translation">一次完整的本地化渲染可能涉及多种不同优先级的语言和渲染路径。</target>
      </trans-unit>
      <trans-unit id="53560">
        <source>当首选语言的首选路径对应的翻译文本不存在时，会依次尝试使用其他翻译，这就是渲染回退。</source>
        <target state="needs-translation">当首选语言的首选路径对应的翻译文本不存在时，会依次尝试使用其他翻译，这就是渲染回退。</target>
      </trans-unit>
      <trans-unit id="53562">
        <source>基于语言的回退</source>
        <target state="needs-translation">基于语言的回退</target>
      </trans-unit>
      <trans-unit id="53564">
        <source>首先需要了解的是基于语言的回退。</source>
        <target state="needs-translation">首先需要了解的是基于语言的回退。</target>
      </trans-unit>
      <trans-unit id="53566">
        <source>根据 [IETF 语言标签](https://zh.wikipedia.org/wiki/IETF%E8%AA%9E%E8%A8%80%E6%A8%99%E7%B1%A4) 规范，一个语言名称可以包含由 `-` 分隔的多个部分，例如 `de-DE-bavarian`。</source>
        <target state="needs-translation">根据 [IETF 语言标签](https://zh.wikipedia.org/wiki/IETF%E8%AA%9E%E8%A8%80%E6%A8%99%E7%B1%A4) 规范，一个语言名称可以包含由 `-` 分隔的多个部分，例如 `de-DE-bavarian`。</target>
      </trans-unit>
      <trans-unit id="53568">
        <source>用户可以为应用设置 [`config.i18n.locales`](../../api/core/app.md#i18n-locales) 来指定可用的语言列表，这些语言将按照 `-` 分隔符形成一棵字典树，而 Koishi 会按照以下规则进行回退：</source>
        <target state="needs-translation">用户可以为应用设置 [`config.i18n.locales`](../../api/core/app.md#i18n-locales) 来指定可用的语言列表，这些语言将按照 `-` 分隔符形成一棵字典树，而 Koishi 会按照以下规则进行回退：</target>
      </trans-unit>
      <trans-unit id="53570">
        <source>找到目标语言的在字典树中出现的最长前缀对应的节点；</source>
        <target state="needs-translation">找到目标语言的在字典树中出现的最长前缀对应的节点；</target>
      </trans-unit>
      <trans-unit id="53572">
        <source>按照用户配置的优先级渲染改节点的子树所包含的语言，并将它们移除；</source>
        <target state="needs-translation">按照用户配置的优先级渲染改节点的子树所包含的语言，并将它们移除；</target>
      </trans-unit>
      <trans-unit id="53574">
        <source>如果此时仍有未被渲染过的语言，那么回到 1 继续遍历，直到所有语言被遍历完全。</source>
        <target state="needs-translation">如果此时仍有未被渲染过的语言，那么回到 1 继续遍历，直到所有语言被遍历完全。</target>
      </trans-unit>
      <trans-unit id="53576">
        <source>例如，如果用户配置的语言列表为 `zh-CN`, `en-US`, `zh-TW`, `en-GB`，则对于不同的目标语言会生成对应的回退序列：</source>
        <target state="needs-translation">例如，如果用户配置的语言列表为 `zh-CN`, `en-US`, `zh-TW`, `en-GB`，则对于不同的目标语言会生成对应的回退序列：</target>
      </trans-unit>
      <trans-unit id="53578">
        <source>目标语言为 `en`，回退序列为 `en`, `en-US`, `en-GB`, ` `, `zh`, `zh-CN`, `zh-TW`</source>
        <target state="needs-translation">目标语言为 `en`，回退序列为 `en`, `en-US`, `en-GB`, ` `, `zh`, `zh-CN`, `zh-TW`</target>
      </trans-unit>
      <trans-unit id="53580">
        <source>目标语言为 `zh-TW`，回退序列为 `zh-TW`, `zh`, `zh-CN`, `en`, `en-US`, `en-GB`, ` `</source>
        <target state="needs-translation">目标语言为 `zh-TW`，回退序列为 `zh-TW`, `zh`, `zh-CN`, `en`, `en-US`, `en-GB`, ` `</target>
      </trans-unit>
      <trans-unit id="53582">
        <source>目标语言为 `de-DE`，回退序列为 ` `, `zh`, `zh-CN`, `zh-TW`, `en`, `en-US`, `en-GB`</source>
        <target state="needs-translation">目标语言为 `de-DE`，回退序列为 ` `, `zh`, `zh-CN`, `zh-TW`, `en`, `en-US`, `en-GB`</target>
      </trans-unit>
      <trans-unit id="53584">
        <source>目标语言为 `en`, `zh-TW`，回退序列为 `en`, `en-US`, `en-GB`, `zh-TW`, `zh`, `zh-CN`, ` `</source>
        <target state="needs-translation">目标语言为 `en`, `zh-TW`，回退序列为 `en`, `en-US`, `en-GB`, `zh-TW`, `zh`, `zh-CN`, ` `</target>
      </trans-unit>
      <trans-unit id="53586">
        <source>目标语言为 `zh-TW`, `en`，回退序列为 `zh-TW`, `en`, `en-US`, `en-GB`, `zh`, `zh-CN`, ` `</source>
        <target state="needs-translation">目标语言为 `zh-TW`, `en`，回退序列为 `zh-TW`, `en`, `en-US`, `en-GB`, `zh`, `zh-CN`, ` `</target>
      </trans-unit>
      <trans-unit id="53588">
        <source>请注意，空字符串也被视为合法的语言，其所代表的是「没有指定语言」的情况。</source>
        <target state="needs-translation">请注意，空字符串也被视为合法的语言，其所代表的是「没有指定语言」的情况。</target>
      </trans-unit>
      <trans-unit id="53590">
        <source>在实践中，空语言的使用是非常广泛的，例如当用户使用下面的代码定义指令：</source>
        <target state="needs-translation">在实践中，空语言的使用是非常广泛的，例如当用户使用下面的代码定义指令：</target>
      </trans-unit>
      <trans-unit id="53592">
        <source>ctx.command('echo', '回声')</source>
        <target state="needs-translation">ctx.command('echo', '回声')</target>
      </trans-unit>
      <trans-unit id="53594">
        <source>此时我们无法推测出「回声」的语言，因此它将会被作为路径 `commands.echo.name` 注册到空语言下。</source>
        <target state="needs-translation">此时我们无法推测出「回声」的语言，因此它将会被作为路径 `commands.echo.name` 注册到空语言下。</target>
      </trans-unit>
      <trans-unit id="53596">
        <source>用户可以为其定义其他语言的翻译，但在未命中任何翻译时，它将回退到空语言。</source>
        <target state="needs-translation">用户可以为其定义其他语言的翻译，但在未命中任何翻译时，它将回退到空语言。</target>
      </trans-unit>
      <trans-unit id="53598">
        <source>基于会话的回退</source>
        <target state="needs-translation">基于会话的回退</target>
      </trans-unit>
      <trans-unit id="53600">
        <source>实际的本地化渲染通常发生在消息会话中。</source>
        <target state="needs-translation">实际的本地化渲染通常发生在消息会话中。</target>
      </trans-unit>
      <trans-unit id="53602">
        <source>对于一个会话，我们可以从以下几个维度来确定它的目标语言 (每个维度都可以存在多个目标语言)：</source>
        <target state="needs-translation">对于一个会话，我们可以从以下几个维度来确定它的目标语言 (每个维度都可以存在多个目标语言)：</target>
      </trans-unit>
      <trans-unit id="53604">
        <source>会话语言 (`session.locales`)</source>
        <target state="needs-translation">会话语言 (`session.locales`)</target>
      </trans-unit>
      <trans-unit id="53606">
        <source>频道语言 (`session.channel.locales`)</source>
        <target state="needs-translation">频道语言 (`session.channel.locales`)</target>
      </trans-unit>
      <trans-unit id="53608">
        <source>群组语言 (`session.guild.locales`)</source>
        <target state="needs-translation">群组语言 (`session.guild.locales`)</target>
      </trans-unit>
      <trans-unit id="53610">
        <source>用户语言 (`session.user.locales`)</source>
        <target state="needs-translation">用户语言 (`session.user.locales`)</target>
      </trans-unit>
      <trans-unit id="53612">
        <source>最终的目标语言将会是上述语言按顺序的并集，再根据前面介绍的规则进行回退渲染。</source>
        <target state="needs-translation">最终的目标语言将会是上述语言按顺序的并集，再根据前面介绍的规则进行回退渲染。</target>
      </trans-unit>
      <trans-unit id="53614">
        <source>会话语言可以在一些交互场景中被直接感知得到。</source>
        <target state="needs-translation">会话语言可以在一些交互场景中被直接感知得到。</target>
      </trans-unit>
      <trans-unit id="53616">
        <source>例如，用户如果在聊天平台中已经设置了语言偏好 (并且聊天平台提供了相应的 API)，则相关的设置可以通过适配器插件提供给会话。</source>
        <target state="needs-translation">例如，用户如果在聊天平台中已经设置了语言偏好 (并且聊天平台提供了相应的 API)，则相关的设置可以通过适配器插件提供给会话。</target>
      </trans-unit>
      <trans-unit id="53618">
        <source>又比如，当开发者为一个指令设置了多种语言的别名时，可以为这些别名手动指定语言，当用户调用某一个别名时，Koishi 会按照设定好的语言来回答。</source>
        <target state="needs-translation">又比如，当开发者为一个指令设置了多种语言的别名时，可以为这些别名手动指定语言，当用户调用某一个别名时，Koishi 会按照设定好的语言来回答。</target>
      </trans-unit>
      <trans-unit id="53620">
        <source>用户语言与频道、群组语言的优先关系可以通过 [`config.i18n.output`](../../api/core/app.md#i18n-output) 来指定。</source>
        <target state="needs-translation">用户语言与频道、群组语言的优先关系可以通过 [`config.i18n.output`](../../api/core/app.md#i18n-output) 来指定。</target>
      </trans-unit>
      <trans-unit id="53622">
        <source>默认情况下频道和群组的语言优先级高于用户语言，但是你可以将其设置为 `prefer-user` 来改变这一行为。</source>
        <target state="needs-translation">默认情况下频道和群组的语言优先级高于用户语言，但是你可以将其设置为 `prefer-user` 来改变这一行为。</target>
      </trans-unit>
      <trans-unit id="53624">
        <source>基于路径的回退</source>
        <target state="needs-translation">基于路径的回退</target>
      </trans-unit>
      <trans-unit id="53626">
        <source>你也可以配置多个路径，将会按照顺序查找翻译，直到找到一个翻译为止。</source>
        <target state="needs-translation">你也可以配置多个路径，将会按照顺序查找翻译，直到找到一个翻译为止。</target>
      </trans-unit>
      <trans-unit id="53628">
        <source>session.text(['foo', 'bar'])</source>
        <target state="needs-translation">session.text(['foo', 'bar'])</target>
      </trans-unit>
      <trans-unit id="53630">
        <source>路径回退的优先级低于语言回退。</source>
        <target state="needs-translation">路径回退的优先级低于语言回退。</target>
      </trans-unit>
      <trans-unit id="53632">
        <source>举个例子，假如可选的语言包括 A 和 B，路径包括 1 和 2。</source>
        <target state="needs-translation">举个例子，假如可选的语言包括 A 和 B，路径包括 1 和 2。</target>
      </trans-unit>
      <trans-unit id="53634">
        <source>翻译 A1 不存在，但是翻译 A2 和 B1 都存在。</source>
        <target state="needs-translation">翻译 A1 不存在，但是翻译 A2 和 B1 都存在。</target>
      </trans-unit>
      <trans-unit id="53636">
        <source>这种情况下会输出 B1 而非 A2。</source>
        <target state="needs-translation">这种情况下会输出 B1 而非 A2。</target>
      </trans-unit>
      <trans-unit id="53638">
        <source>采用这种设计是因为不同的路径通常表达了不同的逻辑。</source>
        <target state="needs-translation">采用这种设计是因为不同的路径通常表达了不同的逻辑。</target>
      </trans-unit>
      <trans-unit id="53640">
        <source>相比语言的正确性，逻辑的正确性更重要。</source>
        <target state="needs-translation">相比语言的正确性，逻辑的正确性更重要。</target>
      </trans-unit>
      <trans-unit id="53642">
        <source>利用这种行为，你可以实现静默渲染。</source>
        <target state="needs-translation">利用这种行为，你可以实现静默渲染。</target>
      </trans-unit>
      <trans-unit id="53644">
        <source>下面的代码当未找到翻译时，将只会输出一个空串，并且不会输出警告：</source>
        <target state="needs-translation">下面的代码当未找到翻译时，将只会输出一个空串，并且不会输出警告：</target>
      </trans-unit>
      <trans-unit id="53646">
        <source>session.text(['foo', ''])</source>
        <target state="needs-translation">session.text(['foo', ''])</target>
      </trans-unit>
      <trans-unit id="53648">
        <source>用户侧覆写</source>
        <target state="needs-translation">用户侧覆写</target>
      </trans-unit>
      <trans-unit id="53650">
        <source>用户可以通过 [locales](../../plugins/console/locales.md) 插件提供本地翻译，且这些翻译的优先级高于插件自身提供的翻译。</source>
        <target state="needs-translation">用户可以通过 [locales](../../plugins/console/locales.md) 插件提供本地翻译，且这些翻译的优先级高于插件自身提供的翻译。</target>
      </trans-unit>
      <trans-unit id="53652">
        <source>可以认为，从用户提供的翻译到插件提供的翻译，也是一种回退关系。</source>
        <target state="needs-translation">可以认为，从用户提供的翻译到插件提供的翻译，也是一种回退关系。</target>
      </trans-unit>
      <trans-unit id="53654">
        <source>关于用户侧覆写的更多信息，请参见 [入门 &gt; 深入定制机器人](../../manual/usage/customize.md)。</source>
        <target state="needs-translation">关于用户侧覆写的更多信息，请参见 [入门 &gt; 深入定制机器人](../../manual/usage/customize.md)。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1582" original="/[koishijs.docs] main/zh-CN/guide/i18n/lang-pack.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="53656">
        <source>语言包开发 &lt;badge type=&quot;warning&quot;&gt;实验性&lt;/badge&gt;</source>
        <target state="needs-translation">语言包开发 &lt;badge type=&quot;warning&quot;&gt;实验性&lt;/badge&gt;</target>
      </trans-unit>
      <trans-unit id="53658">
        <source>Koishi 及其官方插件通常会内置 `zh-CN` 和 `en-US` 两种语言。</source>
        <target state="needs-translation">Koishi 及其官方插件通常会内置 `zh-CN` 和 `en-US` 两种语言。</target>
      </trans-unit>
      <trans-unit id="53660">
        <source>除此以外，还有一些语言同样由官方维护，但是并不会直接内置，而是以专门的插件的形式提供：</source>
        <target state="needs-translation">除此以外，还有一些语言同样由官方维护，但是并不会直接内置，而是以专门的插件的形式提供：</target>
      </trans-unit>
      <trans-unit id="53662">
        <source>`de-DE`</source>
        <target state="needs-translation">`de-DE`</target>
      </trans-unit>
      <trans-unit id="53664">
        <source>`fr-FR`</source>
        <target state="needs-translation">`fr-FR`</target>
      </trans-unit>
      <trans-unit id="53666">
        <source>`ja-JP`</source>
        <target state="needs-translation">`ja-JP`</target>
      </trans-unit>
      <trans-unit id="53668">
        <source>`ru-RU`</source>
        <target state="needs-translation">`ru-RU`</target>
      </trans-unit>
      <trans-unit id="53670">
        <source>`zh-TW`</source>
        <target state="needs-translation">`zh-TW`</target>
      </trans-unit>
      <trans-unit id="53672">
        <source>对应的插件名将形如 @koishijs/plugin-locale-zh-tw (请注意插件名中只会使用小写字母)。</source>
        <target state="needs-translation">对应的插件名将形如 @koishijs/plugin-locale-zh-tw (请注意插件名中只会使用小写字母)。</target>
      </trans-unit>
      <trans-unit id="53674">
        <source>参与官方翻译项目</source>
        <target state="needs-translation">参与官方翻译项目</target>
      </trans-unit>
      <trans-unit id="53676">
        <source>我们在 [Crowdin](https://crowdin.com/project/koishi) 上维护了一个翻译项目，你可以在这里参与上述语言的翻译 (包括 `en-US`)。</source>
        <target state="needs-translation">我们在 [Crowdin](https://crowdin.com/project/koishi) 上维护了一个翻译项目，你可以在这里参与上述语言的翻译 (包括 `en-US`)。</target>
      </trans-unit>
      <trans-unit id="53678">
        <source>经过审核的翻译将会被自动同步到 GitHub 仓库中。</source>
        <target state="needs-translation">经过审核的翻译将会被自动同步到 GitHub 仓库中。</target>
      </trans-unit>
      <trans-unit id="53680">
        <source>如果你想翻译的语言不在上述列表中，可以向我们提交 Issue，也可以按照下面的指南发布第三方语言包。</source>
        <target state="needs-translation">如果你想翻译的语言不在上述列表中，可以向我们提交 Issue，也可以按照下面的指南发布第三方语言包。</target>
      </trans-unit>
      <trans-unit id="53682">
        <source>编写第三方语言包</source>
        <target state="needs-translation">编写第三方语言包</target>
      </trans-unit>
      <trans-unit id="53684">
        <source>如果你不仅仅是想提供标准化的翻译，而是希望为 Koishi 提供不同的说话风格，这同样可以通过语言包来实现。</source>
        <target state="needs-translation">如果你不仅仅是想提供标准化的翻译，而是希望为 Koishi 提供不同的说话风格，这同样可以通过语言包来实现。</target>
      </trans-unit>
      <trans-unit id="53686">
        <source>根据 [IETF 语言标签](https://zh.wikipedia.org/wiki/IETF%E8%AA%9E%E8%A8%80%E6%A8%99%E7%B1%A4) 规范，我们可以在标准的语言标签后面添加一个后缀，来表示一个语言变种。</source>
        <target state="needs-translation">根据 [IETF 语言标签](https://zh.wikipedia.org/wiki/IETF%E8%AA%9E%E8%A8%80%E6%A8%99%E7%B1%A4) 规范，我们可以在标准的语言标签后面添加一个后缀，来表示一个语言变种。</target>
      </trans-unit>
      <trans-unit id="53688">
        <source>例如，你可以通过编写名为 `zh-CN-ZAKO` 的语言包，来为 Koishi 提供一个二次元雌小鬼的说话风格：</source>
        <target state="needs-translation">例如，你可以通过编写名为 `zh-CN-ZAKO` 的语言包，来为 Koishi 提供一个二次元雌小鬼的说话风格：</target>
      </trans-unit>
      <trans-unit id="53690">
        <source>—— 当要表达「权限不足」时 ——</source>
        <target state="needs-translation">—— 当要表达「权限不足」时 ——</target>
      </trans-unit>
      <trans-unit id="53692">
        <source>哼，你以为自己是谁啊？</source>
        <target state="needs-translation">哼，你以为自己是谁啊？</target>
      </trans-unit>
      <trans-unit id="53694">
        <source>没那个本事就别想在这里装大头！</source>
        <target state="needs-translation">没那个本事就别想在这里装大头！</target>
      </trans-unit>
      <trans-unit id="53696">
        <source>—— 当要表达「调用过于频繁，请稍后再试」时 ——</source>
        <target state="needs-translation">—— 当要表达「调用过于频繁，请稍后再试」时 ——</target>
      </trans-unit>
      <trans-unit id="53698">
        <source>
哎哟，不要这么着急嘛，稍微等一下下，让人家缓口气~
</source>
        <target state="needs-translation">
哎哟，不要这么着急嘛，稍微等一下下，让人家缓口气~
</target>
      </trans-unit>
    </body>
  </file>
  <file id="1584" original="/[koishijs.docs] main/zh-CN/guide/i18n/translation.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="53700">
        <source>本地化文件</source>
        <target state="needs-translation">本地化文件</target>
      </trans-unit>
      <trans-unit id="53702">
        <source>`i18n.define()` 允许开发者为自己的插件提供多套翻译，但直接将每种语言的翻译文本写进源代码并不利于代码的解耦。</source>
        <target state="needs-translation">`i18n.define()` 允许开发者为自己的插件提供多套翻译，但直接将每种语言的翻译文本写进源代码并不利于代码的解耦。</target>
      </trans-unit>
      <trans-unit id="53704">
        <source>因此我们建议开发者将翻译文件写在一个单独的目录中，在插件中只需要引用这个目录中的文件即可：</source>
        <target state="needs-translation">因此我们建议开发者将翻译文件写在一个单独的目录中，在插件中只需要引用这个目录中的文件即可：</target>
      </trans-unit>
      <trans-unit id="53706">
        <source>└── example
    ├── src
    │   ├── locales
    │   │   ├── en-US.yml
    │   │   └── zh-CN.yml
    │   └── index.ts
    └── package.json</source>
        <target state="needs-translation">└── example
    ├── src
    │   ├── locales
    │   │   ├── en-US.yml
    │   │   └── zh-CN.yml
    │   └── index.ts
    └── package.json</target>
      </trans-unit>
      <trans-unit id="53708">
        <source>ctx.i18n.define('en-US', require('./locales/en-US'))
ctx.i18n.define('zh-CN', require('./locales/zh-CN'))</source>
        <target state="needs-translation">ctx.i18n.define('en-US', require('./locales/en-US'))
ctx.i18n.define('zh-CN', require('./locales/zh-CN'))</target>
      </trans-unit>
      <trans-unit id="53710">
        <source>在上面的例子中我们使用了 YAML 作为翻译文件的格式。</source>
        <target state="needs-translation">在上面的例子中我们使用了 YAML 作为翻译文件的格式。</target>
      </trans-unit>
      <trans-unit id="53712">
        <source>这是因为它的语法简洁美观，非常适合本地化开发。</source>
        <target state="needs-translation">这是因为它的语法简洁美观，非常适合本地化开发。</target>
      </trans-unit>
      <trans-unit id="53714">
        <source>你也可以采用 JSON 等任何你喜欢的格式进行开发。</source>
        <target state="needs-translation">你也可以采用 JSON 等任何你喜欢的格式进行开发。</target>
      </trans-unit>
      <trans-unit id="53716">
        <source>Node.js 并不支持直接加载 `.yaml` / `.yml` 后缀的文件，但我们可以通过适当的 [register](https://nodejs.org/api/cli.html#-r---require-module) 解决这个问题。</source>
        <target state="needs-translation">Node.js 并不支持直接加载 `.yaml` / `.yml` 后缀的文件，但我们可以通过适当的 [register](https://nodejs.org/api/cli.html#-r---require-module) 解决这个问题。</target>
      </trans-unit>
      <trans-unit id="53718">
        <source>对此我们的官方脚手架已经内置了相应的支持。</source>
        <target state="needs-translation">对此我们的官方脚手架已经内置了相应的支持。</target>
      </trans-unit>
      <trans-unit id="53720">
        <source>指令本地化</source>
        <target state="needs-translation">指令本地化</target>
      </trans-unit>
      <trans-unit id="53722">
        <source>在 [编写帮助](../basic/command.md#编写帮助) 一节中，我们已经了解到指令和参数的描述文本都是在指令注册时就定义的。</source>
        <target state="needs-translation">在 [编写帮助](../basic/command.md#编写帮助) 一节中，我们已经了解到指令和参数的描述文本都是在指令注册时就定义的。</target>
      </trans-unit>
      <trans-unit id="53724">
        <source>这种做法对单语言开发固然方便，但并不适合多语言开发，因为它将翻译逻辑与代码逻辑耦合了。</source>
        <target state="needs-translation">这种做法对单语言开发固然方便，但并不适合多语言开发，因为它将翻译逻辑与代码逻辑耦合了。</target>
      </trans-unit>
      <trans-unit id="53726">
        <source>如果你希望你编写的指令支持多语言，那么需要将翻译文本单独定义：</source>
        <target state="needs-translation">如果你希望你编写的指令支持多语言，那么需要将翻译文本单独定义：</target>
      </trans-unit>
      <trans-unit id="53728">
        <source>commands:
  foo:
    description: 指令描述
    usage: |-
      指令用法
      可以是多行文本
    examples: |-
      foo qux
      foo --bar qux
    options:
      bar: 选项描述</source>
        <target state="needs-translation">commands:
  foo:
    description: 指令描述
    usage: |-
      指令用法
      可以是多行文本
    examples: |-
      foo qux
      foo --bar qux
    options:
      bar: 选项描述</target>
      </trans-unit>
      <trans-unit id="53730">
        <source>ctx.command('foo').option('bar')</source>
        <target state="needs-translation">ctx.command('foo').option('bar')</target>
      </trans-unit>
      <trans-unit id="53732">
        <source>上述定义在语言文件中的内容会被 [help](../../plugins/common/help.md) 等插件使用。</source>
        <target state="needs-translation">上述定义在语言文件中的内容会被 [help](../../plugins/common/help.md) 等插件使用。</target>
      </trans-unit>
      <trans-unit id="53734">
        <source>作用域渲染</source>
        <target state="needs-translation">作用域渲染</target>
      </trans-unit>
      <trans-unit id="53736">
        <source>如果我们希望在指令中输出一些本地化内容，为了避免与其他指令定义的内容相冲突，最好的办法是将这些内容与其他指令相关文本定义在一起：</source>
        <target state="needs-translation">如果我们希望在指令中输出一些本地化内容，为了避免与其他指令定义的内容相冲突，最好的办法是将这些内容与其他指令相关文本定义在一起：</target>
      </trans-unit>
      <trans-unit id="53738">
        <source>commands:
  greeting:
    description: 指令描述
    messages:
      morning: 早上好！
      evening: 晚上好！</source>
        <target state="needs-translation">commands:
  greeting:
    description: 指令描述
    messages:
      morning: 早上好！
      evening: 晚上好！</target>
      </trans-unit>
      <trans-unit id="53740">
        <source>但这样一来，你要在指令回调函数中写的东西就显得有点冗长了：</source>
        <target state="needs-translation">但这样一来，你要在指令回调函数中写的东西就显得有点冗长了：</target>
      </trans-unit>
      <trans-unit id="53742">
        <source>if (new Date().getHours &lt; 12) {
  return session.text('commands.greeting.messages.morning')
} else {
  return session.text('commands.greeting.messages.evening')
}</source>
        <target state="needs-translation">if (new Date().getHours &lt; 12) {
  return session.text('commands.greeting.messages.morning')
} else {
  return session.text('commands.greeting.messages.evening')
}</target>
      </trans-unit>
      <trans-unit id="53744">
        <source>有没有好的办法呢？</source>
        <target state="needs-translation">有没有好的办法呢？</target>
      </trans-unit>
      <trans-unit id="53746">
        <source>由于我们在调用指令的回调函数时必然知道它属于哪一个指令，因此这些相同的前缀实际上是可以省略的。</source>
        <target state="needs-translation">由于我们在调用指令的回调函数时必然知道它属于哪一个指令，因此这些相同的前缀实际上是可以省略的。</target>
      </trans-unit>
      <trans-unit id="53748">
        <source>为了避免与全局定义的路径相冲突，我们用一个 `.` 表示当前指令的 `messages` 中的条目，就像这样：</source>
        <target state="needs-translation">为了避免与全局定义的路径相冲突，我们用一个 `.` 表示当前指令的 `messages` 中的条目，就像这样：</target>
      </trans-unit>
      <trans-unit id="53750">
        <source>if (new Date().getHours &lt; 12) {
  return session.text('.morning')
} else {
  return session.text('.evening')
}</source>
        <target state="needs-translation">if (new Date().getHours &lt; 12) {
  return session.text('.morning')
} else {
  return session.text('.evening')
}</target>
      </trans-unit>
      <trans-unit id="53752">
        <source>配置本地化 &lt;badge type=&quot;warning&quot;&gt;实验性&lt;/badge&gt;</source>
        <target state="needs-translation">配置本地化 &lt;badge type=&quot;warning&quot;&gt;实验性&lt;/badge&gt;</target>
      </trans-unit>
      <trans-unit id="53754">
        <source>配置本地化仍然是实验性功能，暂不支持被其他插件扩展。</source>
        <target state="needs-translation">配置本地化仍然是实验性功能，暂不支持被其他插件扩展。</target>
      </trans-unit>
      <trans-unit id="53756">
        <source>插件配置中出现的文本也可以支持多语言。</source>
        <target state="needs-translation">插件配置中出现的文本也可以支持多语言。</target>
      </trans-unit>
      <trans-unit id="53758">
        <source>考虑下面的配置项：</source>
        <target state="needs-translation">考虑下面的配置项：</target>
      </trans-unit>
      <trans-unit id="53760">
        <source>Schema.object({
  foo: Schema.string().description('这是一个字符串。'),
  bar: Schema.number().description('这是一个数值。'),
})</source>
        <target state="needs-translation">Schema.object({
  foo: Schema.string().description('这是一个字符串。'),
  bar: Schema.number().description('这是一个数值。'),
})</target>
      </trans-unit>
      <trans-unit id="53762">
        <source>为了让其支持多语言，我们在翻译文件中增加名为 `_config` 的属性：</source>
        <target state="needs-translation">为了让其支持多语言，我们在翻译文件中增加名为 `_config` 的属性：</target>
      </trans-unit>
      <trans-unit id="53764">
        <source>_config:
  foo: 这是一个字符串。
  bar: 这是一个数值。</source>
        <target state="needs-translation">_config:
  foo: 这是一个字符串。
  bar: 这是一个数值。</target>
      </trans-unit>
      <trans-unit id="53766">
        <source>接着使用 `schema.i18n()` 加载翻译文件：</source>
        <target state="needs-translation">接着使用 `schema.i18n()` 加载翻译文件：</target>
      </trans-unit>
      <trans-unit id="53768">
        <source>Schema.object({
  foo: Schema.string(),
  bar: Schema.number(),
}).i18n({
  'zh-CN': require('./locales/zh-CN')._config,
  'en-US': require('./locales/en-US')._config,
})</source>
        <target state="needs-translation">Schema.object({
  foo: Schema.string(),
  bar: Schema.number(),
}).i18n({
  'zh-CN': require('./locales/zh-CN')._config,
  'en-US': require('./locales/en-US')._config,
})</target>
      </trans-unit>
      <trans-unit id="53770">
        <source>描述复杂类型</source>
        <target state="needs-translation">描述复杂类型</target>
      </trans-unit>
      <trans-unit id="53772">
        <source>默认情况下，上述 `_config` 对象的键对应配置项的键，值则是对应的翻译文本。</source>
        <target state="needs-translation">默认情况下，上述 `_config` 对象的键对应配置项的键，值则是对应的翻译文本。</target>
      </trans-unit>
      <trans-unit id="53774">
        <source>这种写法足以覆盖大部分的情况，即便当出现嵌套的对象或引入 `intersect` 类型时也成立：</source>
        <target state="needs-translation">这种写法足以覆盖大部分的情况，即便当出现嵌套的对象或引入 `intersect` 类型时也成立：</target>
      </trans-unit>
      <trans-unit id="53776">
        <source>// 一个带有嵌套对象和 intersect 的类型
Schema.intersect([
  Schema.object({
    foo: Schema.object({
      qux: Schema.boolean(),
    }),
  }),
  Schema.object({
    bar: Schema.string(),
    baz: Schema.number(),
  }),
])</source>
        <target state="needs-translation">// 一个带有嵌套对象和 intersect 的类型
Schema.intersect([
  Schema.object({
    foo: Schema.object({
      qux: Schema.boolean(),
    }),
  }),
  Schema.object({
    bar: Schema.string(),
    baz: Schema.number(),
  }),
])</target>
      </trans-unit>
      <trans-unit id="53778">
        <source># 对应的翻译文件
foo:
  qux: 这是一个配置项。
bar: 这是另一个配置项。
baz: 这是再一个配置项。</source>
        <target state="needs-translation"># 对应的翻译文件
foo:
  qux: 这是一个配置项。
bar: 这是另一个配置项。
baz: 这是再一个配置项。</target>
      </trans-unit>
      <trans-unit id="53780">
        <source>然而，当想要描述 `union`, `array`, `dict` 等类型，或是要为一个 `intersect` 中的不同对象设置不同的小标题时，上面的方法就行不通了。</source>
        <target state="needs-translation">然而，当想要描述 `union`, `array`, `dict` 等类型，或是要为一个 `intersect` 中的不同对象设置不同的小标题时，上面的方法就行不通了。</target>
      </trans-unit>
      <trans-unit id="53782">
        <source>此时就需要引入一些高特殊属性：</source>
        <target state="needs-translation">此时就需要引入一些高特殊属性：</target>
      </trans-unit>
      <trans-unit id="53784">
        <source>// 一个带有 union, array 和 dict 的复杂类型
Schema.intersect([
  Schema.object({
    shared: Schema.string(),
    type: Schema.union(['foo', 'bar']).required(),
  }),
  Schema.union([
    Schema.object({
      type: Schema.const('foo').required(),
      value: Schema.array(Number),
    }),
    Schema.object({
      type: Schema.const('bar').required(),
      text: Schema.Dict(string),
    }),
  ]),
])</source>
        <target state="needs-translation">// 一个带有 union, array 和 dict 的复杂类型
Schema.intersect([
  Schema.object({
    shared: Schema.string(),
    type: Schema.union(['foo', 'bar']).required(),
  }),
  Schema.union([
    Schema.object({
      type: Schema.const('foo').required(),
      value: Schema.array(Number),
    }),
    Schema.object({
      type: Schema.const('bar').required(),
      text: Schema.Dict(string),
    }),
  ]),
])</target>
      </trans-unit>
      <trans-unit id="53786">
        <source># 对应的翻译文件
- shared: 公用的配置项。
  type:
    $desc: 选择一个分支。
    $inner:
      - 分支 1
      - 分支 2
- - $desc: 分支 1
    $inner: 一个数值。
    value: 一个数值构成的数组。
  - $desc: 分支 2
    $inner: 一个字符串。
    text: 一个字符串构成的字典。</source>
        <target state="needs-translation"># 对应的翻译文件
- shared: 公用的配置项。
  type:
    $desc: 选择一个分支。
    $inner:
      - 分支 1
      - 分支 2
- - $desc: 分支 1
    $inner: 一个数值。
    value: 一个数值构成的数组。
  - $desc: 分支 2
    $inner: 一个字符串。
    text: 一个字符串构成的字典。</target>
      </trans-unit>
      <trans-unit id="53788">
        <source>其中，任何一个节点的 `$desc` 属性表达其自身的文本，`$inner` 属性则用于描述其子节点 (对于 `array` 和 `dict` 是其内部类型，对于 `intersect` 和 `union` 是其内部类型的数组)。</source>
        <target state="needs-translation">其中，任何一个节点的 `$desc` 属性表达其自身的文本，`$inner` 属性则用于描述其子节点 (对于 `array` 和 `dict` 是其内部类型，对于 `intersect` 和 `union` 是其内部类型的数组)。</target>
      </trans-unit>
      <trans-unit id="53790">
        <source>而在对象中，我们可以同时使用普通的属性和带有 `$` 前缀的特殊属性。</source>
        <target state="needs-translation">而在对象中，我们可以同时使用普通的属性和带有 `$` 前缀的特殊属性。</target>
      </trans-unit>
      <trans-unit id="53792">
        <source>控制台本地化 &lt;badge type=&quot;warning&quot;&gt;实验性&lt;/badge&gt;</source>
        <target state="needs-translation">控制台本地化 &lt;badge type=&quot;warning&quot;&gt;实验性&lt;/badge&gt;</target>
      </trans-unit>
      <trans-unit id="53794">
        <source>控制台本地化仍然是实验性功能，暂不支持被其他插件扩展。</source>
        <target state="needs-translation">控制台本地化仍然是实验性功能，暂不支持被其他插件扩展。</target>
      </trans-unit>
      <trans-unit id="53796">
        <source>如果你在开发支持多语言的控制台扩展，你可以组件中使用 `vue-i18n` 这样的国际化库：</source>
        <target state="needs-translation">如果你在开发支持多语言的控制台扩展，你可以组件中使用 `vue-i18n` 这样的国际化库：</target>
      </trans-unit>
      <trans-unit id="53798">
        <source>import { useI18n } from 'vue-i18n'
import zhCN from './zh-CN.yml'
import enUS from './en-US.yml'

const { t, setLocaleMessage } = useI18n({
  messages: {
    'zh-CN': zhCN,
    'en-US': enUS,
  },
})

// 支持热重载
if (import.meta.hot) {
  import.meta.hot.accept('./zh-CN.yml', (module) =&gt; {
    setLocaleMessage('zh-CN', module.default)
  })
  import.meta.hot.accept('./en-US.yml', (module) =&gt; {
    setLocaleMessage('en-US', module.default)
  })
}</source>
        <target state="needs-translation">import { useI18n } from 'vue-i18n'
import zhCN from './zh-CN.yml'
import enUS from './en-US.yml'

const { t, setLocaleMessage } = useI18n({
  messages: {
    'zh-CN': zhCN,
    'en-US': enUS,
  },
})

// 支持热重载
if (import.meta.hot) {
  import.meta.hot.accept('./zh-CN.yml', (module) =&gt; {
    setLocaleMessage('zh-CN', module.default)
  })
  import.meta.hot.accept('./en-US.yml', (module) =&gt; {
    setLocaleMessage('en-US', module.default)
  })
}</target>
      </trans-unit>
      <trans-unit id="53800">
        <source>注意：此时你的翻译文件应当处于 `client` 目录而非 `src/locales` 目录。</source>
        <target state="needs-translation">注意：此时你的翻译文件应当处于 `client` 目录而非 `src/locales` 目录。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1586" original="/[koishijs.docs] main/zh-CN/guide/index.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="53802">
        <source>开发指南</source>
        <target state="needs-translation">开发指南</target>
      </trans-unit>
      <trans-unit id="53804">
        <source>如何阅读本指南</source>
        <target state="needs-translation">如何阅读本指南</target>
      </trans-unit>
      <trans-unit id="53806">
        <source>本篇指南旨在向有一定 Node.js 开发基础的人介绍 Koishi 的全部知识。</source>
        <target state="needs-translation">本篇指南旨在向有一定 Node.js 开发基础的人介绍 Koishi 的全部知识。</target>
      </trans-unit>
      <trans-unit id="53808">
        <source>如果你只想快速搭建自己的机器人而非学习 Koishi 开发，请前往 [起步](../manual/starter/) 了解更多安装方式。</source>
        <target state="needs-translation">如果你只想快速搭建自己的机器人而非学习 Koishi 开发，请前往 [起步](../manual/starter/) 了解更多安装方式。</target>
      </trans-unit>
      <trans-unit id="53810">
        <source>Koishi 是一个强大的机器人框架，因此有大量的内容可供学习。</source>
        <target state="needs-translation">Koishi 是一个强大的机器人框架，因此有大量的内容可供学习。</target>
      </trans-unit>
      <trans-unit id="53812">
        <source>不过请不用担心，我们为学习者提供了一部循序渐进的教程，帮助你从最基础的概念出发，逐步掌握关于 Koishi 的一切——运行原理、开发方式和最佳实践。</source>
        <target state="needs-translation">不过请不用担心，我们为学习者提供了一部循序渐进的教程，帮助你从最基础的概念出发，逐步掌握关于 Koishi 的一切——运行原理、开发方式和最佳实践。</target>
      </trans-unit>
      <trans-unit id="53814">
        <source>本篇指南分为了多个章节，每个章节通常围绕一个主题展开。</source>
        <target state="needs-translation">本篇指南分为了多个章节，每个章节通常围绕一个主题展开。</target>
      </trans-unit>
      <trans-unit id="53816">
        <source>由于许多章节之间存在一定的依赖关系，因此我们建议你按照目录中的顺序阅读本篇指南。</source>
        <target state="needs-translation">由于许多章节之间存在一定的依赖关系，因此我们建议你按照目录中的顺序阅读本篇指南。</target>
      </trans-unit>
      <trans-unit id="53818">
        <source>当然，每个章节也不必全部读完，你完全可以先产生大致的印象，并在后续的使用中随时回来了解更多的细节。</source>
        <target state="needs-translation">当然，每个章节也不必全部读完，你完全可以先产生大致的印象，并在后续的使用中随时回来了解更多的细节。</target>
      </trans-unit>
      <trans-unit id="53820">
        <source>与入门教程的关系</source>
        <target state="needs-translation">与入门教程的关系</target>
      </trans-unit>
      <trans-unit id="53822">
        <source>前往 → [入门教程](../manual/introduction.md)</source>
        <target state="needs-translation">前往 → [入门教程](../manual/introduction.md)</target>
      </trans-unit>
      <trans-unit id="53824">
        <source>要想更好地开发 Koishi 插件，我们应当首先了解 Koishi 的功能本身。</source>
        <target state="needs-translation">要想更好地开发 Koishi 插件，我们应当首先了解 Koishi 的功能本身。</target>
      </trans-unit>
      <trans-unit id="53826">
        <source>因此，开发指南中的部分章节会基于入门教程中的前置知识。</source>
        <target state="needs-translation">因此，开发指南中的部分章节会基于入门教程中的前置知识。</target>
      </trans-unit>
      <trans-unit id="53828">
        <source>如果你是第一次接触 Koishi，那么我们推荐你先阅读入门教程，再回到这里学习。</source>
        <target state="needs-translation">如果你是第一次接触 Koishi，那么我们推荐你先阅读入门教程，再回到这里学习。</target>
      </trans-unit>
      <trans-unit id="53830">
        <source>就算没有读完入门教程也不必担心：我们会在章节的开头提供相关链接，让你可以快速地了解前置知识。</source>
        <target state="needs-translation">就算没有读完入门教程也不必担心：我们会在章节的开头提供相关链接，让你可以快速地了解前置知识。</target>
      </trans-unit>
      <trans-unit id="53832">
        <source>与进阶指南的关系</source>
        <target state="needs-translation">与进阶指南的关系</target>
      </trans-unit>
      <trans-unit id="53834">
        <source>前往 → [进阶指南](../cookbook/index.md)</source>
        <target state="needs-translation">前往 → [进阶指南](../cookbook/index.md)</target>
      </trans-unit>
      <trans-unit id="53836">
        <source>本篇指南会系统地介绍 Koishi 开发的核心用法，而关于 Koishi 的设计原理和最佳实践则会在进阶指南中进行补充。</source>
        <target state="needs-translation">本篇指南会系统地介绍 Koishi 开发的核心用法，而关于 Koishi 的设计原理和最佳实践则会在进阶指南中进行补充。</target>
      </trans-unit>
      <trans-unit id="53838">
        <source>如果你已经阅读完本篇指南，或是在实际开发中无所适从，相信进阶指南会给你带来更多的帮助。</source>
        <target state="needs-translation">如果你已经阅读完本篇指南，或是在实际开发中无所适从，相信进阶指南会给你带来更多的帮助。</target>
      </trans-unit>
      <trans-unit id="53840">
        <source>预备知识</source>
        <target state="needs-translation">预备知识</target>
      </trans-unit>
      <trans-unit id="53842">
        <source>Koishi 是一个 Node.js 框架，因此我们假定你已经拥有了一定的 JavaScript 和 Node.js 开发基础。</source>
        <target state="needs-translation">Koishi 是一个 Node.js 框架，因此我们假定你已经拥有了一定的 JavaScript 和 Node.js 开发基础。</target>
      </trans-unit>
      <trans-unit id="53844">
        <source>如果你对自己的基础不自信，可以参考下面的两篇教程：</source>
        <target state="needs-translation">如果你对自己的基础不自信，可以参考下面的两篇教程：</target>
      </trans-unit>
      <trans-unit id="53846">
        <source>[JavaScript 语言概览](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Language_Overview)</source>
        <target state="needs-translation">[JavaScript 语言概览](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Language_Overview)</target>
      </trans-unit>
      <trans-unit id="53848">
        <source>[现代 JavaScript 教程](https://zh.javascript.info/)</source>
        <target state="needs-translation">[现代 JavaScript 教程](https://zh.javascript.info/)</target>
      </trans-unit>
      <trans-unit id="53850">
        <source>关于 TypeScript</source>
        <target state="needs-translation">关于 TypeScript</target>
      </trans-unit>
      <trans-unit id="53852">
        <source>TypeScript 是 JavaScript 的超集，前者在后者的基础上额外提供了强大的类型系统，可以让你的代码更加健壮，开发也更加快捷。</source>
        <target state="needs-translation">TypeScript 是 JavaScript 的超集，前者在后者的基础上额外提供了强大的类型系统，可以让你的代码更加健壮，开发也更加快捷。</target>
      </trans-unit>
      <trans-unit id="53854">
        <source>Koishi 本身就是用 TypeScript 编写的，因此我们推荐你使用 TypeScript 来进行 Koishi 开发。</source>
        <target state="needs-translation">Koishi 本身就是用 TypeScript 编写的，因此我们推荐你使用 TypeScript 来进行 Koishi 开发。</target>
      </trans-unit>
      <trans-unit id="53856">
        <source>如果你对 TypeScript 不熟悉，这里有一篇 [TypeScript 教程](https://www.typescriptlang.org/zh/docs/handbook/typescript-in-5-minutes.html)。</source>
        <target state="needs-translation">如果你对 TypeScript 不熟悉，这里有一篇 [TypeScript 教程](https://www.typescriptlang.org/zh/docs/handbook/typescript-in-5-minutes.html)。</target>
      </trans-unit>
      <trans-unit id="53858">
        <source>本篇指南中的所有代码示例都使用了 TypeScript。</source>
        <target state="needs-translation">本篇指南中的所有代码示例都使用了 TypeScript。</target>
      </trans-unit>
      <trans-unit id="53860">
        <source>这对于插件开发者来说这并不是必需的。</source>
        <target state="needs-translation">这对于插件开发者来说这并不是必需的。</target>
      </trans-unit>
      <trans-unit id="53862">
        <source>如果你不想用 TypeScript 来开发插件，你可以自行忽略那些类型标注，并使用原生 JavaScript 或其他方言来编写代码。</source>
        <target state="needs-translation">如果你不想用 TypeScript 来开发插件，你可以自行忽略那些类型标注，并使用原生 JavaScript 或其他方言来编写代码。</target>
      </trans-unit>
      <trans-unit id="53864">
        <source>让我们开始吧！</source>
        <target state="needs-translation">让我们开始吧！</target>
      </trans-unit>
      <trans-unit id="53866">
        <source>继续向下滚动，你将在每一页的底部看到前往下一节的链接。</source>
        <target state="needs-translation">继续向下滚动，你将在每一页的底部看到前往下一节的链接。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1588" original="/[koishijs.docs] main/zh-CN/guide/plugin/filter.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="53868">
        <source>过滤器</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">過濾器</target>
      </trans-unit>
      <trans-unit id="66986">
        <source>在学习本节之前，建议先完整阅读 [入门 &gt; 过滤器](../../manual/usage/customize.md#filters)。</source>
        <target state="needs-translation">在学习本节之前，建议先完整阅读 [入门 &gt; 过滤器](../../manual/usage/customize.md#filters)。</target>
      </trans-unit>
      <trans-unit id="53872">
        <source>默认情况下，一个会话事件、中间件或者指令都对所有的会话生效。</source>
        <target state="needs-translation">默认情况下，一个会话事件、中间件或者指令都对所有的会话生效。</target>
      </trans-unit>
      <trans-unit id="53874">
        <source>但如果我们希望这些功能只对部分群聊或者用户生效，我们就需要用到 **过滤器**。</source>
        <target state="needs-translation">但如果我们希望这些功能只对部分群聊或者用户生效，我们就需要用到 **过滤器**。</target>
      </trans-unit>
      <trans-unit id="53876">
        <source>属性过滤器</source>
        <target state="needs-translation">属性过滤器</target>
      </trans-unit>
      <trans-unit id="53878">
        <source>请不要滥用这项功能：在源码中直接书写账号或群号会导致隐私泄露，并且其他用户无法使用你的插件。</source>
        <target state="needs-translation">请不要滥用这项功能：在源码中直接书写账号或群号会导致隐私泄露，并且其他用户无法使用你的插件。</target>
      </trans-unit>
      <trans-unit id="53880">
        <source>推荐 [在配置文件中使用过滤器](#配置文件中的过滤器)。</source>
        <target state="needs-translation">推荐 [在配置文件中使用过滤器](#配置文件中的过滤器)。</target>
      </trans-unit>
      <trans-unit id="53882">
        <source>让我们先从最简单的会话过滤器开始。</source>
        <target state="needs-translation">让我们先从最简单的会话过滤器开始。</target>
      </trans-unit>
      <trans-unit id="53884">
        <source>**属性过滤器**可以用来快速创建满足特定条件的子上下文：</source>
        <target state="needs-translation">**属性过滤器**可以用来快速创建满足特定条件的子上下文：</target>
      </trans-unit>
      <trans-unit id="53886">
        <source>ctx.user('112233')                  // 选择来自用户 112233 的会话
ctx.self('112233')                  // 选择发送给机器人 112233 的会话
ctx.guild('445566')                 // 选择来自群组 445566 的会话
ctx.channel('778899')               // 选择来自频道 778899 的会话
ctx.platform('discord')             // 选择来自平台 discord 的会话</source>
        <target state="needs-translation">ctx.user('112233')                  // 选择来自用户 112233 的会话
ctx.self('112233')                  // 选择发送给机器人 112233 的会话
ctx.guild('445566')                 // 选择来自群组 445566 的会话
ctx.channel('778899')               // 选择来自频道 778899 的会话
ctx.platform('discord')             // 选择来自平台 discord 的会话</target>
      </trans-unit>
      <trans-unit id="53888">
        <source>这种写法也支持链式的调用：</source>
        <target state="needs-translation">这种写法也支持链式的调用：</target>
      </trans-unit>
      <trans-unit id="53890">
        <source>// 选择来自平台 discord 中用户 112233 的会话
ctx.platform('discord').user('112233')</source>
        <target state="needs-translation">// 选择来自平台 discord 中用户 112233 的会话
ctx.platform('discord').user('112233')</target>
      </trans-unit>
      <trans-unit id="53892">
        <source>利用上下文，你可以非常方便地对每个环境进行分别配置：</source>
        <target state="needs-translation">利用上下文，你可以非常方便地对每个环境进行分别配置：</target>
      </trans-unit>
      <trans-unit id="53894">
        <source>declare const callback: Middleware
declare const listener: (session: Session) =&gt; void
/// ---cut---
// 在所有环境注册中间件
ctx.middleware(callback)

// 注册指令 my-command，仅对机器人 112233 有效
ctx.self('112233').command('my-command')

// 当有人申请加群 445566 时触发 listener
ctx.guild('445566').on('guild-request', listener)

// 安装插件 ./my-plugin，仅限 Telegram 平台使用
ctx.platform('telegram').plugin(require('./my-plugin'))</source>
        <target state="needs-translation">declare const callback: Middleware
declare const listener: (session: Session) =&gt; void
/// ---cut---
// 在所有环境注册中间件
ctx.middleware(callback)

// 注册指令 my-command，仅对机器人 112233 有效
ctx.self('112233').command('my-command')

// 当有人申请加群 445566 时触发 listener
ctx.guild('445566').on('guild-request', listener)

// 安装插件 ./my-plugin，仅限 Telegram 平台使用
ctx.platform('telegram').plugin(require('./my-plugin'))</target>
      </trans-unit>
      <trans-unit id="53896">
        <source>是不是非常方便呢？</source>
        <target state="needs-translation">是不是非常方便呢？</target>
      </trans-unit>
      <trans-unit id="53898">
        <source>条件过滤器</source>
        <target state="needs-translation">条件过滤器</target>
      </trans-unit>
      <trans-unit id="53900">
        <source>如果简单的会话过滤器无法满足你的需求，你也可以给一个上下文添加**条件过滤器**：它传入一个会话对象，并返回一个布尔类型。</source>
        <target state="needs-translation">如果简单的会话过滤器无法满足你的需求，你也可以给一个上下文添加**条件过滤器**：它传入一个会话对象，并返回一个布尔类型。</target>
      </trans-unit>
      <trans-unit id="53902">
        <source>条件过滤器有三种添加方式：</source>
        <target state="needs-translation">条件过滤器有三种添加方式：</target>
      </trans-unit>
      <trans-unit id="53904">
        <source>// 满足当前上下文条件，且消息内容为“啦啦啦”
ctx.intersect(session =&gt; session.content === '啦啦啦')

// 满足当前上下文条件，或消息内容为“啦啦啦”
ctx.union(session =&gt; session.content === '啦啦啦')

// 满足当前上下文条件，且消息内容不为“啦啦啦”
ctx.exclude(session =&gt; session.content === '啦啦啦')</source>
        <target state="needs-translation">// 满足当前上下文条件，且消息内容为“啦啦啦”
ctx.intersect(session =&gt; session.content === '啦啦啦')

// 满足当前上下文条件，或消息内容为“啦啦啦”
ctx.union(session =&gt; session.content === '啦啦啦')

// 满足当前上下文条件，且消息内容不为“啦啦啦”
ctx.exclude(session =&gt; session.content === '啦啦啦')</target>
      </trans-unit>
      <trans-unit id="53906">
        <source>上述方法也可以传入一个上下文作为参数，分别表示两个上下文的交集、并集和差集：</source>
        <target state="needs-translation">上述方法也可以传入一个上下文作为参数，分别表示两个上下文的交集、并集和差集：</target>
      </trans-unit>
      <trans-unit id="53908">
        <source>// 选择来自群组 1122233 和用户 445566 的会话
ctx.guild('112233').intersect(ctx.user('445566'))

// 选择来自群组 1122233 或用户 445566 的会话
ctx.guild('112233').union(ctx.user('445566'))

// 选择来自群组 1122233 的会话，但来自用户 445566 的会话除外
ctx.guild('112233').exclude(ctx.user('445566'))</source>
        <target state="needs-translation">// 选择来自群组 1122233 和用户 445566 的会话
ctx.guild('112233').intersect(ctx.user('445566'))

// 选择来自群组 1122233 或用户 445566 的会话
ctx.guild('112233').union(ctx.user('445566'))

// 选择来自群组 1122233 的会话，但来自用户 445566 的会话除外
ctx.guild('112233').exclude(ctx.user('445566'))</target>
      </trans-unit>
      <trans-unit id="53910">
        <source>与选择器方法类似，过滤器方法也会返回一个新的上下文，你可以在其上自由的添加监听器、中间件、指令和插件。</source>
        <target state="needs-translation">与选择器方法类似，过滤器方法也会返回一个新的上下文，你可以在其上自由的添加监听器、中间件、指令和插件。</target>
      </trans-unit>
      <trans-unit id="53912">
        <source>配置文件中的过滤器</source>
        <target state="needs-translation">配置文件中的过滤器</target>
      </trans-unit>
      <trans-unit id="53914">
        <source>如果你遵循了模块化的开发理念，你的插件应该具有较为独立的功能。</source>
        <target state="needs-translation">如果你遵循了模块化的开发理念，你的插件应该具有较为独立的功能。</target>
      </trans-unit>
      <trans-unit id="53916">
        <source>那么此时，你的插件内部其实并不需要使用过滤器，而是在插件加载时指定一次即可。</source>
        <target state="needs-translation">那么此时，你的插件内部其实并不需要使用过滤器，而是在插件加载时指定一次即可。</target>
      </trans-unit>
      <trans-unit id="53918">
        <source>在这种情况下，Koishi 提供了直接在配置文件中指定过滤器的方法：</source>
        <target state="needs-translation">在这种情况下，Koishi 提供了直接在配置文件中指定过滤器的方法：</target>
      </trans-unit>
      <trans-unit id="53920">
        <source>plugins:
  repeater:
    $filter:
      # 仅在 telegram 平台下 2 个特定频道内注册插件
      $and:
        - $eq:
            - $: platform
            - telegram
        - $in:
            - $: channel
            - - '123456'
              - '456789'
    onRepeat:
      minTimes: 3
      probability: 0.5</source>
        <target state="needs-translation">plugins:
  repeater:
    $filter:
      # 仅在 telegram 平台下 2 个特定频道内注册插件
      $and:
        - $eq:
            - $: platform
            - telegram
        - $in:
            - $: channel
            - - '123456'
              - '456789'
    onRepeat:
      minTimes: 3
      probability: 0.5</target>
      </trans-unit>
      <trans-unit id="53922">
        <source>这相当于</source>
        <target state="needs-translation">这相当于</target>
      </trans-unit>
      <trans-unit id="53924">
        <source>ctx
  .intersect(app.platform('telegram'))
  .intersect(app.channel('123456', '456789'))
  .plugin(require('koishi-plugin-repeater'), {
    onRepeat: {
      minTimes: 3,
      probability: 0.5,
    },
  })</source>
        <target state="needs-translation">ctx
  .intersect(app.platform('telegram'))
  .intersect(app.channel('123456', '456789'))
  .plugin(require('koishi-plugin-repeater'), {
    onRepeat: {
      minTimes: 3,
      probability: 0.5,
    },
  })</target>
      </trans-unit>
      <trans-unit id="53926">
        <source>我必须承认这种写法并不是很简便，但事实上它设计出来也不是让你手写的。</source>
        <target state="needs-translation">我必须承认这种写法并不是很简便，但事实上它设计出来也不是让你手写的。</target>
      </trans-unit>
      <trans-unit id="53928">
        <source>在控制台的「插件配置」界面我们提供了图形化的过滤器配置，你可以在那里轻松地配置每个插件的会话过滤器。</source>
        <target state="needs-translation">在控制台的「插件配置」界面我们提供了图形化的过滤器配置，你可以在那里轻松地配置每个插件的会话过滤器。</target>
      </trans-unit>
      <trans-unit id="53930">
        <source>这个图形化界面对插件组也同样有效。</source>
        <target state="needs-translation">这个图形化界面对插件组也同样有效。</target>
      </trans-unit>
      <trans-unit id="53932">
        <source>隐藏过滤器设置</source>
        <target state="needs-translation">隐藏过滤器设置</target>
      </trans-unit>
      <trans-unit id="53934">
        <source>特别地，如果你的插件不涉及任何会话，不需要设置会话过滤器，你也可以在插件中手动声明 `filter` 属性为 `false` (声明方式参考 [插件的元属性](./schema.md#插件的元属性))：</source>
        <target state="needs-translation">特别地，如果你的插件不涉及任何会话，不需要设置会话过滤器，你也可以在插件中手动声明 `filter` 属性为 `false` (声明方式参考 [插件的元属性](./schema.md#插件的元属性))：</target>
      </trans-unit>
      <trans-unit id="53936">
        <source>// 作为导出整体的函数插件
export const name = 'Foo'
export const filter = false
export function apply(ctx: Context) {}</source>
        <target state="needs-translation">// 作为导出整体的函数插件
export const name = 'Foo'
export const filter = false
export function apply(ctx: Context) {}</target>
      </trans-unit>
      <trans-unit id="53938">
        <source>// 作为默认导出的类插件
export default class Bar {
  static filter = false
  constructor(ctx: Context) {}
}</source>
        <target state="needs-translation">// 作为默认导出的类插件
export default class Bar {
  static filter = false
  constructor(ctx: Context) {}
}</target>
      </trans-unit>
      <trans-unit id="53940">
        <source>定义条件属性</source>
        <target state="needs-translation">定义条件属性</target>
      </trans-unit>
      <trans-unit id="53942">
        <source>过滤器除了可以控制插件生效的范围，还能控制具体配置项的取值。</source>
        <target state="needs-translation">过滤器除了可以控制插件生效的范围，还能控制具体配置项的取值。</target>
      </trans-unit>
      <trans-unit id="53944">
        <source>使用 `Schema.computed()` 创建一个条件属性，它可以在会话满足不同过滤器时取不同的值：</source>
        <target state="needs-translation">使用 `Schema.computed()` 创建一个条件属性，它可以在会话满足不同过滤器时取不同的值：</target>
      </trans-unit>
      <trans-unit id="53946">
        <source>export interface Config {
  foo: Computed&lt;number&gt;
}

export const Config: Schema&lt;Config&gt; = Schema.object({
  foo: Schema.computed(Number),
})

export function apply(ctx: Context, config: Config) {
  ctx.command('foo').action(({ session }) =&gt; {
    // 在会话满足不同过滤器时取不同的值
    const value = session.resolve(config.foo)
  })
}</source>
        <target state="needs-translation">export interface Config {
  foo: Computed&lt;number&gt;
}

export const Config: Schema&lt;Config&gt; = Schema.object({
  foo: Schema.computed(Number),
})

export function apply(ctx: Context, config: Config) {
  ctx.command('foo').action(({ session }) =&gt; {
    // 在会话满足不同过滤器时取不同的值
    const value = session.resolve(config.foo)
  })
}</target>
      </trans-unit>
    </body>
  </file>
  <file id="1590" original="/[koishijs.docs] main/zh-CN/guide/plugin/index.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="53948">
        <source>认识插件</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">認識外掛</target>
      </trans-unit>
      <trans-unit id="53950">
        <source>在学习本章之前，建议先完整阅读 [入门 &gt; 安装和配置插件](../../manual/usage/market.md)。</source>
        <target state="needs-translation">在学习本章之前，建议先完整阅读 [入门 &gt; 安装和配置插件](../../manual/usage/market.md)。</target>
      </trans-unit>
      <trans-unit id="53952">
        <source>模块化是 Koishi 的核心特性。</source>
        <target state="needs-translation">模块化是 Koishi 的核心特性。</target>
      </trans-unit>
      <trans-unit id="53954">
        <source>借助插件系统，Koishi 得以将各种功能解耦出来，并以模块的形式分发。</source>
        <target state="needs-translation">借助插件系统，Koishi 得以将各种功能解耦出来，并以模块的形式分发。</target>
      </trans-unit>
      <trans-unit id="53956">
        <source>在「开发上手」中我们已经体验了基础的插件开发范例。</source>
        <target state="needs-translation">在「开发上手」中我们已经体验了基础的插件开发范例。</target>
      </trans-unit>
      <trans-unit id="53958">
        <source>本章将介绍更多的模块化编写方式，并介绍一些场景下的最佳实践。</source>
        <target state="needs-translation">本章将介绍更多的模块化编写方式，并介绍一些场景下的最佳实践。</target>
      </trans-unit>
      <trans-unit id="53960">
        <source>插件的基本形式</source>
        <target state="needs-translation">插件的基本形式</target>
      </trans-unit>
      <trans-unit id="53962">
        <source>一个插件需要是以下三种基本形式之一：</source>
        <target state="needs-translation">一个插件需要是以下三种基本形式之一：</target>
      </trans-unit>
      <trans-unit id="53964">
        <source>一个接受两个参数的函数，第一个参数是所在的上下文，第二个参数是传入的配置项</source>
        <target state="needs-translation">一个接受两个参数的函数，第一个参数是所在的上下文，第二个参数是传入的配置项</target>
      </trans-unit>
      <trans-unit id="53966">
        <source>一个接受两个参数的类，第一个参数是所在的上下文，第二个参数是传入的配置项</source>
        <target state="needs-translation">一个接受两个参数的类，第一个参数是所在的上下文，第二个参数是传入的配置项</target>
      </trans-unit>
      <trans-unit id="53968">
        <source>一个对象，其中的 `apply` 方法是第一种形式中所说的函数</source>
        <target state="needs-translation">一个对象，其中的 `apply` 方法是第一种形式中所说的函数</target>
      </trans-unit>
      <trans-unit id="53970">
        <source>而一个插件在被加载时，则相当于进行了上述函数的调用。</source>
        <target state="needs-translation">而一个插件在被加载时，则相当于进行了上述函数的调用。</target>
      </trans-unit>
      <trans-unit id="53972">
        <source>因此，下面的四种写法是基本等价的：</source>
        <target state="needs-translation">因此，下面的四种写法是基本等价的：</target>
      </trans-unit>
      <trans-unit id="53974">
        <source>declare const callback: Middleware
/// ---cut---
ctx.middleware(callback)

ctx.plugin(ctx =&gt; ctx.middleware(callback))

ctx.plugin({
  apply: ctx =&gt; ctx.middleware(callback),
})

ctx.plugin(class {
  constructor(ctx) {
    ctx.middleware(callback)
  }
})</source>
        <target state="needs-translation">declare const callback: Middleware
/// ---cut---
ctx.middleware(callback)

ctx.plugin(ctx =&gt; ctx.middleware(callback))

ctx.plugin({
  apply: ctx =&gt; ctx.middleware(callback),
})

ctx.plugin(class {
  constructor(ctx) {
    ctx.middleware(callback)
  }
})</target>
      </trans-unit>
      <trans-unit id="53976">
        <source>看起来插件似乎只是将函数调用换了一种写法，但这种写法能够帮助我们将多个逻辑组合在一起并模块化，同时可以在插件内部对所需的选项进行初始化，这些都能极大地提高了代码的可维护性。</source>
        <target state="needs-translation">看起来插件似乎只是将函数调用换了一种写法，但这种写法能够帮助我们将多个逻辑组合在一起并模块化，同时可以在插件内部对所需的选项进行初始化，这些都能极大地提高了代码的可维护性。</target>
      </trans-unit>
      <trans-unit id="53978">
        <source>模块化的插件</source>
        <target state="needs-translation">模块化的插件</target>
      </trans-unit>
      <trans-unit id="53980">
        <source>插件化最大的好处就是可以把不同的功能写在不同的模块中。</source>
        <target state="needs-translation">插件化最大的好处就是可以把不同的功能写在不同的模块中。</target>
      </trans-unit>
      <trans-unit id="53982">
        <source>此时插件将作为模块的导出，它可以是 [默认导出](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Statements/import#导入默认值) 或 [导出整体](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Statements/import#导入整个模块的内容)。</source>
        <target state="needs-translation">此时插件将作为模块的导出，它可以是 [默认导出](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Statements/import#导入默认值) 或 [导出整体](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Statements/import#导入整个模块的内容)。</target>
      </trans-unit>
      <trans-unit id="53984">
        <source>对于对象形式的插件，你还可以额外提供一个 `name` 属性作为插件的名称。</source>
        <target state="needs-translation">对于对象形式的插件，你还可以额外提供一个 `name` 属性作为插件的名称。</target>
      </trans-unit>
      <trans-unit id="53986">
        <source>对于函数和类形式的插件来说，插件名称便是函数名或类名。</source>
        <target state="needs-translation">对于函数和类形式的插件来说，插件名称便是函数名或类名。</target>
      </trans-unit>
      <trans-unit id="53988">
        <source>具名插件有助于更好地描述插件的功能，并被用于插件关系可视化中，实际上不会影响任何运行时的行为。</source>
        <target state="needs-translation">具名插件有助于更好地描述插件的功能，并被用于插件关系可视化中，实际上不会影响任何运行时的行为。</target>
      </trans-unit>
      <trans-unit id="53990">
        <source>// 整体导出对象形式的插件
export interface Config {}

export const name = 'Foo'

export function apply(ctx: Context, config: Config) {}</source>
        <target state="needs-translation">// 整体导出对象形式的插件
export interface Config {}

export const name = 'Foo'

export function apply(ctx: Context, config: Config) {}</target>
      </trans-unit>
      <trans-unit id="53992">
        <source>// 默认导出类形式的插件
class Bar {
  constructor(ctx: Context, config: Bar.Config) {}
}

namespace Bar {
  export interface Config {}
}

export default Bar</source>
        <target state="needs-translation">// 默认导出类形式的插件
class Bar {
  constructor(ctx: Context, config: Bar.Config) {}
}

namespace Bar {
  export interface Config {}
}

export default Bar</target>
      </trans-unit>
      <trans-unit id="53994">
        <source>嵌套的插件</source>
        <target state="needs-translation">嵌套的插件</target>
      </trans-unit>
      <trans-unit id="53996">
        <source>Koishi 的插件也是可以嵌套的。</source>
        <target state="needs-translation">Koishi 的插件也是可以嵌套的。</target>
      </trans-unit>
      <trans-unit id="53998">
        <source>你可以将你编写的插件解耦成多个独立的子模块，再将调用这些子模块的一个新插件作为入口模块，就像这样：</source>
        <target state="needs-translation">你可以将你编写的插件解耦成多个独立的子模块，再将调用这些子模块的一个新插件作为入口模块，就像这样：</target>
      </trans-unit>
      <trans-unit id="54000">
        <source>// 入口文件，从上述模块分别加载插件
import Foo from './foo'
import * as Bar from './bar'

export function apply(ctx: Context) {
  ctx.plugin(Foo)
  ctx.plugin(Bar)
}</source>
        <target state="needs-translation">// 入口文件，从上述模块分别加载插件
import Foo from './foo'
import * as Bar from './bar'

export function apply(ctx: Context) {
  ctx.plugin(Foo)
  ctx.plugin(Bar)
}</target>
      </trans-unit>
      <trans-unit id="54002">
        <source>这样当你加载上述模块时，就相当于同时加载了 foo 和 bar 两个模块。</source>
        <target state="needs-translation">这样当你加载上述模块时，就相当于同时加载了 foo 和 bar 两个模块。</target>
      </trans-unit>
      <trans-unit id="54004">
        <source>这样的做法不仅能够减轻心智负担，解耦出的模块还享受独立的热重载，你可以在不影响一个模块运行的情况下修改另一个的代码！</source>
        <target state="needs-translation">这样的做法不仅能够减轻心智负担，解耦出的模块还享受独立的热重载，你可以在不影响一个模块运行的情况下修改另一个的代码！</target>
      </trans-unit>
      <trans-unit id="54006">
        <source>当你在开发较为复杂的功能时，可以将插件分解成多个独立的子插件，并在入口文件中依次加载这些子插件。</source>
        <target state="needs-translation">当你在开发较为复杂的功能时，可以将插件分解成多个独立的子插件，并在入口文件中依次加载这些子插件。</target>
      </trans-unit>
      <trans-unit id="54008">
        <source>许多大型插件都采用了这种写法。</source>
        <target state="needs-translation">许多大型插件都采用了这种写法。</target>
      </trans-unit>
      <trans-unit id="54010">
        <source>在配置文件中加载</source>
        <target state="needs-translation">在配置文件中加载</target>
      </trans-unit>
      <trans-unit id="54012">
        <source>一个模块可以作为插件被 Koishi 的配置文件加载，其需要满足以下两条中的一条：</source>
        <target state="needs-translation">一个模块可以作为插件被 Koishi 的配置文件加载，其需要满足以下两条中的一条：</target>
      </trans-unit>
      <trans-unit id="54014">
        <source>此模块的**默认导出**是一个插件</source>
        <target state="needs-translation">此模块的**默认导出**是一个插件</target>
      </trans-unit>
      <trans-unit id="54016">
        <source>此模块的**导出整体**是一个插件</source>
        <target state="needs-translation">此模块的**导出整体**是一个插件</target>
      </trans-unit>
      <trans-unit id="54018">
        <source>这两种写法并无优劣之分，你完全可以按照自己的需求调整导出的形式。</source>
        <target state="needs-translation">这两种写法并无优劣之分，你完全可以按照自己的需求调整导出的形式。</target>
      </trans-unit>
      <trans-unit id="54020">
        <source>按照惯例，如果你的插件是一个函数，我们通常直接导出 apply 方法，并将导出整体作为一个插件；如果你的插件是一个类，那么我们通常使用默认导出的形式。</source>
        <target state="needs-translation">按照惯例，如果你的插件是一个函数，我们通常直接导出 apply 方法，并将导出整体作为一个插件；如果你的插件是一个类，那么我们通常使用默认导出的形式。</target>
      </trans-unit>
      <trans-unit id="54022">
        <source>这里默认导出的优先级更高。</source>
        <target state="needs-translation">这里默认导出的优先级更高。</target>
      </trans-unit>
      <trans-unit id="54024">
        <source>因此，只要模块提供了默认导出，Koishi 就会尝试加载这个默认导出，而不是导出整体。</source>
        <target state="needs-translation">因此，只要模块提供了默认导出，Koishi 就会尝试加载这个默认导出，而不是导出整体。</target>
      </trans-unit>
      <trans-unit id="54026">
        <source>在开发中请务必注意这一点。</source>
        <target state="needs-translation">在开发中请务必注意这一点。</target>
      </trans-unit>
      <trans-unit id="54028">
        <source>配置文件中的 `plugins` 字段记录了插件的信息：</source>
        <target state="needs-translation">配置文件中的 `plugins` 字段记录了插件的信息：</target>
      </trans-unit>
      <trans-unit id="54030">
        <source>plugins:
  console:
  dialogue:
    prefix: '#'</source>
        <target state="needs-translation">plugins:
  console:
  dialogue:
    prefix: '#'</target>
      </trans-unit>
      <trans-unit id="54032">
        <source>这里的键对应插件的路径，值则为插件的配置。</source>
        <target state="needs-translation">这里的键对应插件的路径，值则为插件的配置。</target>
      </trans-unit>
      <trans-unit id="54034">
        <source>这个路径的解析逻辑如下：</source>
        <target state="needs-translation">这个路径的解析逻辑如下：</target>
      </trans-unit>
      <trans-unit id="54036">
        <source>对于 foo，我们将尝试读取 @koishijs/plugin-foo 和 koishi-plugin-foo</source>
        <target state="needs-translation">对于 foo，我们将尝试读取 @koishijs/plugin-foo 和 koishi-plugin-foo</target>
      </trans-unit>
      <trans-unit id="54038">
        <source>对于 @foo/bar，我们将尝试读取 @foo/koishi-plugin-bar</source>
        <target state="needs-translation">对于 @foo/bar，我们将尝试读取 @foo/koishi-plugin-bar</target>
      </trans-unit>
      <trans-unit id="54040">
        <source>换言之，上述配置文件相当于下面的代码：</source>
        <target state="needs-translation">换言之，上述配置文件相当于下面的代码：</target>
      </trans-unit>
      <trans-unit id="54042">
        <source>app.plugin(require('@koishijs/plugin-console').default)
app.plugin(require('koishi-plugin-dialogue'), { prefix: '#' })</source>
        <target state="needs-translation">app.plugin(require('@koishijs/plugin-console').default)
app.plugin(require('koishi-plugin-dialogue'), { prefix: '#' })</target>
      </trans-unit>
      <trans-unit id="54044">
        <source>在这个例子中，console 是官方插件，并且使用了默认导出；dialogue 是社区插件，并且使用了导出整体。</source>
        <target state="needs-translation">在这个例子中，console 是官方插件，并且使用了默认导出；dialogue 是社区插件，并且使用了导出整体。</target>
      </trans-unit>
      <trans-unit id="54046">
        <source>配置文件使你得以无视这些区别，每个插件的加载方式都会由 CLI 自动检测。</source>
        <target state="needs-translation">配置文件使你得以无视这些区别，每个插件的加载方式都会由 CLI 自动检测。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1592" original="/[koishijs.docs] main/zh-CN/guide/plugin/lifecycle.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="54048">
        <source>生命周期</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">生命週期</target>
      </trans-unit>
      <trans-unit id="54050">
        <source>在 [事件系统](../basic/events.md) 中，我们已经了解了由聊天平台推送的会话事件。</source>
        <target state="needs-translation">在 [事件系统](../basic/events.md) 中，我们已经了解了由聊天平台推送的会话事件。</target>
      </trans-unit>
      <trans-unit id="54052">
        <source>除此以外，Koishi 也提供了一些生命周期事件。</source>
        <target state="needs-translation">除此以外，Koishi 也提供了一些生命周期事件。</target>
      </trans-unit>
      <trans-unit id="54054">
        <source>这些事件会在某些 Koishi 的运行阶段被触发，你可以通过监听它们来实现各种各样的功能。</source>
        <target state="needs-translation">这些事件会在某些 Koishi 的运行阶段被触发，你可以通过监听它们来实现各种各样的功能。</target>
      </trans-unit>
      <trans-unit id="54056">
        <source>本节主要介绍与插件开发相关的一些核心事件。</source>
        <target state="needs-translation">本节主要介绍与插件开发相关的一些核心事件。</target>
      </trans-unit>
      <trans-unit id="54058">
        <source>要了解 Koishi 所提供的全部事件，可以参考 [事件列表](../../api/core/events.md)。</source>
        <target state="needs-translation">要了解 Koishi 所提供的全部事件，可以参考 [事件列表](../../api/core/events.md)。</target>
      </trans-unit>
      <trans-unit id="54060">
        <source>异步加载与 `ready` 事件</source>
        <target state="needs-translation">异步加载与 `ready` 事件</target>
      </trans-unit>
      <trans-unit id="54062">
        <source>`ready` 事件在应用启动时触发。</source>
        <target state="needs-translation">`ready` 事件在应用启动时触发。</target>
      </trans-unit>
      <trans-unit id="54064">
        <source>如果一个插件在加载时，应用已经处于启动状态，则会立即触发。</source>
        <target state="needs-translation">如果一个插件在加载时，应用已经处于启动状态，则会立即触发。</target>
      </trans-unit>
      <trans-unit id="54066">
        <source>在下面的场景建议将逻辑放入 `ready` 事件：</source>
        <target state="needs-translation">在下面的场景建议将逻辑放入 `ready` 事件：</target>
      </trans-unit>
      <trans-unit id="54068">
        <source>含有异步操作 (比如文件操作，网络请求等)</source>
        <target state="needs-translation">含有异步操作 (比如文件操作，网络请求等)</target>
      </trans-unit>
      <trans-unit id="54070">
        <source>希望等待其他插件加载完成后才执行的操作</source>
        <target state="needs-translation">希望等待其他插件加载完成后才执行的操作</target>
      </trans-unit>
      <trans-unit id="54072">
        <source>副作用与 `dispose` 事件</source>
        <target state="needs-translation">副作用与 `dispose` 事件</target>
      </trans-unit>
      <trans-unit id="54074">
        <source>停用插件</source>
        <target state="needs-translation">停用插件</target>
      </trans-unit>
      <trans-unit id="54076">
        <source>之前我们已经了解了插件的启用，而 Koishi 同样支持在运行时停用一个插件。</source>
        <target state="needs-translation">之前我们已经了解了插件的启用，而 Koishi 同样支持在运行时停用一个插件。</target>
      </trans-unit>
      <trans-unit id="54078">
        <source>`ctx.plugin()` 返回一个 `Fork` 对象。</source>
        <target state="needs-translation">`ctx.plugin()` 返回一个 `Fork` 对象。</target>
      </trans-unit>
      <trans-unit id="54080">
        <source>调用 `fork.dispose()` 可以停用一个插件。</source>
        <target state="needs-translation">调用 `fork.dispose()` 可以停用一个插件。</target>
      </trans-unit>
      <trans-unit id="54082">
        <source>import { Context } from 'koishi'

function callback(ctx: Context) {
  // 编写你的插件逻辑
  ctx.on('message', callback1)
  ctx.command('foo').action(callback2)
  ctx.middleware(callback3)
  ctx.plugin(require('another-plugin'))
}

// 加载插件
const fork = ctx.plugin(callback)

// 停用这个插件，取消上述全部副作用
fork.dispose()</source>
        <target state="needs-translation">import { Context } from 'koishi'

function callback(ctx: Context) {
  // 编写你的插件逻辑
  ctx.on('message', callback1)
  ctx.command('foo').action(callback2)
  ctx.middleware(callback3)
  ctx.plugin(require('another-plugin'))
}

// 加载插件
const fork = ctx.plugin(callback)

// 停用这个插件，取消上述全部副作用
fork.dispose()</target>
      </trans-unit>
      <trans-unit id="54084">
        <source>对于可重用的插件，`fork.dispose()` 也只会停用 `fork` 对应的那一次。</source>
        <target state="needs-translation">对于可重用的插件，`fork.dispose()` 也只会停用 `fork` 对应的那一次。</target>
      </trans-unit>
      <trans-unit id="54086">
        <source>如果你想取消全部的副作用，可以使用 `ctx.registry.delete()`：</source>
        <target state="needs-translation">如果你想取消全部的副作用，可以使用 `ctx.registry.delete()`：</target>
      </trans-unit>
      <trans-unit id="54088">
        <source>// 移除可重用插件的全部副作用
ctx.registry.delete(plugin)</source>
        <target state="needs-translation">// 移除可重用插件的全部副作用
ctx.registry.delete(plugin)</target>
      </trans-unit>
      <trans-unit id="54090">
        <source>清除副作用</source>
        <target state="needs-translation">清除副作用</target>
      </trans-unit>
      <trans-unit id="54092">
        <source>Koishi 的插件系统支持热重载，即任何一个插件可能在运行时被多次加载和卸载。</source>
        <target state="needs-translation">Koishi 的插件系统支持热重载，即任何一个插件可能在运行时被多次加载和卸载。</target>
      </trans-unit>
      <trans-unit id="54094">
        <source>要实现这一点，我们就必须在插件被卸载时清除它的所有副作用。</source>
        <target state="needs-translation">要实现这一点，我们就必须在插件被卸载时清除它的所有副作用。</target>
      </trans-unit>
      <trans-unit id="54096">
        <source>绝大部分 `ctx` 方法都会在在插件被停用自动回收副作用；然而，如果你使用了 `ctx` 之外的方法，你的代码还可能通过其他方式引入副作用，这时就需要通过 `dispose` 事件来手动清除它们。</source>
        <target state="needs-translation">绝大部分 `ctx` 方法都会在在插件被停用自动回收副作用；然而，如果你使用了 `ctx` 之外的方法，你的代码还可能通过其他方式引入副作用，这时就需要通过 `dispose` 事件来手动清除它们。</target>
      </trans-unit>
      <trans-unit id="54098">
        <source>下面是一个例子：</source>
        <target state="needs-translation">下面是一个例子：</target>
      </trans-unit>
      <trans-unit id="54100">
        <source>// 一个示例的服务器插件
import { Context } from 'koishi'
import { createServer } from 'http'

export function apply(ctx: Context, config) {
  const server = createServer()

  ctx.on('ready', () =&gt; {
    // 在插件启动时监听端口
    server.listen(1234)
  })

  ctx.on('dispose', () =&gt; {
    // 在插件停用时关闭端口
    server.close()
  })
}</source>
        <target state="needs-translation">// 一个示例的服务器插件
import { Context } from 'koishi'
import { createServer } from 'http'

export function apply(ctx: Context, config) {
  const server = createServer()

  ctx.on('ready', () =&gt; {
    // 在插件启动时监听端口
    server.listen(1234)
  })

  ctx.on('dispose', () =&gt; {
    // 在插件停用时关闭端口
    server.close()
  })
}</target>
      </trans-unit>
      <trans-unit id="54102">
        <source>可重用性与 `fork` 事件</source>
        <target state="needs-translation">可重用性与 `fork` 事件</target>
      </trans-unit>
      <trans-unit id="54104">
        <source>可重用插件</source>
        <target state="needs-translation">可重用插件</target>
      </trans-unit>
      <trans-unit id="54106">
        <source>到此为止，我们所介绍的插件开发都限定在插件只能同时启用一份的情况。</source>
        <target state="needs-translation">到此为止，我们所介绍的插件开发都限定在插件只能同时启用一份的情况。</target>
      </trans-unit>
      <trans-unit id="54108">
        <source>如果你想要在同一个应用中同时启用多份插件，会发生什么呢？</source>
        <target state="needs-translation">如果你想要在同一个应用中同时启用多份插件，会发生什么呢？</target>
      </trans-unit>
      <trans-unit id="54110">
        <source>function callback() {
  console.log('called')
}

ctx.plugin(callback)
ctx.plugin(callback)</source>
        <target state="needs-translation">function callback() {
  console.log('called')
}

ctx.plugin(callback)
ctx.plugin(callback)</target>
      </trans-unit>
      <trans-unit id="54112">
        <source>执行上面的代码，你会发现 `called` 只会被打印一次。</source>
        <target state="needs-translation">执行上面的代码，你会发现 `called` 只会被打印一次。</target>
      </trans-unit>
      <trans-unit id="54114">
        <source>这是因为 `ctx.plugin()` 会检测插件是否已经被加载：如果是，则会直接返回之前的 `Fork` 对象，而不会再次执行插件的逻辑。</source>
        <target state="needs-translation">这是因为 `ctx.plugin()` 会检测插件是否已经被加载：如果是，则会直接返回之前的 `Fork` 对象，而不会再次执行插件的逻辑。</target>
      </trans-unit>
      <trans-unit id="54116">
        <source>采用这种设计的主要原因是，插件往往会占用某些资源，因此重复启用会导致预期之外的问题。</source>
        <target state="needs-translation">采用这种设计的主要原因是，插件往往会占用某些资源，因此重复启用会导致预期之外的问题。</target>
      </trans-unit>
      <trans-unit id="54118">
        <source>例如，一个插件注册了某个指令，如果重复启用，那么这个指令也会被重复注册。</source>
        <target state="needs-translation">例如，一个插件注册了某个指令，如果重复启用，那么这个指令也会被重复注册。</target>
      </trans-unit>
      <trans-unit id="54120">
        <source>而当用户调用这个指令时，究竟要执行哪个指令的逻辑呢？</source>
        <target state="needs-translation">而当用户调用这个指令时，究竟要执行哪个指令的逻辑呢？</target>
      </trans-unit>
      <trans-unit id="54122">
        <source>这显然是不合理的。</source>
        <target state="needs-translation">这显然是不合理的。</target>
      </trans-unit>
      <trans-unit id="54124">
        <source>不过也不能因此就认为所有插件都不应该被重用。</source>
        <target state="needs-translation">不过也不能因此就认为所有插件都不应该被重用。</target>
      </trans-unit>
      <trans-unit id="54126">
        <source>如果你真的有这样的需求，Koishi 也提供了方法——只需声明插件的 `reusable` 属性为 `true` 即可。</source>
        <target state="needs-translation">如果你真的有这样的需求，Koishi 也提供了方法——只需声明插件的 `reusable` 属性为 `true` 即可。</target>
      </trans-unit>
      <trans-unit id="54128">
        <source>参考下面的例子：</source>
        <target state="needs-translation">参考下面的例子：</target>
      </trans-unit>
      <trans-unit id="54130">
        <source>export const name = 'reply'
export const reusable = true    // 声明此插件可重用

export interface Config {
  input: string
  output: string
}

export function apply(ctx: Context, config: Config) {
  ctx.middleware((session, next) =&gt; {
    // 当用户发送 input 时，回复 output
    if (session.content === config.input) {
      return config.output
    }
    return next()
  })
}</source>
        <target state="needs-translation">export const name = 'reply'
export const reusable = true    // 声明此插件可重用

export interface Config {
  input: string
  output: string
}

export function apply(ctx: Context, config: Config) {
  ctx.middleware((session, next) =&gt; {
    // 当用户发送 input 时，回复 output
    if (session.content === config.input) {
      return config.output
    }
    return next()
  })
}</target>
      </trans-unit>
      <trans-unit id="54132">
        <source>然后我们可以多次调用此插件了：</source>
        <target state="needs-translation">然后我们可以多次调用此插件了：</target>
      </trans-unit>
      <trans-unit id="54134">
        <source>import * as reply from './reply'

ctx.plugin(reply, { input: '天王盖地虎', output: '宝塔镇河妖' })
ctx.plugin(reply, { input: '宫廷玉液酒', output: '一百八一杯' })</source>
        <target state="needs-translation">import * as reply from './reply'

ctx.plugin(reply, { input: '天王盖地虎', output: '宝塔镇河妖' })
ctx.plugin(reply, { input: '宫廷玉液酒', output: '一百八一杯' })</target>
      </trans-unit>
      <trans-unit id="54136">
        <source>如果你在开发类形式的插件，那么可以在类的静态属性中声明 `reusable`，效果是一样的：</source>
        <target state="needs-translation">如果你在开发类形式的插件，那么可以在类的静态属性中声明 `reusable`，效果是一样的：</target>
      </trans-unit>
      <trans-unit id="54138">
        <source>export default class Bar {
  static reusable = true
  constructor(ctx: Context) {}
}</source>
        <target state="needs-translation">export default class Bar {
  static reusable = true
  constructor(ctx: Context) {}
}</target>
      </trans-unit>
      <trans-unit id="54140">
        <source>维护共享状态</source>
        <target state="needs-translation">维护共享状态</target>
      </trans-unit>
      <trans-unit id="54142">
        <source>一种更复杂的情况是，我们既需要插件可重用，又需要维护一些共享状态。</source>
        <target state="needs-translation">一种更复杂的情况是，我们既需要插件可重用，又需要维护一些共享状态。</target>
      </trans-unit>
      <trans-unit id="54144">
        <source>例如，我们能否编写一个指令，使得它总是返回插件被调用的次数呢？</source>
        <target state="needs-translation">例如，我们能否编写一个指令，使得它总是返回插件被调用的次数呢？</target>
      </trans-unit>
      <trans-unit id="54146">
        <source>这时候 `fork` 事件就派上用场了：</source>
        <target state="needs-translation">这时候 `fork` 事件就派上用场了：</target>
      </trans-unit>
      <trans-unit id="54148">
        <source>export const name = 'count'

export function apply(ctx: Context) {
  let count = 0         // 这里保存了共享状态

  ctx.command('count').action(() =&gt; {
    return `此插件已被调用 ${count} 次。`
  })

  ctx.on('fork', (ctx) =&gt; {
    count += 1
    ctx.on('dispose', () =&gt; {
      count -= 1
    })
  })
}</source>
        <target state="needs-translation">export const name = 'count'

export function apply(ctx: Context) {
  let count = 0         // 这里保存了共享状态

  ctx.command('count').action(() =&gt; {
    return `此插件已被调用 ${count} 次。`
  })

  ctx.on('fork', (ctx) =&gt; {
    count += 1
    ctx.on('dispose', () =&gt; {
      count -= 1
    })
  })
}</target>
      </trans-unit>
      <trans-unit id="54150">
        <source>我们可以看到，上面的插件并没有声明 `reusable` 属性，取而代之的是监听了 `fork` 事件。</source>
        <target state="needs-translation">我们可以看到，上面的插件并没有声明 `reusable` 属性，取而代之的是监听了 `fork` 事件。</target>
      </trans-unit>
      <trans-unit id="54152">
        <source>`fork` 是一个生命周期事件，当插件每次被调用时都会触发。</source>
        <target state="needs-translation">`fork` 是一个生命周期事件，当插件每次被调用时都会触发。</target>
      </trans-unit>
      <trans-unit id="54154">
        <source>因此，我们可以在 `fork` 事件中对共享状态进行更新。</source>
        <target state="needs-translation">因此，我们可以在 `fork` 事件中对共享状态进行更新。</target>
      </trans-unit>
      <trans-unit id="54156">
        <source>我们每创建一个新的 `Fork` 对象，就会增加一次 `count`；而每当 `Fork` 对象被停用，就会减少一次 `count`；当用户调用指令时，我们只需要返回 `count` 的值即可。</source>
        <target state="needs-translation">我们每创建一个新的 `Fork` 对象，就会增加一次 `count`；而每当 `Fork` 对象被停用，就会减少一次 `count`；当用户调用指令时，我们只需要返回 `count` 的值即可。</target>
      </trans-unit>
      <trans-unit id="54158">
        <source>`fork` 事件实际上将插件分割成了两个不同的作用域。</source>
        <target state="needs-translation">`fork` 事件实际上将插件分割成了两个不同的作用域。</target>
      </trans-unit>
      <trans-unit id="54160">
        <source>外侧的代码仍然只会被执行一次，对应着不可重用的部分；而内侧的代码则会被执行多次，对应着可重用的部分。</source>
        <target state="needs-translation">外侧的代码仍然只会被执行一次，对应着不可重用的部分；而内侧的代码则会被执行多次，对应着可重用的部分。</target>
      </trans-unit>
      <trans-unit id="54162">
        <source>在上面的例子中，只需将指令的注册放在外侧作用域中，这样就不用担心重复注册的问题了。</source>
        <target state="needs-translation">在上面的例子中，只需将指令的注册放在外侧作用域中，这样就不用担心重复注册的问题了。</target>
      </trans-unit>
      <trans-unit id="54164">
        <source>最后，`fork` 事件的回调函数与插件本身类似，也接受 `ctx` 和 `config` 两个参数，分别对应于该次调用时传入插件的参数。</source>
        <target state="needs-translation">最后，`fork` 事件的回调函数与插件本身类似，也接受 `ctx` 和 `config` 两个参数，分别对应于该次调用时传入插件的参数。</target>
      </trans-unit>
      <trans-unit id="54166">
        <source>外侧和内侧的 `ctx` 含义不同，请格外注意。</source>
        <target state="needs-translation">外侧和内侧的 `ctx` 含义不同，请格外注意。</target>
      </trans-unit>
      <trans-unit id="54168">
        <source>嵌套插件的可重用性</source>
        <target state="needs-translation">嵌套插件的可重用性</target>
      </trans-unit>
      <trans-unit id="54170">
        <source>让我们重新梳理一下可重用插件的概念：</source>
        <target state="needs-translation">让我们重新梳理一下可重用插件的概念：</target>
      </trans-unit>
      <trans-unit id="54172">
        <source>根据插件的 `reusable` 属性，可以将插件分为可重用插件和不可重用插件：不可重用插件被调用多次时，只会执行一次插件逻辑；而可重用插件被调用多次时，会执行多次插件逻辑；</source>
        <target state="needs-translation">根据插件的 `reusable` 属性，可以将插件分为可重用插件和不可重用插件：不可重用插件被调用多次时，只会执行一次插件逻辑；而可重用插件被调用多次时，会执行多次插件逻辑；</target>
      </trans-unit>
      <trans-unit id="54174">
        <source>这两种类型本质上都可以使用 `fork` 事件来表达：不可重用插件的逻辑写在 `fork` 事件的外侧，而可重用插件的逻辑写在 `fork` 事件的内侧。</source>
        <target state="needs-translation">这两种类型本质上都可以使用 `fork` 事件来表达：不可重用插件的逻辑写在 `fork` 事件的外侧，而可重用插件的逻辑写在 `fork` 事件的内侧。</target>
      </trans-unit>
      <trans-unit id="54176">
        <source>当我们嵌套使用可重用插件和不可重用插件时，又会发生什么呢？</source>
        <target state="needs-translation">当我们嵌套使用可重用插件和不可重用插件时，又会发生什么呢？</target>
      </trans-unit>
      <trans-unit id="54178">
        <source>让我们来看一些例子吧。</source>
        <target state="needs-translation">让我们来看一些例子吧。</target>
      </trans-unit>
      <trans-unit id="54180">
        <source>情况一：不可重用插件嵌套可重用插件</source>
        <target state="needs-translation">情况一：不可重用插件嵌套可重用插件</target>
      </trans-unit>
      <trans-unit id="54182">
        <source>实际上我们会发现，`reusable` 属性只是 `fork` 事件的语法糖。</source>
        <target state="needs-translation">实际上我们会发现，`reusable` 属性只是 `fork` 事件的语法糖。</target>
      </trans-unit>
      <trans-unit id="54184">
        <source>下面两种写法是等价的：</source>
        <target state="needs-translation">下面两种写法是等价的：</target>
      </trans-unit>
      <trans-unit id="54186">
        <source>ctx.plugin({
  reusable: true,
  apply: (ctx) =&gt; {
    ctx.middleware(callback)
  },
})</source>
        <target state="needs-translation">ctx.plugin({
  reusable: true,
  apply: (ctx) =&gt; {
    ctx.middleware(callback)
  },
})</target>
      </trans-unit>
      <trans-unit id="54188">
        <source>ctx.plugin((ctx) =&gt; {
  ctx.on('fork', (ctx) =&gt; {
    ctx.middleware(callback)
  })
})</source>
        <target state="needs-translation">ctx.plugin((ctx) =&gt; {
  ctx.on('fork', (ctx) =&gt; {
    ctx.middleware(callback)
  })
})</target>
      </trans-unit>
      <trans-unit id="54190">
        <source>然而，如果你直接将可重用插件嵌套在不可重用插件中，由于外层的插件只会执行一次，所以内层的插件也并不会被重复执行。</source>
        <target state="needs-translation">然而，如果你直接将可重用插件嵌套在不可重用插件中，由于外层的插件只会执行一次，所以内层的插件也并不会被重复执行。</target>
      </trans-unit>
      <trans-unit id="54192">
        <source>这显然不是我们想要的结果。</source>
        <target state="needs-translation">这显然不是我们想要的结果。</target>
      </trans-unit>
      <trans-unit id="54194">
        <source>这就是为什么我们需要 `fork` 事件。</source>
        <target state="needs-translation">这就是为什么我们需要 `fork` 事件。</target>
      </trans-unit>
      <trans-unit id="54196">
        <source>当你需要在不可重用的插件中重用某段代码，你就应该使用 `fork` 事件，就像上面的例子一样。</source>
        <target state="needs-translation">当你需要在不可重用的插件中重用某段代码，你就应该使用 `fork` 事件，就像上面的例子一样。</target>
      </trans-unit>
      <trans-unit id="54198">
        <source>情况二：可重用插件嵌套不可重用插件</source>
        <target state="needs-translation">情况二：可重用插件嵌套不可重用插件</target>
      </trans-unit>
      <trans-unit id="54200">
        <source>反过来的情况则更加自然：如果你在可重用插件内调用了一个不可重用的插件，那么可重用插件将被多次执行，而不可重用则会确保只被执行一次。</source>
        <target state="needs-translation">反过来的情况则更加自然：如果你在可重用插件内调用了一个不可重用的插件，那么可重用插件将被多次执行，而不可重用则会确保只被执行一次。</target>
      </trans-unit>
      <trans-unit id="54202">
        <source>这种写法常常用于注册指令或其他服务：</source>
        <target state="needs-translation">这种写法常常用于注册指令或其他服务：</target>
      </trans-unit>
      <trans-unit id="54204">
        <source>export function apply(ctx: Context) {
  // 注册指令
  ctx.command('foo').action(callback)

  // 扩展控制台
  ctx.console.addEntry('/client')
}</source>
        <target state="needs-translation">export function apply(ctx: Context) {
  // 注册指令
  ctx.command('foo').action(callback)

  // 扩展控制台
  ctx.console.addEntry('/client')
}</target>
      </trans-unit>
      <trans-unit id="54206">
        <source>import * as internal from './internal'

export const reusable = true

export function apply(ctx: Context, config: Config) {
  // 不可重用的部分被嵌套在独立的插件中
  ctx.plugin(internal)

  // 中间件是可以重复注册的
  ctx.middleware(callback)
}</source>
        <target state="needs-translation">import * as internal from './internal'

export const reusable = true

export function apply(ctx: Context, config: Config) {
  // 不可重用的部分被嵌套在独立的插件中
  ctx.plugin(internal)

  // 中间件是可以重复注册的
  ctx.middleware(callback)
}</target>
      </trans-unit>
      <trans-unit id="54208">
        <source>重新认识上下文</source>
        <target state="needs-translation">重新认识上下文</target>
      </trans-unit>
      <trans-unit id="54210">
        <source>从学习 Koishi 开发的一开始，我们就已经接触到了 **上下文 (Context)** 这个概念。</source>
        <target state="needs-translation">从学习 Koishi 开发的一开始，我们就已经接触到了 **上下文 (Context)** 这个概念。</target>
      </trans-unit>
      <trans-unit id="54212">
        <source>我们所熟悉的 `ctx.on()`, `ctx.middleware()` 以及 `ctx.command()` 等等 API 都是上下文类所提供的方法。</source>
        <target state="needs-translation">我们所熟悉的 `ctx.on()`, `ctx.middleware()` 以及 `ctx.command()` 等等 API 都是上下文类所提供的方法。</target>
      </trans-unit>
      <trans-unit id="54214">
        <source>而在本节中，我们进一步看到，上下文在插件开发中扮演着非常重要的角色。</source>
        <target state="needs-translation">而在本节中，我们进一步看到，上下文在插件开发中扮演着非常重要的角色。</target>
      </trans-unit>
      <trans-unit id="54216">
        <source>上下文描述了机器人的一种可能的运行环境，而插件则是在这个环境中运行的。</source>
        <target state="needs-translation">上下文描述了机器人的一种可能的运行环境，而插件则是在这个环境中运行的。</target>
      </trans-unit>
      <trans-unit id="54218">
        <source>每个插件的上下文互不相同，这才保证了插件的副作用可以被有效地回收。</source>
        <target state="needs-translation">每个插件的上下文互不相同，这才保证了插件的副作用可以被有效地回收。</target>
      </trans-unit>
      <trans-unit id="54220">
        <source>对于完整的运行环境有许多的刻画方式，而副作用的回收正是其中的一种。</source>
        <target state="needs-translation">对于完整的运行环境有许多的刻画方式，而副作用的回收正是其中的一种。</target>
      </trans-unit>
      <trans-unit id="54222">
        <source>基于副作用的上下文也可以称为插件上下文。</source>
        <target state="needs-translation">基于副作用的上下文也可以称为插件上下文。</target>
      </trans-unit>
      <trans-unit id="54224">
        <source>在接下来的章节中，我们还将看到运行环境的其他刻画维度，包括基于依赖的服务上下文和基于过滤器的会话上下文。</source>
        <target state="needs-translation">在接下来的章节中，我们还将看到运行环境的其他刻画维度，包括基于依赖的服务上下文和基于过滤器的会话上下文。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1594" original="/[koishijs.docs] main/zh-CN/guide/plugin/schema.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="54226">
        <source>配置构型</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">配置構型</target>
      </trans-unit>
      <trans-unit id="54228">
        <source>在上一节中，我们已经了解了插件的本质是一个接受了上下文和配置项的函数。</source>
        <target state="needs-translation">在上一节中，我们已经了解了插件的本质是一个接受了上下文和配置项的函数。</target>
      </trans-unit>
      <trans-unit id="54230">
        <source>但仅仅是接受任意格式的输入是不够的，我们还需要对配置项进行一些约束，以确保插件能够正常运行。</source>
        <target state="needs-translation">但仅仅是接受任意格式的输入是不够的，我们还需要对配置项进行一些约束，以确保插件能够正常运行。</target>
      </trans-unit>
      <trans-unit id="54232">
        <source>为此，我们开发了 [schemastery](https://github.com/shigma/schemastery) 这个工具，并将它集成到了 Koishi 中。</source>
        <target state="needs-translation">为此，我们开发了 [schemastery](https://github.com/shigma/schemastery) 这个工具，并将它集成到了 Koishi 中。</target>
      </trans-unit>
      <trans-unit id="54234">
        <source>这个工具可以帮助你：</source>
        <target state="needs-translation">这个工具可以帮助你：</target>
      </trans-unit>
      <trans-unit id="54236">
        <source>验证某个配置项是否合法</source>
        <target state="needs-translation">验证某个配置项是否合法</target>
      </trans-unit>
      <trans-unit id="54238">
        <source>为可缺省的配置项提供默认值</source>
        <target state="needs-translation">为可缺省的配置项提供默认值</target>
      </trans-unit>
      <trans-unit id="54240">
        <source>在控制台中通过表单让用户进行在线配置</source>
        <target state="needs-translation">在控制台中通过表单让用户进行在线配置</target>
      </trans-unit>
      <trans-unit id="54242">
        <source>让我们来看看它是如何工作的。</source>
        <target state="needs-translation">让我们来看看它是如何工作的。</target>
      </trans-unit>
      <trans-unit id="54244">
        <source>基本示例</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">基礎實例</target>
      </trans-unit>
      <trans-unit id="54246">
        <source>让我们看一个简单的示例。</source>
        <target state="needs-translation">让我们看一个简单的示例。</target>
      </trans-unit>
      <trans-unit id="54248">
        <source>下面的插件将注册一个指令，输出当前插件的配置项。</source>
        <target state="needs-translation">下面的插件将注册一个指令，输出当前插件的配置项。</target>
      </trans-unit>
      <trans-unit id="54250">
        <source>import { Context, Schema } from 'koishi'

export const name = 'example'

export interface Config {
  foo: string
  bar?: number
}

export const Config: Schema&lt;Config&gt; = Schema.object({
  foo: Schema.string().required(),
  bar: Schema.number().default(1),
})

export function apply(ctx: Context, config: Config) {
  ctx.command('config').action(() =&gt; {
    // 输出当前的配置
    return `foo: ${config.foo}\nbar: ${config.bar}`
  })
}</source>
        <target state="needs-translation">import { Context, Schema } from 'koishi'

export const name = 'example'

export interface Config {
  foo: string
  bar?: number
}

export const Config: Schema&lt;Config&gt; = Schema.object({
  foo: Schema.string().required(),
  bar: Schema.number().default(1),
})

export function apply(ctx: Context, config: Config) {
  ctx.command('config').action(() =&gt; {
    // 输出当前的配置
    return `foo: ${config.foo}\nbar: ${config.bar}`
  })
}</target>
      </trans-unit>
      <trans-unit id="54252">
        <source>在这个示例中，我们的插件导出了一个 `Config` 类型和一个同名的 `Schema` 对象。</source>
        <target state="needs-translation">在这个示例中，我们的插件导出了一个 `Config` 类型和一个同名的 `Schema` 对象。</target>
      </trans-unit>
      <trans-unit id="54254">
        <source>前者为我们的插件提供了类型，而后者则生成了对配置项的约束。</source>
        <target state="needs-translation">前者为我们的插件提供了类型，而后者则生成了对配置项的约束。</target>
      </trans-unit>
      <trans-unit id="54256">
        <source>我们可以看到，这个插件的配置项有两个属性，`foo` 是必需的，而 `bar` 则是可选的。</source>
        <target state="needs-translation">我们可以看到，这个插件的配置项有两个属性，`foo` 是必需的，而 `bar` 则是可选的。</target>
      </trans-unit>
      <trans-unit id="54258">
        <source>如果你不填写 `foo`，那么插件在启动时就会报错；而如果你不填写 `bar`，那么它将会被赋予默认值 `1`。</source>
        <target state="needs-translation">如果你不填写 `foo`，那么插件在启动时就会报错；而如果你不填写 `bar`，那么它将会被赋予默认值 `1`。</target>
      </trans-unit>
      <trans-unit id="54260">
        <source>描述类型信息</source>
        <target state="needs-translation">描述类型信息</target>
      </trans-unit>
      <trans-unit id="54262">
        <source>除了 `string`, `number`, `boolean` 等类型外，Koishi 同样支持 `array`, `dict`, `object` 等复合类型。</source>
        <target state="needs-translation">除了 `string`, `number`, `boolean` 等类型外，Koishi 同样支持 `array`, `dict`, `object` 等复合类型。</target>
      </trans-unit>
      <trans-unit id="54264">
        <source>你可以组合使用它们来构造出更复杂的配置项。</source>
        <target state="needs-translation">你可以组合使用它们来构造出更复杂的配置项。</target>
      </trans-unit>
      <trans-unit id="54266">
        <source>Schema.object({
  foo: Schema.array(Schema.string()),
  bar: Schema.dict(Schema.number()),
  baz: Schema.object({
    quz: Schema.boolean(),
  }),
})</source>
        <target state="needs-translation">Schema.object({
  foo: Schema.array(Schema.string()),
  bar: Schema.dict(Schema.number()),
  baz: Schema.object({
    quz: Schema.boolean(),
  }),
})</target>
      </trans-unit>
      <trans-unit id="54268">
        <source>你可以通过 `Schema` 对象的静态方法来创建这些类型；而对于已经创建的类型，你还可以通过链式调用的方式添加更多信息：</source>
        <target state="needs-translation">你可以通过 `Schema` 对象的静态方法来创建这些类型；而对于已经创建的类型，你还可以通过链式调用的方式添加更多信息：</target>
      </trans-unit>
      <trans-unit id="54270">
        <source>Schema.number()
  // 限制取值范围
  .min(0).max(100).step(1)
  // 设置默认值
  .default(50)
  // 以滑动条的形式显示
  .role('slider')
  // 设置描述信息
  .description('这是一个介于 0 和 100 之间的整数。')</source>
        <target state="needs-translation">Schema.number()
  // 限制取值范围
  .min(0).max(100).step(1)
  // 设置默认值
  .default(50)
  // 以滑动条的形式显示
  .role('slider')
  // 设置描述信息
  .description('这是一个介于 0 和 100 之间的整数。')</target>
      </trans-unit>
      <trans-unit id="54272">
        <source>我们能做的还远不止于此。</source>
        <target state="needs-translation">我们能做的还远不止于此。</target>
      </trans-unit>
      <trans-unit id="54274">
        <source>一些高级类型如 `intersect` 可用于将类型的分组显示；而 `union` 则可以创造联合类型。</source>
        <target state="needs-translation">一些高级类型如 `intersect` 可用于将类型的分组显示；而 `union` 则可以创造联合类型。</target>
      </trans-unit>
      <trans-unit id="54276">
        <source>通过恰当地组合它们，你甚至可以构造出上下关联的配置项！</source>
        <target state="needs-translation">通过恰当地组合它们，你甚至可以构造出上下关联的配置项！</target>
      </trans-unit>
      <trans-unit id="54278">
        <source>为了帮助你更好地理解这些类型，我们专门编写了在线的 [配置演练场](../../schema/index.md)。</source>
        <target state="needs-translation">为了帮助你更好地理解这些类型，我们专门编写了在线的 [配置演练场](../../schema/index.md)。</target>
      </trans-unit>
      <trans-unit id="54280">
        <source>所有类型的详细信息和用法示例都可以在这里找到。</source>
        <target state="needs-translation">所有类型的详细信息和用法示例都可以在这里找到。</target>
      </trans-unit>
      <trans-unit id="54282">
        <source>插件的元属性</source>
        <target state="needs-translation">插件的元属性</target>
      </trans-unit>
      <trans-unit id="54284">
        <source>需要注意的是，`Config` 应当是导出的插件的一个属性。</source>
        <target state="needs-translation">需要注意的是，`Config` 应当是导出的插件的一个属性。</target>
      </trans-unit>
      <trans-unit id="54286">
        <source>因此，如果你使用默认导出，推荐你使用 `namespace` 来声明插件的配置：</source>
        <target state="needs-translation">因此，如果你使用默认导出，推荐你使用 `namespace` 来声明插件的配置：</target>
      </trans-unit>
      <trans-unit id="65408">
        <source>class Example {
  constructor(ctx: Context, config: Example.Config) {
    // 这里是插件实现
  }
}

namespace Example {
  export interface Config {}

  export const Config: Schema&lt;Config&gt; = Schema.object({
    // 这里是配置声明
  })
}

export default Example</source>
        <target state="needs-translation">class Example {
  constructor(ctx: Context, config: Example.Config) {
    // 这里是插件实现
  }
}

namespace Example {
  export interface Config {}

  export const Config: Schema&lt;Config&gt; = Schema.object({
    // 这里是配置声明
  })
}

export default Example</target>
      </trans-unit>
      <trans-unit id="54290">
        <source>形如 `name` 和 `Config` 这样的属性，我们称之为插件的元属性。</source>
        <target state="needs-translation">形如 `name` 和 `Config` 这样的属性，我们称之为插件的元属性。</target>
      </trans-unit>
      <trans-unit id="54292">
        <source>它们需要与插件的入口函数同级导出。</source>
        <target state="needs-translation">它们需要与插件的入口函数同级导出。</target>
      </trans-unit>
      <trans-unit id="54294">
        <source>例如，你还可以通过导出 `usage` 属性来为插件提供使用方法。</source>
        <target state="needs-translation">例如，你还可以通过导出 `usage` 属性来为插件提供使用方法。</target>
      </trans-unit>
      <trans-unit id="54296">
        <source>这样一来，一个完整的插件就可以写成这样：</source>
        <target state="needs-translation">这样一来，一个完整的插件就可以写成这样：</target>
      </trans-unit>
      <trans-unit id="54298">
        <source>export const name = 'example'
export const usage = '这是一个示例插件。'
export interface Config {}
export const Config: Schema&lt;Config&gt; = Schema.object({})
export function apply(ctx: Context, config: Config) {}</source>
        <target state="needs-translation">export const name = 'example'
export const usage = '这是一个示例插件。'
export interface Config {}
export const Config: Schema&lt;Config&gt; = Schema.object({})
export function apply(ctx: Context, config: Config) {}</target>
      </trans-unit>
      <trans-unit id="54300">
        <source>类似的属性还有 `reusable`, `using`, `filter` 等等，我们将在接下来的几节中介绍它们的用法。</source>
        <target state="needs-translation">类似的属性还有 `reusable`, `using`, `filter` 等等，我们将在接下来的几节中介绍它们的用法。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1596" original="/[koishijs.docs] main/zh-CN/guide/plugin/service.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="54302">
        <source>服务与依赖</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">服務與依賴</target>
      </trans-unit>
      <trans-unit id="54304">
        <source>在之前的章节中，你或许已经意识到了 Koishi 的大部分特性都是围绕上下文进行设计的——即使不同的上下文可以隶属于不同的插件、配置不同的过滤器，但许多功能在不同的上下文中访问的效果是一致的。</source>
        <target state="needs-translation">在之前的章节中，你或许已经意识到了 Koishi 的大部分特性都是围绕上下文进行设计的——即使不同的上下文可以隶属于不同的插件、配置不同的过滤器，但许多功能在不同的上下文中访问的效果是一致的。</target>
      </trans-unit>
      <trans-unit id="54306">
        <source>换言之，应用其实可以被理解成一个容器，搭载了各种各样的功能 (如数据库和适配器等)，而上下文则单纯提供了一个接口来访问它们。</source>
        <target state="needs-translation">换言之，应用其实可以被理解成一个容器，搭载了各种各样的功能 (如数据库和适配器等)，而上下文则单纯提供了一个接口来访问它们。</target>
      </trans-unit>
      <trans-unit id="54308">
        <source>这种组织形式被称为 **服务 (Service)**。</source>
        <target state="needs-translation">这种组织形式被称为 **服务 (Service)**。</target>
      </trans-unit>
      <trans-unit id="54310">
        <source>对于已经有 IoC / DI 概念的同学来说，服务就是一种类似于 IoC 的实现 (但并非通过 DI 实现)。</source>
        <target state="needs-translation">对于已经有 IoC / DI 概念的同学来说，服务就是一种类似于 IoC 的实现 (但并非通过 DI 实现)。</target>
      </trans-unit>
      <trans-unit id="54312">
        <source>Service API 通过 TypeScript 特有的 **声明合并 (Declaration Merging)** 机制提供了容器内服务的快速访问。</source>
        <target state="needs-translation">Service API 通过 TypeScript 特有的 **声明合并 (Declaration Merging)** 机制提供了容器内服务的快速访问。</target>
      </trans-unit>
      <trans-unit id="54314">
        <source>服务的类型</source>
        <target state="needs-translation">服务的类型</target>
      </trans-unit>
      <trans-unit id="54316">
        <source>Koishi 中的服务可以分为大致三种类型。</source>
        <target state="needs-translation">Koishi 中的服务可以分为大致三种类型。</target>
      </trans-unit>
      <trans-unit id="54318">
        <source>对于每一种我都给出了一些例子。</source>
        <target state="needs-translation">对于每一种我都给出了一些例子。</target>
      </trans-unit>
      <trans-unit id="54320">
        <source>第一种是由 **Koishi 自带的服务**。</source>
        <target state="needs-translation">第一种是由 **Koishi 自带的服务**。</target>
      </trans-unit>
      <trans-unit id="54322">
        <source>只要有上下文对象，你就可以随时访问这些服务。</source>
        <target state="needs-translation">只要有上下文对象，你就可以随时访问这些服务。</target>
      </trans-unit>
      <trans-unit id="54324">
        <source>ctx.model：提供数据模型</source>
        <target state="needs-translation">ctx.model：提供数据模型</target>
      </trans-unit>
      <trans-unit id="54326">
        <source>ctx.i18n：提供国际化能力</source>
        <target state="needs-translation">ctx.i18n：提供国际化能力</target>
      </trans-unit>
      <trans-unit id="54328">
        <source>第二种是由 **Koishi 所定义但并未实现的服务**。</source>
        <target state="needs-translation">第二种是由 **Koishi 所定义但并未实现的服务**。</target>
      </trans-unit>
      <trans-unit id="54330">
        <source>你可以选择适当的插件来实现它们。</source>
        <target state="needs-translation">你可以选择适当的插件来实现它们。</target>
      </trans-unit>
      <trans-unit id="54332">
        <source>在你安装相应的插件之前，相关的功能是无法访问的。</source>
        <target state="needs-translation">在你安装相应的插件之前，相关的功能是无法访问的。</target>
      </trans-unit>
      <trans-unit id="54334">
        <source>ctx.assets：转存资源文件</source>
        <target state="needs-translation">ctx.assets：转存资源文件</target>
      </trans-unit>
      <trans-unit id="54336">
        <source>ctx.database：封装数据库操作</source>
        <target state="needs-translation">ctx.database：封装数据库操作</target>
      </trans-unit>
      <trans-unit id="54338">
        <source>实现特定服务的插件名通常以服务名作为前缀，例如 assets-local, database-mysql 等等。</source>
        <target state="needs-translation">实现特定服务的插件名通常以服务名作为前缀，例如 assets-local, database-mysql 等等。</target>
      </trans-unit>
      <trans-unit id="54340">
        <source>这并非强制的要求，但我们建议插件开发者也都遵循这个规范，这有助于让使用者对你插件的功能建立一个更明确的认识。</source>
        <target state="needs-translation">这并非强制的要求，但我们建议插件开发者也都遵循这个规范，这有助于让使用者对你插件的功能建立一个更明确的认识。</target>
      </trans-unit>
      <trans-unit id="54342">
        <source>最后一种则是 **由插件定义和实现的服务**。</source>
        <target state="needs-translation">最后一种则是 **由插件定义和实现的服务**。</target>
      </trans-unit>
      <trans-unit id="54344">
        <source>通常情况下你需要声明这些服务作为依赖。</source>
        <target state="needs-translation">通常情况下你需要声明这些服务作为依赖。</target>
      </trans-unit>
      <trans-unit id="54346">
        <source>关于插件与服务的依赖关系，会在下面具体介绍。</source>
        <target state="needs-translation">关于插件与服务的依赖关系，会在下面具体介绍。</target>
      </trans-unit>
      <trans-unit id="54348">
        <source>ctx.console：网页控制台</source>
        <target state="needs-translation">ctx.console：网页控制台</target>
      </trans-unit>
      <trans-unit id="54350">
        <source>ctx.puppeteer：浏览器截图</source>
        <target state="needs-translation">ctx.puppeteer：浏览器截图</target>
      </trans-unit>
      <trans-unit id="54352">
        <source>服务的依赖关系</source>
        <target state="needs-translation">服务的依赖关系</target>
      </trans-unit>
      <trans-unit id="54354">
        <source>前面从服务提供者的角度提供了解决方案，现在让我们把视角转换到服务的使用者上。</source>
        <target state="needs-translation">前面从服务提供者的角度提供了解决方案，现在让我们把视角转换到服务的使用者上。</target>
      </trans-unit>
      <trans-unit id="54356">
        <source>假设你正在开发名为 dialogue 的问答系统，并且这个插件依赖多个服务：</source>
        <target state="needs-translation">假设你正在开发名为 dialogue 的问答系统，并且这个插件依赖多个服务：</target>
      </trans-unit>
      <trans-unit id="54358">
        <source>`database`：你使用数据库存储教学内容，离开数据库你的插件将无法运行</source>
        <target state="needs-translation">`database`：你使用数据库存储教学内容，离开数据库你的插件将无法运行</target>
      </trans-unit>
      <trans-unit id="54360">
        <source>`assets`：你需要使用资源存储服务来做图片转存，离开此服务将可能导致部分图片无法正常显示，但短时间内不会对插件的运行造成影响</source>
        <target state="needs-translation">`assets`：你需要使用资源存储服务来做图片转存，离开此服务将可能导致部分图片无法正常显示，但短时间内不会对插件的运行造成影响</target>
      </trans-unit>
      <trans-unit id="54362">
        <source>`console`：你为你的插件编写了控制台扩展，当控制台存在时你可以在网页中进行操作，但它并非教学系统的主要功能</source>
        <target state="needs-translation">`console`：你为你的插件编写了控制台扩展，当控制台存在时你可以在网页中进行操作，但它并非教学系统的主要功能</target>
      </trans-unit>
      <trans-unit id="54364">
        <source>那么你应该怎么写呢？</source>
        <target state="needs-translation">那么你应该怎么写呢？</target>
      </trans-unit>
      <trans-unit id="54366">
        <source>先让我们来看一段标准错误答案：</source>
        <target state="needs-translation">先让我们来看一段标准错误答案：</target>
      </trans-unit>
      <trans-unit id="54368">
        <source>// 标准错误答案！别抄这个！
export const name = 'dialogue'

export function apply(ctx: Context) {
  // 检查数据库服务是否存在
  if (!ctx.database) return

  ctx.command('dialogue').action((_, content) =&gt; {
    // 检查资源存储服务是否存在
    if (ctx.assets) ctx.assets.transform(content)
  })

  // 检查控制台服务是否存在
  if (ctx.console) {
    ctx.console.addEntry('/path/to/dialogue/extension')
  }
}</source>
        <target state="needs-translation">// 标准错误答案！别抄这个！
export const name = 'dialogue'

export function apply(ctx: Context) {
  // 检查数据库服务是否存在
  if (!ctx.database) return

  ctx.command('dialogue').action((_, content) =&gt; {
    // 检查资源存储服务是否存在
    if (ctx.assets) ctx.assets.transform(content)
  })

  // 检查控制台服务是否存在
  if (ctx.console) {
    ctx.console.addEntry('/path/to/dialogue/extension')
  }
}</target>
      </trans-unit>
      <trans-unit id="54370">
        <source>你很快会发现这样写完全无法运行。</source>
        <target state="needs-translation">你很快会发现这样写完全无法运行。</target>
      </trans-unit>
      <trans-unit id="54372">
        <source>首先，数据库服务需要等到应用启动完成后才可以访问，换言之即使安装了数据库插件，你也无法立即判断数据库服务是否存在。</source>
        <target state="needs-translation">首先，数据库服务需要等到应用启动完成后才可以访问，换言之即使安装了数据库插件，你也无法立即判断数据库服务是否存在。</target>
      </trans-unit>
      <trans-unit id="54374">
        <source>此外，一旦上述服务所在插件在运行时被重载，由于上面的代码属于 dialogue 插件，因此 if 中代码的副作用将无法被有效清理；而当相应的服务重新被注册时，这部分的代码也不会被重新运行，从而导致一系列难以检测的问题。</source>
        <target state="needs-translation">此外，一旦上述服务所在插件在运行时被重载，由于上面的代码属于 dialogue 插件，因此 if 中代码的副作用将无法被有效清理；而当相应的服务重新被注册时，这部分的代码也不会被重新运行，从而导致一系列难以检测的问题。</target>
      </trans-unit>
      <trans-unit id="63626">
        <source>inject 属性 {#inject}</source>
        <target state="needs-translation">inject 属性 {#inject}</target>
      </trans-unit>
      <trans-unit id="54378">
        <source>为了解决这种问题，Koishi 为插件声明提供了一个独特的 `inject` 属性：</source>
        <target state="needs-translation">为了解决这种问题，Koishi 为插件声明提供了一个独特的 `inject` 属性：</target>
      </trans-unit>
      <trans-unit id="54380">
        <source>export const name = 'dialogue'
export const inject = ['database']

export function apply(ctx: Context) {
  // 你可以立即访问数据库服务
  ctx.database.get('dialogue', {})
}</source>
        <target state="needs-translation">export const name = 'dialogue'
export const inject = ['database']

export function apply(ctx: Context) {
  // 你可以立即访问数据库服务
  ctx.database.get('dialogue', {})
}</target>
      </trans-unit>
      <trans-unit id="54382">
        <source>`inject` 可以是一个数组或者对象。</source>
        <target state="needs-translation">`inject` 可以是一个数组或者对象。</target>
      </trans-unit>
      <trans-unit id="54384">
        <source>这里使用了数组，表示此插件依赖的服务列表。</source>
        <target state="needs-translation">这里使用了数组，表示此插件依赖的服务列表。</target>
      </trans-unit>
      <trans-unit id="54386">
        <source>怎么理解这里的依赖关系呢？</source>
        <target state="needs-translation">怎么理解这里的依赖关系呢？</target>
      </trans-unit>
      <trans-unit id="54388">
        <source>如果你声明了某个服务作为插件的依赖：</source>
        <target state="needs-translation">如果你声明了某个服务作为插件的依赖：</target>
      </trans-unit>
      <trans-unit id="54390">
        <source>直到此服务的值变为 truthy 为止，该插件的函数体不会被加载</source>
        <target state="needs-translation">直到此服务的值变为 truthy 为止，该插件的函数体不会被加载</target>
      </trans-unit>
      <trans-unit id="54392">
        <source>一旦此服务的值发生变化，该插件将立即回滚 (并非插件停用)</source>
        <target state="needs-translation">一旦此服务的值发生变化，该插件将立即回滚 (并非插件停用)</target>
      </trans-unit>
      <trans-unit id="54394">
        <source>如果变化后的值依旧为 truthy，该插件会在回滚完成后被重新加载</source>
        <target state="needs-translation">如果变化后的值依旧为 truthy，该插件会在回滚完成后被重新加载</target>
      </trans-unit>
      <trans-unit id="54396">
        <source>对于部分功能依赖某个服务的插件，有两种方式可以实现。</source>
        <target state="needs-translation">对于部分功能依赖某个服务的插件，有两种方式可以实现。</target>
      </trans-unit>
      <trans-unit id="54398">
        <source>第一种情况下，你可以把这部分功能独立为一个子插件。</source>
        <target state="needs-translation">第一种情况下，你可以把这部分功能独立为一个子插件。</target>
      </trans-unit>
      <trans-unit id="54400">
        <source>此时，Koishi 提供了一个语法糖 `ctx.inject()`：</source>
        <target state="needs-translation">此时，Koishi 提供了一个语法糖 `ctx.inject()`：</target>
      </trans-unit>
      <trans-unit id="54402">
        <source>ctx.inject(['console'], (ctx) =&gt; {
  ctx.console.addEntry('/path/to/dialogue/extension')
})

// 等价于
ctx.plugin({
  using: ['console'],
  apply: (ctx) =&gt; {
    ctx.console.addEntry('/path/to/dialogue/extension')
  },
})</source>
        <target state="needs-translation">ctx.inject(['console'], (ctx) =&gt; {
  ctx.console.addEntry('/path/to/dialogue/extension')
})

// 等价于
ctx.plugin({
  using: ['console'],
  apply: (ctx) =&gt; {
    ctx.console.addEntry('/path/to/dialogue/extension')
  },
})</target>
      </trans-unit>
      <trans-unit id="54404">
        <source>请注意：这里出现了两个 `ctx` 对象，它们属于不同的插件。</source>
        <target state="needs-translation">请注意：这里出现了两个 `ctx` 对象，它们属于不同的插件。</target>
      </trans-unit>
      <trans-unit id="54406">
        <source>在子插件的回调函数内，请务必使用作为参数的 `ctx` 而不是外层的 `ctx`，不然在服务被热重载时可能会引发内存泄漏。</source>
        <target state="needs-translation">在子插件的回调函数内，请务必使用作为参数的 `ctx` 而不是外层的 `ctx`，不然在服务被热重载时可能会引发内存泄漏。</target>
      </trans-unit>
      <trans-unit id="54408">
        <source>另一种情况是，插件依赖的服务仅仅在运行时判断并使用，并不提供任何副作用。</source>
        <target state="needs-translation">另一种情况是，插件依赖的服务仅仅在运行时判断并使用，并不提供任何副作用。</target>
      </trans-unit>
      <trans-unit id="54410">
        <source>此时可以将 `inject` 声明为一个对象，其含有 `required` 和 `optional` 两个可选的属性，分别表示必需依赖和可选依赖。</source>
        <target state="needs-translation">此时可以将 `inject` 声明为一个对象，其含有 `required` 和 `optional` 两个可选的属性，分别表示必需依赖和可选依赖。</target>
      </trans-unit>
      <trans-unit id="54412">
        <source>这样声明的可选依赖同样可以在插件体中直接使用，但插件的生命周期并不会实际依赖该服务。</source>
        <target state="needs-translation">这样声明的可选依赖同样可以在插件体中直接使用，但插件的生命周期并不会实际依赖该服务。</target>
      </trans-unit>
      <trans-unit id="54414">
        <source>换句话说，插件不会等待该服务加载，也不会因为服务的变化而回滚。</source>
        <target state="needs-translation">换句话说，插件不会等待该服务加载，也不会因为服务的变化而回滚。</target>
      </trans-unit>
      <trans-unit id="54416">
        <source>export const inject = {
  optional: ['assets'],
}

export function apply(ctx: Context) {
  ctx.command('dialogue').action((_, content) =&gt; {
    // 检查资源存储服务是否存在
    if (ctx.assets) ctx.assets.transform(content)
  })
}</source>
        <target state="needs-translation">export const inject = {
  optional: ['assets'],
}

export function apply(ctx: Context) {
  ctx.command('dialogue').action((_, content) =&gt; {
    // 检查资源存储服务是否存在
    if (ctx.assets) ctx.assets.transform(content)
  })
}</target>
      </trans-unit>
      <trans-unit id="54418">
        <source>最佳实践</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">最佳實作</target>
      </trans-unit>
      <trans-unit id="54420">
        <source>在上面的讨论中，我们已经分别介绍了 dialogue 插件所用到的三个服务的声明方式。</source>
        <target state="needs-translation">在上面的讨论中，我们已经分别介绍了 dialogue 插件所用到的三个服务的声明方式。</target>
      </trans-unit>
      <trans-unit id="54422">
        <source>现在让我们把它们结合起来，看看最佳实践应该是怎样的。</source>
        <target state="needs-translation">现在让我们把它们结合起来，看看最佳实践应该是怎样的。</target>
      </trans-unit>
      <trans-unit id="54424">
        <source>请注意不同服务的处理方式之间的区别。</source>
        <target state="needs-translation">请注意不同服务的处理方式之间的区别。</target>
      </trans-unit>
      <trans-unit id="54426">
        <source>// 正确答案！抄这个！
export const name = 'dialogue'

// 对于整体依赖的服务，使用 inject 属性声明依赖关系
export const inject = {
  required: ['database'],
  optional: ['assets'],
}

export function apply(ctx: Context) {
  ctx.command('dialogue').action((_, content) =&gt; {
    // 对于可选的依赖服务，在运行时检测即可
    if (ctx.assets) ctx.assets.transform(content)
  })

  // 对于部分功能依赖的服务，使用 ctx.inject() 注册为子插件
  ctx.inject(['console'], (ctx) =&gt; {
    ctx.console.addEntry('/path/to/dialogue/extension')
  })
}</source>
        <target state="needs-translation">// 正确答案！抄这个！
export const name = 'dialogue'

// 对于整体依赖的服务，使用 inject 属性声明依赖关系
export const inject = {
  required: ['database'],
  optional: ['assets'],
}

export function apply(ctx: Context) {
  ctx.command('dialogue').action((_, content) =&gt; {
    // 对于可选的依赖服务，在运行时检测即可
    if (ctx.assets) ctx.assets.transform(content)
  })

  // 对于部分功能依赖的服务，使用 ctx.inject() 注册为子插件
  ctx.inject(['console'], (ctx) =&gt; {
    ctx.console.addEntry('/path/to/dialogue/extension')
  })
}</target>
      </trans-unit>
      <trans-unit id="54428">
        <source>自定义服务</source>
        <target state="needs-translation">自定义服务</target>
      </trans-unit>
      <trans-unit id="54430">
        <source>如果你希望自己插件提供一些接口供其他插件使用，那么最好的办法便是提供自定义服务，就像这样：</source>
        <target state="needs-translation">如果你希望自己插件提供一些接口供其他插件使用，那么最好的办法便是提供自定义服务，就像这样：</target>
      </trans-unit>
      <trans-unit id="65174">
        <source>export default class Console extends Service {
  constructor(ctx: Context) {
    super(ctx, 'console')
  }
}</source>
        <target state="needs-translation">export default class Console extends Service {
  constructor(ctx: Context) {
    super(ctx, 'console')
  }
}</target>
      </trans-unit>
      <trans-unit id="65176">
        <source>这样定义的好处在于，`Console` 本身也是一个合法的插件，其他插件可以直接通过 `ctx.plugin(Console)` 来加载它。</source>
        <target state="needs-translation">这样定义的好处在于，`Console` 本身也是一个合法的插件，其他插件可以直接通过 `ctx.plugin(Console)` 来加载它。</target>
      </trans-unit>
      <trans-unit id="65178">
        <source>对于 TypeScript 用户，在定义服务时，你还需要进行声明合并，以便能够在上下文对象中获得类型提示：</source>
        <target state="needs-translation">对于 TypeScript 用户，在定义服务时，你还需要进行声明合并，以便能够在上下文对象中获得类型提示：</target>
      </trans-unit>
      <trans-unit id="63976">
        <source>declare module 'koishi' {
  interface Context {
    console: Console
  }
}</source>
        <target state="needs-translation">declare module 'koishi' {
  interface Context {
    console: Console
  }
}</target>
      </trans-unit>
      <trans-unit id="65180">
        <source>而使用服务的插件则需要声明依赖并导入类型：</source>
        <target state="needs-translation">而使用服务的插件则需要声明依赖并导入类型：</target>
      </trans-unit>
      <trans-unit id="65182">
        <source>import {} from 'koishi-plugin-console'

export const inject = ['console']

export function apply(ctx: Context) {
  ctx.console.addEntry('/path/to/dialogue/extension')
}</source>
        <target state="needs-translation">import {} from 'koishi-plugin-console'

export const inject = ['console']

export function apply(ctx: Context) {
  ctx.console.addEntry('/path/to/dialogue/extension')
}</target>
      </trans-unit>
      <trans-unit id="54440">
        <source>服务的生命周期</source>
        <target state="needs-translation">服务的生命周期</target>
      </trans-unit>
      <trans-unit id="65184">
        <source>`Service` 抽象类的构造函数支持三个参数：</source>
        <target state="needs-translation">`Service` 抽象类的构造函数支持三个参数：</target>
      </trans-unit>
      <trans-unit id="54448">
        <source>`ctx`：服务所在的上下文对象</source>
        <target state="needs-translation">`ctx`：服务所在的上下文对象</target>
      </trans-unit>
      <trans-unit id="54450">
        <source>`name`：服务的名称 (即其在所有上下文中的属性名)</source>
        <target state="needs-translation">`name`：服务的名称 (即其在所有上下文中的属性名)</target>
      </trans-unit>
      <trans-unit id="54452">
        <source>`immediate`：是否立即注册到所有上下文中 (可选，默认为 `false`)</source>
        <target state="needs-translation">`immediate`：是否立即注册到所有上下文中 (可选，默认为 `false`)</target>
      </trans-unit>
      <trans-unit id="54454">
        <source>以及三个可选的抽象方法：</source>
        <target state="needs-translation">以及三个可选的抽象方法：</target>
      </trans-unit>
      <trans-unit id="54456">
        <source>`start()`：在 `ready` 事件触发时调用</source>
        <target state="needs-translation">`start()`：在 `ready` 事件触发时调用</target>
      </trans-unit>
      <trans-unit id="54458">
        <source>`stop()`：在 `dispose` 事件触发时调用</source>
        <target state="needs-translation">`stop()`：在 `dispose` 事件触发时调用</target>
      </trans-unit>
      <trans-unit id="54460">
        <source>`fork()`：在 `fork` 事件触发时调用</source>
        <target state="needs-translation">`fork()`：在 `fork` 事件触发时调用</target>
      </trans-unit>
      <trans-unit id="54462">
        <source>默认情况下，一个自定义服务会先等待 ready 事件触发，然后调用可能存在的 `start()` 方法，最后才会被注册到全体上下文中。</source>
        <target state="needs-translation">默认情况下，一个自定义服务会先等待 ready 事件触发，然后调用可能存在的 `start()` 方法，最后才会被注册到全体上下文中。</target>
      </trans-unit>
      <trans-unit id="54464">
        <source>这种设计确保了服务在能够被访问的时候就已经是可用的。</source>
        <target state="needs-translation">这种设计确保了服务在能够被访问的时候就已经是可用的。</target>
      </trans-unit>
      <trans-unit id="54466">
        <source>但如果你的服务不需要等待 ready 事件，那么只需传入第三个参数 `true` 就可以立即将服务注册到所有上下文中。</source>
        <target state="needs-translation">但如果你的服务不需要等待 ready 事件，那么只需传入第三个参数 `true` 就可以立即将服务注册到所有上下文中。</target>
      </trans-unit>
      <trans-unit id="65186">
        <source>此外，当注册了服务的插件被卸载时，其注册的服务也会被移除，通过 `inject` 声明依赖的插件也会被停止运行，直到服务再次被实现。</source>
        <target state="needs-translation">此外，当注册了服务的插件被卸载时，其注册的服务也会被移除，通过 `inject` 声明依赖的插件也会被停止运行，直到服务再次被实现。</target>
      </trans-unit>
      <trans-unit id="65188">
        <source>这意味着开发者不需要担心服务的生命周期，只需要专注于提供或使用服务的功能即可。</source>
        <target state="needs-translation">这意味着开发者不需要担心服务的生命周期，只需要专注于提供或使用服务的功能即可。</target>
      </trans-unit>
      <trans-unit id="65190">
        <source>支持热重载</source>
        <target state="needs-translation">支持热重载</target>
      </trans-unit>
      <trans-unit id="65192">
        <source>既然服务的作用是提供接口供其他插件调用，就自然会涉及一个热重载的问题。</source>
        <target state="needs-translation">既然服务的作用是提供接口供其他插件调用，就自然会涉及一个热重载的问题。</target>
      </trans-unit>
      <trans-unit id="65194">
        <source>如果某个插件先调用了服务上的方法，然后被卸载，那么我们就需要处理调用所带来的副作用。</source>
        <target state="needs-translation">如果某个插件先调用了服务上的方法，然后被卸载，那么我们就需要处理调用所带来的副作用。</target>
      </trans-unit>
      <trans-unit id="65196">
        <source>让我们来看一段 console 插件的源码：</source>
        <target state="needs-translation">让我们来看一段 console 插件的源码：</target>
      </trans-unit>
      <trans-unit id="65198">
        <source>interface Console {
  entries: Set&lt;string&gt;
  triggerReload(): void
}
// ---cut---
class Console extends Service {
  // 这个方法的作用是添加入口文件
  addEntry(filename: string) {
    this.entries.add(filename)
    this.triggerReload()

    // 注意这个地方，ctx 属性会指向访问此方法的上下文 (而不是构造函数中的上下文)
    // 只需要在这个上下文上监听 dispose 事件，就可以顺利处理副作用了
    this.ctx.on('dispose', () =&gt; {
      this.entries.delete(filename)
      this.triggerReload()
    })
  }
}</source>
        <target state="needs-translation">interface Console {
  entries: Set&lt;string&gt;
  triggerReload(): void
}
// ---cut---
class Console extends Service {
  // 这个方法的作用是添加入口文件
  addEntry(filename: string) {
    this.entries.add(filename)
    this.triggerReload()

    // 注意这个地方，ctx 属性会指向访问此方法的上下文 (而不是构造函数中的上下文)
    // 只需要在这个上下文上监听 dispose 事件，就可以顺利处理副作用了
    this.ctx.on('dispose', () =&gt; {
      this.entries.delete(filename)
      this.triggerReload()
    })
  }
}</target>
      </trans-unit>
      <trans-unit id="65200">
        <source>在 `package.json` 中声明依赖 {#package-json}</source>
        <target state="needs-translation">在 `package.json` 中声明依赖 {#package-json}</target>
      </trans-unit>
      <trans-unit id="65202">
        <source>如果你打算将插件发布到插件市场，我们建议在插件的 `package.json` 中对其所提供和使用的服务进行声明。</source>
        <target state="needs-translation">如果你打算将插件发布到插件市场，我们建议在插件的 `package.json` 中对其所提供和使用的服务进行声明。</target>
      </trans-unit>
      <trans-unit id="65204">
        <source>这些字段将显示在控制台中插件的详情页中，帮助使用者更好地理解插件的功能。</source>
        <target state="needs-translation">这些字段将显示在控制台中插件的详情页中，帮助使用者更好地理解插件的功能。</target>
      </trans-unit>
      <trans-unit id="65206">
        <source>{
  &quot;koishi&quot;: {
    &quot;service&quot;: {
      &quot;required&quot;: [&quot;database&quot;],
      &quot;optional&quot;: [&quot;assets&quot;, &quot;console&quot;],
      &quot;implements&quot;: [&quot;dialogue&quot;]
    }
  }
}</source>
        <target state="needs-translation">{
  &quot;koishi&quot;: {
    &quot;service&quot;: {
      &quot;required&quot;: [&quot;database&quot;],
      &quot;optional&quot;: [&quot;assets&quot;, &quot;console&quot;],
      &quot;implements&quot;: [&quot;dialogue&quot;]
    }
  }
}</target>
      </trans-unit>
      <trans-unit id="65208">
        <source>在这里，`required` 对应于必需依赖，`optional` 对应于可选依赖，`implements` 对应于提供的服务。</source>
        <target state="needs-translation">在这里，`required` 对应于必需依赖，`optional` 对应于可选依赖，`implements` 对应于提供的服务。</target>
      </trans-unit>
      <trans-unit id="65210">
        <source>如果你的插件没有使用或提供服务，那么对应的字段可以省略。</source>
        <target state="needs-translation">如果你的插件没有使用或提供服务，那么对应的字段可以省略。</target>
      </trans-unit>
      <trans-unit id="65212">
        <source>对比 `inject` 声明 {#inject-vs-dep}</source>
        <target state="needs-translation">对比 `inject` 声明 {#inject-vs-dep}</target>
      </trans-unit>
      <trans-unit id="65214">
        <source>对于任何依赖服务的插件，其必须声明 `inject` 才能正常工作，但缺失 `package.json` 中的声明并不会影响插件的运行。</source>
        <target state="needs-translation">对于任何依赖服务的插件，其必须声明 `inject` 才能正常工作，但缺失 `package.json` 中的声明并不会影响插件的运行。</target>
      </trans-unit>
      <trans-unit id="65216">
        <source>尽管如此，我们依然建议你在 `package.json` 中声明依赖，因为这样做能够在安装时提供更多信息，使用者可以一次性地安装插件所需的所有依赖，而不是等到插件运行时才发现缺少了某个服务。</source>
        <target state="needs-translation">尽管如此，我们依然建议你在 `package.json` 中声明依赖，因为这样做能够在安装时提供更多信息，使用者可以一次性地安装插件所需的所有依赖，而不是等到插件运行时才发现缺少了某个服务。</target>
      </trans-unit>
      <trans-unit id="63958">
        <source>关于 `peerDependencies` {#peer-vs-dep}</source>
        <target state="needs-translation">关于 `peerDependencies` {#peer-vs-dep}</target>
      </trans-unit>
      <trans-unit id="54496">
        <source>一个很容易混淆的概念是 `package.json` 自带的 `peerDependencies` 字段。</source>
        <target state="needs-translation">一个很容易混淆的概念是 `package.json` 自带的 `peerDependencies` 字段。</target>
      </trans-unit>
      <trans-unit id="54498">
        <source>这个字段用于声明一个 npm 包的依赖，但声明的依赖需要由用户安装 (或由包管理器自动安装到依赖树顶层)。</source>
        <target state="needs-translation">这个字段用于声明一个 npm 包的依赖，但声明的依赖需要由用户安装 (或由包管理器自动安装到依赖树顶层)。</target>
      </trans-unit>
      <trans-unit id="54500">
        <source>是不是跟服务的概念非常像？</source>
        <target state="needs-translation">是不是跟服务的概念非常像？</target>
      </trans-unit>
      <trans-unit id="54502">
        <source>它们之间的区别如下：</source>
        <target state="needs-translation">它们之间的区别如下：</target>
      </trans-unit>
      <trans-unit id="54504">
        <source>`peerDependencies` 描述的是 npm 包的运行时行为。</source>
        <target state="needs-translation">`peerDependencies` 描述的是 npm 包的运行时行为。</target>
      </trans-unit>
      <trans-unit id="54506">
        <source>如果对应的依赖不存在，那么程序预期无法正常运行 (除非在 `peerDependenciesMeta` 中指明可选性)。</source>
        <target state="needs-translation">如果对应的依赖不存在，那么程序预期无法正常运行 (除非在 `peerDependenciesMeta` 中指明可选性)。</target>
      </trans-unit>
      <trans-unit id="54508">
        <source>而对于 Koishi 插件来说，由于有了 `inject` 机制，即使依赖的服务不存在，程序也不会崩溃。</source>
        <target state="needs-translation">而对于 Koishi 插件来说，由于有了 `inject` 机制，即使依赖的服务不存在，程序也不会崩溃。</target>
      </trans-unit>
      <trans-unit id="54510">
        <source>`peerDependencies` 是一对一的关系，即依赖的只能是另一个确定的包。</source>
        <target state="needs-translation">`peerDependencies` 是一对一的关系，即依赖的只能是另一个确定的包。</target>
      </trans-unit>
      <trans-unit id="54512">
        <source>而 Koishi 中的服务则是一对多的关系，即依赖的服务可以被多个插件所提供。</source>
        <target state="needs-translation">而 Koishi 中的服务则是一对多的关系，即依赖的服务可以被多个插件所提供。</target>
      </trans-unit>
      <trans-unit id="54514">
        <source>基于以上两点，关于是否要在插件的 `package.json` 中为服务声明 `peerDependencies`，我们可以根据插件从依赖中导入的内容来判断：</source>
        <target state="needs-translation">基于以上两点，关于是否要在插件的 `package.json` 中为服务声明 `peerDependencies`，我们可以根据插件从依赖中导入的内容来判断：</target>
      </trans-unit>
      <trans-unit id="54516">
        <source>情况一：插件仅导入了类型声明</source>
        <target state="needs-translation">情况一：插件仅导入了类型声明</target>
      </trans-unit>
      <trans-unit id="54518">
        <source>这是绝大部分的情况。</source>
        <target state="needs-translation">这是绝大部分的情况。</target>
      </trans-unit>
      <trans-unit id="54520">
        <source>在这种情况下，我们无需声明 `peerDependencies`，但建议把依赖加入 `devDependencies` 中。</source>
        <target state="needs-translation">在这种情况下，我们无需声明 `peerDependencies`，但建议把依赖加入 `devDependencies` 中。</target>
      </trans-unit>
      <trans-unit id="54522">
        <source>下面将以 puppeteer 插件提供的服务为例介绍：</source>
        <target state="needs-translation">下面将以 puppeteer 插件提供的服务为例介绍：</target>
      </trans-unit>
      <trans-unit id="54524">
        <source>// import {} 的意思是，我们只需要类型声明，而不需要导入任何内容
// 在编译后，这个语句会被移除，不会引入任何副作用
import {} from 'koishi-plugin-puppeteer'

// 通过 inject 属性声明依赖，并通过 ctx 来访问服务
export const inject = ['puppeteer']
export function apply(ctx: Context) {
  ctx.puppeteer.render()
}</source>
        <target state="needs-translation">// import {} 的意思是，我们只需要类型声明，而不需要导入任何内容
// 在编译后，这个语句会被移除，不会引入任何副作用
import {} from 'koishi-plugin-puppeteer'

// 通过 inject 属性声明依赖，并通过 ctx 来访问服务
export const inject = ['puppeteer']
export function apply(ctx: Context) {
  ctx.puppeteer.render()
}</target>
      </trans-unit>
      <trans-unit id="54526">
        <source>此时插件的 `package.json` 可以这样写：</source>
        <target state="needs-translation">此时插件的 `package.json` 可以这样写：</target>
      </trans-unit>
      <trans-unit id="65218">
        <source>{
  &quot;service&quot;: {
    &quot;required&quot;: [&quot;puppeteer&quot;]
  },
  &quot;devDependencies&quot;: {
    &quot;koishi-plugin-puppeteer&quot;: &quot;^2.0.0&quot;
  }
}</source>
        <target state="needs-translation">{
  &quot;service&quot;: {
    &quot;required&quot;: [&quot;puppeteer&quot;]
  },
  &quot;devDependencies&quot;: {
    &quot;koishi-plugin-puppeteer&quot;: &quot;^2.0.0&quot;
  }
}</target>
      </trans-unit>
      <trans-unit id="54530">
        <source>情况二：插件导入了类型声明以外的内容</source>
        <target state="needs-translation">情况二：插件导入了类型声明以外的内容</target>
      </trans-unit>
      <trans-unit id="54532">
        <source>一个典型的例子是 console 服务。</source>
        <target state="needs-translation">一个典型的例子是 console 服务。</target>
      </trans-unit>
      <trans-unit id="54534">
        <source>一些控制台扩展需要从 `@koishijs/plugin-console` 中导入 `DataService` 基类。</source>
        <target state="needs-translation">一些控制台扩展需要从 `@koishijs/plugin-console` 中导入 `DataService` 基类。</target>
      </trans-unit>
      <trans-unit id="54536">
        <source>此时你的代码应该是这样的：</source>
        <target state="needs-translation">此时你的代码应该是这样的：</target>
      </trans-unit>
      <trans-unit id="54538">
        <source>import { DataService } from '@koishijs/plugin-console'

export class ExamplePlugin extends DataService {
  // ...
}</source>
        <target state="needs-translation">import { DataService } from '@koishijs/plugin-console'

export class ExamplePlugin extends DataService {
  // ...
}</target>
      </trans-unit>
      <trans-unit id="54540">
        <source>此时你需要同时声明 `peerDependencies` 和 `devDependencies`：</source>
        <target state="needs-translation">此时你需要同时声明 `peerDependencies` 和 `devDependencies`：</target>
      </trans-unit>
      <trans-unit id="65220">
        <source>{
  &quot;service&quot;: {
    &quot;required&quot;: [&quot;console&quot;]
  },
  &quot;peerDependencies&quot;: {
    &quot;@koishijs/plugin-console&quot;: &quot;^5.13.0&quot;
  },
  &quot;devDependencies&quot;: {
    &quot;@koishijs/plugin-console&quot;: &quot;^5.13.0&quot;
  }
}</source>
        <target state="needs-translation">{
  &quot;service&quot;: {
    &quot;required&quot;: [&quot;console&quot;]
  },
  &quot;peerDependencies&quot;: {
    &quot;@koishijs/plugin-console&quot;: &quot;^5.13.0&quot;
  },
  &quot;devDependencies&quot;: {
    &quot;@koishijs/plugin-console&quot;: &quot;^5.13.0&quot;
  }
}</target>
      </trans-unit>
    </body>
  </file>
  <file id="1598" original="/[koishijs.docs] main/zh-CN/index.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="54544">
        <source>home</source>
        <target state="needs-translation">home</target>
      </trans-unit>
      <trans-unit id="54546">
        <source>/zh-CN/manual/starter/</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">/zh-TW/manual/starter/</target>
      </trans-unit>
      <trans-unit id="54548">
        <source>创建跨平台、可扩展、高性能的机器人</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">建立跨平臺、可擴充套件、高效能的機器人</target>
      </trans-unit>
      <trans-unit id="54550">
        <source>即刻起步</source>
        <target state="needs-translation">即刻起步</target>
      </trans-unit>
      <trans-unit id="54552">
        <source>了解更多</source>
        <target state="needs-translation">了解更多</target>
      </trans-unit>
      <trans-unit id="54554">
        <source>实时监控</source>
        <target state="needs-translation">实时监控</target>
      </trans-unit>
      <trans-unit id="54556">
        <source>借助 Koishi 的仪表盘功能，实时监控机器人的运行状态。</source>
        <target state="needs-translation">借助 Koishi 的仪表盘功能，实时监控机器人的运行状态。</target>
      </trans-unit>
      <trans-unit id="54558" translate="no">
        <source>/manual/console/home</source>
        <target>/manual/console/home</target>
      </trans-unit>
      <trans-unit id="54560">
        <source>简单配置</source>
        <target state="needs-translation">简单配置</target>
      </trans-unit>
      <trans-unit id="54562">
        <source>Koishi 提供了丰富的插件配置和简单易懂的操作模式，使你能够轻松完成机器人的定制化。</source>
        <target state="needs-translation">Koishi 提供了丰富的插件配置和简单易懂的操作模式，使你能够轻松完成机器人的定制化。</target>
      </trans-unit>
      <trans-unit id="54564" translate="no">
        <source>/manual/console/settings</source>
        <target>/manual/console/settings</target>
      </trans-unit>
      <trans-unit id="54566">
        <source>生态丰富</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">生態豐富</target>
      </trans-unit>
      <trans-unit id="54568">
        <source>Koishi 拥有庞大的插件生态，无论是日常娱乐还是实用功能，你都能在这里找到。</source>
        <target state="needs-translation">Koishi 拥有庞大的插件生态，无论是日常娱乐还是实用功能，你都能在这里找到。</target>
      </trans-unit>
      <trans-unit id="54570" translate="no">
        <source>/manual/console/market</source>
        <target>/manual/console/market</target>
      </trans-unit>
      <trans-unit id="54572">
        <source>数据库</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">資料庫</target>
      </trans-unit>
      <trans-unit id="54574">
        <source>多驱动、高性能的数据库使得 Koishi 可以轻松处理百万量级的数据。</source>
        <target state="needs-translation">多驱动、高性能的数据库使得 Koishi 可以轻松处理百万量级的数据。</target>
      </trans-unit>
      <trans-unit id="54576" translate="no">
        <source>/manual/console/database</source>
        <target>/manual/console/database</target>
      </trans-unit>
      <trans-unit id="54578">
        <source>即刻预览</source>
        <target state="needs-translation">即刻预览</target>
      </trans-unit>
      <trans-unit id="54580">
        <source>安装或配置任何插件后，你可以立即在 Koishi 的沙盒界面中模拟聊天、预览效果。</source>
        <target state="needs-translation">安装或配置任何插件后，你可以立即在 Koishi 的沙盒界面中模拟聊天、预览效果。</target>
      </trans-unit>
      <trans-unit id="54582" translate="no">
        <source>/manual/console/sandbox</source>
        <target>/manual/console/sandbox</target>
      </trans-unit>
      <trans-unit id="54584">
        <source>专为开发者打造</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">專為開發者打造</target>
      </trans-unit>
      <trans-unit id="54586">
        <source>Koishi 更为开发者提供了众多专业功能，使开发者得以在各种复杂需求中构建规模化的解决方案。</source>
        <target state="needs-translation">Koishi 更为开发者提供了众多专业功能，使开发者得以在各种复杂需求中构建规模化的解决方案。</target>
      </trans-unit>
      <trans-unit id="54588">
        <source>类型支持</source>
        <target state="needs-translation">类型支持</target>
      </trans-unit>
      <trans-unit id="54590">
        <source>Koishi 完全基于 TypeScript 开发，拥有顶级的类型支持，丰富的代码提示让你在编写代码的时候甚至无需查看文档。</source>
        <target state="needs-translation">Koishi 完全基于 TypeScript 开发，拥有顶级的类型支持，丰富的代码提示让你在编写代码的时候甚至无需查看文档。</target>
      </trans-unit>
      <trans-unit id="65152">
        <source>/zh-CN/</source>
        <target state="needs-translation">/zh-CN/</target>
      </trans-unit>
      <trans-unit id="54594">
        <source>0 0 1024 1024</source>
        <target state="needs-translation">0 0 1024 1024</target>
      </trans-unit>
      <trans-unit id="54596">
        <source>M0 512v512h1024V0H0z m825.216-40.789333c26.026667 6.485333 45.824 18.048 64.042667 36.906666 9.429333 10.069333 23.424 28.416 24.533333 32.853334 0.341333 1.28-44.202667 31.146667-71.168 47.914666-0.981333 0.64-4.906667-3.584-9.258667-10.069333-13.226667-19.2-27.008-27.477333-48.128-28.928-31.061333-2.133333-51.029333 14.122667-50.858666 41.258667a37.546667 37.546667 0 0 0 4.352 19.2c6.826667 14.122667 19.541333 22.613333 59.306666 39.808 73.344 31.573333 104.704 52.352 124.202667 81.92 21.76 32.981333 26.666667 85.674667 11.861333 124.842666-16.213333 42.581333-56.533333 71.509333-113.28 81.066667-17.536 3.114667-59.136 2.645333-77.994666-0.768-41.130667-7.338667-80.128-27.648-104.192-54.314667-9.429333-10.368-27.818667-37.546667-26.666667-39.466666a67.413333 67.413333 0 0 1 9.386667-6.016c4.608-2.602667 21.802667-12.544 38.058666-21.973334l29.44-17.066666 6.186667 9.130666c8.618667 13.141333 27.434667 31.189333 38.826667 37.205334 32.682667 17.237333 77.525333 14.805333 99.626666-5.034667a37.674667 37.674667 0 0 0 13.354667-30.72c0-11.861333-1.493333-17.066667-7.68-26.026667-7.936-11.349333-24.192-20.906667-70.357333-40.96-52.821333-22.741333-75.562667-36.864-96.384-59.306666a135.04 135.04 0 0 1-28.117334-51.2c-3.882667-14.464-4.864-50.730667-1.792-65.322667 10.88-51.072 49.408-86.613333 105.002667-97.194667 18.048-3.413333 59.989333-2.133333 77.696 2.261334z m-240.384 42.752l0.341333 41.941333H451.84v378.709333H357.546667v-378.709333H224.341333v-41.130667c0-22.784 0.469333-41.813333 1.109334-42.24 0.512-0.682667 81.621333-1.024 179.925333-0.853333l178.986667 0.512z</source>
        <target state="needs-translation">M0 512v512h1024V0H0z m825.216-40.789333c26.026667 6.485333 45.824 18.048 64.042667 36.906666 9.429333 10.069333 23.424 28.416 24.533333 32.853334 0.341333 1.28-44.202667 31.146667-71.168 47.914666-0.981333 0.64-4.906667-3.584-9.258667-10.069333-13.226667-19.2-27.008-27.477333-48.128-28.928-31.061333-2.133333-51.029333 14.122667-50.858666 41.258667a37.546667 37.546667 0 0 0 4.352 19.2c6.826667 14.122667 19.541333 22.613333 59.306666 39.808 73.344 31.573333 104.704 52.352 124.202667 81.92 21.76 32.981333 26.666667 85.674667 11.861333 124.842666-16.213333 42.581333-56.533333 71.509333-113.28 81.066667-17.536 3.114667-59.136 2.645333-77.994666-0.768-41.130667-7.338667-80.128-27.648-104.192-54.314667-9.429333-10.368-27.818667-37.546667-26.666667-39.466666a67.413333 67.413333 0 0 1 9.386667-6.016c4.608-2.602667 21.802667-12.544 38.058666-21.973334l29.44-17.066666 6.186667 9.130666c8.618667 13.141333 27.434667 31.189333 38.826667 37.205334 32.682667 17.237333 77.525333 14.805333 99.626666-5.034667a37.674667 37.674667 0 0 0 13.354667-30.72c0-11.861333-1.493333-17.066667-7.68-26.026667-7.936-11.349333-24.192-20.906667-70.357333-40.96-52.821333-22.741333-75.562667-36.864-96.384-59.306666a135.04 135.04 0 0 1-28.117334-51.2c-3.882667-14.464-4.864-50.730667-1.792-65.322667 10.88-51.072 49.408-86.613333 105.002667-97.194667 18.048-3.413333 59.989333-2.133333 77.696 2.261334z m-240.384 42.752l0.341333 41.941333H451.84v378.709333H357.546667v-378.709333H224.341333v-41.130667c0-22.784 0.469333-41.813333 1.109334-42.24 0.512-0.682667 81.621333-1.024 179.925333-0.853333l178.986667 0.512z</target>
      </trans-unit>
      <trans-unit id="54598">
        <source>文档丰富</source>
        <target state="needs-translation">文档丰富</target>
      </trans-unit>
      <trans-unit id="54600">
        <source>浏览我们精心编写的文档，了解从新人起步到插件开发的所有细节。</source>
        <target state="needs-translation">浏览我们精心编写的文档，了解从新人起步到插件开发的所有细节。</target>
      </trans-unit>
      <trans-unit id="65154">
        <source>/zh-CN/</source>
        <target state="needs-translation">/zh-CN/</target>
      </trans-unit>
      <trans-unit id="54604">
        <source>0 0 448 512</source>
        <target state="needs-translation">0 0 448 512</target>
      </trans-unit>
      <trans-unit id="54606">
        <source>M437.2 403.5L320 215V64h8c13.3 0 24-10.7 24-24V24c0-13.3-10.7-24-24-24H120c-13.3 0-24 10.7-24 24v16c0 13.3 10.7 24 24 24h8v151L10.8 403.5C-18.5 450.6 15.3 512 70.9 512h306.2c55.7 0 89.4-61.5 60.1-108.5zM137.9 320l48.2-77.6c3.7-5.2 5.8-11.6 5.8-18.4V64h64v160c0 6.9 2.2 13.2 5.8 18.4l48.2 77.6h-172z</source>
        <target state="needs-translation">M437.2 403.5L320 215V64h8c13.3 0 24-10.7 24-24V24c0-13.3-10.7-24-24-24H120c-13.3 0-24 10.7-24 24v16c0 13.3 10.7 24 24 24h8v151L10.8 403.5C-18.5 450.6 15.3 512 70.9 512h306.2c55.7 0 89.4-61.5 60.1-108.5zM137.9 320l48.2-77.6c3.7-5.2 5.8-11.6 5.8-18.4V64h64v160c0 6.9 2.2 13.2 5.8 18.4l48.2 77.6h-172z</target>
      </trans-unit>
      <trans-unit id="54608">
        <source>模块热重载</source>
        <target state="needs-translation">模块热重载</target>
      </trans-unit>
      <trans-unit id="54610">
        <source>开发 Koishi 插件时，只需轻点保存即可热重载，无需频繁重启机器人，如同前端开发一样丝滑顺畅。</source>
        <target state="needs-translation">开发 Koishi 插件时，只需轻点保存即可热重载，无需频繁重启机器人，如同前端开发一样丝滑顺畅。</target>
      </trans-unit>
      <trans-unit id="65156">
        <source>/zh-CN/</source>
        <target state="needs-translation">/zh-CN/</target>
      </trans-unit>
      <trans-unit id="54614">
        <source>0 0 576 512</source>
        <target state="needs-translation">0 0 576 512</target>
      </trans-unit>
      <trans-unit id="54616">
        <source>M519.442 288.651c-41.519 0-59.5 31.593-82.058 31.593C377.409 320.244 432 144 432 144s-196.288 80-196.288-3.297c0-35.827 36.288-46.25 36.288-85.985C272 19.216 243.885 0 210.539 0c-34.654 0-66.366 18.891-66.366 56.346 0 41.364 31.711 59.277 31.711 81.75C175.885 207.719 0 166.758 0 166.758v333.237s178.635 41.047 178.635-28.662c0-22.473-40-40.107-40-81.471 0-37.456 29.25-56.346 63.577-56.346 33.673 0 61.788 19.216 61.788 54.717 0 39.735-36.288 50.158-36.288 85.985 0 60.803 129.675 25.73 181.23 25.73 0 0-34.725-120.101 25.827-120.101 35.962 0 46.423 36.152 86.308 36.152C556.712 416 576 387.99 576 354.443c0-34.199-18.962-65.792-56.558-65.792z</source>
        <target state="needs-translation">M519.442 288.651c-41.519 0-59.5 31.593-82.058 31.593C377.409 320.244 432 144 432 144s-196.288 80-196.288-3.297c0-35.827 36.288-46.25 36.288-85.985C272 19.216 243.885 0 210.539 0c-34.654 0-66.366 18.891-66.366 56.346 0 41.364 31.711 59.277 31.711 81.75C175.885 207.719 0 166.758 0 166.758v333.237s178.635 41.047 178.635-28.662c0-22.473-40-40.107-40-81.471 0-37.456 29.25-56.346 63.577-56.346 33.673 0 61.788 19.216 61.788 54.717 0 39.735-36.288 50.158-36.288 85.985 0 60.803 129.675 25.73 181.23 25.73 0 0-34.725-120.101 25.827-120.101 35.962 0 46.423 36.152 86.308 36.152C556.712 416 576 387.99 576 354.443c0-34.199-18.962-65.792-56.558-65.792z</target>
      </trans-unit>
      <trans-unit id="54618">
        <source>起步</source>
        <target state="needs-translation">起步</target>
      </trans-unit>
      <trans-unit id="54620">
        <source>为 Windows 安装</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">為 Windows 安裝</target>
      </trans-unit>
      <trans-unit id="54622">
        <source>/zh-CN/manual/starter/windows.html</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">/zh-TW/manual/starter/windows.html</target>
      </trans-unit>
      <trans-unit id="54624">
        <source>为 macOS 安装</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">為 macOS 安裝</target>
      </trans-unit>
      <trans-unit id="54626">
        <source>/zh-CN/manual/starter/macos.html</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">/zh-TW/manual/starter/macos.html</target>
      </trans-unit>
      <trans-unit id="54628">
        <source>为 Linux 安装</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">為 Linux 安裝</target>
      </trans-unit>
      <trans-unit id="54630">
        <source>/zh-CN/manual/starter/linux.html</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">/zh-TW/manual/starter/linux.html</target>
      </trans-unit>
      <trans-unit id="54632">
        <source>为 Android 安装</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">為 Android 安裝</target>
      </trans-unit>
      <trans-unit id="54634">
        <source>/zh-CN/manual/starter/android.html</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">/zh-TW/manual/starter/android.html</target>
      </trans-unit>
      <trans-unit id="54636">
        <source>在容器中使用</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">在容器中使用</target>
      </trans-unit>
      <trans-unit id="54638">
        <source>/zh-CN/manual/starter/docker.html</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">/zh-TW/manual/starter/docker.html</target>
      </trans-unit>
      <trans-unit id="54640">
        <source>创建模板项目</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">建立模板專案</target>
      </trans-unit>
      <trans-unit id="54642">
        <source>/zh-CN/manual/starter/boilerplate.html</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">/zh-TW/manual/starter/boilerplate.html</target>
      </trans-unit>
      <trans-unit id="54644">
        <source>作为依赖调用</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">作為依賴呼叫</target>
      </trans-unit>
      <trans-unit id="54646">
        <source>/zh-CN/manual/starter/direct.html</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">/zh-TW/manual/starter/direct.html</target>
      </trans-unit>
      <trans-unit id="54648">
        <source>文档</source>
        <target state="needs-translation">文档</target>
      </trans-unit>
      <trans-unit id="54650">
        <source>开发指南</source>
        <target state="needs-translation">开发指南</target>
      </trans-unit>
      <trans-unit id="54652">
        <source>/zh-CN/guide/</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">/zh-TW/guide/</target>
      </trans-unit>
      <trans-unit id="54654">
        <source>API 参考</source>
        <target state="needs-translation">API 参考</target>
      </trans-unit>
      <trans-unit id="54656">
        <source>/zh-CN/api/</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">/zh-TW/api/</target>
      </trans-unit>
      <trans-unit id="54658">
        <source>官方插件</source>
        <target state="needs-translation">官方插件</target>
      </trans-unit>
      <trans-unit id="54660">
        <source>/zh-CN/plugins/</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">/zh-TW/plugins/</target>
      </trans-unit>
      <trans-unit id="54662">
        <source>平台</source>
        <target state="needs-translation">平台</target>
      </trans-unit>
      <trans-unit id="54664">
        <source>钉钉</source>
        <target state="needs-translation">钉钉</target>
      </trans-unit>
      <trans-unit id="54666">
        <source>/zh-CN/plugins/adapter/dingtalk.html</source>
        <target state="needs-translation">/zh-CN/plugins/adapter/dingtalk.html</target>
      </trans-unit>
      <trans-unit id="54668">
        <source>Discord</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">Discord</target>
      </trans-unit>
      <trans-unit id="54670">
        <source>/zh-CN/plugins/adapter/discord.html</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">/zh-TW/plugins/adapter/discord.html</target>
      </trans-unit>
      <trans-unit id="54672">
        <source>KOOK</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">KOOK</target>
      </trans-unit>
      <trans-unit id="54674">
        <source>/zh-CN/plugins/adapter/kook.html</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">/zh-TW/plugins/adapter/kook.html</target>
      </trans-unit>
      <trans-unit id="54676">
        <source>飞书</source>
        <target state="needs-translation">飞书</target>
      </trans-unit>
      <trans-unit id="54678">
        <source>/zh-CN/plugins/adapter/lark.html</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">/zh-TW/plugins/adapter/lark.html</target>
      </trans-unit>
      <trans-unit id="54680">
        <source>LINE</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">LINE</target>
      </trans-unit>
      <trans-unit id="54682">
        <source>/zh-CN/plugins/adapter/line.html</source>
        <target state="needs-translation">/zh-CN/plugins/adapter/line.html</target>
      </trans-unit>
      <trans-unit id="54684">
        <source>邮件</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">郵件</target>
      </trans-unit>
      <trans-unit id="54686">
        <source>/zh-CN/plugins/adapter/mail.html</source>
        <target state="needs-translation">/zh-CN/plugins/adapter/mail.html</target>
      </trans-unit>
      <trans-unit id="54688">
        <source>Matrix</source>
        <target state="needs-translation">Matrix</target>
      </trans-unit>
      <trans-unit id="54690">
        <source>/zh-CN/plugins/adapter/matrix.html</source>
        <target state="needs-translation">/zh-CN/plugins/adapter/matrix.html</target>
      </trans-unit>
      <trans-unit id="54692">
        <source>QQ</source>
        <target state="needs-translation">QQ</target>
      </trans-unit>
      <trans-unit id="54694">
        <source>/zh-CN/plugins/adapter/qq.html</source>
        <target state="needs-translation">/zh-CN/plugins/adapter/qq.html</target>
      </trans-unit>
      <trans-unit id="54696">
        <source>Satori</source>
        <target state="needs-translation">Satori</target>
      </trans-unit>
      <trans-unit id="54698">
        <source>/zh-CN/plugins/adapter/satori.html</source>
        <target state="needs-translation">/zh-CN/plugins/adapter/satori.html</target>
      </trans-unit>
      <trans-unit id="54700">
        <source>Slack</source>
        <target state="needs-translation">Slack</target>
      </trans-unit>
      <trans-unit id="54702">
        <source>/zh-CN/plugins/adapter/Slack.html</source>
        <target state="needs-translation">/zh-CN/plugins/adapter/Slack.html</target>
      </trans-unit>
      <trans-unit id="54704">
        <source>Telegram</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">Telegram</target>
      </trans-unit>
      <trans-unit id="54706">
        <source>/zh-CN/plugins/adapter/telegram.html</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">/zh-TW/plugins/adapter/telegram.html</target>
      </trans-unit>
      <trans-unit id="54708">
        <source>微信公众号</source>
        <target state="needs-translation">微信公众号</target>
      </trans-unit>
      <trans-unit id="54710">
        <source>/zh-CN/plugins/adapter/wechat-official.html</source>
        <target state="needs-translation">/zh-CN/plugins/adapter/wechat-official.html</target>
      </trans-unit>
      <trans-unit id="54712">
        <source>企业微信</source>
        <target state="needs-translation">企业微信</target>
      </trans-unit>
      <trans-unit id="54714">
        <source>/zh-CN/plugins/adapter/wecom.html</source>
        <target state="needs-translation">/zh-CN/plugins/adapter/wecom.html</target>
      </trans-unit>
      <trans-unit id="54716">
        <source>WhatsApp</source>
        <target state="needs-translation">WhatsApp</target>
      </trans-unit>
      <trans-unit id="54718">
        <source>/zh-CN/plugins/adapter/whatsapp.html</source>
        <target state="needs-translation">/zh-CN/plugins/adapter/whatsapp.html</target>
      </trans-unit>
    </body>
  </file>
  <file id="1600" original="/[koishijs.docs] main/zh-CN/manual/faq.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="54720">
        <source>常见问题</source>
        <target state="needs-translation">常见问题</target>
      </trans-unit>
    </body>
  </file>
  <file id="1602" original="/[koishijs.docs] main/zh-CN/manual/introduction.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="54722">
        <source>介绍</source>
        <target state="translated">介紹</target>
      </trans-unit>
      <trans-unit id="54724">
        <source>Koishi 是一个跨平台、可扩展、高性能的聊天机器人框架。</source>
        <target state="translated">Koishi 是一個跨平臺、可擴充套件、高效能的聊天機器人框架。</target>
      </trans-unit>
      <trans-unit id="54726">
        <source>它的名字和图标设计来源于东方 Project 中的角色 [古明地恋 (Komeiji Koishi)](https://zh.touhouwiki.net/wiki/古明地恋)。</source>
        <target state="needs-translation">它的名字和图标设计来源于东方 Project 中的角色 [古明地恋 (Komeiji Koishi)](https://zh.touhouwiki.net/wiki/古明地恋)。</target>
      </trans-unit>
      <trans-unit id="54728">
        <source>古明地恋是一个会做出无意识举动的角色，取这个名字既象征着聊天机器人的主题，也蕴含了开发者为之倾注的热爱。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">古明地戀是一個會做出無意識舉動的角色，取這個名字既象徵著聊天機器人的主題，也蘊含了開發者為之傾注的熱愛。</target>
      </trans-unit>
      <trans-unit id="54730">
        <source>特性</source>
        <target state="needs-translation">特性</target>
      </trans-unit>
      <trans-unit id="54732">
        <source>开箱即用</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">開箱即用</target>
      </trans-unit>
      <trans-unit id="54734">
        <source>Koishi 提供了开箱即用的控制台。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">Koishi 提供了開箱即用的控制檯。</target>
      </trans-unit>
      <trans-unit id="54736">
        <source>即便是零基础的用户也能在几分钟之内搭建自己的聊天机器人。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">即便是零基礎的使用者也能在幾分鐘之內搭建自己的聊天機器人。</target>
      </trans-unit>
      <trans-unit id="54738">
        <source>提供在线插件市场，即使没有任何编程基础，也能轻松在控制台中下载安装插件</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">提供線上外掛市場，即使沒有任何程式設計基礎，也能輕鬆在控制檯中下載安裝外掛</target>
      </trans-unit>
      <trans-unit id="54740">
        <source>支持 QQ，Telegram，Discord 等主流聊天平台，支持多账户和跨平台数据互通</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">支援 QQ，Telegram，Discord 等主流聊天平臺，支援多賬戶和跨平臺資料互通</target>
      </trans-unit>
      <trans-unit id="54742">
        <source>随时随地通过控制面板监控运行状态，控制机器人的行为，甚至上号聊天</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">隨時隨地透過控制面板監控執行狀態，控制機器人的行為，甚至上號聊天</target>
      </trans-unit>
      <trans-unit id="54744">
        <source>生态丰富</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">生態豐富</target>
      </trans-unit>
      <trans-unit id="54746">
        <source>经过了长达四年的迭代，Koishi 已经发展出了丰富的插件生态和与之匹配的健壮系统。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">經過了長達四年的迭代，Koishi 已經發展出了豐富的外掛生態和與之匹配的健壯系統。</target>
      </trans-unit>
      <trans-unit id="54748">
        <source>超过 1000 个官方和社区插件覆盖了机器人开发的方方面面，从平台支持、数据库、资源存储、网页控制台、状态管理到具体的业务功能一应俱全。</source>
        <target state="needs-translation">超过 1000 个官方和社区插件覆盖了机器人开发的方方面面，从平台支持、数据库、资源存储、网页控制台、状态管理到具体的业务功能一应俱全。</target>
      </trans-unit>
      <trans-unit id="54750">
        <source>无论你的目标是构建大型交互应用还是轻量级的辅助机器人，Koishi 都为你提供了最佳实践。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">無論你的目標是構建大型互動應用還是輕量級的輔助機器人，Koishi 都為你提供了最佳實踐。</target>
      </trans-unit>
      <trans-unit id="54752">
        <source>如果担心在复杂的功能中迷失方向，我们也准备了细致的文档来提供帮助。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">如果擔心在複雜的功能中迷失方向，我們也準備了細緻的文件來提供幫助。</target>
      </trans-unit>
      <trans-unit id="54754">
        <source>专为开发者打造</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">專為開發者打造</target>
      </trans-unit>
      <trans-unit id="54756">
        <source>Koishi 更为开发者准备了众多专业功能，使插件开发者得以在各种复杂需求中构建规模化的解决方案。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">Koishi 更為開發者準備了眾多專業功能，使外掛開發者得以在各種複雜需求中構建規模化的解決方案。</target>
      </trans-unit>
      <trans-unit id="54758">
        <source>类型支持：Koishi 完全基于 TypeScript 开发，拥有顶级的类型支持，丰富的代码提示让你在编写代码的时候甚至无需查看文档</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">型別支援：Koishi 完全基於 TypeScript 開發，擁有頂級的型別支援，豐富的程式碼提示讓你在編寫程式碼的時候甚至無需檢視文件</target>
      </trans-unit>
      <trans-unit id="54760">
        <source>单元测试：所有核心功能均已经通过单元测试，既确保了可靠性，也为开发者提供了一套测试插件和定位问题的最佳实践</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">單元測試：所有核心功能均已經透過單元測試，既確保了可靠性，也為開發者提供了一套測試外掛和定位問題的最佳實踐</target>
      </trans-unit>
      <trans-unit id="54762">
        <source>模块热重载：开发 Koishi 插件时，只需轻点保存即可热重载，无需频繁重启机器人，如同前端开发一样丝滑顺畅</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">模組熱過載：開發 Koishi 外掛時，只需輕點儲存即可熱過載，無需頻繁重啟機器人，如同前端開發一樣絲滑順暢</target>
      </trans-unit>
      <trans-unit id="54764">
        <source>马上起步</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">馬上起步</target>
      </trans-unit>
      <trans-unit id="54766">
        <source>点击前往 [起步](./starter/)，开启你的 Koishi 之旅。</source>
        <target state="needs-translation">点击前往 [起步](./starter/)，开启你的 Koishi 之旅。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1604" original="/[koishijs.docs] main/zh-CN/manual/launcher/cli.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="54768">
        <source>命令行工具</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">命令列工具</target>
      </trans-unit>
      <trans-unit id="54770">
        <source>对于不使用图形化界面的用户，Koishi 启动器提供了命令行工具 `koi`，可以用来创建、管理和运行 Koishi。</source>
        <target state="needs-translation">对于不使用图形化界面的用户，Koishi 启动器提供了命令行工具 `koi`，可以用来创建、管理和运行 Koishi。</target>
      </trans-unit>
      <trans-unit id="54772">
        <source>如果你下载得到的文件类似 `koi-xxx.appimage` 的话，直接把下面介绍的 `koi` 替换成这个文件名就可以了。</source>
        <target state="needs-translation">如果你下载得到的文件类似 `koi-xxx.appimage` 的话，直接把下面介绍的 `koi` 替换成这个文件名就可以了。</target>
      </trans-unit>
      <trans-unit id="54774">
        <source>命令</source>
        <target state="needs-translation">命令</target>
      </trans-unit>
      <trans-unit id="54776">
        <source>功能</source>
        <target state="needs-translation">功能</target>
      </trans-unit>
      <trans-unit id="54778">
        <source>`koi run daemon`</source>
        <target state="needs-translation">`koi run daemon`</target>
      </trans-unit>
      <trans-unit id="54780">
        <source>无守护启动，如果你是在面板服里创建自定义脚本的话就用这条命令</source>
        <target state="needs-translation">无守护启动，如果你是在面板服里创建自定义脚本的话就用这条命令</target>
      </trans-unit>
      <trans-unit id="54782">
        <source>`koi daemon start`</source>
        <target state="needs-translation">`koi daemon start`</target>
      </trans-unit>
      <trans-unit id="54784">
        <source>启动守护</source>
        <target state="needs-translation">启动守护</target>
      </trans-unit>
      <trans-unit id="54786">
        <source>`koi daemon stop`</source>
        <target state="needs-translation">`koi daemon stop`</target>
      </trans-unit>
      <trans-unit id="54788">
        <source>停止守护</source>
        <target state="needs-translation">停止守护</target>
      </trans-unit>
      <trans-unit id="54790">
        <source>`koi daemon kill`</source>
        <target state="needs-translation">`koi daemon kill`</target>
      </trans-unit>
      <trans-unit id="54792">
        <source>强制结束守护</source>
        <target state="needs-translation">强制结束守护</target>
      </trans-unit>
      <trans-unit id="54794">
        <source>`koi ps`</source>
        <target state="needs-translation">`koi ps`</target>
      </trans-unit>
      <trans-unit id="54796">
        <source>查看运行状态</source>
        <target state="translated">查看運行狀態</target>
      </trans-unit>
      <trans-unit id="54798">
        <source>`koi start default`</source>
        <target state="needs-translation">`koi start default`</target>
      </trans-unit>
      <trans-unit id="54800">
        <source>启动实例 `default`</source>
        <target state="needs-translation">启动实例 `default`</target>
      </trans-unit>
      <trans-unit id="54802">
        <source>`koi stop default`</source>
        <target state="needs-translation">`koi stop default`</target>
      </trans-unit>
      <trans-unit id="54804">
        <source>停止实例 `default`</source>
        <target state="needs-translation">停止实例 `default`</target>
      </trans-unit>
      <trans-unit id="54806">
        <source>`koi restart default`</source>
        <target state="needs-translation">`koi restart default`</target>
      </trans-unit>
      <trans-unit id="54808">
        <source>重启实例 `default`</source>
        <target state="needs-translation">重启实例 `default`</target>
      </trans-unit>
      <trans-unit id="54810">
        <source>`koi yarn -n default`</source>
        <target state="needs-translation">`koi yarn -n default`</target>
      </trans-unit>
      <trans-unit id="54812">
        <source>修复 `default` 的依赖</source>
        <target state="needs-translation">修复 `default` 的依赖</target>
      </trans-unit>
    </body>
  </file>
  <file id="1606" original="/[koishijs.docs] main/zh-CN/manual/launcher/system.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="54814">
        <source>系统要求</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">系統要求</target>
      </trans-unit>
      <trans-unit id="54816">
        <source>本节列出了 Koishi 启动器所需要的系统版本及该版本所支持的功能。</source>
        <target state="needs-translation">本节列出了 Koishi 启动器所需要的系统版本及该版本所支持的功能。</target>
      </trans-unit>
      <trans-unit id="54818">
        <source>下面的列表仅对 Koishi 启动器有效，Koishi 本体几乎能在任何主流环境运行。</source>
        <target state="needs-translation">下面的列表仅对 Koishi 启动器有效，Koishi 本体几乎能在任何主流环境运行。</target>
      </trans-unit>
      <trans-unit id="54820">
        <source>即便你的操作系统不被 Koishi 官方支持，你也可以 [前往论坛](https://k.ilharp.cc) 选择社区提供的兼容性版本或 [使用模板项目](../starter/boilerplate.md)，只不过 Koishi 官方不对社区启动器的可用性和安全性负责。</source>
        <target state="needs-translation">即便你的操作系统不被 Koishi 官方支持，你也可以 [前往论坛](https://k.ilharp.cc) 选择社区提供的兼容性版本或 [使用模板项目](../starter/boilerplate.md)，只不过 Koishi 官方不对社区启动器的可用性和安全性负责。</target>
      </trans-unit>
      <trans-unit id="54822">
        <source>Windows</source>
        <target state="needs-translation">Windows</target>
      </trans-unit>
      <trans-unit id="54824">
        <source>同一产品只列出了其最高版本。</source>
        <target state="needs-translation">同一产品只列出了其最高版本。</target>
      </trans-unit>
      <trans-unit id="54826">
        <source>未列出的版本一律视为不支持。</source>
        <target state="needs-translation">未列出的版本一律视为不支持。</target>
      </trans-unit>
      <trans-unit id="54828">
        <source>Windows 8.1</source>
        <target state="needs-translation">Windows 8.1</target>
      </trans-unit>
      <trans-unit id="54830">
        <source>产品</source>
        <target state="needs-translation">产品</target>
      </trans-unit>
      <trans-unit id="54832">
        <source>核心</source>
        <target state="needs-translation">核心</target>
      </trans-unit>
      <trans-unit id="54834">
        <source>窗口</source>
        <target state="needs-translation">窗口</target>
      </trans-unit>
      <trans-unit id="54836">
        <source>增强</source>
        <target state="needs-translation">增强</target>
      </trans-unit>
      <trans-unit id="54838">
        <source>Windows 8.1</source>
        <target state="needs-translation">Windows 8.1</target>
      </trans-unit>
      <trans-unit id="54840" translate="no">
        <source>:white_check_mark:</source>
        <target>:white_check_mark:</target>
      </trans-unit>
      <trans-unit id="54842" translate="no">
        <source>:white_check_mark:</source>
        <target>:white_check_mark:</target>
      </trans-unit>
      <trans-unit id="54844" translate="no">
        <source>:x:</source>
        <target>:x:</target>
      </trans-unit>
      <trans-unit id="54846">
        <source>Windows Server 2012 R2</source>
        <target state="needs-translation">Windows Server 2012 R2</target>
      </trans-unit>
      <trans-unit id="54848" translate="no">
        <source>:white_check_mark:</source>
        <target>:white_check_mark:</target>
      </trans-unit>
      <trans-unit id="54850" translate="no">
        <source>:white_check_mark:</source>
        <target>:white_check_mark:</target>
      </trans-unit>
      <trans-unit id="54852" translate="no">
        <source>:x:</source>
        <target>:x:</target>
      </trans-unit>
      <trans-unit id="54854">
        <source>Hyper-V Server 2012 R2</source>
        <target state="needs-translation">Hyper-V Server 2012 R2</target>
      </trans-unit>
      <trans-unit id="54856" translate="no">
        <source>:x:</source>
        <target>:x:</target>
      </trans-unit>
      <trans-unit id="54858" translate="no">
        <source>:x:</source>
        <target>:x:</target>
      </trans-unit>
      <trans-unit id="54860" translate="no">
        <source>:x:</source>
        <target>:x:</target>
      </trans-unit>
      <trans-unit id="54862">
        <source>Windows Storage Server 2012 R2</source>
        <target state="needs-translation">Windows Storage Server 2012 R2</target>
      </trans-unit>
      <trans-unit id="54864" translate="no">
        <source>:x:</source>
        <target>:x:</target>
      </trans-unit>
      <trans-unit id="54866" translate="no">
        <source>:x:</source>
        <target>:x:</target>
      </trans-unit>
      <trans-unit id="54868" translate="no">
        <source>:x:</source>
        <target>:x:</target>
      </trans-unit>
      <trans-unit id="54870">
        <source>Windows Embedded 8.1 Pro</source>
        <target state="needs-translation">Windows Embedded 8.1 Pro</target>
      </trans-unit>
      <trans-unit id="54872" translate="no">
        <source>:x:</source>
        <target>:x:</target>
      </trans-unit>
      <trans-unit id="54874" translate="no">
        <source>:x:</source>
        <target>:x:</target>
      </trans-unit>
      <trans-unit id="54876" translate="no">
        <source>:x:</source>
        <target>:x:</target>
      </trans-unit>
      <trans-unit id="54878">
        <source>Windows Embedded 8.1 Industry</source>
        <target state="needs-translation">Windows Embedded 8.1 Industry</target>
      </trans-unit>
      <trans-unit id="54880" translate="no">
        <source>:x:</source>
        <target>:x:</target>
      </trans-unit>
      <trans-unit id="54882" translate="no">
        <source>:x:</source>
        <target>:x:</target>
      </trans-unit>
      <trans-unit id="54884" translate="no">
        <source>:x:</source>
        <target>:x:</target>
      </trans-unit>
      <trans-unit id="54886">
        <source>Windows 10</source>
        <target state="needs-translation">Windows 10</target>
      </trans-unit>
      <trans-unit id="54888">
        <source>产品</source>
        <target state="needs-translation">产品</target>
      </trans-unit>
      <trans-unit id="54890">
        <source>核心</source>
        <target state="needs-translation">核心</target>
      </trans-unit>
      <trans-unit id="54892">
        <source>窗口</source>
        <target state="needs-translation">窗口</target>
      </trans-unit>
      <trans-unit id="54894">
        <source>增强</source>
        <target state="needs-translation">增强</target>
      </trans-unit>
      <trans-unit id="54896">
        <source>Version 1507</source>
        <target state="needs-translation">Version 1507</target>
      </trans-unit>
      <trans-unit id="54898" translate="no">
        <source>:x:</source>
        <target>:x:</target>
      </trans-unit>
      <trans-unit id="54900" translate="no">
        <source>:x:</source>
        <target>:x:</target>
      </trans-unit>
      <trans-unit id="54902" translate="no">
        <source>:x:</source>
        <target>:x:</target>
      </trans-unit>
      <trans-unit id="54904">
        <source>Version 1511</source>
        <target state="needs-translation">Version 1511</target>
      </trans-unit>
      <trans-unit id="54906" translate="no">
        <source>:x:</source>
        <target>:x:</target>
      </trans-unit>
      <trans-unit id="54908" translate="no">
        <source>:x:</source>
        <target>:x:</target>
      </trans-unit>
      <trans-unit id="54910" translate="no">
        <source>:x:</source>
        <target>:x:</target>
      </trans-unit>
      <trans-unit id="54912">
        <source>Version 1607</source>
        <target state="needs-translation">Version 1607</target>
      </trans-unit>
      <trans-unit id="54914" translate="no">
        <source>:x:</source>
        <target>:x:</target>
      </trans-unit>
      <trans-unit id="54916" translate="no">
        <source>:x:</source>
        <target>:x:</target>
      </trans-unit>
      <trans-unit id="54918" translate="no">
        <source>:x:</source>
        <target>:x:</target>
      </trans-unit>
      <trans-unit id="54920">
        <source>Version 1703</source>
        <target state="needs-translation">Version 1703</target>
      </trans-unit>
      <trans-unit id="54922" translate="no">
        <source>:x:</source>
        <target>:x:</target>
      </trans-unit>
      <trans-unit id="54924" translate="no">
        <source>:x:</source>
        <target>:x:</target>
      </trans-unit>
      <trans-unit id="54926" translate="no">
        <source>:x:</source>
        <target>:x:</target>
      </trans-unit>
      <trans-unit id="54928">
        <source>Version 1709</source>
        <target state="needs-translation">Version 1709</target>
      </trans-unit>
      <trans-unit id="54930" translate="no">
        <source>:x:</source>
        <target>:x:</target>
      </trans-unit>
      <trans-unit id="54932" translate="no">
        <source>:white_check_mark:</source>
        <target>:white_check_mark:</target>
      </trans-unit>
      <trans-unit id="54934" translate="no">
        <source>:x:</source>
        <target>:x:</target>
      </trans-unit>
      <trans-unit id="54936">
        <source>Version 1803</source>
        <target state="needs-translation">Version 1803</target>
      </trans-unit>
      <trans-unit id="54938" translate="no">
        <source>:x:</source>
        <target>:x:</target>
      </trans-unit>
      <trans-unit id="54940" translate="no">
        <source>:white_check_mark:</source>
        <target>:white_check_mark:</target>
      </trans-unit>
      <trans-unit id="54942" translate="no">
        <source>:x:</source>
        <target>:x:</target>
      </trans-unit>
      <trans-unit id="54944">
        <source>Version 1809</source>
        <target state="needs-translation">Version 1809</target>
      </trans-unit>
      <trans-unit id="54946" translate="no">
        <source>:x:</source>
        <target>:x:</target>
      </trans-unit>
      <trans-unit id="54948" translate="no">
        <source>:white_check_mark:</source>
        <target>:white_check_mark:</target>
      </trans-unit>
      <trans-unit id="54950" translate="no">
        <source>:white_check_mark:</source>
        <target>:white_check_mark:</target>
      </trans-unit>
      <trans-unit id="54952">
        <source>Version 1903</source>
        <target state="needs-translation">Version 1903</target>
      </trans-unit>
      <trans-unit id="54954" translate="no">
        <source>:x:</source>
        <target>:x:</target>
      </trans-unit>
      <trans-unit id="54956" translate="no">
        <source>:white_check_mark:</source>
        <target>:white_check_mark:</target>
      </trans-unit>
      <trans-unit id="54958" translate="no">
        <source>:white_check_mark:</source>
        <target>:white_check_mark:</target>
      </trans-unit>
      <trans-unit id="54960">
        <source>Version 1909</source>
        <target state="needs-translation">Version 1909</target>
      </trans-unit>
      <trans-unit id="54962" translate="no">
        <source>:x:</source>
        <target>:x:</target>
      </trans-unit>
      <trans-unit id="54964" translate="no">
        <source>:white_check_mark:</source>
        <target>:white_check_mark:</target>
      </trans-unit>
      <trans-unit id="54966" translate="no">
        <source>:white_check_mark:</source>
        <target>:white_check_mark:</target>
      </trans-unit>
      <trans-unit id="54968">
        <source>Version 2004</source>
        <target state="needs-translation">Version 2004</target>
      </trans-unit>
      <trans-unit id="54970" translate="no">
        <source>:x:</source>
        <target>:x:</target>
      </trans-unit>
      <trans-unit id="54972" translate="no">
        <source>:white_check_mark:</source>
        <target>:white_check_mark:</target>
      </trans-unit>
      <trans-unit id="54974" translate="no">
        <source>:white_check_mark:</source>
        <target>:white_check_mark:</target>
      </trans-unit>
      <trans-unit id="54976">
        <source>Version 20H2</source>
        <target state="needs-translation">Version 20H2</target>
      </trans-unit>
      <trans-unit id="54978" translate="no">
        <source>:x:</source>
        <target>:x:</target>
      </trans-unit>
      <trans-unit id="54980" translate="no">
        <source>:white_check_mark:</source>
        <target>:white_check_mark:</target>
      </trans-unit>
      <trans-unit id="54982" translate="no">
        <source>:white_check_mark:</source>
        <target>:white_check_mark:</target>
      </trans-unit>
      <trans-unit id="54984">
        <source>Version 21H1</source>
        <target state="needs-translation">Version 21H1</target>
      </trans-unit>
      <trans-unit id="54986" translate="no">
        <source>:x:</source>
        <target>:x:</target>
      </trans-unit>
      <trans-unit id="54988" translate="no">
        <source>:white_check_mark:</source>
        <target>:white_check_mark:</target>
      </trans-unit>
      <trans-unit id="54990" translate="no">
        <source>:white_check_mark:</source>
        <target>:white_check_mark:</target>
      </trans-unit>
      <trans-unit id="54992">
        <source>Version 21H2</source>
        <target state="needs-translation">Version 21H2</target>
      </trans-unit>
      <trans-unit id="54994" translate="no">
        <source>:white_check_mark:</source>
        <target>:white_check_mark:</target>
      </trans-unit>
      <trans-unit id="54996" translate="no">
        <source>:white_check_mark:</source>
        <target>:white_check_mark:</target>
      </trans-unit>
      <trans-unit id="54998" translate="no">
        <source>:white_check_mark:</source>
        <target>:white_check_mark:</target>
      </trans-unit>
      <trans-unit id="55000">
        <source>Version 22H2</source>
        <target state="needs-translation">Version 22H2</target>
      </trans-unit>
      <trans-unit id="55002" translate="no">
        <source>:white_check_mark:</source>
        <target>:white_check_mark:</target>
      </trans-unit>
      <trans-unit id="55004" translate="no">
        <source>:white_check_mark:</source>
        <target>:white_check_mark:</target>
      </trans-unit>
      <trans-unit id="55006" translate="no">
        <source>:white_check_mark:</source>
        <target>:white_check_mark:</target>
      </trans-unit>
      <trans-unit id="55008">
        <source>Windows 10 2015 LTSB</source>
        <target state="needs-translation">Windows 10 2015 LTSB</target>
      </trans-unit>
      <trans-unit id="55010" translate="no">
        <source>:white_check_mark:</source>
        <target>:white_check_mark:</target>
      </trans-unit>
      <trans-unit id="55012" translate="no">
        <source>:x:</source>
        <target>:x:</target>
      </trans-unit>
      <trans-unit id="55014" translate="no">
        <source>:x:</source>
        <target>:x:</target>
      </trans-unit>
      <trans-unit id="55016">
        <source>Windows 10 2016 LTSB</source>
        <target state="needs-translation">Windows 10 2016 LTSB</target>
      </trans-unit>
      <trans-unit id="55018" translate="no">
        <source>:white_check_mark:</source>
        <target>:white_check_mark:</target>
      </trans-unit>
      <trans-unit id="55020" translate="no">
        <source>:x:</source>
        <target>:x:</target>
      </trans-unit>
      <trans-unit id="55022" translate="no">
        <source>:x:</source>
        <target>:x:</target>
      </trans-unit>
      <trans-unit id="55024">
        <source>Windows 10 Enterprise 2015 LTSC</source>
        <target state="needs-translation">Windows 10 Enterprise 2015 LTSC</target>
      </trans-unit>
      <trans-unit id="55026" translate="no">
        <source>:white_check_mark:</source>
        <target>:white_check_mark:</target>
      </trans-unit>
      <trans-unit id="55028" translate="no">
        <source>:white_check_mark:</source>
        <target>:white_check_mark:</target>
      </trans-unit>
      <trans-unit id="55030" translate="no">
        <source>:x:</source>
        <target>:x:</target>
      </trans-unit>
      <trans-unit id="55032">
        <source>Windows 10 Enterprise 2016 LTSC</source>
        <target state="needs-translation">Windows 10 Enterprise 2016 LTSC</target>
      </trans-unit>
      <trans-unit id="55034" translate="no">
        <source>:white_check_mark:</source>
        <target>:white_check_mark:</target>
      </trans-unit>
      <trans-unit id="55036" translate="no">
        <source>:white_check_mark:</source>
        <target>:white_check_mark:</target>
      </trans-unit>
      <trans-unit id="55038" translate="no">
        <source>:x:</source>
        <target>:x:</target>
      </trans-unit>
      <trans-unit id="55040">
        <source>Windows 10 Enterprise LTSC 2019</source>
        <target state="needs-translation">Windows 10 Enterprise LTSC 2019</target>
      </trans-unit>
      <trans-unit id="55042" translate="no">
        <source>:white_check_mark:</source>
        <target>:white_check_mark:</target>
      </trans-unit>
      <trans-unit id="55044" translate="no">
        <source>:white_check_mark:</source>
        <target>:white_check_mark:</target>
      </trans-unit>
      <trans-unit id="55046" translate="no">
        <source>:white_check_mark:</source>
        <target>:white_check_mark:</target>
      </trans-unit>
      <trans-unit id="55048">
        <source>Windows 10 Enterprise LTSC 2021</source>
        <target state="needs-translation">Windows 10 Enterprise LTSC 2021</target>
      </trans-unit>
      <trans-unit id="55050" translate="no">
        <source>:white_check_mark:</source>
        <target>:white_check_mark:</target>
      </trans-unit>
      <trans-unit id="55052" translate="no">
        <source>:white_check_mark:</source>
        <target>:white_check_mark:</target>
      </trans-unit>
      <trans-unit id="55054" translate="no">
        <source>:white_check_mark:</source>
        <target>:white_check_mark:</target>
      </trans-unit>
      <trans-unit id="55056">
        <source>Windows 10 Enterprise multi-session</source>
        <target state="needs-translation">Windows 10 Enterprise multi-session</target>
      </trans-unit>
      <trans-unit id="55058" translate="no">
        <source>:white_check_mark:</source>
        <target>:white_check_mark:</target>
      </trans-unit>
      <trans-unit id="55060" translate="no">
        <source>:white_check_mark:</source>
        <target>:white_check_mark:</target>
      </trans-unit>
      <trans-unit id="55062" translate="no">
        <source>:x:</source>
        <target>:x:</target>
      </trans-unit>
      <trans-unit id="55064">
        <source>Windows Server 2016</source>
        <target state="needs-translation">Windows Server 2016</target>
      </trans-unit>
      <trans-unit id="55066" translate="no">
        <source>:white_check_mark:</source>
        <target>:white_check_mark:</target>
      </trans-unit>
      <trans-unit id="55068" translate="no">
        <source>:white_check_mark:</source>
        <target>:white_check_mark:</target>
      </trans-unit>
      <trans-unit id="55070" translate="no">
        <source>:x:</source>
        <target>:x:</target>
      </trans-unit>
      <trans-unit id="55072">
        <source>Hyper-V Server 2016</source>
        <target state="needs-translation">Hyper-V Server 2016</target>
      </trans-unit>
      <trans-unit id="55074" translate="no">
        <source>:x:</source>
        <target>:x:</target>
      </trans-unit>
      <trans-unit id="55076" translate="no">
        <source>:x:</source>
        <target>:x:</target>
      </trans-unit>
      <trans-unit id="55078" translate="no">
        <source>:x:</source>
        <target>:x:</target>
      </trans-unit>
      <trans-unit id="55080">
        <source>Windows Storage Server 2016</source>
        <target state="needs-translation">Windows Storage Server 2016</target>
      </trans-unit>
      <trans-unit id="55082" translate="no">
        <source>:x:</source>
        <target>:x:</target>
      </trans-unit>
      <trans-unit id="55084" translate="no">
        <source>:x:</source>
        <target>:x:</target>
      </trans-unit>
      <trans-unit id="55086" translate="no">
        <source>:x:</source>
        <target>:x:</target>
      </trans-unit>
      <trans-unit id="55088">
        <source>Windows Server 2019</source>
        <target state="needs-translation">Windows Server 2019</target>
      </trans-unit>
      <trans-unit id="55090" translate="no">
        <source>:white_check_mark:</source>
        <target>:white_check_mark:</target>
      </trans-unit>
      <trans-unit id="55092" translate="no">
        <source>:white_check_mark:</source>
        <target>:white_check_mark:</target>
      </trans-unit>
      <trans-unit id="55094" translate="no">
        <source>:x:</source>
        <target>:x:</target>
      </trans-unit>
      <trans-unit id="55096">
        <source>Hyper-V Server 2019</source>
        <target state="needs-translation">Hyper-V Server 2019</target>
      </trans-unit>
      <trans-unit id="55098" translate="no">
        <source>:x:</source>
        <target>:x:</target>
      </trans-unit>
      <trans-unit id="55100" translate="no">
        <source>:x:</source>
        <target>:x:</target>
      </trans-unit>
      <trans-unit id="55102" translate="no">
        <source>:x:</source>
        <target>:x:</target>
      </trans-unit>
      <trans-unit id="55104">
        <source>Windows Server 2022</source>
        <target state="needs-translation">Windows Server 2022</target>
      </trans-unit>
      <trans-unit id="55106" translate="no">
        <source>:white_check_mark:</source>
        <target>:white_check_mark:</target>
      </trans-unit>
      <trans-unit id="55108" translate="no">
        <source>:white_check_mark:</source>
        <target>:white_check_mark:</target>
      </trans-unit>
      <trans-unit id="55110" translate="no">
        <source>:x:</source>
        <target>:x:</target>
      </trans-unit>
      <trans-unit id="55112">
        <source>Windows 10 IoT Core</source>
        <target state="needs-translation">Windows 10 IoT Core</target>
      </trans-unit>
      <trans-unit id="55114" translate="no">
        <source>:x:</source>
        <target>:x:</target>
      </trans-unit>
      <trans-unit id="55116" translate="no">
        <source>:x:</source>
        <target>:x:</target>
      </trans-unit>
      <trans-unit id="55118" translate="no">
        <source>:x:</source>
        <target>:x:</target>
      </trans-unit>
      <trans-unit id="55120">
        <source>Windows 10 IoT Core Services</source>
        <target state="needs-translation">Windows 10 IoT Core Services</target>
      </trans-unit>
      <trans-unit id="55122" translate="no">
        <source>:x:</source>
        <target>:x:</target>
      </trans-unit>
      <trans-unit id="55124" translate="no">
        <source>:x:</source>
        <target>:x:</target>
      </trans-unit>
      <trans-unit id="55126" translate="no">
        <source>:x:</source>
        <target>:x:</target>
      </trans-unit>
      <trans-unit id="55128">
        <source>Windows 10 IoT Core LTSC</source>
        <target state="needs-translation">Windows 10 IoT Core LTSC</target>
      </trans-unit>
      <trans-unit id="55130" translate="no">
        <source>:x:</source>
        <target>:x:</target>
      </trans-unit>
      <trans-unit id="55132" translate="no">
        <source>:x:</source>
        <target>:x:</target>
      </trans-unit>
      <trans-unit id="55134" translate="no">
        <source>:x:</source>
        <target>:x:</target>
      </trans-unit>
      <trans-unit id="55136">
        <source>Windows 10 IoT LTSC 2019 Core</source>
        <target state="needs-translation">Windows 10 IoT LTSC 2019 Core</target>
      </trans-unit>
      <trans-unit id="55138" translate="no">
        <source>:x:</source>
        <target>:x:</target>
      </trans-unit>
      <trans-unit id="55140" translate="no">
        <source>:x:</source>
        <target>:x:</target>
      </trans-unit>
      <trans-unit id="55142" translate="no">
        <source>:x:</source>
        <target>:x:</target>
      </trans-unit>
      <trans-unit id="55144">
        <source>Windows 10 IoT Enterprise</source>
        <target state="needs-translation">Windows 10 IoT Enterprise</target>
      </trans-unit>
      <trans-unit id="55146" translate="no">
        <source>:x:</source>
        <target>:x:</target>
      </trans-unit>
      <trans-unit id="55148" translate="no">
        <source>:x:</source>
        <target>:x:</target>
      </trans-unit>
      <trans-unit id="55150" translate="no">
        <source>:x:</source>
        <target>:x:</target>
      </trans-unit>
      <trans-unit id="55152">
        <source>Windows 10 IoT Enterprise 2019</source>
        <target state="needs-translation">Windows 10 IoT Enterprise 2019</target>
      </trans-unit>
      <trans-unit id="55154" translate="no">
        <source>:x:</source>
        <target>:x:</target>
      </trans-unit>
      <trans-unit id="55156" translate="no">
        <source>:x:</source>
        <target>:x:</target>
      </trans-unit>
      <trans-unit id="55158" translate="no">
        <source>:x:</source>
        <target>:x:</target>
      </trans-unit>
      <trans-unit id="55160">
        <source>Windows 10 IoT Enterprise LTSB 2015</source>
        <target state="needs-translation">Windows 10 IoT Enterprise LTSB 2015</target>
      </trans-unit>
      <trans-unit id="55162" translate="no">
        <source>:x:</source>
        <target>:x:</target>
      </trans-unit>
      <trans-unit id="55164" translate="no">
        <source>:x:</source>
        <target>:x:</target>
      </trans-unit>
      <trans-unit id="55166" translate="no">
        <source>:x:</source>
        <target>:x:</target>
      </trans-unit>
      <trans-unit id="55168">
        <source>Windows 10 IoT Enterprise LTSB 2016</source>
        <target state="needs-translation">Windows 10 IoT Enterprise LTSB 2016</target>
      </trans-unit>
      <trans-unit id="55170" translate="no">
        <source>:x:</source>
        <target>:x:</target>
      </trans-unit>
      <trans-unit id="55172" translate="no">
        <source>:x:</source>
        <target>:x:</target>
      </trans-unit>
      <trans-unit id="55174" translate="no">
        <source>:x:</source>
        <target>:x:</target>
      </trans-unit>
      <trans-unit id="55176">
        <source>Windows 10 IoT Enterprise LTSC 2019</source>
        <target state="needs-translation">Windows 10 IoT Enterprise LTSC 2019</target>
      </trans-unit>
      <trans-unit id="55178" translate="no">
        <source>:x:</source>
        <target>:x:</target>
      </trans-unit>
      <trans-unit id="55180" translate="no">
        <source>:x:</source>
        <target>:x:</target>
      </trans-unit>
      <trans-unit id="55182" translate="no">
        <source>:x:</source>
        <target>:x:</target>
      </trans-unit>
      <trans-unit id="55184">
        <source>Windows 10 IoT Enterprise LTSC 2021</source>
        <target state="needs-translation">Windows 10 IoT Enterprise LTSC 2021</target>
      </trans-unit>
      <trans-unit id="55186" translate="no">
        <source>:x:</source>
        <target>:x:</target>
      </trans-unit>
      <trans-unit id="55188" translate="no">
        <source>:x:</source>
        <target>:x:</target>
      </trans-unit>
      <trans-unit id="55190" translate="no">
        <source>:x:</source>
        <target>:x:</target>
      </trans-unit>
      <trans-unit id="55192">
        <source>Windows Server IoT 2019</source>
        <target state="needs-translation">Windows Server IoT 2019</target>
      </trans-unit>
      <trans-unit id="55194" translate="no">
        <source>:x:</source>
        <target>:x:</target>
      </trans-unit>
      <trans-unit id="55196" translate="no">
        <source>:x:</source>
        <target>:x:</target>
      </trans-unit>
      <trans-unit id="55198" translate="no">
        <source>:x:</source>
        <target>:x:</target>
      </trans-unit>
      <trans-unit id="55200">
        <source>Windows Server IoT 2019 for Storage</source>
        <target state="needs-translation">Windows Server IoT 2019 for Storage</target>
      </trans-unit>
      <trans-unit id="55202" translate="no">
        <source>:x:</source>
        <target>:x:</target>
      </trans-unit>
      <trans-unit id="55204" translate="no">
        <source>:x:</source>
        <target>:x:</target>
      </trans-unit>
      <trans-unit id="55206" translate="no">
        <source>:x:</source>
        <target>:x:</target>
      </trans-unit>
      <trans-unit id="55208">
        <source>Windows Server IoT 2022</source>
        <target state="needs-translation">Windows Server IoT 2022</target>
      </trans-unit>
      <trans-unit id="55210" translate="no">
        <source>:x:</source>
        <target>:x:</target>
      </trans-unit>
      <trans-unit id="55212" translate="no">
        <source>:x:</source>
        <target>:x:</target>
      </trans-unit>
      <trans-unit id="55214" translate="no">
        <source>:x:</source>
        <target>:x:</target>
      </trans-unit>
      <trans-unit id="55216">
        <source>Windows 11</source>
        <target state="needs-translation">Windows 11</target>
      </trans-unit>
      <trans-unit id="55218">
        <source>产品</source>
        <target state="needs-translation">产品</target>
      </trans-unit>
      <trans-unit id="55220">
        <source>核心</source>
        <target state="needs-translation">核心</target>
      </trans-unit>
      <trans-unit id="55222">
        <source>窗口</source>
        <target state="needs-translation">窗口</target>
      </trans-unit>
      <trans-unit id="55224">
        <source>增强</source>
        <target state="needs-translation">增强</target>
      </trans-unit>
      <trans-unit id="55226">
        <source>Version 21H2</source>
        <target state="needs-translation">Version 21H2</target>
      </trans-unit>
      <trans-unit id="55228" translate="no">
        <source>:white_check_mark:</source>
        <target>:white_check_mark:</target>
      </trans-unit>
      <trans-unit id="55230" translate="no">
        <source>:white_check_mark:</source>
        <target>:white_check_mark:</target>
      </trans-unit>
      <trans-unit id="55232" translate="no">
        <source>:white_check_mark:</source>
        <target>:white_check_mark:</target>
      </trans-unit>
      <trans-unit id="55234">
        <source>Version 22H2</source>
        <target state="needs-translation">Version 22H2</target>
      </trans-unit>
      <trans-unit id="55236" translate="no">
        <source>:white_check_mark:</source>
        <target>:white_check_mark:</target>
      </trans-unit>
      <trans-unit id="55238" translate="no">
        <source>:white_check_mark:</source>
        <target>:white_check_mark:</target>
      </trans-unit>
      <trans-unit id="55240" translate="no">
        <source>:white_check_mark:</source>
        <target>:white_check_mark:</target>
      </trans-unit>
      <trans-unit id="55242">
        <source>Windows 365</source>
        <target state="needs-translation">Windows 365</target>
      </trans-unit>
      <trans-unit id="55244" translate="no">
        <source>:white_check_mark:</source>
        <target>:white_check_mark:</target>
      </trans-unit>
      <trans-unit id="55246" translate="no">
        <source>:white_check_mark:</source>
        <target>:white_check_mark:</target>
      </trans-unit>
      <trans-unit id="55248" translate="no">
        <source>:white_check_mark:</source>
        <target>:white_check_mark:</target>
      </trans-unit>
    </body>
  </file>
  <file id="1608" original="/[koishijs.docs] main/zh-CN/manual/recipe/execution.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="55250">
        <source>指令进阶技巧</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">指令進階技巧</target>
      </trans-unit>
      <trans-unit id="55252">
        <source>使用引号</source>
        <target state="needs-translation">使用引号</target>
      </trans-unit>
      <trans-unit id="67024">
        <source>与大多数命令行工具一样，你可以使用单引号或双引号将参数包裹，引号中的内容将被视为一个独立的参数。</source>
        <target state="needs-translation">与大多数命令行工具一样，你可以使用单引号或双引号将参数包裹，引号中的内容将被视为一个独立的参数。</target>
      </trans-unit>
      <trans-unit id="67026">
        <source>这在许多场景下都非常有用：</source>
        <target state="needs-translation">这在许多场景下都非常有用：</target>
      </trans-unit>
      <trans-unit id="55258">
        <source>当希望传入带空格的参数时 (默认行为是只解析空格前面的部分)</source>
        <target state="needs-translation">当希望传入带空格的参数时 (默认行为是只解析空格前面的部分)</target>
      </trans-unit>
      <trans-unit id="55260">
        <source>当希望传入以 `-` 开头的参数时 (默认的行为是解析成下一个选项)</source>
        <target state="needs-translation">当希望传入以 `-` 开头的参数时 (默认的行为是解析成下一个选项)</target>
      </trans-unit>
      <trans-unit id="55262">
        <source>当希望传入一个空字符串时作为参数时 (默认的行为是解析为 `true`)</source>
        <target state="needs-translation">当希望传入一个空字符串时作为参数时 (默认的行为是解析为 `true`)</target>
      </trans-unit>
      <trans-unit id="55266">
        <source>指令插值</source>
        <target state="needs-translation">指令插值</target>
      </trans-unit>
      <trans-unit id="55268">
        <source>如果你希望在指令中使用其他指令的内容，可以使用 `$()` 进行指令插值：</source>
        <target state="needs-translation">如果你希望在指令中使用其他指令的内容，可以使用 `$()` 进行指令插值：</target>
      </trans-unit>
      <trans-unit id="55270">
        <source>echo foo$(echo bar)</source>
        <target state="needs-translation">echo foo$(echo bar)</target>
      </trans-unit>
      <trans-unit id="55272">
        <source>foobar</source>
        <target state="needs-translation">foobar</target>
      </trans-unit>
      <trans-unit id="55274">
        <source>Koishi 默认不转义单引号内的文本。</source>
        <target state="needs-translation">Koishi 默认不转义单引号内的文本。</target>
      </trans-unit>
      <trans-unit id="55276">
        <source>如果你不希望某个参数被插值语法所转义，可以使用单引号：</source>
        <target state="needs-translation">如果你不希望某个参数被插值语法所转义，可以使用单引号：</target>
      </trans-unit>
      <trans-unit id="55278">
        <source>echo 'foo$(echo bar)'</source>
        <target state="needs-translation">echo 'foo$(echo bar)'</target>
      </trans-unit>
      <trans-unit id="55280">
        <source>foo$(echo bar)</source>
        <target state="needs-translation">foo$(echo bar)</target>
      </trans-unit>
      <trans-unit id="55282">
        <source>最后，你还可以在 [koishi-plugin-eval](https://eval.koishi.chat) 中了解到另一种插值方法。</source>
        <target state="needs-translation">最后，你还可以在 [koishi-plugin-eval](https://eval.koishi.chat) 中了解到另一种插值方法。</target>
      </trans-unit>
      <trans-unit id="55284">
        <source>模糊匹配</source>
        <target state="needs-translation">模糊匹配</target>
      </trans-unit>
      <trans-unit id="55286">
        <source>在日常的使用中，我们也难免会遇到打错的情况，这时 Koishi 还会自动根据相近的指令名进行纠错提醒：</source>
        <target state="needs-translation">在日常的使用中，我们也难免会遇到打错的情况，这时 Koishi 还会自动根据相近的指令名进行纠错提醒：</target>
      </trans-unit>
      <trans-unit id="55288">
        <source>ecko hello</source>
        <target state="needs-translation">ecko hello</target>
      </trans-unit>
      <trans-unit id="55290">
        <source>您要找的是不是“echo”？</source>
        <target state="needs-translation">您要找的是不是“echo”？</target>
      </trans-unit>
      <trans-unit id="63528">
        <source>回复句号以使用推测的指令。</source>
        <target state="needs-translation">回复句号以使用推测的指令。</target>
      </trans-unit>
      <trans-unit id="55294">
        <source>.</source>
        <target state="needs-translation">.</target>
      </trans-unit>
      <trans-unit id="55296">
        <source>hello</source>
        <target state="needs-translation">hello</target>
      </trans-unit>
      <trans-unit id="55298">
        <source>如果想调整模糊匹配的程度，你还可以修改配置项 [minSimilarity](../../api/core/app.md#options-minsimilarity)。</source>
        <target state="needs-translation">如果想调整模糊匹配的程度，你还可以修改配置项 [minSimilarity](../../api/core/app.md#options-minsimilarity)。</target>
      </trans-unit>
      <trans-unit id="55300">
        <source>是不是很方便呢？</source>
        <target state="needs-translation">是不是很方便呢？</target>
      </trans-unit>
    </body>
  </file>
  <file id="1610" original="/[koishijs.docs] main/zh-CN/manual/recipe/multiple.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="55302">
        <source>维护多份配置</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">維護多份配置</target>
      </trans-unit>
      <trans-unit id="55304">
        <source>有很多情况下你会想要维护同一个插件的多份配置：</source>
        <target state="needs-translation">有很多情况下你会想要维护同一个插件的多份配置：</target>
      </trans-unit>
      <trans-unit id="55306">
        <source>你希望同时运行多个插件实例</source>
        <target state="needs-translation">你希望同时运行多个插件实例</target>
      </trans-unit>
      <trans-unit id="55308">
        <source>你希望在合适的时机切换另一份插件配置</source>
        <target state="needs-translation">你希望在合适的时机切换另一份插件配置</target>
      </trans-unit>
      <trans-unit id="55310">
        <source>你希望在不同的群中使用不同的插件配置</source>
        <target state="needs-translation">你希望在不同的群中使用不同的插件配置</target>
      </trans-unit>
      <trans-unit id="55312">
        <source>不同的需求往往有不同的解决方案，因此我无法给你统一的答案。</source>
        <target state="needs-translation">不同的需求往往有不同的解决方案，因此我无法给你统一的答案。</target>
      </trans-unit>
      <trans-unit id="55314">
        <source>但好在对于上面的三种情况 Koishi 都已经提供了支持，你只需要根据自己的需求选择合适的方案即可。</source>
        <target state="needs-translation">但好在对于上面的三种情况 Koishi 都已经提供了支持，你只需要根据自己的需求选择合适的方案即可。</target>
      </trans-unit>
      <trans-unit id="55316">
        <source>单实例</source>
        <target state="needs-translation">单实例</target>
      </trans-unit>
      <trans-unit id="55318">
        <source>在同一个 Koishi 应用中，有些插件可以同时启用多份，有些则不能——这并非插件的实现缺陷，而是预期的行为。</source>
        <target state="needs-translation">在同一个 Koishi 应用中，有些插件可以同时启用多份，有些则不能——这并非插件的实现缺陷，而是预期的行为。</target>
      </trans-unit>
      <trans-unit id="55320">
        <source>事实上，插件的作者可以指定具体哪些功能可以被独立地启用。</source>
        <target state="needs-translation">事实上，插件的作者可以指定具体哪些功能可以被独立地启用。</target>
      </trans-unit>
      <trans-unit id="55322">
        <source>这表现在插件上就是两种不同的类型：那些可以同时启用多份的插件被称为可重用插件，反之则称为不可重用插件。</source>
        <target state="needs-translation">这表现在插件上就是两种不同的类型：那些可以同时启用多份的插件被称为可重用插件，反之则称为不可重用插件。</target>
      </trans-unit>
      <trans-unit id="55324">
        <source>典型的可重用插件是 [适配器插件](../usage/adapter.md)。</source>
        <target state="needs-translation">典型的可重用插件是 [适配器插件](../usage/adapter.md)。</target>
      </trans-unit>
      <trans-unit id="55326">
        <source>每个适配器对应着一个正在运行的机器人，不同平台的机器人由不同的适配器进行配置。</source>
        <target state="needs-translation">每个适配器对应着一个正在运行的机器人，不同平台的机器人由不同的适配器进行配置。</target>
      </trans-unit>
      <trans-unit id="55328">
        <source>因此，如果你想在同一个平台中配置多个机器人，直接按照上一节中的方法添加多个适配器插件即可。</source>
        <target state="needs-translation">因此，如果你想在同一个平台中配置多个机器人，直接按照上一节中的方法添加多个适配器插件即可。</target>
      </trans-unit>
      <trans-unit id="55330">
        <source>与此同时，绝大多数插件都是不可重用的。</source>
        <target state="needs-translation">与此同时，绝大多数插件都是不可重用的。</target>
      </trans-unit>
      <trans-unit id="55332">
        <source>对于这类插件，你只能同时拥有一份运行中的配置。</source>
        <target state="needs-translation">对于这类插件，你只能同时拥有一份运行中的配置。</target>
      </trans-unit>
      <trans-unit id="55334">
        <source>如果已经有一份正在运行的配置，那么你会在其他配置处看到一行提示「此插件正在运行且不可重用」。</source>
        <target state="needs-translation">如果已经有一份正在运行的配置，那么你会在其他配置处看到一行提示「此插件正在运行且不可重用」。</target>
      </trans-unit>
      <trans-unit id="55336">
        <source>当然，你仍然可以准备多份配置，并在合适的时机将一份配置停用，并启用另一份。</source>
        <target state="needs-translation">当然，你仍然可以准备多份配置，并在合适的时机将一份配置停用，并启用另一份。</target>
      </trans-unit>
      <trans-unit id="66988">
        <source>对于那些不可重用的插件，如果希望在不同的场景下切换到不同的配置，就需要插件作者提供带有 [过滤器](../usage/customize.md#filters) 的配置项。</source>
        <target state="needs-translation">对于那些不可重用的插件，如果希望在不同的场景下切换到不同的配置，就需要插件作者提供带有 [过滤器](../usage/customize.md#filters) 的配置项。</target>
      </trans-unit>
      <trans-unit id="66990">
        <source>如果你想要修改的配置不支持过滤器，那么你可以考虑向插件作者提出建议，或采用下面介绍的 [多实例](#multiple-instances) 方案。</source>
        <target state="needs-translation">如果你想要修改的配置不支持过滤器，那么你可以考虑向插件作者提出建议，或采用下面介绍的 [多实例](#multiple-instances) 方案。</target>
      </trans-unit>
      <trans-unit id="66992">
        <source>多实例 {#multiple-instances}</source>
        <target state="needs-translation">多实例 {#multiple-instances}</target>
      </trans-unit>
      <trans-unit id="55344">
        <source>另一种方案是同时运行多个 Koishi 应用。</source>
        <target state="needs-translation">另一种方案是同时运行多个 Koishi 应用。</target>
      </trans-unit>
      <trans-unit id="55346">
        <source>这样做的好处是，你可以在不同的应用中使用完全不同的插件配置，甚至启用完全不同的插件组合。</source>
        <target state="needs-translation">这样做的好处是，你可以在不同的应用中使用完全不同的插件配置，甚至启用完全不同的插件组合。</target>
      </trans-unit>
      <trans-unit id="55348">
        <source>但与之相对的，你需要额外维护多个应用，而且每个应用都需要一个独立的端口。</source>
        <target state="needs-translation">但与之相对的，你需要额外维护多个应用，而且每个应用都需要一个独立的端口。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1612" original="/[koishijs.docs] main/zh-CN/manual/recipe/search.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="55350">
        <source>搜索插件市场</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">搜尋外掛市場</target>
      </trans-unit>
      <trans-unit id="55352">
        <source>Koishi 有着丰富的插件生态。</source>
        <target state="needs-translation">Koishi 有着丰富的插件生态。</target>
      </trans-unit>
      <trans-unit id="55354">
        <source>为了让用户更方便地搜索插件，我们提供了一套搜索语法。</source>
        <target state="needs-translation">为了让用户更方便地搜索插件，我们提供了一套搜索语法。</target>
      </trans-unit>
      <trans-unit id="55356">
        <source>你可以在搜索框中输入形如 `is:preview` 的语法来快速过滤某个类别的插件。</source>
        <target state="needs-translation">你可以在搜索框中输入形如 `is:preview` 的语法来快速过滤某个类别的插件。</target>
      </trans-unit>
      <trans-unit id="55358">
        <source>搜索词</source>
        <target state="needs-translation">搜索词</target>
      </trans-unit>
      <trans-unit id="55360">
        <source>除去含有冒号的特殊语法外，你输入的搜索词会被用于查询：</source>
        <target state="needs-translation">除去含有冒号的特殊语法外，你输入的搜索词会被用于查询：</target>
      </trans-unit>
      <trans-unit id="55362">
        <source>插件名称</source>
        <target state="needs-translation">插件名称</target>
      </trans-unit>
      <trans-unit id="55364">
        <source>插件描述</source>
        <target state="needs-translation">插件描述</target>
      </trans-unit>
      <trans-unit id="55366">
        <source>插件的关键词</source>
        <target state="needs-translation">插件的关键词</target>
      </trans-unit>
      <trans-unit id="55368">
        <source>插件标识</source>
        <target state="needs-translation">插件标识</target>
      </trans-unit>
      <trans-unit id="55370">
        <source>我们提供了四种插件标识，它们本身也是过滤条件。</source>
        <target state="needs-translation">我们提供了四种插件标识，它们本身也是过滤条件。</target>
      </trans-unit>
      <trans-unit id="55372">
        <source>包括：</source>
        <target state="needs-translation">包括：</target>
      </trans-unit>
      <trans-unit id="55374">
        <source>&lt;market-icon name=&quot;verified&quot; style=&quot;color: var(--k-color-success)&quot; /&gt;`is:verified`：官方认证</source>
        <target state="needs-translation">&lt;market-icon name=&quot;verified&quot; style=&quot;color: var(--k-color-success)&quot; /&gt;`is:verified`：官方认证</target>
      </trans-unit>
      <trans-unit id="55376">
        <source>&lt;market-icon name=&quot;insecure&quot; style=&quot;color: var(--k-color-danger)&quot; /&gt;`is:insecure`：不安全</source>
        <target state="needs-translation">&lt;market-icon name=&quot;insecure&quot; style=&quot;color: var(--k-color-danger)&quot; /&gt;`is:insecure`：不安全</target>
      </trans-unit>
      <trans-unit id="55378">
        <source>&lt;market-icon name=&quot;preview&quot; style=&quot;color: var(--k-color-warning)&quot; /&gt;`is:preview`：开发中</source>
        <target state="needs-translation">&lt;market-icon name=&quot;preview&quot; style=&quot;color: var(--k-color-warning)&quot; /&gt;`is:preview`：开发中</target>
      </trans-unit>
      <trans-unit id="55380">
        <source>&lt;market-icon name=&quot;newborn&quot; style=&quot;color: var(--k-color-success)&quot; /&gt;`created:&gt;date`：近期新增</source>
        <target state="needs-translation">&lt;market-icon name=&quot;newborn&quot; style=&quot;color: var(--k-color-success)&quot; /&gt;`created:&gt;date`：近期新增</target>
      </trans-unit>
      <trans-unit id="55382">
        <source>此外，还有一些不带标识的过滤条件：</source>
        <target state="needs-translation">此外，还有一些不带标识的过滤条件：</target>
      </trans-unit>
      <trans-unit id="55384">
        <source>&lt;market-icon name=&quot;download&quot; /&gt;`is:installed`：已安装</source>
        <target state="needs-translation">&lt;market-icon name=&quot;download&quot; /&gt;`is:installed`：已安装</target>
      </trans-unit>
      <trans-unit id="55386">
        <source>&lt;market-icon name=&quot;portable&quot; /&gt;`is:portable`：快速体验</source>
        <target state="needs-translation">&lt;market-icon name=&quot;portable&quot; /&gt;`is:portable`：快速体验</target>
      </trans-unit>
      <trans-unit id="55388">
        <source>&lt;market-icon name=&quot;tag&quot; /&gt;`updated:&gt;date`：近期更新</source>
        <target state="needs-translation">&lt;market-icon name=&quot;tag&quot; /&gt;`updated:&gt;date`：近期更新</target>
      </trans-unit>
      <trans-unit id="55390">
        <source>上述的过滤条件也可以反向选择，例如 `not:insecure` 或 `created:&lt;date`。</source>
        <target state="needs-translation">上述的过滤条件也可以反向选择，例如 `not:insecure` 或 `created:&lt;date`。</target>
      </trans-unit>
      <trans-unit id="55392">
        <source>在侧边栏中，你可以点击标识名称进行选择，点击第二次反向选择，点击第三次则会取消选择。</source>
        <target state="needs-translation">在侧边栏中，你可以点击标识名称进行选择，点击第二次反向选择，点击第三次则会取消选择。</target>
      </trans-unit>
      <trans-unit id="55394">
        <source>插件分类</source>
        <target state="needs-translation">插件分类</target>
      </trans-unit>
      <trans-unit id="55396">
        <source>我们目前提供了 14 个基础分类。</source>
        <target state="needs-translation">我们目前提供了 14 个基础分类。</target>
      </trans-unit>
      <trans-unit id="55398">
        <source>它们分别是：</source>
        <target state="needs-translation">它们分别是：</target>
      </trans-unit>
      <trans-unit id="55400">
        <source>&lt;market-icon name=&quot;solid:core&quot; /&gt;`category:core`：核心功能</source>
        <target state="needs-translation">&lt;market-icon name=&quot;solid:core&quot; /&gt;`category:core`：核心功能</target>
      </trans-unit>
      <trans-unit id="55402">
        <source>&lt;market-icon name=&quot;solid:adapter&quot; /&gt;`category:adapter`：适配器</source>
        <target state="needs-translation">&lt;market-icon name=&quot;solid:adapter&quot; /&gt;`category:adapter`：适配器</target>
      </trans-unit>
      <trans-unit id="64452">
        <source>&lt;market-icon name=&quot;solid:general&quot; /&gt;`category:general`：存储服务</source>
        <target state="needs-translation">&lt;market-icon name=&quot;solid:general&quot; /&gt;`category:general`：存储服务</target>
      </trans-unit>
      <trans-unit id="55406">
        <source>&lt;market-icon name=&quot;solid:extension&quot; /&gt;`category:extension`：扩展功能</source>
        <target state="needs-translation">&lt;market-icon name=&quot;solid:extension&quot; /&gt;`category:extension`：扩展功能</target>
      </trans-unit>
      <trans-unit id="64454">
        <source>&lt;market-icon name=&quot;solid:webui&quot; /&gt;`category:webui`：控制台</source>
        <target state="needs-translation">&lt;market-icon name=&quot;solid:webui&quot; /&gt;`category:webui`：控制台</target>
      </trans-unit>
      <trans-unit id="55410">
        <source>&lt;market-icon name=&quot;solid:manage&quot; /&gt;`category:manage`：管理工具</source>
        <target state="needs-translation">&lt;market-icon name=&quot;solid:manage&quot; /&gt;`category:manage`：管理工具</target>
      </trans-unit>
      <trans-unit id="55412">
        <source>&lt;market-icon name=&quot;solid:preset&quot; /&gt;`category:preset`：行为预设</source>
        <target state="needs-translation">&lt;market-icon name=&quot;solid:preset&quot; /&gt;`category:preset`：行为预设</target>
      </trans-unit>
      <trans-unit id="55414">
        <source>&lt;market-icon name=&quot;solid:image&quot; /&gt;`category:image`：图片服务</source>
        <target state="needs-translation">&lt;market-icon name=&quot;solid:image&quot; /&gt;`category:image`：图片服务</target>
      </trans-unit>
      <trans-unit id="55416">
        <source>&lt;market-icon name=&quot;solid:media&quot; /&gt;`category:media`：资讯服务</source>
        <target state="needs-translation">&lt;market-icon name=&quot;solid:media&quot; /&gt;`category:media`：资讯服务</target>
      </trans-unit>
      <trans-unit id="55418">
        <source>&lt;market-icon name=&quot;solid:tool&quot; /&gt;`category:tool`：实用工具</source>
        <target state="needs-translation">&lt;market-icon name=&quot;solid:tool&quot; /&gt;`category:tool`：实用工具</target>
      </trans-unit>
      <trans-unit id="64456">
        <source>&lt;market-icon name=&quot;solid:life&quot; /&gt;`category:life`：生活指南</source>
        <target state="needs-translation">&lt;market-icon name=&quot;solid:life&quot; /&gt;`category:life`：生活指南</target>
      </trans-unit>
      <trans-unit id="55420">
        <source>&lt;market-icon name=&quot;solid:ai&quot; /&gt;`category:ai`：人工智能</source>
        <target state="needs-translation">&lt;market-icon name=&quot;solid:ai&quot; /&gt;`category:ai`：人工智能</target>
      </trans-unit>
      <trans-unit id="55422">
        <source>&lt;market-icon name=&quot;solid:meme&quot; /&gt;`category:meme`：趣味交互</source>
        <target state="needs-translation">&lt;market-icon name=&quot;solid:meme&quot; /&gt;`category:meme`：趣味交互</target>
      </trans-unit>
      <trans-unit id="55424">
        <source>&lt;market-icon name=&quot;solid:game&quot; /&gt;`category:game`：娱乐玩法</source>
        <target state="needs-translation">&lt;market-icon name=&quot;solid:game&quot; /&gt;`category:game`：娱乐玩法</target>
      </trans-unit>
      <trans-unit id="55426">
        <source>&lt;market-icon name=&quot;solid:gametool&quot; /&gt;`category:gametool`：游戏辅助</source>
        <target state="needs-translation">&lt;market-icon name=&quot;solid:gametool&quot; /&gt;`category:gametool`：游戏辅助</target>
      </trans-unit>
      <trans-unit id="55428">
        <source>插件的分类由 Koishi 团队成员负责维护，通常在插件发布后的一周内完成。</source>
        <target state="needs-translation">插件的分类由 Koishi 团队成员负责维护，通常在插件发布后的一周内完成。</target>
      </trans-unit>
      <trans-unit id="55430">
        <source>极少数插件不会属于任何类别。</source>
        <target state="needs-translation">极少数插件不会属于任何类别。</target>
      </trans-unit>
      <trans-unit id="55432">
        <source>如果你认为你的插件没有被正确分类，可以提交议题进行反馈。</source>
        <target state="needs-translation">如果你认为你的插件没有被正确分类，可以提交议题进行反馈。</target>
      </trans-unit>
      <trans-unit id="55434">
        <source>插件排序</source>
        <target state="needs-translation">插件排序</target>
      </trans-unit>
      <trans-unit id="55436">
        <source>插件市场中的插件会默认根据其评分进行排序。</source>
        <target state="needs-translation">插件市场中的插件会默认根据其评分进行排序。</target>
      </trans-unit>
      <trans-unit id="55438">
        <source>评分是一个 0~5 之间的数值，并在四舍五入后会显示为星星的个数。</source>
        <target state="needs-translation">评分是一个 0~5 之间的数值，并在四舍五入后会显示为星星的个数。</target>
      </trans-unit>
      <trans-unit id="55440">
        <source>评分由多个指标加权计算得到，下面列举出了一些常见的指标：</source>
        <target state="needs-translation">评分由多个指标加权计算得到，下面列举出了一些常见的指标：</target>
      </trans-unit>
      <trans-unit id="55442">
        <source>插件是否开源</source>
        <target state="needs-translation">插件是否开源</target>
      </trans-unit>
      <trans-unit id="55444">
        <source>插件是否被标记为不安全 / 开发中</source>
        <target state="needs-translation">插件是否被标记为不安全 / 开发中</target>
      </trans-unit>
      <trans-unit id="55446">
        <source>插件的下载量</source>
        <target state="needs-translation">插件的下载量</target>
      </trans-unit>
      <trans-unit id="55448">
        <source>插件的安装体积</source>
        <target state="needs-translation">插件的安装体积</target>
      </trans-unit>
      <trans-unit id="55450">
        <source>除了按照评分排序，你还可以选择其他的排序方式：</source>
        <target state="needs-translation">除了按照评分排序，你还可以选择其他的排序方式：</target>
      </trans-unit>
      <trans-unit id="55452">
        <source>&lt;market-icon name=&quot;download&quot; /&gt;`sort:download`：按下载量排序</source>
        <target state="needs-translation">&lt;market-icon name=&quot;download&quot; /&gt;`sort:download`：按下载量排序</target>
      </trans-unit>
      <trans-unit id="55454">
        <source>&lt;market-icon name=&quot;heart-pulse&quot; /&gt;`sort:created`：按创建时间排序</source>
        <target state="needs-translation">&lt;market-icon name=&quot;heart-pulse&quot; /&gt;`sort:created`：按创建时间排序</target>
      </trans-unit>
      <trans-unit id="55456">
        <source>&lt;market-icon name=&quot;tag&quot; /&gt;`sort:updated`：按更新时间排序</source>
        <target state="needs-translation">&lt;market-icon name=&quot;tag&quot; /&gt;`sort:updated`：按更新时间排序</target>
      </trans-unit>
      <trans-unit id="55458">
        <source>如果要反向排序，可以在后面加上 `-asc`，例如 `sort:created-asc`。</source>
        <target state="needs-translation">如果要反向排序，可以在后面加上 `-asc`，例如 `sort:created-asc`。</target>
      </trans-unit>
      <trans-unit id="55460">
        <source>在侧边栏中，你可以点击排序方式进行排序，点击第二次反向排序，点击第三次则会取消排序。</source>
        <target state="needs-translation">在侧边栏中，你可以点击排序方式进行排序，点击第二次反向排序，点击第三次则会取消排序。</target>
      </trans-unit>
      <trans-unit id="55462">
        <source>快速体验</source>
        <target state="translated">快速體驗</target>
      </trans-unit>
      <trans-unit id="55464">
        <source>快速体验目前仍然是实验性功能，仅在官方文档中的插件市场里可用。</source>
        <target state="needs-translation">快速体验目前仍然是实验性功能，仅在官方文档中的插件市场里可用。</target>
      </trans-unit>
      <trans-unit id="55466">
        <source>[Koishi Online (k-on!)](https://koishi.online) 是一个在线的 Koishi 运行时。</source>
        <target state="needs-translation">[Koishi Online (k-on!)](https://koishi.online) 是一个在线的 Koishi 运行时。</target>
      </trans-unit>
      <trans-unit id="55468">
        <source>你可以在其中快速体验插件的功能，而无需在本地安装 Koishi。</source>
        <target state="needs-translation">你可以在其中快速体验插件的功能，而无需在本地安装 Koishi。</target>
      </trans-unit>
      <trans-unit id="55470">
        <source>适配了 k-on! 的插件会显示一个闪电按钮，点击即可快速创建一个 k-on! 实例。</source>
        <target state="needs-translation">适配了 k-on! 的插件会显示一个闪电按钮，点击即可快速创建一个 k-on! 实例。</target>
      </trans-unit>
      <trans-unit id="55472">
        <source>如果你是插件开发者，可以参考 [这篇文章](../../cookbook/practice/online.md) 来将你的插件部署到 k-on!。</source>
        <target state="needs-translation">如果你是插件开发者，可以参考 [这篇文章](../../cookbook/practice/online.md) 来将你的插件部署到 k-on!。</target>
      </trans-unit>
      <trans-unit id="55474" translate="no">
        <source>
import { MarketIcon } from '@koishijs/market'
</source>
        <target>
import { MarketIcon } from '@koishijs/market'
</target>
      </trans-unit>
      <trans-unit id="55476" translate="no">
        <source>
.plugin-flags-list ul {
  list-style-type: none;
  padding-left: 0.5rem;
}
.plugin-flags-list svg {
  transform: translateX(-0.5rem);
  width: 16px;
  height: 16px;
  display: inline-block;
  vertical-align: middle;
}
</source>
        <target>
.plugin-flags-list ul {
  list-style-type: none;
  padding-left: 0.5rem;
}
.plugin-flags-list svg {
  transform: translateX(-0.5rem);
  width: 16px;
  height: 16px;
  display: inline-block;
  vertical-align: middle;
}
</target>
      </trans-unit>
    </body>
  </file>
  <file id="1614" original="/[koishijs.docs] main/zh-CN/manual/recipe/server.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="55478">
        <source>公网部署</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">公網部署</target>
      </trans-unit>
      <trans-unit id="55484">
        <source>Koishi 应用默认情况下只能在本机访问。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">Koishi 應用默認情況下只能在本機訪問。</target>
      </trans-unit>
      <trans-unit id="55486">
        <source>而对于某些需求，你可能希望在公网上访问到 Koishi 的控制台或其他网络服务：</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">而對於某些需求，你可能希望在公網上訪問到 Koishi 的控制臺或其他網絡服務：</target>
      </trans-unit>
      <trans-unit id="55488">
        <source>让更多人访问到你的 Koishi 控制台</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">讓更多人訪問到你的 Koishi 控制臺</target>
      </trans-unit>
      <trans-unit id="63628">
        <source>使用作为 webhook 服务端的插件 (例如 [github](https://github.koishi.chat) 和部分适配器插件)</source>
        <target state="needs-translation">使用作为 webhook 服务端的插件 (例如 [github](https://github.koishi.chat) 和部分适配器插件)</target>
      </trans-unit>
      <trans-unit id="55492">
        <source>本节教程将指导你完成 Koishi 应用的公网部署。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">本節教程將指導你完成 Koishi 應用的公網部署。</target>
      </trans-unit>
      <trans-unit id="64458">
        <source>配置用户登录</source>
        <target state="needs-translation">配置用户登录</target>
      </trans-unit>
      <trans-unit id="64460">
        <source>将 Koishi 不受限制地暴露在公网上可能会导致你的服务器受到攻击。</source>
        <target state="needs-translation">将 Koishi 不受限制地暴露在公网上可能会导致你的服务器受到攻击。</target>
      </trans-unit>
      <trans-unit id="64462">
        <source>因此，你需要妥善配合用户登录等方式以限制控制台功能的访问能力。</source>
        <target state="needs-translation">因此，你需要妥善配合用户登录等方式以限制控制台功能的访问能力。</target>
      </trans-unit>
      <trans-unit id="66994">
        <source>在 [前面的章节](../usage/platform.md#console-login) 中，我们已经介绍了 [auth](../../plugins/console/auth.md) 插件的使用方法。</source>
        <target state="needs-translation">在 [前面的章节](../usage/platform.md#console-login) 中，我们已经介绍了 [auth](../../plugins/console/auth.md) 插件的使用方法。</target>
      </trans-unit>
      <trans-unit id="64466">
        <source>配置服务器地址</source>
        <target state="needs-translation">配置服务器地址</target>
      </trans-unit>
      <trans-unit id="67004">
        <source>Koishi 的服务器功能是由预装插件 [@koishijs/plugin-server](../../plugins/develop/server.md) 提供的。</source>
        <target state="needs-translation">Koishi 的服务器功能是由预装插件 [@koishijs/plugin-server](../../plugins/develop/server.md) 提供的。</target>
      </trans-unit>
      <trans-unit id="63634">
        <source>前往「插件配置」页面，找到 server 插件，并将 `host` 修改为 `0.0.0.0`，随后点击右上角的「重载配置」。</source>
        <target state="needs-translation">前往「插件配置」页面，找到 server 插件，并将 `host` 修改为 `0.0.0.0`，随后点击右上角的「重载配置」。</target>
      </trans-unit>
      <trans-unit id="63636">
        <source>等待插件重启之后，你就可以使用 `IP:端口` 的方式，在局域网内任意设备的浏览器上访问到 Koishi 控制台了。</source>
        <target state="needs-translation">等待插件重启之后，你就可以使用 `IP:端口` 的方式，在局域网内任意设备的浏览器上访问到 Koishi 控制台了。</target>
      </trans-unit>
      <trans-unit id="67006">
        <source>如果你将 Koishi 应用暴露在公网上，并配置了相应的域名解析记录，你还需要将 `selfUrl` 修改为能访问到 Koishi 实例的地址。</source>
        <target state="needs-translation">如果你将 Koishi 应用暴露在公网上，并配置了相应的域名解析记录，你还需要将 `selfUrl` 修改为能访问到 Koishi 实例的地址。</target>
      </trans-unit>
      <trans-unit id="63638">
        <source>配置反向代理</source>
        <target state="needs-translation">配置反向代理</target>
      </trans-unit>
      <trans-unit id="55504">
        <source>如果你有更复杂的需求，例如配置 SSL、域名等，可以使用反向代理。</source>
        <target state="needs-translation">如果你有更复杂的需求，例如配置 SSL、域名等，可以使用反向代理。</target>
      </trans-unit>
      <trans-unit id="55506">
        <source>常见的方案有 nginx、Caddy 等。</source>
        <target state="needs-translation">常见的方案有 nginx、Caddy 等。</target>
      </trans-unit>
      <trans-unit id="67008">
        <source>在同设备上使用反向代理时，你不需要修改上述 `host` 配置项。</source>
        <target state="needs-translation">在同设备上使用反向代理时，你不需要修改上述 `host` 配置项。</target>
      </trans-unit>
      <trans-unit id="55510">
        <source>使用 Caddy</source>
        <target state="needs-translation">使用 Caddy</target>
      </trans-unit>
      <trans-unit id="55512">
        <source># 如果你希望使用域名，并自动签发 SSL 证书，请将下方 :80 改为你的域名
# https://caddyserver.com/docs/caddyfile
:80 {
  reverse_proxy http://127.0.0.1:5140
}</source>
        <target state="needs-translation"># 如果你希望使用域名，并自动签发 SSL 证书，请将下方 :80 改为你的域名
# https://caddyserver.com/docs/caddyfile
:80 {
  reverse_proxy http://127.0.0.1:5140
}</target>
      </trans-unit>
      <trans-unit id="55514">
        <source>使用 nginx</source>
        <target state="needs-translation">使用 nginx</target>
      </trans-unit>
      <trans-unit id="55516">
        <source>下面给出一段 nginx 配置作为参考：</source>
        <target state="needs-translation">下面给出一段 nginx 配置作为参考：</target>
      </trans-unit>
      <trans-unit id="55518">
        <source># http://nginx.org/en/docs/http/websocket.html
map $http_upgrade $connection_upgrade {
  default upgrade;
  '' close;
}

server {
  # server_name, port, ssl 等设置

  location / {
    # 这里的 5140 对应 Koishi 实例的端口
    proxy_pass http://127.0.0.1:5140/;
    proxy_redirect off;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Host $http_host;
    proxy_read_timeout 300s;
    proxy_send_timeout 300s;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
  }
}</source>
        <target state="needs-translation"># http://nginx.org/en/docs/http/websocket.html
map $http_upgrade $connection_upgrade {
  default upgrade;
  '' close;
}

server {
  # server_name, port, ssl 等设置

  location / {
    # 这里的 5140 对应 Koishi 实例的端口
    proxy_pass http://127.0.0.1:5140/;
    proxy_redirect off;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Host $http_host;
    proxy_read_timeout 300s;
    proxy_send_timeout 300s;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
  }
}</target>
      </trans-unit>
      <trans-unit id="55520">
        <source>接下来……</source>
        <target state="needs-translation">接下来……</target>
      </trans-unit>
      <trans-unit id="55522">
        <source>完成初步配置以后，有一些额外的社区插件可以帮助你更好地部署 Koishi 控制台。</source>
        <target state="needs-translation">完成初步配置以后，有一些额外的社区插件可以帮助你更好地部署 Koishi 控制台。</target>
      </trans-unit>
      <trans-unit id="55524">
        <source>添加备案信息</source>
        <target state="needs-translation">添加备案信息</target>
      </trans-unit>
      <trans-unit id="55526">
        <source>如果你的服务器在国内，你需要在控制台中添加备案信息，才能在公网上顺利访问。</source>
        <target state="needs-translation">如果你的服务器在国内，你需要在控制台中添加备案信息，才能在公网上顺利访问。</target>
      </trans-unit>
      <trans-unit id="55528">
        <source>此时你可以使用 [footer](https://github.com/koishijs/koishi-plugin-footer) 等插件来完成配置。</source>
        <target state="needs-translation">此时你可以使用 [footer](https://github.com/koishijs/koishi-plugin-footer) 等插件来完成配置。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1616" original="/[koishijs.docs] main/zh-CN/manual/starter/android.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="55530">
        <source>选择安装方式</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">選擇安裝方式</target>
      </trans-unit>
      <trans-unit id="55532" translate="no">
        <source>/zh-CN/manual/starter/</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">/zh-TW/manual/starter/</target>
      </trans-unit>
      <trans-unit id="55534">
        <source>安装和配置插件</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">安裝和配置外掛</target>
      </trans-unit>
      <trans-unit id="55536">
        <source>/zh-CN/manual/usage/market.html</source>
        <target state="needs-translation">/zh-CN/manual/usage/market.html</target>
      </trans-unit>
      <trans-unit id="55538">
        <source>为 Android 安装</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">為 Android 安裝</target>
      </trans-unit>
      <trans-unit id="55540">
        <source>如果想了解其他安装方式，请移步 [选择安装方式](./index.md)。</source>
        <target state="needs-translation">如果想了解其他安装方式，请移步 [选择安装方式](./index.md)。</target>
      </trans-unit>
      <trans-unit id="55542">
        <source>此项目仍在早期开发中。</source>
        <target state="needs-translation">此项目仍在早期开发中。</target>
      </trans-unit>
      <trans-unit id="55544">
        <source>部分功能可能不可用。</source>
        <target state="needs-translation">部分功能可能不可用。</target>
      </trans-unit>
      <trans-unit id="55546">
        <source>下载</source>
        <target state="needs-translation">下载</target>
      </trans-unit>
      <trans-unit id="55548">
        <source>[下载标准包 (.apk)](https://k.ilharp.cc/android-lite.apk)</source>
        <target state="needs-translation">[下载标准包 (.apk)](https://k.ilharp.cc/android-lite.apk)</target>
      </trans-unit>
      <trans-unit id="55550">
        <source>[下载扩展包 (.apk)](https://k.ilharp.cc/android-full.apk)</source>
        <target state="needs-translation">[下载扩展包 (.apk)](https://k.ilharp.cc/android-full.apk)</target>
      </trans-unit>
      <trans-unit id="55552">
        <source>[查看更多版本](https://github.com/koishijs/koishi-android/releases)</source>
        <target state="needs-translation">[查看更多版本](https://github.com/koishijs/koishi-android/releases)</target>
      </trans-unit>
      <trans-unit id="55554">
        <source>安装</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">安裝</target>
      </trans-unit>
      <trans-unit id="55556">
        <source>通过安装包安装 Koishi 是最推荐的安装方式，安装程序会自动处理大部分问题。</source>
        <target state="needs-translation">通过安装包安装 Koishi 是最推荐的安装方式，安装程序会自动处理大部分问题。</target>
      </trans-unit>
      <trans-unit id="55558">
        <source>一般情况下你都应该选择这种方式。</source>
        <target state="needs-translation">一般情况下你都应该选择这种方式。</target>
      </trans-unit>
      <trans-unit id="55560">
        <source>启动</source>
        <target state="needs-translation">启动</target>
      </trans-unit>
      <trans-unit id="55562">
        <source>安装完成后，点击 Koishi 图标即可启动。</source>
        <target state="needs-translation">安装完成后，点击 Koishi 图标即可启动。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1618" original="/[koishijs.docs] main/zh-CN/manual/starter/boilerplate.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="55564">
        <source>选择安装方式</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">選擇安裝方式</target>
      </trans-unit>
      <trans-unit id="55566">
        <source>/zh-CN/manual/starter/</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">/zh-TW/manual/starter/</target>
      </trans-unit>
      <trans-unit id="55568">
        <source>安装和配置插件</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">安裝和配置外掛</target>
      </trans-unit>
      <trans-unit id="55570">
        <source>/zh-CN/manual/usage/market.html</source>
        <target state="needs-translation">/zh-CN/manual/usage/market.html</target>
      </trans-unit>
      <trans-unit id="55572">
        <source>创建模板项目</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">建立模板專案</target>
      </trans-unit>
      <trans-unit id="55574">
        <source>如果想了解其他安装方式，请移步 [选择安装方式](./index.md)。</source>
        <target state="needs-translation">如果想了解其他安装方式，请移步 [选择安装方式](./index.md)。</target>
      </trans-unit>
      <trans-unit id="55576">
        <source>本节将介绍我们最推荐的 Koishi 开发方案——创建模板项目。</source>
        <target state="needs-translation">本节将介绍我们最推荐的 Koishi 开发方案——创建模板项目。</target>
      </trans-unit>
      <trans-unit id="55578">
        <source>相比直接从零搭建，模板项目的优势在于：</source>
        <target state="needs-translation">相比直接从零搭建，模板项目的优势在于：</target>
      </trans-unit>
      <trans-unit id="55580">
        <source>创建完成即是拥有带完整控制台体验的项目，一键创建各种模板插件</source>
        <target state="needs-translation">创建完成即是拥有带完整控制台体验的项目，一键创建各种模板插件</target>
      </trans-unit>
      <trans-unit id="55582">
        <source>支持直接加载 TypeScript，你可以尽情享受代码提示和类型检查带来的便利</source>
        <target state="needs-translation">支持直接加载 TypeScript，你可以尽情享受代码提示和类型检查带来的便利</target>
      </trans-unit>
      <trans-unit id="55584">
        <source>支持插件热重载，你可以在不重启应用的情况下修改插件代码，并获得即时的反馈</source>
        <target state="needs-translation">支持插件热重载，你可以在不重启应用的情况下修改插件代码，并获得即时的反馈</target>
      </trans-unit>
      <trans-unit id="55586">
        <source>支持二次开发，你可以将你自己的机器人与其他人的插件进行联合调试</source>
        <target state="needs-translation">支持二次开发，你可以将你自己的机器人与其他人的插件进行联合调试</target>
      </trans-unit>
      <trans-unit id="55588">
        <source>当然，模板项目也可以直接用于生产。</source>
        <target state="needs-translation">当然，模板项目也可以直接用于生产。</target>
      </trans-unit>
      <trans-unit id="55590">
        <source>虽然在操作上可能不如启动器方便，但它提供了更多的自由度，并能在启动器所覆盖不到的场景下顺利运行。</source>
        <target state="needs-translation">虽然在操作上可能不如启动器方便，但它提供了更多的自由度，并能在启动器所覆盖不到的场景下顺利运行。</target>
      </trans-unit>
      <trans-unit id="55592">
        <source>安装 Node.js</source>
        <target state="needs-translation">安装 Node.js</target>
      </trans-unit>
      <trans-unit id="55594">
        <source>Koishi 需要 [Node.js](https://nodejs.org/) (最低 v18，推荐使用 LTS) 运行环境，你需要自己安装它。</source>
        <target state="needs-translation">Koishi 需要 [Node.js](https://nodejs.org/) (最低 v18，推荐使用 LTS) 运行环境，你需要自己安装它。</target>
      </trans-unit>
      <trans-unit id="55596">
        <source>下载安装包</source>
        <target state="needs-translation">下载安装包</target>
      </trans-unit>
      <trans-unit id="55598">
        <source>首先我们前往 [Node.js](https://nodejs.org/) 的官方网站：</source>
        <target state="needs-translation">首先我们前往 [Node.js](https://nodejs.org/) 的官方网站：</target>
      </trans-unit>
      <trans-unit id="55600" translate="no">
        <source>![home](/manual/nodejs/home-dark.webp) {.dark-only}</source>
        <target>![home](/manual/nodejs/home-dark.webp) {.dark-only}</target>
      </trans-unit>
      <trans-unit id="55602" translate="no">
        <source>![home](/manual/nodejs/home-light.webp) {.light-only}</source>
        <target>![home](/manual/nodejs/home-light.webp) {.light-only}</target>
      </trans-unit>
      <trans-unit id="55604">
        <source>在这里可以看到两个巨大的按钮，分别对应着 **LTS (长期维护版)** 和 **Current (最新版本)**。</source>
        <target state="needs-translation">在这里可以看到两个巨大的按钮，分别对应着 **LTS (长期维护版)** 和 **Current (最新版本)**。</target>
      </trans-unit>
      <trans-unit id="55606">
        <source>我们建议你选择更加稳定的 LTS 版本，点击按钮即可下载安装包。</source>
        <target state="needs-translation">我们建议你选择更加稳定的 LTS 版本，点击按钮即可下载安装包。</target>
      </trans-unit>
      <trans-unit id="55608">
        <source>随后，运行下载好的安装包，根据提示完成整个安装流程即可。</source>
        <target state="needs-translation">随后，运行下载好的安装包，根据提示完成整个安装流程即可。</target>
      </trans-unit>
      <trans-unit id="55610">
        <source>安装包管理器</source>
        <target state="needs-translation">安装包管理器</target>
      </trans-unit>
      <trans-unit id="55612">
        <source>Node.js 自带名为 [npm](https://www.npmjs.com/) 的包管理器，你可以直接使用它。</source>
        <target state="needs-translation">Node.js 自带名为 [npm](https://www.npmjs.com/) 的包管理器，你可以直接使用它。</target>
      </trans-unit>
      <trans-unit id="55614">
        <source>我们同时也推荐功能更强大的 [yarn](https://classic.yarnpkg.com/) 作为包管理器。</source>
        <target state="needs-translation">我们同时也推荐功能更强大的 [yarn](https://classic.yarnpkg.com/) 作为包管理器。</target>
      </trans-unit>
      <trans-unit id="55616">
        <source>它的安装非常简单，只需打开命令行输入下面的命令：</source>
        <target state="needs-translation">它的安装非常简单，只需打开命令行输入下面的命令：</target>
      </trans-unit>
      <trans-unit id="55618">
        <source># 安装 yarn
npm i -g yarn

# 查看版本
yarn -v</source>
        <target state="needs-translation"># 安装 yarn
npm i -g yarn

# 查看版本
yarn -v</target>
      </trans-unit>
      <trans-unit id="55620">
        <source>yarn：无法加载文件 yarn.ps1，因为在此系统上禁止运行脚本。</source>
        <target state="needs-translation">yarn：无法加载文件 yarn.ps1，因为在此系统上禁止运行脚本。</target>
      </trans-unit>
      <trans-unit id="55622">
        <source>此时请以管理员身份重新运行终端，并输入下面的命令：</source>
        <target state="needs-translation">此时请以管理员身份重新运行终端，并输入下面的命令：</target>
      </trans-unit>
      <trans-unit id="55624">
        <source>Set-ExecutionPolicy RemoteSigned</source>
        <target state="needs-translation">Set-ExecutionPolicy RemoteSigned</target>
      </trans-unit>
      <trans-unit id="55626">
        <source>之后就可以正常使用 yarn 了。</source>
        <target state="needs-translation">之后就可以正常使用 yarn 了。</target>
      </trans-unit>
      <trans-unit id="55628">
        <source>:::</source>
        <target state="needs-translation">:::</target>
      </trans-unit>
      <trans-unit id="55630">
        <source>配置镜像源</source>
        <target state="needs-translation">配置镜像源</target>
      </trans-unit>
      <trans-unit id="55632">
        <source>如果你是国内用户，从 npm 或 yarn 上下载依赖可能非常慢。</source>
        <target state="needs-translation">如果你是国内用户，从 npm 或 yarn 上下载依赖可能非常慢。</target>
      </trans-unit>
      <trans-unit id="55634">
        <source>因此，我们推荐你配置一下镜像源，以提升安装速度。</source>
        <target state="needs-translation">因此，我们推荐你配置一下镜像源，以提升安装速度。</target>
      </trans-unit>
      <trans-unit id="55636">
        <source>code</source>
        <target state="needs-translation">code</target>
      </trans-unit>
      <trans-unit id="55638">
        <source>npm config set registry https://registry.npmmirror.com</source>
        <target state="needs-translation">npm config set registry https://registry.npmmirror.com</target>
      </trans-unit>
      <trans-unit id="55640">
        <source>yarn config set registry https://registry.npmmirror.com</source>
        <target state="needs-translation">yarn config set registry https://registry.npmmirror.com</target>
      </trans-unit>
      <trans-unit id="55642">
        <source>创建项目</source>
        <target state="needs-translation">创建项目</target>
      </trans-unit>
      <trans-unit id="55644">
        <source>打开命令行，并进入你想要创建 Koishi 项目的目录。</source>
        <target state="needs-translation">打开命令行，并进入你想要创建 Koishi 项目的目录。</target>
      </trans-unit>
      <trans-unit id="55646">
        <source>Windows：`C:\dev` 或者 `D:\dev` (也不要直接在盘根创建项目，最好是建一层目录)</source>
        <target state="needs-translation">Windows：`C:\dev` 或者 `D:\dev` (也不要直接在盘根创建项目，最好是建一层目录)</target>
      </trans-unit>
      <trans-unit id="55648">
        <source>其他操作系统：`~/dev`
:::</source>
        <target state="needs-translation">其他操作系统：`~/dev`
:::</target>
      </trans-unit>
      <trans-unit id="55650">
        <source>输入下面的命令以创建 Koishi 项目：</source>
        <target state="needs-translation">输入下面的命令以创建 Koishi 项目：</target>
      </trans-unit>
      <trans-unit id="55652">
        <source>code</source>
        <target state="needs-translation">code</target>
      </trans-unit>
      <trans-unit id="55654">
        <source>npm init koishi@latest</source>
        <target state="needs-translation">npm init koishi@latest</target>
      </trans-unit>
      <trans-unit id="55656">
        <source>yarn create koishi</source>
        <target state="needs-translation">yarn create koishi</target>
      </trans-unit>
      <trans-unit id="55658">
        <source>跟随提示即可完成全套初始化流程。</source>
        <target state="needs-translation">跟随提示即可完成全套初始化流程。</target>
      </trans-unit>
      <trans-unit id="55660">
        <source>启动应用</source>
        <target state="needs-translation">启动应用</target>
      </trans-unit>
      <trans-unit id="55662">
        <source>如果你顺利完成了上述操作，你的应用此时应该已经是启动状态，并弹出了控制台界面。</source>
        <target state="needs-translation">如果你顺利完成了上述操作，你的应用此时应该已经是启动状态，并弹出了控制台界面。</target>
      </trans-unit>
      <trans-unit id="55664">
        <source>如果你想要关闭应用，可以在命令行中按下 `Ctrl+C` 组合键。</source>
        <target state="needs-translation">如果你想要关闭应用，可以在命令行中按下 `Ctrl+C` 组合键。</target>
      </trans-unit>
      <trans-unit id="55666">
        <source>当应用处于关闭状态时，你可以在运行下面的指令以再次启动：</source>
        <target state="needs-translation">当应用处于关闭状态时，你可以在运行下面的指令以再次启动：</target>
      </trans-unit>
      <trans-unit id="55668">
        <source>code</source>
        <target state="needs-translation">code</target>
      </trans-unit>
      <trans-unit id="55670">
        <source>npm start</source>
        <target state="needs-translation">npm start</target>
      </trans-unit>
      <trans-unit id="55672">
        <source>yarn start</source>
        <target state="needs-translation">yarn start</target>
      </trans-unit>
      <trans-unit id="55674">
        <source>接下来……</source>
        <target state="needs-translation">接下来……</target>
      </trans-unit>
      <trans-unit id="55676">
        <source>恭喜你已经掌握了 Koishi 的基本用法！</source>
        <target state="needs-translation">恭喜你已经掌握了 Koishi 的基本用法！</target>
      </trans-unit>
      <trans-unit id="55678">
        <source>接下来：</source>
        <target state="needs-translation">接下来：</target>
      </trans-unit>
      <trans-unit id="55680">
        <source>如果你希望了解 Koishi 的更多功能，请前往 [安装和配置插件](../usage/market.md)</source>
        <target state="needs-translation">如果你希望了解 Koishi 的更多功能，请前往 [安装和配置插件](../usage/market.md)</target>
      </trans-unit>
      <trans-unit id="55682">
        <source>如果你希望立即开始你的插件开发，请前往 [开发指南](../../guide/index.md)</source>
        <target state="needs-translation">如果你希望立即开始你的插件开发，请前往 [开发指南](../../guide/index.md)</target>
      </trans-unit>
    </body>
  </file>
  <file id="1620" original="/[koishijs.docs] main/zh-CN/manual/starter/direct.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="55684">
        <source>选择安装方式</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">選擇安裝方式</target>
      </trans-unit>
      <trans-unit id="55686">
        <source>/zh-CN/manual/starter/</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">/zh-TW/manual/starter/</target>
      </trans-unit>
      <trans-unit id="55688">
        <source>指南</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">指南</target>
      </trans-unit>
      <trans-unit id="55690">
        <source>/zh-CN/guide/</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">/zh-TW/guide/</target>
      </trans-unit>
      <trans-unit id="55692">
        <source>作为依赖调用</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">作為依賴呼叫</target>
      </trans-unit>
      <trans-unit id="55694">
        <source>这篇指南假设你已了解关于 [JavaScript](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript) 和 [Node.js](https://nodejs.org/) 的中级知识。</source>
        <target state="needs-translation">这篇指南假设你已了解关于 [JavaScript](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript) 和 [Node.js](https://nodejs.org/) 的中级知识。</target>
      </trans-unit>
      <trans-unit id="55696">
        <source>如果你刚开始学习 JavaScript 开发或者对编写业务代码不感兴趣，请 [选择其他安装方式](./index.md)。</source>
        <target state="needs-translation">如果你刚开始学习 JavaScript 开发或者对编写业务代码不感兴趣，请 [选择其他安装方式](./index.md)。</target>
      </trans-unit>
      <trans-unit id="55698">
        <source>我们强烈建议使用模板项目进行 Koishi 开发。</source>
        <target state="needs-translation">我们强烈建议使用模板项目进行 Koishi 开发。</target>
      </trans-unit>
      <trans-unit id="55700">
        <source>如果你不确定自己在做什么，建议先完整阅读 [模板项目](./boilerplate.md) 章节。</source>
        <target state="needs-translation">如果你不确定自己在做什么，建议先完整阅读 [模板项目](./boilerplate.md) 章节。</target>
      </trans-unit>
      <trans-unit id="55702">
        <source>虽然现在我们推荐绝大部分用户使用 [模板项目](./boilerplate.md)，但如果你希望将 Koishi 嵌入更复杂的程序中，那么直接调用将会成为更具有灵活性的选择。</source>
        <target state="needs-translation">虽然现在我们推荐绝大部分用户使用 [模板项目](./boilerplate.md)，但如果你希望将 Koishi 嵌入更复杂的程序中，那么直接调用将会成为更具有灵活性的选择。</target>
      </trans-unit>
      <trans-unit id="55704">
        <source>初始化项目</source>
        <target state="needs-translation">初始化项目</target>
      </trans-unit>
      <trans-unit id="55706">
        <source>Koishi 本身使用 TypeScript 编写，因此我们推荐你使用 TypeScript 来进行 Koishi 开发。</source>
        <target state="needs-translation">Koishi 本身使用 TypeScript 编写，因此我们推荐你使用 TypeScript 来进行 Koishi 开发。</target>
      </trans-unit>
      <trans-unit id="55708">
        <source>在接下来的文档中，我们将统一使用 TypeScript 作为示例代码。</source>
        <target state="needs-translation">在接下来的文档中，我们将统一使用 TypeScript 作为示例代码。</target>
      </trans-unit>
      <trans-unit id="55710">
        <source>如果你想编写原生 JavaScript 或使用其他方言，可以在示例代码的基础上自行修改。</source>
        <target state="needs-translation">如果你想编写原生 JavaScript 或使用其他方言，可以在示例代码的基础上自行修改。</target>
      </trans-unit>
      <trans-unit id="55712">
        <source>Koishi 需要 [Node.js](https://nodejs.org/) (最低 v18，推荐使用 LTS) 运行环境，你需要自己安装它。</source>
        <target state="needs-translation">Koishi 需要 [Node.js](https://nodejs.org/) (最低 v18，推荐使用 LTS) 运行环境，你需要自己安装它。</target>
      </trans-unit>
      <trans-unit id="55714">
        <source>这里我们假定你已经安装完成了。</source>
        <target state="needs-translation">这里我们假定你已经安装完成了。</target>
      </trans-unit>
      <trans-unit id="55716">
        <source>首先初始化你的机器人目录并安装 Koishi 和所需的插件 (这里以官方插件 console, sandbox 和 echo 为例)：</source>
        <target state="needs-translation">首先初始化你的机器人目录并安装 Koishi 和所需的插件 (这里以官方插件 console, sandbox 和 echo 为例)：</target>
      </trans-unit>
      <trans-unit id="55718">
        <source>code</source>
        <target state="needs-translation">code</target>
      </trans-unit>
      <trans-unit id="67036">
        <source># 初始化项目
npm init

# 安装 Koishi 和相关插件
npm i koishi \
      @koishijs/plugin-server \
      @koishijs/plugin-console \
      @koishijs/plugin-sandbox \
      @koishijs/plugin-echo

# 安装 TypeScript 相关依赖 (如不使用可忽略此步骤)
npm i typescript @types/node esbuild esbuild-register -D</source>
        <target state="needs-translation"># 初始化项目
npm init

# 安装 Koishi 和相关插件
npm i koishi \
      @koishijs/plugin-server \
      @koishijs/plugin-console \
      @koishijs/plugin-sandbox \
      @koishijs/plugin-echo

# 安装 TypeScript 相关依赖 (如不使用可忽略此步骤)
npm i typescript @types/node esbuild esbuild-register -D</target>
      </trans-unit>
      <trans-unit id="67038">
        <source># 初始化项目
yarn init

# 安装 Koishi 和相关插件
yarn add koishi
         @koishijs/plugin-server \
         @koishijs/plugin-console \
         @koishijs/plugin-sandbox \
         @koishijs/plugin-echo

# 安装 TypeScript 相关依赖 (如不使用可忽略此步骤)
yarn add typescript @types/node esbuild esbuild-register -D</source>
        <target state="needs-translation"># 初始化项目
yarn init

# 安装 Koishi 和相关插件
yarn add koishi
         @koishijs/plugin-server \
         @koishijs/plugin-console \
         @koishijs/plugin-sandbox \
         @koishijs/plugin-echo

# 安装 TypeScript 相关依赖 (如不使用可忽略此步骤)
yarn add typescript @types/node esbuild esbuild-register -D</target>
      </trans-unit>
      <trans-unit id="55724">
        <source>新建入口文件 `index.ts`，并写下这段代码：</source>
        <target state="needs-translation">新建入口文件 `index.ts`，并写下这段代码：</target>
      </trans-unit>
      <trans-unit id="67040">
        <source>import { Context } from 'koishi'
import server from '@koishijs/plugin-server'
import console from '@koishijs/plugin-console'
import * as sandbox from '@koishijs/plugin-sandbox'
import * as echo from '@koishijs/plugin-echo'

// 创建一个 Koishi 应用
const ctx = new Context()

// 启用上述插件
ctx.plugin(server, {
  port: 5140,
})                      // 提供后端服务
ctx.plugin(console)     // 提供控制台
ctx.plugin(sandbox)     // 提供调试沙盒
ctx.plugin(echo)        // 提供回声指令

// 启动应用
ctx.start()</source>
        <target state="needs-translation">import { Context } from 'koishi'
import server from '@koishijs/plugin-server'
import console from '@koishijs/plugin-console'
import * as sandbox from '@koishijs/plugin-sandbox'
import * as echo from '@koishijs/plugin-echo'

// 创建一个 Koishi 应用
const ctx = new Context()

// 启用上述插件
ctx.plugin(server, {
  port: 5140,
})                      // 提供后端服务
ctx.plugin(console)     // 提供控制台
ctx.plugin(sandbox)     // 提供调试沙盒
ctx.plugin(echo)        // 提供回声指令

// 启动应用
ctx.start()</target>
      </trans-unit>
      <trans-unit id="55728">
        <source>接着运行这个文件：</source>
        <target state="needs-translation">接着运行这个文件：</target>
      </trans-unit>
      <trans-unit id="55730">
        <source>node -r esbuild-register .</source>
        <target state="needs-translation">node -r esbuild-register .</target>
      </trans-unit>
      <trans-unit id="55732">
        <source>最后，打开浏览器并前往 `http://localhost:5140`，你将看到一个控制台界面。</source>
        <target state="needs-translation">最后，打开浏览器并前往 `http://localhost:5140`，你将看到一个控制台界面。</target>
      </trans-unit>
      <trans-unit id="55734">
        <source>在左侧点击进入「沙盒」页面，并点击屏幕上方的「添加用户」来创建一个模拟用户。</source>
        <target state="needs-translation">在左侧点击进入「沙盒」页面，并点击屏幕上方的「添加用户」来创建一个模拟用户。</target>
      </trans-unit>
      <trans-unit id="55736">
        <source>现在你已经可以与机器人对话了：</source>
        <target state="needs-translation">现在你已经可以与机器人对话了：</target>
      </trans-unit>
      <trans-unit id="55738">
        <source>echo 你好</source>
        <target state="needs-translation">echo 你好</target>
      </trans-unit>
      <trans-unit id="55740">
        <source>你好</source>
        <target state="needs-translation">你好</target>
      </trans-unit>
      <trans-unit id="55742">
        <source>配置机器人</source>
        <target state="needs-translation">配置机器人</target>
      </trans-unit>
      <trans-unit id="55744">
        <source>如果你想要接入真实聊天平台，那么你只需要安装适配插件即可：</source>
        <target state="needs-translation">如果你想要接入真实聊天平台，那么你只需要安装适配插件即可：</target>
      </trans-unit>
      <trans-unit id="55746">
        <source>code</source>
        <target state="needs-translation">code</target>
      </trans-unit>
      <trans-unit id="55748">
        <source># 以 Satori 和 Discord 适配器为例
npm i @koishijs/plugin-adapter-satori \
      @koishijs/plugin-adapter-discord</source>
        <target state="needs-translation"># 以 Satori 和 Discord 适配器为例
npm i @koishijs/plugin-adapter-satori \
      @koishijs/plugin-adapter-discord</target>
      </trans-unit>
      <trans-unit id="55750">
        <source># 以 Satori 和 Discord 适配器为例
yarn add @koishijs/plugin-adapter-satori \
         @koishijs/plugin-adapter-discord</source>
        <target state="needs-translation"># 以 Satori 和 Discord 适配器为例
yarn add @koishijs/plugin-adapter-satori \
         @koishijs/plugin-adapter-discord</target>
      </trans-unit>
      <trans-unit id="55752">
        <source>接着修改你刚刚创建的 `index.ts`。</source>
        <target state="needs-translation">接着修改你刚刚创建的 `index.ts`。</target>
      </trans-unit>
      <trans-unit id="55754">
        <source>每个机器人相当于启用一个插件：</source>
        <target state="needs-translation">每个机器人相当于启用一个插件：</target>
      </trans-unit>
      <trans-unit id="55756">
        <source>import satori from '@koishijs/plugin-adapter-satori'
import discord from '@koishijs/plugin-adapter-discord'

// 使用 Satori 适配器的机器人
ctx.plugin(satori, {
  endpoint: 'http://127.0.0.1:5500',
})

// 使用 Satori 适配器的另一个机器人，可以有不同的通信方式
ctx.plugin(satori, {
  endpoint: 'http://127.0.0.1:5501',
})

// 使用 Discord 适配器的机器人
// 别忘了在使用之前，先安装相应的插件和完成准备工作
ctx.plugin(discord, {
  token: 'QwErTyUiOpAsDfGhJkLzXcVbNm',
})</source>
        <target state="needs-translation">import satori from '@koishijs/plugin-adapter-satori'
import discord from '@koishijs/plugin-adapter-discord'

// 使用 Satori 适配器的机器人
ctx.plugin(satori, {
  endpoint: 'http://127.0.0.1:5500',
})

// 使用 Satori 适配器的另一个机器人，可以有不同的通信方式
ctx.plugin(satori, {
  endpoint: 'http://127.0.0.1:5501',
})

// 使用 Discord 适配器的机器人
// 别忘了在使用之前，先安装相应的插件和完成准备工作
ctx.plugin(discord, {
  token: 'QwErTyUiOpAsDfGhJkLzXcVbNm',
})</target>
      </trans-unit>
      <trans-unit id="55758">
        <source>添加更多插件</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">新增更多外掛</target>
      </trans-unit>
      <trans-unit id="55760">
        <source>Koishi 插件可以在 [npm](https://www.npmjs.com) 上获取。</source>
        <target state="needs-translation">Koishi 插件可以在 [npm](https://www.npmjs.com) 上获取。</target>
      </trans-unit>
      <trans-unit id="55762">
        <source>通常插件会遵循下面的名称：</source>
        <target state="needs-translation">通常插件会遵循下面的名称：</target>
      </trans-unit>
      <trans-unit id="55764">
        <source>koishi-plugin-foo</source>
        <target state="needs-translation">koishi-plugin-foo</target>
      </trans-unit>
      <trans-unit id="55766">
        <source>@koishijs/plugin-foo</source>
        <target state="needs-translation">@koishijs/plugin-foo</target>
      </trans-unit>
      <trans-unit id="55768">
        <source>@bar/koishi-plugin-foo</source>
        <target state="needs-translation">@bar/koishi-plugin-foo</target>
      </trans-unit>
      <trans-unit id="55770">
        <source>对于社区插件，使用类似的方式安装和加载：</source>
        <target state="needs-translation">对于社区插件，使用类似的方式安装和加载：</target>
      </trans-unit>
      <trans-unit id="55772">
        <source>code</source>
        <target state="needs-translation">code</target>
      </trans-unit>
      <trans-unit id="55774">
        <source># 以 puppeteer 和 forward 插件为例
npm i koishi-plugin-puppeteer koishi-plugin-forward</source>
        <target state="needs-translation"># 以 puppeteer 和 forward 插件为例
npm i koishi-plugin-puppeteer koishi-plugin-forward</target>
      </trans-unit>
      <trans-unit id="55776">
        <source># 以 puppeteer 和 forward 插件为例
yarn add koishi-plugin-puppeteer koishi-plugin-forward</source>
        <target state="needs-translation"># 以 puppeteer 和 forward 插件为例
yarn add koishi-plugin-puppeteer koishi-plugin-forward</target>
      </trans-unit>
      <trans-unit id="55778">
        <source>import puppeteer from 'koishi-plugin-puppeteer'
import * as forward from 'koishi-plugin-forward'

ctx.plugin(puppeteer)   // 浏览器服务
ctx.plugin(forward)     // 消息转发</source>
        <target state="needs-translation">import puppeteer from 'koishi-plugin-puppeteer'
import * as forward from 'koishi-plugin-forward'

ctx.plugin(puppeteer)   // 浏览器服务
ctx.plugin(forward)     // 消息转发</target>
      </trans-unit>
      <trans-unit id="55780">
        <source>请注意到上面的两个插件的导入方式的微妙差异。</source>
        <target state="needs-translation">请注意到上面的两个插件的导入方式的微妙差异。</target>
      </trans-unit>
      <trans-unit id="55782">
        <source>puppeteer 插件使用了默认导出，而 forward 插件使用了导出的命名空间。</source>
        <target state="needs-translation">puppeteer 插件使用了默认导出，而 forward 插件使用了导出的命名空间。</target>
      </trans-unit>
      <trans-unit id="55784">
        <source>这两种写法存在本质的区别，不能混用，因此你需要自行判断每个插件属于哪一种情况。</source>
        <target state="needs-translation">这两种写法存在本质的区别，不能混用，因此你需要自行判断每个插件属于哪一种情况。</target>
      </trans-unit>
      <trans-unit id="55786">
        <source>虽然这可能产生一些困扰，但如果你是 TypeScript 用户，在类型提示的帮助下，判断一个插件属于哪一种情况是很轻松的。</source>
        <target state="needs-translation">虽然这可能产生一些困扰，但如果你是 TypeScript 用户，在类型提示的帮助下，判断一个插件属于哪一种情况是很轻松的。</target>
      </trans-unit>
      <trans-unit id="55788">
        <source>同理，对于 commonjs 的使用者，如果要使用 `require` 来获取插件对象，也应注意到这种区别：</source>
        <target state="needs-translation">同理，对于 commonjs 的使用者，如果要使用 `require` 来获取插件对象，也应注意到这种区别：</target>
      </trans-unit>
      <trans-unit id="55790">
        <source>// 这里的 .default 是不可省略的
ctx.plugin(require('koishi-plugin-puppeteer').default)

// 这里则不能写上 .default
ctx.plugin(require('koishi-plugin-forward'))</source>
        <target state="needs-translation">// 这里的 .default 是不可省略的
ctx.plugin(require('koishi-plugin-puppeteer').default)

// 这里则不能写上 .default
ctx.plugin(require('koishi-plugin-forward'))</target>
      </trans-unit>
      <trans-unit id="55792">
        <source>使用其他安装方式的用户不需要关心这些细节，因为模板项目已经帮你处理好了。</source>
        <target state="needs-translation">使用其他安装方式的用户不需要关心这些细节，因为模板项目已经帮你处理好了。</target>
      </trans-unit>
      <trans-unit id="55794">
        <source>添加交互逻辑</source>
        <target state="needs-translation">添加交互逻辑</target>
      </trans-unit>
      <trans-unit id="55796">
        <source>除了使用发布在 npm 上的插件，我们还可以添加自己的交互逻辑：</source>
        <target state="needs-translation">除了使用发布在 npm 上的插件，我们还可以添加自己的交互逻辑：</target>
      </trans-unit>
      <trans-unit id="55798">
        <source>// 如果收到“天王盖地虎”，就回应“宝塔镇河妖”
ctx.on('message', (session) =&gt; {
  if (session.content === '天王盖地虎') {
    session.send('宝塔镇河妖')
  }
})</source>
        <target state="needs-translation">// 如果收到“天王盖地虎”，就回应“宝塔镇河妖”
ctx.on('message', (session) =&gt; {
  if (session.content === '天王盖地虎') {
    session.send('宝塔镇河妖')
  }
})</target>
      </trans-unit>
      <trans-unit id="55800">
        <source>然后重新运行你的项目：</source>
        <target state="needs-translation">然后重新运行你的项目：</target>
      </trans-unit>
      <trans-unit id="55802">
        <source>天王盖地虎</source>
        <target state="needs-translation">天王盖地虎</target>
      </trans-unit>
      <trans-unit id="55804">
        <source>宝塔镇河妖</source>
        <target state="needs-translation">宝塔镇河妖</target>
      </trans-unit>
      <trans-unit id="55806">
        <source>不过这样写可能并不好，因为一旦功能变多，你的 `index.ts` 就会变得臃肿。</source>
        <target state="needs-translation">不过这样写可能并不好，因为一旦功能变多，你的 `index.ts` 就会变得臃肿。</target>
      </trans-unit>
      <trans-unit id="55808">
        <source>可以将上面的逻辑写在一个单独的文件 `ping.ts` 里，并将它作为一个插件来加载：</source>
        <target state="needs-translation">可以将上面的逻辑写在一个单独的文件 `ping.ts` 里，并将它作为一个插件来加载：</target>
      </trans-unit>
      <trans-unit id="55810">
        <source>import { Context } from 'koishi'

export const name = 'ping'

export function apply(ctx: Context) {
  // 如果收到“天王盖地虎”，就回应“宝塔镇河妖”
  ctx.on('message', (session) =&gt; {
    if (session.content === '天王盖地虎') {
      session.send('宝塔镇河妖')
    }
  })
}</source>
        <target state="needs-translation">import { Context } from 'koishi'

export const name = 'ping'

export function apply(ctx: Context) {
  // 如果收到“天王盖地虎”，就回应“宝塔镇河妖”
  ctx.on('message', (session) =&gt; {
    if (session.content === '天王盖地虎') {
      session.send('宝塔镇河妖')
    }
  })
}</target>
      </trans-unit>
      <trans-unit id="55812">
        <source>// 这里的 ./ping 是相对于 index.ts 的路径
import * as ping from './ping'

ctx.plugin(ping)</source>
        <target state="needs-translation">// 这里的 ./ping 是相对于 index.ts 的路径
import * as ping from './ping'

ctx.plugin(ping)</target>
      </trans-unit>
      <trans-unit id="55814">
        <source>接下来……</source>
        <target state="needs-translation">接下来……</target>
      </trans-unit>
      <trans-unit id="55816">
        <source>恭喜你已经掌握了 Koishi 的基本用法！</source>
        <target state="needs-translation">恭喜你已经掌握了 Koishi 的基本用法！</target>
      </trans-unit>
      <trans-unit id="55818">
        <source>接下来让我们前往 [开发指南](../../guide/)，学习更多的 Koishi 知识。</source>
        <target state="needs-translation">接下来让我们前往 [开发指南](../../guide/)，学习更多的 Koishi 知识。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1622" original="/[koishijs.docs] main/zh-CN/manual/starter/docker.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="55820">
        <source>选择安装方式</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">選擇安裝方式</target>
      </trans-unit>
      <trans-unit id="55822">
        <source>/zh-CN/manual/starter/</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">/zh-TW/manual/starter/</target>
      </trans-unit>
      <trans-unit id="55824">
        <source>安装和配置插件</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">安裝和配置外掛</target>
      </trans-unit>
      <trans-unit id="55826">
        <source>/zh-CN/manual/usage/market.html</source>
        <target state="needs-translation">/zh-CN/manual/usage/market.html</target>
      </trans-unit>
      <trans-unit id="55828">
        <source>在容器中使用</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">在容器中使用</target>
      </trans-unit>
      <trans-unit id="55830">
        <source>Docker 等容器化软件是以服务生产环境而开发的应用平台，在使用此类软件部署之时，我们相信你已经掌握了运维一台服务器所必须的知识，同时也理解了容器化的概念与相关软件的基础操作。</source>
        <target state="needs-translation">Docker 等容器化软件是以服务生产环境而开发的应用平台，在使用此类软件部署之时，我们相信你已经掌握了运维一台服务器所必须的知识，同时也理解了容器化的概念与相关软件的基础操作。</target>
      </trans-unit>
      <trans-unit id="55832">
        <source>如若不然，在除路由器或 NAS 等特殊环境外，请 [选择其他安装方式](./index.md)。</source>
        <target state="needs-translation">如若不然，在除路由器或 NAS 等特殊环境外，请 [选择其他安装方式](./index.md)。</target>
      </trans-unit>
      <trans-unit id="55834">
        <source>Koishi 提供了 [Docker](https://hub.docker.com/r/koishijs/koishi) 镜像，方便你在容器中运行 Koishi。</source>
        <target state="needs-translation">Koishi 提供了 [Docker](https://hub.docker.com/r/koishijs/koishi) 镜像，方便你在容器中运行 Koishi。</target>
      </trans-unit>
      <trans-unit id="55836">
        <source>你需要首先安装 [Podman](https://podman.io) 或 [Docker](https://www.docker.com) 来运行容器。</source>
        <target state="needs-translation">你需要首先安装 [Podman](https://podman.io) 或 [Docker](https://www.docker.com) 来运行容器。</target>
      </trans-unit>
      <trans-unit id="55838">
        <source>启动容器</source>
        <target state="needs-translation">启动容器</target>
      </trans-unit>
      <trans-unit id="55840">
        <source>使用以下命令启动容器：</source>
        <target state="needs-translation">使用以下命令启动容器：</target>
      </trans-unit>
      <trans-unit id="55842">
        <source>code</source>
        <target state="needs-translation">code</target>
      </trans-unit>
      <trans-unit id="55844">
        <source>podman run -p 5140:5140 koishijs/koishi</source>
        <target state="needs-translation">podman run -p 5140:5140 koishijs/koishi</target>
      </trans-unit>
      <trans-unit id="55846">
        <source>docker run -p 5140:5140 koishijs/koishi</source>
        <target state="needs-translation">docker run -p 5140:5140 koishijs/koishi</target>
      </trans-unit>
      <trans-unit id="55848">
        <source>许多插件依赖 [koishi-plugin-puppeteer](https://www.npmjs.com/package/koishi-plugin-puppeteer) 来进行图片渲染，故默认镜像中包含 Chromium。</source>
        <target state="needs-translation">许多插件依赖 [koishi-plugin-puppeteer](https://www.npmjs.com/package/koishi-plugin-puppeteer) 来进行图片渲染，故默认镜像中包含 Chromium。</target>
      </trans-unit>
      <trans-unit id="55850">
        <source>如果你认为镜像过大，不需要预装 Chromium，我们也提供了轻量版本：</source>
        <target state="needs-translation">如果你认为镜像过大，不需要预装 Chromium，我们也提供了轻量版本：</target>
      </trans-unit>
      <trans-unit id="55852">
        <source>code</source>
        <target state="needs-translation">code</target>
      </trans-unit>
      <trans-unit id="55854">
        <source>podman run -p 5140:5140 koishijs/koishi:latest-lite</source>
        <target state="needs-translation">podman run -p 5140:5140 koishijs/koishi:latest-lite</target>
      </trans-unit>
      <trans-unit id="55856">
        <source>docker run -p 5140:5140 koishijs/koishi:latest-lite</source>
        <target state="needs-translation">docker run -p 5140:5140 koishijs/koishi:latest-lite</target>
      </trans-unit>
      <trans-unit id="55858">
        <source>启动后将会绑定 Koishi 控制台到 5140 端口。</source>
        <target state="needs-translation">启动后将会绑定 Koishi 控制台到 5140 端口。</target>
      </trans-unit>
      <trans-unit id="55860">
        <source>如果你需要持久化，请使用 `-v /some/place:/koishi` 来映射 Koishi 的文件。</source>
        <target state="needs-translation">如果你需要持久化，请使用 `-v /some/place:/koishi` 来映射 Koishi 的文件。</target>
      </trans-unit>
      <trans-unit id="55862">
        <source>如果需要更正时区，请使用 `-e TZ=Asia/Shanghai` 来设置时区。</source>
        <target state="needs-translation">如果需要更正时区，请使用 `-e TZ=Asia/Shanghai` 来设置时区。</target>
      </trans-unit>
      <trans-unit id="55864">
        <source>Koishi 本体及其插件都可以控制台完成更新。</source>
        <target state="needs-translation">Koishi 本体及其插件都可以控制台完成更新。</target>
      </trans-unit>
      <trans-unit id="55866">
        <source>在持久化文件过后更新容器仅会更新 Chromium 和 Node.js 等的版本。</source>
        <target state="needs-translation">在持久化文件过后更新容器仅会更新 Chromium 和 Node.js 等的版本。</target>
      </trans-unit>
      <trans-unit id="55868">
        <source>安装插件</source>
        <target state="translated">安裝外掛程式</target>
      </trans-unit>
      <trans-unit id="55870">
        <source>在容器运行时，可以通过在浏览器中访问 `http://宿主机地址:5140` 在控制台中安装和启用插件。</source>
        <target state="needs-translation">在容器运行时，可以通过在浏览器中访问 `http://宿主机地址:5140` 在控制台中安装和启用插件。</target>
      </trans-unit>
      <trans-unit id="55872">
        <source>若无法访问请检查你的防火墙配置是否正确。</source>
        <target state="needs-translation">若无法访问请检查你的防火墙配置是否正确。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1624" original="/[koishijs.docs] main/zh-CN/manual/starter/index.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="55874">
        <source>starter</source>
        <target state="needs-translation">starter</target>
      </trans-unit>
      <trans-unit id="55876">
        <source>我使用 Koishi……</source>
        <target state="needs-translation">我使用 Koishi……</target>
      </trans-unit>
      <trans-unit id="55878">
        <source>用于搭建机器人服务</source>
        <target state="needs-translation">用于搭建机器人服务</target>
      </trans-unit>
      <trans-unit id="55880">
        <source>我的运行环境是……</source>
        <target state="needs-translation">我的运行环境是……</target>
      </trans-unit>
      <trans-unit id="55882">
        <source>Windows</source>
        <target state="needs-translation">Windows</target>
      </trans-unit>
      <trans-unit id="55884">
        <source>/zh-CN/manual/starter/windows.html</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">/zh-TW/manual/starter/windows.html</target>
      </trans-unit>
      <trans-unit id="55886">
        <source>macOS</source>
        <target state="needs-translation">macOS</target>
      </trans-unit>
      <trans-unit id="55888">
        <source>/zh-CN/manual/starter/macos.html</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">/zh-TW/manual/starter/macos.html</target>
      </trans-unit>
      <trans-unit id="55890">
        <source>Linux</source>
        <target state="needs-translation">Linux</target>
      </trans-unit>
      <trans-unit id="55892">
        <source>/zh-CN/manual/starter/linux.html</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">/zh-TW/manual/starter/linux.html</target>
      </trans-unit>
      <trans-unit id="55894">
        <source>Android</source>
        <target state="needs-translation">Android</target>
      </trans-unit>
      <trans-unit id="55896">
        <source>/zh-CN/manual/starter/android.html</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">/zh-TW/manual/starter/android.html</target>
      </trans-unit>
      <trans-unit id="55898">
        <source>Docker</source>
        <target state="needs-translation">Docker</target>
      </trans-unit>
      <trans-unit id="55900">
        <source>/zh-CN/manual/starter/docker.html</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">/zh-TW/manual/starter/docker.html</target>
      </trans-unit>
      <trans-unit id="55902">
        <source>用于开发</source>
        <target state="needs-translation">用于开发</target>
      </trans-unit>
      <trans-unit id="55904">
        <source>我希望 Koishi 作为……</source>
        <target state="needs-translation">我希望 Koishi 作为……</target>
      </trans-unit>
      <trans-unit id="55906">
        <source>一个独立的项目</source>
        <target state="needs-translation">一个独立的项目</target>
      </trans-unit>
      <trans-unit id="55908">
        <source>/zh-CN/manual/starter/boilerplate.html</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">/zh-TW/manual/starter/boilerplate.html</target>
      </trans-unit>
      <trans-unit id="55910">
        <source>其他项目的依赖</source>
        <target state="needs-translation">其他项目的依赖</target>
      </trans-unit>
      <trans-unit id="55912">
        <source>/zh-CN/manual/starter/direct.html</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">/zh-TW/manual/starter/direct.html</target>
      </trans-unit>
      <trans-unit id="55914">
        <source>选择安装方式</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">選擇安裝方式</target>
      </trans-unit>
      <trans-unit id="55916">
        <source>Koishi 提供了多种安装方式，你可以根据自己的需求选择：</source>
        <target state="needs-translation">Koishi 提供了多种安装方式，你可以根据自己的需求选择：</target>
      </trans-unit>
    </body>
  </file>
  <file id="1626" original="/[koishijs.docs] main/zh-CN/manual/starter/linux.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="55918">
        <source>选择安装方式</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">選擇安裝方式</target>
      </trans-unit>
      <trans-unit id="55920">
        <source>/zh-CN/manual/starter/</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">/zh-TW/manual/starter/</target>
      </trans-unit>
      <trans-unit id="55922">
        <source>安装和配置插件</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">安裝和配置外掛</target>
      </trans-unit>
      <trans-unit id="55924">
        <source>/zh-CN/manual/usage/market.html</source>
        <target state="needs-translation">/zh-CN/manual/usage/market.html</target>
      </trans-unit>
      <trans-unit id="55926">
        <source>为 Linux 安装</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">為 Linux 安裝</target>
      </trans-unit>
      <trans-unit id="55928">
        <source>如果想了解其他安装方式，请移步 [选择安装方式](./index.md)。</source>
        <target state="needs-translation">如果想了解其他安装方式，请移步 [选择安装方式](./index.md)。</target>
      </trans-unit>
      <trans-unit id="55930">
        <source>下载</source>
        <target state="needs-translation">下载</target>
      </trans-unit>
      <trans-unit id="55932">
        <source>[AppImage (.AppImage)](https://k.ilharp.cc/linux.AppImage)</source>
        <target state="needs-translation">[AppImage (.AppImage)](https://k.ilharp.cc/linux.AppImage)</target>
      </trans-unit>
      <trans-unit id="55934">
        <source>[查看更多版本](https://github.com/koishijs/koishi-desktop/releases)</source>
        <target state="needs-translation">[查看更多版本](https://github.com/koishijs/koishi-desktop/releases)</target>
      </trans-unit>
      <trans-unit id="55936">
        <source>启动</source>
        <target state="needs-translation">启动</target>
      </trans-unit>
      <trans-unit id="55938">
        <source>启动你刚刚下载的程序，你应当可以在 `http://localhost:5140` 访问 Koishi 的网页控制台。</source>
        <target state="needs-translation">启动你刚刚下载的程序，你应当可以在 `http://localhost:5140` 访问 Koishi 的网页控制台。</target>
      </trans-unit>
      <trans-unit id="55940">
        <source>其他选择</source>
        <target state="needs-translation">其他选择</target>
      </trans-unit>
      <trans-unit id="55942">
        <source>找不到适合你的安装包？</source>
        <target state="needs-translation">找不到适合你的安装包？</target>
      </trans-unit>
      <trans-unit id="55944">
        <source>你仍然可以选择 [在容器中使用](./docker.md) 或 [创建模板项目](./boilerplate.md)。</source>
        <target state="needs-translation">你仍然可以选择 [在容器中使用](./docker.md) 或 [创建模板项目](./boilerplate.md)。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1628" original="/[koishijs.docs] main/zh-CN/manual/starter/macos.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="55946">
        <source>选择安装方式</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">選擇安裝方式</target>
      </trans-unit>
      <trans-unit id="55948">
        <source>/zh-CN/manual/starter/</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">/zh-TW/manual/starter/</target>
      </trans-unit>
      <trans-unit id="55950">
        <source>安装和配置插件</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">安裝和配置外掛</target>
      </trans-unit>
      <trans-unit id="55952">
        <source>/zh-CN/manual/usage/market.html</source>
        <target state="needs-translation">/zh-CN/manual/usage/market.html</target>
      </trans-unit>
      <trans-unit id="55954">
        <source>为 macOS 安装</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">為 macOS 安裝</target>
      </trans-unit>
      <trans-unit id="55956">
        <source>如果想了解其他安装方式，请移步 [选择安装方式](./index.md)。</source>
        <target state="needs-translation">如果想了解其他安装方式，请移步 [选择安装方式](./index.md)。</target>
      </trans-unit>
      <trans-unit id="55958">
        <source>下载</source>
        <target state="needs-translation">下载</target>
      </trans-unit>
      <trans-unit id="55960">
        <source>[安装包 (.pkg)](https://k.ilharp.cc/osx.pkg)</source>
        <target state="needs-translation">[安装包 (.pkg)](https://k.ilharp.cc/osx.pkg)</target>
      </trans-unit>
      <trans-unit id="55962">
        <source>[查看更多版本](https://github.com/koishijs/koishi-desktop/releases)</source>
        <target state="needs-translation">[查看更多版本](https://github.com/koishijs/koishi-desktop/releases)</target>
      </trans-unit>
      <trans-unit id="55964">
        <source>安装</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">安裝</target>
      </trans-unit>
      <trans-unit id="55966">
        <source>通过安装包安装 Koishi 是最推荐的安装方式，安装程序会自动处理大部分问题。</source>
        <target state="needs-translation">通过安装包安装 Koishi 是最推荐的安装方式，安装程序会自动处理大部分问题。</target>
      </trans-unit>
      <trans-unit id="55968">
        <source>一般情况下你都应该选择这种方式。</source>
        <target state="needs-translation">一般情况下你都应该选择这种方式。</target>
      </trans-unit>
      <trans-unit id="55970">
        <source>启动</source>
        <target state="needs-translation">启动</target>
      </trans-unit>
      <trans-unit id="55972">
        <source>安装完成后，点击 Koishi 图标即可启动。</source>
        <target state="needs-translation">安装完成后，点击 Koishi 图标即可启动。</target>
      </trans-unit>
      <trans-unit id="55974">
        <source>等待几秒钟，Koishi 控制台将会被打开，现在你可以开始使用 Koishi 了。</source>
        <target state="needs-translation">等待几秒钟，Koishi 控制台将会被打开，现在你可以开始使用 Koishi 了。</target>
      </trans-unit>
      <trans-unit id="55976">
        <source>其他选择</source>
        <target state="needs-translation">其他选择</target>
      </trans-unit>
      <trans-unit id="55978">
        <source>找不到适合你的安装包？</source>
        <target state="needs-translation">找不到适合你的安装包？</target>
      </trans-unit>
      <trans-unit id="55980">
        <source>你仍然可以选择 [在容器中使用](./docker.md) 或 [创建模板项目](./boilerplate.md)。</source>
        <target state="needs-translation">你仍然可以选择 [在容器中使用](./docker.md) 或 [创建模板项目](./boilerplate.md)。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1630" original="/[koishijs.docs] main/zh-CN/manual/starter/windows.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="55982">
        <source>选择安装方式</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">選擇安裝方式</target>
      </trans-unit>
      <trans-unit id="55984" translate="no">
        <source>/zh-CN/manual/starter/</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">/zh-TW/manual/starter/</target>
      </trans-unit>
      <trans-unit id="55986">
        <source>安装和配置插件</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">安裝和配置外掛</target>
      </trans-unit>
      <trans-unit id="55988" translate="no">
        <source>/zh-CN/manual/usage/market.html</source>
        <target>/zh-CN/manual/usage/market.html</target>
      </trans-unit>
      <trans-unit id="55990">
        <source>为 Windows 安装</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">為 Windows 安裝</target>
      </trans-unit>
      <trans-unit id="55992">
        <source>如果想了解其他安装方式，请移步 [选择安装方式](./index.md)。</source>
        <target state="translated">如果想瞭解其他安裝方式，請移步 [選擇安裝方式](./index.m)。</target>
      </trans-unit>
      <trans-unit id="55994">
        <source>下载</source>
        <target state="translated">下載</target>
      </trans-unit>
      <trans-unit id="55996">
        <source>[安装包 (.msi)](https://k.ilharp.cc/win.msi)</source>
        <target state="translated">[安裝包 (.msi)](https://k.ilharp.cc/win.msi)</target>
      </trans-unit>
      <trans-unit id="55998">
        <source>[查看更多版本](https://github.com/koishijs/koishi-desktop/releases)</source>
        <target state="translated">[查看更多版本](https://github.com/koishijs/koishi-desktop/releases)</target>
      </trans-unit>
      <trans-unit id="56000">
        <source>安装</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">安裝</target>
      </trans-unit>
      <trans-unit id="56002">
        <source>通过安装包安装 Koishi 是最推荐的安装方式，安装程序会自动处理大部分问题。</source>
        <target state="translated">通過安裝包安裝 Koishi 是最推薦的安裝方式，安裝程式會自動處理大部分問題。</target>
      </trans-unit>
      <trans-unit id="56004">
        <source>一般情况下你都应该选择这种方式。</source>
        <target state="translated">一般情況下你都應該選擇這種方式。</target>
      </trans-unit>
      <trans-unit id="56006" translate="no">
        <source>![msi-installer](/manual/windows/msi-installer-dark.webp) {.dark-only}</source>
        <target>![msi-installer](/manual/windows/msi-installer-dark.webp) {.dark-only}</target>
      </trans-unit>
      <trans-unit id="56008" translate="no">
        <source>![msi-installer](/manual/windows/msi-installer-light.webp) {.light-only}</source>
        <target>![msi-installer](/manual/windows/msi-installer-light.webp) {.light-only}</target>
      </trans-unit>
      <trans-unit id="56010">
        <source>双击安装包并一路点按「Next」，等待安装过程结束，你便可以在「开始」菜单中找到 Koishi 了。</source>
        <target state="translated">按兩下安裝包並一路點按「Next」，等待安裝過程結束，你便可以在「開始」功能表中找到 Koishi 了。</target>
      </trans-unit>
      <trans-unit id="56012">
        <source>安装流程在部分电脑上这可能会花费 10 分钟以上的时间，请耐心等待。</source>
        <target state="translated">安裝流程在部分電腦上這可能會花費 10 分鐘以上的時間，請耐心等待。</target>
      </trans-unit>
      <trans-unit id="56014">
        <source>启动</source>
        <target state="translated">啟動</target>
      </trans-unit>
      <trans-unit id="56016" translate="no">
        <source>![start-menu](/manual/windows/start-menu-dark.webp) {.dark-only}</source>
        <target>![start-menu](/manual/windows/start-menu-dark.webp) {.dark-only}</target>
      </trans-unit>
      <trans-unit id="56018" translate="no">
        <source>![start-menu](/manual/windows/start-menu-light.webp) {.light-only}</source>
        <target>![start-menu](/manual/windows/start-menu-light.webp) {.light-only}</target>
      </trans-unit>
      <trans-unit id="56020">
        <source>安装完成后，点击 Koishi 图标即可启动。</source>
        <target state="translated">安裝完成後，點擊 Koishi 圖示即可啟動。</target>
      </trans-unit>
      <trans-unit id="56022">
        <source>等待几秒钟，Koishi 控制台将会被打开，现在你可以开始使用 Koishi 了。</source>
        <target state="translated">等待幾秒鐘，Koishi 控制台將會被打開，現在你可以開始使用 Koishi 了。</target>
      </trans-unit>
      <trans-unit id="56024">
        <source>其他选择</source>
        <target state="translated">其他選擇</target>
      </trans-unit>
      <trans-unit id="56026">
        <source>找不到适合你的安装包？</source>
        <target state="translated">找不到適合你的安裝包？</target>
      </trans-unit>
      <trans-unit id="56028">
        <source>你仍然可以选择 [在容器中使用](./docker.md) 或 [创建模板项目](./boilerplate.md)。</source>
        <target state="translated">你仍然可以選擇 [在容器中使用](./docker.md) 或 [創建範本專案](./boilerplate.md)。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1632" original="/[koishijs.docs] main/zh-CN/manual/usage/adapter.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="56030">
        <source>第一次对话</source>
        <target state="needs-translation">第一次对话</target>
      </trans-unit>
      <trans-unit id="56032">
        <source>安装完了 Koishi 并体验了插件市场，想必你已经等不及体验 Koishi 的功能了。</source>
        <target state="needs-translation">安装完了 Koishi 并体验了插件市场，想必你已经等不及体验 Koishi 的功能了。</target>
      </trans-unit>
      <trans-unit id="56034">
        <source>现在就让我们立即开始与机器人的第一次对话吧！</source>
        <target state="needs-translation">现在就让我们立即开始与机器人的第一次对话吧！</target>
      </trans-unit>
      <trans-unit id="56036">
        <source>在沙盒中模拟对话</source>
        <target state="needs-translation">在沙盒中模拟对话</target>
      </trans-unit>
      <trans-unit id="56038">
        <source>在控制台中前往「沙盒」页面，在这里我们可以模拟与机器人的对话。</source>
        <target state="needs-translation">在控制台中前往「沙盒」页面，在这里我们可以模拟与机器人的对话。</target>
      </trans-unit>
      <trans-unit id="56040">
        <source>首先点击屏幕左上角的「添加用户」来创建一个虚拟用户 (通常第一位虚拟用户的名字会是 Alice)，此时屏幕右侧会出现空白的聊天界面。</source>
        <target state="needs-translation">首先点击屏幕左上角的「添加用户」来创建一个虚拟用户 (通常第一位虚拟用户的名字会是 Alice)，此时屏幕右侧会出现空白的聊天界面。</target>
      </trans-unit>
      <trans-unit id="56042">
        <source>点击屏幕下方的对话框，输入「help」，并按回车键发送。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">點選螢幕下方的對話方塊，輸入「help」，並按回車鍵傳送。</target>
      </trans-unit>
      <trans-unit id="56044">
        <source>你会立即在聊天界面中看到机器人的回复，列出了包括 `echo` 和 `help` 在内的所有可用的指令，这便是 `help` 这个内置指令的功能。</source>
        <target state="needs-translation">你会立即在聊天界面中看到机器人的回复，列出了包括 `echo` 和 `help` 在内的所有可用的指令，这便是 `help` 这个内置指令的功能。</target>
      </trans-unit>
      <trans-unit id="56046">
        <source>可以看到，这里的 `echo` 就是我们刚刚安装的插件，它的功能是将用户的输入原样返回。</source>
        <target state="needs-translation">可以看到，这里的 `echo` 就是我们刚刚安装的插件，它的功能是将用户的输入原样返回。</target>
      </trans-unit>
      <trans-unit id="56048">
        <source>让我们现在尝试一下：输入「echo 你好」，并按回车键发送。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">讓我們現在嘗試一下：輸入「echo 你好」，並按回車鍵傳送。</target>
      </trans-unit>
      <trans-unit id="56050">
        <source>你会看到机器人的回复是「你好」。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">你會看到機器人的回覆是「你好」。</target>
      </trans-unit>
      <trans-unit id="56052" translate="no">
        <source>![sandbox](/manual/console/sandbox.light.webp) {.light-only}</source>
        <target>![sandbox](/manual/console/sandbox.light.webp) {.light-only}</target>
      </trans-unit>
      <trans-unit id="56054" translate="no">
        <source>![sandbox](/manual/console/sandbox.dark.webp) {.dark-only}</source>
        <target>![sandbox](/manual/console/sandbox.dark.webp) {.dark-only}</target>
      </trans-unit>
      <trans-unit id="56056">
        <source>如果想要模拟群聊，我们可以创建更多的用户，并在聊天界面顶部点击切换到「群聊模式」。</source>
        <target state="needs-translation">如果想要模拟群聊，我们可以创建更多的用户，并在聊天界面顶部点击切换到「群聊模式」。</target>
      </trans-unit>
      <trans-unit id="56058">
        <source>这样，你就可以通过在左侧栏切换并控制多个虚拟用户与机器人聊天了。</source>
        <target state="needs-translation">这样，你就可以通过在左侧栏切换并控制多个虚拟用户与机器人聊天了。</target>
      </trans-unit>
      <trans-unit id="56060">
        <source>如果你要体验的是下棋一类的多人交互插件，这会非常有用。</source>
        <target state="needs-translation">如果你要体验的是下棋一类的多人交互插件，这会非常有用。</target>
      </trans-unit>
      <trans-unit id="56062">
        <source>除此以外，如果某些指令需要一定的 [权限等级](../usage/customize.md#权限管理)，你也可以切换到「用户设置」中进行调整。</source>
        <target state="needs-translation">除此以外，如果某些指令需要一定的 [权限等级](../usage/customize.md#权限管理)，你也可以切换到「用户设置」中进行调整。</target>
      </trans-unit>
      <trans-unit id="56064">
        <source>接入真实聊天平台</source>
        <target state="needs-translation">接入真实聊天平台</target>
      </trans-unit>
      <trans-unit id="56066">
        <source>仅仅是在沙盒中对话是远远不够的。</source>
        <target state="needs-translation">仅仅是在沙盒中对话是远远不够的。</target>
      </trans-unit>
      <trans-unit id="56068">
        <source>我们需要将机器人接入到真实的聊天平台中，才能让它真正地为我们服务。</source>
        <target state="needs-translation">我们需要将机器人接入到真实的聊天平台中，才能让它真正地为我们服务。</target>
      </trans-unit>
      <trans-unit id="56070">
        <source>Koishi 使用适配器插件来支持各种聊天平台。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">Koishi 使用適配器插件來支持各種聊天平臺。</target>
      </trans-unit>
      <trans-unit id="56072">
        <source>下面是官方维护的适配器列表：</source>
        <target state="needs-translation">下面是官方维护的适配器列表：</target>
      </trans-unit>
      <trans-unit id="56074">
        <source>[钉钉](../../plugins/adapter/dingtalk.md)</source>
        <target state="needs-translation">[钉钉](../../plugins/adapter/dingtalk.md)</target>
      </trans-unit>
      <trans-unit id="56076">
        <source>[Discord](../../plugins/adapter/discord.md)</source>
        <target state="needs-translation">[Discord](../../plugins/adapter/discord.md)</target>
      </trans-unit>
      <trans-unit id="56078">
        <source>[KOOK](../../plugins/adapter/kook.md)</source>
        <target state="needs-translation">[KOOK](../../plugins/adapter/kook.md)</target>
      </trans-unit>
      <trans-unit id="56080">
        <source>[飞书](../../plugins/adapter/lark.md)</source>
        <target state="needs-translation">[飞书](../../plugins/adapter/lark.md)</target>
      </trans-unit>
      <trans-unit id="56082">
        <source>[LINE](../../plugins/adapter/line.md)</source>
        <target state="needs-translation">[LINE](../../plugins/adapter/line.md)</target>
      </trans-unit>
      <trans-unit id="56084">
        <source>[邮件](../../plugins/adapter/mail.md)</source>
        <target state="needs-translation">[邮件](../../plugins/adapter/mail.md)</target>
      </trans-unit>
      <trans-unit id="56086">
        <source>[Matrix](../../plugins/adapter/matrix.md)</source>
        <target state="needs-translation">[Matrix](../../plugins/adapter/matrix.md)</target>
      </trans-unit>
      <trans-unit id="56088">
        <source>[QQ](../../plugins/adapter/qq.md)</source>
        <target state="needs-translation">[QQ](../../plugins/adapter/qq.md)</target>
      </trans-unit>
      <trans-unit id="56090">
        <source>[Slack](../../plugins/adapter/slack.md)</source>
        <target state="needs-translation">[Slack](../../plugins/adapter/slack.md)</target>
      </trans-unit>
      <trans-unit id="56092">
        <source>[Telegram](../../plugins/adapter/telegram.md)</source>
        <target state="needs-translation">[Telegram](../../plugins/adapter/telegram.md)</target>
      </trans-unit>
      <trans-unit id="56094">
        <source>[微信公众号](../../plugins/adapter/wechat-official.md)</source>
        <target state="needs-translation">[微信公众号](../../plugins/adapter/wechat-official.md)</target>
      </trans-unit>
      <trans-unit id="56096">
        <source>[企业微信](../../plugins/adapter/wecom.md)</source>
        <target state="needs-translation">[企业微信](../../plugins/adapter/wecom.md)</target>
      </trans-unit>
      <trans-unit id="56098">
        <source>[WhatsApp](../../plugins/adapter/whatsapp.md)</source>
        <target state="needs-translation">[WhatsApp](../../plugins/adapter/whatsapp.md)</target>
      </trans-unit>
      <trans-unit id="64010">
        <source>[Zulip](../../plugins/adapter/zulip.md)</source>
        <target state="needs-translation">[Zulip](../../plugins/adapter/zulip.md)</target>
      </trans-unit>
      <trans-unit id="56100">
        <source>其中，常用的适配器插件已经预装在了 Koishi 中，你可以在插件配置中的 adapter 分组中找到它们。</source>
        <target state="needs-translation">其中，常用的适配器插件已经预装在了 Koishi 中，你可以在插件配置中的 adapter 分组中找到它们。</target>
      </trans-unit>
      <trans-unit id="56102">
        <source>如果没有看到你想要的平台，你也可以在插件市场中搜索并安装更多适配器插件。</source>
        <target state="needs-translation">如果没有看到你想要的平台，你也可以在插件市场中搜索并安装更多适配器插件。</target>
      </trans-unit>
      <trans-unit id="56104">
        <source>一个 Koishi 应用可以同时接入多个聊天平台的多个账号。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">一個 Koishi 應用可以同時接入多個聊天平臺的多個賬號。</target>
      </trans-unit>
      <trans-unit id="56106">
        <source>每个账号对应一份插件配置，你可以参考 [添加更多插件](./market.md#添加更多插件) 中的方法添加新的插件配置。</source>
        <target state="needs-translation">每个账号对应一份插件配置，你可以参考 [添加更多插件](./market.md#添加更多插件) 中的方法添加新的插件配置。</target>
      </trans-unit>
      <trans-unit id="56108">
        <source>由于同一平台内接入的多个机器人共享了相同的用户数据。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">由於同一平臺內接入的多個機器人共享了相同的用戶數據。</target>
      </trans-unit>
      <trans-unit id="56110">
        <source>因此，你可以非常方便地在多个机器人之间切换以实现负载均衡。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">因此，你可以非常方便地在多個機器人之間切換以實現負載均衡。</target>
      </trans-unit>
      <trans-unit id="56112">
        <source>不同平台的接入方式与难度存在较大的差异。</source>
        <target state="needs-translation">不同平台的接入方式与难度存在较大的差异。</target>
      </trans-unit>
      <trans-unit id="56114">
        <source>对于不同的平台，你需要做好相应的准备工作。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">對於不同的平臺，你需要做好相應的準備工作。</target>
      </trans-unit>
      <trans-unit id="56116">
        <source>这些工作可能包括在平台内注册开发者账号、准备一台部署到公网的服务器等等。</source>
        <target state="needs-translation">这些工作可能包括在平台内注册开发者账号、准备一台部署到公网的服务器等等。</target>
      </trans-unit>
      <trans-unit id="56118">
        <source>你可以在各个适配器插件的文档中找到详细的指引。</source>
        <target state="needs-translation">你可以在各个适配器插件的文档中找到详细的指引。</target>
      </trans-unit>
      <trans-unit id="56120">
        <source>好消息是，Koishi 的大部分功能都不依赖特定的聊天平台。</source>
        <target state="needs-translation">好消息是，Koishi 的大部分功能都不依赖特定的聊天平台。</target>
      </trans-unit>
      <trans-unit id="56122">
        <source>因此在进行准备工作的同时，你完全可以阅读本文档的后续部分，并在沙盒中体验并学习 Koishi 的功能。</source>
        <target state="needs-translation">因此在进行准备工作的同时，你完全可以阅读本文档的后续部分，并在沙盒中体验并学习 Koishi 的功能。</target>
      </trans-unit>
      <trans-unit id="56124">
        <source>对比沙盒与真实环境</source>
        <target state="needs-translation">对比沙盒与真实环境</target>
      </trans-unit>
      <trans-unit id="56126">
        <source>事实上，大多数机器人框架都没有提供沙盒功能，或是倾向于用户在真实环境中进行体验。</source>
        <target state="needs-translation">事实上，大多数机器人框架都没有提供沙盒功能，或是倾向于用户在真实环境中进行体验。</target>
      </trans-unit>
      <trans-unit id="56128">
        <source>你可能会有疑惑：为什么 Koishi 要推荐使用沙盒功能呢？</source>
        <target state="needs-translation">你可能会有疑惑：为什么 Koishi 要推荐使用沙盒功能呢？</target>
      </trans-unit>
      <trans-unit id="56130">
        <source>因此我们列出了沙盒的几点优势。</source>
        <target state="needs-translation">因此我们列出了沙盒的几点优势。</target>
      </trans-unit>
      <trans-unit id="56132">
        <source>首先，沙盒可以让你快速地了解插件的效果，而不需要在真实环境中进行大量的测试。</source>
        <target state="needs-translation">首先，沙盒可以让你快速地了解插件的效果，而不需要在真实环境中进行大量的测试。</target>
      </trans-unit>
      <trans-unit id="56134">
        <source>想象一下，你刚刚安装了一个陌生的插件，你并不知道应该如何使用它，也不知道它的效果是什么。</source>
        <target state="needs-translation">想象一下，你刚刚安装了一个陌生的插件，你并不知道应该如何使用它，也不知道它的效果是什么。</target>
      </trans-unit>
      <trans-unit id="56136">
        <source>最糟糕的情况下，一旦插件的某些功能触发了机器人的敏感行为，你的真实账号还存在被封禁的风险。</source>
        <target state="needs-translation">最糟糕的情况下，一旦插件的某些功能触发了机器人的敏感行为，你的真实账号还存在被封禁的风险。</target>
      </trans-unit>
      <trans-unit id="56138">
        <source>而沙盒则可以让你在不用担心这些问题的情况下，快速地了解插件的功能。</source>
        <target state="needs-translation">而沙盒则可以让你在不用担心这些问题的情况下，快速地了解插件的功能。</target>
      </trans-unit>
      <trans-unit id="56140">
        <source>其次，如果你是插件的开发者而非使用者，沙盒功能的意义则更大了：得益于 Koishi 的热重载机制，每次修改插件源码后，你只需要按下保存，即可立即在沙盒中体验修改后的效果。</source>
        <target state="needs-translation">其次，如果你是插件的开发者而非使用者，沙盒功能的意义则更大了：得益于 Koishi 的热重载机制，每次修改插件源码后，你只需要按下保存，即可立即在沙盒中体验修改后的效果。</target>
      </trans-unit>
      <trans-unit id="56142">
        <source>这允许你在任何设备上进行快速的迭代开发，而根本不需要准备真实环境的账号。</source>
        <target state="needs-translation">这允许你在任何设备上进行快速的迭代开发，而根本不需要准备真实环境的账号。</target>
      </trans-unit>
      <trans-unit id="56144">
        <source>当然，沙盒并不能代替真实的聊天环境，有些插件的效果可能无法在沙盒中体验。</source>
        <target state="needs-translation">当然，沙盒并不能代替真实的聊天环境，有些插件的效果可能无法在沙盒中体验。</target>
      </trans-unit>
      <trans-unit id="56146">
        <source>因此，我们推荐你在沙盒中体验插件的基础功能，而在真实环境中进行更加深入的测试。</source>
        <target state="needs-translation">因此，我们推荐你在沙盒中体验插件的基础功能，而在真实环境中进行更加深入的测试。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1634" original="/[koishijs.docs] main/zh-CN/manual/usage/command.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="56148">
        <source>指令系统</source>
        <target state="translated">指令系統</target>
      </trans-unit>
      <trans-unit id="56150">
        <source>在了解了控制台的基本用法后，我们终于可以开始介绍如何与机器人对话了！</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">在瞭解了控制檯的基本用法後，我們終於可以開始介紹如何與機器人對話了！</target>
      </trans-unit>
      <trans-unit id="56152">
        <source>让我们从上一节中看到的例子开始：</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">讓我們從上一節中看到的例子開始：</target>
      </trans-unit>
      <trans-unit id="56154">
        <source>help</source>
        <target state="needs-translation">help</target>
      </trans-unit>
      <trans-unit id="56156">
        <source>当前可用的指令有：</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">當前可用的指令有：</target>
      </trans-unit>
      <trans-unit id="56158">
        <source>echo  发送消息</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">echo  傳送訊息</target>
      </trans-unit>
      <trans-unit id="56160">
        <source>help  显示帮助信息</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">help  顯示幫助資訊</target>
      </trans-unit>
      <trans-unit id="56162">
        <source>输入“帮助 指令名”查看特定指令的语法和使用示例。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">輸入“幫助 指令名”檢視特定指令的語法和使用示例。</target>
      </trans-unit>
      <trans-unit id="56164">
        <source>这里的输出与两个插件有关：</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">這裡的輸出與兩個外掛有關：</target>
      </trans-unit>
      <trans-unit id="56166">
        <source>help 指令由 [help](../../plugins/common/help.md) 插件提供，它可以显示指令列表或具体指令的帮助信息</source>
        <target state="needs-translation">help 指令由 [help](../../plugins/common/help.md) 插件提供，它可以显示指令列表或具体指令的帮助信息</target>
      </trans-unit>
      <trans-unit id="56168">
        <source>echo 指令由 [echo](../../plugins/common/echo.md) 插件提供，它可以将用户的输入原样返回</source>
        <target state="needs-translation">echo 指令由 [echo](../../plugins/common/echo.md) 插件提供，它可以将用户的输入原样返回</target>
      </trans-unit>
      <trans-unit id="56170">
        <source>一个 Koishi 机器人的绝大部分功能都是通过指令提供给用户的。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">一個 Koishi 機器人的絕大部分功能都是透過指令提供給使用者的。</target>
      </trans-unit>
      <trans-unit id="56172">
        <source>当你安装了更多的插件后，你也就有了更多的指令可供使用。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">當你安裝了更多的外掛後，你也就有了更多的指令可供使用。</target>
      </trans-unit>
      <trans-unit id="56174">
        <source>查看帮助</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">檢視幫助</target>
      </trans-unit>
      <trans-unit id="56176">
        <source>help 指令后还可以添加一个参数，用于查看特定指令的帮助信息：</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">help 指令後還可以新增一個引數，用於檢視特定指令的幫助資訊：</target>
      </trans-unit>
      <trans-unit id="56178">
        <source>help echo</source>
        <target state="needs-translation">help echo</target>
      </trans-unit>
      <trans-unit id="56180">
        <source>指令：echo &amp;lt;message...&gt;</source>
        <target state="needs-translation">指令：echo &amp;lt;message...&gt;</target>
      </trans-unit>
      <trans-unit id="56182">
        <source>发送消息</source>
        <target state="translated">發送消息</target>
      </trans-unit>
      <trans-unit id="56184">
        <source>可用的选项有：</source>
        <target state="translated">可用的選項有：</target>
      </trans-unit>
      <trans-unit id="56186">
        <source>-e, --escape  发送转义消息</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">-e, --escape  傳送轉義訊息</target>
      </trans-unit>
      <trans-unit id="56188">
        <source>-E, --unescape  发送反转义消息</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">-E, --unescape  傳送反轉義訊息</target>
      </trans-unit>
      <trans-unit id="56190">
        <source>那么细心的小伙伴可能会发现，既然 help 本身也是一个指令，那我能不能用来查看 help 自己的帮助信息呢？</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">那麼細心的小夥伴可能會發現，既然 help 本身也是一個指令，那我能不能用來檢視 help 自己的幫助資訊呢？</target>
      </trans-unit>
      <trans-unit id="56192">
        <source>答案是肯定的：</source>
        <target state="needs-translation">答案是肯定的：</target>
      </trans-unit>
      <trans-unit id="56194">
        <source>help help</source>
        <target state="needs-translation">help help</target>
      </trans-unit>
      <trans-unit id="56196">
        <source>指令：help [command]</source>
        <target state="needs-translation">指令：help [command]</target>
      </trans-unit>
      <trans-unit id="56198">
        <source>显示帮助信息</source>
        <target state="translated">顯示幫助信息</target>
      </trans-unit>
      <trans-unit id="56200">
        <source>可用的选项有：</source>
        <target state="translated">可用的選項有：</target>
      </trans-unit>
      <trans-unit id="56202">
        <source>-a, --authority  显示权限设置</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">-a, --authority  顯示許可權設定</target>
      </trans-unit>
      <trans-unit id="56204">
        <source>-H, --show-hidden  查看隐藏的选项和指令</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">-H, --show-hidden  檢視隱藏的選項和指令</target>
      </trans-unit>
      <trans-unit id="56206">
        <source>参数和选项</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">引數和選項</target>
      </trans-unit>
      <trans-unit id="56208">
        <source>在上面的用法中，我们接触到了两个新的概念：**参数 (Argument)** 和 **选项 (Option)**。</source>
        <target state="needs-translation">在上面的用法中，我们接触到了两个新的概念：**参数 (Argument)** 和 **选项 (Option)**。</target>
      </trans-unit>
      <trans-unit id="56210">
        <source>参数分为必选参数和可选参数，分别用尖括号 `&lt;&gt;` 和方括号 `[]` 表示。</source>
        <target state="needs-translation">参数分为必选参数和可选参数，分别用尖括号 `&lt;&gt;` 和方括号 `[]` 表示。</target>
      </trans-unit>
      <trans-unit id="56212">
        <source>一个指令可以有任意多个参数，它们的顺序是固定的，用户必须按照指令定义的顺序来输入参数。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">一個指令可以有任意多個引數，它們的順序是固定的，使用者必須按照指令定義的順序來輸入引數。</target>
      </trans-unit>
      <trans-unit id="56214">
        <source>必选参数一定出现在可选参数之前。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">必選引數一定出現在可選引數之前。</target>
      </trans-unit>
      <trans-unit id="56216">
        <source>如果用户输入的参数数量不足必选参数的个数，那么插件通常会给出错误提示；如果用户输入了额外的参数，那么会被忽略。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">如果使用者輸入的引數數量不足必選引數的個數，那麼外掛通常會給出錯誤提示；如果使用者輸入了額外的引數，那麼會被忽略。</target>
      </trans-unit>
      <trans-unit id="56218">
        <source>例如，help 指令共有一个参数，它是可选参数，表示要查看的指令名；echo 指令也有一个参数，它是必选参数，表示要发送的消息。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">例如，help 指令共有一個引數，它是可選引數，表示要檢視的指令名；echo 指令也有一個引數，它是必選引數，表示要傳送的訊息。</target>
      </trans-unit>
      <trans-unit id="56220">
        <source>让我们看看如果不填必选参数会怎么样：</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">讓我們看看如果不填必選引數會怎麼樣：</target>
      </trans-unit>
      <trans-unit id="56222">
        <source>echo</source>
        <target state="needs-translation">echo</target>
      </trans-unit>
      <trans-unit id="56224">
        <source>请输入要发送的文本。</source>
        <target state="translated">請輸入要發送的文本。</target>
      </trans-unit>
      <trans-unit id="56226">
        <source>选项同样可以控制指令的行为。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">選項同樣可以控制指令的行為。</target>
      </trans-unit>
      <trans-unit id="56228">
        <source>它通常以 `-` 或 `--` 开头，后面不带空格地跟着一个固定的单词，称为选项名称。</source>
        <target state="needs-translation">它通常以 `-` 或 `--` 开头，后面不带空格地跟着一个固定的单词，称为选项名称。</target>
      </trans-unit>
      <trans-unit id="56230">
        <source>选项之间没有顺序要求，但通常建议将选项放在参数之前。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">選項之間沒有順序要求，但通常建議將選項放在引數之前。</target>
      </trans-unit>
      <trans-unit id="56232">
        <source>让我们试试看：</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">讓我們試試看：</target>
      </trans-unit>
      <trans-unit id="56234">
        <source>echo &amp;lt;image url=&quot;https://koishi.chat/logo.png&quot;/&amp;gt;</source>
        <target state="needs-translation">echo &amp;lt;image url=&quot;https://koishi.chat/logo.png&quot;/&amp;gt;</target>
      </trans-unit>
      <trans-unit id="56236">
        <source>&amp;lt;image url=&quot;https://koishi.chat/logo.png&quot;/&amp;gt;</source>
        <target state="needs-translation">&amp;lt;image url=&quot;https://koishi.chat/logo.png&quot;/&amp;gt;</target>
      </trans-unit>
      <trans-unit id="56238">
        <source>echo -E &amp;lt;image url=&quot;https://koishi.chat/logo.png&quot;/&amp;gt;</source>
        <target state="needs-translation">echo -E &amp;lt;image url=&quot;https://koishi.chat/logo.png&quot;/&amp;gt;</target>
      </trans-unit>
      <trans-unit id="56240">
        <source>在上面的例子中，我们使用了 `-E` 选项，成功改变了输出的内容。</source>
        <target state="needs-translation">在上面的例子中，我们使用了 `-E` 选项，成功改变了输出的内容。</target>
      </trans-unit>
      <trans-unit id="56242">
        <source>关于这具体是怎么做到的，我们会在后续的章节中进行介绍。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">關於這具體是怎麼做到的，我們會在後續的章節中進行介紹。</target>
      </trans-unit>
      <trans-unit id="56244">
        <source>参数除了可以分为必选和可选外，还可以分为定长和变长。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">引數除了可以分為必選和可選外，還可以分為定長和變長。</target>
      </trans-unit>
      <trans-unit id="56246">
        <source>定长参数的中不能出现空白字符，而变长参数则可以。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">定長引數的中不能出現空白字元，而變長引數則可以。</target>
      </trans-unit>
      <trans-unit id="56248">
        <source>变长参数通过参数名前后的 `...` 来指示，例如 `echo` 指令的参数就是一个变长参数。</source>
        <target state="needs-translation">变长参数通过参数名前后的 `...` 来指示，例如 `echo` 指令的参数就是一个变长参数。</target>
      </trans-unit>
      <trans-unit id="56250">
        <source>如果要为定长参数传入带有空白字符的内容，可以使用引号将其包裹起来，例如：</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">如果要為定長引數傳入帶有空白字元的內容，可以使用引號將其包裹起來，例如：</target>
      </trans-unit>
      <trans-unit id="56252">
        <source>help &quot;foo bar&quot;</source>
        <target state="needs-translation">help &quot;foo bar&quot;</target>
      </trans-unit>
      <trans-unit id="56254">
        <source>此外，部分选项也可以接受参数。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">此外，部分選項也可以接受引數。</target>
      </trans-unit>
      <trans-unit id="56256">
        <source>例如，当你安装了翻译插件，你将会获得如下的帮助信息：</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">例如，當你安裝了翻譯外掛，你將會獲得如下的幫助資訊：</target>
      </trans-unit>
      <trans-unit id="56258">
        <source>help translate</source>
        <target state="needs-translation">help translate</target>
      </trans-unit>
      <trans-unit id="56260">
        <source>指令：translate &amp;lt;text...&gt;</source>
        <target state="needs-translation">指令：translate &amp;lt;text...&gt;</target>
      </trans-unit>
      <trans-unit id="56262">
        <source>文本翻译</source>
        <target state="translated">文本翻譯</target>
      </trans-unit>
      <trans-unit id="56264">
        <source>可用的选项有：</source>
        <target state="translated">可用的選項有：</target>
      </trans-unit>
      <trans-unit id="56266">
        <source>-s, --source &amp;lt;lang&gt; 源语言 (默认为自动匹配)</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">-s, --source &amp;lt;lang&gt; 源語言 (預設為自動匹配)</target>
      </trans-unit>
      <trans-unit id="56268">
        <source>-t, --target &amp;lt;lang&gt; 目标语言 (默认为中文)</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">-t, --target &amp;lt;lang&gt; 目標語言 (預設為中文)</target>
      </trans-unit>
      <trans-unit id="56270">
        <source>translate -t ja 你好，世界</source>
        <target state="needs-translation">translate -t ja 你好，世界</target>
      </trans-unit>
      <trans-unit id="56272">
        <source>こんにちは世界</source>
        <target state="needs-translation">こんにちは世界</target>
      </trans-unit>
      <trans-unit id="56274">
        <source>在这个例子中，`-s` 和 `-t` 都是带有参数的选项。</source>
        <target state="needs-translation">在这个例子中，`-s` 和 `-t` 都是带有参数的选项。</target>
      </trans-unit>
      <trans-unit id="56276">
        <source>我们使用 `-t ja` 来指定目标语言为日语，源语言仍然采用了默认行为。</source>
        <target state="needs-translation">我们使用 `-t ja` 来指定目标语言为日语，源语言仍然采用了默认行为。</target>
      </trans-unit>
      <trans-unit id="56278">
        <source>触发前缀</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">觸發字首</target>
      </trans-unit>
      <trans-unit id="56280">
        <source>然而，如果仅仅通过一个词就能触发指令，在群聊环境下非常容易出现误触。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">然而，如果僅僅透過一個詞就能觸發指令，在群聊環境下非常容易出現誤觸。</target>
      </trans-unit>
      <trans-unit id="56282">
        <source>为了避免这种情况，Koishi 引入了前缀触发的概念。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">為了避免這種情況，Koishi 引入了字首觸發的概念。</target>
      </trans-unit>
      <trans-unit id="56284">
        <source>在「全局设置」中，我们提供了名为 `prefix` 和 `nickname` 的配置项。</source>
        <target state="needs-translation">在「全局设置」中，我们提供了名为 `prefix` 和 `nickname` 的配置项。</target>
      </trans-unit>
      <trans-unit id="56286">
        <source>假如将 `prefix` 设置为 `/`，`nickname` 设置为 `四季酱`，则在群聊环境下只有以下信息可以触发指令调用：</source>
        <target state="needs-translation">假如将 `prefix` 设置为 `/`，`nickname` 设置为 `四季酱`，则在群聊环境下只有以下信息可以触发指令调用：</target>
      </trans-unit>
      <trans-unit id="56288">
        <source>四季酱, echo hello
@四季酱 echo hello
/echo hello</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">四季醬, echo hello
@四季醬 echo hello
/echo hello</target>
      </trans-unit>
      <trans-unit id="56290">
        <source>换句话说，一个指令能够被触发的实际条件为：</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">換句話說，一個指令能夠被觸發的實際條件為：</target>
      </trans-unit>
      <trans-unit id="56292">
        <source>消息以 `prefix` 开头，后面紧跟着指令调用</source>
        <target state="needs-translation">消息以 `prefix` 开头，后面紧跟着指令调用</target>
      </trans-unit>
      <trans-unit id="56294">
        <source>消息以 `nickname` 开头，后面可以有逗号或空白字符，再后面是指令调用</source>
        <target state="needs-translation">消息以 `nickname` 开头，后面可以有逗号或空白字符，再后面是指令调用</target>
      </trans-unit>
      <trans-unit id="56296">
        <source>消息以 @机器人 开头 (可以有多个 `@`，但至少一个是机器人账号)，后面是指令调用</source>
        <target state="needs-translation">消息以 @机器人 开头 (可以有多个 `@`，但至少一个是机器人账号)，后面是指令调用</target>
      </trans-unit>
      <trans-unit id="56298">
        <source>对于人数较多或是含有不止一个机器人的群聊，我们强烈建议每一个机器人都配置不同的触发前缀。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">對於人數較多或是含有不止一個機器人的群聊，我們強烈建議每一個機器人都配置不同的觸發字首。</target>
      </trans-unit>
      <trans-unit id="56300">
        <source>而在私聊环境下，由于不用担心误触，因此并没有上面的限制。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">而在私聊環境下，由於不用擔心誤觸，因此並沒有上面的限制。</target>
      </trans-unit>
      <trans-unit id="56302">
        <source>没有触发前缀的指令调用也能被正常执行。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">沒有觸發字首的指令呼叫也能被正常執行。</target>
      </trans-unit>
      <trans-unit id="56304">
        <source>`prefix` 是一个列表，默认值为 `['']` 表示无需前缀也能触发；将列表清空会导致所有指令都无法通过 `prefix` 触发 (但仍然可以通过私聊或 `nickname` 或 @机器人 触发)</source>
        <target state="needs-translation">`prefix` 是一个列表，默认值为 `['']` 表示无需前缀也能触发；将列表清空会导致所有指令都无法通过 `prefix` 触发 (但仍然可以通过私聊或 `nickname` 或 @机器人 触发)</target>
      </trans-unit>
      <trans-unit id="56306">
        <source>如果你在 `prefix` 中设置了多个值，例如 `['.', '/', '']`，那么 `.`, `/` 或无前缀都能触发指令；但由于 Koishi 是按顺序匹配各个前缀的，因此空串 `''` 必须写在最后一个</source>
        <target state="needs-translation">如果你在 `prefix` 中设置了多个值，例如 `['.', '/', '']`，那么 `.`, `/` 或无前缀都能触发指令；但由于 Koishi 是按顺序匹配各个前缀的，因此空串 `''` 必须写在最后一个</target>
      </trans-unit>
      <trans-unit id="66996">
        <source>可以为不同的会话设置不同的 `prefix`，具体请参考 [过滤器](./customize.md#filters) 一节
:::</source>
        <target state="needs-translation">可以为不同的会话设置不同的 `prefix`，具体请参考 [过滤器](./customize.md#filters) 一节
:::</target>
      </trans-unit>
      <trans-unit id="56310">
        <source>子指令</source>
        <target state="needs-translation">子指令</target>
      </trans-unit>
      <trans-unit id="56312">
        <source>[admin](../../plugins/common/admin.md) 插件提供了名为 user 的指令，现在让我们调用一下：</source>
        <target state="needs-translation">[admin](../../plugins/common/admin.md) 插件提供了名为 user 的指令，现在让我们调用一下：</target>
      </trans-unit>
      <trans-unit id="56314">
        <source>user</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">user</target>
      </trans-unit>
      <trans-unit id="56316">
        <source>指令：user</source>
        <target state="needs-translation">指令：user</target>
      </trans-unit>
      <trans-unit id="56318">
        <source>用户管理</source>
        <target state="translated">使用者管理</target>
      </trans-unit>
      <trans-unit id="56320">
        <source>可用的子指令有：</source>
        <target state="needs-translation">可用的子指令有：</target>
      </trans-unit>
      <trans-unit id="56322">
        <source>authorize  权限管理</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">authorize  許可權管理</target>
      </trans-unit>
      <trans-unit id="56324">
        <source>user.locale  语言偏好</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">user.locale  語言偏好</target>
      </trans-unit>
      <trans-unit id="56326">
        <source>这里出现了一个新的概念：子指令。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">這裡出現了一個新的概念：子指令。</target>
      </trans-unit>
      <trans-unit id="56328">
        <source>子指令在调用上与普通的指令并没有区别，但它们将不会显示在 `help` 返回的全局指令列表中，而只会显示在父指令 `user` 的帮助信息中。</source>
        <target state="needs-translation">子指令在调用上与普通的指令并没有区别，但它们将不会显示在 `help` 返回的全局指令列表中，而只会显示在父指令 `user` 的帮助信息中。</target>
      </trans-unit>
      <trans-unit id="56330">
        <source>这样设计的目的是为了避免指令列表过于冗长，同时也将指令以一种更清晰的方式进行了组织。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">這樣設計的目的是為了避免指令列表過於冗長，同時也將指令以一種更清晰的方式進行了組織。</target>
      </trans-unit>
      <trans-unit id="56332">
        <source>在上面的例子中，我们还能发现 Koishi 存在两种不同的子指令：一种是 **层级式**，例如 `authorize`；而另一种则是 **派生式**，例如 `user.locale`。</source>
        <target state="needs-translation">在上面的例子中，我们还能发现 Koishi 存在两种不同的子指令：一种是 **层级式**，例如 `authorize`；而另一种则是 **派生式**，例如 `user.locale`。</target>
      </trans-unit>
      <trans-unit id="56334">
        <source>后者跟前者的区别是，它的名称带有父指令的名称，以及一个小数点 `.`。</source>
        <target state="needs-translation">后者跟前者的区别是，它的名称带有父指令的名称，以及一个小数点 `.`。</target>
      </trans-unit>
      <trans-unit id="56336">
        <source>在调用时，我们也需要加上这个小数点：</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">在呼叫時，我們也需要加上這個小數點：</target>
      </trans-unit>
      <trans-unit id="56338">
        <source>user.locale en</source>
        <target state="needs-translation">user.locale en</target>
      </trans-unit>
      <trans-unit id="56340">
        <source>User data updated.</source>
        <target state="needs-translation">User data updated.</target>
      </trans-unit>
      <trans-unit id="56342">
        <source>如果父指令本身没有功能，那么 `user` 和 `user -h` 的效果是一样的。</source>
        <target state="needs-translation">如果父指令本身没有功能，那么 `user` 和 `user -h` 的效果是一样的。</target>
      </trans-unit>
      <trans-unit id="56344">
        <source>此时，我们也可以使用空格代替小数点进行派生式子指令的调用：</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">此時，我們也可以使用空格代替小數點進行派生式子指令的呼叫：</target>
      </trans-unit>
      <trans-unit id="56346">
        <source>user locale zh
</source>
        <target state="needs-translation">user locale zh
</target>
      </trans-unit>
      <trans-unit id="56348">
        <source>用户数据已修改。</source>
        <target state="translated">使用者數據已修改。</target>
      </trans-unit>
      <trans-unit id="56350">
        <source>熟悉 Git 的用户可能会发现，这种设计正是借鉴了 Git 的二级指令：当一个指令的功能过于复杂时，我们可以将其拆分为多个子指令，从而使得指令的功能更加清晰。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">熟悉 Git 的使用者可能會發現，這種設計正是借鑑了 Git 的二級指令：當一個指令的功能過於複雜時，我們可以將其拆分為多個子指令，從而使得指令的功能更加清晰。</target>
      </trans-unit>
      <trans-unit id="56352">
        <source>至于 user.locale 是干什么的，想必大家也已经猜出来了。</source>
        <target state="needs-translation">至于 user.locale 是干什么的，想必大家也已经猜出来了。</target>
      </trans-unit>
      <trans-unit id="56354">
        <source>我们留到 [国际化](./customize.md#国际化) 一节再详细介绍。</source>
        <target state="needs-translation">我们留到 [国际化](./customize.md#国际化) 一节再详细介绍。</target>
      </trans-unit>
      <trans-unit id="56356">
        <source>指令管理</source>
        <target state="needs-translation">指令管理</target>
      </trans-unit>
      <trans-unit id="56358">
        <source>打开控制台，我们会在活动栏中找到名为「指令管理」的页面。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">開啟控制檯，我們會在活動欄中找到名為「指令管理」的頁面。</target>
      </trans-unit>
      <trans-unit id="56360">
        <source>你可以在这里查看当前所有指令的列表，并对指令的行为进行设置。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">你可以在這裡檢視當前所有指令的列表，並對指令的行為進行設定。</target>
      </trans-unit>
      <trans-unit id="56362">
        <source>设置别名</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">設定別名</target>
      </trans-unit>
      <trans-unit id="56364">
        <source>点进任意指令的详情页，首先就能看到「名称设置」，这里展示了指令的全部别名。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">點進任意指令的詳情頁，首先就能看到「名稱設定」，這裡展示了指令的全部別名。</target>
      </trans-unit>
      <trans-unit id="56366">
        <source>每个别名都能被用来触发指令，而第一个别名则会作为默认名称显示在帮助中。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">每個別名都能被用來觸發指令，而第一個別名則會作為預設名稱顯示在幫助中。</target>
      </trans-unit>
      <trans-unit id="56368">
        <source>你可以在这里添加或删除别名，也可以将任意别名设置为默认的显示名称。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">你可以在這裡新增或刪除別名，也可以將任意別名設定為預設的顯示名稱。</target>
      </trans-unit>
      <trans-unit id="56370">
        <source>例如，在 `echo` 指令中点击「添加别名」，输入 `复读`，然后点击「设为默认」，这样一来，用户在帮助中看到的就是 `复读` 而不是 `echo` 了。</source>
        <target state="needs-translation">例如，在 `echo` 指令中点击「添加别名」，输入 `复读`，然后点击「设为默认」，这样一来，用户在帮助中看到的就是 `复读` 而不是 `echo` 了。</target>
      </trans-unit>
      <trans-unit id="56372">
        <source>添加子指令</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">新增子指令</target>
      </trans-unit>
      <trans-unit id="56374">
        <source>在左侧栏中，你可以将任何指令 (派生式指令除外) 拖至其他指令的下方，这将使得前者成为后者的子指令。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">在左側欄中，你可以將任何指令 (派生式指令除外) 拖至其他指令的下方，這將使得前者成為後者的子指令。</target>
      </trans-unit>
      <trans-unit id="56376">
        <source>例如，我们可以将 [`bind`](../../plugins/common/bind.md) 指令设置为 `user` 指令的子指令，因为这属于用户管理的一部分。</source>
        <target state="needs-translation">例如，我们可以将 [`bind`](../../plugins/common/bind.md) 指令设置为 `user` 指令的子指令，因为这属于用户管理的一部分。</target>
      </trans-unit>
      <trans-unit id="56378">
        <source>点击右上角的加号按钮，我们可以创建一个新指令。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">點選右上角的加號按鈕，我們可以建立一個新指令。</target>
      </trans-unit>
      <trans-unit id="56380">
        <source>这个新指令自然是没有行为的，它的主要目的是作为其他指令的父指令，已获得更好的展示效果。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">這個新指令自然是沒有行為的，它的主要目的是作為其他指令的父指令，已獲得更好的展示效果。</target>
      </trans-unit>
      <trans-unit id="56382">
        <source>对于通过此方法创建的新指令，我们可以通过点击右上角的垃圾桶按钮将其移除。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">對於透過此方法建立的新指令，我們可以透過點選右上角的垃圾桶按鈕將其移除。</target>
      </trans-unit>
      <trans-unit id="56384">
        <source>权限管理</source>
        <target state="translated">權限管理</target>
      </trans-unit>
      <trans-unit id="56386">
        <source>在「名称设置」下方还有更多的配置项，我们可以在这里进一步配置指令对用户的访问权限。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">在「名稱設定」下方還有更多的配置項，我們可以在這裡進一步配置指令對使用者的訪問許可權。</target>
      </trans-unit>
      <trans-unit id="56388">
        <source>例如，将 echo 指令的 `authority` 设置为 `2`，那么将只有 2 级以上权限的用户才能调用该指令。</source>
        <target state="needs-translation">例如，将 echo 指令的 `authority` 设置为 `2`，那么将只有 2 级以上权限的用户才能调用该指令。</target>
      </trans-unit>
      <trans-unit id="56390">
        <source>我们甚至还可以单独设置每一个指令选项的权限等级。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">我們甚至還可以單獨設定每一個指令選項的許可權等級。</target>
      </trans-unit>
      <trans-unit id="56392">
        <source>例如，我们可以单独给 `-E, --unescape` 选项设置 `authority` 为 3。</source>
        <target state="needs-translation">例如，我们可以单独给 `-E, --unescape` 选项设置 `authority` 为 3。</target>
      </trans-unit>
      <trans-unit id="56394">
        <source>这样一来，只有 3 级以上权限的用户才能使用 `echo -E` 的功能。</source>
        <target state="needs-translation">这样一来，只有 3 级以上权限的用户才能使用 `echo -E` 的功能。</target>
      </trans-unit>
      <trans-unit id="56396">
        <source>关于用户权限，请参考 [权限管理](./customize.md#权限管理) 一节。</source>
        <target state="needs-translation">关于用户权限，请参考 [权限管理](./customize.md#权限管理) 一节。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1636" original="/[koishijs.docs] main/zh-CN/manual/usage/customize.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="56398">
        <source>深入定制机器人</source>
        <target state="needs-translation">深入定制机器人</target>
      </trans-unit>
      <trans-unit id="56400">
        <source>权限管理</source>
        <target state="translated">權限管理</target>
      </trans-unit>
      <trans-unit id="56402">
        <source>既然已经有了用户系统，下一个自然的需求便是权限管理了。</source>
        <target state="needs-translation">既然已经有了用户系统，下一个自然的需求便是权限管理了。</target>
      </trans-unit>
      <trans-unit id="56404">
        <source>用户权限</source>
        <target state="needs-translation">用户权限</target>
      </trans-unit>
      <trans-unit id="56406">
        <source>Koishi 内部有一套默认的权限系统，它为每个用户赋予了一个权限等级，遵循以下的 **核心规则**：</source>
        <target state="needs-translation">Koishi 内部有一套默认的权限系统，它为每个用户赋予了一个权限等级，遵循以下的 **核心规则**：</target>
      </trans-unit>
      <trans-unit id="56408">
        <source>数据库中没有的用户默认拥有 0 级权限</source>
        <target state="needs-translation">数据库中没有的用户默认拥有 0 级权限</target>
      </trans-unit>
      <trans-unit id="56410">
        <source>高权限者能够执行一切低权限者的操作</source>
        <target state="needs-translation">高权限者能够执行一切低权限者的操作</target>
      </trans-unit>
      <trans-unit id="56412">
        <source>在此基础上，我们还扩充出了这样的一套 **设计准则**：</source>
        <target state="needs-translation">在此基础上，我们还扩充出了这样的一套 **设计准则**：</target>
      </trans-unit>
      <trans-unit id="56414">
        <source>0 级：不存在的用户</source>
        <target state="needs-translation">0 级：不存在的用户</target>
      </trans-unit>
      <trans-unit id="56416">
        <source>1 级：所有用户，只能够接触有限的功能</source>
        <target state="needs-translation">1 级：所有用户，只能够接触有限的功能</target>
      </trans-unit>
      <trans-unit id="56418">
        <source>2 级：高级用户，能够接触几乎一切机器人的功能</source>
        <target state="needs-translation">2 级：高级用户，能够接触几乎一切机器人的功能</target>
      </trans-unit>
      <trans-unit id="56420">
        <source>3 级：管理员，能够直接操作机器人事务</source>
        <target state="needs-translation">3 级：管理员，能够直接操作机器人事务</target>
      </trans-unit>
      <trans-unit id="56422">
        <source>4 级：高级管理员，能够管理其他账号</source>
        <target state="needs-translation">4 级：高级管理员，能够管理其他账号</target>
      </trans-unit>
      <trans-unit id="56424">
        <source>你可以基于这套准则对指令进行 [权限管理](./command.md#权限管理)，也可以用于部分 [计算属性](#计算属性) 的配置项中。</source>
        <target state="needs-translation">你可以基于这套准则对指令进行 [权限管理](./command.md#权限管理)，也可以用于部分 [计算属性](#计算属性) 的配置项中。</target>
      </trans-unit>
      <trans-unit id="56426">
        <source>通过 [配置登录插件](./platform.md#配置登录插件) 的方式，你可以快速拥有一个 5 级权限的管理员账号。</source>
        <target state="needs-translation">通过 [配置登录插件](./platform.md#配置登录插件) 的方式，你可以快速拥有一个 5 级权限的管理员账号。</target>
      </trans-unit>
      <trans-unit id="56428">
        <source>接下来，要做的就是为其他用户赋予权限了。</source>
        <target state="needs-translation">接下来，要做的就是为其他用户赋予权限了。</target>
      </trans-unit>
      <trans-unit id="56430">
        <source>安装 [admin](../../plugins/common/admin.md) 插件。</source>
        <target state="needs-translation">安装 [admin](../../plugins/common/admin.md) 插件。</target>
      </trans-unit>
      <trans-unit id="56432">
        <source>该插件提供了名为 `authorize` 的指令，可以设置其他用户的权限等级：</source>
        <target state="needs-translation">该插件提供了名为 `authorize` 的指令，可以设置其他用户的权限等级：</target>
      </trans-unit>
      <trans-unit id="56434">
        <source>authorize -u @Bob 2</source>
        <target state="needs-translation">authorize -u @Bob 2</target>
      </trans-unit>
      <trans-unit id="56436">
        <source>用户数据已修改。</source>
        <target state="translated">使用者數據已修改。</target>
      </trans-unit>
      <trans-unit id="56438">
        <source>任何用户只能对权限等级低于自己的用户进行操作，且操作后的权限等级同样必须低于自己。</source>
        <target state="needs-translation">任何用户只能对权限等级低于自己的用户进行操作，且操作后的权限等级同样必须低于自己。</target>
      </trans-unit>
      <trans-unit id="56440">
        <source>受理人机制</source>
        <target state="needs-translation">受理人机制</target>
      </trans-unit>
      <trans-unit id="56442">
        <source>默认情况下，同一个 Koishi 应用接入的多个机器人账号在同一个频道内，只有一个机器人会响应用户的消息。</source>
        <target state="needs-translation">默认情况下，同一个 Koishi 应用接入的多个机器人账号在同一个频道内，只有一个机器人会响应用户的消息。</target>
      </trans-unit>
      <trans-unit id="56444">
        <source>这是为了防止消息重复发送和循环触发等问题。</source>
        <target state="needs-translation">这是为了防止消息重复发送和循环触发等问题。</target>
      </trans-unit>
      <trans-unit id="56446">
        <source>这个负责响应消息的机器人被称为该频道的「受理人」。</source>
        <target state="needs-translation">这个负责响应消息的机器人被称为该频道的「受理人」。</target>
      </trans-unit>
      <trans-unit id="56448">
        <source>默认情况下，第一个收到该频道的消息的机器人会自动成为受理人。</source>
        <target state="needs-translation">默认情况下，第一个收到该频道的消息的机器人会自动成为受理人。</target>
      </trans-unit>
      <trans-unit id="56450">
        <source>当受理人账号离线时，即便频道内仍有其他机器人，它们也不会响应你的消息。</source>
        <target state="needs-translation">当受理人账号离线时，即便频道内仍有其他机器人，它们也不会响应你的消息。</target>
      </trans-unit>
      <trans-unit id="56452">
        <source>此时如果想要切换受理人，同样请安装 [admin](../../plugins/common/admin.md) 插件，并使用 `@bot assign`，其中 @bot 是你所希望的受理人。</source>
        <target state="needs-translation">此时如果想要切换受理人，同样请安装 [admin](../../plugins/common/admin.md) 插件，并使用 `@bot assign`，其中 @bot 是你所希望的受理人。</target>
      </trans-unit>
      <trans-unit id="56454">
        <source>反过来，如果你希望你的 Koishi 实例不主动响应某个频道的消息，可以通过 `assign -r` 的方式来移除该频道的受理人。</source>
        <target state="needs-translation">反过来，如果你希望你的 Koishi 实例不主动响应某个频道的消息，可以通过 `assign -r` 的方式来移除该频道的受理人。</target>
      </trans-unit>
      <trans-unit id="56456">
        <source>其他频道不会受到影响。</source>
        <target state="needs-translation">其他频道不会受到影响。</target>
      </trans-unit>
      <trans-unit id="56458">
        <source>某个频道处于无受理人状态与该频道被过滤器排除的区别在于：前者仍然可以被通过 @机器人 的方式触发指令，而后者无论如何都无法触发指令。</source>
        <target state="needs-translation">某个频道处于无受理人状态与该频道被过滤器排除的区别在于：前者仍然可以被通过 @机器人 的方式触发指令，而后者无论如何都无法触发指令。</target>
      </trans-unit>
      <trans-unit id="56460">
        <source>具体请参考 [触发前缀](./command.md#触发前缀) 章节。</source>
        <target state="needs-translation">具体请参考 [触发前缀](./command.md#触发前缀) 章节。</target>
      </trans-unit>
      <trans-unit id="56462">
        <source>自动注册</source>
        <target state="needs-translation">自动注册</target>
      </trans-unit>
      <trans-unit id="56464">
        <source>默认情况下，对于每一条接收到的消息，机器人都会自动向数据库中注册其用户和频道。</source>
        <target state="needs-translation">默认情况下，对于每一条接收到的消息，机器人都会自动向数据库中注册其用户和频道。</target>
      </trans-unit>
      <trans-unit id="56466">
        <source>新注册的用户将默认获得 1 级权限，而新注册的频道会自动以收到消息的机器人为其受理者。</source>
        <target state="needs-translation">新注册的用户将默认获得 1 级权限，而新注册的频道会自动以收到消息的机器人为其受理者。</target>
      </trans-unit>
      <trans-unit id="56468">
        <source>如果你不希望有此行为，可以在全局设置中手动配置 `autoAuthorize` 和 `autoAssign`。</source>
        <target state="needs-translation">如果你不希望有此行为，可以在全局设置中手动配置 `autoAuthorize` 和 `autoAssign`。</target>
      </trans-unit>
      <trans-unit id="56470">
        <source>上述两个配置项都支持 [计算属性](#计算属性)，这也意味着你可以在不同的聊天环境中配置不同的行为。</source>
        <target state="needs-translation">上述两个配置项都支持 [计算属性](#计算属性)，这也意味着你可以在不同的聊天环境中配置不同的行为。</target>
      </trans-unit>
      <trans-unit id="66998">
        <source>过滤器 {#filters}</source>
        <target state="needs-translation">过滤器 {#filters}</target>
      </trans-unit>
      <trans-unit id="56474">
        <source>很多时候，我们会希望某些功能只能对于某些群聊或私聊使用。</source>
        <target state="needs-translation">很多时候，我们会希望某些功能只能对于某些群聊或私聊使用。</target>
      </trans-unit>
      <trans-unit id="56476">
        <source>使用权限管理意味着引入数据库，而更轻量的方式是通过 **过滤器 (Filter)** 直接影响插件的作用范围。</source>
        <target state="needs-translation">使用权限管理意味着引入数据库，而更轻量的方式是通过 **过滤器 (Filter)** 直接影响插件的作用范围。</target>
      </trans-unit>
      <trans-unit id="56478">
        <source>插件过滤器</source>
        <target state="needs-translation">插件过滤器</target>
      </trans-unit>
      <trans-unit id="56480">
        <source>少数插件与聊天平台无关，例如控制台、数据库插件等。</source>
        <target state="needs-translation">少数插件与聊天平台无关，例如控制台、数据库插件等。</target>
      </trans-unit>
      <trans-unit id="56482">
        <source>这些插件也因此没有过滤器设置。</source>
        <target state="needs-translation">这些插件也因此没有过滤器设置。</target>
      </trans-unit>
      <trans-unit id="56484">
        <source>大部分插件都提供了过滤器设置，就位于插件详情页的顶部。</source>
        <target state="needs-translation">大部分插件都提供了过滤器设置，就位于插件详情页的顶部。</target>
      </trans-unit>
      <trans-unit id="56486">
        <source>点击「添加条件」按钮可以创建一个过滤条件。</source>
        <target state="needs-translation">点击「添加条件」按钮可以创建一个过滤条件。</target>
      </trans-unit>
      <trans-unit id="56488">
        <source>可以通过设置过滤条件来包含或排除任意平台 / 用户 / 群组 / 频道 / 机器人。</source>
        <target state="needs-translation">可以通过设置过滤条件来包含或排除任意平台 / 用户 / 群组 / 频道 / 机器人。</target>
      </trans-unit>
      <trans-unit id="56490">
        <source>如果不知道这些 ID 是什么，可以使用 [获取账号信息](./platform.md#获取账号信息) 中介绍的 [inspect](../../plugins/common/inspect.md) 插件。</source>
        <target state="needs-translation">如果不知道这些 ID 是什么，可以使用 [获取账号信息](./platform.md#获取账号信息) 中介绍的 [inspect](../../plugins/common/inspect.md) 插件。</target>
      </trans-unit>
      <trans-unit id="56492">
        <source>添加一个条件后，你会发现下方的按钮变成了「添加『与』条件」和「添加『或』条件」两个。</source>
        <target state="needs-translation">添加一个条件后，你会发现下方的按钮变成了「添加『与』条件」和「添加『或』条件」两个。</target>
      </trans-unit>
      <trans-unit id="56494">
        <source>Koishi 的过滤器支持二级结构，内层的一系列条件以「与」的逻辑关系组成条件组，外层的一系列条件组以「或」的逻辑关系组成最终的过滤条件。</source>
        <target state="needs-translation">Koishi 的过滤器支持二级结构，内层的一系列条件以「与」的逻辑关系组成条件组，外层的一系列条件组以「或」的逻辑关系组成最终的过滤条件。</target>
      </trans-unit>
      <trans-unit id="56496">
        <source>条件属性</source>
        <target state="needs-translation">条件属性</target>
      </trans-unit>
      <trans-unit id="56498">
        <source>Koishi 不仅支持在插件层级设置过滤器，某些配置项还支持在不同的会话下取不同的值。</source>
        <target state="needs-translation">Koishi 不仅支持在插件层级设置过滤器，某些配置项还支持在不同的会话下取不同的值。</target>
      </trans-unit>
      <trans-unit id="56500">
        <source>以全局设置为例，我们可以看到 `prefix`, `autoAssign` 等配置项的右侧有一个「…」按钮：</source>
        <target state="needs-translation">以全局设置为例，我们可以看到 `prefix`, `autoAssign` 等配置项的右侧有一个「…」按钮：</target>
      </trans-unit>
      <trans-unit id="56502" translate="no">
        <source>![computed](/manual/console/computed.dark.webp) {.dark-only}</source>
        <target>![computed](/manual/console/computed.dark.webp) {.dark-only}</target>
      </trans-unit>
      <trans-unit id="56504" translate="no">
        <source>![computed](/manual/console/computed.light.webp) {.light-only}</source>
        <target>![computed](/manual/console/computed.light.webp) {.light-only}</target>
      </trans-unit>
      <trans-unit id="56506">
        <source>点击这个「…」按钮，即可将普通的配置项变成一个计算属性。</source>
        <target state="needs-translation">点击这个「…」按钮，即可将普通的配置项变成一个计算属性。</target>
      </trans-unit>
      <trans-unit id="56508">
        <source>我们可以配置一系列满足某个过滤器以后的取值，以及一个不满足任何情况下的默认值。</source>
        <target state="needs-translation">我们可以配置一系列满足某个过滤器以后的取值，以及一个不满足任何情况下的默认值。</target>
      </trans-unit>
      <trans-unit id="56510">
        <source>利用此特性，我们可以实现一些比较复杂的功能，例如：</source>
        <target state="needs-translation">利用此特性，我们可以实现一些比较复杂的功能，例如：</target>
      </trans-unit>
      <trans-unit id="56512">
        <source>屏蔽某些群组内的一切消息</source>
        <target state="needs-translation">屏蔽某些群组内的一切消息</target>
      </trans-unit>
      <trans-unit id="56514">
        <source>在不同的平台下使用不同的指令前缀</source>
        <target state="needs-translation">在不同的平台下使用不同的指令前缀</target>
      </trans-unit>
      <trans-unit id="56516">
        <source>对特定的用户开放额外的使用额度</source>
        <target state="needs-translation">对特定的用户开放额外的使用额度</target>
      </trans-unit>
      <trans-unit id="56518">
        <source>国际化</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">國際化</target>
      </trans-unit>
      <trans-unit id="56520">
        <source>Koishi 是一个支持国际化的聊天机器人框架，这意味着 Koishi 机器人可以根据不同的环境使用不同的语言。</source>
        <target state="needs-translation">Koishi 是一个支持国际化的聊天机器人框架，这意味着 Koishi 机器人可以根据不同的环境使用不同的语言。</target>
      </trans-unit>
      <trans-unit id="56522">
        <source>这可能听起来跟你没啥关系……但先别走！</source>
        <target state="needs-translation">这可能听起来跟你没啥关系……但先别走！</target>
      </trans-unit>
      <trans-unit id="56524">
        <source>读完这一节，或许你能掌握一些非常有用的功能。</source>
        <target state="needs-translation">读完这一节，或许你能掌握一些非常有用的功能。</target>
      </trans-unit>
      <trans-unit id="56526">
        <source>国际化并没有你想象得那么简单。</source>
        <target state="needs-translation">国际化并没有你想象得那么简单。</target>
      </trans-unit>
      <trans-unit id="56528">
        <source>设置语言偏好</source>
        <target state="needs-translation">设置语言偏好</target>
      </trans-unit>
      <trans-unit id="56530">
        <source>在 Koishi 中，应用本身及其管理的每个用户、每个频道都可以独立地设置语言偏好。</source>
        <target state="needs-translation">在 Koishi 中，应用本身及其管理的每个用户、每个频道都可以独立地设置语言偏好。</target>
      </trans-unit>
      <trans-unit id="56532">
        <source>其中，应用级别的默认语言通过全局配置项 `locale` 来设置，而用户、频道的语言偏好则通过 [admin](../../plugins/common/admin.md) 插件提供的 `user.locale` 和 `channel.locale` 指令来管理 (还记得指令系统中的 [这个例子](./command.md#子指令) 吧)。</source>
        <target state="needs-translation">其中，应用级别的默认语言通过全局配置项 `locale` 来设置，而用户、频道的语言偏好则通过 [admin](../../plugins/common/admin.md) 插件提供的 `user.locale` 和 `channel.locale` 指令来管理 (还记得指令系统中的 [这个例子](./command.md#子指令) 吧)。</target>
      </trans-unit>
      <trans-unit id="56534">
        <source>默认情况下，语言偏好的优先级是 频道 &gt; 用户 &gt; 全局。</source>
        <target state="needs-translation">默认情况下，语言偏好的优先级是 频道 &gt; 用户 &gt; 全局。</target>
      </trans-unit>
      <trans-unit id="56536">
        <source>一个群组中可能有大量使用不同母语的用户参与讨论，为了方便交流通常会设置不同的语言频道。</source>
        <target state="needs-translation">一个群组中可能有大量使用不同母语的用户参与讨论，为了方便交流通常会设置不同的语言频道。</target>
      </trans-unit>
      <trans-unit id="56538">
        <source>而对于此类情况，频道优先策略就可以让机器人在这些频道内始终使用预设好的语言来回答，而对于未设置语言偏好的频道，机器人仍然会遵循用户的偏好设置。</source>
        <target state="needs-translation">而对于此类情况，频道优先策略就可以让机器人在这些频道内始终使用预设好的语言来回答，而对于未设置语言偏好的频道，机器人仍然会遵循用户的偏好设置。</target>
      </trans-unit>
      <trans-unit id="56540">
        <source>当然，你也可以通过全局配置项 `i18n.output` 来更改此行为。</source>
        <target state="needs-translation">当然，你也可以通过全局配置项 `i18n.output` 来更改此行为。</target>
      </trans-unit>
      <trans-unit id="56542">
        <source>本地化文本</source>
        <target state="needs-translation">本地化文本</target>
      </trans-unit>
      <trans-unit id="56544">
        <source>当然，绝大部分插件都仅仅支持了中文。</source>
        <target state="needs-translation">当然，绝大部分插件都仅仅支持了中文。</target>
      </trans-unit>
      <trans-unit id="56546">
        <source>如果你希望你的机器人支持其他语言，除了向这些插件的作者提交 Pull Request 外，还可以本地修改插件的文本。</source>
        <target state="needs-translation">如果你希望你的机器人支持其他语言，除了向这些插件的作者提交 Pull Request 外，还可以本地修改插件的文本。</target>
      </trans-unit>
      <trans-unit id="56548">
        <source>在活动栏中点击「本地化」，你将看到如下的界面：</source>
        <target state="needs-translation">在活动栏中点击「本地化」，你将看到如下的界面：</target>
      </trans-unit>
      <trans-unit id="56550" translate="no">
        <source>![locales](/manual/console/locales.dark.webp) {.dark-only}</source>
        <target>![locales](/manual/console/locales.dark.webp) {.dark-only}</target>
      </trans-unit>
      <trans-unit id="56552" translate="no">
        <source>![locales](/manual/console/locales.light.webp) {.light-only}</source>
        <target>![locales](/manual/console/locales.light.webp) {.light-only}</target>
      </trans-unit>
      <trans-unit id="56554">
        <source>左侧可以选择类别，右上角可以选择要显示的语言，而中间则是编辑文本的区域。</source>
        <target state="needs-translation">左侧可以选择类别，右上角可以选择要显示的语言，而中间则是编辑文本的区域。</target>
      </trans-unit>
      <trans-unit id="56556">
        <source>其中，文本框里的占位符对应于插件本身提供的文本，可以在翻译到其他语言时用做参考。</source>
        <target state="needs-translation">其中，文本框里的占位符对应于插件本身提供的文本，可以在翻译到其他语言时用做参考。</target>
      </trans-unit>
      <trans-unit id="56558">
        <source>然而，这个页面还有另一个用法，就是修改已有的文本！</source>
        <target state="needs-translation">然而，这个页面还有另一个用法，就是修改已有的文本！</target>
      </trans-unit>
      <trans-unit id="56560">
        <source>例如在上面的截图中，`low-authority` 原本对应到的文本是 `权限不足`，我们可以将它修改为 `哼，不给用`。</source>
        <target state="needs-translation">例如在上面的截图中，`low-authority` 原本对应到的文本是 `权限不足`，我们可以将它修改为 `哼，不给用`。</target>
      </trans-unit>
      <trans-unit id="56562">
        <source>现在让我们找个带权限等级的指令试试看有什么效果：</source>
        <target state="needs-translation">现在让我们找个带权限等级的指令试试看有什么效果：</target>
      </trans-unit>
      <trans-unit id="56564">
        <source>authorize -u @Bob 5</source>
        <target state="needs-translation">authorize -u @Bob 5</target>
      </trans-unit>
      <trans-unit id="56566">
        <source>哼，不给用！</source>
        <target state="needs-translation">哼，不给用！</target>
      </trans-unit>
      <trans-unit id="56568">
        <source>只要你如法炮制，就可以配置出一套完全属于你的机器人文案，让你的机器人与众不同。</source>
        <target state="needs-translation">只要你如法炮制，就可以配置出一套完全属于你的机器人文案，让你的机器人与众不同。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1638" original="/[koishijs.docs] main/zh-CN/manual/usage/market.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="56570">
        <source>选择安装方式</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">選擇安裝方式</target>
      </trans-unit>
      <trans-unit id="56572">
        <source>/zh-CN/manual/starter/</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">/zh-TW/manual/starter/</target>
      </trans-unit>
      <trans-unit id="56574">
        <source>安装和配置插件</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">安裝和配置外掛</target>
      </trans-unit>
      <trans-unit id="56576">
        <source>本节将介绍「插件市场」「插件配置」和「依赖管理」页面的使用方法。</source>
        <target state="needs-translation">本节将介绍「插件市场」「插件配置」和「依赖管理」页面的使用方法。</target>
      </trans-unit>
      <trans-unit id="56578">
        <source>Koishi 的一个核心特性是强大的控制台。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">Koishi 的一個核心特性是強大的控制檯。</target>
      </trans-unit>
      <trans-unit id="56580">
        <source>控制台是一个对用户友好的图形界面，封装了 Koishi 的绝大多数功能：</source>
        <target state="needs-translation">控制台是一个对用户友好的图形界面，封装了 Koishi 的绝大多数功能：</target>
      </trans-unit>
      <trans-unit id="56582">
        <source>安装、卸载和更新插件</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">安裝、解除安裝和更新外掛</target>
      </trans-unit>
      <trans-unit id="56584">
        <source>启用、停用和配置插件</source>
        <target state="needs-translation">启用、停用和配置插件</target>
      </trans-unit>
      <trans-unit id="56586">
        <source>管理指令、数据库、输出文本</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">管理指令、資料庫、輸出文字</target>
      </trans-unit>
      <trans-unit id="56588">
        <source>在模拟和真实环境下聊天</source>
        <target state="needs-translation">在模拟和真实环境下聊天</target>
      </trans-unit>
      <trans-unit id="56590">
        <source>状态监控、数据统计</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">狀態監控、資料統計</target>
      </trans-unit>
      <trans-unit id="56592">
        <source>查看日志</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">檢視日誌</target>
      </trans-unit>
      <trans-unit id="56594">
        <source>本节中我们将以 [echo](../../plugins/common/echo.md) 插件为例来演示插件的安装与配置。</source>
        <target state="needs-translation">本节中我们将以 [echo](../../plugins/common/echo.md) 插件为例来演示插件的安装与配置。</target>
      </trans-unit>
      <trans-unit id="56596">
        <source>echo 插件注册了一个名为 `echo` 的指令，调用此指令可以将输入原样输出给用户。</source>
        <target state="needs-translation">echo 插件注册了一个名为 `echo` 的指令，调用此指令可以将输入原样输出给用户。</target>
      </trans-unit>
      <trans-unit id="56598">
        <source>认识控制台</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">認識控制檯</target>
      </trans-unit>
      <trans-unit id="56600">
        <source>在你成功安装了模板项目或启动器后，控制台将自动打开。</source>
        <target state="needs-translation">在你成功安装了模板项目或启动器后，控制台将自动打开。</target>
      </trans-unit>
      <trans-unit id="56602">
        <source>控制台的界面主要分为两部分，左侧是活动栏，用来切换右边的界面，右边默认打开的是仪表盘页面。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">控制檯的介面主要分為兩部分，左側是活動欄，用來切換右邊的介面，右邊預設開啟的是儀表盤頁面。</target>
      </trans-unit>
      <trans-unit id="56604">
        <source>在宽屏设备的下方还有一个状态栏，主要用来显示机器人的运行状态。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">在寬屏裝置的下方還有一個狀態列，主要用來顯示機器人的執行狀態。</target>
      </trans-unit>
      <trans-unit id="56606" translate="no">
        <source>![home](/manual/console/home.light.webp) {.light-only}</source>
        <target>![home](/manual/console/home.light.webp) {.light-only}</target>
      </trans-unit>
      <trans-unit id="56608" translate="no">
        <source>![home](/manual/console/home.dark.webp) {.dark-only}</source>
        <target>![home](/manual/console/home.dark.webp) {.dark-only}</target>
      </trans-unit>
      <trans-unit id="56610">
        <source>在之后的几节里，我们会逐一介绍各界面的功能和使用。</source>
        <target state="needs-translation">在之后的几节里，我们会逐一介绍各界面的功能和使用。</target>
      </trans-unit>
      <trans-unit id="56612">
        <source>安装插件</source>
        <target state="translated">安裝外掛程式</target>
      </trans-unit>
      <trans-unit id="56614">
        <source>Koishi 不对非官方插件的安全性做任何保证。</source>
        <target state="needs-translation">Koishi 不对非官方插件的安全性做任何保证。</target>
      </trans-unit>
      <trans-unit id="56616">
        <source>请不要随意下载来源不明的插件，因为它们可能导致 Koishi 无法运行，甚至更严重的后果。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">請不要隨意下載來源不明的外掛，因為它們可能導致 Koishi 無法執行，甚至更嚴重的後果。</target>
      </trans-unit>
      <trans-unit id="56618">
        <source>如果你下载插件后遇到了问题，可以前往用户群或论坛进行反馈。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">如果你下載外掛後遇到了問題，可以前往使用者群或論壇進行反饋。</target>
      </trans-unit>
      <trans-unit id="56620">
        <source>此外，部分插件带有「不安全」标识，安装此类插件将不会受到官方群内的支持。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">此外，部分外掛帶有「不安全」標識，安裝此類外掛將不會受到官方群內的支援。</target>
      </trans-unit>
      <trans-unit id="56622">
        <source>前往「插件市场」页面，你将在这里看到所有可下载的插件。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">前往「外掛市場」頁面，你將在這裡看到所有可下載的外掛。</target>
      </trans-unit>
      <trans-unit id="56624">
        <source>在搜索框中输入 `echo`，找到我们想要的插件，点击「添加」按钮，然后在弹出的对话框中点击「安装」。</source>
        <target state="needs-translation">在搜索框中输入 `echo`，找到我们想要的插件，点击「添加」按钮，然后在弹出的对话框中点击「安装」。</target>
      </trans-unit>
      <trans-unit id="56626">
        <source>等待片刻，插件就已经安装成功了。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">等待片刻，外掛就已經安裝成功了。</target>
      </trans-unit>
      <trans-unit id="56628" translate="no">
        <source>![select-version](/manual/console/select-version.light.webp) {.light-only}</source>
        <target>![select-version](/manual/console/select-version.light.webp) {.light-only}</target>
      </trans-unit>
      <trans-unit id="56630" translate="no">
        <source>![select-version](/manual/console/select-version.dark.webp) {.dark-only}</source>
        <target>![select-version](/manual/console/select-version.dark.webp) {.dark-only}</target>
      </trans-unit>
      <trans-unit id="56632">
        <source>启用和停用插件</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">啟用和停用外掛</target>
      </trans-unit>
      <trans-unit id="56634">
        <source>Koishi 不会自动启用刚刚安装的插件，你需要手动配置并启用。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">Koishi 不會自動啟用剛剛安裝的外掛，你需要手動配置並啟用。</target>
      </trans-unit>
      <trans-unit id="56636">
        <source>前往「插件配置」页面，左侧栏中列出了已配置的各种插件。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">前往「外掛配置」頁面，左側欄中列出了已配置的各種外掛。</target>
      </trans-unit>
      <trans-unit id="56638">
        <source>其中&lt;span class=&quot;light-only&quot;&gt;黑色&lt;/span&gt;&lt;span class=&quot;dark-only&quot;&gt;白色&lt;/span&gt;字体显示的是正在运行的插件，而灰色字体则对应尚未运行的插件。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">其中&lt;span class=&quot;light-only&quot;&gt;黑色&lt;/span&gt;&lt;span class=&quot;dark-only&quot;&gt;白色&lt;/span&gt;字型顯示的是正在執行的外掛，而灰色字型則對應尚未執行的外掛。</target>
      </trans-unit>
      <trans-unit id="56640" translate="no">
        <source>![plugins](/manual/console/plugins.light.webp) {.light-only}</source>
        <target>![plugins](/manual/console/plugins.light.webp) {.light-only}</target>
      </trans-unit>
      <trans-unit id="56642" translate="no">
        <source>![plugins](/manual/console/plugins.dark.webp) {.dark-only}</source>
        <target>![plugins](/manual/console/plugins.dark.webp) {.dark-only}</target>
      </trans-unit>
      <trans-unit id="56644">
        <source>我们可以看到此时 echo 插件的名字是灰色的，这表明它并未处于运行状态。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">我們可以看到此時 echo 外掛的名字是灰色的，這表明它並未處於執行狀態。</target>
      </trans-unit>
      <trans-unit id="56646">
        <source>echo 插件没有可配置的项目，因此右侧的详情页是空白的。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">echo 外掛沒有可配置的專案，因此右側的詳情頁是空白的。</target>
      </trans-unit>
      <trans-unit id="56648">
        <source>我们可以直接点击右上角的「启用插件」按钮，看到「启用成功」的提示信息，这表明 echo 插件就已经处于运行状态了。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">我們可以直接點選右上角的「啟用外掛」按鈕，看到「啟用成功」的提示資訊，這表明 echo 外掛就已經處於執行狀態了。</target>
      </trans-unit>
      <trans-unit id="56650">
        <source>要停用 echo 插件同样很简单。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">要停用 echo 外掛同樣很簡單。</target>
      </trans-unit>
      <trans-unit id="56652">
        <source>点击右上角的「停用插件」按钮，插件便会停止运行。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">點選右上角的「停用外掛」按鈕，外掛便會停止執行。</target>
      </trans-unit>
      <trans-unit id="56654">
        <source>停用插件既不会删除插件的代码，也不会删除插件的配置，你可以随时重新启用它。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">停用外掛既不會刪除外掛的程式碼，也不會刪除外掛的配置，你可以隨時重新啟用它。</target>
      </trans-unit>
      <trans-unit id="56656">
        <source>配置插件</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">配置外掛</target>
      </trans-unit>
      <trans-unit id="56658">
        <source>在配置插件的过程中，请大家记住这个原则：**如无必要，勿动配置**。</source>
        <target state="needs-translation">在配置插件的过程中，请大家记住这个原则：**如无必要，勿动配置**。</target>
      </trans-unit>
      <trans-unit id="56660">
        <source>Koishi 在设计上兼顾了扩展性和实用性，许多基础功能是以预装插件的形式提供的。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">Koishi 在設計上兼顧了擴充套件性和實用性，許多基礎功能是以預裝外掛的形式提供的。</target>
      </trans-unit>
      <trans-unit id="56662">
        <source>前面我们已经用到的「插件市场」和「插件配置」页面本身就分别由预装的 market 插件和 config 插件提供。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">前面我們已經用到的「外掛市場」和「外掛配置」頁面本身就分別由預裝的 market 外掛和 config 外掛提供。</target>
      </trans-unit>
      <trans-unit id="56664">
        <source>正是因为所有的预装插件均已配置完善，通常情况下你不需要修改预装插件的配置。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">正是因為所有的預裝外掛均已配置完善，通常情況下你不需要修改預裝外掛的配置。</target>
      </trans-unit>
      <trans-unit id="56666">
        <source>随意改动插件配置、删除预装插件都可能导致 Koishi 无法正常运行。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">隨意改動外掛配置、刪除預裝外掛都可能導致 Koishi 無法正常執行。</target>
      </trans-unit>
      <trans-unit id="56668">
        <source>虽然 echo 插件没有需要配置的地方，但更复杂的插件则通常会提供各种配置项，允许使用者控制插件的行为。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">雖然 echo 外掛沒有需要配置的地方，但更復雜的外掛則通常會提供各種配置項，允許使用者控制外掛的行為。</target>
      </trans-unit>
      <trans-unit id="56670">
        <source>下图展示了 novelai 插件的配置界面。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">下圖展示了 novelai 外掛的配置介面。</target>
      </trans-unit>
      <trans-unit id="56672" translate="no">
        <source>![settings](/manual/console/settings.light.webp) {.light-only}</source>
        <target>![settings](/manual/console/settings.light.webp) {.light-only}</target>
      </trans-unit>
      <trans-unit id="56674" translate="no">
        <source>![settings](/manual/console/settings.dark.webp) {.dark-only}</source>
        <target>![settings](/manual/console/settings.dark.webp) {.dark-only}</target>
      </trans-unit>
      <trans-unit id="56676">
        <source>在这个界面中，我们可以看到许多配置项。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">在這個介面中，我們可以看到許多配置項。</target>
      </trans-unit>
      <trans-unit id="56678">
        <source>其中你需要注意：</source>
        <target state="needs-translation">其中你需要注意：</target>
      </trans-unit>
      <trans-unit id="56680">
        <source>必选但尚未填入的配置项会在左侧呈现 &lt;span style=&quot;font-weight: bold; color: var(--vp-c-red-1)&quot;&gt;红色&lt;/span&gt; 的提示条，只有正确填写配置才能启动插件。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">必選但尚未填入的配置項會在左側呈現 &lt;span style=&quot;font-weight: bold; color: var(--vp-c-red-1)&quot;&gt;紅色&lt;/span&gt; 的提示條，只有正確填寫配置才能啟動外掛。</target>
      </trans-unit>
      <trans-unit id="56682">
        <source>已修改但未保存的配置项会在左侧呈现 &lt;span style=&quot;font-weight: bold; color: var(--vp-c-indigo-1)&quot;&gt;紫色&lt;/span&gt; 的提示条，点击「启用插件」或「保存配置」按钮后会保存配置；如果你想撤销这些改动，可以在配置名称旁的小三角处呼出菜单，选择「撤销更改」使该配置恢复到上次保存时的状态。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">已修改但未儲存的配置項會在左側呈現 &lt;span style=&quot;font-weight: bold; color: var(--vp-c-indigo-1)&quot;&gt;紫色&lt;/span&gt; 的提示條，點選「啟用外掛」或「儲存配置」按鈕後會儲存配置；如果你想撤銷這些改動，可以在配置名稱旁的小三角處撥出選單，選擇「撤銷更改」使該配置恢復到上次儲存時的狀態。</target>
      </trans-unit>
      <trans-unit id="56684">
        <source>管理插件</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">管理外掛</target>
      </trans-unit>
      <trans-unit id="56686">
        <source>分组管理</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">分組管理</target>
      </trans-unit>
      <trans-unit id="56688">
        <source>Koishi 提供了插件分组的机制，分组内可以添加插件，方便同时管理多个插件。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">Koishi 提供了外掛分組的機制，分組內可以新增外掛，方便同時管理多個外掛。</target>
      </trans-unit>
      <trans-unit id="56690">
        <source>Koishi 在安装时预先配置了一些分组，而新安装的插件会放置在插件列表的底部，这表明它不属于任何分组。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">Koishi 在安裝時預先配置了一些分組，而新安裝的外掛會放置在外掛列表的底部，這表明它不屬於任何分組。</target>
      </trans-unit>
      <trans-unit id="56692">
        <source>插件和分组都可以通过点选并拖拽的方式改变排列顺序或在分组之间移动。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">外掛和分組都可以透過點選並拖拽的方式改變排列順序或在分組之間移動。</target>
      </trans-unit>
      <trans-unit id="56694">
        <source>相信你也发现了，分组是可以嵌套的。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">相信你也發現了，分組是可以巢狀的。</target>
      </trans-unit>
      <trans-unit id="56696">
        <source>创建新的分组同样很简单。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">建立新的分組同樣很簡單。</target>
      </trans-unit>
      <trans-unit id="56698">
        <source>点击「全局配置」或任意分组名后，点击右上角的「创建分组」按钮可以在此创建一个新的插件分组。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">點選「全域性配置」或任意分組名後，點選右上角的「建立分組」按鈕可以在此建立一個新的外掛分組。</target>
      </trans-unit>
      <trans-unit id="56700">
        <source>新分组的名字是随机生成的，但你可以点击名字修改成你喜欢的名字。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">新分組的名字是隨機生成的，但你可以點選名字修改成你喜歡的名字。</target>
      </trans-unit>
      <trans-unit id="56702">
        <source>分组可以在左侧栏中点击小三角来控制展开和收起。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">分組可以在左側欄中點選小三角來控制展開和收起。</target>
      </trans-unit>
      <trans-unit id="67000">
        <source>此外，[过滤器](../usage/customize.md#filters) 机制也可用于分组，便于控制一系列插件的行为。</source>
        <target state="needs-translation">此外，[过滤器](../usage/customize.md#filters) 机制也可用于分组，便于控制一系列插件的行为。</target>
      </trans-unit>
      <trans-unit id="56706">
        <source>添加更多插件</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">新增更多外掛</target>
      </trans-unit>
      <trans-unit id="56708">
        <source>通常情况下，一个插件只能同时运行一份配置。</source>
        <target state="needs-translation">通常情况下，一个插件只能同时运行一份配置。</target>
      </trans-unit>
      <trans-unit id="56710">
        <source>请参考 [维护多份配置](../recipe/multiple.md) 章节。</source>
        <target state="needs-translation">请参考 [维护多份配置](../recipe/multiple.md) 章节。</target>
      </trans-unit>
      <trans-unit id="56712">
        <source>如果某个已安装的插件并未显示在插件列表中，你也可以手动添加它。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">如果某個已安裝的外掛並未顯示在外掛列表中，你也可以手動新增它。</target>
      </trans-unit>
      <trans-unit id="56714">
        <source>在「全局配置」或任意分组界面中，点击右上角的「添加插件」将会弹出对话框。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">在「全域性配置」或任意分組介面中，點選右上角的「新增外掛」將會彈出對話方塊。</target>
      </trans-unit>
      <trans-unit id="56716">
        <source>在对话框中点击要添加的插件，即可创建一份未启用的插件配置。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">在對話方塊中點選要新增的外掛，即可建立一份未啟用的外掛配置。</target>
      </trans-unit>
      <trans-unit id="56718" translate="no">
        <source>![select-plugin](/manual/console/select-plugin.light.webp) {.light-only}</source>
        <target>![select-plugin](/manual/console/select-plugin.light.webp) {.light-only}</target>
      </trans-unit>
      <trans-unit id="56720" translate="no">
        <source>![select-plugin](/manual/console/select-plugin.dark.webp) {.dark-only}</source>
        <target>![select-plugin](/manual/console/select-plugin.dark.webp) {.dark-only}</target>
      </trans-unit>
      <trans-unit id="56722">
        <source>删除插件或分组</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">刪除外掛或分組</target>
      </trans-unit>
      <trans-unit id="56724">
        <source>注意：此操作无法被撤销，如果你想要恢复之前的配置，只能再次手动添加。</source>
        <target state="needs-translation">注意：此操作无法被撤销，如果你想要恢复之前的配置，只能再次手动添加。</target>
      </trans-unit>
      <trans-unit id="56726">
        <source>请谨慎操作。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">請謹慎操作。</target>
      </trans-unit>
      <trans-unit id="56728">
        <source>在任何插件的配置界面点击右上角的「删除插件」可删除这份配置。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">在任何外掛的配置介面點選右上角的「刪除外掛」可刪除這份配置。</target>
      </trans-unit>
      <trans-unit id="56730">
        <source>与之类似，在分组的配置界面点击右上角的「删除分组」可删除这个分组。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">與之類似，在分組的配置介面點選右上角的「刪除分組」可刪除這個分組。</target>
      </trans-unit>
      <trans-unit id="56732">
        <source>删除分组时，分组内的所有插件也会一并删除。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">刪除分組時，分組內的所有外掛也會一併刪除。</target>
      </trans-unit>
      <trans-unit id="56734">
        <source>更新和卸载插件</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">更新和解除安裝外掛</target>
      </trans-unit>
      <trans-unit id="63996">
        <source>依赖管理功能仅为生产环境设计。</source>
        <target state="needs-translation">依赖管理功能仅为生产环境设计。</target>
      </trans-unit>
      <trans-unit id="63998">
        <source>如果当前 Koishi 是开发环境，请使用 [`dep`](../../guide/develop/workspace.md#dep) 命令来更新依赖。</source>
        <target state="needs-translation">如果当前 Koishi 是开发环境，请使用 [`dep`](../../guide/develop/workspace.md#dep) 命令来更新依赖。</target>
      </trans-unit>
      <trans-unit id="56736">
        <source>前往「依赖管理」页面，你可以在这里看到依赖列表。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">前往「依賴管理」頁面，你可以在這裡看到依賴列表。</target>
      </trans-unit>
      <trans-unit id="56738">
        <source>依赖可能包括 Koishi 本体，各种插件，以及支持插件运行的软件包等。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">依賴可能包括 Koishi 本體，各種外掛，以及支援外掛執行的軟體包等。</target>
      </trans-unit>
      <trans-unit id="56740">
        <source>当依赖的状态显示为「可更新」时，点击其右侧的「修改」按钮，在弹出的窗口左上角选择你需要的版本，点击右下角的「更新」按钮即可完成更新。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">當依賴的狀態顯示為「可更新」時，點選其右側的「修改」按鈕，在彈出的視窗左上角選擇你需要的版本，點選右下角的「更新」按鈕即可完成更新。</target>
      </trans-unit>
      <trans-unit id="56742">
        <source>你也可以批量更新多个插件，通过依赖名右侧的下拉菜单选择好所需更改的版本，点击右上角的「应用更改」按钮即可。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">你也可以批次更新多個外掛，透過依賴名右側的下拉選單選擇好所需更改的版本，點選右上角的「應用更改」按鈕即可。</target>
      </trans-unit>
      <trans-unit id="56744">
        <source>此外，右上角的「全部更新」按钮可以一键更新所有依赖。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">此外，右上角的「全部更新」按鈕可以一鍵更新所有依賴。</target>
      </trans-unit>
      <trans-unit id="56746" translate="no">
        <source>![dependencies](/manual/console/dependencies.light.webp) {.light-only}</source>
        <target>![dependencies](/manual/console/dependencies.light.webp) {.light-only}</target>
      </trans-unit>
      <trans-unit id="56748" translate="no">
        <source>![dependencies](/manual/console/dependencies.dark.webp) {.dark-only}</source>
        <target>![dependencies](/manual/console/dependencies.dark.webp) {.dark-only}</target>
      </trans-unit>
    </body>
  </file>
  <file id="1640" original="/[koishijs.docs] main/zh-CN/manual/usage/platform.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="56750">
        <source>账号登录与绑定</source>
        <target state="needs-translation">账号登录与绑定</target>
      </trans-unit>
      <trans-unit id="56752">
        <source>Koishi 说自己是一个「跨平台」的框架，但是这个「跨平台」是指什么呢？</source>
        <target state="needs-translation">Koishi 说自己是一个「跨平台」的框架，但是这个「跨平台」是指什么呢？</target>
      </trans-unit>
      <trans-unit id="56754">
        <source>这并不单单是指 Koishi 支持多个运行平台，而是指 Koishi 能够同时接入多个聊天平台，并提供最原生的体验：</source>
        <target state="needs-translation">这并不单单是指 Koishi 支持多个运行平台，而是指 Koishi 能够同时接入多个聊天平台，并提供最原生的体验：</target>
      </trans-unit>
      <trans-unit id="56756">
        <source>Koishi 提供了统一的接口，你可以在任何聊天平台上享受完整的 Koishi 生态。</source>
        <target state="needs-translation">Koishi 提供了统一的接口，你可以在任何聊天平台上享受完整的 Koishi 生态。</target>
      </trans-unit>
      <trans-unit id="56758">
        <source>Koishi 应用可以同时接入多个聊天平台，用户可以在任意平台上与你的机器人进行交互。</source>
        <target state="needs-translation">Koishi 应用可以同时接入多个聊天平台，用户可以在任意平台上与你的机器人进行交互。</target>
      </trans-unit>
      <trans-unit id="56760">
        <source>Koishi 原生地支持了跨平台账号绑定，这使得用户可以带着全部数据进行无感迁移。</source>
        <target state="needs-translation">Koishi 原生地支持了跨平台账号绑定，这使得用户可以带着全部数据进行无感迁移。</target>
      </trans-unit>
      <trans-unit id="56762">
        <source>现在就让我们来说说，如何在 Koishi 中使用跨平台的账号系统。</source>
        <target state="needs-translation">现在就让我们来说说，如何在 Koishi 中使用跨平台的账号系统。</target>
      </trans-unit>
      <trans-unit id="56764">
        <source>获取账号信息</source>
        <target state="needs-translation">获取账号信息</target>
      </trans-unit>
      <trans-unit id="56766">
        <source>有些平台的账号信息是不可见的，所以我们需要借助一些工具来获取它们。</source>
        <target state="needs-translation">有些平台的账号信息是不可见的，所以我们需要借助一些工具来获取它们。</target>
      </trans-unit>
      <trans-unit id="56768">
        <source>[inspect](../../plugins/common/inspect.md) 插件提供了获取会话信息的能力。</source>
        <target state="needs-translation">[inspect](../../plugins/common/inspect.md) 插件提供了获取会话信息的能力。</target>
      </trans-unit>
      <trans-unit id="56770">
        <source>安装这个插件后，使用任意平台账号向机器人发送 `inspect` (这里不要使用沙盒，不然只能获得沙盒用户的数据)，就可以获得下面的会话信息：</source>
        <target state="needs-translation">安装这个插件后，使用任意平台账号向机器人发送 `inspect` (这里不要使用沙盒，不然只能获得沙盒用户的数据)，就可以获得下面的会话信息：</target>
      </trans-unit>
      <trans-unit id="56772">
        <source>inspect</source>
        <target state="needs-translation">inspect</target>
      </trans-unit>
      <trans-unit id="56774">
        <source>平台名：discord</source>
        <target state="needs-translation">平台名：discord</target>
      </trans-unit>
      <trans-unit id="56776">
        <source>消息 ID：1085992290352373951</source>
        <target state="needs-translation">消息 ID：1085992290352373951</target>
      </trans-unit>
      <trans-unit id="56778">
        <source>频道 ID：835804172850561094</source>
        <target state="needs-translation">频道 ID：835804172850561094</target>
      </trans-unit>
      <trans-unit id="56780">
        <source>群组 ID：811975252883800125</source>
        <target state="needs-translation">群组 ID：811975252883800125</target>
      </trans-unit>
      <trans-unit id="56782">
        <source>用户 ID：811972350065115208</source>
        <target state="needs-translation">用户 ID：811972350065115208</target>
      </trans-unit>
      <trans-unit id="56784">
        <source>自身 ID：952190117479600159</source>
        <target state="needs-translation">自身 ID：952190117479600159</target>
      </trans-unit>
      <trans-unit id="56786">
        <source>如果你要进行登录或者绑定，这里的「平台名」和「用户 ID」会很有用。</source>
        <target state="needs-translation">如果你要进行登录或者绑定，这里的「平台名」和「用户 ID」会很有用。</target>
      </trans-unit>
      <trans-unit id="67002">
        <source>控制台登录 {#console-login}</source>
        <target state="needs-translation">控制台登录 {#console-login}</target>
      </trans-unit>
      <trans-unit id="56790">
        <source>[auth](../../plugins/console/auth.md) 插件允许任何用户在控制台登录 Koishi 账号并管理自己的用户信息。</source>
        <target state="needs-translation">[auth](../../plugins/console/auth.md) 插件允许任何用户在控制台登录 Koishi 账号并管理自己的用户信息。</target>
      </trans-unit>
      <trans-unit id="56792">
        <source>此外，该插件还自带了一个管理员账号，对于刚刚搭建好 Koishi 的用户来说，这是最方便的提权方式。</source>
        <target state="needs-translation">此外，该插件还自带了一个管理员账号，对于刚刚搭建好 Koishi 的用户来说，这是最方便的提权方式。</target>
      </trans-unit>
      <trans-unit id="56794">
        <source>配置登录插件</source>
        <target state="needs-translation">配置登录插件</target>
      </trans-unit>
      <trans-unit id="56796">
        <source>进入「插件配置」界面，并点击 auth 插件。</source>
        <target state="needs-translation">进入「插件配置」界面，并点击 auth 插件。</target>
      </trans-unit>
      <trans-unit id="56798">
        <source>这里我们会看到有一个「管理员设置」：</source>
        <target state="needs-translation">这里我们会看到有一个「管理员设置」：</target>
      </trans-unit>
      <trans-unit id="56800" translate="no">
        <source>![plugin-login](/manual/console/plugin-login.light.webp) {.light-only}</source>
        <target>![plugin-login](/manual/console/plugin-login.light.webp) {.light-only}</target>
      </trans-unit>
      <trans-unit id="56802" translate="no">
        <source>![plugin-login](/manual/console/plugin-login.dark.webp) {.dark-only}</source>
        <target>![plugin-login](/manual/console/plugin-login.dark.webp) {.dark-only}</target>
      </trans-unit>
      <trans-unit id="56804">
        <source>填写你自己准备好的密码，然后点击「启用插件」。</source>
        <target state="needs-translation">填写你自己准备好的密码，然后点击「启用插件」。</target>
      </trans-unit>
      <trans-unit id="56806">
        <source>此时会弹出一个登录框，选择「用户密码登录」，填写你刚刚配置好的用户名 (如果你没改就是默认值 `admin`) 和密码，点击「登录」即可进入个人页面。</source>
        <target state="needs-translation">此时会弹出一个登录框，选择「用户密码登录」，填写你刚刚配置好的用户名 (如果你没改就是默认值 `admin`) 和密码，点击「登录」即可进入个人页面。</target>
      </trans-unit>
      <trans-unit id="56808" translate="no">
        <source>![login-password](/manual/console/login-password.light.webp) {.light-only}</source>
        <target>![login-password](/manual/console/login-password.light.webp) {.light-only}</target>
      </trans-unit>
      <trans-unit id="56810" translate="no">
        <source>![login-password](/manual/console/login-password.dark.webp) {.dark-only}</source>
        <target>![login-password](/manual/console/login-password.dark.webp) {.dark-only}</target>
      </trans-unit>
      <trans-unit id="56812">
        <source>普通用户登录</source>
        <target state="needs-translation">普通用户登录</target>
      </trans-unit>
      <trans-unit id="56814">
        <source>如果你是机器人的普通用户，而机器人也配置了控制台登录插件，那么当你初次进入控制台，会发现只有寥寥几个页面是能访问的。</source>
        <target state="needs-translation">如果你是机器人的普通用户，而机器人也配置了控制台登录插件，那么当你初次进入控制台，会发现只有寥寥几个页面是能访问的。</target>
      </trans-unit>
      <trans-unit id="56816">
        <source>这是因为你尚未登录。</source>
        <target state="needs-translation">这是因为你尚未登录。</target>
      </trans-unit>
      <trans-unit id="56818">
        <source>点击左下角的「登录」按钮，选择「平台账号登录」，并输入你的平台名和用户 ID。</source>
        <target state="needs-translation">点击左下角的「登录」按钮，选择「平台账号登录」，并输入你的平台名和用户 ID。</target>
      </trans-unit>
      <trans-unit id="56820">
        <source>点击「获取验证码」，并把页面中出现的验证码通过上述账号私聊发送给机器人，即可完成登录。</source>
        <target state="needs-translation">点击「获取验证码」，并把页面中出现的验证码通过上述账号私聊发送给机器人，即可完成登录。</target>
      </trans-unit>
      <trans-unit id="56822" translate="no">
        <source>![login-platform](/manual/console/login-platform.light.webp) {.light-only}</source>
        <target>![login-platform](/manual/console/login-platform.light.webp) {.light-only}</target>
      </trans-unit>
      <trans-unit id="56824" translate="no">
        <source>![login-platform](/manual/console/login-platform.dark.webp) {.dark-only}</source>
        <target>![login-platform](/manual/console/login-platform.dark.webp) {.dark-only}</target>
      </trans-unit>
      <trans-unit id="56826">
        <source>登录完成后，你会被重定向到个人页面。</source>
        <target state="needs-translation">登录完成后，你会被重定向到个人页面。</target>
      </trans-unit>
      <trans-unit id="56828">
        <source>在这个页面中你可以修改自己的用户名和密码。</source>
        <target state="needs-translation">在这个页面中你可以修改自己的用户名和密码。</target>
      </trans-unit>
      <trans-unit id="56830">
        <source>普通用户第一次登录只能使用平台账号登录，而设置了用户名和密码后，点击右上角的「应用更改」，未来就可以使用用户密码登录了。</source>
        <target state="needs-translation">普通用户第一次登录只能使用平台账号登录，而设置了用户名和密码后，点击右上角的「应用更改」，未来就可以使用用户密码登录了。</target>
      </trans-unit>
      <trans-unit id="56832">
        <source>账号绑定</source>
        <target state="needs-translation">账号绑定</target>
      </trans-unit>
      <trans-unit id="56834">
        <source>Koishi 支持账号绑定，即一个 Koishi 账号可以同时对应多个平台用户。</source>
        <target state="needs-translation">Koishi 支持账号绑定，即一个 Koishi 账号可以同时对应多个平台用户。</target>
      </trans-unit>
      <trans-unit id="56836">
        <source>完成绑定后，你无论在哪个平台上与机器人交互，数据都会被共享。</source>
        <target state="needs-translation">完成绑定后，你无论在哪个平台上与机器人交互，数据都会被共享。</target>
      </trans-unit>
      <trans-unit id="56838">
        <source>Koishi 官方目前提供了两个插件实现账号绑定，我们将逐一介绍。</source>
        <target state="needs-translation">Koishi 官方目前提供了两个插件实现账号绑定，我们将逐一介绍。</target>
      </trans-unit>
      <trans-unit id="56840">
        <source>在控制台中绑定</source>
        <target state="needs-translation">在控制台中绑定</target>
      </trans-unit>
      <trans-unit id="56842">
        <source>登录控制台后，任何用户都可以在个人页面中绑定平台账号。</source>
        <target state="needs-translation">登录控制台后，任何用户都可以在个人页面中绑定平台账号。</target>
      </trans-unit>
      <trans-unit id="56844">
        <source>点击「平台账号绑定」右侧的「添加」按钮，并使用你要绑定的账号完成一遍类似平台账号登录的流程，就大功告成了。</source>
        <target state="needs-translation">点击「平台账号绑定」右侧的「添加」按钮，并使用你要绑定的账号完成一遍类似平台账号登录的流程，就大功告成了。</target>
      </trans-unit>
      <trans-unit id="56846" translate="no">
        <source>![profile](/manual/console/profile.light.webp) {.light-only}</source>
        <target>![profile](/manual/console/profile.light.webp) {.light-only}</target>
      </trans-unit>
      <trans-unit id="56848" translate="no">
        <source>![profile](/manual/console/profile.dark.webp) {.dark-only}</source>
        <target>![profile](/manual/console/profile.dark.webp) {.dark-only}</target>
      </trans-unit>
      <trans-unit id="56850">
        <source>如果要解除绑定，点击对应平台账号右侧的「解绑」即可。</source>
        <target state="needs-translation">如果要解除绑定，点击对应平台账号右侧的「解绑」即可。</target>
      </trans-unit>
      <trans-unit id="56852">
        <source>通过指令绑定</source>
        <target state="needs-translation">通过指令绑定</target>
      </trans-unit>
      <trans-unit id="56854">
        <source>[bind](../../plugins/common/bind.md) 插件通过指令也实现了账号绑定。</source>
        <target state="needs-translation">[bind](../../plugins/common/bind.md) 插件通过指令也实现了账号绑定。</target>
      </trans-unit>
      <trans-unit id="56856">
        <source>使用要绑定的平台账号向机器人发送 `bind`：</source>
        <target state="needs-translation">使用要绑定的平台账号向机器人发送 `bind`：</target>
      </trans-unit>
      <trans-unit id="56858">
        <source>bind</source>
        <target state="needs-translation">bind</target>
      </trans-unit>
      <trans-unit id="56860">
        <source>指令 bind 可用于在多个平台间绑定用户数据。</source>
        <target state="needs-translation">指令 bind 可用于在多个平台间绑定用户数据。</target>
      </trans-unit>
      <trans-unit id="56862">
        <source>绑定过程中，原始平台的用户数据将完全保留，而目标平台的用户数据将被原始平台的数据所覆盖。</source>
        <target state="needs-translation">绑定过程中，原始平台的用户数据将完全保留，而目标平台的用户数据将被原始平台的数据所覆盖。</target>
      </trans-unit>
      <trans-unit id="56864">
        <source>请确认当前平台是你的目标平台，并在 5 分钟内使用你的账号在原始平台内向机器人发送以下文本：</source>
        <target state="needs-translation">请确认当前平台是你的目标平台，并在 5 分钟内使用你的账号在原始平台内向机器人发送以下文本：</target>
      </trans-unit>
      <trans-unit id="56866">
        <source>Koishi/123456</source>
        <target state="needs-translation">Koishi/123456</target>
      </trans-unit>
      <trans-unit id="56868">
        <source>跟随提示，使用原始平台账号向机器人发送 `Koishi/123456`。</source>
        <target state="needs-translation">跟随提示，使用原始平台账号向机器人发送 `Koishi/123456`。</target>
      </trans-unit>
      <trans-unit id="56870">
        <source>如果你的第一条消息是私聊消息，那么此时绑定已经完成。</source>
        <target state="needs-translation">如果你的第一条消息是私聊消息，那么此时绑定已经完成。</target>
      </trans-unit>
      <trans-unit id="56872">
        <source>如果你的第一条消息是群聊消息，则机器人会再次让你进行一遍确认：</source>
        <target state="needs-translation">如果你的第一条消息是群聊消息，则机器人会再次让你进行一遍确认：</target>
      </trans-unit>
      <trans-unit id="56874">
        <source>Koishi/123456</source>
        <target state="needs-translation">Koishi/123456</target>
      </trans-unit>
      <trans-unit id="56876">
        <source>令牌核验成功！</source>
        <target state="needs-translation">令牌核验成功！</target>
      </trans-unit>
      <trans-unit id="56878">
        <source>下面将进行第二步操作。</source>
        <target state="needs-translation">下面将进行第二步操作。</target>
      </trans-unit>
      <trans-unit id="56880">
        <source>请在 5 分钟内使用你的账号在目标平台内向机器人发送以下文本：</source>
        <target state="needs-translation">请在 5 分钟内使用你的账号在目标平台内向机器人发送以下文本：</target>
      </trans-unit>
      <trans-unit id="56882">
        <source>Koishi/654321</source>
        <target state="needs-translation">Koishi/654321</target>
      </trans-unit>
      <trans-unit id="56884">
        <source>注意：当前平台是你的原始平台，这里的用户数据将覆盖目标平台的数据。</source>
        <target state="needs-translation">注意：当前平台是你的原始平台，这里的用户数据将覆盖目标平台的数据。</target>
      </trans-unit>
      <trans-unit id="56886">
        <source>再次跟随提示，使用目标平台账号向机器人发送 `Koishi/654321`，即可完成绑定。</source>
        <target state="needs-translation">再次跟随提示，使用目标平台账号向机器人发送 `Koishi/654321`，即可完成绑定。</target>
      </trans-unit>
      <trans-unit id="56888">
        <source>绑定完成后，你可以随时在目标平台向机器人发送 `bind -r` 来解除绑定状态。</source>
        <target state="needs-translation">绑定完成后，你可以随时在目标平台向机器人发送 `bind -r` 来解除绑定状态。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1642" original="/[koishijs.docs] main/zh-CN/market/index.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="56890">
        <source>market</source>
        <target state="needs-translation">market</target>
      </trans-unit>
      <trans-unit id="56892">
        <source>插件市场</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">外掛市場</target>
      </trans-unit>
    </body>
  </file>
  <file id="1644" original="/[koishijs.docs] main/zh-CN/plugins/adapter/dingtalk.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="56894">
        <source>@koishijs/plugin-adapter-dingtalk</source>
        <target state="needs-translation">@koishijs/plugin-adapter-dingtalk</target>
      </trans-unit>
      <trans-unit id="63682">
        <source>如果选择通信方式为 `http`，那么你需要准备一个带有 SSL 证书的公网域名，并将 Koishi [部署到公网](../../manual/recipe/server.md)。</source>
        <target state="needs-translation">如果选择通信方式为 `http`，那么你需要准备一个带有 SSL 证书的公网域名，并将 Koishi [部署到公网](../../manual/recipe/server.md)。</target>
      </trans-unit>
      <trans-unit id="56896">
        <source>接入方式</source>
        <target state="needs-translation">接入方式</target>
      </trans-unit>
      <trans-unit id="56898">
        <source>前往 [开放平台 &gt; 应用开发 &gt; 钉钉应用](https://open-dev.dingtalk.com/fe/app#/corp/app) 并点击「创建应用」，输入相关信息确定创建</source>
        <target state="needs-translation">前往 [开放平台 &gt; 应用开发 &gt; 钉钉应用](https://open-dev.dingtalk.com/fe/app#/corp/app) 并点击「创建应用」，输入相关信息确定创建</target>
      </trans-unit>
      <trans-unit id="63684">
        <source>在跳转至的页面，选择添加「机器人」；勾选「机器人配置」，输入相关信息；消息接收模式选择 `Stream 模式` 时，插件的 `protocol` 选择 `ws`，选择 `HTTP 模式` 时，将机器人的 `selfUrl` 值后连接 `/dingtalk` (如 `https://example.com/dingtalk`) 填入钉钉平台的消息接收地址，插件的 `protocol` 选择 `http`；最后点击发布按钮</source>
        <target state="needs-translation">在跳转至的页面，选择添加「机器人」；勾选「机器人配置」，输入相关信息；消息接收模式选择 `Stream 模式` 时，插件的 `protocol` 选择 `ws`，选择 `HTTP 模式` 时，将机器人的 `selfUrl` 值后连接 `/dingtalk` (如 `https://example.com/dingtalk`) 填入钉钉平台的消息接收地址，插件的 `protocol` 选择 `http`；最后点击发布按钮</target>
      </trans-unit>
      <trans-unit id="56902">
        <source>在左侧打开「凭证与基础信息」页面，将 `Client ID` 填入插件的 `appkey` 字段，将 `Client Secret` 填入插件的 `secret` 字段。</source>
        <target state="needs-translation">在左侧打开「凭证与基础信息」页面，将 `Client ID` 填入插件的 `appkey` 字段，将 `Client Secret` 填入插件的 `secret` 字段。</target>
      </trans-unit>
      <trans-unit id="56904">
        <source>(可选) 为了在控制台中显示应用名称与头像，请参照 [添加接口调用权限](https://open.dingtalk.com/document/orgapp/add-api-permission) 操作，申请 `qyapi_get_microapp_list` 权限；在左侧打开「添加应用能力」，选择添加「网页应用」。</source>
        <target state="needs-translation">(可选) 为了在控制台中显示应用名称与头像，请参照 [添加接口调用权限](https://open.dingtalk.com/document/orgapp/add-api-permission) 操作，申请 `qyapi_get_microapp_list` 权限；在左侧打开「添加应用能力」，选择添加「网页应用」。</target>
      </trans-unit>
      <trans-unit id="56906">
        <source>将「企业内部应用 AgentId」填入插件的 `agentId` 字段</source>
        <target state="needs-translation">将「企业内部应用 AgentId」填入插件的 `agentId` 字段</target>
      </trans-unit>
      <trans-unit id="56908">
        <source>配置项</source>
        <target state="needs-translation">配置项</target>
      </trans-unit>
      <trans-unit id="56910">
        <source>config.protocol</source>
        <target state="needs-translation">config.protocol</target>
      </trans-unit>
      <trans-unit id="56912">
        <source>可选值: http, ws</source>
        <target state="needs-translation">可选值: http, ws</target>
      </trans-unit>
      <trans-unit id="56914">
        <source>要使用的协议类型。</source>
        <target state="needs-translation">要使用的协议类型。</target>
      </trans-unit>
      <trans-unit id="56916">
        <source>config.secret</source>
        <target state="needs-translation">config.secret</target>
      </trans-unit>
      <trans-unit id="56918">
        <source>类型: `string`</source>
        <target state="needs-translation">类型: `string`</target>
      </trans-unit>
      <trans-unit id="56920">
        <source>必需选项</source>
        <target state="needs-translation">必需选项</target>
      </trans-unit>
      <trans-unit id="56922">
        <source>机器人密钥。</source>
        <target state="needs-translation">机器人密钥。</target>
      </trans-unit>
      <trans-unit id="56924">
        <source>config.appkey</source>
        <target state="needs-translation">config.appkey</target>
      </trans-unit>
      <trans-unit id="56926">
        <source>类型: `string`</source>
        <target state="needs-translation">类型: `string`</target>
      </trans-unit>
      <trans-unit id="56928">
        <source>必需选项</source>
        <target state="needs-translation">必需选项</target>
      </trans-unit>
      <trans-unit id="56930">
        <source>机器人 AppKey。</source>
        <target state="needs-translation">机器人 AppKey。</target>
      </trans-unit>
      <trans-unit id="56932">
        <source>config.agentId</source>
        <target state="needs-translation">config.agentId</target>
      </trans-unit>
      <trans-unit id="56934">
        <source>类型: `string`</source>
        <target state="needs-translation">类型: `string`</target>
      </trans-unit>
      <trans-unit id="56936">
        <source>必需选项</source>
        <target state="needs-translation">必需选项</target>
      </trans-unit>
      <trans-unit id="56938">
        <source>机器人 AgentId。</source>
        <target state="needs-translation">机器人 AgentId。</target>
      </trans-unit>
      <trans-unit id="56940">
        <source>HTTP 配置项</source>
        <target state="needs-translation">HTTP 配置项</target>
      </trans-unit>
      <trans-unit id="56942">
        <source>无。</source>
        <target state="needs-translation">无。</target>
      </trans-unit>
      <trans-unit id="56944">
        <source>WS 配置项</source>
        <target state="needs-translation">WS 配置项</target>
      </trans-unit>
      <trans-unit id="56946">
        <source>包括全部的 [`WsClient`](../../api/core/adapter.md#类-adapter-wsclient) 选项。</source>
        <target state="needs-translation">包括全部的 [`WsClient`](../../api/core/adapter.md#类-adapter-wsclient) 选项。</target>
      </trans-unit>
      <trans-unit id="63764">
        <source>内部接口</source>
        <target state="needs-translation">内部接口</target>
      </trans-unit>
      <trans-unit id="63960">
        <source>关于内部接口的使用方式，请参见 [访问内部接口](../../guide/adapter/bot.md#access-from-plugin)。</source>
        <target state="needs-translation">关于内部接口的使用方式，请参见 [访问内部接口](../../guide/adapter/bot.md#access-from-plugin)。</target>
      </trans-unit>
      <trans-unit id="56950" translate="no">
        <source>[`internal.addAttendee()`](https://open.dingtalk.com/document/isvapp/add-schedule-participant)</source>
        <target>[`internal.addAttendee()`](https://open.dingtalk.com/document/isvapp/add-schedule-participant)</target>
      </trans-unit>
      <trans-unit id="56952" translate="no">
        <source>[`internal.addCityCarApply()`](https://open.dingtalk.com/document/isvapp/synchronize-third-party-city-vehicle-approval-form)</source>
        <target>[`internal.addCityCarApply()`](https://open.dingtalk.com/document/isvapp/synchronize-third-party-city-vehicle-approval-form)</target>
      </trans-unit>
      <trans-unit id="56954" translate="no">
        <source>[`internal.addCrmPersonalCustomer()`](https://open.dingtalk.com/document/orgapp/add-crm-personal-customers)</source>
        <target>[`internal.addCrmPersonalCustomer()`](https://open.dingtalk.com/document/orgapp/add-crm-personal-customers)</target>
      </trans-unit>
      <trans-unit id="56956" translate="no">
        <source>[`internal.addCustomSpace()`](https://open.dingtalk.com/document/isvapp/new-custom-space)</source>
        <target>[`internal.addCustomSpace()`](https://open.dingtalk.com/document/isvapp/new-custom-space)</target>
      </trans-unit>
      <trans-unit id="56958" translate="no">
        <source>[`internal.addFolder()`](https://open.dingtalk.com/document/isvapp/add-folder)</source>
        <target>[`internal.addFolder()`](https://open.dingtalk.com/document/isvapp/add-folder)</target>
      </trans-unit>
      <trans-unit id="56960" translate="no">
        <source>[`internal.addGroupMember()`](https://open.dingtalk.com/document/isvapp/add-group-members)</source>
        <target>[`internal.addGroupMember()`](https://open.dingtalk.com/document/isvapp/add-group-members)</target>
      </trans-unit>
      <trans-unit id="56962" translate="no">
        <source>[`internal.addMeetingRooms()`](https://open.dingtalk.com/document/app/add-a-meeting-room)</source>
        <target>[`internal.addMeetingRooms()`](https://open.dingtalk.com/document/app/add-a-meeting-room)</target>
      </trans-unit>
      <trans-unit id="56964" translate="no">
        <source>[`internal.addMemberToServiceGroup()`](https://open.dingtalk.com/document/orgapp/add-service-group-members)</source>
        <target>[`internal.addMemberToServiceGroup()`](https://open.dingtalk.com/document/orgapp/add-service-group-members)</target>
      </trans-unit>
      <trans-unit id="56966" translate="no">
        <source>[`internal.addPoint()`](https://open.dingtalk.com/document/isvapp/increase-or-decrease-resident-points)</source>
        <target>[`internal.addPoint()`](https://open.dingtalk.com/document/isvapp/increase-or-decrease-resident-points)</target>
      </trans-unit>
      <trans-unit id="56968" translate="no">
        <source>[`internal.addProjectMember()`](https://open.dingtalk.com/document/isvapp/add-project-members)</source>
        <target>[`internal.addProjectMember()`](https://open.dingtalk.com/document/isvapp/add-project-members)</target>
      </trans-unit>
      <trans-unit id="56970" translate="no">
        <source>[`internal.addRecentUserAppList()`](https://open.dingtalk.com/document/app/add-recently-used-apps-in-bulk)</source>
        <target>[`internal.addRecentUserAppList()`](https://open.dingtalk.com/document/app/add-recently-used-apps-in-bulk)</target>
      </trans-unit>
      <trans-unit id="56972" translate="no">
        <source>[`internal.appendSpace()`](https://open.dingtalk.com/document/orgapp/add-field-interface)</source>
        <target>[`internal.appendSpace()`](https://open.dingtalk.com/document/orgapp/add-field-interface)</target>
      </trans-unit>
      <trans-unit id="56974" translate="no">
        <source>[`internal.approvalList()`](https://open.dingtalk.com/document/isvapp/obtains-the-print-approval-list-for-process-tasks)</source>
        <target>[`internal.approvalList()`](https://open.dingtalk.com/document/isvapp/obtains-the-print-approval-list-for-process-tasks)</target>
      </trans-unit>
      <trans-unit id="56976" translate="no">
        <source>[`internal.approveCityCarApply()`](https://open.dingtalk.com/document/isvapp/approval-of-third-party-city-car-application-form)</source>
        <target>[`internal.approveCityCarApply()`](https://open.dingtalk.com/document/isvapp/approval-of-third-party-city-car-application-form)</target>
      </trans-unit>
      <trans-unit id="56978" translate="no">
        <source>[`internal.archiveProject()`](https://open.dingtalk.com/document/orgapp/items-in-recycle-bin)</source>
        <target>[`internal.archiveProject()`](https://open.dingtalk.com/document/orgapp/items-in-recycle-bin)</target>
      </trans-unit>
      <trans-unit id="56980" translate="no">
        <source>[`internal.archiveTask()`](https://open.dingtalk.com/document/orgapp/archive-tasks)</source>
        <target>[`internal.archiveTask()`](https://open.dingtalk.com/document/orgapp/archive-tasks)</target>
      </trans-unit>
      <trans-unit id="56982" translate="no">
        <source>[`internal.banOrOpenGroupWords()`](https://open.dingtalk.com/document/isvapp/exclusive-dingtalk-group-ban)</source>
        <target>[`internal.banOrOpenGroupWords()`](https://open.dingtalk.com/document/isvapp/exclusive-dingtalk-group-ban)</target>
      </trans-unit>
      <trans-unit id="56984" translate="no">
        <source>[`internal.batchAddContacts()`](https://open.dingtalk.com/document/orgapp/add-contact-data-in-batches)</source>
        <target>[`internal.batchAddContacts()`](https://open.dingtalk.com/document/orgapp/add-contact-data-in-batches)</target>
      </trans-unit>
      <trans-unit id="56986" translate="no">
        <source>[`internal.batchAddFollowRecords()`](https://open.dingtalk.com/document/orgapp/batch-add-follow-up-record-data)</source>
        <target>[`internal.batchAddFollowRecords()`](https://open.dingtalk.com/document/orgapp/batch-add-follow-up-record-data)</target>
      </trans-unit>
      <trans-unit id="56988" translate="no">
        <source>[`internal.batchAddRelationDatas()`](https://open.dingtalk.com/document/orgapp/add-multiple-relationship-data-in-batches)</source>
        <target>[`internal.batchAddRelationDatas()`](https://open.dingtalk.com/document/orgapp/add-multiple-relationship-data-in-batches)</target>
      </trans-unit>
      <trans-unit id="56990" translate="no">
        <source>[`internal.batchApproveUnionApply()`](https://open.dingtalk.com/document/isvapp/apply-for-association-with-multiple-branches-in-batch-batch-through-the-application-of-partner-organizations-to-join-contact)</source>
        <target>[`internal.batchApproveUnionApply()`](https://open.dingtalk.com/document/isvapp/apply-for-association-with-multiple-branches-in-batch-batch-through-the-application-of-partner-organizations-to-join-contact)</target>
      </trans-unit>
      <trans-unit id="56992" translate="no">
        <source>[`internal.batchGetFormDataByIdList()`](https://open.dingtalk.com/document/isvapp/obtain-multiple-form-instance-data)</source>
        <target>[`internal.batchGetFormDataByIdList()`](https://open.dingtalk.com/document/isvapp/obtain-multiple-form-instance-data)</target>
      </trans-unit>
      <trans-unit id="56994" translate="no">
        <source>[`internal.batchInsertBizObject()`](https://open.dingtalk.com/document/isvapp/batch-add-form-business-data)</source>
        <target>[`internal.batchInsertBizObject()`](https://open.dingtalk.com/document/isvapp/batch-add-form-business-data)</target>
      </trans-unit>
      <trans-unit id="56996" translate="no">
        <source>[`internal.batchOTOQuery()`](https://open.dingtalk.com/document/orgapp/chatbot-batch-query-the-read-status-of-messages)</source>
        <target>[`internal.batchOTOQuery()`](https://open.dingtalk.com/document/orgapp/chatbot-batch-query-the-read-status-of-messages)</target>
      </trans-unit>
      <trans-unit id="56998" translate="no">
        <source>[`internal.batchQueryGroupMember()`](https://open.dingtalk.com/document/orgapp/query-group-members)</source>
        <target>[`internal.batchQueryGroupMember()`](https://open.dingtalk.com/document/orgapp/query-group-members)</target>
      </trans-unit>
      <trans-unit id="57000" translate="no">
        <source>[`internal.batchRecallOTO()`](https://open.dingtalk.com/document/orgapp/batch-message-recall-chat)</source>
        <target>[`internal.batchRecallOTO()`](https://open.dingtalk.com/document/orgapp/batch-message-recall-chat)</target>
      </trans-unit>
      <trans-unit id="57002" translate="no">
        <source>[`internal.batchRecallPrivateChat()`](https://open.dingtalk.com/document/orgapp/batch-withdrawal-of-single-chat-robot-messages-in-person-to-person-conversations)</source>
        <target>[`internal.batchRecallPrivateChat()`](https://open.dingtalk.com/document/orgapp/batch-withdrawal-of-single-chat-robot-messages-in-person-to-person-conversations)</target>
      </trans-unit>
      <trans-unit id="57004" translate="no">
        <source>[`internal.batchRemovalByFormInstanceIdList()`](https://open.dingtalk.com/document/isvapp/delete-multiple-form-instances)</source>
        <target>[`internal.batchRemovalByFormInstanceIdList()`](https://open.dingtalk.com/document/isvapp/delete-multiple-form-instances)</target>
      </trans-unit>
      <trans-unit id="57006" translate="no">
        <source>[`internal.batchRemoveFollowRecords()`](https://open.dingtalk.com/document/orgapp/batch-delete-follow-up-record-data)</source>
        <target>[`internal.batchRemoveFollowRecords()`](https://open.dingtalk.com/document/orgapp/batch-delete-follow-up-record-data)</target>
      </trans-unit>
      <trans-unit id="57008" translate="no">
        <source>[`internal.batchSaveFormData()`](https://open.dingtalk.com/document/isvapp/create-multiple-form-instances)</source>
        <target>[`internal.batchSaveFormData()`](https://open.dingtalk.com/document/isvapp/create-multiple-form-instances)</target>
      </trans-unit>
      <trans-unit id="57010" translate="no">
        <source>[`internal.batchSendOTO()`](https://open.dingtalk.com/document/orgapp/chatbots-send-one-on-one-chat-messages-in-batches)</source>
        <target>[`internal.batchSendOTO()`](https://open.dingtalk.com/document/orgapp/chatbots-send-one-on-one-chat-messages-in-batches)</target>
      </trans-unit>
      <trans-unit id="57012" translate="no">
        <source>[`internal.batchSendOfficialAccountOTOMessage()`](https://open.dingtalk.com/document/isvapp/batch-sending-of-service-window-messages)</source>
        <target>[`internal.batchSendOfficialAccountOTOMessage()`](https://open.dingtalk.com/document/isvapp/batch-sending-of-service-window-messages)</target>
      </trans-unit>
      <trans-unit id="57014" translate="no">
        <source>[`internal.batchUpdateContacts()`](https://open.dingtalk.com/document/orgapp/modify-contact-data-in-batches)</source>
        <target>[`internal.batchUpdateContacts()`](https://open.dingtalk.com/document/orgapp/modify-contact-data-in-batches)</target>
      </trans-unit>
      <trans-unit id="57016" translate="no">
        <source>[`internal.batchUpdateFollowRecords()`](https://open.dingtalk.com/document/orgapp/batch-update-follow-up-record-data)</source>
        <target>[`internal.batchUpdateFollowRecords()`](https://open.dingtalk.com/document/orgapp/batch-update-follow-up-record-data)</target>
      </trans-unit>
      <trans-unit id="57018" translate="no">
        <source>[`internal.batchUpdateFormDataByInstanceId()`](https://open.dingtalk.com/document/isvapp/batch-update-of-component-values-in-form-instances)</source>
        <target>[`internal.batchUpdateFormDataByInstanceId()`](https://open.dingtalk.com/document/isvapp/batch-update-of-component-values-in-form-instances)</target>
      </trans-unit>
      <trans-unit id="57020" translate="no">
        <source>[`internal.batchUpdateFormDataByInstanceMap()`](https://open.dingtalk.com/document/isvapp/batch-update-of-form-instances-through-form-component-data)</source>
        <target>[`internal.batchUpdateFormDataByInstanceMap()`](https://open.dingtalk.com/document/isvapp/batch-update-of-form-instances-through-form-component-data)</target>
      </trans-unit>
      <trans-unit id="57022" translate="no">
        <source>[`internal.batchUpdateRelationDatas()`](https://open.dingtalk.com/document/orgapp/update-multiple-relational-data-tables-at-a-time)</source>
        <target>[`internal.batchUpdateRelationDatas()`](https://open.dingtalk.com/document/orgapp/update-multiple-relational-data-tables-at-a-time)</target>
      </trans-unit>
      <trans-unit id="57024" translate="no">
        <source>[`internal.billSettementBtripTrain()`](https://open.dingtalk.com/document/isvapp/business-travel-train-ticket-settlement-bookkeeping-query-interface)</source>
        <target>[`internal.billSettementBtripTrain()`](https://open.dingtalk.com/document/isvapp/business-travel-train-ticket-settlement-bookkeeping-query-interface)</target>
      </trans-unit>
      <trans-unit id="57026" translate="no">
        <source>[`internal.billSettementCar()`](https://open.dingtalk.com/document/isvapp/query-interface-for-vehicle-settlement-and-bookkeeping)</source>
        <target>[`internal.billSettementCar()`](https://open.dingtalk.com/document/isvapp/query-interface-for-vehicle-settlement-and-bookkeeping)</target>
      </trans-unit>
      <trans-unit id="57028" translate="no">
        <source>[`internal.billSettementFlight()`](https://open.dingtalk.com/document/isvapp/ticket-settlement-bookkeeping-query-interface)</source>
        <target>[`internal.billSettementFlight()`](https://open.dingtalk.com/document/isvapp/ticket-settlement-bookkeeping-query-interface)</target>
      </trans-unit>
      <trans-unit id="57030" translate="no">
        <source>[`internal.billSettementHotel()`](https://open.dingtalk.com/document/isvapp/hotel-settlement-bookkeeping-query-interface)</source>
        <target>[`internal.billSettementHotel()`](https://open.dingtalk.com/document/isvapp/hotel-settlement-bookkeeping-query-interface)</target>
      </trans-unit>
      <trans-unit id="57032" translate="no">
        <source>[`internal.campusCreateCampus()`](https://open.dingtalk.com/document/isvapp/create-a-campus-project)</source>
        <target>[`internal.campusCreateCampus()`](https://open.dingtalk.com/document/isvapp/create-a-campus-project)</target>
      </trans-unit>
      <trans-unit id="57034" translate="no">
        <source>[`internal.campusCreateCampusGroup()`](https://open.dingtalk.com/document/isvapp/create-a-project-group)</source>
        <target>[`internal.campusCreateCampusGroup()`](https://open.dingtalk.com/document/isvapp/create-a-project-group)</target>
      </trans-unit>
      <trans-unit id="57036" translate="no">
        <source>[`internal.campusDeleteCampusGroup()`](https://open.dingtalk.com/document/isvapp/delete-a-project-group)</source>
        <target>[`internal.campusDeleteCampusGroup()`](https://open.dingtalk.com/document/isvapp/delete-a-project-group)</target>
      </trans-unit>
      <trans-unit id="57038" translate="no">
        <source>[`internal.campusGetCampus()`](https://open.dingtalk.com/document/isvapp/query-a-project-in-a-specified-campus)</source>
        <target>[`internal.campusGetCampus()`](https://open.dingtalk.com/document/isvapp/query-a-project-in-a-specified-campus)</target>
      </trans-unit>
      <trans-unit id="57040" translate="no">
        <source>[`internal.campusGetCampusGroup()`](https://open.dingtalk.com/document/isvapp/query-a-project-group-in-the-specified-park)</source>
        <target>[`internal.campusGetCampusGroup()`](https://open.dingtalk.com/document/isvapp/query-a-project-group-in-the-specified-park)</target>
      </trans-unit>
      <trans-unit id="57042" translate="no">
        <source>[`internal.cancelProcessInstance()`](https://open.dingtalk.com/document/isvapp/cancel-a-process-instance)</source>
        <target>[`internal.cancelProcessInstance()`](https://open.dingtalk.com/document/isvapp/cancel-a-process-instance)</target>
      </trans-unit>
      <trans-unit id="57044" translate="no">
        <source>[`internal.cancelScheduleConference()`](https://open.dingtalk.com/document/app/cancel-appointment-meeting)</source>
        <target>[`internal.cancelScheduleConference()`](https://open.dingtalk.com/document/app/cancel-appointment-meeting)</target>
      </trans-unit>
      <trans-unit id="57046" translate="no">
        <source>[`internal.changeGroupOwner()`](https://open.dingtalk.com/document/isvapp/change-group-owner)</source>
        <target>[`internal.changeGroupOwner()`](https://open.dingtalk.com/document/isvapp/change-group-owner)</target>
      </trans-unit>
      <trans-unit id="57048" translate="no">
        <source>[`internal.chatIdToOpenConversationId()`](https://open.dingtalk.com/document/orgapp/obtain-group-openconversationid)</source>
        <target>[`internal.chatIdToOpenConversationId()`](https://open.dingtalk.com/document/orgapp/obtain-group-openconversationid)</target>
      </trans-unit>
      <trans-unit id="57050" translate="no">
        <source>[`internal.chatSubAdminUpdate()`](https://open.dingtalk.com/document/orgapp/batch-setup-group-administrator)</source>
        <target>[`internal.chatSubAdminUpdate()`](https://open.dingtalk.com/document/orgapp/batch-setup-group-administrator)</target>
      </trans-unit>
      <trans-unit id="57052" translate="no">
        <source>[`internal.clear()`](https://open.dingtalk.com/document/app/clear-all)</source>
        <target>[`internal.clear()`](https://open.dingtalk.com/document/app/clear-all)</target>
      </trans-unit>
      <trans-unit id="57054" translate="no">
        <source>[`internal.clearData()`](https://open.dingtalk.com/document/app/clear-cell-data)</source>
        <target>[`internal.clearData()`](https://open.dingtalk.com/document/app/clear-cell-data)</target>
      </trans-unit>
      <trans-unit id="57056" translate="no">
        <source>[`internal.clearRecycleBin()`](https://open.dingtalk.com/document/isvapp/empty-the-recycle-bin)</source>
        <target>[`internal.clearRecycleBin()`](https://open.dingtalk.com/document/isvapp/empty-the-recycle-bin)</target>
      </trans-unit>
      <trans-unit id="57058" translate="no">
        <source>[`internal.clearRobotPlugin()`](https://open.dingtalk.com/document/orgapp/clear-single-chat-robot-quick-entry)</source>
        <target>[`internal.clearRobotPlugin()`](https://open.dingtalk.com/document/orgapp/clear-single-chat-robot-quick-entry)</target>
      </trans-unit>
      <trans-unit id="57060" translate="no">
        <source>[`internal.closeTopbox()`](https://open.dingtalk.com/document/orgapp/close-interactive-card-ceiling)</source>
        <target>[`internal.closeTopbox()`](https://open.dingtalk.com/document/orgapp/close-interactive-card-ceiling)</target>
      </trans-unit>
      <trans-unit id="57062" translate="no">
        <source>[`internal.closeVideoConference()`](https://open.dingtalk.com/document/isvapp/close-audio-video-conferencing)</source>
        <target>[`internal.closeVideoConference()`](https://open.dingtalk.com/document/isvapp/close-audio-video-conferencing)</target>
      </trans-unit>
      <trans-unit id="57064" translate="no">
        <source>[`internal.cohosts()`](https://open.dingtalk.com/document/orgapp/set-up-co-hosts)</source>
        <target>[`internal.cohosts()`](https://open.dingtalk.com/document/orgapp/set-up-co-hosts)</target>
      </trans-unit>
      <trans-unit id="57066" translate="no">
        <source>[`internal.convFileGetSpace()`](https://open.dingtalk.com/document/orgapp/obtain-group-storage-space-information)</source>
        <target>[`internal.convFileGetSpace()`](https://open.dingtalk.com/document/orgapp/obtain-group-storage-space-information)</target>
      </trans-unit>
      <trans-unit id="57068" translate="no">
        <source>[`internal.copyDentries()`](https://open.dingtalk.com/document/isvapp/copy-files-or-folders-in-bulk)</source>
        <target>[`internal.copyDentries()`](https://open.dingtalk.com/document/isvapp/copy-files-or-folders-in-bulk)</target>
      </trans-unit>
      <trans-unit id="57070" translate="no">
        <source>[`internal.copyDentry()`](https://open.dingtalk.com/document/isvapp/copy-an-object)</source>
        <target>[`internal.copyDentry()`](https://open.dingtalk.com/document/isvapp/copy-an-object)</target>
      </trans-unit>
      <trans-unit id="57072" translate="no">
        <source>[`internal.createAcls()`](https://open.dingtalk.com/document/personalapp/create-access-control)</source>
        <target>[`internal.createAcls()`](https://open.dingtalk.com/document/personalapp/create-access-control)</target>
      </trans-unit>
      <trans-unit id="57074" translate="no">
        <source>[`internal.createAndDeliver()`](https://open.dingtalk.com/document/orgapp/create-and-deliver-cards)</source>
        <target>[`internal.createAndDeliver()`](https://open.dingtalk.com/document/orgapp/create-and-deliver-cards)</target>
      </trans-unit>
      <trans-unit id="57076" translate="no">
        <source>[`internal.createBadgeCodeUserInstance()`](https://open.dingtalk.com/document/isvapp/create-a-badge-user-instance)</source>
        <target>[`internal.createBadgeCodeUserInstance()`](https://open.dingtalk.com/document/isvapp/create-a-badge-user-instance)</target>
      </trans-unit>
      <trans-unit id="57078" translate="no">
        <source>[`internal.createBadgeNotify()`](https://open.dingtalk.com/document/isvapp/dingtalk-badge-notification-message)</source>
        <target>[`internal.createBadgeNotify()`](https://open.dingtalk.com/document/isvapp/dingtalk-badge-notification-message)</target>
      </trans-unit>
      <trans-unit id="57080" translate="no">
        <source>[`internal.createBizObject()`](https://open.dingtalk.com/document/isvapp/create-form-business-data)</source>
        <target>[`internal.createBizObject()`](https://open.dingtalk.com/document/isvapp/create-form-business-data)</target>
      </trans-unit>
      <trans-unit id="57082" translate="no">
        <source>[`internal.createCard()`](https://open.dingtalk.com/document/orgapp/interface-for-creating-a-card-instance)</source>
        <target>[`internal.createCard()`](https://open.dingtalk.com/document/orgapp/interface-for-creating-a-card-instance)</target>
      </trans-unit>
      <trans-unit id="57084" translate="no">
        <source>[`internal.createCoupleGroup()`](https://open.dingtalk.com/document/app/creating-two-groups-of-people)</source>
        <target>[`internal.createCoupleGroup()`](https://open.dingtalk.com/document/app/creating-two-groups-of-people)</target>
      </trans-unit>
      <trans-unit id="57086" translate="no">
        <source>[`internal.createCoupleGroupConversation()`](https://open.dingtalk.com/document/isvapp/create-two-people-outside-the-nail)</source>
        <target>[`internal.createCoupleGroupConversation()`](https://open.dingtalk.com/document/isvapp/create-two-people-outside-the-nail)</target>
      </trans-unit>
      <trans-unit id="57088" translate="no">
        <source>[`internal.createEvent()`](https://open.dingtalk.com/document/personalapp/create-schedule)</source>
        <target>[`internal.createEvent()`](https://open.dingtalk.com/document/personalapp/create-schedule)</target>
      </trans-unit>
      <trans-unit id="57090" translate="no">
        <source>[`internal.createGroupConversation()`](https://open.dingtalk.com/document/isvapp/create-a-common-group-or-cross-nail-group)</source>
        <target>[`internal.createGroupConversation()`](https://open.dingtalk.com/document/isvapp/create-a-common-group-or-cross-nail-group)</target>
      </trans-unit>
      <trans-unit id="57092" translate="no">
        <source>[`internal.createGroupSet()`](https://open.dingtalk.com/document/isvapp/create-a-customer-group-set)</source>
        <target>[`internal.createGroupSet()`](https://open.dingtalk.com/document/isvapp/create-a-customer-group-set)</target>
      </trans-unit>
      <trans-unit id="57094" translate="no">
        <source>[`internal.createInnerApp()`](https://open.dingtalk.com/document/app/create-an-h5-application-for-your-enterprise)</source>
        <target>[`internal.createInnerApp()`](https://open.dingtalk.com/document/app/create-an-h5-application-for-your-enterprise)</target>
      </trans-unit>
      <trans-unit id="57096" translate="no">
        <source>[`internal.createInterconnection()`](https://open.dingtalk.com/document/isvapp/create-bc-account-association)</source>
        <target>[`internal.createInterconnection()`](https://open.dingtalk.com/document/isvapp/create-bc-account-association)</target>
      </trans-unit>
      <trans-unit id="57098" translate="no">
        <source>[`internal.createJsapiTicket()`](https://open.dingtalk.com/document/isvapp/create-a-jsapi-ticket)</source>
        <target>[`internal.createJsapiTicket()`](https://open.dingtalk.com/document/isvapp/create-a-jsapi-ticket)</target>
      </trans-unit>
      <trans-unit id="57100" translate="no">
        <source>[`internal.createLive()`](https://open.dingtalk.com/document/isvapp/create-live-streaming)</source>
        <target>[`internal.createLive()`](https://open.dingtalk.com/document/isvapp/create-live-streaming)</target>
      </trans-unit>
      <trans-unit id="57102" translate="no">
        <source>[`internal.createMeetingRoom()`](https://open.dingtalk.com/document/isvapp/create-a-meeting-room)</source>
        <target>[`internal.createMeetingRoom()`](https://open.dingtalk.com/document/isvapp/create-a-meeting-room)</target>
      </trans-unit>
      <trans-unit id="57104" translate="no">
        <source>[`internal.createMeetingRoomGroup()`](https://open.dingtalk.com/document/isvapp/create-a-meeting-room-group)</source>
        <target>[`internal.createMeetingRoomGroup()`](https://open.dingtalk.com/document/isvapp/create-a-meeting-room-group)</target>
      </trans-unit>
      <trans-unit id="57106" translate="no">
        <source>[`internal.createOrUpdateFormData()`](https://open.dingtalk.com/document/isvapp/add-or-update-form-instances)</source>
        <target>[`internal.createOrUpdateFormData()`](https://open.dingtalk.com/document/isvapp/add-or-update-form-instances)</target>
      </trans-unit>
      <trans-unit id="57108" translate="no">
        <source>[`internal.createOrganizationTask()`](https://open.dingtalk.com/document/isvapp/create-a-free-task-isv)</source>
        <target>[`internal.createOrganizationTask()`](https://open.dingtalk.com/document/isvapp/create-a-free-task-isv)</target>
      </trans-unit>
      <trans-unit id="57110" translate="no">
        <source>[`internal.createPlanTime()`](https://open.dingtalk.com/document/isvapp/create-planned-work)</source>
        <target>[`internal.createPlanTime()`](https://open.dingtalk.com/document/isvapp/create-planned-work)</target>
      </trans-unit>
      <trans-unit id="57112" translate="no">
        <source>[`internal.createProcessesInstance()`](https://open.dingtalk.com/document/isvapp/create-a-process-instance)</source>
        <target>[`internal.createProcessesInstance()`](https://open.dingtalk.com/document/isvapp/create-a-process-instance)</target>
      </trans-unit>
      <trans-unit id="57114" translate="no">
        <source>[`internal.createProject()`](https://open.dingtalk.com/document/orgapp/create-project)</source>
        <target>[`internal.createProject()`](https://open.dingtalk.com/document/orgapp/create-project)</target>
      </trans-unit>
      <trans-unit id="57116" translate="no">
        <source>[`internal.createProjectByTemplate()`](https://open.dingtalk.com/document/isvapp/create-a-project-from-a-project-template)</source>
        <target>[`internal.createProjectByTemplate()`](https://open.dingtalk.com/document/isvapp/create-a-project-from-a-project-template)</target>
      </trans-unit>
      <trans-unit id="57118" translate="no">
        <source>[`internal.createProjectCustomfieldStatus()`](https://open.dingtalk.com/document/orgapp/create-project-custom-fields)</source>
        <target>[`internal.createProjectCustomfieldStatus()`](https://open.dingtalk.com/document/orgapp/create-project-custom-fields)</target>
      </trans-unit>
      <trans-unit id="57120" translate="no">
        <source>[`internal.createScheduleConference()`](https://open.dingtalk.com/document/app/create-appointment-meeting)</source>
        <target>[`internal.createScheduleConference()`](https://open.dingtalk.com/document/app/create-appointment-meeting)</target>
      </trans-unit>
      <trans-unit id="57122" translate="no">
        <source>[`internal.createStoreGroupConversation()`](https://open.dingtalk.com/document/isvapp/create-a-store-group)</source>
        <target>[`internal.createStoreGroupConversation()`](https://open.dingtalk.com/document/isvapp/create-a-store-group)</target>
      </trans-unit>
      <trans-unit id="57124" translate="no">
        <source>[`internal.createSubscribedCalendar()`](https://open.dingtalk.com/document/isvapp/create-subscription-calendar)</source>
        <target>[`internal.createSubscribedCalendar()`](https://open.dingtalk.com/document/isvapp/create-subscription-calendar)</target>
      </trans-unit>
      <trans-unit id="57126" translate="no">
        <source>[`internal.createTask()`](https://open.dingtalk.com/document/isvapp/create-a-project-task)</source>
        <target>[`internal.createTask()`](https://open.dingtalk.com/document/isvapp/create-a-project-task)</target>
      </trans-unit>
      <trans-unit id="57128" translate="no">
        <source>[`internal.createTaskObjectLink()`](https://open.dingtalk.com/document/isvapp/create-a-linked-object-associated-with-a-task)</source>
        <target>[`internal.createTaskObjectLink()`](https://open.dingtalk.com/document/isvapp/create-a-linked-object-associated-with-a-task)</target>
      </trans-unit>
      <trans-unit id="57130" translate="no">
        <source>[`internal.createTicket()`](https://open.dingtalk.com/document/isvapp/smart-customer-service-create-a-self-service-order)</source>
        <target>[`internal.createTicket()`](https://open.dingtalk.com/document/isvapp/smart-customer-service-create-a-self-service-order)</target>
      </trans-unit>
      <trans-unit id="57132" translate="no">
        <source>[`internal.createTodoTask()`](https://open.dingtalk.com/document/isvapp/add-dingtalk-to-do-task)</source>
        <target>[`internal.createTodoTask()`](https://open.dingtalk.com/document/isvapp/add-dingtalk-to-do-task)</target>
      </trans-unit>
      <trans-unit id="57134" translate="no">
        <source>[`internal.createTopbox()`](https://open.dingtalk.com/document/orgapp/create-and-open-an-interactive-card-ceiling)</source>
        <target>[`internal.createTopbox()`](https://open.dingtalk.com/document/orgapp/create-and-open-an-interactive-card-ceiling)</target>
      </trans-unit>
      <trans-unit id="57136" translate="no">
        <source>[`internal.createTrustedDeviceBatch()`](https://open.dingtalk.com/document/isvapp/add-trusted-devices-in-batches)</source>
        <target>[`internal.createTrustedDeviceBatch()`](https://open.dingtalk.com/document/isvapp/add-trusted-devices-in-batches)</target>
      </trans-unit>
      <trans-unit id="57138" translate="no">
        <source>[`internal.createVideoConference()`](https://open.dingtalk.com/document/isvapp/create-a-video-conference)</source>
        <target>[`internal.createVideoConference()`](https://open.dingtalk.com/document/isvapp/create-a-video-conference)</target>
      </trans-unit>
      <trans-unit id="57140" translate="no">
        <source>[`internal.createWorkTime()`](https://open.dingtalk.com/document/isvapp/create-actual-work)</source>
        <target>[`internal.createWorkTime()`](https://open.dingtalk.com/document/isvapp/create-actual-work)</target>
      </trans-unit>
      <trans-unit id="57142" translate="no">
        <source>[`internal.crmCreateGroup()`](https://open.dingtalk.com/document/isvapp/create-a-customer-group)</source>
        <target>[`internal.crmCreateGroup()`](https://open.dingtalk.com/document/isvapp/create-a-customer-group)</target>
      </trans-unit>
      <trans-unit id="57144" translate="no">
        <source>[`internal.crmUpdateGroupSet()`](https://open.dingtalk.com/document/orgapp/crm-update-group)</source>
        <target>[`internal.crmUpdateGroupSet()`](https://open.dingtalk.com/document/orgapp/crm-update-group)</target>
      </trans-unit>
      <trans-unit id="57146" translate="no">
        <source>[`internal.decodeBadgeCode()`](https://open.dingtalk.com/document/isvapp/stack-dingtalk-badge)</source>
        <target>[`internal.decodeBadgeCode()`](https://open.dingtalk.com/document/isvapp/stack-dingtalk-badge)</target>
      </trans-unit>
      <trans-unit id="57148" translate="no">
        <source>[`internal.deleteAcl()`](https://open.dingtalk.com/document/personalapp/delete-access-control)</source>
        <target>[`internal.deleteAcl()`](https://open.dingtalk.com/document/personalapp/delete-access-control)</target>
      </trans-unit>
      <trans-unit id="57150" translate="no">
        <source>[`internal.deleteBizObject()`](https://open.dingtalk.com/document/isvapp/delete-a-business-object)</source>
        <target>[`internal.deleteBizObject()`](https://open.dingtalk.com/document/isvapp/delete-a-business-object)</target>
      </trans-unit>
      <trans-unit id="57152" translate="no">
        <source>[`internal.deleteColumns()`](https://open.dingtalk.com/document/app/delete-column)</source>
        <target>[`internal.deleteColumns()`](https://open.dingtalk.com/document/app/delete-column)</target>
      </trans-unit>
      <trans-unit id="57154" translate="no">
        <source>[`internal.deleteCrmCustomObjectData()`](https://open.dingtalk.com/document/orgapp/delete-crm-custom-object-data)</source>
        <target>[`internal.deleteCrmCustomObjectData()`](https://open.dingtalk.com/document/orgapp/delete-crm-custom-object-data)</target>
      </trans-unit>
      <trans-unit id="57156" translate="no">
        <source>[`internal.deleteCrmPersonalCustomer()`](https://open.dingtalk.com/document/orgapp/delete-crm-personal-customer)</source>
        <target>[`internal.deleteCrmPersonalCustomer()`](https://open.dingtalk.com/document/orgapp/delete-crm-personal-customer)</target>
      </trans-unit>
      <trans-unit id="57158" translate="no">
        <source>[`internal.deleteDentries()`](https://open.dingtalk.com/document/isvapp/delete-files-or-folders-in-bulk)</source>
        <target>[`internal.deleteDentries()`](https://open.dingtalk.com/document/isvapp/delete-files-or-folders-in-bulk)</target>
      </trans-unit>
      <trans-unit id="57160" translate="no">
        <source>[`internal.deleteDentry()`](https://open.dingtalk.com/document/isvapp/delete-a-file-or-folder)</source>
        <target>[`internal.deleteDentry()`](https://open.dingtalk.com/document/isvapp/delete-a-file-or-folder)</target>
      </trans-unit>
      <trans-unit id="57162" translate="no">
        <source>[`internal.deleteDentryAppProperties()`](https://open.dingtalk.com/document/isvapp/delete-file-app-attribute)</source>
        <target>[`internal.deleteDentryAppProperties()`](https://open.dingtalk.com/document/isvapp/delete-file-app-attribute)</target>
      </trans-unit>
      <trans-unit id="57164" translate="no">
        <source>[`internal.deleteEvent()`](https://open.dingtalk.com/document/isvapp/delete-schedule)</source>
        <target>[`internal.deleteEvent()`](https://open.dingtalk.com/document/isvapp/delete-schedule)</target>
      </trans-unit>
      <trans-unit id="57166" translate="no">
        <source>[`internal.deleteFormData()`](https://open.dingtalk.com/document/app/delete-form-data)</source>
        <target>[`internal.deleteFormData()`](https://open.dingtalk.com/document/app/delete-form-data)</target>
      </trans-unit>
      <trans-unit id="57168" translate="no">
        <source>[`internal.deleteInnerApp()`](https://open.dingtalk.com/document/app/delete-an-internal-h5-application)</source>
        <target>[`internal.deleteInnerApp()`](https://open.dingtalk.com/document/app/delete-an-internal-h5-application)</target>
      </trans-unit>
      <trans-unit id="57170" translate="no">
        <source>[`internal.deleteInstance()`](https://open.dingtalk.com/document/app/delete-process-instance)</source>
        <target>[`internal.deleteInstance()`](https://open.dingtalk.com/document/app/delete-process-instance)</target>
      </trans-unit>
      <trans-unit id="57172" translate="no">
        <source>[`internal.deleteLive()`](https://open.dingtalk.com/document/isvapp/delete-live-streaming)</source>
        <target>[`internal.deleteLive()`](https://open.dingtalk.com/document/isvapp/delete-live-streaming)</target>
      </trans-unit>
      <trans-unit id="57174" translate="no">
        <source>[`internal.deleteMeetingRoom()`](https://open.dingtalk.com/document/isvapp/delete-a-meeting-room)</source>
        <target>[`internal.deleteMeetingRoom()`](https://open.dingtalk.com/document/isvapp/delete-a-meeting-room)</target>
      </trans-unit>
      <trans-unit id="57176" translate="no">
        <source>[`internal.deleteMeetingRoomGroup()`](https://open.dingtalk.com/document/isvapp/delete-a-conference-room-group)</source>
        <target>[`internal.deleteMeetingRoomGroup()`](https://open.dingtalk.com/document/isvapp/delete-a-conference-room-group)</target>
      </trans-unit>
      <trans-unit id="57178" translate="no">
        <source>[`internal.deleteProcessesInstance()`](https://open.dingtalk.com/document/isvapp/delete-process-instance-data)</source>
        <target>[`internal.deleteProcessesInstance()`](https://open.dingtalk.com/document/isvapp/delete-process-instance-data)</target>
      </trans-unit>
      <trans-unit id="57180" translate="no">
        <source>[`internal.deleteProjectMember()`](https://open.dingtalk.com/document/orgapp/delete-project-members)</source>
        <target>[`internal.deleteProjectMember()`](https://open.dingtalk.com/document/orgapp/delete-project-members)</target>
      </trans-unit>
      <trans-unit id="57182" translate="no">
        <source>[`internal.deleteRecycleItem()`](https://open.dingtalk.com/document/isvapp/delete-recycle-item)</source>
        <target>[`internal.deleteRecycleItem()`](https://open.dingtalk.com/document/isvapp/delete-recycle-item)</target>
      </trans-unit>
      <trans-unit id="57184" translate="no">
        <source>[`internal.deleteRecycleItems()`](https://open.dingtalk.com/document/isvapp/batch-delete-recycle-items)</source>
        <target>[`internal.deleteRecycleItems()`](https://open.dingtalk.com/document/isvapp/batch-delete-recycle-items)</target>
      </trans-unit>
      <trans-unit id="57186" translate="no">
        <source>[`internal.deleteRows()`](https://open.dingtalk.com/document/app/delete-row)</source>
        <target>[`internal.deleteRows()`](https://open.dingtalk.com/document/app/delete-row)</target>
      </trans-unit>
      <trans-unit id="57188" translate="no">
        <source>[`internal.deleteSequence()`](https://open.dingtalk.com/document/isvapp-server/delete-sequence)</source>
        <target>[`internal.deleteSequence()`](https://open.dingtalk.com/document/isvapp-server/delete-sequence)</target>
      </trans-unit>
      <trans-unit id="57190" translate="no">
        <source>[`internal.deleteSpace()`](https://open.dingtalk.com/document/isvapp/delete-a-space)</source>
        <target>[`internal.deleteSpace()`](https://open.dingtalk.com/document/isvapp/delete-a-space)</target>
      </trans-unit>
      <trans-unit id="57192" translate="no">
        <source>[`internal.deleteSubscribedCalendar()`](https://open.dingtalk.com/document/isvapp/delete-subscription-calendar)</source>
        <target>[`internal.deleteSubscribedCalendar()`](https://open.dingtalk.com/document/isvapp/delete-subscription-calendar)</target>
      </trans-unit>
      <trans-unit id="57194" translate="no">
        <source>[`internal.deleteTask()`](https://open.dingtalk.com/document/orgapp/delete-task)</source>
        <target>[`internal.deleteTask()`](https://open.dingtalk.com/document/orgapp/delete-task)</target>
      </trans-unit>
      <trans-unit id="57196" translate="no">
        <source>[`internal.deleteTodoTask()`](https://open.dingtalk.com/document/isvapp/delete-dingtalk-to-do-tasks)</source>
        <target>[`internal.deleteTodoTask()`](https://open.dingtalk.com/document/isvapp/delete-dingtalk-to-do-tasks)</target>
      </trans-unit>
      <trans-unit id="57198" translate="no">
        <source>[`internal.deliverCard()`](https://open.dingtalk.com/document/isvapp/delivery-card-interface)</source>
        <target>[`internal.deliverCard()`](https://open.dingtalk.com/document/isvapp/delivery-card-interface)</target>
      </trans-unit>
      <trans-unit id="57200" translate="no">
        <source>[`internal.describeCrmPersonalCustomerObjectMeta()`](https://open.dingtalk.com/document/isvapp/get-metadata-description-of-crm-customer-object-1)</source>
        <target>[`internal.describeCrmPersonalCustomerObjectMeta()`](https://open.dingtalk.com/document/isvapp/get-metadata-description-of-crm-customer-object-1)</target>
      </trans-unit>
      <trans-unit id="57202" translate="no">
        <source>[`internal.dismissGroupConversation()`](https://open.dingtalk.com/document/isvapp/disband-bc-interconnection-group)</source>
        <target>[`internal.dismissGroupConversation()`](https://open.dingtalk.com/document/isvapp/disband-bc-interconnection-group)</target>
      </trans-unit>
      <trans-unit id="57204" translate="no">
        <source>[`internal.driveAddSpace()`](https://open.dingtalk.com/document/isvapp/new-space)</source>
        <target>[`internal.driveAddSpace()`](https://open.dingtalk.com/document/isvapp/new-space)</target>
      </trans-unit>
      <trans-unit id="57206" translate="no">
        <source>[`internal.editContact()`](https://open.dingtalk.com/document/isvapp/add-or-edit-contacts)</source>
        <target>[`internal.editContact()`](https://open.dingtalk.com/document/isvapp/add-or-edit-contacts)</target>
      </trans-unit>
      <trans-unit id="57208" translate="no">
        <source>[`internal.editCustomer()`](https://open.dingtalk.com/document/isvapp/add-or-edit-customer-profile)</source>
        <target>[`internal.editCustomer()`](https://open.dingtalk.com/document/isvapp/add-or-edit-customer-profile)</target>
      </trans-unit>
      <trans-unit id="57210" translate="no">
        <source>[`internal.editCustomerPool()`](https://open.dingtalk.com/document/isvapp/add-or-edit-customer-public-pools)</source>
        <target>[`internal.editCustomerPool()`](https://open.dingtalk.com/document/isvapp/add-or-edit-customer-public-pools)</target>
      </trans-unit>
      <trans-unit id="57212" translate="no">
        <source>[`internal.editExchange()`](https://open.dingtalk.com/document/isvapp/add-or-edit-a-sales-order)</source>
        <target>[`internal.editExchange()`](https://open.dingtalk.com/document/isvapp/add-or-edit-a-sales-order)</target>
      </trans-unit>
      <trans-unit id="57214" translate="no">
        <source>[`internal.editGoods()`](https://open.dingtalk.com/document/isvapp/add-or-edit-product-information)</source>
        <target>[`internal.editGoods()`](https://open.dingtalk.com/document/isvapp/add-or-edit-product-information)</target>
      </trans-unit>
      <trans-unit id="57216" translate="no">
        <source>[`internal.editIntostock()`](https://open.dingtalk.com/document/isvapp/add-or-edit-a-shipment-record)</source>
        <target>[`internal.editIntostock()`](https://open.dingtalk.com/document/isvapp/add-or-edit-a-shipment-record)</target>
      </trans-unit>
      <trans-unit id="57218" translate="no">
        <source>[`internal.editInvoice()`](https://open.dingtalk.com/document/isvapp/add-or-edit-invoices)</source>
        <target>[`internal.editInvoice()`](https://open.dingtalk.com/document/isvapp/add-or-edit-invoices)</target>
      </trans-unit>
      <trans-unit id="57220" translate="no">
        <source>[`internal.editOrder()`](https://open.dingtalk.com/document/isvapp/add-or-edit-contract-orders)</source>
        <target>[`internal.editOrder()`](https://open.dingtalk.com/document/isvapp/add-or-edit-contract-orders)</target>
      </trans-unit>
      <trans-unit id="57222" translate="no">
        <source>[`internal.editOutstock()`](https://open.dingtalk.com/document/isvapp/add-or-edit-an-issue-ticket)</source>
        <target>[`internal.editOutstock()`](https://open.dingtalk.com/document/isvapp/add-or-edit-an-issue-ticket)</target>
      </trans-unit>
      <trans-unit id="57224" translate="no">
        <source>[`internal.editProduction()`](https://open.dingtalk.com/document/isvapp/add-or-edit-a-production-order)</source>
        <target>[`internal.editProduction()`](https://open.dingtalk.com/document/isvapp/add-or-edit-a-production-order)</target>
      </trans-unit>
      <trans-unit id="57226" translate="no">
        <source>[`internal.editPurchase()`](https://open.dingtalk.com/document/isvapp/edit-purchase-order)</source>
        <target>[`internal.editPurchase()`](https://open.dingtalk.com/document/isvapp/edit-purchase-order)</target>
      </trans-unit>
      <trans-unit id="57228" translate="no">
        <source>[`internal.executeActivity()`](https://open.dingtalk.com/document/isvapp/intelligent-customer-service-execute-work-order-activities)</source>
        <target>[`internal.executeActivity()`](https://open.dingtalk.com/document/isvapp/intelligent-customer-service-execute-work-order-activities)</target>
      </trans-unit>
      <trans-unit id="57230" translate="no">
        <source>[`internal.executeBatchTask()`](https://open.dingtalk.com/document/app/bulk-approval)</source>
        <target>[`internal.executeBatchTask()`](https://open.dingtalk.com/document/app/bulk-approval)</target>
      </trans-unit>
      <trans-unit id="57232" translate="no">
        <source>[`internal.executeCustomApi()`](https://open.dingtalk.com/document/isvapp-server/run-custom-api)</source>
        <target>[`internal.executeCustomApi()`](https://open.dingtalk.com/document/isvapp-server/run-custom-api)</target>
      </trans-unit>
      <trans-unit id="57234" translate="no">
        <source>[`internal.executePlatformTask()`](https://open.dingtalk.com/document/isvapp-server/execute-appropriate-approval-tasks)</source>
        <target>[`internal.executePlatformTask()`](https://open.dingtalk.com/document/isvapp-server/execute-appropriate-approval-tasks)</target>
      </trans-unit>
      <trans-unit id="57236" translate="no">
        <source>[`internal.executeTask()`](https://open.dingtalk.com/document/app/execute-approval-tasks)</source>
        <target>[`internal.executeTask()`](https://open.dingtalk.com/document/app/execute-approval-tasks)</target>
      </trans-unit>
      <trans-unit id="57238" translate="no">
        <source>[`internal.expireCommodity()`](https://open.dingtalk.com/document/isvapp-server/make-goods-expire)</source>
        <target>[`internal.expireCommodity()`](https://open.dingtalk.com/document/isvapp-server/make-goods-expire)</target>
      </trans-unit>
      <trans-unit id="57240" translate="no">
        <source>[`internal.focus()`](https://open.dingtalk.com/document/orgapp/set-the-whole-staff-to-see-him)</source>
        <target>[`internal.focus()`](https://open.dingtalk.com/document/orgapp/set-the-whole-staff-to-see-him)</target>
      </trans-unit>
      <trans-unit id="57242" translate="no">
        <source>[`internal.getAccessToken()`](https://open.dingtalk.com/document/orgapp/obtain-the-access_token-of-an-internal-app)</source>
        <target>[`internal.getAccessToken()`](https://open.dingtalk.com/document/orgapp/obtain-the-access_token-of-an-internal-app)</target>
      </trans-unit>
      <trans-unit id="57244" translate="no">
        <source>[`internal.getActivityButtonList()`](https://open.dingtalk.com/document/isvapp-server/obtain-a-list-of-process-node-buttons-1)</source>
        <target>[`internal.getActivityButtonList()`](https://open.dingtalk.com/document/isvapp-server/obtain-a-list-of-process-node-buttons-1)</target>
      </trans-unit>
      <trans-unit id="57246" translate="no">
        <source>[`internal.getActivityList()`](https://open.dingtalk.com/document/isvapp-server/obtain-the-information-about-the-nodes-in-process-design-1)</source>
        <target>[`internal.getActivityList()`](https://open.dingtalk.com/document/isvapp-server/obtain-the-information-about-the-nodes-in-process-design-1)</target>
      </trans-unit>
      <trans-unit id="57248" translate="no">
        <source>[`internal.getAdjustments()`](https://open.dingtalk.com/document/isvapp/retrieve-a-list-of-replenishment-rules-by-page)</source>
        <target>[`internal.getAdjustments()`](https://open.dingtalk.com/document/isvapp/retrieve-a-list-of-replenishment-rules-by-page)</target>
      </trans-unit>
      <trans-unit id="57250" translate="no">
        <source>[`internal.getAllLabelableDepts()`](https://open.dingtalk.com/document/isvapp/obtains-a-list-of-departments-that-can-be-marked)</source>
        <target>[`internal.getAllLabelableDepts()`](https://open.dingtalk.com/document/isvapp/obtains-a-list-of-departments-that-can-be-marked)</target>
      </trans-unit>
      <trans-unit id="57252" translate="no">
        <source>[`internal.getApplicationAuthorizationServicePlatformResource()`](https://open.dingtalk.com/document/isvapp-server/obtain-platform-service-resources)</source>
        <target>[`internal.getApplicationAuthorizationServicePlatformResource()`](https://open.dingtalk.com/document/isvapp-server/obtain-platform-service-resources)</target>
      </trans-unit>
      <trans-unit id="57254" translate="no">
        <source>[`internal.getApps()`](https://open.dingtalk.com/document/isvapp/queries-applications)</source>
        <target>[`internal.getApps()`](https://open.dingtalk.com/document/isvapp/queries-applications)</target>
      </trans-unit>
      <trans-unit id="57256" translate="no">
        <source>[`internal.getAttachmentTemporaryUrl()`](https://open.dingtalk.com/document/isvapp/obtain-the-temporary-attachment-free-address)</source>
        <target>[`internal.getAttachmentTemporaryUrl()`](https://open.dingtalk.com/document/isvapp/obtain-the-temporary-attachment-free-address)</target>
      </trans-unit>
      <trans-unit id="57258" translate="no">
        <source>[`internal.getBotListInGroup()`](https://open.dingtalk.com/document/orgapp/obtain-the-list-of-robots-in-the-group)</source>
        <target>[`internal.getBotListInGroup()`](https://open.dingtalk.com/document/orgapp/obtain-the-list-of-robots-in-the-group)</target>
      </trans-unit>
      <trans-unit id="57260" translate="no">
        <source>[`internal.getConfBaseInfoByLogicalId()`](https://open.dingtalk.com/document/isvapp/you-can-call-this-operation-to-query-the-basic-information)</source>
        <target>[`internal.getConfBaseInfoByLogicalId()`](https://open.dingtalk.com/document/isvapp/you-can-call-this-operation-to-query-the-basic-information)</target>
      </trans-unit>
      <trans-unit id="57262" translate="no">
        <source>[`internal.getConversationUrl()`](https://open.dingtalk.com/document/isvapp/obtain-the-session-address)</source>
        <target>[`internal.getConversationUrl()`](https://open.dingtalk.com/document/isvapp/obtain-the-session-address)</target>
      </trans-unit>
      <trans-unit id="57264" translate="no">
        <source>[`internal.getCorpAccessToken()`](https://open.dingtalk.com/document/isvapp/obtain-the-access_token-of-the-authorized-enterprise)</source>
        <target>[`internal.getCorpAccessToken()`](https://open.dingtalk.com/document/isvapp/obtain-the-access_token-of-the-authorized-enterprise)</target>
      </trans-unit>
      <trans-unit id="57266" translate="no">
        <source>[`internal.getCorpAccomplishmentTasks()`](https://open.dingtalk.com/document/app/obtains-the-completed-approval-tasks-in-an-organization)</source>
        <target>[`internal.getCorpAccomplishmentTasks()`](https://open.dingtalk.com/document/app/obtains-the-completed-approval-tasks-in-an-organization)</target>
      </trans-unit>
      <trans-unit id="57268" translate="no">
        <source>[`internal.getCorpLevelByAccountId()`](https://open.dingtalk.com/document/isvapp-server/query-enterprise-level)</source>
        <target>[`internal.getCorpLevelByAccountId()`](https://open.dingtalk.com/document/isvapp-server/query-enterprise-level)</target>
      </trans-unit>
      <trans-unit id="57270" translate="no">
        <source>[`internal.getCorpTasks()`](https://open.dingtalk.com/document/app/query-tasks-from-the-organization-dimension)</source>
        <target>[`internal.getCorpTasks()`](https://open.dingtalk.com/document/app/query-tasks-from-the-organization-dimension)</target>
      </trans-unit>
      <trans-unit id="57272" translate="no">
        <source>[`internal.getCrmGroupChatMulti()`](https://open.dingtalk.com/document/isvapp/query-customer-groups-in-batches)</source>
        <target>[`internal.getCrmGroupChatMulti()`](https://open.dingtalk.com/document/isvapp/query-customer-groups-in-batches)</target>
      </trans-unit>
      <trans-unit id="57274" translate="no">
        <source>[`internal.getCrmGroupChatSingle()`](https://open.dingtalk.com/document/isvapp/obtain-a-single-customer-group)</source>
        <target>[`internal.getCrmGroupChatSingle()`](https://open.dingtalk.com/document/isvapp/obtain-a-single-customer-group)</target>
      </trans-unit>
      <trans-unit id="57276" translate="no">
        <source>[`internal.getCurrentApp()`](https://open.dingtalk.com/document/isvapp/queries-application-information-1)</source>
        <target>[`internal.getCurrentApp()`](https://open.dingtalk.com/document/isvapp/queries-application-information-1)</target>
      </trans-unit>
      <trans-unit id="57278" translate="no">
        <source>[`internal.getDataList()`](https://open.dingtalk.com/document/isvapp/obtain-the-data-list)</source>
        <target>[`internal.getDataList()`](https://open.dingtalk.com/document/isvapp/obtain-the-data-list)</target>
      </trans-unit>
      <trans-unit id="57280" translate="no">
        <source>[`internal.getDataView()`](https://open.dingtalk.com/document/isvapp/queries-data-details)</source>
        <target>[`internal.getDataView()`](https://open.dingtalk.com/document/isvapp/queries-data-details)</target>
      </trans-unit>
      <trans-unit id="57282" translate="no">
        <source>[`internal.getDentries()`](https://open.dingtalk.com/document/isvapp/get-file-or-folder-information-in-bulk)</source>
        <target>[`internal.getDentries()`](https://open.dingtalk.com/document/isvapp/get-file-or-folder-information-in-bulk)</target>
      </trans-unit>
      <trans-unit id="57284" translate="no">
        <source>[`internal.getDentry()`](https://open.dingtalk.com/document/isvapp/obtain-file-or-folder-information)</source>
        <target>[`internal.getDentry()`](https://open.dingtalk.com/document/isvapp/obtain-file-or-folder-information)</target>
      </trans-unit>
      <trans-unit id="57286" translate="no">
        <source>[`internal.getDentryOpenInfo()`](https://open.dingtalk.com/document/isvapp/obtains-the-object-preview-or-editing-information)</source>
        <target>[`internal.getDentryOpenInfo()`](https://open.dingtalk.com/document/isvapp/obtains-the-object-preview-or-editing-information)</target>
      </trans-unit>
      <trans-unit id="57288" translate="no">
        <source>[`internal.getDentryThumbnails()`](https://open.dingtalk.com/document/isvapp/get-file-thumbnails-in-bulk)</source>
        <target>[`internal.getDentryThumbnails()`](https://open.dingtalk.com/document/isvapp/get-file-thumbnails-in-bulk)</target>
      </trans-unit>
      <trans-unit id="57290" translate="no">
        <source>[`internal.getEvent()`](https://open.dingtalk.com/document/personalapp/query-a-single-schedule)</source>
        <target>[`internal.getEvent()`](https://open.dingtalk.com/document/personalapp/query-a-single-schedule)</target>
      </trans-unit>
      <trans-unit id="57292" translate="no">
        <source>[`internal.getFieldDefByUuid()`](https://open.dingtalk.com/document/isvapp/get-form-field-information-based-on-form-uuid)</source>
        <target>[`internal.getFieldDefByUuid()`](https://open.dingtalk.com/document/isvapp/get-form-field-information-based-on-form-uuid)</target>
      </trans-unit>
      <trans-unit id="57294" translate="no">
        <source>[`internal.getFileDownloadInfo()`](https://open.dingtalk.com/document/orgapp/obtains-the-download-information-about-a-file)</source>
        <target>[`internal.getFileDownloadInfo()`](https://open.dingtalk.com/document/orgapp/obtains-the-download-information-about-a-file)</target>
      </trans-unit>
      <trans-unit id="57296" translate="no">
        <source>[`internal.getFlightExceedApply()`](https://open.dingtalk.com/document/isvapp/dingtalk-oapi-alitrip-btrip-exceedapply-flight-get)</source>
        <target>[`internal.getFlightExceedApply()`](https://open.dingtalk.com/document/isvapp/dingtalk-oapi-alitrip-btrip-exceedapply-flight-get)</target>
      </trans-unit>
      <trans-unit id="57298" translate="no">
        <source>[`internal.getFlowDocs()`](https://open.dingtalk.com/document/isvapp/get-a-list-of-all-contracts-for-the-process-task)</source>
        <target>[`internal.getFlowDocs()`](https://open.dingtalk.com/document/isvapp/get-a-list-of-all-contracts-for-the-process-task)</target>
      </trans-unit>
      <trans-unit id="57300" translate="no">
        <source>[`internal.getFollowerInfo()`](https://open.dingtalk.com/document/orgapp/queries-the-follower-information-of-the-service-window)</source>
        <target>[`internal.getFollowerInfo()`](https://open.dingtalk.com/document/orgapp/queries-the-follower-information-of-the-service-window)</target>
      </trans-unit>
      <trans-unit id="57302" translate="no">
        <source>[`internal.getFormComponentDefinitionList()`](https://open.dingtalk.com/document/app/get-a-list-of-form-component-definitions)</source>
        <target>[`internal.getFormComponentDefinitionList()`](https://open.dingtalk.com/document/app/get-a-list-of-form-component-definitions)</target>
      </trans-unit>
      <trans-unit id="57304" translate="no">
        <source>[`internal.getFormDataByID()`](https://open.dingtalk.com/document/app/query-form-data)</source>
        <target>[`internal.getFormDataByID()`](https://open.dingtalk.com/document/app/query-form-data)</target>
      </trans-unit>
      <trans-unit id="57306" translate="no">
        <source>[`internal.getFormInstance()`](https://open.dingtalk.com/document/isvapp/obtains-the-instance-details-of-a-single-fill-table)</source>
        <target>[`internal.getFormInstance()`](https://open.dingtalk.com/document/isvapp/obtains-the-instance-details-of-a-single-fill-table)</target>
      </trans-unit>
      <trans-unit id="57308" translate="no">
        <source>[`internal.getFormListInApp()`](https://open.dingtalk.com/document/app/depending-on-the-application-id-to-get-the-form-list)</source>
        <target>[`internal.getFormListInApp()`](https://open.dingtalk.com/document/app/depending-on-the-application-id-to-get-the-form-list)</target>
      </trans-unit>
      <trans-unit id="57310" translate="no">
        <source>[`internal.getGroupSet()`](https://open.dingtalk.com/document/isvapp/queries-the-details-of-a-single-customer-group)</source>
        <target>[`internal.getGroupSet()`](https://open.dingtalk.com/document/isvapp/queries-the-details-of-a-single-customer-group)</target>
      </trans-unit>
      <trans-unit id="57312" translate="no">
        <source>[`internal.getHotelExceedApply()`](https://open.dingtalk.com/document/isvapp/dingtalk-oapi-alitrip-btrip-exceedapply-hotel-get)</source>
        <target>[`internal.getHotelExceedApply()`](https://open.dingtalk.com/document/isvapp/dingtalk-oapi-alitrip-btrip-exceedapply-hotel-get)</target>
      </trans-unit>
      <trans-unit id="57314" translate="no">
        <source>[`internal.getInstanceById()`](https://open.dingtalk.com/document/app/queries-a-process-instance-based-on-its-id)</source>
        <target>[`internal.getInstanceById()`](https://open.dingtalk.com/document/app/queries-a-process-instance-based-on-its-id)</target>
      </trans-unit>
      <trans-unit id="57316" translate="no">
        <source>[`internal.getInstanceIdList()`](https://open.dingtalk.com/document/app/obtains-a-list-of-instance-ids)</source>
        <target>[`internal.getInstanceIdList()`](https://open.dingtalk.com/document/app/obtains-a-list-of-instance-ids)</target>
      </trans-unit>
      <trans-unit id="57318" translate="no">
        <source>[`internal.getInstances()`](https://open.dingtalk.com/document/app/obtain-process-instance)</source>
        <target>[`internal.getInstances()`](https://open.dingtalk.com/document/app/obtain-process-instance)</target>
      </trans-unit>
      <trans-unit id="57320" translate="no">
        <source>[`internal.getInstancesByIdList()`](https://open.dingtalk.com/document/app/queries-multiple-process-instances)</source>
        <target>[`internal.getInstancesByIdList()`](https://open.dingtalk.com/document/app/queries-multiple-process-instances)</target>
      </trans-unit>
      <trans-unit id="57322" translate="no">
        <source>[`internal.getMeCorpSubmission()`](https://open.dingtalk.com/document/app/obtains-the-tasks-submitted-by-someone-in-an-organization)</source>
        <target>[`internal.getMeCorpSubmission()`](https://open.dingtalk.com/document/app/obtains-the-tasks-submitted-by-someone-in-an-organization)</target>
      </trans-unit>
      <trans-unit id="57324" translate="no">
        <source>[`internal.getMeetingRoomsSchedule()`](https://open.dingtalk.com/document/isvapp/queries-free-and-busy-meeting-room-information)</source>
        <target>[`internal.getMeetingRoomsSchedule()`](https://open.dingtalk.com/document/isvapp/queries-free-and-busy-meeting-room-information)</target>
      </trans-unit>
      <trans-unit id="57326" translate="no">
        <source>[`internal.getMicroAppScope()`](https://open.dingtalk.com/document/orgapp/obtains-the-application-visible-range)</source>
        <target>[`internal.getMicroAppScope()`](https://open.dingtalk.com/document/orgapp/obtains-the-application-visible-range)</target>
      </trans-unit>
      <trans-unit id="57328" translate="no">
        <source>[`internal.getMultipartFileUploadInfos()`](https://open.dingtalk.com/document/isvapp/obtains-the-information-about-multipart-uploads-of-an-object)</source>
        <target>[`internal.getMultipartFileUploadInfos()`](https://open.dingtalk.com/document/isvapp/obtains-the-information-about-multipart-uploads-of-an-object)</target>
      </trans-unit>
      <trans-unit id="57330" translate="no">
        <source>[`internal.getNode()`](https://open.dingtalk.com/document/orgapp/get-node)</source>
        <target>[`internal.getNode()`](https://open.dingtalk.com/document/orgapp/get-node)</target>
      </trans-unit>
      <trans-unit id="57332" translate="no">
        <source>[`internal.getNodeByUrl()`](https://open.dingtalk.com/document/orgapp/get-node-by-link)</source>
        <target>[`internal.getNodeByUrl()`](https://open.dingtalk.com/document/orgapp/get-node-by-link)</target>
      </trans-unit>
      <trans-unit id="57334" translate="no">
        <source>[`internal.getNodes()`](https://open.dingtalk.com/document/orgapp/obtain-nodes-in-batch)</source>
        <target>[`internal.getNodes()`](https://open.dingtalk.com/document/orgapp/obtain-nodes-in-batch)</target>
      </trans-unit>
      <trans-unit id="57336" translate="no">
        <source>[`internal.getNotifyMe()`](https://open.dingtalk.com/document/app/get-notifications-sent-to-users)</source>
        <target>[`internal.getNotifyMe()`](https://open.dingtalk.com/document/app/get-notifications-sent-to-users)</target>
      </trans-unit>
      <trans-unit id="57338" translate="no">
        <source>[`internal.getOpenUrl()`](https://open.dingtalk.com/document/isvapp/obtain-the-temporary-free-access-address-of-yixian-accessories)</source>
        <target>[`internal.getOpenUrl()`](https://open.dingtalk.com/document/isvapp/obtain-the-temporary-free-access-address-of-yixian-accessories)</target>
      </trans-unit>
      <trans-unit id="57340" translate="no">
        <source>[`internal.getOperationRecords()`](https://open.dingtalk.com/document/app/queries-an-approval-record)</source>
        <target>[`internal.getOperationRecords()`](https://open.dingtalk.com/document/app/queries-an-approval-record)</target>
      </trans-unit>
      <trans-unit id="57342" translate="no">
        <source>[`internal.getOrg()`](https://open.dingtalk.com/document/isvapp/obtain-enterprise-information-1)</source>
        <target>[`internal.getOrg()`](https://open.dingtalk.com/document/isvapp/obtain-enterprise-information-1)</target>
      </trans-unit>
      <trans-unit id="57344" translate="no">
        <source>[`internal.getOrgAuthInfo()`](https://open.dingtalk.com/document/isvapp/obtain-enterprise-authentication-information)</source>
        <target>[`internal.getOrgAuthInfo()`](https://open.dingtalk.com/document/isvapp/obtain-enterprise-authentication-information)</target>
      </trans-unit>
      <trans-unit id="57346" translate="no">
        <source>[`internal.getOrganizatioTaskByIds()`](https://open.dingtalk.com/document/isvapp/obtains-details-about-multiple-free-tasks-isv)</source>
        <target>[`internal.getOrganizatioTaskByIds()`](https://open.dingtalk.com/document/isvapp/obtains-details-about-multiple-free-tasks-isv)</target>
      </trans-unit>
      <trans-unit id="57348" translate="no">
        <source>[`internal.getOrganizationPriorityList()`](https://open.dingtalk.com/document/isvapp/query-a-priority-list-isv)</source>
        <target>[`internal.getOrganizationPriorityList()`](https://open.dingtalk.com/document/isvapp/query-a-priority-list-isv)</target>
      </trans-unit>
      <trans-unit id="57350" translate="no">
        <source>[`internal.getOrganizationTask()`](https://open.dingtalk.com/document/isvapp/queries-free-task-details-isv)</source>
        <target>[`internal.getOrganizationTask()`](https://open.dingtalk.com/document/isvapp/queries-free-task-details-isv)</target>
      </trans-unit>
      <trans-unit id="57352" translate="no">
        <source>[`internal.getOrganizations()`](https://open.dingtalk.com/document/isvapp/queries-organization-data)</source>
        <target>[`internal.getOrganizations()`](https://open.dingtalk.com/document/isvapp/queries-organization-data)</target>
      </trans-unit>
      <trans-unit id="57354" translate="no">
        <source>[`internal.getOvertimeSetting()`](https://open.dingtalk.com/document/isvapp/batch-retrieve-overtime-rules)</source>
        <target>[`internal.getOvertimeSetting()`](https://open.dingtalk.com/document/isvapp/batch-retrieve-overtime-rules)</target>
      </trans-unit>
      <trans-unit id="57356" translate="no">
        <source>[`internal.getPartnerTypeByParentId()`](https://open.dingtalk.com/document/isvapp/obtain-child-tags-from-a-parent-tag)</source>
        <target>[`internal.getPartnerTypeByParentId()`](https://open.dingtalk.com/document/isvapp/obtain-child-tags-from-a-parent-tag)</target>
      </trans-unit>
      <trans-unit id="57358" translate="no">
        <source>[`internal.getPermissionInheritance()`](https://open.dingtalk.com/document/orgapp/get-permission-inheritance-mode)</source>
        <target>[`internal.getPermissionInheritance()`](https://open.dingtalk.com/document/orgapp/get-permission-inheritance-mode)</target>
      </trans-unit>
      <trans-unit id="57360" translate="no">
        <source>[`internal.getPersonalAuthRule()`](https://open.dingtalk.com/document/isvapp/query-individual-authorization-records)</source>
        <target>[`internal.getPersonalAuthRule()`](https://open.dingtalk.com/document/isvapp/query-individual-authorization-records)</target>
      </trans-unit>
      <trans-unit id="57362" translate="no">
        <source>[`internal.getPluginPermissionPoint()`](https://open.dingtalk.com/document/dashboard/obtain-the-permissions-of-the-workbench-plug-in)</source>
        <target>[`internal.getPluginPermissionPoint()`](https://open.dingtalk.com/document/dashboard/obtain-the-permissions-of-the-workbench-plug-in)</target>
      </trans-unit>
      <trans-unit id="57364" translate="no">
        <source>[`internal.getPluginRuleCheckInfo()`](https://open.dingtalk.com/document/dashboard/you-can-call-this-operation-to-obtain-the-information-about)</source>
        <target>[`internal.getPluginRuleCheckInfo()`](https://open.dingtalk.com/document/dashboard/you-can-call-this-operation-to-obtain-the-information-about)</target>
      </trans-unit>
      <trans-unit id="57366" translate="no">
        <source>[`internal.getProcessDefinition()`](https://open.dingtalk.com/document/isvapp-server/obtain-process-definition)</source>
        <target>[`internal.getProcessDefinition()`](https://open.dingtalk.com/document/isvapp-server/obtain-process-definition)</target>
      </trans-unit>
      <trans-unit id="57368" translate="no">
        <source>[`internal.getProjectGroup()`](https://open.dingtalk.com/document/isvapp/query-available-project-groups)</source>
        <target>[`internal.getProjectGroup()`](https://open.dingtalk.com/document/isvapp/query-available-project-groups)</target>
      </trans-unit>
      <trans-unit id="57370" translate="no">
        <source>[`internal.getProjectMemebers()`](https://open.dingtalk.com/document/orgapp/get-project-members)</source>
        <target>[`internal.getProjectMemebers()`](https://open.dingtalk.com/document/orgapp/get-project-members)</target>
      </trans-unit>
      <trans-unit id="57372" translate="no">
        <source>[`internal.getProjectStatusList()`](https://open.dingtalk.com/document/orgapp/query-project-status)</source>
        <target>[`internal.getProjectStatusList()`](https://open.dingtalk.com/document/orgapp/query-project-status)</target>
      </trans-unit>
      <trans-unit id="57374" translate="no">
        <source>[`internal.getPublicDevices()`](https://open.dingtalk.com/document/orgapp/query-public-equipment)</source>
        <target>[`internal.getPublicDevices()`](https://open.dingtalk.com/document/orgapp/query-public-equipment)</target>
      </trans-unit>
      <trans-unit id="57376" translate="no">
        <source>[`internal.getRecycleBin()`](https://open.dingtalk.com/document/isvapp/obtain-information-about-the-recycle-bin)</source>
        <target>[`internal.getRecycleBin()`](https://open.dingtalk.com/document/isvapp/obtain-information-about-the-recycle-bin)</target>
      </trans-unit>
      <trans-unit id="57378" translate="no">
        <source>[`internal.getRecycleItem()`](https://open.dingtalk.com/document/isvapp/obtain-recycling-item-information)</source>
        <target>[`internal.getRecycleItem()`](https://open.dingtalk.com/document/isvapp/obtain-recycling-item-information)</target>
      </trans-unit>
      <trans-unit id="57380" translate="no">
        <source>[`internal.getRelationUkSetting()`](https://open.dingtalk.com/document/isvapp/obtain-duplicate-check-fields)</source>
        <target>[`internal.getRelationUkSetting()`](https://open.dingtalk.com/document/isvapp/obtain-duplicate-check-fields)</target>
      </trans-unit>
      <trans-unit id="57382" translate="no">
        <source>[`internal.getRoleUsers()`](https://open.dingtalk.com/document/isvapp/obtain-role-data-1)</source>
        <target>[`internal.getRoleUsers()`](https://open.dingtalk.com/document/isvapp/obtain-role-data-1)</target>
      </trans-unit>
      <trans-unit id="57384" translate="no">
        <source>[`internal.getRoles()`](https://open.dingtalk.com/document/isvapp/obtain-role-data)</source>
        <target>[`internal.getRoles()`](https://open.dingtalk.com/document/isvapp/obtain-role-data)</target>
      </trans-unit>
      <trans-unit id="57386" translate="no">
        <source>[`internal.getRunningTasks()`](https://open.dingtalk.com/document/app/query-process-running-tasks-vpc)</source>
        <target>[`internal.getRunningTasks()`](https://open.dingtalk.com/document/app/query-process-running-tasks-vpc)</target>
      </trans-unit>
      <trans-unit id="57388" translate="no">
        <source>[`internal.getSaleUserInfoByUserId()`](https://open.dingtalk.com/document/isvapp-server/query-sales-user-information)</source>
        <target>[`internal.getSaleUserInfoByUserId()`](https://open.dingtalk.com/document/isvapp-server/query-sales-user-information)</target>
      </trans-unit>
      <trans-unit id="57390" translate="no">
        <source>[`internal.getSceneGroupInfo()`](https://open.dingtalk.com/document/isvapp/query-group-brief-information)</source>
        <target>[`internal.getSceneGroupInfo()`](https://open.dingtalk.com/document/isvapp/query-group-brief-information)</target>
      </trans-unit>
      <trans-unit id="57392" translate="no">
        <source>[`internal.getSchedule()`](https://open.dingtalk.com/document/isvapp/free-schedule)</source>
        <target>[`internal.getSchedule()`](https://open.dingtalk.com/document/isvapp/free-schedule)</target>
      </trans-unit>
      <trans-unit id="57394" translate="no">
        <source>[`internal.getSignInList()`](https://open.dingtalk.com/document/isvapp/view-the-check-in-details-of-a-single-schedule)</source>
        <target>[`internal.getSignInList()`](https://open.dingtalk.com/document/isvapp/view-the-check-in-details-of-a-single-schedule)</target>
      </trans-unit>
      <trans-unit id="57396" translate="no">
        <source>[`internal.getSignOutList()`](https://open.dingtalk.com/document/isvapp/view-the-billing-details-of-a-single-schedule)</source>
        <target>[`internal.getSignOutList()`](https://open.dingtalk.com/document/isvapp/view-the-billing-details-of-a-single-schedule)</target>
      </trans-unit>
      <trans-unit id="57398" translate="no">
        <source>[`internal.getSignedDetailByPage()`](https://open.dingtalk.com/document/isvapp/obtains-the-information-about-the-persons-who-sign-the-audit)</source>
        <target>[`internal.getSignedDetailByPage()`](https://open.dingtalk.com/document/isvapp/obtains-the-information-about-the-persons-who-sign-the-audit)</target>
      </trans-unit>
      <trans-unit id="57400" translate="no">
        <source>[`internal.getSimpleOvertimeSetting()`](https://open.dingtalk.com/document/isvapp/retrieve-a-list-of-overtime-rules-by-page)</source>
        <target>[`internal.getSimpleOvertimeSetting()`](https://open.dingtalk.com/document/isvapp/retrieve-a-list-of-overtime-rules-by-page)</target>
      </trans-unit>
      <trans-unit id="57402" translate="no">
        <source>[`internal.getSsoAccessToken()`](https://open.dingtalk.com/document/isvapp/obtain-the-access_token-of-the-micro-application-background-without-log-on)</source>
        <target>[`internal.getSsoAccessToken()`](https://open.dingtalk.com/document/isvapp/obtain-the-access_token-of-the-micro-application-background-without-log-on)</target>
      </trans-unit>
      <trans-unit id="57404" translate="no">
        <source>[`internal.getSsoUserInfo()`](https://open.dingtalk.com/document/isvapp/obtains-the-identity-of-an-application-administrator)</source>
        <target>[`internal.getSsoUserInfo()`](https://open.dingtalk.com/document/isvapp/obtains-the-identity-of-an-application-administrator)</target>
      </trans-unit>
      <trans-unit id="57406" translate="no">
        <source>[`internal.getSubscribedCalendar()`](https://open.dingtalk.com/document/isvapp/query-a-single-subscription-calendar)</source>
        <target>[`internal.getSubscribedCalendar()`](https://open.dingtalk.com/document/isvapp/query-a-single-subscription-calendar)</target>
      </trans-unit>
      <trans-unit id="57408" translate="no">
        <source>[`internal.getTask()`](https://open.dingtalk.com/document/isvapp/get-the-asynchronous-task-information-in-storage)</source>
        <target>[`internal.getTask()`](https://open.dingtalk.com/document/isvapp/get-the-asynchronous-task-information-in-storage)</target>
      </trans-unit>
      <trans-unit id="57410" translate="no">
        <source>[`internal.getTaskByIds()`](https://open.dingtalk.com/document/orgapp/get-task-details)</source>
        <target>[`internal.getTaskByIds()`](https://open.dingtalk.com/document/orgapp/get-task-details)</target>
      </trans-unit>
      <trans-unit id="57412" translate="no">
        <source>[`internal.getTaskCopies()`](https://open.dingtalk.com/document/app/query-copied-my-task-list-application-dimension)</source>
        <target>[`internal.getTaskCopies()`](https://open.dingtalk.com/document/app/query-copied-my-task-list-application-dimension)</target>
      </trans-unit>
      <trans-unit id="57414" translate="no">
        <source>[`internal.getTbOrgIdByDingOrgId()`](https://open.dingtalk.com/document/isvapp/obtain-the-teambition-enterprise-id)</source>
        <target>[`internal.getTbOrgIdByDingOrgId()`](https://open.dingtalk.com/document/isvapp/obtain-the-teambition-enterprise-id)</target>
      </trans-unit>
      <trans-unit id="57416" translate="no">
        <source>[`internal.getTbUserIdByStaffId()`](https://open.dingtalk.com/document/isvapp/obtain-dingtalk-teambition-user-id-based-on-userid)</source>
        <target>[`internal.getTbUserIdByStaffId()`](https://open.dingtalk.com/document/isvapp/obtain-dingtalk-teambition-user-id-based-on-userid)</target>
      </trans-unit>
      <trans-unit id="57418" translate="no">
        <source>[`internal.getTrainExceedApply()`](https://open.dingtalk.com/document/isvapp/dingtalk-oapi-alitrip-btrip-exceedapply-train-get)</source>
        <target>[`internal.getTrainExceedApply()`](https://open.dingtalk.com/document/isvapp/dingtalk-oapi-alitrip-btrip-exceedapply-train-get)</target>
      </trans-unit>
      <trans-unit id="57420" translate="no">
        <source>[`internal.getUploadUrl()`](https://open.dingtalk.com/document/isvapp/obtain-the-upload-url-of-a-file-2)</source>
        <target>[`internal.getUploadUrl()`](https://open.dingtalk.com/document/isvapp/obtain-the-upload-url-of-a-file-2)</target>
      </trans-unit>
      <trans-unit id="57422" translate="no">
        <source>[`internal.getUserFollowStatus()`](https://open.dingtalk.com/document/orgapp/obtain-the-attention-status-of-the-user-service-window)</source>
        <target>[`internal.getUserFollowStatus()`](https://open.dingtalk.com/document/orgapp/obtain-the-attention-status-of-the-user-service-window)</target>
      </trans-unit>
      <trans-unit id="57424" translate="no">
        <source>[`internal.getUserJoinedProject()`](https://open.dingtalk.com/document/orgapp/get-projects-joined-by-users)</source>
        <target>[`internal.getUserJoinedProject()`](https://open.dingtalk.com/document/orgapp/get-projects-joined-by-users)</target>
      </trans-unit>
      <trans-unit id="57426" translate="no">
        <source>[`internal.getUserToken()`](https://open.dingtalk.com/document/isvapp/obtain-user-token)</source>
        <target>[`internal.getUserToken()`](https://open.dingtalk.com/document/isvapp/obtain-user-token)</target>
      </trans-unit>
      <trans-unit id="57428" translate="no">
        <source>[`internal.getUsers()`](https://open.dingtalk.com/document/isvapp/obtain-user-data)</source>
        <target>[`internal.getUsers()`](https://open.dingtalk.com/document/isvapp/obtain-user-data)</target>
      </trans-unit>
      <trans-unit id="57430" translate="no">
        <source>[`internal.hrmProcessRegular()`](https://open.dingtalk.com/document/orgapp/intelligent-personnel-staff-to-become-regular)</source>
        <target>[`internal.hrmProcessRegular()`](https://open.dingtalk.com/document/orgapp/intelligent-personnel-staff-to-become-regular)</target>
      </trans-unit>
      <trans-unit id="57432" translate="no">
        <source>[`internal.hrmProcessTransfer()`](https://open.dingtalk.com/document/orgapp/intelligent-personnel-staff-transfer)</source>
        <target>[`internal.hrmProcessTransfer()`](https://open.dingtalk.com/document/orgapp/intelligent-personnel-staff-transfer)</target>
      </trans-unit>
      <trans-unit id="57434" translate="no">
        <source>[`internal.hrmProcessUpdateTerminationInfo()`](https://open.dingtalk.com/document/app/modify-resigned-employee-information)</source>
        <target>[`internal.hrmProcessUpdateTerminationInfo()`](https://open.dingtalk.com/document/app/modify-resigned-employee-information)</target>
      </trans-unit>
      <trans-unit id="57436" translate="no">
        <source>[`internal.imCreateGroup()`](https://open.dingtalk.com/document/app/create-common-group-new-version)</source>
        <target>[`internal.imCreateGroup()`](https://open.dingtalk.com/document/app/create-common-group-new-version)</target>
      </trans-unit>
      <trans-unit id="57438" translate="no">
        <source>[`internal.initMultipartFileUpload()`](https://open.dingtalk.com/document/isvapp/initialize-a-multipart-upload-object)</source>
        <target>[`internal.initMultipartFileUpload()`](https://open.dingtalk.com/document/isvapp/initialize-a-multipart-upload-object)</target>
      </trans-unit>
      <trans-unit id="57440" translate="no">
        <source>[`internal.insertColumnsBefore()`](https://open.dingtalk.com/document/app/insert-column-before-column)</source>
        <target>[`internal.insertColumnsBefore()`](https://open.dingtalk.com/document/app/insert-column-before-column)</target>
      </trans-unit>
      <trans-unit id="57442" translate="no">
        <source>[`internal.insertRowsBefore()`](https://open.dingtalk.com/document/app/insert-rows-before-rows)</source>
        <target>[`internal.insertRowsBefore()`](https://open.dingtalk.com/document/app/insert-rows-before-rows)</target>
      </trans-unit>
      <trans-unit id="57444" translate="no">
        <source>[`internal.inviteUsers()`](https://open.dingtalk.com/document/orgapp/invite-users-to-join)</source>
        <target>[`internal.inviteUsers()`](https://open.dingtalk.com/document/orgapp/invite-users-to-join)</target>
      </trans-unit>
      <trans-unit id="57446" translate="no">
        <source>[`internal.listAccount()`](https://open.dingtalk.com/document/orgapp/queries-the-list-of-services-under-an-enterprise)</source>
        <target>[`internal.listAccount()`](https://open.dingtalk.com/document/orgapp/queries-the-list-of-services-under-an-enterprise)</target>
      </trans-unit>
      <trans-unit id="57448" translate="no">
        <source>[`internal.listAcls()`](https://open.dingtalk.com/document/personalapp/get-access-control-list)</source>
        <target>[`internal.listAcls()`](https://open.dingtalk.com/document/personalapp/get-access-control-list)</target>
      </trans-unit>
      <trans-unit id="57450" translate="no">
        <source>[`internal.listActivateDevices()`](https://open.dingtalk.com/document/isvapp/query-information-about-a-registered-device)</source>
        <target>[`internal.listActivateDevices()`](https://open.dingtalk.com/document/isvapp/query-information-about-a-registered-device)</target>
      </trans-unit>
      <trans-unit id="57452" translate="no">
        <source>[`internal.listAllApp()`](https://open.dingtalk.com/document/orgapp/obtains-a-list-of-all-enterprise-applications)</source>
        <target>[`internal.listAllApp()`](https://open.dingtalk.com/document/orgapp/obtains-a-list-of-all-enterprise-applications)</target>
      </trans-unit>
      <trans-unit id="57454" translate="no">
        <source>[`internal.listAllDentries()`](https://open.dingtalk.com/document/isvapp/get-the-list-of-files-or-folders-under-a-space)</source>
        <target>[`internal.listAllDentries()`](https://open.dingtalk.com/document/isvapp/get-the-list-of-files-or-folders-under-a-space)</target>
      </trans-unit>
      <trans-unit id="57456" translate="no">
        <source>[`internal.listAllInnerApps()`](https://open.dingtalk.com/document/orgapp/get-a-list-of-all-applications-inside-the-enterprise)</source>
        <target>[`internal.listAllInnerApps()`](https://open.dingtalk.com/document/orgapp/get-a-list-of-all-applications-inside-the-enterprise)</target>
      </trans-unit>
      <trans-unit id="57458" translate="no">
        <source>[`internal.listApplication()`](https://open.dingtalk.com/document/isvapp/query-the-application-list)</source>
        <target>[`internal.listApplication()`](https://open.dingtalk.com/document/isvapp/query-the-application-list)</target>
      </trans-unit>
      <trans-unit id="57460" translate="no">
        <source>[`internal.listAttendees()`](https://open.dingtalk.com/document/isvapp/query-schedule-participants)</source>
        <target>[`internal.listAttendees()`](https://open.dingtalk.com/document/isvapp/query-schedule-participants)</target>
      </trans-unit>
      <trans-unit id="57462" translate="no">
        <source>[`internal.listAuditLog()`](https://open.dingtalk.com/document/app/queries-file-audit-logs)</source>
        <target>[`internal.listAuditLog()`](https://open.dingtalk.com/document/app/queries-file-audit-logs)</target>
      </trans-unit>
      <trans-unit id="57464" translate="no">
        <source>[`internal.listCalendars()`](https://open.dingtalk.com/document/isvapp/query-the-calendar)</source>
        <target>[`internal.listCalendars()`](https://open.dingtalk.com/document/isvapp/query-the-calendar)</target>
      </trans-unit>
      <trans-unit id="57466" translate="no">
        <source>[`internal.listCrmPersonalCustomers()`](https://open.dingtalk.com/document/isvapp/acquire-crm-individual-customers-in-batches)</source>
        <target>[`internal.listCrmPersonalCustomers()`](https://open.dingtalk.com/document/isvapp/acquire-crm-individual-customers-in-batches)</target>
      </trans-unit>
      <trans-unit id="57468" translate="no">
        <source>[`internal.listDentries()`](https://open.dingtalk.com/document/isvapp/obtain-the-file-list-storage)</source>
        <target>[`internal.listDentries()`](https://open.dingtalk.com/document/isvapp/obtain-the-file-list-storage)</target>
      </trans-unit>
      <trans-unit id="57470" translate="no">
        <source>[`internal.listDentryVersions()`](https://open.dingtalk.com/document/isvapp/obtains-a-list-of-file-versions)</source>
        <target>[`internal.listDentryVersions()`](https://open.dingtalk.com/document/isvapp/obtains-a-list-of-file-versions)</target>
      </trans-unit>
      <trans-unit id="57472" translate="no">
        <source>[`internal.listEvents()`](https://open.dingtalk.com/document/personalapp/query-an-event-list-1)</source>
        <target>[`internal.listEvents()`](https://open.dingtalk.com/document/personalapp/query-an-event-list-1)</target>
      </trans-unit>
      <trans-unit id="57474" translate="no">
        <source>[`internal.listEventsView()`](https://open.dingtalk.com/document/personalapp/query-schedule-view-1)</source>
        <target>[`internal.listEventsView()`](https://open.dingtalk.com/document/personalapp/query-schedule-view-1)</target>
      </trans-unit>
      <trans-unit id="57476" translate="no">
        <source>[`internal.listFollower()`](https://open.dingtalk.com/document/orgapp/obtains-the-follower-information-from-the-service-window)</source>
        <target>[`internal.listFollower()`](https://open.dingtalk.com/document/orgapp/obtains-the-follower-information-from-the-service-window)</target>
      </trans-unit>
      <trans-unit id="57478" translate="no">
        <source>[`internal.listFormInstances()`](https://open.dingtalk.com/document/isvapp/obtain-the-table-filling-instance-list-data)</source>
        <target>[`internal.listFormInstances()`](https://open.dingtalk.com/document/isvapp/obtain-the-table-filling-instance-list-data)</target>
      </trans-unit>
      <trans-unit id="57480" translate="no">
        <source>[`internal.listFormRemarks()`](https://open.dingtalk.com/document/isvapp/batch-query-of-comments-appropriate-for-form-instances)</source>
        <target>[`internal.listFormRemarks()`](https://open.dingtalk.com/document/isvapp/batch-query-of-comments-appropriate-for-form-instances)</target>
      </trans-unit>
      <trans-unit id="57482" translate="no">
        <source>[`internal.listFormSchemasByCreator()`](https://open.dingtalk.com/document/isvapp/new-obtains-the-template-that-a-user-creates)</source>
        <target>[`internal.listFormSchemasByCreator()`](https://open.dingtalk.com/document/isvapp/new-obtains-the-template-that-a-user-creates)</target>
      </trans-unit>
      <trans-unit id="57484" translate="no">
        <source>[`internal.listGroupSet()`](https://open.dingtalk.com/document/isvapp/query-the-list-of-customer-groups-set)</source>
        <target>[`internal.listGroupSet()`](https://open.dingtalk.com/document/isvapp/query-the-list-of-customer-groups-set)</target>
      </trans-unit>
      <trans-unit id="57486" translate="no">
        <source>[`internal.listIndustryRoleUsers()`](https://open.dingtalk.com/document/isvapp/obtains-a-list-of-users-under-an-industry-role)</source>
        <target>[`internal.listIndustryRoleUsers()`](https://open.dingtalk.com/document/isvapp/obtains-a-list-of-users-under-an-industry-role)</target>
      </trans-unit>
      <trans-unit id="57488" translate="no">
        <source>[`internal.listInnerAppVersion()`](https://open.dingtalk.com/document/orgapp/get-the-version-list-of-the-enterprise-internal-applet)</source>
        <target>[`internal.listInnerAppVersion()`](https://open.dingtalk.com/document/orgapp/get-the-version-list-of-the-enterprise-internal-applet)</target>
      </trans-unit>
      <trans-unit id="57490" translate="no">
        <source>[`internal.listInspectInfo()`](https://open.dingtalk.com/document/isvapp/obtain-inspection-and-maintenance-records)</source>
        <target>[`internal.listInspectInfo()`](https://open.dingtalk.com/document/isvapp/obtain-inspection-and-maintenance-records)</target>
      </trans-unit>
      <trans-unit id="57492" translate="no">
        <source>[`internal.listMaintainInfo()`](https://open.dingtalk.com/document/isvapp/obtain-the-repair-report-record)</source>
        <target>[`internal.listMaintainInfo()`](https://open.dingtalk.com/document/isvapp/obtain-the-repair-report-record)</target>
      </trans-unit>
      <trans-unit id="57494" translate="no">
        <source>[`internal.listNavigationByFormType()`](https://open.dingtalk.com/document/isvapp-server/obtains-the-page-list-under-an-application)</source>
        <target>[`internal.listNavigationByFormType()`](https://open.dingtalk.com/document/isvapp-server/obtains-the-page-list-under-an-application)</target>
      </trans-unit>
      <trans-unit id="57496" translate="no">
        <source>[`internal.listNodes()`](https://open.dingtalk.com/document/orgapp/get-node-list)</source>
        <target>[`internal.listNodes()`](https://open.dingtalk.com/document/orgapp/get-node-list)</target>
      </trans-unit>
      <trans-unit id="57498" translate="no">
        <source>[`internal.listOperationLogs()`](https://open.dingtalk.com/document/app/query-the-operation-records-of-a-form)</source>
        <target>[`internal.listOperationLogs()`](https://open.dingtalk.com/document/app/query-the-operation-records-of-a-form)</target>
      </trans-unit>
      <trans-unit id="57500" translate="no">
        <source>[`internal.listPermissionsIsv()`](https://open.dingtalk.com/document/isvapp/obtain-a-permission-list-storage)</source>
        <target>[`internal.listPermissionsIsv()`](https://open.dingtalk.com/document/isvapp/obtain-a-permission-list-storage)</target>
      </trans-unit>
      <trans-unit id="57502" translate="no">
        <source>[`internal.listPermissionsOrg()`](https://open.dingtalk.com/document/orgapp/get-permission-list)</source>
        <target>[`internal.listPermissionsOrg()`](https://open.dingtalk.com/document/orgapp/get-permission-list)</target>
      </trans-unit>
      <trans-unit id="57504" translate="no">
        <source>[`internal.listPointRules()`](https://open.dingtalk.com/document/isvapp/query-all-credit-rules)</source>
        <target>[`internal.listPointRules()`](https://open.dingtalk.com/document/isvapp/query-all-credit-rules)</target>
      </trans-unit>
      <trans-unit id="57506" translate="no">
        <source>[`internal.listRecycleItems()`](https://open.dingtalk.com/document/isvapp/gets-the-list-of-recycle-items)</source>
        <target>[`internal.listRecycleItems()`](https://open.dingtalk.com/document/isvapp/gets-the-list-of-recycle-items)</target>
      </trans-unit>
      <trans-unit id="57508" translate="no">
        <source>[`internal.listSpaces()`](https://open.dingtalk.com/document/isvapp/queries-a-space-list)</source>
        <target>[`internal.listSpaces()`](https://open.dingtalk.com/document/isvapp/queries-a-space-list)</target>
      </trans-unit>
      <trans-unit id="57510" translate="no">
        <source>[`internal.listTableDataByFormInstanceIdTableId()`](https://open.dingtalk.com/document/app/obtain-child-table-component-data)</source>
        <target>[`internal.listTableDataByFormInstanceIdTableId()`](https://open.dingtalk.com/document/app/obtain-child-table-component-data)</target>
      </trans-unit>
      <trans-unit id="57512" translate="no">
        <source>[`internal.listUserIndustryRoles()`](https://open.dingtalk.com/document/isvapp/obtains-information-about-the-industry-role-to-which-the-user)</source>
        <target>[`internal.listUserIndustryRoles()`](https://open.dingtalk.com/document/isvapp/obtains-information-about-the-industry-role-to-which-the-user)</target>
      </trans-unit>
      <trans-unit id="57514" translate="no">
        <source>[`internal.listUserVilebleApp()`](https://open.dingtalk.com/document/orgapp/obtains-the-list-of-enterprise-applications-visible-to-a-user)</source>
        <target>[`internal.listUserVilebleApp()`](https://open.dingtalk.com/document/orgapp/obtains-the-list-of-enterprise-applications-visible-to-a-user)</target>
      </trans-unit>
      <trans-unit id="57516" translate="no">
        <source>[`internal.loadBizFields()`](https://open.dingtalk.com/document/isvapp/gets-the-form-object-structure)</source>
        <target>[`internal.loadBizFields()`](https://open.dingtalk.com/document/isvapp/gets-the-form-object-structure)</target>
      </trans-unit>
      <trans-unit id="57518" translate="no">
        <source>[`internal.loadBizObject()`](https://open.dingtalk.com/document/isvapp/queries-business-instance-information)</source>
        <target>[`internal.loadBizObject()`](https://open.dingtalk.com/document/isvapp/queries-business-instance-information)</target>
      </trans-unit>
      <trans-unit id="57520" translate="no">
        <source>[`internal.loadBizObjects()`](https://open.dingtalk.com/document/isvapp/querying-form-business-data)</source>
        <target>[`internal.loadBizObjects()`](https://open.dingtalk.com/document/isvapp/querying-form-business-data)</target>
      </trans-unit>
      <trans-unit id="57522" translate="no">
        <source>[`internal.moveDentries()`](https://open.dingtalk.com/document/isvapp/bulk-move-files-or-folders)</source>
        <target>[`internal.moveDentries()`](https://open.dingtalk.com/document/isvapp/bulk-move-files-or-folders)</target>
      </trans-unit>
      <trans-unit id="57524" translate="no">
        <source>[`internal.moveDentry()`](https://open.dingtalk.com/document/isvapp/move-a-file-or-folder)</source>
        <target>[`internal.moveDentry()`](https://open.dingtalk.com/document/isvapp/move-a-file-or-folder)</target>
      </trans-unit>
      <trans-unit id="57526" translate="no">
        <source>[`internal.moveStudent()`](https://open.dingtalk.com/document/isvapp/shift-students)</source>
        <target>[`internal.moveStudent()`](https://open.dingtalk.com/document/isvapp/shift-students)</target>
      </trans-unit>
      <trans-unit id="57528" translate="no">
        <source>[`internal.muteMembers()`](https://open.dingtalk.com/document/orgapp/specify-person-to-mute-or-unmute)</source>
        <target>[`internal.muteMembers()`](https://open.dingtalk.com/document/orgapp/specify-person-to-mute-or-unmute)</target>
      </trans-unit>
      <trans-unit id="57530" translate="no">
        <source>[`internal.notifyBadgeCodePayResult()`](https://open.dingtalk.com/document/isvapp/sync-dingtalk-badge-code-payment-result)</source>
        <target>[`internal.notifyBadgeCodePayResult()`](https://open.dingtalk.com/document/isvapp/sync-dingtalk-badge-code-payment-result)</target>
      </trans-unit>
      <trans-unit id="57532" translate="no">
        <source>[`internal.notifyBadgeCodeRefundResult()`](https://open.dingtalk.com/document/isvapp/notification-dingtalk-badge-code-refund-result)</source>
        <target>[`internal.notifyBadgeCodeRefundResult()`](https://open.dingtalk.com/document/isvapp/notification-dingtalk-badge-code-refund-result)</target>
      </trans-unit>
      <trans-unit id="57534" translate="no">
        <source>[`internal.notifyBadgeCodeVerifyResult()`](https://open.dingtalk.com/document/isvapp/notification-dingtalk-badge-verification-result)</source>
        <target>[`internal.notifyBadgeCodeVerifyResult()`](https://open.dingtalk.com/document/isvapp/notification-dingtalk-badge-verification-result)</target>
      </trans-unit>
      <trans-unit id="57536" translate="no">
        <source>[`internal.oapiAiMtTranslate()`](https://open.dingtalk.com/document/isvapp/dingtalk-translation)</source>
        <target>[`internal.oapiAiMtTranslate()`](https://open.dingtalk.com/document/isvapp/dingtalk-translation)</target>
      </trans-unit>
      <trans-unit id="57538" translate="no">
        <source>[`internal.oapiAlitripBtripAddressGet()`](https://open.dingtalk.com/document/isvapp/obtain-business-travel-access-addresses)</source>
        <target>[`internal.oapiAlitripBtripAddressGet()`](https://open.dingtalk.com/document/isvapp/obtain-business-travel-access-addresses)</target>
      </trans-unit>
      <trans-unit id="57540" translate="no">
        <source>[`internal.oapiAlitripBtripApplyGet()`](https://open.dingtalk.com/document/isvapp/obtains-the-detailed-data-of-a-single-request)</source>
        <target>[`internal.oapiAlitripBtripApplyGet()`](https://open.dingtalk.com/document/isvapp/obtains-the-detailed-data-of-a-single-request)</target>
      </trans-unit>
      <trans-unit id="57542" translate="no">
        <source>[`internal.oapiAlitripBtripApplySearch()`](https://open.dingtalk.com/document/isvapp/search-enterprise-approval-form-data)</source>
        <target>[`internal.oapiAlitripBtripApplySearch()`](https://open.dingtalk.com/document/isvapp/search-enterprise-approval-form-data)</target>
      </trans-unit>
      <trans-unit id="57544" translate="no">
        <source>[`internal.oapiAlitripBtripApprovalModify()`](https://open.dingtalk.com/document/isvapp/user-modify-approval-form)</source>
        <target>[`internal.oapiAlitripBtripApprovalModify()`](https://open.dingtalk.com/document/isvapp/user-modify-approval-form)</target>
      </trans-unit>
      <trans-unit id="57546" translate="no">
        <source>[`internal.oapiAlitripBtripApprovalNew()`](https://open.dingtalk.com/document/isvapp/user-new-approval-form)</source>
        <target>[`internal.oapiAlitripBtripApprovalNew()`](https://open.dingtalk.com/document/isvapp/user-new-approval-form)</target>
      </trans-unit>
      <trans-unit id="57548" translate="no">
        <source>[`internal.oapiAlitripBtripApprovalUpdate()`](https://open.dingtalk.com/document/isvapp/update-approval-form)</source>
        <target>[`internal.oapiAlitripBtripApprovalUpdate()`](https://open.dingtalk.com/document/isvapp/update-approval-form)</target>
      </trans-unit>
      <trans-unit id="57550" translate="no">
        <source>[`internal.oapiAlitripBtripCostCenterDelete()`](https://open.dingtalk.com/document/isvapp/delete-cost-center)</source>
        <target>[`internal.oapiAlitripBtripCostCenterDelete()`](https://open.dingtalk.com/document/isvapp/delete-cost-center)</target>
      </trans-unit>
      <trans-unit id="57552" translate="no">
        <source>[`internal.oapiAlitripBtripCostCenterEntityDelete()`](https://open.dingtalk.com/document/isvapp/delete-cost-center-personnel-information)</source>
        <target>[`internal.oapiAlitripBtripCostCenterEntityDelete()`](https://open.dingtalk.com/document/isvapp/delete-cost-center-personnel-information)</target>
      </trans-unit>
      <trans-unit id="57554" translate="no">
        <source>[`internal.oapiAlitripBtripCostCenterEntitySet()`](https://open.dingtalk.com/document/isvapp/set-up-cost-center-personnel-information)</source>
        <target>[`internal.oapiAlitripBtripCostCenterEntitySet()`](https://open.dingtalk.com/document/isvapp/set-up-cost-center-personnel-information)</target>
      </trans-unit>
      <trans-unit id="57556" translate="no">
        <source>[`internal.oapiAlitripBtripCostCenterModify()`](https://open.dingtalk.com/document/isvapp/modify-basic-cost-center-information)</source>
        <target>[`internal.oapiAlitripBtripCostCenterModify()`](https://open.dingtalk.com/document/isvapp/modify-basic-cost-center-information)</target>
      </trans-unit>
      <trans-unit id="57558" translate="no">
        <source>[`internal.oapiAlitripBtripCostCenterNew()`](https://open.dingtalk.com/document/isvapp/new-cost-center)</source>
        <target>[`internal.oapiAlitripBtripCostCenterNew()`](https://open.dingtalk.com/document/isvapp/new-cost-center)</target>
      </trans-unit>
      <trans-unit id="57560" translate="no">
        <source>[`internal.oapiAlitripBtripCostCenterQuery()`](https://open.dingtalk.com/document/isvapp/query-cost-center)</source>
        <target>[`internal.oapiAlitripBtripCostCenterQuery()`](https://open.dingtalk.com/document/isvapp/query-cost-center)</target>
      </trans-unit>
      <trans-unit id="57562" translate="no">
        <source>[`internal.oapiAlitripBtripCostCenterTransfer()`](https://open.dingtalk.com/document/isvapp/business-travel-cost-center-converted-to-external-cost-center)</source>
        <target>[`internal.oapiAlitripBtripCostCenterTransfer()`](https://open.dingtalk.com/document/isvapp/business-travel-cost-center-converted-to-external-cost-center)</target>
      </trans-unit>
      <trans-unit id="57564" translate="no">
        <source>[`internal.oapiAlitripBtripFlightCitySuggest()`](https://open.dingtalk.com/document/isvapp/air-ticket-city-search)</source>
        <target>[`internal.oapiAlitripBtripFlightCitySuggest()`](https://open.dingtalk.com/document/isvapp/air-ticket-city-search)</target>
      </trans-unit>
      <trans-unit id="57566" translate="no">
        <source>[`internal.oapiAlitripBtripFlightOrderSearch()`](https://open.dingtalk.com/document/isvapp/obtains-enterprise-ticket-order-data)</source>
        <target>[`internal.oapiAlitripBtripFlightOrderSearch()`](https://open.dingtalk.com/document/isvapp/obtains-enterprise-ticket-order-data)</target>
      </trans-unit>
      <trans-unit id="57568" translate="no">
        <source>[`internal.oapiAlitripBtripHotelOrderSearch()`](https://open.dingtalk.com/document/isvapp/obtains-the-order-data-of-enterprise-hotels)</source>
        <target>[`internal.oapiAlitripBtripHotelOrderSearch()`](https://open.dingtalk.com/document/isvapp/obtains-the-order-data-of-enterprise-hotels)</target>
      </trans-unit>
      <trans-unit id="57570" translate="no">
        <source>[`internal.oapiAlitripBtripInvoiceSearch()`](https://open.dingtalk.com/document/isvapp/query-available-invoices)</source>
        <target>[`internal.oapiAlitripBtripInvoiceSearch()`](https://open.dingtalk.com/document/isvapp/query-available-invoices)</target>
      </trans-unit>
      <trans-unit id="57572" translate="no">
        <source>[`internal.oapiAlitripBtripInvoiceSettingAdd()`](https://open.dingtalk.com/document/isvapp/new-invoice-configuration)</source>
        <target>[`internal.oapiAlitripBtripInvoiceSettingAdd()`](https://open.dingtalk.com/document/isvapp/new-invoice-configuration)</target>
      </trans-unit>
      <trans-unit id="57574" translate="no">
        <source>[`internal.oapiAlitripBtripInvoiceSettingDelete()`](https://open.dingtalk.com/document/isvapp/delete-invoice-configuration)</source>
        <target>[`internal.oapiAlitripBtripInvoiceSettingDelete()`](https://open.dingtalk.com/document/isvapp/delete-invoice-configuration)</target>
      </trans-unit>
      <trans-unit id="57576" translate="no">
        <source>[`internal.oapiAlitripBtripInvoiceSettingModify()`](https://open.dingtalk.com/document/isvapp/modify-invoice-configuration)</source>
        <target>[`internal.oapiAlitripBtripInvoiceSettingModify()`](https://open.dingtalk.com/document/isvapp/modify-invoice-configuration)</target>
      </trans-unit>
      <trans-unit id="57578" translate="no">
        <source>[`internal.oapiAlitripBtripInvoiceSettingRule()`](https://open.dingtalk.com/document/isvapp/configure-invoice-users)</source>
        <target>[`internal.oapiAlitripBtripInvoiceSettingRule()`](https://open.dingtalk.com/document/isvapp/configure-invoice-users)</target>
      </trans-unit>
      <trans-unit id="57580" translate="no">
        <source>[`internal.oapiAlitripBtripMonthbillUrlGet()`](https://open.dingtalk.com/document/isvapp/obtain-monthly-reconciliation-settlement-data)</source>
        <target>[`internal.oapiAlitripBtripMonthbillUrlGet()`](https://open.dingtalk.com/document/isvapp/obtain-monthly-reconciliation-settlement-data)</target>
      </trans-unit>
      <trans-unit id="57582" translate="no">
        <source>[`internal.oapiAlitripBtripPriceQuery()`](https://open.dingtalk.com/document/isvapp/query-estimated-price)</source>
        <target>[`internal.oapiAlitripBtripPriceQuery()`](https://open.dingtalk.com/document/isvapp/query-estimated-price)</target>
      </trans-unit>
      <trans-unit id="57584" translate="no">
        <source>[`internal.oapiAlitripBtripProjectAdd()`](https://open.dingtalk.com/document/isvapp/add-a-project)</source>
        <target>[`internal.oapiAlitripBtripProjectAdd()`](https://open.dingtalk.com/document/isvapp/add-a-project)</target>
      </trans-unit>
      <trans-unit id="57586" translate="no">
        <source>[`internal.oapiAlitripBtripProjectDelete()`](https://open.dingtalk.com/document/isvapp/delete-a-project)</source>
        <target>[`internal.oapiAlitripBtripProjectDelete()`](https://open.dingtalk.com/document/isvapp/delete-a-project)</target>
      </trans-unit>
      <trans-unit id="57588" translate="no">
        <source>[`internal.oapiAlitripBtripProjectModify()`](https://open.dingtalk.com/document/isvapp/project-change)</source>
        <target>[`internal.oapiAlitripBtripProjectModify()`](https://open.dingtalk.com/document/isvapp/project-change)</target>
      </trans-unit>
      <trans-unit id="57590" translate="no">
        <source>[`internal.oapiAlitripBtripTrainCitySuggest()`](https://open.dingtalk.com/document/isvapp/train-ticket-city-search)</source>
        <target>[`internal.oapiAlitripBtripTrainCitySuggest()`](https://open.dingtalk.com/document/isvapp/train-ticket-city-search)</target>
      </trans-unit>
      <trans-unit id="57592" translate="no">
        <source>[`internal.oapiAlitripBtripTrainOrderSearch()`](https://open.dingtalk.com/document/isvapp/obtains-the-enterprise-train-ticket-order-data)</source>
        <target>[`internal.oapiAlitripBtripTrainOrderSearch()`](https://open.dingtalk.com/document/isvapp/obtains-the-enterprise-train-ticket-order-data)</target>
      </trans-unit>
      <trans-unit id="57594" translate="no">
        <source>[`internal.oapiAlitripBtripVehicleOrderSearch()`](https://open.dingtalk.com/document/isvapp/vehicle-order-query-interface)</source>
        <target>[`internal.oapiAlitripBtripVehicleOrderSearch()`](https://open.dingtalk.com/document/isvapp/vehicle-order-query-interface)</target>
      </trans-unit>
      <trans-unit id="57596" translate="no">
        <source>[`internal.oapiAsrVoiceTranslate()`](https://open.dingtalk.com/document/isvapp/asr-short-sentence-recognition)</source>
        <target>[`internal.oapiAsrVoiceTranslate()`](https://open.dingtalk.com/document/isvapp/asr-short-sentence-recognition)</target>
      </trans-unit>
      <trans-unit id="57598" translate="no">
        <source>[`internal.oapiBlackboardCategoryList()`](https://open.dingtalk.com/document/orgapp/obtains-the-list-of-categories-not-deleted-for-enterprise-announcements)</source>
        <target>[`internal.oapiBlackboardCategoryList()`](https://open.dingtalk.com/document/orgapp/obtains-the-list-of-categories-not-deleted-for-enterprise-announcements)</target>
      </trans-unit>
      <trans-unit id="57600" translate="no">
        <source>[`internal.oapiBlackboardCreate()`](https://open.dingtalk.com/document/orgapp/create-an-enterprise-announcement)</source>
        <target>[`internal.oapiBlackboardCreate()`](https://open.dingtalk.com/document/orgapp/create-an-enterprise-announcement)</target>
      </trans-unit>
      <trans-unit id="57602" translate="no">
        <source>[`internal.oapiBlackboardDelete()`](https://open.dingtalk.com/document/orgapp/delete-announcements-based-on-the-announcement-id)</source>
        <target>[`internal.oapiBlackboardDelete()`](https://open.dingtalk.com/document/orgapp/delete-announcements-based-on-the-announcement-id)</target>
      </trans-unit>
      <trans-unit id="57604" translate="no">
        <source>[`internal.oapiBlackboardGet()`](https://open.dingtalk.com/document/orgapp/obtains-the-details-of-a-bulletin-that-is-not-deleted)</source>
        <target>[`internal.oapiBlackboardGet()`](https://open.dingtalk.com/document/orgapp/obtains-the-details-of-a-bulletin-that-is-not-deleted)</target>
      </trans-unit>
      <trans-unit id="57606" translate="no">
        <source>[`internal.oapiBlackboardListids()`](https://open.dingtalk.com/document/orgapp/obtains-the-id-list-of-announcements-that-are-not-deleted)</source>
        <target>[`internal.oapiBlackboardListids()`](https://open.dingtalk.com/document/orgapp/obtains-the-id-list-of-announcements-that-are-not-deleted)</target>
      </trans-unit>
      <trans-unit id="57608" translate="no">
        <source>[`internal.oapiBlackboardListtopten()`](https://open.dingtalk.com/document/orgapp/list-the-user-s-announcement-list)</source>
        <target>[`internal.oapiBlackboardListtopten()`](https://open.dingtalk.com/document/orgapp/list-the-user-s-announcement-list)</target>
      </trans-unit>
      <trans-unit id="57610" translate="no">
        <source>[`internal.oapiBlackboardUpdate()`](https://open.dingtalk.com/document/orgapp/modify-the-announcement-according-to-the-announcement-id)</source>
        <target>[`internal.oapiBlackboardUpdate()`](https://open.dingtalk.com/document/orgapp/modify-the-announcement-according-to-the-announcement-id)</target>
      </trans-unit>
      <trans-unit id="57612" translate="no">
        <source>[`internal.oapiChatCreate()`](https://open.dingtalk.com/document/orgapp/create-group-session)</source>
        <target>[`internal.oapiChatCreate()`](https://open.dingtalk.com/document/orgapp/create-group-session)</target>
      </trans-unit>
      <trans-unit id="57614" translate="no">
        <source>[`internal.oapiChatGet()`](https://open.dingtalk.com/document/orgapp/obtain-a-group-session)</source>
        <target>[`internal.oapiChatGet()`](https://open.dingtalk.com/document/orgapp/obtain-a-group-session)</target>
      </trans-unit>
      <trans-unit id="57616" translate="no">
        <source>[`internal.oapiChatMemberFriendswitchUpdate()`](https://open.dingtalk.com/document/orgapp/set-private-chat)</source>
        <target>[`internal.oapiChatMemberFriendswitchUpdate()`](https://open.dingtalk.com/document/orgapp/set-private-chat)</target>
      </trans-unit>
      <trans-unit id="57618" translate="no">
        <source>[`internal.oapiChatQrcodeGet()`](https://open.dingtalk.com/document/orgapp/obtain-a-qr-code-link)</source>
        <target>[`internal.oapiChatQrcodeGet()`](https://open.dingtalk.com/document/orgapp/obtain-a-qr-code-link)</target>
      </trans-unit>
      <trans-unit id="57620" translate="no">
        <source>[`internal.oapiChatSubadminUpdate()`](https://open.dingtalk.com/document/orgapp/set-chat-admin)</source>
        <target>[`internal.oapiChatSubadminUpdate()`](https://open.dingtalk.com/document/orgapp/set-chat-admin)</target>
      </trans-unit>
      <trans-unit id="57622" translate="no">
        <source>[`internal.oapiChatUpdate()`](https://open.dingtalk.com/document/orgapp/modify-a-group-session)</source>
        <target>[`internal.oapiChatUpdate()`](https://open.dingtalk.com/document/orgapp/modify-a-group-session)</target>
      </trans-unit>
      <trans-unit id="57624" translate="no">
        <source>[`internal.oapiChatUpdategroupnick()`](https://open.dingtalk.com/document/orgapp/set-a-group-nickname)</source>
        <target>[`internal.oapiChatUpdategroupnick()`](https://open.dingtalk.com/document/orgapp/set-a-group-nickname)</target>
      </trans-unit>
      <trans-unit id="57626" translate="no">
        <source>[`internal.oapiCheckinRecord()`](https://open.dingtalk.com/document/orgapp/get-check-in-data)</source>
        <target>[`internal.oapiCheckinRecord()`](https://open.dingtalk.com/document/orgapp/get-check-in-data)</target>
      </trans-unit>
      <trans-unit id="57628" translate="no">
        <source>[`internal.oapiCheckinRecordGet()`](https://open.dingtalk.com/document/isvapp/obtain-the-check-in-records-of-multiple-users)</source>
        <target>[`internal.oapiCheckinRecordGet()`](https://open.dingtalk.com/document/isvapp/obtain-the-check-in-records-of-multiple-users)</target>
      </trans-unit>
      <trans-unit id="57630" translate="no">
        <source>[`internal.oapiCrmObjectdataContactDelete()`](https://open.dingtalk.com/document/orgapp/delete-crm-contact)</source>
        <target>[`internal.oapiCrmObjectdataContactDelete()`](https://open.dingtalk.com/document/orgapp/delete-crm-contact)</target>
      </trans-unit>
      <trans-unit id="57632" translate="no">
        <source>[`internal.oapiCrmObjectdataContactList()`](https://open.dingtalk.com/document/orgapp/retrieves-contact-data-in-batches-based-on-the-id-list)</source>
        <target>[`internal.oapiCrmObjectdataContactList()`](https://open.dingtalk.com/document/orgapp/retrieves-contact-data-in-batches-based-on-the-id-list)</target>
      </trans-unit>
      <trans-unit id="57634" translate="no">
        <source>[`internal.oapiCrmObjectdataContactQuery()`](https://open.dingtalk.com/document/isvapp/query-contact-data)</source>
        <target>[`internal.oapiCrmObjectdataContactQuery()`](https://open.dingtalk.com/document/isvapp/query-contact-data)</target>
      </trans-unit>
      <trans-unit id="57636" translate="no">
        <source>[`internal.oapiCrmObjectdataCustomobjectCreate()`](https://open.dingtalk.com/document/orgapp/dingtalk-paas-master-create-custom-crm-object-data)</source>
        <target>[`internal.oapiCrmObjectdataCustomobjectCreate()`](https://open.dingtalk.com/document/orgapp/dingtalk-paas-master-create-custom-crm-object-data)</target>
      </trans-unit>
      <trans-unit id="57638" translate="no">
        <source>[`internal.oapiCrmObjectdataCustomobjectUpdate()`](https://open.dingtalk.com/document/orgapp/crm-master-data-opens-interface-for-updating-custom-object-data)</source>
        <target>[`internal.oapiCrmObjectdataCustomobjectUpdate()`](https://open.dingtalk.com/document/orgapp/crm-master-data-opens-interface-for-updating-custom-object-data)</target>
      </trans-unit>
      <trans-unit id="57640" translate="no">
        <source>[`internal.oapiCrmObjectdataFollowrecordList()`](https://open.dingtalk.com/document/orgapp/dingtalk-the-primary-data-of-apsara-stack-agility-paas-allows-you)</source>
        <target>[`internal.oapiCrmObjectdataFollowrecordList()`](https://open.dingtalk.com/document/orgapp/dingtalk-the-primary-data-of-apsara-stack-agility-paas-allows-you)</target>
      </trans-unit>
      <trans-unit id="57642" translate="no">
        <source>[`internal.oapiCrmObjectdataFollowrecordQuery()`](https://open.dingtalk.com/document/orgapp/query-and-dingtalk-data-of-track-records-in-apsara-stack)</source>
        <target>[`internal.oapiCrmObjectdataFollowrecordQuery()`](https://open.dingtalk.com/document/orgapp/query-and-dingtalk-data-of-track-records-in-apsara-stack)</target>
      </trans-unit>
      <trans-unit id="57644" translate="no">
        <source>[`internal.oapiCrmObjectdataList()`](https://open.dingtalk.com/document/orgapp/retrieves-custom-crm-forms-from-the-id-list)</source>
        <target>[`internal.oapiCrmObjectdataList()`](https://open.dingtalk.com/document/orgapp/retrieves-custom-crm-forms-from-the-id-list)</target>
      </trans-unit>
      <trans-unit id="57646" translate="no">
        <source>[`internal.oapiCrmObjectdataQuery()`](https://open.dingtalk.com/document/orgapp/retrieve-custom-crm-object-data)</source>
        <target>[`internal.oapiCrmObjectdataQuery()`](https://open.dingtalk.com/document/orgapp/retrieve-custom-crm-object-data)</target>
      </trans-unit>
      <trans-unit id="57648" translate="no">
        <source>[`internal.oapiCrmObjectmetaContactDescribe()`](https://open.dingtalk.com/document/isvapp/get-metadata-for-a-contact)</source>
        <target>[`internal.oapiCrmObjectmetaContactDescribe()`](https://open.dingtalk.com/document/isvapp/get-metadata-for-a-contact)</target>
      </trans-unit>
      <trans-unit id="57650" translate="no">
        <source>[`internal.oapiCrmObjectmetaDescribe()`](https://open.dingtalk.com/document/orgapp/get-metadata-description-of-crm-custom-object)</source>
        <target>[`internal.oapiCrmObjectmetaDescribe()`](https://open.dingtalk.com/document/orgapp/get-metadata-description-of-crm-custom-object)</target>
      </trans-unit>
      <trans-unit id="57652" translate="no">
        <source>[`internal.oapiCrmObjectmetaFollowrecordDescribe()`](https://open.dingtalk.com/document/isvapp/get-the-metadata-of-the-follow-up-record-object)</source>
        <target>[`internal.oapiCrmObjectmetaFollowrecordDescribe()`](https://open.dingtalk.com/document/isvapp/get-the-metadata-of-the-follow-up-record-object)</target>
      </trans-unit>
      <trans-unit id="57654" translate="no">
        <source>[`internal.oapiCspaceAdd()`](https://open.dingtalk.com/document/isvapp-server/add-file-to-user-s-dingtalk-disk)</source>
        <target>[`internal.oapiCspaceAdd()`](https://open.dingtalk.com/document/isvapp-server/add-file-to-user-s-dingtalk-disk)</target>
      </trans-unit>
      <trans-unit id="57656" translate="no">
        <source>[`internal.oapiCspaceAddToSingleChat()`](https://open.dingtalk.com/document/isvapp-server/sends-a-file-to-a-specified-user)</source>
        <target>[`internal.oapiCspaceAddToSingleChat()`](https://open.dingtalk.com/document/isvapp-server/sends-a-file-to-a-specified-user)</target>
      </trans-unit>
      <trans-unit id="57658" translate="no">
        <source>[`internal.oapiCspaceGetCustomSpace()`](https://open.dingtalk.com/document/isvapp-server/obtain-user-space-under-the-enterprise)</source>
        <target>[`internal.oapiCspaceGetCustomSpace()`](https://open.dingtalk.com/document/isvapp-server/obtain-user-space-under-the-enterprise)</target>
      </trans-unit>
      <trans-unit id="57660" translate="no">
        <source>[`internal.oapiCspaceGrantCustomSpace()`](https://open.dingtalk.com/document/isvapp-server/authorize-a-user-to-access-a-custom-workspace-of-an)</source>
        <target>[`internal.oapiCspaceGrantCustomSpace()`](https://open.dingtalk.com/document/isvapp-server/authorize-a-user-to-access-a-custom-workspace-of-an)</target>
      </trans-unit>
      <trans-unit id="57662" translate="no">
        <source>[`internal.oapiEduCertGet()`](https://open.dingtalk.com/document/isvapp/obtain-digital-certificate)</source>
        <target>[`internal.oapiEduCertGet()`](https://open.dingtalk.com/document/isvapp/obtain-digital-certificate)</target>
      </trans-unit>
      <trans-unit id="57664" translate="no">
        <source>[`internal.oapiEduUserList()`](https://open.dingtalk.com/document/isvapp/obtains-a-list-of-home-school-user-identities)</source>
        <target>[`internal.oapiEduUserList()`](https://open.dingtalk.com/document/isvapp/obtains-a-list-of-home-school-user-identities)</target>
      </trans-unit>
      <trans-unit id="57666" translate="no">
        <source>[`internal.oapiGetJsapiTicket()`](https://open.dingtalk.com/document/isvapp/obtain-jsapi_ticket)</source>
        <target>[`internal.oapiGetJsapiTicket()`](https://open.dingtalk.com/document/isvapp/obtain-jsapi_ticket)</target>
      </trans-unit>
      <trans-unit id="57668" translate="no">
        <source>[`internal.oapiGettoken()`](https://open.dingtalk.com/document/orgapp/obtain-orgapp-token)</source>
        <target>[`internal.oapiGettoken()`](https://open.dingtalk.com/document/orgapp/obtain-orgapp-token)</target>
      </trans-unit>
      <trans-unit id="57670" translate="no">
        <source>[`internal.oapiHealthStepinfoGetuserstatus()`](https://open.dingtalk.com/document/isvapp/check-whether-dingtalk-is-enabled)</source>
        <target>[`internal.oapiHealthStepinfoGetuserstatus()`](https://open.dingtalk.com/document/isvapp/check-whether-dingtalk-is-enabled)</target>
      </trans-unit>
      <trans-unit id="57672" translate="no">
        <source>[`internal.oapiHealthStepinfoList()`](https://open.dingtalk.com/document/orgapp/queries-individual-or-department-dingtalk-exercise-steps)</source>
        <target>[`internal.oapiHealthStepinfoList()`](https://open.dingtalk.com/document/orgapp/queries-individual-or-department-dingtalk-exercise-steps)</target>
      </trans-unit>
      <trans-unit id="57674" translate="no">
        <source>[`internal.oapiHealthStepinfoListbyuserid()`](https://open.dingtalk.com/document/orgapp/queries-the-number-of-dingtalk-movement-steps-of-multiple-users)</source>
        <target>[`internal.oapiHealthStepinfoListbyuserid()`](https://open.dingtalk.com/document/orgapp/queries-the-number-of-dingtalk-movement-steps-of-multiple-users)</target>
      </trans-unit>
      <trans-unit id="57676" translate="no">
        <source>[`internal.oapiImChatScencegroupInteractivecardCallbackRegister()`](https://open.dingtalk.com/document/orgapp/registration-card-interaction-callback-address-1)</source>
        <target>[`internal.oapiImChatScencegroupInteractivecardCallbackRegister()`](https://open.dingtalk.com/document/orgapp/registration-card-interaction-callback-address-1)</target>
      </trans-unit>
      <trans-unit id="57678" translate="no">
        <source>[`internal.oapiImChatScencegroupMessageSendV2()`](https://open.dingtalk.com/document/isvapp/send-group-helper-message)</source>
        <target>[`internal.oapiImChatScencegroupMessageSendV2()`](https://open.dingtalk.com/document/isvapp/send-group-helper-message)</target>
      </trans-unit>
      <trans-unit id="57680" translate="no">
        <source>[`internal.oapiImChatScenegroupCreate()`](https://open.dingtalk.com/document/isvapp/create-group)</source>
        <target>[`internal.oapiImChatScenegroupCreate()`](https://open.dingtalk.com/document/isvapp/create-group)</target>
      </trans-unit>
      <trans-unit id="57682" translate="no">
        <source>[`internal.oapiImChatScenegroupGet()`](https://open.dingtalk.com/document/isvapp/querying-group-information)</source>
        <target>[`internal.oapiImChatScenegroupGet()`](https://open.dingtalk.com/document/isvapp/querying-group-information)</target>
      </trans-unit>
      <trans-unit id="57684" translate="no">
        <source>[`internal.oapiImChatScenegroupMemberAdd()`](https://open.dingtalk.com/document/isvapp/add-group-members-1)</source>
        <target>[`internal.oapiImChatScenegroupMemberAdd()`](https://open.dingtalk.com/document/isvapp/add-group-members-1)</target>
      </trans-unit>
      <trans-unit id="57686" translate="no">
        <source>[`internal.oapiImChatScenegroupMemberDelete()`](https://open.dingtalk.com/document/isvapp/delete-group-members)</source>
        <target>[`internal.oapiImChatScenegroupMemberDelete()`](https://open.dingtalk.com/document/isvapp/delete-group-members)</target>
      </trans-unit>
      <trans-unit id="57688" translate="no">
        <source>[`internal.oapiImChatScenegroupMemberGet()`](https://open.dingtalk.com/document/group/obtains-scene-members)</source>
        <target>[`internal.oapiImChatScenegroupMemberGet()`](https://open.dingtalk.com/document/group/obtains-scene-members)</target>
      </trans-unit>
      <trans-unit id="57690" translate="no">
        <source>[`internal.oapiImChatScenegroupTemplateApply()`](https://open.dingtalk.com/document/isvapp/enable-group-template)</source>
        <target>[`internal.oapiImChatScenegroupTemplateApply()`](https://open.dingtalk.com/document/isvapp/enable-group-template)</target>
      </trans-unit>
      <trans-unit id="57692" translate="no">
        <source>[`internal.oapiImChatScenegroupTemplateClose()`](https://open.dingtalk.com/document/isvapp/deactivate-group-template)</source>
        <target>[`internal.oapiImChatScenegroupTemplateClose()`](https://open.dingtalk.com/document/isvapp/deactivate-group-template)</target>
      </trans-unit>
      <trans-unit id="57694" translate="no">
        <source>[`internal.oapiImChatScenegroupUpdate()`](https://open.dingtalk.com/document/isvapp/update-group)</source>
        <target>[`internal.oapiImChatScenegroupUpdate()`](https://open.dingtalk.com/document/isvapp/update-group)</target>
      </trans-unit>
      <trans-unit id="57696" translate="no">
        <source>[`internal.oapiMicroappDelete()`](https://open.dingtalk.com/document/orgapp-server/delete-an-h5-microapplication)</source>
        <target>[`internal.oapiMicroappDelete()`](https://open.dingtalk.com/document/orgapp-server/delete-an-h5-microapplication)</target>
      </trans-unit>
      <trans-unit id="57698" translate="no">
        <source>[`internal.oapiMicroappList()`](https://open.dingtalk.com/document/orgapp-server/manager-microapplications-api-permission)</source>
        <target>[`internal.oapiMicroappList()`](https://open.dingtalk.com/document/orgapp-server/manager-microapplications-api-permission)</target>
      </trans-unit>
      <trans-unit id="57700" translate="no">
        <source>[`internal.oapiMicroappListByUserid()`](https://open.dingtalk.com/document/orgapp-server/list-the-microapplications-visible-to-employees)</source>
        <target>[`internal.oapiMicroappListByUserid()`](https://open.dingtalk.com/document/orgapp-server/list-the-microapplications-visible-to-employees)</target>
      </trans-unit>
      <trans-unit id="57702" translate="no">
        <source>[`internal.oapiMicroappSetVisibleScopes()`](https://open.dingtalk.com/document/orgapp-server/set-the-visible-range-of-the-microapplication)</source>
        <target>[`internal.oapiMicroappSetVisibleScopes()`](https://open.dingtalk.com/document/orgapp-server/set-the-visible-range-of-the-microapplication)</target>
      </trans-unit>
      <trans-unit id="57704" translate="no">
        <source>[`internal.oapiMicroappVisibleScopes()`](https://open.dingtalk.com/document/orgapp-server/gets-the-microapplication-visible-range-set-by-the-enterprise)</source>
        <target>[`internal.oapiMicroappVisibleScopes()`](https://open.dingtalk.com/document/orgapp-server/gets-the-microapplication-visible-range-set-by-the-enterprise)</target>
      </trans-unit>
      <trans-unit id="57706" translate="no">
        <source>[`internal.oapiOcrStructuredRecognize()`](https://open.dingtalk.com/document/isvapp/structured-image-recognition-api)</source>
        <target>[`internal.oapiOcrStructuredRecognize()`](https://open.dingtalk.com/document/isvapp/structured-image-recognition-api)</target>
      </trans-unit>
      <trans-unit id="57708" translate="no">
        <source>[`internal.oapiOrgUnionTrunkGet()`](https://open.dingtalk.com/document/isvapp/obtain-backbone-organization-list)</source>
        <target>[`internal.oapiOrgUnionTrunkGet()`](https://open.dingtalk.com/document/isvapp/obtain-backbone-organization-list)</target>
      </trans-unit>
      <trans-unit id="57710" translate="no">
        <source>[`internal.oapiReportCommentList()`](https://open.dingtalk.com/document/orgapp/queries-log-comment-details)</source>
        <target>[`internal.oapiReportCommentList()`](https://open.dingtalk.com/document/orgapp/queries-log-comment-details)</target>
      </trans-unit>
      <trans-unit id="57712" translate="no">
        <source>[`internal.oapiReportCreate()`](https://open.dingtalk.com/document/isvapp/create-a-log)</source>
        <target>[`internal.oapiReportCreate()`](https://open.dingtalk.com/document/isvapp/create-a-log)</target>
      </trans-unit>
      <trans-unit id="57714" translate="no">
        <source>[`internal.oapiReportGetunreadcount()`](https://open.dingtalk.com/document/orgapp/querying-the-employee-s-log-is-not-reading)</source>
        <target>[`internal.oapiReportGetunreadcount()`](https://open.dingtalk.com/document/orgapp/querying-the-employee-s-log-is-not-reading)</target>
      </trans-unit>
      <trans-unit id="57716" translate="no">
        <source>[`internal.oapiReportList()`](https://open.dingtalk.com/document/isvapp/obtains-a-list-of-the-logs-that-are-sent-by)</source>
        <target>[`internal.oapiReportList()`](https://open.dingtalk.com/document/isvapp/obtains-a-list-of-the-logs-that-are-sent-by)</target>
      </trans-unit>
      <trans-unit id="57718" translate="no">
        <source>[`internal.oapiReportReceiverList()`](https://open.dingtalk.com/document/orgapp/queries-log-sharing-personnel)</source>
        <target>[`internal.oapiReportReceiverList()`](https://open.dingtalk.com/document/orgapp/queries-log-sharing-personnel)</target>
      </trans-unit>
      <trans-unit id="57720" translate="no">
        <source>[`internal.oapiReportSavecontent()`](https://open.dingtalk.com/document/isvapp/save-custom-log-content)</source>
        <target>[`internal.oapiReportSavecontent()`](https://open.dingtalk.com/document/isvapp/save-custom-log-content)</target>
      </trans-unit>
      <trans-unit id="57722" translate="no">
        <source>[`internal.oapiReportSimplelist()`](https://open.dingtalk.com/document/orgapp/view-log-summary-data)</source>
        <target>[`internal.oapiReportSimplelist()`](https://open.dingtalk.com/document/orgapp/view-log-summary-data)</target>
      </trans-unit>
      <trans-unit id="57724" translate="no">
        <source>[`internal.oapiReportStatistics()`](https://open.dingtalk.com/document/orgapp/query-log-statistics)</source>
        <target>[`internal.oapiReportStatistics()`](https://open.dingtalk.com/document/orgapp/query-log-statistics)</target>
      </trans-unit>
      <trans-unit id="57726" translate="no">
        <source>[`internal.oapiReportStatisticsListbytype()`](https://open.dingtalk.com/document/orgapp/obtains-a-list-of-log-related-personnel-by-type)</source>
        <target>[`internal.oapiReportStatisticsListbytype()`](https://open.dingtalk.com/document/orgapp/obtains-a-list-of-log-related-personnel-by-type)</target>
      </trans-unit>
      <trans-unit id="57728" translate="no">
        <source>[`internal.oapiReportTemplateGetbyname()`](https://open.dingtalk.com/document/isvapp/query-template-details)</source>
        <target>[`internal.oapiReportTemplateGetbyname()`](https://open.dingtalk.com/document/isvapp/query-template-details)</target>
      </trans-unit>
      <trans-unit id="57730" translate="no">
        <source>[`internal.oapiReportTemplateListbyuserid()`](https://open.dingtalk.com/document/orgapp/obtains-the-list-of-visible-log-templates-based-on-the)</source>
        <target>[`internal.oapiReportTemplateListbyuserid()`](https://open.dingtalk.com/document/orgapp/obtains-the-list-of-visible-log-templates-based-on-the)</target>
      </trans-unit>
      <trans-unit id="57732" translate="no">
        <source>[`internal.oapiRobotSend()`](https://open.dingtalk.com/document/isvapp/custom-bot-access-send-message)</source>
        <target>[`internal.oapiRobotSend()`](https://open.dingtalk.com/document/isvapp/custom-bot-access-send-message)</target>
      </trans-unit>
      <trans-unit id="57734" translate="no">
        <source>[`internal.oapiServiceGetAuthInfo()`](https://open.dingtalk.com/document/isvapp/obtains-the-basic-information-of-an-enterprise)</source>
        <target>[`internal.oapiServiceGetAuthInfo()`](https://open.dingtalk.com/document/isvapp/obtains-the-basic-information-of-an-enterprise)</target>
      </trans-unit>
      <trans-unit id="57736" translate="no">
        <source>[`internal.oapiServiceGetCorpToken()`](https://open.dingtalk.com/document/isvapp/obtains-the-enterprise-authorized-credential)</source>
        <target>[`internal.oapiServiceGetCorpToken()`](https://open.dingtalk.com/document/isvapp/obtains-the-enterprise-authorized-credential)</target>
      </trans-unit>
      <trans-unit id="57738" translate="no">
        <source>[`internal.oapiSmartbotMsgPush()`](https://open.dingtalk.com/document/orgapp/the-message-pushing-interface-of-the-assistant)</source>
        <target>[`internal.oapiSmartbotMsgPush()`](https://open.dingtalk.com/document/orgapp/the-message-pushing-interface-of-the-assistant)</target>
      </trans-unit>
      <trans-unit id="57740" translate="no">
        <source>[`internal.oapiSmartdeviceDeviceQuery()`](https://open.dingtalk.com/document/isvapp/intelligent-hardware-device-query)</source>
        <target>[`internal.oapiSmartdeviceDeviceQuery()`](https://open.dingtalk.com/document/isvapp/intelligent-hardware-device-query)</target>
      </trans-unit>
      <trans-unit id="57742" translate="no">
        <source>[`internal.oapiSmartdeviceDeviceQuerybyid()`](https://open.dingtalk.com/document/isvapp/the-smart-hardware-can-query-details-based-on-the-device)</source>
        <target>[`internal.oapiSmartdeviceDeviceQuerybyid()`](https://open.dingtalk.com/document/isvapp/the-smart-hardware-can-query-details-based-on-the-device)</target>
      </trans-unit>
      <trans-unit id="57744" translate="no">
        <source>[`internal.oapiSmartdeviceDeviceQuerylist()`](https://open.dingtalk.com/document/isvapp/intelligent-hardware-list-query)</source>
        <target>[`internal.oapiSmartdeviceDeviceQuerylist()`](https://open.dingtalk.com/document/isvapp/intelligent-hardware-list-query)</target>
      </trans-unit>
      <trans-unit id="57746" translate="no">
        <source>[`internal.oapiSmartdeviceDeviceUnbind()`](https://open.dingtalk.com/document/isvapp/unbind-a-smart-hardware-device)</source>
        <target>[`internal.oapiSmartdeviceDeviceUnbind()`](https://open.dingtalk.com/document/isvapp/unbind-a-smart-hardware-device)</target>
      </trans-unit>
      <trans-unit id="57748" translate="no">
        <source>[`internal.oapiSmartdeviceDeviceUpdatenick()`](https://open.dingtalk.com/document/isvapp/intelligent-hardware-device-nickname-modification)</source>
        <target>[`internal.oapiSmartdeviceDeviceUpdatenick()`](https://open.dingtalk.com/document/isvapp/intelligent-hardware-device-nickname-modification)</target>
      </trans-unit>
      <trans-unit id="57750" translate="no">
        <source>[`internal.oapiSmartdeviceExternalBind()`](https://open.dingtalk.com/document/isvapp/establishing-a-binding-relationship-between-intelligent-hardware-and-cloud)</source>
        <target>[`internal.oapiSmartdeviceExternalBind()`](https://open.dingtalk.com/document/isvapp/establishing-a-binding-relationship-between-intelligent-hardware-and-cloud)</target>
      </trans-unit>
      <trans-unit id="57752" translate="no">
        <source>[`internal.oapiSmartworkHrmEmployeeAddpreentry()`](https://open.dingtalk.com/document/isvapp/add-employees-to-be-hired-through-intelligent-personnel)</source>
        <target>[`internal.oapiSmartworkHrmEmployeeAddpreentry()`](https://open.dingtalk.com/document/isvapp/add-employees-to-be-hired-through-intelligent-personnel)</target>
      </trans-unit>
      <trans-unit id="57754" translate="no">
        <source>[`internal.oapiSmartworkHrmEmployeeFieldGrouplist()`](https://open.dingtalk.com/document/isvapp/get-roster-field-group-details)</source>
        <target>[`internal.oapiSmartworkHrmEmployeeFieldGrouplist()`](https://open.dingtalk.com/document/isvapp/get-roster-field-group-details)</target>
      </trans-unit>
      <trans-unit id="57756" translate="no">
        <source>[`internal.oapiSmartworkHrmEmployeeList()`](https://open.dingtalk.com/document/isvapp-server/obtaining-employee-roster-field-information)</source>
        <target>[`internal.oapiSmartworkHrmEmployeeList()`](https://open.dingtalk.com/document/isvapp-server/obtaining-employee-roster-field-information)</target>
      </trans-unit>
      <trans-unit id="57758" translate="no">
        <source>[`internal.oapiSmartworkHrmEmployeeQueryonjob()`](https://open.dingtalk.com/document/isvapp/intelligent-personnel-query-the-list-of-on-the-job-employees-of-the)</source>
        <target>[`internal.oapiSmartworkHrmEmployeeQueryonjob()`](https://open.dingtalk.com/document/isvapp/intelligent-personnel-query-the-list-of-on-the-job-employees-of-the)</target>
      </trans-unit>
      <trans-unit id="57760" translate="no">
        <source>[`internal.oapiSmartworkHrmEmployeeQuerypreentry()`](https://open.dingtalk.com/document/isvapp/intelligent-personnel-query-the-list-of-employees-to-be-hired)</source>
        <target>[`internal.oapiSmartworkHrmEmployeeQuerypreentry()`](https://open.dingtalk.com/document/isvapp/intelligent-personnel-query-the-list-of-employees-to-be-hired)</target>
      </trans-unit>
      <trans-unit id="57762" translate="no">
        <source>[`internal.oapiSmartworkHrmEmployeeUpdate()`](https://open.dingtalk.com/document/isvapp-server/update-employee-roster)</source>
        <target>[`internal.oapiSmartworkHrmEmployeeUpdate()`](https://open.dingtalk.com/document/isvapp-server/update-employee-roster)</target>
      </trans-unit>
      <trans-unit id="57764" translate="no">
        <source>[`internal.oapiSmartworkHrmEmployeeV2List()`](https://open.dingtalk.com/document/orgapp/intelligent-personnel-obtain-employee-roster-information)</source>
        <target>[`internal.oapiSmartworkHrmEmployeeV2List()`](https://open.dingtalk.com/document/orgapp/intelligent-personnel-obtain-employee-roster-information)</target>
      </trans-unit>
      <trans-unit id="57766" translate="no">
        <source>[`internal.oapiSmartworkHrmEmployeeV2Update()`](https://open.dingtalk.com/document/isvapp/intelligent-personnel-update-employee-file-information)</source>
        <target>[`internal.oapiSmartworkHrmEmployeeV2Update()`](https://open.dingtalk.com/document/isvapp/intelligent-personnel-update-employee-file-information)</target>
      </trans-unit>
      <trans-unit id="57768" translate="no">
        <source>[`internal.oapiSmartworkHrmRosterMetaGet()`](https://open.dingtalk.com/document/isvapp/intelligent-personnel-roster-metadata-query)</source>
        <target>[`internal.oapiSmartworkHrmRosterMetaGet()`](https://open.dingtalk.com/document/isvapp/intelligent-personnel-roster-metadata-query)</target>
      </trans-unit>
      <trans-unit id="57770" translate="no">
        <source>[`internal.oapiSnsGetuserinfoBycode()`](https://open.dingtalk.com/document/isvapp-server/obtain-the-user-information-based-on-the-sns-temporary-authorization)</source>
        <target>[`internal.oapiSnsGetuserinfoBycode()`](https://open.dingtalk.com/document/isvapp-server/obtain-the-user-information-based-on-the-sns-temporary-authorization)</target>
      </trans-unit>
      <trans-unit id="57772" translate="no">
        <source>[`internal.oapiSsoGettoken()`](https://open.dingtalk.com/document/isvapp/obtain-the-ssotoken-for-micro-application-background-logon-free)</source>
        <target>[`internal.oapiSsoGettoken()`](https://open.dingtalk.com/document/isvapp/obtain-the-ssotoken-for-micro-application-background-logon-free)</target>
      </trans-unit>
      <trans-unit id="57774" translate="no">
        <source>[`internal.oapiSsoGetuserinfo()`](https://open.dingtalk.com/document/isvapp/exchange-code-for-the-identity-information-of-a-microapplication-administrator)</source>
        <target>[`internal.oapiSsoGetuserinfo()`](https://open.dingtalk.com/document/isvapp/exchange-code-for-the-identity-information-of-a-microapplication-administrator)</target>
      </trans-unit>
      <trans-unit id="57776" translate="no">
        <source>[`internal.oapiV2UserCreate()`](https://open.dingtalk.com/document/orgapp/user-information-creation)</source>
        <target>[`internal.oapiV2UserCreate()`](https://open.dingtalk.com/document/orgapp/user-information-creation)</target>
      </trans-unit>
      <trans-unit id="57778" translate="no">
        <source>[`internal.oapiV2UserGetuserinfo()`](https://open.dingtalk.com/document/isvapp/obtain-the-userid-of-a-user-by-using-the-log-free)</source>
        <target>[`internal.oapiV2UserGetuserinfo()`](https://open.dingtalk.com/document/isvapp/obtain-the-userid-of-a-user-by-using-the-log-free)</target>
      </trans-unit>
      <trans-unit id="57780" translate="no">
        <source>[`internal.oapiV2UserUpdate()`](https://open.dingtalk.com/document/orgapp/update-dedicated-accounts-information)</source>
        <target>[`internal.oapiV2UserUpdate()`](https://open.dingtalk.com/document/orgapp/update-dedicated-accounts-information)</target>
      </trans-unit>
      <trans-unit id="57782" translate="no">
        <source>[`internal.oapiWorkspaceAuditlogList()`](https://open.dingtalk.com/document/orgapp/query-file-operation-logs-of-a-project)</source>
        <target>[`internal.oapiWorkspaceAuditlogList()`](https://open.dingtalk.com/document/orgapp/query-file-operation-logs-of-a-project)</target>
      </trans-unit>
      <trans-unit id="57784" translate="no">
        <source>[`internal.orgGroupQuery()`](https://open.dingtalk.com/document/orgapp/chatbot-queries-the-read-status-of-a-message)</source>
        <target>[`internal.orgGroupQuery()`](https://open.dingtalk.com/document/orgapp/chatbot-queries-the-read-status-of-a-message)</target>
      </trans-unit>
      <trans-unit id="57786" translate="no">
        <source>[`internal.orgGroupRecall()`](https://open.dingtalk.com/document/orgapp/enterprise-chatbot-withdraws-internal-group-messages)</source>
        <target>[`internal.orgGroupRecall()`](https://open.dingtalk.com/document/orgapp/enterprise-chatbot-withdraws-internal-group-messages)</target>
      </trans-unit>
      <trans-unit id="57788" translate="no">
        <source>[`internal.orgGroupSend()`](https://open.dingtalk.com/document/orgapp/the-robot-sends-a-group-message)</source>
        <target>[`internal.orgGroupSend()`](https://open.dingtalk.com/document/orgapp/the-robot-sends-a-group-message)</target>
      </trans-unit>
      <trans-unit id="57790" translate="no">
        <source>[`internal.pageInnerAppHistoryVersion()`](https://open.dingtalk.com/document/orgapp/obtain-the-list-of-historical-versions-of-enterprise-internal-applets)</source>
        <target>[`internal.pageInnerAppHistoryVersion()`](https://open.dingtalk.com/document/orgapp/obtain-the-list-of-historical-versions-of-enterprise-internal-applets)</target>
      </trans-unit>
      <trans-unit id="57792" translate="no">
        <source>[`internal.pageListAction()`](https://open.dingtalk.com/document/isvapp/intelligent-customer-service-query-action-records)</source>
        <target>[`internal.pageListAction()`](https://open.dingtalk.com/document/isvapp/intelligent-customer-service-query-action-records)</target>
      </trans-unit>
      <trans-unit id="57794" translate="no">
        <source>[`internal.pageListTicket()`](https://open.dingtalk.com/document/isvapp/intelligent-customer-service-paging-query-work-order)</source>
        <target>[`internal.pageListTicket()`](https://open.dingtalk.com/document/isvapp/intelligent-customer-service-paging-query-work-order)</target>
      </trans-unit>
      <trans-unit id="57796" translate="no">
        <source>[`internal.pagePointHistory()`](https://open.dingtalk.com/document/isvapp/query-the-integral-flow-records-by-page)</source>
        <target>[`internal.pagePointHistory()`](https://open.dingtalk.com/document/isvapp/query-the-integral-flow-records-by-page)</target>
      </trans-unit>
      <trans-unit id="57798" translate="no">
        <source>[`internal.patchEvent()`](https://open.dingtalk.com/document/personalapp/modify-schedule)</source>
        <target>[`internal.patchEvent()`](https://open.dingtalk.com/document/personalapp/modify-schedule)</target>
      </trans-unit>
      <trans-unit id="57800" translate="no">
        <source>[`internal.pediaWordsAdd()`](https://open.dingtalk.com/document/app/new-entry)</source>
        <target>[`internal.pediaWordsAdd()`](https://open.dingtalk.com/document/app/new-entry)</target>
      </trans-unit>
      <trans-unit id="57802" translate="no">
        <source>[`internal.pediaWordsApprove()`](https://open.dingtalk.com/document/app/entry-review)</source>
        <target>[`internal.pediaWordsApprove()`](https://open.dingtalk.com/document/app/entry-review)</target>
      </trans-unit>
      <trans-unit id="57804" translate="no">
        <source>[`internal.pediaWordsDelete()`](https://open.dingtalk.com/document/app/entry-delete)</source>
        <target>[`internal.pediaWordsDelete()`](https://open.dingtalk.com/document/app/entry-delete)</target>
      </trans-unit>
      <trans-unit id="57806" translate="no">
        <source>[`internal.pediaWordsQuery()`](https://open.dingtalk.com/document/app/entry-query)</source>
        <target>[`internal.pediaWordsQuery()`](https://open.dingtalk.com/document/app/entry-query)</target>
      </trans-unit>
      <trans-unit id="57808" translate="no">
        <source>[`internal.pediaWordsSearch()`](https://open.dingtalk.com/document/app/entry-search)</source>
        <target>[`internal.pediaWordsSearch()`](https://open.dingtalk.com/document/app/entry-search)</target>
      </trans-unit>
      <trans-unit id="57810" translate="no">
        <source>[`internal.pediaWordsUpdate()`](https://open.dingtalk.com/document/app/update-entry)</source>
        <target>[`internal.pediaWordsUpdate()`](https://open.dingtalk.com/document/app/update-entry)</target>
      </trans-unit>
      <trans-unit id="57812" translate="no">
        <source>[`internal.privateChatQuery()`](https://open.dingtalk.com/document/orgapp/query-the-read-list-of-robot-messages-in-person-to-person-conversations)</source>
        <target>[`internal.privateChatQuery()`](https://open.dingtalk.com/document/orgapp/query-the-read-list-of-robot-messages-in-person-to-person-conversations)</target>
      </trans-unit>
      <trans-unit id="57814" translate="no">
        <source>[`internal.privateChatSend()`](https://open.dingtalk.com/document/orgapp/the-robot-sends-ordinary-messages-in-a-person-to-person-conversation)</source>
        <target>[`internal.privateChatSend()`](https://open.dingtalk.com/document/orgapp/the-robot-sends-ordinary-messages-in-a-person-to-person-conversation)</target>
      </trans-unit>
      <trans-unit id="57816" translate="no">
        <source>[`internal.publishFileChangeNotice()`](https://open.dingtalk.com/document/isvapp/send-comments-on-file-changes)</source>
        <target>[`internal.publishFileChangeNotice()`](https://open.dingtalk.com/document/isvapp/send-comments-on-file-changes)</target>
      </trans-unit>
      <trans-unit id="57818" translate="no">
        <source>[`internal.publishInnerAppVersion()`](https://open.dingtalk.com/document/orgapp/release-internal-applet-version)</source>
        <target>[`internal.publishInnerAppVersion()`](https://open.dingtalk.com/document/orgapp/release-internal-applet-version)</target>
      </trans-unit>
      <trans-unit id="57820" translate="no">
        <source>[`internal.pullDataByPage()`](https://open.dingtalk.com/document/connector/bulk-pull-dingtalk-connector-master-data)</source>
        <target>[`internal.pullDataByPage()`](https://open.dingtalk.com/document/connector/bulk-pull-dingtalk-connector-master-data)</target>
      </trans-unit>
      <trans-unit id="57822" translate="no">
        <source>[`internal.pullDataByPk()`](https://open.dingtalk.com/document/connector/pull-a-single-primary-record-based-on-the-business-primary)</source>
        <target>[`internal.pullDataByPk()`](https://open.dingtalk.com/document/connector/pull-a-single-primary-record-based-on-the-business-primary)</target>
      </trans-unit>
      <trans-unit id="57824" translate="no">
        <source>[`internal.queryActiveUserStatisticalData()`](https://open.dingtalk.com/document/orgapp/obtains-statistics-on-user-activation-status)</source>
        <target>[`internal.queryActiveUserStatisticalData()`](https://open.dingtalk.com/document/orgapp/obtains-statistics-on-user-activation-status)</target>
      </trans-unit>
      <trans-unit id="57826" translate="no">
        <source>[`internal.queryActiveUsers()`](https://open.dingtalk.com/document/orgapp/queries-active-service-users)</source>
        <target>[`internal.queryActiveUsers()`](https://open.dingtalk.com/document/orgapp/queries-active-service-users)</target>
      </trans-unit>
      <trans-unit id="57828" translate="no">
        <source>[`internal.queryAllCustomer()`](https://open.dingtalk.com/document/orgapp/crm-obtains-all-private-sea-customer-data)</source>
        <target>[`internal.queryAllCustomer()`](https://open.dingtalk.com/document/orgapp/crm-obtains-all-private-sea-customer-data)</target>
      </trans-unit>
      <trans-unit id="57830" translate="no">
        <source>[`internal.queryAppFunctionNodes()`](https://open.dingtalk.com/document/isvapp/queries-the-application-feature-nodes)</source>
        <target>[`internal.queryAppFunctionNodes()`](https://open.dingtalk.com/document/isvapp/queries-the-application-feature-nodes)</target>
      </trans-unit>
      <trans-unit id="57832" translate="no">
        <source>[`internal.queryApprovalStatisticalData()`](https://open.dingtalk.com/document/orgapp/obtains-enterprise-approval-statistics)</source>
        <target>[`internal.queryApprovalStatisticalData()`](https://open.dingtalk.com/document/orgapp/obtains-enterprise-approval-statistics)</target>
      </trans-unit>
      <trans-unit id="57834" translate="no">
        <source>[`internal.queryAttendanceStatisticalData()`](https://open.dingtalk.com/document/orgapp/queries-enterprise-attendance-statistics)</source>
        <target>[`internal.queryAttendanceStatisticalData()`](https://open.dingtalk.com/document/orgapp/queries-enterprise-attendance-statistics)</target>
      </trans-unit>
      <trans-unit id="57836" translate="no">
        <source>[`internal.queryBlackboardSpace()`](https://open.dingtalk.com/document/app/obtain-bulletin-nail-disk-space-information)</source>
        <target>[`internal.queryBlackboardSpace()`](https://open.dingtalk.com/document/app/obtain-bulletin-nail-disk-space-information)</target>
      </trans-unit>
      <trans-unit id="57838" translate="no">
        <source>[`internal.queryBlackboardStatisticalData()`](https://open.dingtalk.com/document/orgapp/queries-corporate-announcement-statistics)</source>
        <target>[`internal.queryBlackboardStatisticalData()`](https://open.dingtalk.com/document/orgapp/queries-corporate-announcement-statistics)</target>
      </trans-unit>
      <trans-unit id="57840" translate="no">
        <source>[`internal.queryCalendarStatisticalData()`](https://open.dingtalk.com/document/orgapp/queries-enterprise-schedule-statistics)</source>
        <target>[`internal.queryCalendarStatisticalData()`](https://open.dingtalk.com/document/orgapp/queries-enterprise-schedule-statistics)</target>
      </trans-unit>
      <trans-unit id="57842" translate="no">
        <source>[`internal.queryCheckinStatisticalData()`](https://open.dingtalk.com/document/orgapp/queries-enterprise-check-in-statistics)</source>
        <target>[`internal.queryCheckinStatisticalData()`](https://open.dingtalk.com/document/orgapp/queries-enterprise-check-in-statistics)</target>
      </trans-unit>
      <trans-unit id="57844" translate="no">
        <source>[`internal.queryCircleStatisticalData()`](https://open.dingtalk.com/document/orgapp/obtains-the-statistical-data-of-all-employees-of-an-enterprise)</source>
        <target>[`internal.queryCircleStatisticalData()`](https://open.dingtalk.com/document/orgapp/obtains-the-statistical-data-of-all-employees-of-an-enterprise)</target>
      </trans-unit>
      <trans-unit id="57846" translate="no">
        <source>[`internal.queryCityCarApply()`](https://open.dingtalk.com/document/isvapp/query-the-application-form-for-third-party-vehicles-in-the-city)</source>
        <target>[`internal.queryCityCarApply()`](https://open.dingtalk.com/document/isvapp/query-the-application-form-for-third-party-vehicles-in-the-city)</target>
      </trans-unit>
      <trans-unit id="57848" translate="no">
        <source>[`internal.queryCloudRecordText()`](https://open.dingtalk.com/document/isvapp/queries-the-text-information-about-cloud-recording)</source>
        <target>[`internal.queryCloudRecordText()`](https://open.dingtalk.com/document/isvapp/queries-the-text-information-about-cloud-recording)</target>
      </trans-unit>
      <trans-unit id="57850" translate="no">
        <source>[`internal.queryCloudRecordVideo()`](https://open.dingtalk.com/document/isvapp/query-recording-information)</source>
        <target>[`internal.queryCloudRecordVideo()`](https://open.dingtalk.com/document/isvapp/query-recording-information)</target>
      </trans-unit>
      <trans-unit id="57852" translate="no">
        <source>[`internal.queryCloudRecordVideoPlayInfo()`](https://open.dingtalk.com/document/isvapp/queries-the-playback-information-about-a-recorded-cloud-video)</source>
        <target>[`internal.queryCloudRecordVideoPlayInfo()`](https://open.dingtalk.com/document/isvapp/queries-the-playback-information-about-a-recorded-cloud-video)</target>
      </trans-unit>
      <trans-unit id="57854" translate="no">
        <source>[`internal.queryConferenceInfo()`](https://open.dingtalk.com/document/app/querying-video-conference-information)</source>
        <target>[`internal.queryConferenceInfo()`](https://open.dingtalk.com/document/app/querying-video-conference-information)</target>
      </trans-unit>
      <trans-unit id="57856" translate="no">
        <source>[`internal.queryConferenceInfoBatch()`](https://open.dingtalk.com/document/isvapp/batch-query-of-video-conference-information)</source>
        <target>[`internal.queryConferenceInfoBatch()`](https://open.dingtalk.com/document/isvapp/batch-query-of-video-conference-information)</target>
      </trans-unit>
      <trans-unit id="57858" translate="no">
        <source>[`internal.queryConferenceMembers()`](https://open.dingtalk.com/document/app/query-video-meeting-member-information)</source>
        <target>[`internal.queryConferenceMembers()`](https://open.dingtalk.com/document/app/query-video-meeting-member-information)</target>
      </trans-unit>
      <trans-unit id="57860" translate="no">
        <source>[`internal.queryCrmGroupChats()`](https://open.dingtalk.com/document/isvapp/query-a-list-of-customer-groups)</source>
        <target>[`internal.queryCrmGroupChats()`](https://open.dingtalk.com/document/isvapp/query-a-list-of-customer-groups)</target>
      </trans-unit>
      <trans-unit id="57862" translate="no">
        <source>[`internal.queryCrmPersonalCustomer()`](https://open.dingtalk.com/document/isvapp/obtains-crm-individual-customers-in-batches-based-on-specified-query)</source>
        <target>[`internal.queryCrmPersonalCustomer()`](https://open.dingtalk.com/document/isvapp/obtains-crm-individual-customers-in-batches-based-on-specified-query)</target>
      </trans-unit>
      <trans-unit id="57864" translate="no">
        <source>[`internal.queryDeviceProperties()`](https://open.dingtalk.com/document/app/querying-video-conference-device-attribute-information)</source>
        <target>[`internal.queryDeviceProperties()`](https://open.dingtalk.com/document/app/querying-video-conference-device-attribute-information)</target>
      </trans-unit>
      <trans-unit id="57866" translate="no">
        <source>[`internal.queryDigitalDistrictOrgInfo()`](https://open.dingtalk.com/document/orgapp/querydigitaldistrictorginfo-api-reference)</source>
        <target>[`internal.queryDigitalDistrictOrgInfo()`](https://open.dingtalk.com/document/orgapp/querydigitaldistrictorginfo-api-reference)</target>
      </trans-unit>
      <trans-unit id="57868" translate="no">
        <source>[`internal.queryDingReciveStatisticalData()`](https://open.dingtalk.com/document/orgapp/obtain-statistics-on-receiving-and-comments-of-enterprise-ding)</source>
        <target>[`internal.queryDingReciveStatisticalData()`](https://open.dingtalk.com/document/orgapp/obtain-statistics-on-receiving-and-comments-of-enterprise-ding)</target>
      </trans-unit>
      <trans-unit id="57870" translate="no">
        <source>[`internal.queryDingSendStatisticalData()`](https://open.dingtalk.com/document/orgapp/obtain-sending-statistics-of-an-enterprise-ding)</source>
        <target>[`internal.queryDingSendStatisticalData()`](https://open.dingtalk.com/document/orgapp/obtain-sending-statistics-of-an-enterprise-ding)</target>
      </trans-unit>
      <trans-unit id="57872" translate="no">
        <source>[`internal.queryDismissionStaffIdList()`](https://open.dingtalk.com/document/isvapp/obtain-the-list-of-employees-who-have-left)</source>
        <target>[`internal.queryDismissionStaffIdList()`](https://open.dingtalk.com/document/isvapp/obtain-the-list-of-employees-who-have-left)</target>
      </trans-unit>
      <trans-unit id="57874" translate="no">
        <source>[`internal.queryDocumentStatisticalData()`](https://open.dingtalk.com/document/orgapp/get-enterprise-document-statistics)</source>
        <target>[`internal.queryDocumentStatisticalData()`](https://open.dingtalk.com/document/orgapp/get-enterprise-document-statistics)</target>
      </trans-unit>
      <trans-unit id="57876" translate="no">
        <source>[`internal.queryDriveStatisticalData()`](https://open.dingtalk.com/document/orgapp/obtains-the-statistics-on-enterprise-dingtalk-trays)</source>
        <target>[`internal.queryDriveStatisticalData()`](https://open.dingtalk.com/document/orgapp/obtains-the-statistics-on-enterprise-dingtalk-trays)</target>
      </trans-unit>
      <trans-unit id="57878" translate="no">
        <source>[`internal.queryEmployeeTypeStatisticalData()`](https://open.dingtalk.com/document/orgapp/obtains-statistics-on-employee-types)</source>
        <target>[`internal.queryEmployeeTypeStatisticalData()`](https://open.dingtalk.com/document/orgapp/obtains-statistics-on-employee-types)</target>
      </trans-unit>
      <trans-unit id="57880" translate="no">
        <source>[`internal.queryGeneralDataService()`](https://open.dingtalk.com/document/orgapp-server/data-assets-platform-data-services-apis)</source>
        <target>[`internal.queryGeneralDataService()`](https://open.dingtalk.com/document/orgapp-server/data-assets-platform-data-services-apis)</target>
      </trans-unit>
      <trans-unit id="57882" translate="no">
        <source>[`internal.queryGlobalInfo()`](https://open.dingtalk.com/document/isvapp/get-customer-management-global-information)</source>
        <target>[`internal.queryGlobalInfo()`](https://open.dingtalk.com/document/isvapp/get-customer-management-global-information)</target>
      </trans-unit>
      <trans-unit id="57884" translate="no">
        <source>[`internal.queryGroupLiveStatisticalData()`](https://open.dingtalk.com/document/orgapp/obtains-the-live-stream-statistics-for-an-enterprise-group)</source>
        <target>[`internal.queryGroupLiveStatisticalData()`](https://open.dingtalk.com/document/orgapp/obtains-the-live-stream-statistics-for-an-enterprise-group)</target>
      </trans-unit>
      <trans-unit id="57886" translate="no">
        <source>[`internal.queryGroupMember()`](https://open.dingtalk.com/document/isvapp/query-the-group-member-list)</source>
        <target>[`internal.queryGroupMember()`](https://open.dingtalk.com/document/isvapp/query-the-group-member-list)</target>
      </trans-unit>
      <trans-unit id="57888" translate="no">
        <source>[`internal.queryGroupMessageStatisticalData()`](https://open.dingtalk.com/document/orgapp/obtain-enterprise-group-chat-statistics)</source>
        <target>[`internal.queryGroupMessageStatisticalData()`](https://open.dingtalk.com/document/orgapp/obtain-enterprise-group-chat-statistics)</target>
      </trans-unit>
      <trans-unit id="57890" translate="no">
        <source>[`internal.queryGroupMuteStatus()`](https://open.dingtalk.com/document/orgapp/query-group-silence-status)</source>
        <target>[`internal.queryGroupMuteStatus()`](https://open.dingtalk.com/document/orgapp/query-group-silence-status)</target>
      </trans-unit>
      <trans-unit id="57892" translate="no">
        <source>[`internal.queryHealthStatisticalData()`](https://open.dingtalk.com/document/orgapp/queries-dingtalk-movement-statistics)</source>
        <target>[`internal.queryHealthStatisticalData()`](https://open.dingtalk.com/document/orgapp/queries-dingtalk-movement-statistics)</target>
      </trans-unit>
      <trans-unit id="57894" translate="no">
        <source>[`internal.queryHrmEmployeeDismissionInfo()`](https://open.dingtalk.com/document/isvapp/obtain-multiple-employee-demission-information-1)</source>
        <target>[`internal.queryHrmEmployeeDismissionInfo()`](https://open.dingtalk.com/document/isvapp/obtain-multiple-employee-demission-information-1)</target>
      </trans-unit>
      <trans-unit id="57896" translate="no">
        <source>[`internal.queryJobRanks()`](https://open.dingtalk.com/document/isvapp/obtain-a-list-of-enterprise-ranks)</source>
        <target>[`internal.queryJobRanks()`](https://open.dingtalk.com/document/isvapp/obtain-a-list-of-enterprise-ranks)</target>
      </trans-unit>
      <trans-unit id="57898" translate="no">
        <source>[`internal.queryJobs()`](https://open.dingtalk.com/document/isvapp/obtains-a-list-of-enterprise-jobs)</source>
        <target>[`internal.queryJobs()`](https://open.dingtalk.com/document/isvapp/obtains-a-list-of-enterprise-jobs)</target>
      </trans-unit>
      <trans-unit id="57900" translate="no">
        <source>[`internal.queryLiveInfo()`](https://open.dingtalk.com/document/isvapp/queries-the-live-streaming-information)</source>
        <target>[`internal.queryLiveInfo()`](https://open.dingtalk.com/document/isvapp/queries-the-live-streaming-information)</target>
      </trans-unit>
      <trans-unit id="57902" translate="no">
        <source>[`internal.queryLiveWatchDetail()`](https://open.dingtalk.com/document/orgapp/queries-the-playback-data-of-a-live-stream)</source>
        <target>[`internal.queryLiveWatchDetail()`](https://open.dingtalk.com/document/orgapp/queries-the-playback-data-of-a-live-stream)</target>
      </trans-unit>
      <trans-unit id="57904" translate="no">
        <source>[`internal.queryLiveWatchUserList()`](https://open.dingtalk.com/document/isvapp/queries-the-viewing-information-of-viewers)</source>
        <target>[`internal.queryLiveWatchUserList()`](https://open.dingtalk.com/document/isvapp/queries-the-viewing-information-of-viewers)</target>
      </trans-unit>
      <trans-unit id="57906" translate="no">
        <source>[`internal.queryMailStatisticalData()`](https://open.dingtalk.com/document/orgapp/queries-enterprise-email-statistics)</source>
        <target>[`internal.queryMailStatisticalData()`](https://open.dingtalk.com/document/orgapp/queries-enterprise-email-statistics)</target>
      </trans-unit>
      <trans-unit id="57908" translate="no">
        <source>[`internal.queryMeetingRoom()`](https://open.dingtalk.com/document/isvapp/check-meeting-room-details)</source>
        <target>[`internal.queryMeetingRoom()`](https://open.dingtalk.com/document/isvapp/check-meeting-room-details)</target>
      </trans-unit>
      <trans-unit id="57910" translate="no">
        <source>[`internal.queryMeetingRoomDevice()`](https://open.dingtalk.com/document/app/querying-video-conference-device-information)</source>
        <target>[`internal.queryMeetingRoomDevice()`](https://open.dingtalk.com/document/app/querying-video-conference-device-information)</target>
      </trans-unit>
      <trans-unit id="57912" translate="no">
        <source>[`internal.queryMeetingRoomGroup()`](https://open.dingtalk.com/document/isvapp/query-meeting-room-group-information)</source>
        <target>[`internal.queryMeetingRoomGroup()`](https://open.dingtalk.com/document/isvapp/query-meeting-room-group-information)</target>
      </trans-unit>
      <trans-unit id="57914" translate="no">
        <source>[`internal.queryMeetingRoomGroupList()`](https://open.dingtalk.com/document/isvapp/query-meeting-room-groups)</source>
        <target>[`internal.queryMeetingRoomGroupList()`](https://open.dingtalk.com/document/isvapp/query-meeting-room-groups)</target>
      </trans-unit>
      <trans-unit id="57916" translate="no">
        <source>[`internal.queryMeetingRoomList()`](https://open.dingtalk.com/document/isvapp/check-the-meeting-room-list)</source>
        <target>[`internal.queryMeetingRoomList()`](https://open.dingtalk.com/document/isvapp/check-the-meeting-room-list)</target>
      </trans-unit>
      <trans-unit id="57918" translate="no">
        <source>[`internal.queryOnlineUserStatisticalData()`](https://open.dingtalk.com/document/orgapp/retrieve-online-statistics-of-enterprise-users)</source>
        <target>[`internal.queryOnlineUserStatisticalData()`](https://open.dingtalk.com/document/orgapp/retrieve-online-statistics-of-enterprise-users)</target>
      </trans-unit>
      <trans-unit id="57920" translate="no">
        <source>[`internal.queryOrgTodoTasks()`](https://open.dingtalk.com/document/isvapp/query-the-to-do-list-of-enterprise-users)</source>
        <target>[`internal.queryOrgTodoTasks()`](https://open.dingtalk.com/document/isvapp/query-the-to-do-list-of-enterprise-users)</target>
      </trans-unit>
      <trans-unit id="57922" translate="no">
        <source>[`internal.queryPartnerInfo()`](https://open.dingtalk.com/document/isvapp/you-can-call-this-operation-to-retrieve-the-user-tag)</source>
        <target>[`internal.queryPartnerInfo()`](https://open.dingtalk.com/document/isvapp/you-can-call-this-operation-to-retrieve-the-user-tag)</target>
      </trans-unit>
      <trans-unit id="57924" translate="no">
        <source>[`internal.queryPositions()`](https://open.dingtalk.com/document/isvapp/obtain-a-list-of-enterprise-positions)</source>
        <target>[`internal.queryPositions()`](https://open.dingtalk.com/document/isvapp/obtain-a-list-of-enterprise-positions)</target>
      </trans-unit>
      <trans-unit id="57926" translate="no">
        <source>[`internal.queryProcessesInstance()`](https://open.dingtalk.com/document/isvapp/query-flow-instances)</source>
        <target>[`internal.queryProcessesInstance()`](https://open.dingtalk.com/document/isvapp/query-flow-instances)</target>
      </trans-unit>
      <trans-unit id="57928" translate="no">
        <source>[`internal.queryProcessesWorkItems()`](https://open.dingtalk.com/document/isvapp/query-flow-instance-node-work-items)</source>
        <target>[`internal.queryProcessesWorkItems()`](https://open.dingtalk.com/document/isvapp/query-flow-instance-node-work-items)</target>
      </trans-unit>
      <trans-unit id="57930" translate="no">
        <source>[`internal.queryProject()`](https://open.dingtalk.com/document/orgapp/query-enterprise-all-projects)</source>
        <target>[`internal.queryProject()`](https://open.dingtalk.com/document/orgapp/query-enterprise-all-projects)</target>
      </trans-unit>
      <trans-unit id="57932" translate="no">
        <source>[`internal.queryRedEnvelopeReciveStatisticalData()`](https://open.dingtalk.com/document/orgapp/queries-the-red-envelope-receiving-statistics-of-an-enterprise)</source>
        <target>[`internal.queryRedEnvelopeReciveStatisticalData()`](https://open.dingtalk.com/document/orgapp/queries-the-red-envelope-receiving-statistics-of-an-enterprise)</target>
      </trans-unit>
      <trans-unit id="57934" translate="no">
        <source>[`internal.queryRedEnvelopeSendStatisticalData()`](https://open.dingtalk.com/document/orgapp/obtains-the-statistics-on-red-packets-issued-by-enterprises)</source>
        <target>[`internal.queryRedEnvelopeSendStatisticalData()`](https://open.dingtalk.com/document/orgapp/obtains-the-statistics-on-red-packets-issued-by-enterprises)</target>
      </trans-unit>
      <trans-unit id="57936" translate="no">
        <source>[`internal.queryRelationDatasByTargetId()`](https://open.dingtalk.com/document/isvapp/querying-customer-data)</source>
        <target>[`internal.queryRelationDatasByTargetId()`](https://open.dingtalk.com/document/isvapp/querying-customer-data)</target>
      </trans-unit>
      <trans-unit id="57938" translate="no">
        <source>[`internal.queryReportStatisticalData()`](https://open.dingtalk.com/document/orgapp/obtain-enterprise-log-statistics)</source>
        <target>[`internal.queryReportStatisticalData()`](https://open.dingtalk.com/document/orgapp/obtain-enterprise-log-statistics)</target>
      </trans-unit>
      <trans-unit id="57940" translate="no">
        <source>[`internal.queryRobotPlugin()`](https://open.dingtalk.com/document/orgapp/quick-entrance-of-inquiry-single-chat-robot)</source>
        <target>[`internal.queryRobotPlugin()`](https://open.dingtalk.com/document/orgapp/quick-entrance-of-inquiry-single-chat-robot)</target>
      </trans-unit>
      <trans-unit id="57942" translate="no">
        <source>[`internal.querySceneGroupTemplateRobot()`](https://open.dingtalk.com/document/isvapp/query-intra-group-template-robot)</source>
        <target>[`internal.querySceneGroupTemplateRobot()`](https://open.dingtalk.com/document/isvapp/query-intra-group-template-robot)</target>
      </trans-unit>
      <trans-unit id="57944" translate="no">
        <source>[`internal.queryScheduleConference()`](https://open.dingtalk.com/document/app/query-meeting-reservation)</source>
        <target>[`internal.queryScheduleConference()`](https://open.dingtalk.com/document/app/query-meeting-reservation)</target>
      </trans-unit>
      <trans-unit id="57946" translate="no">
        <source>[`internal.queryScheduleConferenceInfo()`](https://open.dingtalk.com/document/orgapp/query-appointment-meeting-history-meeting-information)</source>
        <target>[`internal.queryScheduleConferenceInfo()`](https://open.dingtalk.com/document/orgapp/query-appointment-meeting-history-meeting-information)</target>
      </trans-unit>
      <trans-unit id="57948" translate="no">
        <source>[`internal.queryServiceRecord()`](https://open.dingtalk.com/document/isvapp/execution-records-of-form-service-calls)</source>
        <target>[`internal.queryServiceRecord()`](https://open.dingtalk.com/document/isvapp/execution-records-of-form-service-calls)</target>
      </trans-unit>
      <trans-unit id="57950" translate="no">
        <source>[`internal.querySingleGroup()`](https://open.dingtalk.com/document/isvapp/batch-query-cross-nail-two-group-list)</source>
        <target>[`internal.querySingleGroup()`](https://open.dingtalk.com/document/isvapp/batch-query-cross-nail-two-group-list)</target>
      </trans-unit>
      <trans-unit id="57952" translate="no">
        <source>[`internal.querySingleMessageStatisticalData()`](https://open.dingtalk.com/document/orgapp/queries-the-statistics-on-one-time-enterprise-chats)</source>
        <target>[`internal.querySingleMessageStatisticalData()`](https://open.dingtalk.com/document/orgapp/queries-the-statistics-on-one-time-enterprise-chats)</target>
      </trans-unit>
      <trans-unit id="57954" translate="no">
        <source>[`internal.queryTaskOfProject()`](https://open.dingtalk.com/document/isvapp/query-tasks-in-a-project)</source>
        <target>[`internal.queryTaskOfProject()`](https://open.dingtalk.com/document/isvapp/query-tasks-in-a-project)</target>
      </trans-unit>
      <trans-unit id="57956" translate="no">
        <source>[`internal.queryTelMeetingStatisticalData()`](https://open.dingtalk.com/document/orgapp/get-enterprise-teleconference-statistics)</source>
        <target>[`internal.queryTelMeetingStatisticalData()`](https://open.dingtalk.com/document/orgapp/get-enterprise-teleconference-statistics)</target>
      </trans-unit>
      <trans-unit id="57958" translate="no">
        <source>[`internal.queryTodoStatisticalData()`](https://open.dingtalk.com/document/orgapp/obtains-the-to-do-statistics-of-an-enterprise)</source>
        <target>[`internal.queryTodoStatisticalData()`](https://open.dingtalk.com/document/orgapp/obtains-the-to-do-statistics-of-an-enterprise)</target>
      </trans-unit>
      <trans-unit id="57960" translate="no">
        <source>[`internal.queryUnReadMessage()`](https://open.dingtalk.com/document/isvapp/query-the-number-of-unread-messages-for-users-outside-of)</source>
        <target>[`internal.queryUnReadMessage()`](https://open.dingtalk.com/document/isvapp/query-the-number-of-unread-messages-for-users-outside-of)</target>
      </trans-unit>
      <trans-unit id="57962" translate="no">
        <source>[`internal.queryUnionOrder()`](https://open.dingtalk.com/document/isvapp/link-no-to-query-the-list-of-related-order-information)</source>
        <target>[`internal.queryUnionOrder()`](https://open.dingtalk.com/document/isvapp/link-no-to-query-the-list-of-related-order-information)</target>
      </trans-unit>
      <trans-unit id="57964" translate="no">
        <source>[`internal.queryUserBehavior()`](https://open.dingtalk.com/document/app/obtain-anti-screen-capture-operation-records)</source>
        <target>[`internal.queryUserBehavior()`](https://open.dingtalk.com/document/app/obtain-anti-screen-capture-operation-records)</target>
      </trans-unit>
      <trans-unit id="57966" translate="no">
        <source>[`internal.queryVedioMeetingStatisticalData()`](https://open.dingtalk.com/document/orgapp/get-enterprise-video-conference-statistics)</source>
        <target>[`internal.queryVedioMeetingStatisticalData()`](https://open.dingtalk.com/document/orgapp/get-enterprise-video-conference-statistics)</target>
      </trans-unit>
      <trans-unit id="57968" translate="no">
        <source>[`internal.redirectTask()`](https://open.dingtalk.com/document/app/transfer-tasks)</source>
        <target>[`internal.redirectTask()`](https://open.dingtalk.com/document/app/transfer-tasks)</target>
      </trans-unit>
      <trans-unit id="57970" translate="no">
        <source>[`internal.refundCommodity()`](https://open.dingtalk.com/document/isvapp-server/refund-of-goods)</source>
        <target>[`internal.refundCommodity()`](https://open.dingtalk.com/document/isvapp-server/refund-of-goods)</target>
      </trans-unit>
      <trans-unit id="57972" translate="no">
        <source>[`internal.registerAndActivateDevice()`](https://open.dingtalk.com/document/isvapp/register-the-device-to-the-dingtalk)</source>
        <target>[`internal.registerAndActivateDevice()`](https://open.dingtalk.com/document/isvapp/register-the-device-to-the-dingtalk)</target>
      </trans-unit>
      <trans-unit id="57974" translate="no">
        <source>[`internal.registerAndActivateDeviceBatch()`](https://open.dingtalk.com/document/isvapp/register-and-activate-devices-in-batches)</source>
        <target>[`internal.registerAndActivateDeviceBatch()`](https://open.dingtalk.com/document/isvapp/register-and-activate-devices-in-batches)</target>
      </trans-unit>
      <trans-unit id="57976" translate="no">
        <source>[`internal.registerCallback()`](https://open.dingtalk.com/document/orgapp/register-card-callback-address)</source>
        <target>[`internal.registerCallback()`](https://open.dingtalk.com/document/orgapp/register-card-callback-address)</target>
      </trans-unit>
      <trans-unit id="57978" translate="no">
        <source>[`internal.releaseCommodity()`](https://open.dingtalk.com/document/isvapp-server/release-products)</source>
        <target>[`internal.releaseCommodity()`](https://open.dingtalk.com/document/isvapp-server/release-products)</target>
      </trans-unit>
      <trans-unit id="57980" translate="no">
        <source>[`internal.removeAttendee()`](https://open.dingtalk.com/document/isvapp/delete-schedule-participant)</source>
        <target>[`internal.removeAttendee()`](https://open.dingtalk.com/document/isvapp/delete-schedule-participant)</target>
      </trans-unit>
      <trans-unit id="57982" translate="no">
        <source>[`internal.removeGroupMember()`](https://open.dingtalk.com/document/isvapp/remove-a-connected-group-member)</source>
        <target>[`internal.removeGroupMember()`](https://open.dingtalk.com/document/isvapp/remove-a-connected-group-member)</target>
      </trans-unit>
      <trans-unit id="57984" translate="no">
        <source>[`internal.removeMeetingRooms()`](https://open.dingtalk.com/document/isvapp/cancel-a-meeting-room-reservation)</source>
        <target>[`internal.removeMeetingRooms()`](https://open.dingtalk.com/document/isvapp/cancel-a-meeting-room-reservation)</target>
      </trans-unit>
      <trans-unit id="57986" translate="no">
        <source>[`internal.renameDentry()`](https://open.dingtalk.com/document/isvapp/rename-a-file-or-folder)</source>
        <target>[`internal.renameDentry()`](https://open.dingtalk.com/document/isvapp/rename-a-file-or-folder)</target>
      </trans-unit>
      <trans-unit id="57988" translate="no">
        <source>[`internal.respondEvent()`](https://open.dingtalk.com/document/isvapp/participants-respond-to-schedule-invitations)</source>
        <target>[`internal.respondEvent()`](https://open.dingtalk.com/document/isvapp/participants-respond-to-schedule-invitations)</target>
      </trans-unit>
      <trans-unit id="57990" translate="no">
        <source>[`internal.restoreRecycleItem()`](https://open.dingtalk.com/document/isvapp/restore-recycle-items)</source>
        <target>[`internal.restoreRecycleItem()`](https://open.dingtalk.com/document/isvapp/restore-recycle-items)</target>
      </trans-unit>
      <trans-unit id="57992" translate="no">
        <source>[`internal.restoreRecycleItems()`](https://open.dingtalk.com/document/isvapp/batch-restore-recycled-items)</source>
        <target>[`internal.restoreRecycleItems()`](https://open.dingtalk.com/document/isvapp/batch-restore-recycled-items)</target>
      </trans-unit>
      <trans-unit id="57994" translate="no">
        <source>[`internal.revertDentryVersion()`](https://open.dingtalk.com/document/isvapp/restore-previous-versions-of-files)</source>
        <target>[`internal.revertDentryVersion()`](https://open.dingtalk.com/document/isvapp/restore-previous-versions-of-files)</target>
      </trans-unit>
      <trans-unit id="57996" translate="no">
        <source>[`internal.robotMessageFileDownload()`](https://open.dingtalk.com/document/isvapp/download-the-file-content-of-the-robot-receiving-message)</source>
        <target>[`internal.robotMessageFileDownload()`](https://open.dingtalk.com/document/isvapp/download-the-file-content-of-the-robot-receiving-message)</target>
      </trans-unit>
      <trans-unit id="57998" translate="no">
        <source>[`internal.rollbackInnerAppVersion()`](https://open.dingtalk.com/document/app/rollback-of-enterprise-internal-applet-version)</source>
        <target>[`internal.rollbackInnerAppVersion()`](https://open.dingtalk.com/document/app/rollback-of-enterprise-internal-applet-version)</target>
      </trans-unit>
      <trans-unit id="58000" translate="no">
        <source>[`internal.rosterMetaFieldOptionsUpdate()`](https://open.dingtalk.com/document/orgapp/intelligent-personnel-roster-field-option-modification)</source>
        <target>[`internal.rosterMetaFieldOptionsUpdate()`](https://open.dingtalk.com/document/orgapp/intelligent-personnel-roster-field-option-modification)</target>
      </trans-unit>
      <trans-unit id="58002" translate="no">
        <source>[`internal.saveBadgeCodeCorpInstance()`](https://open.dingtalk.com/document/isvapp/save-dingtalk-enterprise-instance)</source>
        <target>[`internal.saveBadgeCodeCorpInstance()`](https://open.dingtalk.com/document/isvapp/save-dingtalk-enterprise-instance)</target>
      </trans-unit>
      <trans-unit id="58004" translate="no">
        <source>[`internal.saveFormData()`](https://open.dingtalk.com/document/app/save-form-data)</source>
        <target>[`internal.saveFormData()`](https://open.dingtalk.com/document/app/save-form-data)</target>
      </trans-unit>
      <trans-unit id="58006" translate="no">
        <source>[`internal.saveFormRemark()`](https://open.dingtalk.com/document/app/submit-comment)</source>
        <target>[`internal.saveFormRemark()`](https://open.dingtalk.com/document/app/submit-comment)</target>
      </trans-unit>
      <trans-unit id="58008" translate="no">
        <source>[`internal.seachTaskStage()`](https://open.dingtalk.com/document/orgapp/get-task-list)</source>
        <target>[`internal.seachTaskStage()`](https://open.dingtalk.com/document/orgapp/get-task-list)</target>
      </trans-unit>
      <trans-unit id="58010" translate="no">
        <source>[`internal.searchActivationCode()`](https://open.dingtalk.com/document/isvapp-server/query-activation-code)</source>
        <target>[`internal.searchActivationCode()`](https://open.dingtalk.com/document/isvapp-server/query-activation-code)</target>
      </trans-unit>
      <trans-unit id="58012" translate="no">
        <source>[`internal.searchDentries()`](https://open.dingtalk.com/document/orgapp/search-for-files)</source>
        <target>[`internal.searchDentries()`](https://open.dingtalk.com/document/orgapp/search-for-files)</target>
      </trans-unit>
      <trans-unit id="58014" translate="no">
        <source>[`internal.searchEmployeeFieldValues()`](https://open.dingtalk.com/document/app/gets-the-value-of-the-employee-component)</source>
        <target>[`internal.searchEmployeeFieldValues()`](https://open.dingtalk.com/document/app/gets-the-value-of-the-employee-component)</target>
      </trans-unit>
      <trans-unit id="58016" translate="no">
        <source>[`internal.searchFormDataIdList()`](https://open.dingtalk.com/document/app/obtain-the-ids-of-multiple-form-instances)</source>
        <target>[`internal.searchFormDataIdList()`](https://open.dingtalk.com/document/app/obtain-the-ids-of-multiple-form-instances)</target>
      </trans-unit>
      <trans-unit id="58018" translate="no">
        <source>[`internal.searchFormDataSecondGeneration()`](https://open.dingtalk.com/document/isvapp/query-form-instances-using-advanced-search-conditions)</source>
        <target>[`internal.searchFormDataSecondGeneration()`](https://open.dingtalk.com/document/isvapp/query-form-instances-using-advanced-search-conditions)</target>
      </trans-unit>
      <trans-unit id="58020" translate="no">
        <source>[`internal.searchFormDataSecondGenerationNoTableField()`](https://open.dingtalk.com/document/isvapp/obtain-form-instance-data-using-advanced-query-conditions-excluding-subform)</source>
        <target>[`internal.searchFormDataSecondGenerationNoTableField()`](https://open.dingtalk.com/document/isvapp/obtain-form-instance-data-using-advanced-query-conditions-excluding-subform)</target>
      </trans-unit>
      <trans-unit id="58022" translate="no">
        <source>[`internal.searchFormDatas()`](https://open.dingtalk.com/document/app/querying-form-instance-data)</source>
        <target>[`internal.searchFormDatas()`](https://open.dingtalk.com/document/app/querying-form-instance-data)</target>
      </trans-unit>
      <trans-unit id="58024" translate="no">
        <source>[`internal.searchProjectTemplate()`](https://open.dingtalk.com/document/isvapp/search-for-enterprise-custom-templates-by-project-template-name)</source>
        <target>[`internal.searchProjectTemplate()`](https://open.dingtalk.com/document/isvapp/search-for-enterprise-custom-templates-by-project-template-name)</target>
      </trans-unit>
      <trans-unit id="58026" translate="no">
        <source>[`internal.searchTaskFlow()`](https://open.dingtalk.com/document/orgapp/query-task-workflow)</source>
        <target>[`internal.searchTaskFlow()`](https://open.dingtalk.com/document/orgapp/query-task-workflow)</target>
      </trans-unit>
      <trans-unit id="58028" translate="no">
        <source>[`internal.searchTaskList()`](https://open.dingtalk.com/document/orgapp/query-task-grouping)</source>
        <target>[`internal.searchTaskList()`](https://open.dingtalk.com/document/orgapp/query-task-grouping)</target>
      </trans-unit>
      <trans-unit id="58030" translate="no">
        <source>[`internal.searchTaskflowStatus()`](https://open.dingtalk.com/document/isvapp/search-task-workflow-status)</source>
        <target>[`internal.searchTaskflowStatus()`](https://open.dingtalk.com/document/isvapp/search-task-workflow-status)</target>
      </trans-unit>
      <trans-unit id="58032" translate="no">
        <source>[`internal.searchUserTask()`](https://open.dingtalk.com/document/orgapp/querying-user-tasks)</source>
        <target>[`internal.searchUserTask()`](https://open.dingtalk.com/document/orgapp/querying-user-tasks)</target>
      </trans-unit>
      <trans-unit id="58034" translate="no">
        <source>[`internal.searchWorkspaces()`](https://open.dingtalk.com/document/orgapp/search-knowledge-base)</source>
        <target>[`internal.searchWorkspaces()`](https://open.dingtalk.com/document/orgapp/search-knowledge-base)</target>
      </trans-unit>
      <trans-unit id="58036" translate="no">
        <source>[`internal.send()`](https://open.dingtalk.com/document/orgapp/send-file-to-specified-session)</source>
        <target>[`internal.send()`](https://open.dingtalk.com/document/orgapp/send-file-to-specified-session)</target>
      </trans-unit>
      <trans-unit id="58038" translate="no">
        <source>[`internal.sendAppDing()`](https://open.dingtalk.com/document/orgapp/send-in-application-ding)</source>
        <target>[`internal.sendAppDing()`](https://open.dingtalk.com/document/orgapp/send-in-application-ding)</target>
      </trans-unit>
      <trans-unit id="58040" translate="no">
        <source>[`internal.sendByApp()`](https://open.dingtalk.com/document/isvapp/sends-a-storage-file-to-a-specified-user)</source>
        <target>[`internal.sendByApp()`](https://open.dingtalk.com/document/isvapp/sends-a-storage-file-to-a-specified-user)</target>
      </trans-unit>
      <trans-unit id="58042" translate="no">
        <source>[`internal.sendDingMessage()`](https://open.dingtalk.com/document/isvapp/dingtalk-users-send-messages-to-the-group-or-dingtalk-users)</source>
        <target>[`internal.sendDingMessage()`](https://open.dingtalk.com/document/isvapp/dingtalk-users-send-messages-to-the-group-or-dingtalk-users)</target>
      </trans-unit>
      <trans-unit id="58044" translate="no">
        <source>[`internal.sendInteractiveCard()`](https://open.dingtalk.com/document/orgapp/send-interactive-dynamic-cards-1)</source>
        <target>[`internal.sendInteractiveCard()`](https://open.dingtalk.com/document/orgapp/send-interactive-dynamic-cards-1)</target>
      </trans-unit>
      <trans-unit id="58046" translate="no">
        <source>[`internal.sendLink()`](https://open.dingtalk.com/document/orgapp/send-a-file-link-to-the-specified-session)</source>
        <target>[`internal.sendLink()`](https://open.dingtalk.com/document/orgapp/send-a-file-link-to-the-specified-session)</target>
      </trans-unit>
      <trans-unit id="58048" translate="no">
        <source>[`internal.sendMessage()`](https://open.dingtalk.com/document/isvapp/a-user-outside-the-dingtalk-sends-a-message-to-the)</source>
        <target>[`internal.sendMessage()`](https://open.dingtalk.com/document/isvapp/a-user-outside-the-dingtalk-sends-a-message-to-the)</target>
      </trans-unit>
      <trans-unit id="58050" translate="no">
        <source>[`internal.sendMsgByTask()`](https://open.dingtalk.com/document/orgapp/service-group-sending-task-interface)</source>
        <target>[`internal.sendMsgByTask()`](https://open.dingtalk.com/document/orgapp/service-group-sending-task-interface)</target>
      </trans-unit>
      <trans-unit id="58052" translate="no">
        <source>[`internal.sendOTOInteractiveCard()`](https://open.dingtalk.com/document/orgapp/send-dingtalk-interactive-cards-to-person-to-person-chat-sessions)</source>
        <target>[`internal.sendOTOInteractiveCard()`](https://open.dingtalk.com/document/orgapp/send-dingtalk-interactive-cards-to-person-to-person-chat-sessions)</target>
      </trans-unit>
      <trans-unit id="58054" translate="no">
        <source>[`internal.sendOfficialAccountOTOMessage()`](https://open.dingtalk.com/document/isvapp/sends-a-single-message-from-the-service-window)</source>
        <target>[`internal.sendOfficialAccountOTOMessage()`](https://open.dingtalk.com/document/isvapp/sends-a-single-message-from-the-service-window)</target>
      </trans-unit>
      <trans-unit id="58056" translate="no">
        <source>[`internal.sendPhoneDing()`](https://open.dingtalk.com/document/orgapp/outgoing-phone-ding)</source>
        <target>[`internal.sendPhoneDing()`](https://open.dingtalk.com/document/orgapp/outgoing-phone-ding)</target>
      </trans-unit>
      <trans-unit id="58058" translate="no">
        <source>[`internal.sendRobotInteractiveCard()`](https://open.dingtalk.com/document/orgapp/robots-send-interactive-cards)</source>
        <target>[`internal.sendRobotInteractiveCard()`](https://open.dingtalk.com/document/orgapp/robots-send-interactive-cards)</target>
      </trans-unit>
      <trans-unit id="58060" translate="no">
        <source>[`internal.sendRobotMessage()`](https://open.dingtalk.com/document/app/group-robots-send-messages)</source>
        <target>[`internal.sendRobotMessage()`](https://open.dingtalk.com/document/app/group-robots-send-messages)</target>
      </trans-unit>
      <trans-unit id="58062" translate="no">
        <source>[`internal.sendServiceGroupMessage()`](https://open.dingtalk.com/document/orgapp/service-group-message-sending-interface)</source>
        <target>[`internal.sendServiceGroupMessage()`](https://open.dingtalk.com/document/orgapp/service-group-message-sending-interface)</target>
      </trans-unit>
      <trans-unit id="58064" translate="no">
        <source>[`internal.sendTemplateInteractiveCard()`](https://open.dingtalk.com/document/orgapp/send-lightweight-interactive-cards)</source>
        <target>[`internal.sendTemplateInteractiveCard()`](https://open.dingtalk.com/document/orgapp/send-lightweight-interactive-cards)</target>
      </trans-unit>
      <trans-unit id="58066" translate="no">
        <source>[`internal.serviceGroupCreateGroup()`](https://open.dingtalk.com/document/orgapp/create-a-scenario-service-group)</source>
        <target>[`internal.serviceGroupCreateGroup()`](https://open.dingtalk.com/document/orgapp/create-a-scenario-service-group)</target>
      </trans-unit>
      <trans-unit id="58068" translate="no">
        <source>[`internal.serviceGroupUpdateGroupSet()`](https://open.dingtalk.com/document/isvapp/modify-a-service-group)</source>
        <target>[`internal.serviceGroupUpdateGroupSet()`](https://open.dingtalk.com/document/isvapp/modify-a-service-group)</target>
      </trans-unit>
      <trans-unit id="58070" translate="no">
        <source>[`internal.setColumnsVisibility()`](https://open.dingtalk.com/document/app/set-column-visibility)</source>
        <target>[`internal.setColumnsVisibility()`](https://open.dingtalk.com/document/app/set-column-visibility)</target>
      </trans-unit>
      <trans-unit id="58072" translate="no">
        <source>[`internal.setDeptPartnerTypeAndNum()`](https://open.dingtalk.com/document/isvapp/set-department-partner-type-and-partner-code)</source>
        <target>[`internal.setDeptPartnerTypeAndNum()`](https://open.dingtalk.com/document/isvapp/set-department-partner-type-and-partner-code)</target>
      </trans-unit>
      <trans-unit id="58074" translate="no">
        <source>[`internal.setMicroAppScope()`](https://open.dingtalk.com/document/orgapp/update-the-visible-range-of-micro-applications)</source>
        <target>[`internal.setMicroAppScope()`](https://open.dingtalk.com/document/orgapp/update-the-visible-range-of-micro-applications)</target>
      </trans-unit>
      <trans-unit id="58076" translate="no">
        <source>[`internal.setPermissionInheritance()`](https://open.dingtalk.com/document/orgapp/set-permission-inheritance-mode)</source>
        <target>[`internal.setPermissionInheritance()`](https://open.dingtalk.com/document/orgapp/set-permission-inheritance-mode)</target>
      </trans-unit>
      <trans-unit id="58078" translate="no">
        <source>[`internal.setRobotPlugin()`](https://open.dingtalk.com/document/orgapp/set-robot-quick-entrance)</source>
        <target>[`internal.setRobotPlugin()`](https://open.dingtalk.com/document/orgapp/set-robot-quick-entrance)</target>
      </trans-unit>
      <trans-unit id="58080" translate="no">
        <source>[`internal.setRowsVisibility()`](https://open.dingtalk.com/document/app/set-row-visibility)</source>
        <target>[`internal.setRowsVisibility()`](https://open.dingtalk.com/document/app/set-row-visibility)</target>
      </trans-unit>
      <trans-unit id="58082" translate="no">
        <source>[`internal.signIn()`](https://open.dingtalk.com/document/orgapp-server/sign-in-for-a-single-schedule)</source>
        <target>[`internal.signIn()`](https://open.dingtalk.com/document/orgapp-server/sign-in-for-a-single-schedule)</target>
      </trans-unit>
      <trans-unit id="58084" translate="no">
        <source>[`internal.signOut()`](https://open.dingtalk.com/document/isvapp/sign-off-for-a-single-schedule)</source>
        <target>[`internal.signOut()`](https://open.dingtalk.com/document/isvapp/sign-off-for-a-single-schedule)</target>
      </trans-unit>
      <trans-unit id="58086" translate="no">
        <source>[`internal.startCloudRecord()`](https://open.dingtalk.com/document/isvapp/video-conference-open-cloud-recording)</source>
        <target>[`internal.startCloudRecord()`](https://open.dingtalk.com/document/isvapp/video-conference-open-cloud-recording)</target>
      </trans-unit>
      <trans-unit id="58088" translate="no">
        <source>[`internal.startInstance()`](https://open.dingtalk.com/document/app/initiate-the-approval-process)</source>
        <target>[`internal.startInstance()`](https://open.dingtalk.com/document/app/initiate-the-approval-process)</target>
      </trans-unit>
      <trans-unit id="58090" translate="no">
        <source>[`internal.startStreamOut()`](https://open.dingtalk.com/document/orgapp/video-conference-enables-live-stream-ingest)</source>
        <target>[`internal.startStreamOut()`](https://open.dingtalk.com/document/orgapp/video-conference-enables-live-stream-ingest)</target>
      </trans-unit>
      <trans-unit id="58092" translate="no">
        <source>[`internal.stopCloudRecord()`](https://open.dingtalk.com/document/isvapp/video-conferencing-stops-cloud-recording)</source>
        <target>[`internal.stopCloudRecord()`](https://open.dingtalk.com/document/isvapp/video-conferencing-stops-cloud-recording)</target>
      </trans-unit>
      <trans-unit id="58094" translate="no">
        <source>[`internal.stopStreamOut()`](https://open.dingtalk.com/document/orgapp/videoconferencing-stops-live-stream-ingest)</source>
        <target>[`internal.stopStreamOut()`](https://open.dingtalk.com/document/orgapp/videoconferencing-stops-live-stream-ingest)</target>
      </trans-unit>
      <trans-unit id="58096" translate="no">
        <source>[`internal.storageAddPermission()`](https://open.dingtalk.com/document/isvapp/add-permissions-storage)</source>
        <target>[`internal.storageAddPermission()`](https://open.dingtalk.com/document/isvapp/add-permissions-storage)</target>
      </trans-unit>
      <trans-unit id="58098" translate="no">
        <source>[`internal.storageAddPermission()`](https://open.dingtalk.com/document/orgapp/add-permissions-file)</source>
        <target>[`internal.storageAddPermission()`](https://open.dingtalk.com/document/orgapp/add-permissions-file)</target>
      </trans-unit>
      <trans-unit id="58100" translate="no">
        <source>[`internal.storageAddSpace()`](https://open.dingtalk.com/document/isvapp/add-space)</source>
        <target>[`internal.storageAddSpace()`](https://open.dingtalk.com/document/isvapp/add-space)</target>
      </trans-unit>
      <trans-unit id="58102" translate="no">
        <source>[`internal.storageCommitFile()`](https://open.dingtalk.com/document/app/submittal-file)</source>
        <target>[`internal.storageCommitFile()`](https://open.dingtalk.com/document/app/submittal-file)</target>
      </trans-unit>
      <trans-unit id="58104" translate="no">
        <source>[`internal.storageCommitFile()`](https://open.dingtalk.com/document/orgapp/submit-documents)</source>
        <target>[`internal.storageCommitFile()`](https://open.dingtalk.com/document/orgapp/submit-documents)</target>
      </trans-unit>
      <trans-unit id="58106" translate="no">
        <source>[`internal.storageDeletePermission()`](https://open.dingtalk.com/document/isvapp/delete-storage-permissions)</source>
        <target>[`internal.storageDeletePermission()`](https://open.dingtalk.com/document/isvapp/delete-storage-permissions)</target>
      </trans-unit>
      <trans-unit id="58108" translate="no">
        <source>[`internal.storageDeletePermission()`](https://open.dingtalk.com/document/orgapp/delete-permissions-file)</source>
        <target>[`internal.storageDeletePermission()`](https://open.dingtalk.com/document/orgapp/delete-permissions-file)</target>
      </trans-unit>
      <trans-unit id="58110" translate="no">
        <source>[`internal.storageGetFileUploadInfo()`](https://open.dingtalk.com/document/app/obtain-file-upload-informations)</source>
        <target>[`internal.storageGetFileUploadInfo()`](https://open.dingtalk.com/document/app/obtain-file-upload-informations)</target>
      </trans-unit>
      <trans-unit id="58112" translate="no">
        <source>[`internal.storageGetFileUploadInfo()`](https://open.dingtalk.com/document/orgapp/obtain-storage-upload-information)</source>
        <target>[`internal.storageGetFileUploadInfo()`](https://open.dingtalk.com/document/orgapp/obtain-storage-upload-information)</target>
      </trans-unit>
      <trans-unit id="58114" translate="no">
        <source>[`internal.storageGetSpace()`](https://open.dingtalk.com/document/isvapp/get-space-information)</source>
        <target>[`internal.storageGetSpace()`](https://open.dingtalk.com/document/isvapp/get-space-information)</target>
      </trans-unit>
      <trans-unit id="58116" translate="no">
        <source>[`internal.storageUpdatePermission()`](https://open.dingtalk.com/document/isvapp/modify-storage-permissions)</source>
        <target>[`internal.storageUpdatePermission()`](https://open.dingtalk.com/document/isvapp/modify-storage-permissions)</target>
      </trans-unit>
      <trans-unit id="58118" translate="no">
        <source>[`internal.storageUpdatePermission()`](https://open.dingtalk.com/document/orgapp/modify-permissions-file)</source>
        <target>[`internal.storageUpdatePermission()`](https://open.dingtalk.com/document/orgapp/modify-permissions-file)</target>
      </trans-unit>
      <trans-unit id="58120" translate="no">
        <source>[`internal.subscribeCalendar()`](https://open.dingtalk.com/document/orgapp/subscribe-to-a-public-calendar)</source>
        <target>[`internal.subscribeCalendar()`](https://open.dingtalk.com/document/orgapp/subscribe-to-a-public-calendar)</target>
      </trans-unit>
      <trans-unit id="58122" translate="no">
        <source>[`internal.suspendProject()`](https://open.dingtalk.com/document/orgapp/archiving-project)</source>
        <target>[`internal.suspendProject()`](https://open.dingtalk.com/document/orgapp/archiving-project)</target>
      </trans-unit>
      <trans-unit id="58124" translate="no">
        <source>[`internal.syncData()`](https://open.dingtalk.com/document/connector/dingtalk-connector-data-synchronization-interface)</source>
        <target>[`internal.syncData()`](https://open.dingtalk.com/document/connector/dingtalk-connector-data-synchronization-interface)</target>
      </trans-unit>
      <trans-unit id="58126" translate="no">
        <source>[`internal.syncExceedApply()`](https://open.dingtalk.com/document/isvapp/dingtalk-oapi-alitrip-btrip-exceedapply-sync)</source>
        <target>[`internal.syncExceedApply()`](https://open.dingtalk.com/document/isvapp/dingtalk-oapi-alitrip-btrip-exceedapply-sync)</target>
      </trans-unit>
      <trans-unit id="58128" translate="no">
        <source>[`internal.terminateInstance()`](https://open.dingtalk.com/document/app/terminate-a-process-instance)</source>
        <target>[`internal.terminateInstance()`](https://open.dingtalk.com/document/app/terminate-a-process-instance)</target>
      </trans-unit>
      <trans-unit id="58130" translate="no">
        <source>[`internal.unSuspendProject()`](https://open.dingtalk.com/document/orgapp/cancel-project-archiving)</source>
        <target>[`internal.unSuspendProject()`](https://open.dingtalk.com/document/orgapp/cancel-project-archiving)</target>
      </trans-unit>
      <trans-unit id="58132" translate="no">
        <source>[`internal.unsubscribeCalendar()`](https://open.dingtalk.com/document/orgapp/unsubscribe-from-a-public-calendar)</source>
        <target>[`internal.unsubscribeCalendar()`](https://open.dingtalk.com/document/orgapp/unsubscribe-from-a-public-calendar)</target>
      </trans-unit>
      <trans-unit id="58134" translate="no">
        <source>[`internal.unsubscribeEvent()`](https://open.dingtalk.com/document/isvapp/unsubscribe-from-file-change-event)</source>
        <target>[`internal.unsubscribeEvent()`](https://open.dingtalk.com/document/isvapp/unsubscribe-from-file-change-event)</target>
      </trans-unit>
      <trans-unit id="58136" translate="no">
        <source>[`internal.updateBadgeCodeUserInstance()`](https://open.dingtalk.com/document/isvapp/update-dingtalk-user-instance)</source>
        <target>[`internal.updateBadgeCodeUserInstance()`](https://open.dingtalk.com/document/isvapp/update-dingtalk-user-instance)</target>
      </trans-unit>
      <trans-unit id="58138" translate="no">
        <source>[`internal.updateBizObject()`](https://open.dingtalk.com/document/isvapp/modify-form-business-object-data)</source>
        <target>[`internal.updateBizObject()`](https://open.dingtalk.com/document/isvapp/modify-form-business-object-data)</target>
      </trans-unit>
      <trans-unit id="58140" translate="no">
        <source>[`internal.updateCard()`](https://open.dingtalk.com/document/orgapp/interactive-card-update-interface)</source>
        <target>[`internal.updateCard()`](https://open.dingtalk.com/document/orgapp/interactive-card-update-interface)</target>
      </trans-unit>
      <trans-unit id="58142" translate="no">
        <source>[`internal.updateCrmPersonalCustomer()`](https://open.dingtalk.com/document/isvapp/update-crm-personal-customers)</source>
        <target>[`internal.updateCrmPersonalCustomer()`](https://open.dingtalk.com/document/isvapp/update-crm-personal-customers)</target>
      </trans-unit>
      <trans-unit id="58144" translate="no">
        <source>[`internal.updateCustomfieldValue()`](https://open.dingtalk.com/document/isvapp/update-task-custom-field-value)</source>
        <target>[`internal.updateCustomfieldValue()`](https://open.dingtalk.com/document/isvapp/update-task-custom-field-value)</target>
      </trans-unit>
      <trans-unit id="58146" translate="no">
        <source>[`internal.updateDentryAppProperties()`](https://open.dingtalk.com/document/isvapp/update-the-application-properties-of-a-file-or-folder)</source>
        <target>[`internal.updateDentryAppProperties()`](https://open.dingtalk.com/document/isvapp/update-the-application-properties-of-a-file-or-folder)</target>
      </trans-unit>
      <trans-unit id="58148" translate="no">
        <source>[`internal.updateFormData()`](https://open.dingtalk.com/document/orgapp/update-form-data)</source>
        <target>[`internal.updateFormData()`](https://open.dingtalk.com/document/orgapp/update-form-data)</target>
      </trans-unit>
      <trans-unit id="58150" translate="no">
        <source>[`internal.updateGroupAvatar()`](https://open.dingtalk.com/document/isvapp/modify-the-avatar-of-a-communication-group)</source>
        <target>[`internal.updateGroupAvatar()`](https://open.dingtalk.com/document/isvapp/modify-the-avatar-of-a-communication-group)</target>
      </trans-unit>
      <trans-unit id="58152" translate="no">
        <source>[`internal.updateGroupName()`](https://open.dingtalk.com/document/isvapp/modify-the-group-name)</source>
        <target>[`internal.updateGroupName()`](https://open.dingtalk.com/document/isvapp/modify-the-group-name)</target>
      </trans-unit>
      <trans-unit id="58154" translate="no">
        <source>[`internal.updateGroupSubAdmin()`](https://open.dingtalk.com/document/isvapp/update-group-administrator)</source>
        <target>[`internal.updateGroupSubAdmin()`](https://open.dingtalk.com/document/isvapp/update-group-administrator)</target>
      </trans-unit>
      <trans-unit id="58156" translate="no">
        <source>[`internal.updateInnerApp()`](https://open.dingtalk.com/document/app/update-internal-h5-applications)</source>
        <target>[`internal.updateInnerApp()`](https://open.dingtalk.com/document/app/update-internal-h5-applications)</target>
      </trans-unit>
      <trans-unit id="58158" translate="no">
        <source>[`internal.updateInstance()`](https://open.dingtalk.com/document/isvapp-server/update-process-instance-1)</source>
        <target>[`internal.updateInstance()`](https://open.dingtalk.com/document/isvapp-server/update-process-instance-1)</target>
      </trans-unit>
      <trans-unit id="58160" translate="no">
        <source>[`internal.updateInteractiveCard()`](https://open.dingtalk.com/document/orgapp/update-dingtalk-interactive-cards-1)</source>
        <target>[`internal.updateInteractiveCard()`](https://open.dingtalk.com/document/orgapp/update-dingtalk-interactive-cards-1)</target>
      </trans-unit>
      <trans-unit id="58162" translate="no">
        <source>[`internal.updateLive()`](https://open.dingtalk.com/document/isvapp/modify-live-streaming)</source>
        <target>[`internal.updateLive()`](https://open.dingtalk.com/document/isvapp/modify-live-streaming)</target>
      </trans-unit>
      <trans-unit id="58164" translate="no">
        <source>[`internal.updateMeetingRoom()`](https://open.dingtalk.com/document/isvapp/update-meeting-room-information)</source>
        <target>[`internal.updateMeetingRoom()`](https://open.dingtalk.com/document/isvapp/update-meeting-room-information)</target>
      </trans-unit>
      <trans-unit id="58166" translate="no">
        <source>[`internal.updateMeetingRoomGroup()`](https://open.dingtalk.com/document/isvapp/update-meeting-room-group-information)</source>
        <target>[`internal.updateMeetingRoomGroup()`](https://open.dingtalk.com/document/isvapp/update-meeting-room-group-information)</target>
      </trans-unit>
      <trans-unit id="58168" translate="no">
        <source>[`internal.updateMemberBanWords()`](https://open.dingtalk.com/document/orgapp/set-group-members-access-control)</source>
        <target>[`internal.updateMemberBanWords()`](https://open.dingtalk.com/document/orgapp/set-group-members-access-control)</target>
      </trans-unit>
      <trans-unit id="58170" translate="no">
        <source>[`internal.updateMemberGroupNick()`](https://open.dingtalk.com/document/isvapp/update-group-nicknames-for-group-members)</source>
        <target>[`internal.updateMemberGroupNick()`](https://open.dingtalk.com/document/isvapp/update-group-nicknames-for-group-members)</target>
      </trans-unit>
      <trans-unit id="58172" translate="no">
        <source>[`internal.updateOrganizationTaskContent()`](https://open.dingtalk.com/document/isvapp/update-free-task-title)</source>
        <target>[`internal.updateOrganizationTaskContent()`](https://open.dingtalk.com/document/isvapp/update-free-task-title)</target>
      </trans-unit>
      <trans-unit id="58174" translate="no">
        <source>[`internal.updateOrganizationTaskDueDate()`](https://open.dingtalk.com/document/isvapp/update-free-task-deadline)</source>
        <target>[`internal.updateOrganizationTaskDueDate()`](https://open.dingtalk.com/document/isvapp/update-free-task-deadline)</target>
      </trans-unit>
      <trans-unit id="58176" translate="no">
        <source>[`internal.updateOrganizationTaskExecutor()`](https://open.dingtalk.com/document/isvapp/update-free-task-executor)</source>
        <target>[`internal.updateOrganizationTaskExecutor()`](https://open.dingtalk.com/document/isvapp/update-free-task-executor)</target>
      </trans-unit>
      <trans-unit id="58178" translate="no">
        <source>[`internal.updateOrganizationTaskInvolveMembers()`](https://open.dingtalk.com/document/isvapp/add-or-remove-participants-of-free-tasks)</source>
        <target>[`internal.updateOrganizationTaskInvolveMembers()`](https://open.dingtalk.com/document/isvapp/add-or-remove-participants-of-free-tasks)</target>
      </trans-unit>
      <trans-unit id="58180" translate="no">
        <source>[`internal.updateOrganizationTaskNote()`](https://open.dingtalk.com/document/isvapp/update-free-task-notes-isv)</source>
        <target>[`internal.updateOrganizationTaskNote()`](https://open.dingtalk.com/document/isvapp/update-free-task-notes-isv)</target>
      </trans-unit>
      <trans-unit id="58182" translate="no">
        <source>[`internal.updateOrganizationTaskPriority()`](https://open.dingtalk.com/document/isvapp/update-the-priority-of-a-free-migration-job)</source>
        <target>[`internal.updateOrganizationTaskPriority()`](https://open.dingtalk.com/document/isvapp/update-the-priority-of-a-free-migration-job)</target>
      </trans-unit>
      <trans-unit id="58184" translate="no">
        <source>[`internal.updateOrganizationTaskStatus()`](https://open.dingtalk.com/document/isvapp/update-free-task-status)</source>
        <target>[`internal.updateOrganizationTaskStatus()`](https://open.dingtalk.com/document/isvapp/update-free-task-status)</target>
      </trans-unit>
      <trans-unit id="58186" translate="no">
        <source>[`internal.updateProjectGroup()`](https://open.dingtalk.com/document/isvapp/update-project-grouping)</source>
        <target>[`internal.updateProjectGroup()`](https://open.dingtalk.com/document/isvapp/update-project-grouping)</target>
      </trans-unit>
      <trans-unit id="58188" translate="no">
        <source>[`internal.updateRobotInteractiveCard()`](https://open.dingtalk.com/document/orgapp/update-the-robot-to-send-interactive-cards)</source>
        <target>[`internal.updateRobotInteractiveCard()`](https://open.dingtalk.com/document/orgapp/update-the-robot-to-send-interactive-cards)</target>
      </trans-unit>
      <trans-unit id="58190" translate="no">
        <source>[`internal.updateScheduleConference()`](https://open.dingtalk.com/document/app/update-appointment-meeting)</source>
        <target>[`internal.updateScheduleConference()`](https://open.dingtalk.com/document/app/update-appointment-meeting)</target>
      </trans-unit>
      <trans-unit id="58192" translate="no">
        <source>[`internal.updateStatus()`](https://open.dingtalk.com/document/isvapp-server/update-status)</source>
        <target>[`internal.updateStatus()`](https://open.dingtalk.com/document/isvapp-server/update-status)</target>
      </trans-unit>
      <trans-unit id="58194" translate="no">
        <source>[`internal.updateTaskContent()`](https://open.dingtalk.com/document/orgapp/update-task-content)</source>
        <target>[`internal.updateTaskContent()`](https://open.dingtalk.com/document/orgapp/update-task-content)</target>
      </trans-unit>
      <trans-unit id="58196" translate="no">
        <source>[`internal.updateTaskDueDate()`](https://open.dingtalk.com/document/orgapp/update-task-deadline)</source>
        <target>[`internal.updateTaskDueDate()`](https://open.dingtalk.com/document/orgapp/update-task-deadline)</target>
      </trans-unit>
      <trans-unit id="58198" translate="no">
        <source>[`internal.updateTaskExecutor()`](https://open.dingtalk.com/document/orgapp/update-task-performer)</source>
        <target>[`internal.updateTaskExecutor()`](https://open.dingtalk.com/document/orgapp/update-task-performer)</target>
      </trans-unit>
      <trans-unit id="58200" translate="no">
        <source>[`internal.updateTaskInvolvemembers()`](https://open.dingtalk.com/document/orgapp/update-task-participants)</source>
        <target>[`internal.updateTaskInvolvemembers()`](https://open.dingtalk.com/document/orgapp/update-task-participants)</target>
      </trans-unit>
      <trans-unit id="58202" translate="no">
        <source>[`internal.updateTaskNote()`](https://open.dingtalk.com/document/orgapp/update-task-notes)</source>
        <target>[`internal.updateTaskNote()`](https://open.dingtalk.com/document/orgapp/update-task-notes)</target>
      </trans-unit>
      <trans-unit id="58204" translate="no">
        <source>[`internal.updateTaskPriority()`](https://open.dingtalk.com/document/orgapp/update-task-priority)</source>
        <target>[`internal.updateTaskPriority()`](https://open.dingtalk.com/document/orgapp/update-task-priority)</target>
      </trans-unit>
      <trans-unit id="58206" translate="no">
        <source>[`internal.updateTaskStartdate()`](https://open.dingtalk.com/document/orgapp/update-task-start-time)</source>
        <target>[`internal.updateTaskStartdate()`](https://open.dingtalk.com/document/orgapp/update-task-start-time)</target>
      </trans-unit>
      <trans-unit id="58208" translate="no">
        <source>[`internal.updateTaskTaskflowstatus()`](https://open.dingtalk.com/document/isvapp/update-task-workflow-status)</source>
        <target>[`internal.updateTaskTaskflowstatus()`](https://open.dingtalk.com/document/isvapp/update-task-workflow-status)</target>
      </trans-unit>
      <trans-unit id="58210" translate="no">
        <source>[`internal.updateTodoTask()`](https://open.dingtalk.com/document/isvapp/updates-dingtalk-to-do-tasks)</source>
        <target>[`internal.updateTodoTask()`](https://open.dingtalk.com/document/isvapp/updates-dingtalk-to-do-tasks)</target>
      </trans-unit>
      <trans-unit id="58212" translate="no">
        <source>[`internal.updateTodoTaskExecutorStatus()`](https://open.dingtalk.com/document/isvapp/update-dingtalk-to-do-status)</source>
        <target>[`internal.updateTodoTaskExecutorStatus()`](https://open.dingtalk.com/document/isvapp/update-dingtalk-to-do-status)</target>
      </trans-unit>
      <trans-unit id="58214" translate="no">
        <source>[`internal.upgradeCloudGroup()`](https://open.dingtalk.com/document/orgapp/upgraded-the-cloud-customer-service-group-to-the-dingtalk-intelligent)</source>
        <target>[`internal.upgradeCloudGroup()`](https://open.dingtalk.com/document/orgapp/upgraded-the-cloud-customer-service-group-to-the-dingtalk-intelligent)</target>
      </trans-unit>
      <trans-unit id="58216" translate="no">
        <source>[`internal.upgradeDevice()`](https://open.dingtalk.com/document/app/upgrade-equipment)</source>
        <target>[`internal.upgradeDevice()`](https://open.dingtalk.com/document/app/upgrade-equipment)</target>
      </trans-unit>
      <trans-unit id="58218" translate="no">
        <source>[`internal.upgradeNormalGroup()`](https://open.dingtalk.com/document/orgapp/a-dingtalk-group-is-upgraded-to-one-of-the-intelligent)</source>
        <target>[`internal.upgradeNormalGroup()`](https://open.dingtalk.com/document/orgapp/a-dingtalk-group-is-upgraded-to-one-of-the-intelligent)</target>
      </trans-unit>
      <trans-unit id="58220" translate="no">
        <source>[`internal.validateOrderBuy()`](https://open.dingtalk.com/document/isvapp-server/multi-channel-new-purchase-verification)</source>
        <target>[`internal.validateOrderBuy()`](https://open.dingtalk.com/document/isvapp-server/multi-channel-new-purchase-verification)</target>
      </trans-unit>
      <trans-unit id="58222" translate="no">
        <source>[`internal.validateOrderUpgrade()`](https://open.dingtalk.com/document/isvapp-server/verification-order-upgrade)</source>
        <target>[`internal.validateOrderUpgrade()`](https://open.dingtalk.com/document/isvapp-server/verification-order-upgrade)</target>
      </trans-unit>
      <trans-unit id="58224" translate="no">
        <source>[`internal.wikiWordsDetail()`](https://open.dingtalk.com/document/orgapp/enterprise-encyclopedia-query-entry-details-by-entry-name)</source>
        <target>[`internal.wikiWordsDetail()`](https://open.dingtalk.com/document/orgapp/enterprise-encyclopedia-query-entry-details-by-entry-name)</target>
      </trans-unit>
      <trans-unit id="58226" translate="no">
        <source>[`internal.wikiWordsParse()`](https://open.dingtalk.com/document/orgapp/enterprise-encyclopedia-match-entries-in-a-text)</source>
        <target>[`internal.wikiWordsParse()`](https://open.dingtalk.com/document/orgapp/enterprise-encyclopedia-match-entries-in-a-text)</target>
      </trans-unit>
    </body>
  </file>
  <file id="1646" original="/[koishijs.docs] main/zh-CN/plugins/adapter/discord.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="58228">
        <source>@koishijs/plugin-adapter-discord</source>
        <target state="needs-translation">@koishijs/plugin-adapter-discord</target>
      </trans-unit>
      <trans-unit id="58230">
        <source>接入方法</source>
        <target state="needs-translation">接入方法</target>
      </trans-unit>
      <trans-unit id="58232">
        <source>前往 [https://discord.com/developers/applications](https://discord.com/developers/applications)，登录账号创建一个应用</source>
        <target state="needs-translation">前往 [https://discord.com/developers/applications](https://discord.com/developers/applications)，登录账号创建一个应用</target>
      </trans-unit>
      <trans-unit id="58234">
        <source>点击「Bot」并创建一个新的机器人，保存这个页面中的 token（请注意不要泄露）</source>
        <target state="needs-translation">点击「Bot」并创建一个新的机器人，保存这个页面中的 token（请注意不要泄露）</target>
      </trans-unit>
      <trans-unit id="58236">
        <source>要将机器人拉进你的服务器，点击「OAuth2」，并在网址生成器中勾选 Bot 和机器人所需要的权限</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">要將機器人拉進你的服務器，點擊「OAuth2」，並在網址生成器中勾選 Bot 和機器人所需要的權限</target>
      </trans-unit>
      <trans-unit id="58238">
        <source>打开生成的链接，选择你具有管理权限的服务器，就成功把机器人添加进去了</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">打開生成的鏈接，選擇你具有管理權限的服務器，就成功把機器人添加進去了</target>
      </trans-unit>
      <trans-unit id="58240">
        <source>将上面的 token 作为机器人配置项即可使用</source>
        <target state="needs-translation">将上面的 token 作为机器人配置项即可使用</target>
      </trans-unit>
      <trans-unit id="58242">
        <source>配置项</source>
        <target state="needs-translation">配置项</target>
      </trans-unit>
      <trans-unit id="58244">
        <source>包括全部的 [`WsClient`](../../api/core/adapter.md#类-adapter-wsclient) 选项和下列额外选项：</source>
        <target state="needs-translation">包括全部的 [`WsClient`](../../api/core/adapter.md#类-adapter-wsclient) 选项和下列额外选项：</target>
      </trans-unit>
      <trans-unit id="58246">
        <source>options.token</source>
        <target state="needs-translation">options.token</target>
      </trans-unit>
      <trans-unit id="58248">
        <source>类型: `string`</source>
        <target state="needs-translation">类型: `string`</target>
      </trans-unit>
      <trans-unit id="58250">
        <source>机器人账户的令牌。</source>
        <target state="needs-translation">机器人账户的令牌。</target>
      </trans-unit>
      <trans-unit id="58252">
        <source>options.endpoint</source>
        <target state="needs-translation">options.endpoint</target>
      </trans-unit>
      <trans-unit id="58254">
        <source>类型: `string`</source>
        <target state="needs-translation">类型: `string`</target>
      </trans-unit>
      <trans-unit id="58256">
        <source>默认值: `'https://discord.com/api/v8'`</source>
        <target state="needs-translation">默认值: `'https://discord.com/api/v8'`</target>
      </trans-unit>
      <trans-unit id="58258">
        <source>要连接的服务器地址。</source>
        <target state="needs-translation">要连接的服务器地址。</target>
      </trans-unit>
      <trans-unit id="58260">
        <source>options.proxyAgent</source>
        <target state="needs-translation">options.proxyAgent</target>
      </trans-unit>
      <trans-unit id="58262">
        <source>类型: `string`</source>
        <target state="needs-translation">类型: `string`</target>
      </trans-unit>
      <trans-unit id="58264">
        <source>默认值: [`app.config.request.proxyAgent`](../../api/core/app.md#options-request-proxyagent)</source>
        <target state="needs-translation">默认值: [`app.config.request.proxyAgent`](../../api/core/app.md#options-request-proxyagent)</target>
      </trans-unit>
      <trans-unit id="58266">
        <source>请求时默认使用的网络代理。</source>
        <target state="needs-translation">请求时默认使用的网络代理。</target>
      </trans-unit>
      <trans-unit id="58268">
        <source>options.gateway</source>
        <target state="needs-translation">options.gateway</target>
      </trans-unit>
      <trans-unit id="58270">
        <source>类型: `string`</source>
        <target state="needs-translation">类型: `string`</target>
      </trans-unit>
      <trans-unit id="58272">
        <source>默认值: `'wss://gateway.discord.gg/?v=8&amp;encoding=json'`</source>
        <target state="needs-translation">默认值: `'wss://gateway.discord.gg/?v=8&amp;encoding=json'`</target>
      </trans-unit>
      <trans-unit id="58274">
        <source>要连接的 WebSocket 网关。</source>
        <target state="needs-translation">要连接的 WebSocket 网关。</target>
      </trans-unit>
      <trans-unit id="58276">
        <source>options.intents</source>
        <target state="needs-translation">options.intents</target>
      </trans-unit>
      <trans-unit id="58278">
        <source>类型: `number`</source>
        <target state="needs-translation">类型: `number`</target>
      </trans-unit>
      <trans-unit id="58280">
        <source>默认值: `GUILD_MESSAGES | GUILD_MESSAGE_REACTIONS | DIRECT_MESSAGES | DIRECT_MESSAGE_REACTIONS`</source>
        <target state="needs-translation">默认值: `GUILD_MESSAGES | GUILD_MESSAGE_REACTIONS | DIRECT_MESSAGES | DIRECT_MESSAGE_REACTIONS`</target>
      </trans-unit>
      <trans-unit id="58282">
        <source>需要订阅的机器人事件。</source>
        <target state="needs-translation">需要订阅的机器人事件。</target>
      </trans-unit>
      <trans-unit id="58284">
        <source>这是一个以 bitset 形式表达的正整数，每一位代表一类事件。</source>
        <target state="needs-translation">这是一个以 bitset 形式表达的正整数，每一位代表一类事件。</target>
      </trans-unit>
      <trans-unit id="58286">
        <source>参考：[Gateway Intents](https://discord.com/developers/docs/topics/gateway#gateway-intents)</source>
        <target state="needs-translation">参考：[Gateway Intents](https://discord.com/developers/docs/topics/gateway#gateway-intents)</target>
      </trans-unit>
      <trans-unit id="58288">
        <source>options.handleExternalAsset</source>
        <target state="needs-translation">options.handleExternalAsset</target>
      </trans-unit>
      <trans-unit id="58290">
        <source>可选值: `string`</source>
        <target state="needs-translation">可选值: `string`</target>
      </trans-unit>
      <trans-unit id="58292">
        <source>默认值: `'auto'`</source>
        <target state="needs-translation">默认值: `'auto'`</target>
      </trans-unit>
      <trans-unit id="58294">
        <source>指定单独发送外链资源时采用的方法：</source>
        <target state="needs-translation">指定单独发送外链资源时采用的方法：</target>
      </trans-unit>
      <trans-unit id="58296">
        <source>**download:** 先下载后发送</source>
        <target state="needs-translation">**download:** 先下载后发送</target>
      </trans-unit>
      <trans-unit id="58298">
        <source>**direct:** 直接发送链接</source>
        <target state="needs-translation">**direct:** 直接发送链接</target>
      </trans-unit>
      <trans-unit id="58300">
        <source>**auto:** 发送一个 HEAD 请求，如果返回的 Content-Type 正确，则直接发送链接，否则先下载后发送</source>
        <target state="needs-translation">**auto:** 发送一个 HEAD 请求，如果返回的 Content-Type 正确，则直接发送链接，否则先下载后发送</target>
      </trans-unit>
      <trans-unit id="58302">
        <source>options.handleMixedContent</source>
        <target state="needs-translation">options.handleMixedContent</target>
      </trans-unit>
      <trans-unit id="58304">
        <source>可选值: `string`</source>
        <target state="needs-translation">可选值: `string`</target>
      </trans-unit>
      <trans-unit id="58306">
        <source>默认值: `'auto'`</source>
        <target state="needs-translation">默认值: `'auto'`</target>
      </trans-unit>
      <trans-unit id="58308">
        <source>指定发送图文混合内容时采用的方法：</source>
        <target state="needs-translation">指定发送图文混合内容时采用的方法：</target>
      </trans-unit>
      <trans-unit id="58310">
        <source>**separate:** 将每个不同形式的内容分开发送</source>
        <target state="needs-translation">**separate:** 将每个不同形式的内容分开发送</target>
      </trans-unit>
      <trans-unit id="58312">
        <source>**attach:** 图片前如果有文本内容，则将文本作为图片的附带信息进行发送</source>
        <target state="needs-translation">**attach:** 图片前如果有文本内容，则将文本作为图片的附带信息进行发送</target>
      </trans-unit>
      <trans-unit id="58314">
        <source>**auto:** 如果图片本身采用直接发送则与前面的文本分开，否则将文本作为图片的附带信息发送</source>
        <target state="needs-translation">**auto:** 如果图片本身采用直接发送则与前面的文本分开，否则将文本作为图片的附带信息发送</target>
      </trans-unit>
      <trans-unit id="58316">
        <source>当配置为 `attach` 并且发送文本+图片形式的消息时，无论 [`handleExternalAsset`](#options-discord-handleexternalasset) 配置为何都会先下载后发送。</source>
        <target state="needs-translation">当配置为 `attach` 并且发送文本+图片形式的消息时，无论 [`handleExternalAsset`](#options-discord-handleexternalasset) 配置为何都会先下载后发送。</target>
      </trans-unit>
      <trans-unit id="63768">
        <source>内部接口</source>
        <target state="needs-translation">内部接口</target>
      </trans-unit>
      <trans-unit id="63962">
        <source>关于内部接口的使用方式，请参见 [访问内部接口](../../guide/adapter/bot.md#access-from-plugin)。</source>
        <target state="needs-translation">关于内部接口的使用方式，请参见 [访问内部接口](../../guide/adapter/bot.md#access-from-plugin)。</target>
      </trans-unit>
      <trans-unit id="58320" translate="no">
        <source>[`internal.addGuildMember()`](https://discord.com/developers/docs/resources/guild#add-guild-member)</source>
        <target>[`internal.addGuildMember()`](https://discord.com/developers/docs/resources/guild#add-guild-member)</target>
      </trans-unit>
      <trans-unit id="58322" translate="no">
        <source>[`internal.addGuildMemberRole()`](https://discord.com/developers/docs/resources/guild#add-guild-member-role)</source>
        <target>[`internal.addGuildMemberRole()`](https://discord.com/developers/docs/resources/guild#add-guild-member-role)</target>
      </trans-unit>
      <trans-unit id="58324" translate="no">
        <source>[`internal.addThreadMember()`](https://discord.com/developers/docs/resources/channel#add-thread-member)</source>
        <target>[`internal.addThreadMember()`](https://discord.com/developers/docs/resources/channel#add-thread-member)</target>
      </trans-unit>
      <trans-unit id="58326" translate="no">
        <source>[`internal.beginGuildPrune()`](https://discord.com/developers/docs/resources/guild#begin-guild-prune)</source>
        <target>[`internal.beginGuildPrune()`](https://discord.com/developers/docs/resources/guild#begin-guild-prune)</target>
      </trans-unit>
      <trans-unit id="58328" translate="no">
        <source>[`internal.bulkDeleteMessages()`](https://discord.com/developers/docs/resources/channel#bulk-delete-messages)</source>
        <target>[`internal.bulkDeleteMessages()`](https://discord.com/developers/docs/resources/channel#bulk-delete-messages)</target>
      </trans-unit>
      <trans-unit id="58330" translate="no">
        <source>[`internal.bulkOverwriteGlobalApplicationCommands()`](https://discord.com/developers/docs/interactions/application-commands#bulk-overwrite-global-application-commands)</source>
        <target>[`internal.bulkOverwriteGlobalApplicationCommands()`](https://discord.com/developers/docs/interactions/application-commands#bulk-overwrite-global-application-commands)</target>
      </trans-unit>
      <trans-unit id="58332" translate="no">
        <source>[`internal.bulkOverwriteGuildApplicationCommands()`](https://discord.com/developers/docs/interactions/application-commands#bulk-overwrite-guild-application-commands)</source>
        <target>[`internal.bulkOverwriteGuildApplicationCommands()`](https://discord.com/developers/docs/interactions/application-commands#bulk-overwrite-guild-application-commands)</target>
      </trans-unit>
      <trans-unit id="58334" translate="no">
        <source>[`internal.createAutoModerationRule()`](https://discord.com/developers/docs/resources/auto-moderation#create-auto-moderation-rule)</source>
        <target>[`internal.createAutoModerationRule()`](https://discord.com/developers/docs/resources/auto-moderation#create-auto-moderation-rule)</target>
      </trans-unit>
      <trans-unit id="58336" translate="no">
        <source>[`internal.createChannelInvite()`](https://discord.com/developers/docs/resources/channel#create-channel-invite)</source>
        <target>[`internal.createChannelInvite()`](https://discord.com/developers/docs/resources/channel#create-channel-invite)</target>
      </trans-unit>
      <trans-unit id="58338" translate="no">
        <source>[`internal.createDM()`](https://discord.com/developers/docs/resources/user#create-dm)</source>
        <target>[`internal.createDM()`](https://discord.com/developers/docs/resources/user#create-dm)</target>
      </trans-unit>
      <trans-unit id="58340" translate="no">
        <source>[`internal.createFollowupMessage()`](https://discord.com/developers/docs/interactions/receiving-and-responding#create-followup-message)</source>
        <target>[`internal.createFollowupMessage()`](https://discord.com/developers/docs/interactions/receiving-and-responding#create-followup-message)</target>
      </trans-unit>
      <trans-unit id="58342" translate="no">
        <source>[`internal.createGlobalApplicationCommand()`](https://discord.com/developers/docs/interactions/application-commands#create-global-application-command)</source>
        <target>[`internal.createGlobalApplicationCommand()`](https://discord.com/developers/docs/interactions/application-commands#create-global-application-command)</target>
      </trans-unit>
      <trans-unit id="58344" translate="no">
        <source>[`internal.createGroupDM()`](https://discord.com/developers/docs/resources/user#create-group-dm)</source>
        <target>[`internal.createGroupDM()`](https://discord.com/developers/docs/resources/user#create-group-dm)</target>
      </trans-unit>
      <trans-unit id="58346" translate="no">
        <source>[`internal.createGuild()`](https://discord.com/developers/docs/resources/guild#create-guild)</source>
        <target>[`internal.createGuild()`](https://discord.com/developers/docs/resources/guild#create-guild)</target>
      </trans-unit>
      <trans-unit id="58348" translate="no">
        <source>[`internal.createGuildApplicationCommand()`](https://discord.com/developers/docs/interactions/application-commands#create-guild-application-command)</source>
        <target>[`internal.createGuildApplicationCommand()`](https://discord.com/developers/docs/interactions/application-commands#create-guild-application-command)</target>
      </trans-unit>
      <trans-unit id="58350" translate="no">
        <source>[`internal.createGuildBan()`](https://discord.com/developers/docs/resources/guild#create-guild-ban)</source>
        <target>[`internal.createGuildBan()`](https://discord.com/developers/docs/resources/guild#create-guild-ban)</target>
      </trans-unit>
      <trans-unit id="58352" translate="no">
        <source>[`internal.createGuildChannel()`](https://discord.com/developers/docs/resources/guild#create-guild-channel)</source>
        <target>[`internal.createGuildChannel()`](https://discord.com/developers/docs/resources/guild#create-guild-channel)</target>
      </trans-unit>
      <trans-unit id="58354" translate="no">
        <source>[`internal.createGuildEmoji()`](https://discord.com/developers/docs/resources/emoji#create-guild-emoji)</source>
        <target>[`internal.createGuildEmoji()`](https://discord.com/developers/docs/resources/emoji#create-guild-emoji)</target>
      </trans-unit>
      <trans-unit id="58356" translate="no">
        <source>[`internal.createGuildRole()`](https://discord.com/developers/docs/resources/guild#create-guild-role)</source>
        <target>[`internal.createGuildRole()`](https://discord.com/developers/docs/resources/guild#create-guild-role)</target>
      </trans-unit>
      <trans-unit id="58358" translate="no">
        <source>[`internal.createGuildScheduledEvent()`](https://discord.com/developers/docs/resources/guild-scheduled-event#create-guild-scheduled-event)</source>
        <target>[`internal.createGuildScheduledEvent()`](https://discord.com/developers/docs/resources/guild-scheduled-event#create-guild-scheduled-event)</target>
      </trans-unit>
      <trans-unit id="58360" translate="no">
        <source>[`internal.createGuildSticker()`](https://discord.com/developers/docs/resources/sticker#create-guild-sticker)</source>
        <target>[`internal.createGuildSticker()`](https://discord.com/developers/docs/resources/sticker#create-guild-sticker)</target>
      </trans-unit>
      <trans-unit id="58362" translate="no">
        <source>[`internal.createGuildTemplate()`](https://discord.com/developers/docs/resources/guild-template#create-guild-template)</source>
        <target>[`internal.createGuildTemplate()`](https://discord.com/developers/docs/resources/guild-template#create-guild-template)</target>
      </trans-unit>
      <trans-unit id="58364" translate="no">
        <source>[`internal.createGuildfromGuildTemplate()`](https://discord.com/developers/docs/resources/guild-template#create-guild-from-guild-template)</source>
        <target>[`internal.createGuildfromGuildTemplate()`](https://discord.com/developers/docs/resources/guild-template#create-guild-from-guild-template)</target>
      </trans-unit>
      <trans-unit id="58366" translate="no">
        <source>[`internal.createInteractionResponse()`](https://discord.com/developers/docs/interactions/receiving-and-responding#create-interaction-response)</source>
        <target>[`internal.createInteractionResponse()`](https://discord.com/developers/docs/interactions/receiving-and-responding#create-interaction-response)</target>
      </trans-unit>
      <trans-unit id="58368" translate="no">
        <source>[`internal.createMessage()`](https://discord.com/developers/docs/resources/channel#create-message)</source>
        <target>[`internal.createMessage()`](https://discord.com/developers/docs/resources/channel#create-message)</target>
      </trans-unit>
      <trans-unit id="58370" translate="no">
        <source>[`internal.createReaction()`](https://discord.com/developers/docs/resources/channel#create-reaction)</source>
        <target>[`internal.createReaction()`](https://discord.com/developers/docs/resources/channel#create-reaction)</target>
      </trans-unit>
      <trans-unit id="58372" translate="no">
        <source>[`internal.createStageInstance()`](https://discord.com/developers/docs/resources/stage-instance#create-stage-instance)</source>
        <target>[`internal.createStageInstance()`](https://discord.com/developers/docs/resources/stage-instance#create-stage-instance)</target>
      </trans-unit>
      <trans-unit id="58374" translate="no">
        <source>[`internal.createWebhook()`](https://discord.com/developers/docs/resources/webhook#create-webhook)</source>
        <target>[`internal.createWebhook()`](https://discord.com/developers/docs/resources/webhook#create-webhook)</target>
      </trans-unit>
      <trans-unit id="58376" translate="no">
        <source>[`internal.crosspostMessage()`](https://discord.com/developers/docs/resources/channel#crosspost-message)</source>
        <target>[`internal.crosspostMessage()`](https://discord.com/developers/docs/resources/channel#crosspost-message)</target>
      </trans-unit>
      <trans-unit id="58378" translate="no">
        <source>[`internal.deleteAllReactions()`](https://discord.com/developers/docs/resources/channel#delete-all-reactions)</source>
        <target>[`internal.deleteAllReactions()`](https://discord.com/developers/docs/resources/channel#delete-all-reactions)</target>
      </trans-unit>
      <trans-unit id="58380" translate="no">
        <source>[`internal.deleteAllReactionsForEmoji()`](https://discord.com/developers/docs/resources/channel#delete-all-reactions-for-emoji)</source>
        <target>[`internal.deleteAllReactionsForEmoji()`](https://discord.com/developers/docs/resources/channel#delete-all-reactions-for-emoji)</target>
      </trans-unit>
      <trans-unit id="58382" translate="no">
        <source>[`internal.deleteAutoModerationRule()`](https://discord.com/developers/docs/resources/auto-moderation#delete-auto-moderation-rule)</source>
        <target>[`internal.deleteAutoModerationRule()`](https://discord.com/developers/docs/resources/auto-moderation#delete-auto-moderation-rule)</target>
      </trans-unit>
      <trans-unit id="58384" translate="no">
        <source>[`internal.deleteChannel()`](https://discord.com/developers/docs/resources/channel#deleteclose-channel)</source>
        <target>[`internal.deleteChannel()`](https://discord.com/developers/docs/resources/channel#deleteclose-channel)</target>
      </trans-unit>
      <trans-unit id="58386" translate="no">
        <source>[`internal.deleteChannelPermission()`](https://discord.com/developers/docs/resources/channel#delete-channel-permission)</source>
        <target>[`internal.deleteChannelPermission()`](https://discord.com/developers/docs/resources/channel#delete-channel-permission)</target>
      </trans-unit>
      <trans-unit id="58388" translate="no">
        <source>[`internal.deleteFollowupMessage()`](https://discord.com/developers/docs/interactions/receiving-and-responding#delete-followup-message)</source>
        <target>[`internal.deleteFollowupMessage()`](https://discord.com/developers/docs/interactions/receiving-and-responding#delete-followup-message)</target>
      </trans-unit>
      <trans-unit id="58390" translate="no">
        <source>[`internal.deleteGlobalApplicationCommand()`](https://discord.com/developers/docs/interactions/application-commands#delete-global-application-command)</source>
        <target>[`internal.deleteGlobalApplicationCommand()`](https://discord.com/developers/docs/interactions/application-commands#delete-global-application-command)</target>
      </trans-unit>
      <trans-unit id="58392" translate="no">
        <source>[`internal.deleteGuild()`](https://discord.com/developers/docs/resources/guild#delete-guild)</source>
        <target>[`internal.deleteGuild()`](https://discord.com/developers/docs/resources/guild#delete-guild)</target>
      </trans-unit>
      <trans-unit id="58394" translate="no">
        <source>[`internal.deleteGuildApplicationCommand()`](https://discord.com/developers/docs/interactions/application-commands#delete-guild-application-command)</source>
        <target>[`internal.deleteGuildApplicationCommand()`](https://discord.com/developers/docs/interactions/application-commands#delete-guild-application-command)</target>
      </trans-unit>
      <trans-unit id="58396" translate="no">
        <source>[`internal.deleteGuildIntegration()`](https://discord.com/developers/docs/resources/guild#delete-guild-integration)</source>
        <target>[`internal.deleteGuildIntegration()`](https://discord.com/developers/docs/resources/guild#delete-guild-integration)</target>
      </trans-unit>
      <trans-unit id="58398" translate="no">
        <source>[`internal.deleteGuildEmoji()`](https://discord.com/developers/docs/resources/emoji#delete-guild-emoji)</source>
        <target>[`internal.deleteGuildEmoji()`](https://discord.com/developers/docs/resources/emoji#delete-guild-emoji)</target>
      </trans-unit>
      <trans-unit id="58400" translate="no">
        <source>[`internal.deleteGuildRole()`](https://discord.com/developers/docs/resources/guild#delete-guild-role)</source>
        <target>[`internal.deleteGuildRole()`](https://discord.com/developers/docs/resources/guild#delete-guild-role)</target>
      </trans-unit>
      <trans-unit id="58402" translate="no">
        <source>[`internal.deleteGuildScheduledEvent()`](https://discord.com/developers/docs/resources/guild-scheduled-event#delete-guild-scheduled-event)</source>
        <target>[`internal.deleteGuildScheduledEvent()`](https://discord.com/developers/docs/resources/guild-scheduled-event#delete-guild-scheduled-event)</target>
      </trans-unit>
      <trans-unit id="58404" translate="no">
        <source>[`internal.deleteGuildSticker()`](https://discord.com/developers/docs/resources/sticker#delete-guild-sticker)</source>
        <target>[`internal.deleteGuildSticker()`](https://discord.com/developers/docs/resources/sticker#delete-guild-sticker)</target>
      </trans-unit>
      <trans-unit id="58406" translate="no">
        <source>[`internal.deleteGuildTemplate()`](https://discord.com/developers/docs/resources/guild-template#delete-guild-template)</source>
        <target>[`internal.deleteGuildTemplate()`](https://discord.com/developers/docs/resources/guild-template#delete-guild-template)</target>
      </trans-unit>
      <trans-unit id="58408" translate="no">
        <source>[`internal.deleteInvite()`](https://discord.com/developers/docs/resources/invite#delete-invite)</source>
        <target>[`internal.deleteInvite()`](https://discord.com/developers/docs/resources/invite#delete-invite)</target>
      </trans-unit>
      <trans-unit id="58410" translate="no">
        <source>[`internal.deleteMessage()`](https://discord.com/developers/docs/resources/channel#delete-message)</source>
        <target>[`internal.deleteMessage()`](https://discord.com/developers/docs/resources/channel#delete-message)</target>
      </trans-unit>
      <trans-unit id="58412" translate="no">
        <source>[`internal.deleteOriginalInteractionResponse()`](https://discord.com/developers/docs/interactions/receiving-and-responding#delete-original-interaction-response)</source>
        <target>[`internal.deleteOriginalInteractionResponse()`](https://discord.com/developers/docs/interactions/receiving-and-responding#delete-original-interaction-response)</target>
      </trans-unit>
      <trans-unit id="58414" translate="no">
        <source>[`internal.deleteOwnReaction()`](https://discord.com/developers/docs/resources/channel#delete-own-reaction)</source>
        <target>[`internal.deleteOwnReaction()`](https://discord.com/developers/docs/resources/channel#delete-own-reaction)</target>
      </trans-unit>
      <trans-unit id="58416" translate="no">
        <source>[`internal.deleteStageInstance()`](https://discord.com/developers/docs/resources/stage-instance#delete-stage-instance)</source>
        <target>[`internal.deleteStageInstance()`](https://discord.com/developers/docs/resources/stage-instance#delete-stage-instance)</target>
      </trans-unit>
      <trans-unit id="58418" translate="no">
        <source>[`internal.deleteUserReaction()`](https://discord.com/developers/docs/resources/channel#delete-user-reaction)</source>
        <target>[`internal.deleteUserReaction()`](https://discord.com/developers/docs/resources/channel#delete-user-reaction)</target>
      </trans-unit>
      <trans-unit id="58420" translate="no">
        <source>[`internal.deleteWebhook()`](https://discord.com/developers/docs/resources/webhook#delete-webhook)</source>
        <target>[`internal.deleteWebhook()`](https://discord.com/developers/docs/resources/webhook#delete-webhook)</target>
      </trans-unit>
      <trans-unit id="58422" translate="no">
        <source>[`internal.deleteWebhookMessage()`](https://discord.com/developers/docs/resources/webhook#delete-webhook-message)</source>
        <target>[`internal.deleteWebhookMessage()`](https://discord.com/developers/docs/resources/webhook#delete-webhook-message)</target>
      </trans-unit>
      <trans-unit id="58424" translate="no">
        <source>[`internal.deleteWebhookwithToken()`](https://discord.com/developers/docs/resources/webhook#delete-webhook-with-token)</source>
        <target>[`internal.deleteWebhookwithToken()`](https://discord.com/developers/docs/resources/webhook#delete-webhook-with-token)</target>
      </trans-unit>
      <trans-unit id="58426" translate="no">
        <source>[`internal.editApplicationCommandPermissions()`](https://discord.com/developers/docs/interactions/application-commands#edit-application-command-permissions)</source>
        <target>[`internal.editApplicationCommandPermissions()`](https://discord.com/developers/docs/interactions/application-commands#edit-application-command-permissions)</target>
      </trans-unit>
      <trans-unit id="58428" translate="no">
        <source>[`internal.editChannelPermissions()`](https://discord.com/developers/docs/resources/channel#edit-channel-permissions)</source>
        <target>[`internal.editChannelPermissions()`](https://discord.com/developers/docs/resources/channel#edit-channel-permissions)</target>
      </trans-unit>
      <trans-unit id="58430" translate="no">
        <source>[`internal.editFollowupMessage()`](https://discord.com/developers/docs/interactions/receiving-and-responding#edit-followup-message)</source>
        <target>[`internal.editFollowupMessage()`](https://discord.com/developers/docs/interactions/receiving-and-responding#edit-followup-message)</target>
      </trans-unit>
      <trans-unit id="58432" translate="no">
        <source>[`internal.editGlobalApplicationCommand()`](https://discord.com/developers/docs/interactions/application-commands#edit-global-application-command)</source>
        <target>[`internal.editGlobalApplicationCommand()`](https://discord.com/developers/docs/interactions/application-commands#edit-global-application-command)</target>
      </trans-unit>
      <trans-unit id="58434" translate="no">
        <source>[`internal.editGuildApplicationCommand()`](https://discord.com/developers/docs/interactions/application-commands#edit-guild-application-command)</source>
        <target>[`internal.editGuildApplicationCommand()`](https://discord.com/developers/docs/interactions/application-commands#edit-guild-application-command)</target>
      </trans-unit>
      <trans-unit id="58436" translate="no">
        <source>[`internal.editMessage()`](https://discord.com/developers/docs/resources/channel#edit-message)</source>
        <target>[`internal.editMessage()`](https://discord.com/developers/docs/resources/channel#edit-message)</target>
      </trans-unit>
      <trans-unit id="58438" translate="no">
        <source>[`internal.editOriginalInteractionResponse()`](https://discord.com/developers/docs/interactions/receiving-and-responding#edit-original-interaction-response)</source>
        <target>[`internal.editOriginalInteractionResponse()`](https://discord.com/developers/docs/interactions/receiving-and-responding#edit-original-interaction-response)</target>
      </trans-unit>
      <trans-unit id="58440" translate="no">
        <source>[`internal.editWebhookMessage()`](https://discord.com/developers/docs/resources/webhook#edit-webhook-message)</source>
        <target>[`internal.editWebhookMessage()`](https://discord.com/developers/docs/resources/webhook#edit-webhook-message)</target>
      </trans-unit>
      <trans-unit id="58442" translate="no">
        <source>[`internal.executeGitHubCompatibleWebhook()`](https://discord.com/developers/docs/resources/webhook#execute-githubcompatible-webhook)</source>
        <target>[`internal.executeGitHubCompatibleWebhook()`](https://discord.com/developers/docs/resources/webhook#execute-githubcompatible-webhook)</target>
      </trans-unit>
      <trans-unit id="58444" translate="no">
        <source>[`internal.executeSlackCompatibleWebhook()`](https://discord.com/developers/docs/resources/webhook#execute-slackcompatible-webhook)</source>
        <target>[`internal.executeSlackCompatibleWebhook()`](https://discord.com/developers/docs/resources/webhook#execute-slackcompatible-webhook)</target>
      </trans-unit>
      <trans-unit id="58446" translate="no">
        <source>[`internal.executeWebhook()`](https://discord.com/developers/docs/resources/webhook#execute-webhook)</source>
        <target>[`internal.executeWebhook()`](https://discord.com/developers/docs/resources/webhook#execute-webhook)</target>
      </trans-unit>
      <trans-unit id="58448" translate="no">
        <source>[`internal.followNewsChannel()`](https://discord.com/developers/docs/resources/channel#follow-news-channel)</source>
        <target>[`internal.followNewsChannel()`](https://discord.com/developers/docs/resources/channel#follow-news-channel)</target>
      </trans-unit>
      <trans-unit id="58450" translate="no">
        <source>[`internal.getApplicationCommandPermissions()`](https://discord.com/developers/docs/interactions/application-commands#get-application-command-permissions)</source>
        <target>[`internal.getApplicationCommandPermissions()`](https://discord.com/developers/docs/interactions/application-commands#get-application-command-permissions)</target>
      </trans-unit>
      <trans-unit id="58452" translate="no">
        <source>[`internal.getApplicationRoleConnectionMetadataRecords()`](https://discord.com/developers/docs/resources/application-role-connection-metadata#get-application-role-connection-metadata-records)</source>
        <target>[`internal.getApplicationRoleConnectionMetadataRecords()`](https://discord.com/developers/docs/resources/application-role-connection-metadata#get-application-role-connection-metadata-records)</target>
      </trans-unit>
      <trans-unit id="58454" translate="no">
        <source>[`internal.getAutoModerationRule()`](https://discord.com/developers/docs/resources/auto-moderation#get-auto-moderation-rule)</source>
        <target>[`internal.getAutoModerationRule()`](https://discord.com/developers/docs/resources/auto-moderation#get-auto-moderation-rule)</target>
      </trans-unit>
      <trans-unit id="58456" translate="no">
        <source>[`internal.getChannel()`](https://discord.com/developers/docs/resources/channel#get-channel)</source>
        <target>[`internal.getChannel()`](https://discord.com/developers/docs/resources/channel#get-channel)</target>
      </trans-unit>
      <trans-unit id="58458" translate="no">
        <source>[`internal.getChannelInvites()`](https://discord.com/developers/docs/resources/channel#get-channel-invites)</source>
        <target>[`internal.getChannelInvites()`](https://discord.com/developers/docs/resources/channel#get-channel-invites)</target>
      </trans-unit>
      <trans-unit id="58460" translate="no">
        <source>[`internal.getChannelMessage()`](https://discord.com/developers/docs/resources/channel#get-channel-message)</source>
        <target>[`internal.getChannelMessage()`](https://discord.com/developers/docs/resources/channel#get-channel-message)</target>
      </trans-unit>
      <trans-unit id="58462" translate="no">
        <source>[`internal.getChannelMessages()`](https://discord.com/developers/docs/resources/channel#get-channel-messages)</source>
        <target>[`internal.getChannelMessages()`](https://discord.com/developers/docs/resources/channel#get-channel-messages)</target>
      </trans-unit>
      <trans-unit id="58464" translate="no">
        <source>[`internal.getChannelWebhooks()`](https://discord.com/developers/docs/resources/webhook#get-channel-webhooks)</source>
        <target>[`internal.getChannelWebhooks()`](https://discord.com/developers/docs/resources/webhook#get-channel-webhooks)</target>
      </trans-unit>
      <trans-unit id="58466" translate="no">
        <source>[`internal.getCurrentAuthorizationInformation()`](https://discord.com/developers/docs/topics/oauth2#get-current-authorization-information)</source>
        <target>[`internal.getCurrentAuthorizationInformation()`](https://discord.com/developers/docs/topics/oauth2#get-current-authorization-information)</target>
      </trans-unit>
      <trans-unit id="58468" translate="no">
        <source>[`internal.getCurrentBotApplicationInformation()`](https://discord.com/developers/docs/topics/oauth2#get-current-bot-application-information)</source>
        <target>[`internal.getCurrentBotApplicationInformation()`](https://discord.com/developers/docs/topics/oauth2#get-current-bot-application-information)</target>
      </trans-unit>
      <trans-unit id="58470" translate="no">
        <source>[`internal.getCurrentUser()`](https://discord.com/developers/docs/resources/user#get-current-user)</source>
        <target>[`internal.getCurrentUser()`](https://discord.com/developers/docs/resources/user#get-current-user)</target>
      </trans-unit>
      <trans-unit id="58472" translate="no">
        <source>[`internal.getCurrentUserGuildMember()`](https://discord.com/developers/docs/resources/user#get-current-user-guild-member)</source>
        <target>[`internal.getCurrentUserGuildMember()`](https://discord.com/developers/docs/resources/user#get-current-user-guild-member)</target>
      </trans-unit>
      <trans-unit id="58474" translate="no">
        <source>[`internal.getCurrentUserGuilds()`](https://discord.com/developers/docs/resources/user#get-current-user-guilds)</source>
        <target>[`internal.getCurrentUserGuilds()`](https://discord.com/developers/docs/resources/user#get-current-user-guilds)</target>
      </trans-unit>
      <trans-unit id="58476" translate="no">
        <source>[`internal.getFollowupMessage()`](https://discord.com/developers/docs/interactions/receiving-and-responding#get-followup-message)</source>
        <target>[`internal.getFollowupMessage()`](https://discord.com/developers/docs/interactions/receiving-and-responding#get-followup-message)</target>
      </trans-unit>
      <trans-unit id="58478" translate="no">
        <source>[`internal.getGateway()`](https://discord.com/developers/docs/topics/gateway#get-gateway)</source>
        <target>[`internal.getGateway()`](https://discord.com/developers/docs/topics/gateway#get-gateway)</target>
      </trans-unit>
      <trans-unit id="58480" translate="no">
        <source>[`internal.getGatewayBot()`](https://discord.com/developers/docs/topics/gateway#get-gateway-bot)</source>
        <target>[`internal.getGatewayBot()`](https://discord.com/developers/docs/topics/gateway#get-gateway-bot)</target>
      </trans-unit>
      <trans-unit id="58482" translate="no">
        <source>[`internal.getGlobalApplicationCommand()`](https://discord.com/developers/docs/interactions/application-commands#get-global-application-command)</source>
        <target>[`internal.getGlobalApplicationCommand()`](https://discord.com/developers/docs/interactions/application-commands#get-global-application-command)</target>
      </trans-unit>
      <trans-unit id="58484" translate="no">
        <source>[`internal.getGlobalApplicationCommands()`](https://discord.com/developers/docs/interactions/application-commands#get-global-application-commands)</source>
        <target>[`internal.getGlobalApplicationCommands()`](https://discord.com/developers/docs/interactions/application-commands#get-global-application-commands)</target>
      </trans-unit>
      <trans-unit id="58486" translate="no">
        <source>[`internal.getGuild()`](https://discord.com/developers/docs/resources/guild#get-guild)</source>
        <target>[`internal.getGuild()`](https://discord.com/developers/docs/resources/guild#get-guild)</target>
      </trans-unit>
      <trans-unit id="58488" translate="no">
        <source>[`internal.getGuildApplicationCommand()`](https://discord.com/developers/docs/interactions/application-commands#get-guild-application-command)</source>
        <target>[`internal.getGuildApplicationCommand()`](https://discord.com/developers/docs/interactions/application-commands#get-guild-application-command)</target>
      </trans-unit>
      <trans-unit id="58490" translate="no">
        <source>[`internal.getGuildApplicationCommandPermissions()`](https://discord.com/developers/docs/interactions/application-commands#get-guild-application-command-permissions)</source>
        <target>[`internal.getGuildApplicationCommandPermissions()`](https://discord.com/developers/docs/interactions/application-commands#get-guild-application-command-permissions)</target>
      </trans-unit>
      <trans-unit id="58492" translate="no">
        <source>[`internal.getGuildApplicationCommands()`](https://discord.com/developers/docs/interactions/application-commands#get-guild-application-commands)</source>
        <target>[`internal.getGuildApplicationCommands()`](https://discord.com/developers/docs/interactions/application-commands#get-guild-application-commands)</target>
      </trans-unit>
      <trans-unit id="58494" translate="no">
        <source>[`internal.getGuildAuditLog()`](https://discord.com/developers/docs/resources/audit-log#get-guild-audit-log)</source>
        <target>[`internal.getGuildAuditLog()`](https://discord.com/developers/docs/resources/audit-log#get-guild-audit-log)</target>
      </trans-unit>
      <trans-unit id="58496" translate="no">
        <source>[`internal.getGuildBan()`](https://discord.com/developers/docs/resources/guild#get-guild-ban)</source>
        <target>[`internal.getGuildBan()`](https://discord.com/developers/docs/resources/guild#get-guild-ban)</target>
      </trans-unit>
      <trans-unit id="58498" translate="no">
        <source>[`internal.getGuildBans()`](https://discord.com/developers/docs/resources/guild#get-guild-bans)</source>
        <target>[`internal.getGuildBans()`](https://discord.com/developers/docs/resources/guild#get-guild-bans)</target>
      </trans-unit>
      <trans-unit id="58500" translate="no">
        <source>[`internal.getGuildChannels()`](https://discord.com/developers/docs/resources/guild#get-guild-channels)</source>
        <target>[`internal.getGuildChannels()`](https://discord.com/developers/docs/resources/guild#get-guild-channels)</target>
      </trans-unit>
      <trans-unit id="58502" translate="no">
        <source>[`internal.getGuildEmoji()`](https://discord.com/developers/docs/resources/emoji#get-guild-emoji)</source>
        <target>[`internal.getGuildEmoji()`](https://discord.com/developers/docs/resources/emoji#get-guild-emoji)</target>
      </trans-unit>
      <trans-unit id="58504" translate="no">
        <source>[`internal.getGuildIntegrations()`](https://discord.com/developers/docs/resources/guild#get-guild-integrations)</source>
        <target>[`internal.getGuildIntegrations()`](https://discord.com/developers/docs/resources/guild#get-guild-integrations)</target>
      </trans-unit>
      <trans-unit id="58506" translate="no">
        <source>[`internal.getGuildInvites()`](https://discord.com/developers/docs/resources/guild#get-guild-invites)</source>
        <target>[`internal.getGuildInvites()`](https://discord.com/developers/docs/resources/guild#get-guild-invites)</target>
      </trans-unit>
      <trans-unit id="58508" translate="no">
        <source>[`internal.getGuildMember()`](https://discord.com/developers/docs/resources/guild#get-guild-member)</source>
        <target>[`internal.getGuildMember()`](https://discord.com/developers/docs/resources/guild#get-guild-member)</target>
      </trans-unit>
      <trans-unit id="58510" translate="no">
        <source>[`internal.getGuildPreview()`](https://discord.com/developers/docs/resources/guild#get-guild-preview)</source>
        <target>[`internal.getGuildPreview()`](https://discord.com/developers/docs/resources/guild#get-guild-preview)</target>
      </trans-unit>
      <trans-unit id="58512" translate="no">
        <source>[`internal.getGuildPruneCount()`](https://discord.com/developers/docs/resources/guild#get-guild-prune-count)</source>
        <target>[`internal.getGuildPruneCount()`](https://discord.com/developers/docs/resources/guild#get-guild-prune-count)</target>
      </trans-unit>
      <trans-unit id="58514" translate="no">
        <source>[`internal.getGuildRoles()`](https://discord.com/developers/docs/resources/guild#get-guild-roles)</source>
        <target>[`internal.getGuildRoles()`](https://discord.com/developers/docs/resources/guild#get-guild-roles)</target>
      </trans-unit>
      <trans-unit id="58516" translate="no">
        <source>[`internal.getGuildScheduledEvent()`](https://discord.com/developers/docs/resources/guild-scheduled-event#get-guild-scheduled-event)</source>
        <target>[`internal.getGuildScheduledEvent()`](https://discord.com/developers/docs/resources/guild-scheduled-event#get-guild-scheduled-event)</target>
      </trans-unit>
      <trans-unit id="58518" translate="no">
        <source>[`internal.getGuildScheduledEventUsers()`](https://discord.com/developers/docs/resources/guild-scheduled-event#get-guild-scheduled-event-users)</source>
        <target>[`internal.getGuildScheduledEventUsers()`](https://discord.com/developers/docs/resources/guild-scheduled-event#get-guild-scheduled-event-users)</target>
      </trans-unit>
      <trans-unit id="58520" translate="no">
        <source>[`internal.getGuildSticker()`](https://discord.com/developers/docs/resources/sticker#get-guild-sticker)</source>
        <target>[`internal.getGuildSticker()`](https://discord.com/developers/docs/resources/sticker#get-guild-sticker)</target>
      </trans-unit>
      <trans-unit id="58522" translate="no">
        <source>[`internal.getGuildTemplate()`](https://discord.com/developers/docs/resources/guild-template#get-guild-template)</source>
        <target>[`internal.getGuildTemplate()`](https://discord.com/developers/docs/resources/guild-template#get-guild-template)</target>
      </trans-unit>
      <trans-unit id="58524" translate="no">
        <source>[`internal.getGuildTemplates()`](https://discord.com/developers/docs/resources/guild-template#get-guild-templates)</source>
        <target>[`internal.getGuildTemplates()`](https://discord.com/developers/docs/resources/guild-template#get-guild-templates)</target>
      </trans-unit>
      <trans-unit id="58526" translate="no">
        <source>[`internal.getGuildVanityURL()`](https://discord.com/developers/docs/resources/guild#get-guild-vanity-url)</source>
        <target>[`internal.getGuildVanityURL()`](https://discord.com/developers/docs/resources/guild#get-guild-vanity-url)</target>
      </trans-unit>
      <trans-unit id="58528" translate="no">
        <source>[`internal.getGuildVoiceRegions()`](https://discord.com/developers/docs/resources/guild#get-guild-voice-regions)</source>
        <target>[`internal.getGuildVoiceRegions()`](https://discord.com/developers/docs/resources/guild#get-guild-voice-regions)</target>
      </trans-unit>
      <trans-unit id="58530" translate="no">
        <source>[`internal.getGuildWebhooks()`](https://discord.com/developers/docs/resources/webhook#get-guild-webhooks)</source>
        <target>[`internal.getGuildWebhooks()`](https://discord.com/developers/docs/resources/webhook#get-guild-webhooks)</target>
      </trans-unit>
      <trans-unit id="58532" translate="no">
        <source>[`internal.getGuildWelcomeScreen()`](https://discord.com/developers/docs/resources/guild#get-guild-welcome-screen)</source>
        <target>[`internal.getGuildWelcomeScreen()`](https://discord.com/developers/docs/resources/guild#get-guild-welcome-screen)</target>
      </trans-unit>
      <trans-unit id="58534" translate="no">
        <source>[`internal.getGuildWidget()`](https://discord.com/developers/docs/resources/guild#get-guild-widget)</source>
        <target>[`internal.getGuildWidget()`](https://discord.com/developers/docs/resources/guild#get-guild-widget)</target>
      </trans-unit>
      <trans-unit id="58536" translate="no">
        <source>[`internal.getGuildWidgetImage()`](https://discord.com/developers/docs/resources/guild#get-guild-widget-image)</source>
        <target>[`internal.getGuildWidgetImage()`](https://discord.com/developers/docs/resources/guild#get-guild-widget-image)</target>
      </trans-unit>
      <trans-unit id="58538" translate="no">
        <source>[`internal.getGuildWidgetSettings()`](https://discord.com/developers/docs/resources/guild#get-guild-widget-settings)</source>
        <target>[`internal.getGuildWidgetSettings()`](https://discord.com/developers/docs/resources/guild#get-guild-widget-settings)</target>
      </trans-unit>
      <trans-unit id="58540" translate="no">
        <source>[`internal.getInvite()`](https://discord.com/developers/docs/resources/invite#get-invite)</source>
        <target>[`internal.getInvite()`](https://discord.com/developers/docs/resources/invite#get-invite)</target>
      </trans-unit>
      <trans-unit id="58542" translate="no">
        <source>[`internal.getOriginalInteractionResponse()`](https://discord.com/developers/docs/interactions/receiving-and-responding#get-original-interaction-response)</source>
        <target>[`internal.getOriginalInteractionResponse()`](https://discord.com/developers/docs/interactions/receiving-and-responding#get-original-interaction-response)</target>
      </trans-unit>
      <trans-unit id="58544" translate="no">
        <source>[`internal.getPinnedMessages()`](https://discord.com/developers/docs/resources/channel#get-pinned-messages)</source>
        <target>[`internal.getPinnedMessages()`](https://discord.com/developers/docs/resources/channel#get-pinned-messages)</target>
      </trans-unit>
      <trans-unit id="58546" translate="no">
        <source>[`internal.getReactions()`](https://discord.com/developers/docs/resources/channel#get-reactions)</source>
        <target>[`internal.getReactions()`](https://discord.com/developers/docs/resources/channel#get-reactions)</target>
      </trans-unit>
      <trans-unit id="58548" translate="no">
        <source>[`internal.getStageInstance()`](https://discord.com/developers/docs/resources/stage-instance#get-stage-instance)</source>
        <target>[`internal.getStageInstance()`](https://discord.com/developers/docs/resources/stage-instance#get-stage-instance)</target>
      </trans-unit>
      <trans-unit id="58550" translate="no">
        <source>[`internal.getSticker()`](https://discord.com/developers/docs/resources/sticker#get-sticker)</source>
        <target>[`internal.getSticker()`](https://discord.com/developers/docs/resources/sticker#get-sticker)</target>
      </trans-unit>
      <trans-unit id="58552" translate="no">
        <source>[`internal.getThreadMember()`](https://discord.com/developers/docs/resources/channel#get-thread-member)</source>
        <target>[`internal.getThreadMember()`](https://discord.com/developers/docs/resources/channel#get-thread-member)</target>
      </trans-unit>
      <trans-unit id="58554" translate="no">
        <source>[`internal.getUser()`](https://discord.com/developers/docs/resources/user#get-user)</source>
        <target>[`internal.getUser()`](https://discord.com/developers/docs/resources/user#get-user)</target>
      </trans-unit>
      <trans-unit id="58556" translate="no">
        <source>[`internal.getUserConnections()`](https://discord.com/developers/docs/resources/user#get-user-connections)</source>
        <target>[`internal.getUserConnections()`](https://discord.com/developers/docs/resources/user#get-user-connections)</target>
      </trans-unit>
      <trans-unit id="58558" translate="no">
        <source>[`internal.getWebhook()`](https://discord.com/developers/docs/resources/webhook#get-webhook)</source>
        <target>[`internal.getWebhook()`](https://discord.com/developers/docs/resources/webhook#get-webhook)</target>
      </trans-unit>
      <trans-unit id="58560" translate="no">
        <source>[`internal.getWebhookMessage()`](https://discord.com/developers/docs/resources/webhook#get-webhook-message)</source>
        <target>[`internal.getWebhookMessage()`](https://discord.com/developers/docs/resources/webhook#get-webhook-message)</target>
      </trans-unit>
      <trans-unit id="58562" translate="no">
        <source>[`internal.getWebhookWithToken()`](https://discord.com/developers/docs/resources/webhook#get-webhook-with-token)</source>
        <target>[`internal.getWebhookWithToken()`](https://discord.com/developers/docs/resources/webhook#get-webhook-with-token)</target>
      </trans-unit>
      <trans-unit id="58564" translate="no">
        <source>[`internal.groupDMAddRecipient()`](https://discord.com/developers/docs/resources/channel#group-dm-add-recipient)</source>
        <target>[`internal.groupDMAddRecipient()`](https://discord.com/developers/docs/resources/channel#group-dm-add-recipient)</target>
      </trans-unit>
      <trans-unit id="58566" translate="no">
        <source>[`internal.groupDMRemoveRecipient()`](https://discord.com/developers/docs/resources/channel#group-dm-remove-recipient)</source>
        <target>[`internal.groupDMRemoveRecipient()`](https://discord.com/developers/docs/resources/channel#group-dm-remove-recipient)</target>
      </trans-unit>
      <trans-unit id="58568" translate="no">
        <source>[`internal.joinThread()`](https://discord.com/developers/docs/resources/channel#join-thread)</source>
        <target>[`internal.joinThread()`](https://discord.com/developers/docs/resources/channel#join-thread)</target>
      </trans-unit>
      <trans-unit id="58570" translate="no">
        <source>[`internal.leaveGuild()`](https://discord.com/developers/docs/resources/user#leave-guild)</source>
        <target>[`internal.leaveGuild()`](https://discord.com/developers/docs/resources/user#leave-guild)</target>
      </trans-unit>
      <trans-unit id="58572" translate="no">
        <source>[`internal.leaveThread()`](https://discord.com/developers/docs/resources/channel#leave-thread)</source>
        <target>[`internal.leaveThread()`](https://discord.com/developers/docs/resources/channel#leave-thread)</target>
      </trans-unit>
      <trans-unit id="58574" translate="no">
        <source>[`internal.listActiveGuildThreads()`](https://discord.com/developers/docs/resources/guild#list-active-guild-threads)</source>
        <target>[`internal.listActiveGuildThreads()`](https://discord.com/developers/docs/resources/guild#list-active-guild-threads)</target>
      </trans-unit>
      <trans-unit id="58576" translate="no">
        <source>[`internal.listActiveThreads()`](https://discord.com/developers/docs/resources/channel#list-active-threads)</source>
        <target>[`internal.listActiveThreads()`](https://discord.com/developers/docs/resources/channel#list-active-threads)</target>
      </trans-unit>
      <trans-unit id="58578" translate="no">
        <source>[`internal.listAutoModerationRules()`](https://discord.com/developers/docs/resources/auto-moderation#list-auto-moderation-rules-for-guild)</source>
        <target>[`internal.listAutoModerationRules()`](https://discord.com/developers/docs/resources/auto-moderation#list-auto-moderation-rules-for-guild)</target>
      </trans-unit>
      <trans-unit id="58580" translate="no">
        <source>[`internal.listGuildEmojis()`](https://discord.com/developers/docs/resources/emoji#list-guild-emojis)</source>
        <target>[`internal.listGuildEmojis()`](https://discord.com/developers/docs/resources/emoji#list-guild-emojis)</target>
      </trans-unit>
      <trans-unit id="58582" translate="no">
        <source>[`internal.listGuildMembers()`](https://discord.com/developers/docs/resources/guild#list-guild-members)</source>
        <target>[`internal.listGuildMembers()`](https://discord.com/developers/docs/resources/guild#list-guild-members)</target>
      </trans-unit>
      <trans-unit id="58584" translate="no">
        <source>[`internal.listGuildStickers()`](https://discord.com/developers/docs/resources/sticker#list-guild-stickers)</source>
        <target>[`internal.listGuildStickers()`](https://discord.com/developers/docs/resources/sticker#list-guild-stickers)</target>
      </trans-unit>
      <trans-unit id="58586" translate="no">
        <source>[`internal.listJoinedPrivateArchivedThreads()`](https://discord.com/developers/docs/resources/channel#list-joined-private-archived-threads)</source>
        <target>[`internal.listJoinedPrivateArchivedThreads()`](https://discord.com/developers/docs/resources/channel#list-joined-private-archived-threads)</target>
      </trans-unit>
      <trans-unit id="58588" translate="no">
        <source>[`internal.listNitroStickerPacks()`](https://discord.com/developers/docs/resources/sticker#list-nitro-sticker-packs)</source>
        <target>[`internal.listNitroStickerPacks()`](https://discord.com/developers/docs/resources/sticker#list-nitro-sticker-packs)</target>
      </trans-unit>
      <trans-unit id="58590" translate="no">
        <source>[`internal.listPrivateArchivedThreads()`](https://discord.com/developers/docs/resources/channel#list-private-archived-threads)</source>
        <target>[`internal.listPrivateArchivedThreads()`](https://discord.com/developers/docs/resources/channel#list-private-archived-threads)</target>
      </trans-unit>
      <trans-unit id="58592" translate="no">
        <source>[`internal.listPublicArchivedThreads()`](https://discord.com/developers/docs/resources/channel#list-public-archived-threads)</source>
        <target>[`internal.listPublicArchivedThreads()`](https://discord.com/developers/docs/resources/channel#list-public-archived-threads)</target>
      </trans-unit>
      <trans-unit id="58594" translate="no">
        <source>[`internal.listScheduledEventsforGuild()`](https://discord.com/developers/docs/resources/guild-scheduled-event#list-scheduled-events-for-guild)</source>
        <target>[`internal.listScheduledEventsforGuild()`](https://discord.com/developers/docs/resources/guild-scheduled-event#list-scheduled-events-for-guild)</target>
      </trans-unit>
      <trans-unit id="58596" translate="no">
        <source>[`internal.listThreadMembers()`](https://discord.com/developers/docs/resources/channel#list-thread-members)</source>
        <target>[`internal.listThreadMembers()`](https://discord.com/developers/docs/resources/channel#list-thread-members)</target>
      </trans-unit>
      <trans-unit id="58598" translate="no">
        <source>[`internal.listVoiceRegions()`](https://discord.com/developers/docs/resources/voice#list-voice-regions)</source>
        <target>[`internal.listVoiceRegions()`](https://discord.com/developers/docs/resources/voice#list-voice-regions)</target>
      </trans-unit>
      <trans-unit id="58600" translate="no">
        <source>[`internal.modifyAutoModerationRule()`](https://discord.com/developers/docs/resources/auto-moderation#modify-auto-moderation-rule)</source>
        <target>[`internal.modifyAutoModerationRule()`](https://discord.com/developers/docs/resources/auto-moderation#modify-auto-moderation-rule)</target>
      </trans-unit>
      <trans-unit id="58602" translate="no">
        <source>[`internal.modifyChannel()`](https://discord.com/developers/docs/resources/channel#modify-channel)</source>
        <target>[`internal.modifyChannel()`](https://discord.com/developers/docs/resources/channel#modify-channel)</target>
      </trans-unit>
      <trans-unit id="58604" translate="no">
        <source>[`internal.modifyCurrentMember()`](https://discord.com/developers/docs/resources/guild#modify-current-member)</source>
        <target>[`internal.modifyCurrentMember()`](https://discord.com/developers/docs/resources/guild#modify-current-member)</target>
      </trans-unit>
      <trans-unit id="58606" translate="no">
        <source>[`internal.modifyCurrentUser()`](https://discord.com/developers/docs/resources/user#modify-current-user)</source>
        <target>[`internal.modifyCurrentUser()`](https://discord.com/developers/docs/resources/user#modify-current-user)</target>
      </trans-unit>
      <trans-unit id="58608" translate="no">
        <source>[`internal.modifyCurrentUserVoiceState()`](https://discord.com/developers/docs/resources/guild#modify-current-user-voice-state)</source>
        <target>[`internal.modifyCurrentUserVoiceState()`](https://discord.com/developers/docs/resources/guild#modify-current-user-voice-state)</target>
      </trans-unit>
      <trans-unit id="58610" translate="no">
        <source>[`internal.modifyGuild()`](https://discord.com/developers/docs/resources/guild#modify-guild)</source>
        <target>[`internal.modifyGuild()`](https://discord.com/developers/docs/resources/guild#modify-guild)</target>
      </trans-unit>
      <trans-unit id="58612" translate="no">
        <source>[`internal.modifyGuildChannelPositions()`](https://discord.com/developers/docs/resources/guild#modify-guild-channel-positions)</source>
        <target>[`internal.modifyGuildChannelPositions()`](https://discord.com/developers/docs/resources/guild#modify-guild-channel-positions)</target>
      </trans-unit>
      <trans-unit id="58614" translate="no">
        <source>[`internal.modifyGuildEmoji()`](https://discord.com/developers/docs/resources/emoji#modify-guild-emoji)</source>
        <target>[`internal.modifyGuildEmoji()`](https://discord.com/developers/docs/resources/emoji#modify-guild-emoji)</target>
      </trans-unit>
      <trans-unit id="58616" translate="no">
        <source>[`internal.modifyGuildMember()`](https://discord.com/developers/docs/resources/guild#modify-guild-member)</source>
        <target>[`internal.modifyGuildMember()`](https://discord.com/developers/docs/resources/guild#modify-guild-member)</target>
      </trans-unit>
      <trans-unit id="58618" translate="no">
        <source>[`internal.modifyGuildRole()`](https://discord.com/developers/docs/resources/guild#modify-guild-role)</source>
        <target>[`internal.modifyGuildRole()`](https://discord.com/developers/docs/resources/guild#modify-guild-role)</target>
      </trans-unit>
      <trans-unit id="58620" translate="no">
        <source>[`internal.modifyGuildRolePositions()`](https://discord.com/developers/docs/resources/guild#modify-guild-role-positions)</source>
        <target>[`internal.modifyGuildRolePositions()`](https://discord.com/developers/docs/resources/guild#modify-guild-role-positions)</target>
      </trans-unit>
      <trans-unit id="58622" translate="no">
        <source>[`internal.modifyGuildScheduledEvent()`](https://discord.com/developers/docs/resources/guild-scheduled-event#modify-guild-scheduled-event)</source>
        <target>[`internal.modifyGuildScheduledEvent()`](https://discord.com/developers/docs/resources/guild-scheduled-event#modify-guild-scheduled-event)</target>
      </trans-unit>
      <trans-unit id="58624" translate="no">
        <source>[`internal.modifyGuildSticker()`](https://discord.com/developers/docs/resources/sticker#modify-guild-sticker)</source>
        <target>[`internal.modifyGuildSticker()`](https://discord.com/developers/docs/resources/sticker#modify-guild-sticker)</target>
      </trans-unit>
      <trans-unit id="58626" translate="no">
        <source>[`internal.modifyGuildTemplate()`](https://discord.com/developers/docs/resources/guild-template#modify-guild-template)</source>
        <target>[`internal.modifyGuildTemplate()`](https://discord.com/developers/docs/resources/guild-template#modify-guild-template)</target>
      </trans-unit>
      <trans-unit id="58628" translate="no">
        <source>[`internal.modifyGuildWelcomeScreen()`](https://discord.com/developers/docs/resources/guild#modify-guild-welcome-screen)</source>
        <target>[`internal.modifyGuildWelcomeScreen()`](https://discord.com/developers/docs/resources/guild#modify-guild-welcome-screen)</target>
      </trans-unit>
      <trans-unit id="58630" translate="no">
        <source>[`internal.modifyGuildWidget()`](https://discord.com/developers/docs/resources/guild#modify-guild-widget)</source>
        <target>[`internal.modifyGuildWidget()`](https://discord.com/developers/docs/resources/guild#modify-guild-widget)</target>
      </trans-unit>
      <trans-unit id="58632" translate="no">
        <source>[`internal.modifyStageInstance()`](https://discord.com/developers/docs/resources/stage-instance#modify-stage-instance)</source>
        <target>[`internal.modifyStageInstance()`](https://discord.com/developers/docs/resources/stage-instance#modify-stage-instance)</target>
      </trans-unit>
      <trans-unit id="58634" translate="no">
        <source>[`internal.modifyUserVoiceState()`](https://discord.com/developers/docs/resources/guild#modify-user-voice-state)</source>
        <target>[`internal.modifyUserVoiceState()`](https://discord.com/developers/docs/resources/guild#modify-user-voice-state)</target>
      </trans-unit>
      <trans-unit id="58636" translate="no">
        <source>[`internal.modifyWebhook()`](https://discord.com/developers/docs/resources/webhook#modify-webhook)</source>
        <target>[`internal.modifyWebhook()`](https://discord.com/developers/docs/resources/webhook#modify-webhook)</target>
      </trans-unit>
      <trans-unit id="58638" translate="no">
        <source>[`internal.modifyWebhookWithToken()`](https://discord.com/developers/docs/resources/webhook#modify-webhook-with-token)</source>
        <target>[`internal.modifyWebhookWithToken()`](https://discord.com/developers/docs/resources/webhook#modify-webhook-with-token)</target>
      </trans-unit>
      <trans-unit id="58640" translate="no">
        <source>[`internal.pinMessage()`](https://discord.com/developers/docs/resources/channel#pin-message)</source>
        <target>[`internal.pinMessage()`](https://discord.com/developers/docs/resources/channel#pin-message)</target>
      </trans-unit>
      <trans-unit id="58642" translate="no">
        <source>[`internal.removeGuildBan()`](https://discord.com/developers/docs/resources/guild#remove-guild-ban)</source>
        <target>[`internal.removeGuildBan()`](https://discord.com/developers/docs/resources/guild#remove-guild-ban)</target>
      </trans-unit>
      <trans-unit id="58644" translate="no">
        <source>[`internal.removeGuildMember()`](https://discord.com/developers/docs/resources/guild#remove-guild-member)</source>
        <target>[`internal.removeGuildMember()`](https://discord.com/developers/docs/resources/guild#remove-guild-member)</target>
      </trans-unit>
      <trans-unit id="58646" translate="no">
        <source>[`internal.removeGuildMemberRole()`](https://discord.com/developers/docs/resources/guild#remove-guild-member-role)</source>
        <target>[`internal.removeGuildMemberRole()`](https://discord.com/developers/docs/resources/guild#remove-guild-member-role)</target>
      </trans-unit>
      <trans-unit id="58648" translate="no">
        <source>[`internal.removeThreadMember()`](https://discord.com/developers/docs/resources/channel#remove-thread-member)</source>
        <target>[`internal.removeThreadMember()`](https://discord.com/developers/docs/resources/channel#remove-thread-member)</target>
      </trans-unit>
      <trans-unit id="58650" translate="no">
        <source>[`internal.searchGuildMembers()`](https://discord.com/developers/docs/resources/guild#search-guild-members)</source>
        <target>[`internal.searchGuildMembers()`](https://discord.com/developers/docs/resources/guild#search-guild-members)</target>
      </trans-unit>
      <trans-unit id="58652" translate="no">
        <source>[`internal.startThreadFromMessage()`](https://discord.com/developers/docs/resources/channel#start-thread-from-message)</source>
        <target>[`internal.startThreadFromMessage()`](https://discord.com/developers/docs/resources/channel#start-thread-from-message)</target>
      </trans-unit>
      <trans-unit id="58654" translate="no">
        <source>[`internal.startThreadInForumChannel()`](https://discord.com/developers/docs/resources/channel#start-thread-in-forum-channel)</source>
        <target>[`internal.startThreadInForumChannel()`](https://discord.com/developers/docs/resources/channel#start-thread-in-forum-channel)</target>
      </trans-unit>
      <trans-unit id="58656" translate="no">
        <source>[`internal.startThreadWithoutMessage()`](https://discord.com/developers/docs/resources/channel#start-thread-without-message)</source>
        <target>[`internal.startThreadWithoutMessage()`](https://discord.com/developers/docs/resources/channel#start-thread-without-message)</target>
      </trans-unit>
      <trans-unit id="58658" translate="no">
        <source>[`internal.syncGuildTemplate()`](https://discord.com/developers/docs/resources/guild-template#sync-guild-template)</source>
        <target>[`internal.syncGuildTemplate()`](https://discord.com/developers/docs/resources/guild-template#sync-guild-template)</target>
      </trans-unit>
      <trans-unit id="58660" translate="no">
        <source>[`internal.triggerTypingIndicator()`](https://discord.com/developers/docs/resources/channel#trigger-typing-indicator)</source>
        <target>[`internal.triggerTypingIndicator()`](https://discord.com/developers/docs/resources/channel#trigger-typing-indicator)</target>
      </trans-unit>
      <trans-unit id="58662" translate="no">
        <source>[`internal.unpinMessage()`](https://discord.com/developers/docs/resources/channel#unpin-message)</source>
        <target>[`internal.unpinMessage()`](https://discord.com/developers/docs/resources/channel#unpin-message)</target>
      </trans-unit>
      <trans-unit id="58664" translate="no">
        <source>[`internal.updateApplicationRoleConnectionMetadataRecords()`](https://discord.com/developers/docs/resources/application-role-connection-metadata#update-application-role-connection-metadata-records)</source>
        <target>[`internal.updateApplicationRoleConnectionMetadataRecords()`](https://discord.com/developers/docs/resources/application-role-connection-metadata#update-application-role-connection-metadata-records)</target>
      </trans-unit>
      <trans-unit id="58666">
        <source>内部事件</source>
        <target state="needs-translation">内部事件</target>
      </trans-unit>
      <trans-unit id="58668">
        <source>[`discord/application-command-permissions-update`](https://discord.com/developers/docs/topics/gateway-events#application-command-permissions-update)</source>
        <target state="needs-translation">[`discord/application-command-permissions-update`](https://discord.com/developers/docs/topics/gateway-events#application-command-permissions-update)</target>
      </trans-unit>
      <trans-unit id="58670">
        <source>[`discord/auto-moderation-action-execution`](https://discord.com/developers/docs/topics/gateway-events#auto-moderation-action-execution)</source>
        <target state="needs-translation">[`discord/auto-moderation-action-execution`](https://discord.com/developers/docs/topics/gateway-events#auto-moderation-action-execution)</target>
      </trans-unit>
      <trans-unit id="58672">
        <source>[`discord/auto-moderation-rule-create`](https://discord.com/developers/docs/topics/gateway-events#auto-moderation-rule-create)</source>
        <target state="needs-translation">[`discord/auto-moderation-rule-create`](https://discord.com/developers/docs/topics/gateway-events#auto-moderation-rule-create)</target>
      </trans-unit>
      <trans-unit id="58674">
        <source>[`discord/auto-moderation-rule-delete`](https://discord.com/developers/docs/topics/gateway-events#auto-moderation-rule-delete)</source>
        <target state="needs-translation">[`discord/auto-moderation-rule-delete`](https://discord.com/developers/docs/topics/gateway-events#auto-moderation-rule-delete)</target>
      </trans-unit>
      <trans-unit id="58676">
        <source>[`discord/auto-moderation-rule-update`](https://discord.com/developers/docs/topics/gateway-events#auto-moderation-rule-update)</source>
        <target state="needs-translation">[`discord/auto-moderation-rule-update`](https://discord.com/developers/docs/topics/gateway-events#auto-moderation-rule-update)</target>
      </trans-unit>
      <trans-unit id="58678">
        <source>[`discord/channel-create`](https://discord.com/developers/docs/topics/gateway-events#channel-create)</source>
        <target state="needs-translation">[`discord/channel-create`](https://discord.com/developers/docs/topics/gateway-events#channel-create)</target>
      </trans-unit>
      <trans-unit id="58680">
        <source>[`discord/channel-delete`](https://discord.com/developers/docs/topics/gateway-events#channel-delete)</source>
        <target state="needs-translation">[`discord/channel-delete`](https://discord.com/developers/docs/topics/gateway-events#channel-delete)</target>
      </trans-unit>
      <trans-unit id="58682">
        <source>[`discord/channel-pins-update`](https://discord.com/developers/docs/topics/gateway-events#channel-pins-update)</source>
        <target state="needs-translation">[`discord/channel-pins-update`](https://discord.com/developers/docs/topics/gateway-events#channel-pins-update)</target>
      </trans-unit>
      <trans-unit id="58684">
        <source>[`discord/channel-update`](https://discord.com/developers/docs/topics/gateway-events#channel-update)</source>
        <target state="needs-translation">[`discord/channel-update`](https://discord.com/developers/docs/topics/gateway-events#channel-update)</target>
      </trans-unit>
      <trans-unit id="58686">
        <source>[`discord/guild-audit-log-entry-create`](https://discord.com/developers/docs/topics/gateway-events#guild-audit-log-entry-create)</source>
        <target state="needs-translation">[`discord/guild-audit-log-entry-create`](https://discord.com/developers/docs/topics/gateway-events#guild-audit-log-entry-create)</target>
      </trans-unit>
      <trans-unit id="58688">
        <source>[`discord/guild-ban-add`](https://discord.com/developers/docs/topics/gateway-events#guild-ban-add)</source>
        <target state="needs-translation">[`discord/guild-ban-add`](https://discord.com/developers/docs/topics/gateway-events#guild-ban-add)</target>
      </trans-unit>
      <trans-unit id="58690">
        <source>[`discord/guild-ban-remove`](https://discord.com/developers/docs/topics/gateway-events#guild-ban-remove)</source>
        <target state="needs-translation">[`discord/guild-ban-remove`](https://discord.com/developers/docs/topics/gateway-events#guild-ban-remove)</target>
      </trans-unit>
      <trans-unit id="58692">
        <source>[`discord/guild-create`](https://discord.com/developers/docs/topics/gateway-events#guild-create)</source>
        <target state="needs-translation">[`discord/guild-create`](https://discord.com/developers/docs/topics/gateway-events#guild-create)</target>
      </trans-unit>
      <trans-unit id="58694">
        <source>[`discord/guild-delete`](https://discord.com/developers/docs/topics/gateway-events#guild-delete)</source>
        <target state="needs-translation">[`discord/guild-delete`](https://discord.com/developers/docs/topics/gateway-events#guild-delete)</target>
      </trans-unit>
      <trans-unit id="58696">
        <source>[`discord/guild-emojis-update`](https://discord.com/developers/docs/topics/gateway-events#guild-emojis-update)</source>
        <target state="needs-translation">[`discord/guild-emojis-update`](https://discord.com/developers/docs/topics/gateway-events#guild-emojis-update)</target>
      </trans-unit>
      <trans-unit id="58698">
        <source>[`discord/guild-integrations-update`](https://discord.com/developers/docs/topics/gateway-events#guild-integrations-update)</source>
        <target state="needs-translation">[`discord/guild-integrations-update`](https://discord.com/developers/docs/topics/gateway-events#guild-integrations-update)</target>
      </trans-unit>
      <trans-unit id="58700">
        <source>[`discord/guild-member-add`](https://discord.com/developers/docs/topics/gateway-events#guild-member-add)</source>
        <target state="needs-translation">[`discord/guild-member-add`](https://discord.com/developers/docs/topics/gateway-events#guild-member-add)</target>
      </trans-unit>
      <trans-unit id="58702">
        <source>[`discord/guild-member-remove`](https://discord.com/developers/docs/topics/gateway-events#guild-member-remove)</source>
        <target state="needs-translation">[`discord/guild-member-remove`](https://discord.com/developers/docs/topics/gateway-events#guild-member-remove)</target>
      </trans-unit>
      <trans-unit id="58704">
        <source>[`discord/guild-member-update`](https://discord.com/developers/docs/topics/gateway-events#guild-member-update)</source>
        <target state="needs-translation">[`discord/guild-member-update`](https://discord.com/developers/docs/topics/gateway-events#guild-member-update)</target>
      </trans-unit>
      <trans-unit id="58706">
        <source>[`discord/guild-members-chunk`](https://discord.com/developers/docs/topics/gateway-events#guild-members-chunk)</source>
        <target state="needs-translation">[`discord/guild-members-chunk`](https://discord.com/developers/docs/topics/gateway-events#guild-members-chunk)</target>
      </trans-unit>
      <trans-unit id="58708">
        <source>[`discord/guild-role-create`](https://discord.com/developers/docs/topics/gateway-events#guild-role-create)</source>
        <target state="needs-translation">[`discord/guild-role-create`](https://discord.com/developers/docs/topics/gateway-events#guild-role-create)</target>
      </trans-unit>
      <trans-unit id="58710">
        <source>[`discord/guild-role-delete`](https://discord.com/developers/docs/topics/gateway-events#guild-role-delete)</source>
        <target state="needs-translation">[`discord/guild-role-delete`](https://discord.com/developers/docs/topics/gateway-events#guild-role-delete)</target>
      </trans-unit>
      <trans-unit id="58712">
        <source>[`discord/guild-role-update`](https://discord.com/developers/docs/topics/gateway-events#guild-role-update)</source>
        <target state="needs-translation">[`discord/guild-role-update`](https://discord.com/developers/docs/topics/gateway-events#guild-role-update)</target>
      </trans-unit>
      <trans-unit id="58714">
        <source>[`discord/guild-scheduled-event-create`](https://discord.com/developers/docs/topics/gateway-events#guild-scheduled-event-create)</source>
        <target state="needs-translation">[`discord/guild-scheduled-event-create`](https://discord.com/developers/docs/topics/gateway-events#guild-scheduled-event-create)</target>
      </trans-unit>
      <trans-unit id="58716">
        <source>[`discord/guild-scheduled-event-delete`](https://discord.com/developers/docs/topics/gateway-events#guild-scheduled-event-delete)</source>
        <target state="needs-translation">[`discord/guild-scheduled-event-delete`](https://discord.com/developers/docs/topics/gateway-events#guild-scheduled-event-delete)</target>
      </trans-unit>
      <trans-unit id="58718">
        <source>[`discord/guild-scheduled-event-update`](https://discord.com/developers/docs/topics/gateway-events#guild-scheduled-event-update)</source>
        <target state="needs-translation">[`discord/guild-scheduled-event-update`](https://discord.com/developers/docs/topics/gateway-events#guild-scheduled-event-update)</target>
      </trans-unit>
      <trans-unit id="58720">
        <source>[`discord/guild-scheduled-event-user-add`](https://discord.com/developers/docs/topics/gateway-events#guild-scheduled-event-user-add)</source>
        <target state="needs-translation">[`discord/guild-scheduled-event-user-add`](https://discord.com/developers/docs/topics/gateway-events#guild-scheduled-event-user-add)</target>
      </trans-unit>
      <trans-unit id="58722">
        <source>[`discord/guild-scheduled-event-user-remove`](https://discord.com/developers/docs/topics/gateway-events#guild-scheduled-event-user-remove)</source>
        <target state="needs-translation">[`discord/guild-scheduled-event-user-remove`](https://discord.com/developers/docs/topics/gateway-events#guild-scheduled-event-user-remove)</target>
      </trans-unit>
      <trans-unit id="58724">
        <source>[`discord/guild-stickers-update`](https://discord.com/developers/docs/topics/gateway-events#guild-stickers-update)</source>
        <target state="needs-translation">[`discord/guild-stickers-update`](https://discord.com/developers/docs/topics/gateway-events#guild-stickers-update)</target>
      </trans-unit>
      <trans-unit id="58726">
        <source>[`discord/guild-update`](https://discord.com/developers/docs/topics/gateway-events#guild-update)</source>
        <target state="needs-translation">[`discord/guild-update`](https://discord.com/developers/docs/topics/gateway-events#guild-update)</target>
      </trans-unit>
      <trans-unit id="58728">
        <source>[`discord/hello`](https://discord.com/developers/docs/topics/gateway-events#hello)</source>
        <target state="needs-translation">[`discord/hello`](https://discord.com/developers/docs/topics/gateway-events#hello)</target>
      </trans-unit>
      <trans-unit id="58730">
        <source>[`discord/integration-create`](https://discord.com/developers/docs/topics/gateway-events#integration-create)</source>
        <target state="needs-translation">[`discord/integration-create`](https://discord.com/developers/docs/topics/gateway-events#integration-create)</target>
      </trans-unit>
      <trans-unit id="58732">
        <source>[`discord/integration-delete`](https://discord.com/developers/docs/topics/gateway-events#integration-delete)</source>
        <target state="needs-translation">[`discord/integration-delete`](https://discord.com/developers/docs/topics/gateway-events#integration-delete)</target>
      </trans-unit>
      <trans-unit id="58734">
        <source>[`discord/integration-update`](https://discord.com/developers/docs/topics/gateway-events#integration-update)</source>
        <target state="needs-translation">[`discord/integration-update`](https://discord.com/developers/docs/topics/gateway-events#integration-update)</target>
      </trans-unit>
      <trans-unit id="58736">
        <source>[`discord/interaction-create`](https://discord.com/developers/docs/topics/gateway-events#interaction-create)</source>
        <target state="needs-translation">[`discord/interaction-create`](https://discord.com/developers/docs/topics/gateway-events#interaction-create)</target>
      </trans-unit>
      <trans-unit id="58738">
        <source>[`discord/invalid-session`](https://discord.com/developers/docs/topics/gateway-events#invalid-session)</source>
        <target state="needs-translation">[`discord/invalid-session`](https://discord.com/developers/docs/topics/gateway-events#invalid-session)</target>
      </trans-unit>
      <trans-unit id="58740">
        <source>[`discord/invite-create`](https://discord.com/developers/docs/topics/gateway-events#invite-create)</source>
        <target state="needs-translation">[`discord/invite-create`](https://discord.com/developers/docs/topics/gateway-events#invite-create)</target>
      </trans-unit>
      <trans-unit id="58742">
        <source>[`discord/invite-delete`](https://discord.com/developers/docs/topics/gateway-events#invite-delete)</source>
        <target state="needs-translation">[`discord/invite-delete`](https://discord.com/developers/docs/topics/gateway-events#invite-delete)</target>
      </trans-unit>
      <trans-unit id="58744">
        <source>[`discord/message-create`](https://discord.com/developers/docs/topics/gateway-events#message-create)</source>
        <target state="needs-translation">[`discord/message-create`](https://discord.com/developers/docs/topics/gateway-events#message-create)</target>
      </trans-unit>
      <trans-unit id="58746">
        <source>[`discord/message-delete-bulk`](https://discord.com/developers/docs/topics/gateway-events#message-delete-bulk)</source>
        <target state="needs-translation">[`discord/message-delete-bulk`](https://discord.com/developers/docs/topics/gateway-events#message-delete-bulk)</target>
      </trans-unit>
      <trans-unit id="58748">
        <source>[`discord/message-delete`](https://discord.com/developers/docs/topics/gateway-events#message-delete)</source>
        <target state="needs-translation">[`discord/message-delete`](https://discord.com/developers/docs/topics/gateway-events#message-delete)</target>
      </trans-unit>
      <trans-unit id="58750">
        <source>[`discord/message-reaction-add`](https://discord.com/developers/docs/topics/gateway-events#message-reaction-add)</source>
        <target state="needs-translation">[`discord/message-reaction-add`](https://discord.com/developers/docs/topics/gateway-events#message-reaction-add)</target>
      </trans-unit>
      <trans-unit id="58752">
        <source>[`discord/message-reaction-remove-all`](https://discord.com/developers/docs/topics/gateway-events#message-reaction-remove-all)</source>
        <target state="needs-translation">[`discord/message-reaction-remove-all`](https://discord.com/developers/docs/topics/gateway-events#message-reaction-remove-all)</target>
      </trans-unit>
      <trans-unit id="58754">
        <source>[`discord/message-reaction-remove-emoji`](https://discord.com/developers/docs/topics/gateway-events#message-reaction-remove-emoji)</source>
        <target state="needs-translation">[`discord/message-reaction-remove-emoji`](https://discord.com/developers/docs/topics/gateway-events#message-reaction-remove-emoji)</target>
      </trans-unit>
      <trans-unit id="58756">
        <source>[`discord/message-reaction-remove`](https://discord.com/developers/docs/topics/gateway-events#message-reaction-remove)</source>
        <target state="needs-translation">[`discord/message-reaction-remove`](https://discord.com/developers/docs/topics/gateway-events#message-reaction-remove)</target>
      </trans-unit>
      <trans-unit id="58758">
        <source>[`discord/message-update`](https://discord.com/developers/docs/topics/gateway-events#message-update)</source>
        <target state="needs-translation">[`discord/message-update`](https://discord.com/developers/docs/topics/gateway-events#message-update)</target>
      </trans-unit>
      <trans-unit id="58760">
        <source>[`discord/presence-update`](https://discord.com/developers/docs/topics/gateway-events#presence-update)</source>
        <target state="needs-translation">[`discord/presence-update`](https://discord.com/developers/docs/topics/gateway-events#presence-update)</target>
      </trans-unit>
      <trans-unit id="58762">
        <source>[`discord/ready`](https://discord.com/developers/docs/topics/gateway-events#ready)</source>
        <target state="needs-translation">[`discord/ready`](https://discord.com/developers/docs/topics/gateway-events#ready)</target>
      </trans-unit>
      <trans-unit id="58764">
        <source>[`discord/reconnect`](https://discord.com/developers/docs/topics/gateway-events#reconnect)</source>
        <target state="needs-translation">[`discord/reconnect`](https://discord.com/developers/docs/topics/gateway-events#reconnect)</target>
      </trans-unit>
      <trans-unit id="58766">
        <source>[`discord/resumed`](https://discord.com/developers/docs/topics/gateway-events#resumed)</source>
        <target state="needs-translation">[`discord/resumed`](https://discord.com/developers/docs/topics/gateway-events#resumed)</target>
      </trans-unit>
      <trans-unit id="58768">
        <source>[`discord/stage-instance-create`](https://discord.com/developers/docs/topics/gateway-events#stage-instance-create)</source>
        <target state="needs-translation">[`discord/stage-instance-create`](https://discord.com/developers/docs/topics/gateway-events#stage-instance-create)</target>
      </trans-unit>
      <trans-unit id="58770">
        <source>[`discord/stage-instance-delete`](https://discord.com/developers/docs/topics/gateway-events#stage-instance-delete)</source>
        <target state="needs-translation">[`discord/stage-instance-delete`](https://discord.com/developers/docs/topics/gateway-events#stage-instance-delete)</target>
      </trans-unit>
      <trans-unit id="58772">
        <source>[`discord/stage-instance-update`](https://discord.com/developers/docs/topics/gateway-events#stage-instance-update)</source>
        <target state="needs-translation">[`discord/stage-instance-update`](https://discord.com/developers/docs/topics/gateway-events#stage-instance-update)</target>
      </trans-unit>
      <trans-unit id="58774">
        <source>[`discord/thread-create`](https://discord.com/developers/docs/topics/gateway-events#thread-create)</source>
        <target state="needs-translation">[`discord/thread-create`](https://discord.com/developers/docs/topics/gateway-events#thread-create)</target>
      </trans-unit>
      <trans-unit id="58776">
        <source>[`discord/thread-delete`](https://discord.com/developers/docs/topics/gateway-events#thread-delete)</source>
        <target state="needs-translation">[`discord/thread-delete`](https://discord.com/developers/docs/topics/gateway-events#thread-delete)</target>
      </trans-unit>
      <trans-unit id="58778">
        <source>[`discord/thread-list-sync`](https://discord.com/developers/docs/topics/gateway-events#thread-list-sync)</source>
        <target state="needs-translation">[`discord/thread-list-sync`](https://discord.com/developers/docs/topics/gateway-events#thread-list-sync)</target>
      </trans-unit>
      <trans-unit id="58780">
        <source>[`discord/thread-member-update`](https://discord.com/developers/docs/topics/gateway-events#thread-member-update)</source>
        <target state="needs-translation">[`discord/thread-member-update`](https://discord.com/developers/docs/topics/gateway-events#thread-member-update)</target>
      </trans-unit>
      <trans-unit id="58782">
        <source>[`discord/thread-members-update`](https://discord.com/developers/docs/topics/gateway-events#thread-members-update)</source>
        <target state="needs-translation">[`discord/thread-members-update`](https://discord.com/developers/docs/topics/gateway-events#thread-members-update)</target>
      </trans-unit>
      <trans-unit id="58784">
        <source>[`discord/thread-update`](https://discord.com/developers/docs/topics/gateway-events#thread-update)</source>
        <target state="needs-translation">[`discord/thread-update`](https://discord.com/developers/docs/topics/gateway-events#thread-update)</target>
      </trans-unit>
      <trans-unit id="58786">
        <source>[`discord/typing-start`](https://discord.com/developers/docs/topics/gateway-events#typing-start)</source>
        <target state="needs-translation">[`discord/typing-start`](https://discord.com/developers/docs/topics/gateway-events#typing-start)</target>
      </trans-unit>
      <trans-unit id="58788">
        <source>[`discord/user-update`](https://discord.com/developers/docs/topics/gateway-events#user-update)</source>
        <target state="needs-translation">[`discord/user-update`](https://discord.com/developers/docs/topics/gateway-events#user-update)</target>
      </trans-unit>
      <trans-unit id="58790">
        <source>[`discord/voice-server-update`](https://discord.com/developers/docs/topics/gateway-events#voice-server-update)</source>
        <target state="needs-translation">[`discord/voice-server-update`](https://discord.com/developers/docs/topics/gateway-events#voice-server-update)</target>
      </trans-unit>
      <trans-unit id="58792">
        <source>[`discord/voice-state-update`](https://discord.com/developers/docs/topics/gateway-events#voice-state-update)</source>
        <target state="needs-translation">[`discord/voice-state-update`](https://discord.com/developers/docs/topics/gateway-events#voice-state-update)</target>
      </trans-unit>
      <trans-unit id="58794">
        <source>[`discord/webhooks-update`](https://discord.com/developers/docs/topics/gateway-events#webhooks-update)</source>
        <target state="needs-translation">[`discord/webhooks-update`](https://discord.com/developers/docs/topics/gateway-events#webhooks-update)</target>
      </trans-unit>
    </body>
  </file>
  <file id="1648" original="/[koishijs.docs] main/zh-CN/plugins/adapter/kook.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="58796">
        <source>@koishijs/plugin-adapter-kook</source>
        <target state="needs-translation">@koishijs/plugin-adapter-kook</target>
      </trans-unit>
      <trans-unit id="63686">
        <source>如果选择通信方式为 `http`，那么你需要准备一个带有 SSL 证书的公网域名，并将 Koishi [部署到公网](../../manual/recipe/server.md)。</source>
        <target state="needs-translation">如果选择通信方式为 `http`，那么你需要准备一个带有 SSL 证书的公网域名，并将 Koishi [部署到公网](../../manual/recipe/server.md)。</target>
      </trans-unit>
      <trans-unit id="58798">
        <source>接入方法</source>
        <target state="needs-translation">接入方法</target>
      </trans-unit>
      <trans-unit id="58800">
        <source>前往 [开发者平台](https://developer.kookapp.cn/)，选择「机器人」并点击「新建」</source>
        <target state="needs-translation">前往 [开发者平台](https://developer.kookapp.cn/)，选择「机器人」并点击「新建」</target>
      </trans-unit>
      <trans-unit id="58802">
        <source>根据自身需要，在「机器人连接模式」中选择 Webhook 或 WebSocket 中的一种：</source>
        <target state="needs-translation">根据自身需要，在「机器人连接模式」中选择 Webhook 或 WebSocket 中的一种：</target>
      </trans-unit>
      <trans-unit id="58804">
        <source>如果是 Webhook，请记下页面中的 `token` 和 `verify_token` (请注意不要泄露)，并作为机器人的配置项，同时让 Koishi 暴露一个 URL，填入下方的 Callback URL 中，启动 Koishi 后点击「机器人上线」</source>
        <target state="needs-translation">如果是 Webhook，请记下页面中的 `token` 和 `verify_token` (请注意不要泄露)，并作为机器人的配置项，同时让 Koishi 暴露一个 URL，填入下方的 Callback URL 中，启动 Koishi 后点击「机器人上线」</target>
      </trans-unit>
      <trans-unit id="58806">
        <source>如果是 WebSocket，则只需记录 `token` (请注意不要泄露) 并作为机器人的配置项即可，你可以在任何时候启动 Koishi</source>
        <target state="needs-translation">如果是 WebSocket，则只需记录 `token` (请注意不要泄露) 并作为机器人的配置项即可，你可以在任何时候启动 Koishi</target>
      </trans-unit>
      <trans-unit id="58808">
        <source>基础配置项</source>
        <target state="needs-translation">基础配置项</target>
      </trans-unit>
      <trans-unit id="58810">
        <source>options.protocol</source>
        <target state="needs-translation">options.protocol</target>
      </trans-unit>
      <trans-unit id="58812">
        <source>可选值: http, ws</source>
        <target state="needs-translation">可选值: http, ws</target>
      </trans-unit>
      <trans-unit id="58814">
        <source>要使用的协议类型。</source>
        <target state="needs-translation">要使用的协议类型。</target>
      </trans-unit>
      <trans-unit id="58816">
        <source>options.token</source>
        <target state="needs-translation">options.token</target>
      </trans-unit>
      <trans-unit id="58818">
        <source>类型: `string`</source>
        <target state="needs-translation">类型: `string`</target>
      </trans-unit>
      <trans-unit id="58820">
        <source>机器人账户的令牌。</source>
        <target state="needs-translation">机器人账户的令牌。</target>
      </trans-unit>
      <trans-unit id="58822">
        <source>options.endpoint</source>
        <target state="needs-translation">options.endpoint</target>
      </trans-unit>
      <trans-unit id="58824">
        <source>类型: `string`</source>
        <target state="needs-translation">类型: `string`</target>
      </trans-unit>
      <trans-unit id="58826">
        <source>默认值: `'https://www.kookapp.cn/api/v3'`</source>
        <target state="needs-translation">默认值: `'https://www.kookapp.cn/api/v3'`</target>
      </trans-unit>
      <trans-unit id="58828">
        <source>要请求的 API 网址。</source>
        <target state="needs-translation">要请求的 API 网址。</target>
      </trans-unit>
      <trans-unit id="58830">
        <source>options.attachMode</source>
        <target state="needs-translation">options.attachMode</target>
      </trans-unit>
      <trans-unit id="58832">
        <source>类型: `'separate' | 'mixed' | 'card'`</source>
        <target state="needs-translation">类型: `'separate' | 'mixed' | 'card'`</target>
      </trans-unit>
      <trans-unit id="58834">
        <source>默认值: `'separate'`</source>
        <target state="needs-translation">默认值: `'separate'`</target>
      </trans-unit>
      <trans-unit id="58836">
        <source>控制当尝试发送含有[资源元素](../../api/message/elements.md#资源元素)的消息时的行为。</source>
        <target state="needs-translation">控制当尝试发送含有[资源元素](../../api/message/elements.md#资源元素)的消息时的行为。</target>
      </trans-unit>
      <trans-unit id="58838">
        <source>**separate:** 每一个资源消息段，以及资源消息段之间的文本都将单独发送一条消息</source>
        <target state="needs-translation">**separate:** 每一个资源消息段，以及资源消息段之间的文本都将单独发送一条消息</target>
      </trans-unit>
      <trans-unit id="58840">
        <source>**mixed:** 当要发送的内容中含有多个资源消息段或资源消息段和文本的混合时，发送卡片消息；否则将单独发送资源消息段</source>
        <target state="needs-translation">**mixed:** 当要发送的内容中含有多个资源消息段或资源消息段和文本的混合时，发送卡片消息；否则将单独发送资源消息段</target>
      </trans-unit>
      <trans-unit id="58842">
        <source>**card:** 当要发送的内容中含有资源消息段，则以卡片消息的形式发送</source>
        <target state="needs-translation">**card:** 当要发送的内容中含有资源消息段，则以卡片消息的形式发送</target>
      </trans-unit>
      <trans-unit id="58844">
        <source>HTTP 配置项</source>
        <target state="needs-translation">HTTP 配置项</target>
      </trans-unit>
      <trans-unit id="58846">
        <source>options.verifyToken</source>
        <target state="needs-translation">options.verifyToken</target>
      </trans-unit>
      <trans-unit id="58848">
        <source>类型: `string`</source>
        <target state="needs-translation">类型: `string`</target>
      </trans-unit>
      <trans-unit id="58850">
        <source>机器人账户的验证令牌。</source>
        <target state="needs-translation">机器人账户的验证令牌。</target>
      </trans-unit>
      <trans-unit id="58852">
        <source>options.path</source>
        <target state="needs-translation">options.path</target>
      </trans-unit>
      <trans-unit id="58854">
        <source>类型：`string`</source>
        <target state="needs-translation">类型：`string`</target>
      </trans-unit>
      <trans-unit id="58856">
        <source>默认值：`'/kook'`</source>
        <target state="needs-translation">默认值：`'/kook'`</target>
      </trans-unit>
      <trans-unit id="58858">
        <source>服务器监听的路径。</source>
        <target state="needs-translation">服务器监听的路径。</target>
      </trans-unit>
      <trans-unit id="58860">
        <source>WS 配置项</source>
        <target state="needs-translation">WS 配置项</target>
      </trans-unit>
      <trans-unit id="58862">
        <source>包括全部的 [`WsClient`](../../api/core/adapter.md#类-adapter-wsclient) 选项。</source>
        <target state="needs-translation">包括全部的 [`WsClient`](../../api/core/adapter.md#类-adapter-wsclient) 选项。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1650" original="/[koishijs.docs] main/zh-CN/plugins/adapter/lark.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="58864">
        <source>@koishijs/plugin-adapter-lark</source>
        <target state="needs-translation">@koishijs/plugin-adapter-lark</target>
      </trans-unit>
      <trans-unit id="63688">
        <source>在接入之前，你需要准备一个带有 SSL 证书的公网域名，并将 Koishi [部署到公网](../../manual/recipe/server.md)。</source>
        <target state="needs-translation">在接入之前，你需要准备一个带有 SSL 证书的公网域名，并将 Koishi [部署到公网](../../manual/recipe/server.md)。</target>
      </trans-unit>
      <trans-unit id="58866">
        <source>接入方法</source>
        <target state="needs-translation">接入方法</target>
      </trans-unit>
      <trans-unit id="58868">
        <source>在开发者后台 ([Lark](https://open.larksuite.com/app/) / [飞书](https://open.feishu.cn/app/)) 新建**企业自建应用**，点击应用名称进入应用详情页。</source>
        <target state="needs-translation">在开发者后台 ([Lark](https://open.larksuite.com/app/) / [飞书](https://open.feishu.cn/app/)) 新建**企业自建应用**，点击应用名称进入应用详情页。</target>
      </trans-unit>
      <trans-unit id="58870">
        <source>点击凭证与基础信息，获取 App ID 和 App Secret 值，填写到插件配置对应字段。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">點擊憑證與基礎信息，獲取 App ID 和 App Secret 值，填寫到插件配置對應字段。</target>
      </trans-unit>
      <trans-unit id="58872">
        <source>点击事件订阅，获取 Encrypt Key 和 Verification Token 值，填写到插件配置对应字段。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">點擊事件訂閱，獲取 Encrypt Key 和 Verification Token 值，填寫到插件配置對應字段。</target>
      </trans-unit>
      <trans-unit id="58874">
        <source>在事件订阅页面，确保添加了 `接收消息v2.0` (`im.message.receive_v1`) 事件。</source>
        <target state="needs-translation">在事件订阅页面，确保添加了 `接收消息v2.0` (`im.message.receive_v1`) 事件。</target>
      </trans-unit>
      <trans-unit id="58876">
        <source>如果你的机器人需要发送图片消息，你需要确保添加了 `获取与上传图片或文件资源` (`im:resource`) 事件</source>
        <target state="needs-translation">如果你的机器人需要发送图片消息，你需要确保添加了 `获取与上传图片或文件资源` (`im:resource`) 事件</target>
      </trans-unit>
      <trans-unit id="58878">
        <source>按实际情况配置插件或机器人全局的 `selfUrl` 值，然后启动插件。</source>
        <target state="needs-translation">按实际情况配置插件或机器人全局的 `selfUrl` 值，然后启动插件。</target>
      </trans-unit>
      <trans-unit id="58880">
        <source>将第 6 步中配置的值加上 `path` 的值，填写到飞书开发者后台事件订阅页面的**请求地址配置**中，并点击完成。</source>
        <target state="needs-translation">将第 6 步中配置的值加上 `path` 的值，填写到飞书开发者后台事件订阅页面的**请求地址配置**中，并点击完成。</target>
      </trans-unit>
      <trans-unit id="58882">
        <source>若第 7 步的 URL 验证未通过，请检查你所配置的地址是否正确。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">若第 7 步的 URL 驗證未通過，請檢查你所配置的地址是否正確。</target>
      </trans-unit>
      <trans-unit id="58884">
        <source>参考文档：&lt;https://open.larksuite.com/document/home/develop-a-bot-in-5-minutes/coding&gt;</source>
        <target state="needs-translation">参考文档：&lt;https://open.larksuite.com/document/home/develop-a-bot-in-5-minutes/coding&gt;</target>
      </trans-unit>
      <trans-unit id="58886">
        <source>配置项</source>
        <target state="needs-translation">配置项</target>
      </trans-unit>
      <trans-unit id="58888">
        <source>options.appId</source>
        <target state="needs-translation">options.appId</target>
      </trans-unit>
      <trans-unit id="58890">
        <source>类型：`string`</source>
        <target state="needs-translation">类型：`string`</target>
      </trans-unit>
      <trans-unit id="58892">
        <source>机器人的应用 ID。</source>
        <target state="needs-translation">机器人的应用 ID。</target>
      </trans-unit>
      <trans-unit id="58894">
        <source>options.appSecret</source>
        <target state="needs-translation">options.appSecret</target>
      </trans-unit>
      <trans-unit id="58896">
        <source>类型：`string`</source>
        <target state="needs-translation">类型：`string`</target>
      </trans-unit>
      <trans-unit id="58898">
        <source>机器人的应用密钥。</source>
        <target state="needs-translation">机器人的应用密钥。</target>
      </trans-unit>
      <trans-unit id="58900">
        <source>options.encryptKey</source>
        <target state="needs-translation">options.encryptKey</target>
      </trans-unit>
      <trans-unit id="58902">
        <source>类型：`string`</source>
        <target state="needs-translation">类型：`string`</target>
      </trans-unit>
      <trans-unit id="58904">
        <source>机器人的 Encrypt Key。</source>
        <target state="needs-translation">机器人的 Encrypt Key。</target>
      </trans-unit>
      <trans-unit id="58906">
        <source>options.verificationToken</source>
        <target state="needs-translation">options.verificationToken</target>
      </trans-unit>
      <trans-unit id="58908">
        <source>类型：`string`</source>
        <target state="needs-translation">类型：`string`</target>
      </trans-unit>
      <trans-unit id="58910">
        <source>事件推送的验证令牌。</source>
        <target state="needs-translation">事件推送的验证令牌。</target>
      </trans-unit>
      <trans-unit id="58912">
        <source>HTTP 配置项</source>
        <target state="needs-translation">HTTP 配置项</target>
      </trans-unit>
      <trans-unit id="58914">
        <source>options.path</source>
        <target state="needs-translation">options.path</target>
      </trans-unit>
      <trans-unit id="58916">
        <source>类型：`string`</source>
        <target state="needs-translation">类型：`string`</target>
      </trans-unit>
      <trans-unit id="58918">
        <source>默认值：`'/feishu'` 或 `'/lark'`</source>
        <target state="needs-translation">默认值：`'/feishu'` 或 `'/lark'`</target>
      </trans-unit>
      <trans-unit id="58920">
        <source>服务器监听的路径。</source>
        <target state="needs-translation">服务器监听的路径。</target>
      </trans-unit>
      <trans-unit id="58922">
        <source>options.selfUrl</source>
        <target state="needs-translation">options.selfUrl</target>
      </trans-unit>
      <trans-unit id="58924">
        <source>类型：`string`</source>
        <target state="needs-translation">类型：`string`</target>
      </trans-unit>
      <trans-unit id="58926">
        <source>Koishi 服务暴露在公网的地址，会覆盖 [`app.config.selfUrl`](../../api/core/app.md#options-selfurl) 的值。</source>
        <target state="needs-translation">Koishi 服务暴露在公网的地址，会覆盖 [`app.config.selfUrl`](../../api/core/app.md#options-selfurl) 的值。</target>
      </trans-unit>
      <trans-unit id="58928">
        <source>options.verifyToken</source>
        <target state="needs-translation">options.verifyToken</target>
      </trans-unit>
      <trans-unit id="58930">
        <source>类型：`boolean`</source>
        <target state="needs-translation">类型：`boolean`</target>
      </trans-unit>
      <trans-unit id="58932">
        <source>接受事件推送时是否验证令牌。</source>
        <target state="needs-translation">接受事件推送时是否验证令牌。</target>
      </trans-unit>
      <trans-unit id="58934">
        <source>options.verifySignature</source>
        <target state="needs-translation">options.verifySignature</target>
      </trans-unit>
      <trans-unit id="58936">
        <source>类型：`boolean`</source>
        <target state="needs-translation">类型：`boolean`</target>
      </trans-unit>
      <trans-unit id="58938">
        <source>接受事件推送时是否验证签名。</source>
        <target state="needs-translation">接受事件推送时是否验证签名。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1652" original="/[koishijs.docs] main/zh-CN/plugins/adapter/line.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="58940">
        <source>@koishijs/plugin-adapter-line</source>
        <target state="needs-translation">@koishijs/plugin-adapter-line</target>
      </trans-unit>
      <trans-unit id="63690">
        <source>在接入之前，你需要准备一个带有 SSL 证书的公网域名，并将 Koishi [部署到公网](../../manual/recipe/server.md)。</source>
        <target state="needs-translation">在接入之前，你需要准备一个带有 SSL 证书的公网域名，并将 Koishi [部署到公网](../../manual/recipe/server.md)。</target>
      </trans-unit>
      <trans-unit id="58942">
        <source>接入方法</source>
        <target state="needs-translation">接入方法</target>
      </trans-unit>
      <trans-unit id="58944">
        <source>在 [LINE 开发者控制台](https://developers.line.biz/console/) 注册账号，创建一个新的 Provider，在 Provider 中创建一个 Channel，类型选择 Messaging API，输入相关信息</source>
        <target state="needs-translation">在 [LINE 开发者控制台](https://developers.line.biz/console/) 注册账号，创建一个新的 Provider，在 Provider 中创建一个 Channel，类型选择 Messaging API，输入相关信息</target>
      </trans-unit>
      <trans-unit id="58946">
        <source>在 Basic settings 页面找到 Channel secret，填入插件的 secret 字段</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">在 Basic settings 頁面找到 Channel secret，填入外掛的 secret 欄位</target>
      </trans-unit>
      <trans-unit id="58948">
        <source>在 Messaging API 页面底部 Channel access token 处点击 Issue 创建 token，填入插件的 token 字段</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">在 Messaging API 頁面底部 Channel access token 處點選 Issue 建立 token，填入外掛的 token 欄位</target>
      </trans-unit>
      <trans-unit id="58950">
        <source>根据使用需求可在上方的 Allow bot to join group chats (允许机器人加入群组) 处点击 Edit，在新页面中找到 Toggle features 一栏，第一对单选框选择 Allow</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">根據使用需求可在上方的 Allow bot to join group chats (允許機器人加入群組) 處點選 Edit，在新頁面中找到 Toggle features 一欄，第一對單選框選擇 Allow</target>
      </trans-unit>
      <trans-unit id="58952">
        <source>在 Messaging API 页面底部，根据使用需求点击 Auto-reply messages 或者 Greeting messages 的修改按钮，在新页面中可设置是否启用平台自带的自动回复或问候消息</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">在 Messaging API 頁面底部，根據使用需求點選 Auto-reply messages 或者 Greeting messages 的修改按鈕，在新頁面中可設定是否啟用平臺自帶的自動回覆或問候訊息</target>
      </trans-unit>
      <trans-unit id="58954">
        <source>在 Security 页面推荐配置白名单 IP</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">在 Security 頁面推薦配置白名單 IP</target>
      </trans-unit>
      <trans-unit id="58956">
        <source>启动插件，打开 Messaging API 页面，勾选 Use webhook</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">啟動外掛，開啟 Messaging API 頁面，勾選 Use webhook</target>
      </trans-unit>
      <trans-unit id="58958">
        <source>参考文档：&lt;https://developers.line.biz/en/docs/messaging-api/getting-started/&gt;</source>
        <target state="needs-translation">参考文档：&lt;https://developers.line.biz/en/docs/messaging-api/getting-started/&gt;</target>
      </trans-unit>
      <trans-unit id="58960">
        <source>配置项</source>
        <target state="needs-translation">配置项</target>
      </trans-unit>
      <trans-unit id="58962">
        <source>options.token</source>
        <target state="needs-translation">options.token</target>
      </trans-unit>
      <trans-unit id="58964">
        <source>类型：`string`</source>
        <target state="needs-translation">类型：`string`</target>
      </trans-unit>
      <trans-unit id="58966">
        <source>机器人令牌。</source>
        <target state="needs-translation">机器人令牌。</target>
      </trans-unit>
      <trans-unit id="58968">
        <source>options.secret</source>
        <target state="needs-translation">options.secret</target>
      </trans-unit>
      <trans-unit id="58970">
        <source>类型：`string`</source>
        <target state="needs-translation">类型：`string`</target>
      </trans-unit>
      <trans-unit id="58972">
        <source>机器人密钥。</source>
        <target state="needs-translation">机器人密钥。</target>
      </trans-unit>
      <trans-unit id="63772">
        <source>内部接口</source>
        <target state="needs-translation">内部接口</target>
      </trans-unit>
      <trans-unit id="63964">
        <source>关于内部接口的使用方式，请参见 [访问内部接口](../../guide/adapter/bot.md#access-from-plugin)。</source>
        <target state="needs-translation">关于内部接口的使用方式，请参见 [访问内部接口](../../guide/adapter/bot.md#access-from-plugin)。</target>
      </trans-unit>
      <trans-unit id="58976" translate="no">
        <source>[`internal.audienceMatch()`](https://developers.line.biz/en/reference/partner-docs/#phone-audience-match)</source>
        <target>[`internal.audienceMatch()`](https://developers.line.biz/en/reference/partner-docs/#phone-audience-match)</target>
      </trans-unit>
      <trans-unit id="58978" translate="no">
        <source>[`internal.broadcast()`](https://developers.line.biz/en/reference/messaging-api/#send-broadcast-message)</source>
        <target>[`internal.broadcast()`](https://developers.line.biz/en/reference/messaging-api/#send-broadcast-message)</target>
      </trans-unit>
      <trans-unit id="58980" translate="no">
        <source>[`internal.cancelDefaultRichMenu()`](https://developers.line.biz/en/reference/messaging-api/#cancel-default-rich-menu)</source>
        <target>[`internal.cancelDefaultRichMenu()`](https://developers.line.biz/en/reference/messaging-api/#cancel-default-rich-menu)</target>
      </trans-unit>
      <trans-unit id="58982" translate="no">
        <source>[`internal.createRichMenu()`](https://developers.line.biz/en/reference/messaging-api/#create-rich-menu)</source>
        <target>[`internal.createRichMenu()`](https://developers.line.biz/en/reference/messaging-api/#create-rich-menu)</target>
      </trans-unit>
      <trans-unit id="58984" translate="no">
        <source>[`internal.createRichMenuAlias()`](https://developers.line.biz/en/reference/messaging-api/#create-rich-menu-alias)</source>
        <target>[`internal.createRichMenuAlias()`](https://developers.line.biz/en/reference/messaging-api/#create-rich-menu-alias)</target>
      </trans-unit>
      <trans-unit id="58986" translate="no">
        <source>[`internal.deleteRichMenu()`](https://developers.line.biz/en/reference/messaging-api/#delete-rich-menu)</source>
        <target>[`internal.deleteRichMenu()`](https://developers.line.biz/en/reference/messaging-api/#delete-rich-menu)</target>
      </trans-unit>
      <trans-unit id="58988" translate="no">
        <source>[`internal.deleteRichMenuAlias()`](https://developers.line.biz/en/reference/messaging-api/#delete-rich-menu-alias)</source>
        <target>[`internal.deleteRichMenuAlias()`](https://developers.line.biz/en/reference/messaging-api/#delete-rich-menu-alias)</target>
      </trans-unit>
      <trans-unit id="58990" translate="no">
        <source>[`internal.getAdPhoneMessageStatistics()`](https://developers.line.biz/en/reference/partner-docs/#get-phone-audience-match)</source>
        <target>[`internal.getAdPhoneMessageStatistics()`](https://developers.line.biz/en/reference/partner-docs/#get-phone-audience-match)</target>
      </trans-unit>
      <trans-unit id="58992" translate="no">
        <source>[`internal.getAggregationUnitNameList()`](https://developers.line.biz/en/reference/messaging-api/#get-name-list-of-units-used-this-month)</source>
        <target>[`internal.getAggregationUnitNameList()`](https://developers.line.biz/en/reference/messaging-api/#get-name-list-of-units-used-this-month)</target>
      </trans-unit>
      <trans-unit id="58994" translate="no">
        <source>[`internal.getAggregationUnitUsage()`](https://developers.line.biz/en/reference/messaging-api/#get-number-of-units-used-this-month)</source>
        <target>[`internal.getAggregationUnitUsage()`](https://developers.line.biz/en/reference/messaging-api/#get-number-of-units-used-this-month)</target>
      </trans-unit>
      <trans-unit id="58996" translate="no">
        <source>[`internal.getBotInfo()`](https://developers.line.biz/en/reference/messaging-api/#get-bot-info)</source>
        <target>[`internal.getBotInfo()`](https://developers.line.biz/en/reference/messaging-api/#get-bot-info)</target>
      </trans-unit>
      <trans-unit id="58998" translate="no">
        <source>[`internal.getDefaultRichMenuId()`](https://developers.line.biz/en/reference/messaging-api/#get-default-rich-menu-id)</source>
        <target>[`internal.getDefaultRichMenuId()`](https://developers.line.biz/en/reference/messaging-api/#get-default-rich-menu-id)</target>
      </trans-unit>
      <trans-unit id="59000" translate="no">
        <source>[`internal.getFollowers()`](https://developers.line.biz/en/reference/messaging-api/#get-follower-ids)</source>
        <target>[`internal.getFollowers()`](https://developers.line.biz/en/reference/messaging-api/#get-follower-ids)</target>
      </trans-unit>
      <trans-unit id="59002" translate="no">
        <source>[`internal.getGroupMemberCount()`](https://developers.line.biz/en/reference/messaging-api/#get-members-group-count)</source>
        <target>[`internal.getGroupMemberCount()`](https://developers.line.biz/en/reference/messaging-api/#get-members-group-count)</target>
      </trans-unit>
      <trans-unit id="59004" translate="no">
        <source>[`internal.getGroupMemberProfile()`](https://developers.line.biz/en/reference/messaging-api/#get-group-member-profile)</source>
        <target>[`internal.getGroupMemberProfile()`](https://developers.line.biz/en/reference/messaging-api/#get-group-member-profile)</target>
      </trans-unit>
      <trans-unit id="59006" translate="no">
        <source>[`internal.getGroupMembersIds()`](https://developers.line.biz/en/reference/messaging-api/#get-group-member-user-ids)</source>
        <target>[`internal.getGroupMembersIds()`](https://developers.line.biz/en/reference/messaging-api/#get-group-member-user-ids)</target>
      </trans-unit>
      <trans-unit id="59008" translate="no">
        <source>[`internal.getGroupSummary()`](https://developers.line.biz/en/reference/messaging-api/#get-group-summary)</source>
        <target>[`internal.getGroupSummary()`](https://developers.line.biz/en/reference/messaging-api/#get-group-summary)</target>
      </trans-unit>
      <trans-unit id="59010" translate="no">
        <source>[`internal.getMessageContent()`](https://developers.line.biz/en/reference/messaging-api/#get-content)</source>
        <target>[`internal.getMessageContent()`](https://developers.line.biz/en/reference/messaging-api/#get-content)</target>
      </trans-unit>
      <trans-unit id="59012" translate="no">
        <source>[`internal.getMessageContentPreview()`](https://developers.line.biz/en/reference/messaging-api/#get-image-or-video-preview)</source>
        <target>[`internal.getMessageContentPreview()`](https://developers.line.biz/en/reference/messaging-api/#get-image-or-video-preview)</target>
      </trans-unit>
      <trans-unit id="59014" translate="no">
        <source>[`internal.getMessageContentTranscodingByMessageId()`](https://developers.line.biz/en/reference/messaging-api/#verify-video-or-audio-preparation-status)</source>
        <target>[`internal.getMessageContentTranscodingByMessageId()`](https://developers.line.biz/en/reference/messaging-api/#verify-video-or-audio-preparation-status)</target>
      </trans-unit>
      <trans-unit id="59016" translate="no">
        <source>[`internal.getMessageQuota()`](https://developers.line.biz/en/reference/messaging-api/#get-quota)</source>
        <target>[`internal.getMessageQuota()`](https://developers.line.biz/en/reference/messaging-api/#get-quota)</target>
      </trans-unit>
      <trans-unit id="59018" translate="no">
        <source>[`internal.getMessageQuotaConsumption()`](https://developers.line.biz/en/reference/messaging-api/#get-consumption)</source>
        <target>[`internal.getMessageQuotaConsumption()`](https://developers.line.biz/en/reference/messaging-api/#get-consumption)</target>
      </trans-unit>
      <trans-unit id="59020" translate="no">
        <source>[`internal.getNarrowcastProgress()`](https://developers.line.biz/en/reference/messaging-api/#get-narrowcast-progress-status)</source>
        <target>[`internal.getNarrowcastProgress()`](https://developers.line.biz/en/reference/messaging-api/#get-narrowcast-progress-status)</target>
      </trans-unit>
      <trans-unit id="59022" translate="no">
        <source>[`internal.getNumberOfSentBroadcastMessages()`](https://developers.line.biz/en/reference/messaging-api/#get-number-of-broadcast-messages)</source>
        <target>[`internal.getNumberOfSentBroadcastMessages()`](https://developers.line.biz/en/reference/messaging-api/#get-number-of-broadcast-messages)</target>
      </trans-unit>
      <trans-unit id="59024" translate="no">
        <source>[`internal.getNumberOfSentMulticastMessages()`](https://developers.line.biz/en/reference/messaging-api/#get-number-of-multicast-messages)</source>
        <target>[`internal.getNumberOfSentMulticastMessages()`](https://developers.line.biz/en/reference/messaging-api/#get-number-of-multicast-messages)</target>
      </trans-unit>
      <trans-unit id="59026" translate="no">
        <source>[`internal.getNumberOfSentPushMessages()`](https://developers.line.biz/en/reference/messaging-api/#get-number-of-push-messages)</source>
        <target>[`internal.getNumberOfSentPushMessages()`](https://developers.line.biz/en/reference/messaging-api/#get-number-of-push-messages)</target>
      </trans-unit>
      <trans-unit id="59028" translate="no">
        <source>[`internal.getNumberOfSentReplyMessages()`](https://developers.line.biz/en/reference/messaging-api/#get-number-of-reply-messages)</source>
        <target>[`internal.getNumberOfSentReplyMessages()`](https://developers.line.biz/en/reference/messaging-api/#get-number-of-reply-messages)</target>
      </trans-unit>
      <trans-unit id="59030" translate="no">
        <source>[`internal.getPNPMessageStatistics()`](https://developers.line.biz/en/reference/partner-docs/#get-number-of-sent-line-notification-messages)</source>
        <target>[`internal.getPNPMessageStatistics()`](https://developers.line.biz/en/reference/partner-docs/#get-number-of-sent-line-notification-messages)</target>
      </trans-unit>
      <trans-unit id="59032" translate="no">
        <source>[`internal.getProfile()`](https://developers.line.biz/en/reference/messaging-api/#get-profile)</source>
        <target>[`internal.getProfile()`](https://developers.line.biz/en/reference/messaging-api/#get-profile)</target>
      </trans-unit>
      <trans-unit id="59034" translate="no">
        <source>[`internal.getRichMenu()`](https://developers.line.biz/en/reference/messaging-api/#get-rich-menu)</source>
        <target>[`internal.getRichMenu()`](https://developers.line.biz/en/reference/messaging-api/#get-rich-menu)</target>
      </trans-unit>
      <trans-unit id="59036" translate="no">
        <source>[`internal.getRichMenuAlias()`](https://developers.line.biz/en/reference/messaging-api/#get-rich-menu-alias-by-id)</source>
        <target>[`internal.getRichMenuAlias()`](https://developers.line.biz/en/reference/messaging-api/#get-rich-menu-alias-by-id)</target>
      </trans-unit>
      <trans-unit id="59038" translate="no">
        <source>[`internal.getRichMenuAliasList()`](https://developers.line.biz/en/reference/messaging-api/#get-rich-menu-alias-list)</source>
        <target>[`internal.getRichMenuAliasList()`](https://developers.line.biz/en/reference/messaging-api/#get-rich-menu-alias-list)</target>
      </trans-unit>
      <trans-unit id="59040" translate="no">
        <source>[`internal.getRichMenuBatchProgress()`](https://developers.line.biz/en/reference/messaging-api/#get-batch-control-rich-menus-progress-status)</source>
        <target>[`internal.getRichMenuBatchProgress()`](https://developers.line.biz/en/reference/messaging-api/#get-batch-control-rich-menus-progress-status)</target>
      </trans-unit>
      <trans-unit id="59042" translate="no">
        <source>[`internal.getRichMenuIdOfUser()`](https://developers.line.biz/en/reference/messaging-api/#get-rich-menu-id-of-user)</source>
        <target>[`internal.getRichMenuIdOfUser()`](https://developers.line.biz/en/reference/messaging-api/#get-rich-menu-id-of-user)</target>
      </trans-unit>
      <trans-unit id="59044" translate="no">
        <source>[`internal.getRichMenuImage()`](https://developers.line.biz/en/reference/messaging-api/#download-rich-menu-image)</source>
        <target>[`internal.getRichMenuImage()`](https://developers.line.biz/en/reference/messaging-api/#download-rich-menu-image)</target>
      </trans-unit>
      <trans-unit id="59046" translate="no">
        <source>[`internal.getRichMenuList()`](https://developers.line.biz/en/reference/messaging-api/#get-rich-menu-list)</source>
        <target>[`internal.getRichMenuList()`](https://developers.line.biz/en/reference/messaging-api/#get-rich-menu-list)</target>
      </trans-unit>
      <trans-unit id="59048" translate="no">
        <source>[`internal.getRoomMemberCount()`](https://developers.line.biz/en/reference/messaging-api/#get-members-room-count)</source>
        <target>[`internal.getRoomMemberCount()`](https://developers.line.biz/en/reference/messaging-api/#get-members-room-count)</target>
      </trans-unit>
      <trans-unit id="59050" translate="no">
        <source>[`internal.getRoomMemberProfile()`](https://developers.line.biz/en/reference/messaging-api/#get-room-member-profile)</source>
        <target>[`internal.getRoomMemberProfile()`](https://developers.line.biz/en/reference/messaging-api/#get-room-member-profile)</target>
      </trans-unit>
      <trans-unit id="59052" translate="no">
        <source>[`internal.getRoomMembersIds()`](https://developers.line.biz/en/reference/messaging-api/#get-room-member-user-ids)</source>
        <target>[`internal.getRoomMembersIds()`](https://developers.line.biz/en/reference/messaging-api/#get-room-member-user-ids)</target>
      </trans-unit>
      <trans-unit id="59054" translate="no">
        <source>[`internal.getWebhookEndpoint()`](https://developers.line.biz/en/reference/messaging-api/#get-webhook-endpoint-information)</source>
        <target>[`internal.getWebhookEndpoint()`](https://developers.line.biz/en/reference/messaging-api/#get-webhook-endpoint-information)</target>
      </trans-unit>
      <trans-unit id="59056" translate="no">
        <source>[`internal.issueLinkToken()`](https://developers.line.biz/en/reference/messaging-api/#issue-link-token)</source>
        <target>[`internal.issueLinkToken()`](https://developers.line.biz/en/reference/messaging-api/#issue-link-token)</target>
      </trans-unit>
      <trans-unit id="59058" translate="no">
        <source>[`internal.leaveGroup()`](https://developers.line.biz/en/reference/messaging-api/#leave-group)</source>
        <target>[`internal.leaveGroup()`](https://developers.line.biz/en/reference/messaging-api/#leave-group)</target>
      </trans-unit>
      <trans-unit id="59060" translate="no">
        <source>[`internal.leaveRoom()`](https://developers.line.biz/en/reference/messaging-api/#leave-room)</source>
        <target>[`internal.leaveRoom()`](https://developers.line.biz/en/reference/messaging-api/#leave-room)</target>
      </trans-unit>
      <trans-unit id="59062" translate="no">
        <source>[`internal.linkRichMenuIdToUser()`](https://developers.line.biz/en/reference/messaging-api/#link-rich-menu-to-user)</source>
        <target>[`internal.linkRichMenuIdToUser()`](https://developers.line.biz/en/reference/messaging-api/#link-rich-menu-to-user)</target>
      </trans-unit>
      <trans-unit id="59064" translate="no">
        <source>[`internal.markMessagesAsRead()`](https://developers.line.biz/en/reference/partner-docs/#mark-messages-from-users-as-read)</source>
        <target>[`internal.markMessagesAsRead()`](https://developers.line.biz/en/reference/partner-docs/#mark-messages-from-users-as-read)</target>
      </trans-unit>
      <trans-unit id="59066" translate="no">
        <source>[`internal.multicast()`](https://developers.line.biz/en/reference/messaging-api/#send-multicast-message)</source>
        <target>[`internal.multicast()`](https://developers.line.biz/en/reference/messaging-api/#send-multicast-message)</target>
      </trans-unit>
      <trans-unit id="59068" translate="no">
        <source>[`internal.pushMessage()`](https://developers.line.biz/en/reference/messaging-api/#send-push-message)</source>
        <target>[`internal.pushMessage()`](https://developers.line.biz/en/reference/messaging-api/#send-push-message)</target>
      </trans-unit>
      <trans-unit id="59070" translate="no">
        <source>[`internal.pushMessagesByPhone()`](https://developers.line.biz/en/reference/partner-docs/#send-line-notification-message)</source>
        <target>[`internal.pushMessagesByPhone()`](https://developers.line.biz/en/reference/partner-docs/#send-line-notification-message)</target>
      </trans-unit>
      <trans-unit id="59072" translate="no">
        <source>[`internal.replyMessage()`](https://developers.line.biz/en/reference/messaging-api/#send-reply-message)</source>
        <target>[`internal.replyMessage()`](https://developers.line.biz/en/reference/messaging-api/#send-reply-message)</target>
      </trans-unit>
      <trans-unit id="59074" translate="no">
        <source>[`internal.setDefaultRichMenu()`](https://developers.line.biz/en/reference/messaging-api/#set-default-rich-menu)</source>
        <target>[`internal.setDefaultRichMenu()`](https://developers.line.biz/en/reference/messaging-api/#set-default-rich-menu)</target>
      </trans-unit>
      <trans-unit id="59076" translate="no">
        <source>[`internal.setRichMenuImage()`](https://developers.line.biz/en/reference/messaging-api/#upload-rich-menu-image)</source>
        <target>[`internal.setRichMenuImage()`](https://developers.line.biz/en/reference/messaging-api/#upload-rich-menu-image)</target>
      </trans-unit>
      <trans-unit id="59078" translate="no">
        <source>[`internal.setWebhookEndpoint()`](https://developers.line.biz/en/reference/messaging-api/#set-webhook-endpoint-url)</source>
        <target>[`internal.setWebhookEndpoint()`](https://developers.line.biz/en/reference/messaging-api/#set-webhook-endpoint-url)</target>
      </trans-unit>
      <trans-unit id="59080" translate="no">
        <source>[`internal.testWebhookEndpoint()`](https://developers.line.biz/en/reference/messaging-api/#test-webhook-endpoint)</source>
        <target>[`internal.testWebhookEndpoint()`](https://developers.line.biz/en/reference/messaging-api/#test-webhook-endpoint)</target>
      </trans-unit>
      <trans-unit id="59082" translate="no">
        <source>[`internal.unlinkRichMenuIdFromUser()`](https://developers.line.biz/en/reference/messaging-api/#unlink-rich-menu-from-user)</source>
        <target>[`internal.unlinkRichMenuIdFromUser()`](https://developers.line.biz/en/reference/messaging-api/#unlink-rich-menu-from-user)</target>
      </trans-unit>
      <trans-unit id="59084" translate="no">
        <source>[`internal.updateRichMenuAlias()`](https://developers.line.biz/en/reference/messaging-api/#update-rich-menu-alias)</source>
        <target>[`internal.updateRichMenuAlias()`](https://developers.line.biz/en/reference/messaging-api/#update-rich-menu-alias)</target>
      </trans-unit>
      <trans-unit id="59086" translate="no">
        <source>[`internal.validateBroadcast()`](https://developers.line.biz/en/reference/messaging-api/#validate-message-objects-of-broadcast-message)</source>
        <target>[`internal.validateBroadcast()`](https://developers.line.biz/en/reference/messaging-api/#validate-message-objects-of-broadcast-message)</target>
      </trans-unit>
      <trans-unit id="59088" translate="no">
        <source>[`internal.validateMulticast()`](https://developers.line.biz/en/reference/messaging-api/#validate-message-objects-of-multicast-message)</source>
        <target>[`internal.validateMulticast()`](https://developers.line.biz/en/reference/messaging-api/#validate-message-objects-of-multicast-message)</target>
      </trans-unit>
      <trans-unit id="59090" translate="no">
        <source>[`internal.validateNarrowcast()`](https://developers.line.biz/en/reference/messaging-api/#validate-message-objects-of-narrowcast-message)</source>
        <target>[`internal.validateNarrowcast()`](https://developers.line.biz/en/reference/messaging-api/#validate-message-objects-of-narrowcast-message)</target>
      </trans-unit>
      <trans-unit id="59092" translate="no">
        <source>[`internal.validatePush()`](https://developers.line.biz/en/reference/messaging-api/#validate-message-objects-of-push-message)</source>
        <target>[`internal.validatePush()`](https://developers.line.biz/en/reference/messaging-api/#validate-message-objects-of-push-message)</target>
      </trans-unit>
      <trans-unit id="59094" translate="no">
        <source>[`internal.validateReply()`](https://developers.line.biz/en/reference/messaging-api/#validate-message-objects-of-reply-message)</source>
        <target>[`internal.validateReply()`](https://developers.line.biz/en/reference/messaging-api/#validate-message-objects-of-reply-message)</target>
      </trans-unit>
      <trans-unit id="59096" translate="no">
        <source>[`internal.validateRichMenuBatchRequest()`](https://developers.line.biz/en/reference/messaging-api/#validate-batch-control-rich-menus-request)</source>
        <target>[`internal.validateRichMenuBatchRequest()`](https://developers.line.biz/en/reference/messaging-api/#validate-batch-control-rich-menus-request)</target>
      </trans-unit>
      <trans-unit id="59098" translate="no">
        <source>[`internal.validateRichMenuObject()`](https://developers.line.biz/en/reference/messaging-api/#validate-rich-menu-object)</source>
        <target>[`internal.validateRichMenuObject()`](https://developers.line.biz/en/reference/messaging-api/#validate-rich-menu-object)</target>
      </trans-unit>
      <trans-unit id="59100">
        <source>内部事件</source>
        <target state="needs-translation">内部事件</target>
      </trans-unit>
      <trans-unit id="59102">
        <source>[`line/account-link`](https://developers\.line\.biz/en/reference/messaging-api/#account-link-event)</source>
        <target state="needs-translation">[`line/account-link`](https://developers\.line\.biz/en/reference/messaging-api/#account-link-event)</target>
      </trans-unit>
      <trans-unit id="59104">
        <source>[`line/beacon`](https://developers\.line\.biz/en/reference/messaging-api/#beacon-event)</source>
        <target state="needs-translation">[`line/beacon`](https://developers\.line\.biz/en/reference/messaging-api/#beacon-event)</target>
      </trans-unit>
      <trans-unit id="59106">
        <source>[`line/device-link`](https://developers\.line\.biz/en/reference/messaging-api/#device-link-event)</source>
        <target state="needs-translation">[`line/device-link`](https://developers\.line\.biz/en/reference/messaging-api/#device-link-event)</target>
      </trans-unit>
      <trans-unit id="59108">
        <source>[`line/device-unlink`](https://developers\.line\.biz/en/reference/messaging-api/#device-unlink-event)</source>
        <target state="needs-translation">[`line/device-unlink`](https://developers\.line\.biz/en/reference/messaging-api/#device-unlink-event)</target>
      </trans-unit>
      <trans-unit id="59110">
        <source>[`line/follow`](https://developers.line.biz/en/reference/messaging-api/#follow-event)</source>
        <target state="needs-translation">[`line/follow`](https://developers.line.biz/en/reference/messaging-api/#follow-event)</target>
      </trans-unit>
      <trans-unit id="59112">
        <source>[`line/join`](https://developers.line.biz/en/reference/messaging-api/#join-event)</source>
        <target state="needs-translation">[`line/join`](https://developers.line.biz/en/reference/messaging-api/#join-event)</target>
      </trans-unit>
      <trans-unit id="59114">
        <source>[`line/leave`](https://developers.line.biz/en/reference/messaging-api/#leave-event)</source>
        <target state="needs-translation">[`line/leave`](https://developers.line.biz/en/reference/messaging-api/#leave-event)</target>
      </trans-unit>
      <trans-unit id="59116">
        <source>[`line/member-joined`](https://developers.line.biz/en/reference/messaging-api/#member-joined-event)</source>
        <target state="needs-translation">[`line/member-joined`](https://developers.line.biz/en/reference/messaging-api/#member-joined-event)</target>
      </trans-unit>
      <trans-unit id="59118">
        <source>[`line/member-left`](https://developers.line.biz/en/reference/messaging-api/#member-left-event)</source>
        <target state="needs-translation">[`line/member-left`](https://developers.line.biz/en/reference/messaging-api/#member-left-event)</target>
      </trans-unit>
      <trans-unit id="59120">
        <source>[`line/message`](https://developers.line.biz/en/reference/messaging-api/#message-event)</source>
        <target state="needs-translation">[`line/message`](https://developers.line.biz/en/reference/messaging-api/#message-event)</target>
      </trans-unit>
      <trans-unit id="59122">
        <source>[`line/postback`](https://developers.line.biz/en/reference/messaging-api/#postback-event)</source>
        <target state="needs-translation">[`line/postback`](https://developers.line.biz/en/reference/messaging-api/#postback-event)</target>
      </trans-unit>
      <trans-unit id="59124">
        <source>[`line/scenario-result`](https://developers\.line\.biz/en/reference/messaging-api/#scenario-result-event)</source>
        <target state="needs-translation">[`line/scenario-result`](https://developers\.line\.biz/en/reference/messaging-api/#scenario-result-event)</target>
      </trans-unit>
      <trans-unit id="59126">
        <source>[`line/unfollow`](https://developers.line.biz/en/reference/messaging-api/#unfollow-event)</source>
        <target state="needs-translation">[`line/unfollow`](https://developers.line.biz/en/reference/messaging-api/#unfollow-event)</target>
      </trans-unit>
      <trans-unit id="59128">
        <source>[`line/unsend`](https://developers.line.biz/en/reference/messaging-api/#unsend-event)</source>
        <target state="needs-translation">[`line/unsend`](https://developers.line.biz/en/reference/messaging-api/#unsend-event)</target>
      </trans-unit>
      <trans-unit id="59130">
        <source>[`line/video-viewing-complete`](https://developers\.line\.biz/en/reference/messaging-api/#video-viewing-complete)</source>
        <target state="needs-translation">[`line/video-viewing-complete`](https://developers\.line\.biz/en/reference/messaging-api/#video-viewing-complete)</target>
      </trans-unit>
    </body>
  </file>
  <file id="1654" original="/[koishijs.docs] main/zh-CN/plugins/adapter/mail.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="59132">
        <source>@koishijs/plugin-adapter-mail</source>
        <target state="needs-translation">@koishijs/plugin-adapter-mail</target>
      </trans-unit>
      <trans-unit id="59134">
        <source>接入方式</source>
        <target state="needs-translation">接入方式</target>
      </trans-unit>
      <trans-unit id="59136">
        <source>「username」对应你的邮箱账号，「password」对应你的授权码</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">「username」對應你的郵箱賬號，「password」對應你的授權碼</target>
      </trans-unit>
      <trans-unit id="59138">
        <source>「imap」对应接收服务器，「smtp」对应发送服务器，需要分别填写对应的「host」和「port」</source>
        <target state="needs-translation">「imap」对应接收服务器，「smtp」对应发送服务器，需要分别填写对应的「host」和「port」</target>
      </trans-unit>
      <trans-unit id="59140">
        <source>不同邮箱服务获取授权码的方式也有所不同，可以参考下面的主流邮件服务进行配置</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">不同郵箱服務獲取授權碼的方式也有所不同，可以參考下面的主流郵件服務進行配置</target>
      </trans-unit>
      <trans-unit id="59142">
        <source>QQ 邮箱</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">QQ 郵箱</target>
      </trans-unit>
      <trans-unit id="59144">
        <source>接收服务器：`imap.qq.com`，端口号 `993`</source>
        <target state="needs-translation">接收服务器：`imap.qq.com`，端口号 `993`</target>
      </trans-unit>
      <trans-unit id="59146">
        <source>发送服务器：`smtp.qq.com`，端口号 `465` 或 `587`</source>
        <target state="needs-translation">发送服务器：`smtp.qq.com`，端口号 `465` 或 `587`</target>
      </trans-unit>
      <trans-unit id="59148">
        <source>参考：[什么是授权码，它又是如何设置？</source>
        <target state="needs-translation">参考：[什么是授权码，它又是如何设置？</target>
      </trans-unit>
      <trans-unit id="59150">
        <source>](https://service.mail.qq.com/detail/0/75)</source>
        <target state="needs-translation">](https://service.mail.qq.com/detail/0/75)</target>
      </trans-unit>
      <trans-unit id="59152">
        <source>网易 163 邮箱</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">網易 163 郵箱</target>
      </trans-unit>
      <trans-unit id="59154">
        <source>接收服务器：`imap.163.com`，端口号 `993`</source>
        <target state="needs-translation">接收服务器：`imap.163.com`，端口号 `993`</target>
      </trans-unit>
      <trans-unit id="59156">
        <source>发送服务器：`smtp.163.com`，端口号 `465` 或 `994`</source>
        <target state="needs-translation">发送服务器：`smtp.163.com`，端口号 `465` 或 `994`</target>
      </trans-unit>
      <trans-unit id="59158">
        <source>参考：[网易邮箱 IMAP 服务](https://mail.163.com/html/110127_imap/index.htm)</source>
        <target state="needs-translation">参考：[网易邮箱 IMAP 服务](https://mail.163.com/html/110127_imap/index.htm)</target>
      </trans-unit>
      <trans-unit id="59160">
        <source>Outlook</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">Outlook</target>
      </trans-unit>
      <trans-unit id="59162">
        <source>接收服务器：`outlook.office365.com`，端口号 `993`</source>
        <target state="needs-translation">接收服务器：`outlook.office365.com`，端口号 `993`</target>
      </trans-unit>
      <trans-unit id="59164">
        <source>发送服务器：`smtp-mail.outlook.com`，端口号 `587`</source>
        <target state="needs-translation">发送服务器：`smtp-mail.outlook.com`，端口号 `587`</target>
      </trans-unit>
      <trans-unit id="59166">
        <source>参考：[Outlook.com 的 POP、IMAP 和 SMTP 设置](https://support.microsoft.com/zh-cn/office/outlook-com-%E7%9A%84-pop-imap-%E5%92%8C-smtp-%E8%AE%BE%E7%BD%AE-d088b986-291d-42b8-9564-9c414e2aa040)</source>
        <target state="needs-translation">参考：[Outlook.com 的 POP、IMAP 和 SMTP 设置](https://support.microsoft.com/zh-cn/office/outlook-com-%E7%9A%84-pop-imap-%E5%92%8C-smtp-%E8%AE%BE%E7%BD%AE-d088b986-291d-42b8-9564-9c414e2aa040)</target>
      </trans-unit>
      <trans-unit id="59168">
        <source>Gmail</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">Gmail</target>
      </trans-unit>
      <trans-unit id="59170">
        <source>接收服务器：`imap.gmail.com`，端口号 `993`</source>
        <target state="needs-translation">接收服务器：`imap.gmail.com`，端口号 `993`</target>
      </trans-unit>
      <trans-unit id="59172">
        <source>发送服务器：`smtp.gmail.com`，端口号 `465`</source>
        <target state="needs-translation">发送服务器：`smtp.gmail.com`，端口号 `465`</target>
      </trans-unit>
      <trans-unit id="59174">
        <source>参考：[通过其他电子邮件平台查看 Gmail](https://support.google.com/mail/answer/7126229?hl=zh-Hans#zippy=%2C%E7%AC%AC-%E6%AD%A5%E6%A3%80%E6%9F%A5-imap-%E6%98%AF%E5%90%A6%E5%B7%B2%E5%90%AF%E7%94%A8%2C%E7%AC%AC-%E6%AD%A5%E5%9C%A8%E7%94%B5%E5%AD%90%E9%82%AE%E4%BB%B6%E5%AE%A2%E6%88%B7%E7%AB%AF%E4%B8%AD%E6%9B%B4%E6%94%B9-smtp-%E5%92%8C%E5%85%B6%E4%BB%96%E8%AE%BE%E7%BD%AE)</source>
        <target state="needs-translation">参考：[通过其他电子邮件平台查看 Gmail](https://support.google.com/mail/answer/7126229?hl=zh-Hans#zippy=%2C%E7%AC%AC-%E6%AD%A5%E6%A3%80%E6%9F%A5-imap-%E6%98%AF%E5%90%A6%E5%B7%B2%E5%90%AF%E7%94%A8%2C%E7%AC%AC-%E6%AD%A5%E5%9C%A8%E7%94%B5%E5%AD%90%E9%82%AE%E4%BB%B6%E5%AE%A2%E6%88%B7%E7%AB%AF%E4%B8%AD%E6%9B%B4%E6%94%B9-smtp-%E5%92%8C%E5%85%B6%E4%BB%96%E8%AE%BE%E7%BD%AE)</target>
      </trans-unit>
      <trans-unit id="59176">
        <source>配置项</source>
        <target state="needs-translation">配置项</target>
      </trans-unit>
      <trans-unit id="59178">
        <source>options.username</source>
        <target state="needs-translation">options.username</target>
      </trans-unit>
      <trans-unit id="59180">
        <source>类型: `string`</source>
        <target state="needs-translation">类型: `string`</target>
      </trans-unit>
      <trans-unit id="59182">
        <source>必需参数</source>
        <target state="needs-translation">必需参数</target>
      </trans-unit>
      <trans-unit id="59184">
        <source>用户名。</source>
        <target state="needs-translation">用户名。</target>
      </trans-unit>
      <trans-unit id="59186">
        <source>options.password</source>
        <target state="needs-translation">options.password</target>
      </trans-unit>
      <trans-unit id="59188">
        <source>类型: `string`</source>
        <target state="needs-translation">类型: `string`</target>
      </trans-unit>
      <trans-unit id="59190">
        <source>必需参数</source>
        <target state="needs-translation">必需参数</target>
      </trans-unit>
      <trans-unit id="59192">
        <source>密码或授权码。</source>
        <target state="needs-translation">密码或授权码。</target>
      </trans-unit>
      <trans-unit id="59194">
        <source>options.selfId</source>
        <target state="needs-translation">options.selfId</target>
      </trans-unit>
      <trans-unit id="59196">
        <source>类型: `string`</source>
        <target state="needs-translation">类型: `string`</target>
      </trans-unit>
      <trans-unit id="59198">
        <source>默认值: [`options.username`](#options-username)</source>
        <target state="needs-translation">默认值: [`options.username`](#options-username)</target>
      </trans-unit>
      <trans-unit id="59200">
        <source>邮件地址 (默认与用户名相同)。</source>
        <target state="needs-translation">邮件地址 (默认与用户名相同)。</target>
      </trans-unit>
      <trans-unit id="59202">
        <source>options.subject</source>
        <target state="needs-translation">options.subject</target>
      </trans-unit>
      <trans-unit id="59204">
        <source>类型: `string`</source>
        <target state="needs-translation">类型: `string`</target>
      </trans-unit>
      <trans-unit id="59206">
        <source>机器人发送的邮件主题。</source>
        <target state="needs-translation">机器人发送的邮件主题。</target>
      </trans-unit>
      <trans-unit id="59208">
        <source>options.imap</source>
        <target state="needs-translation">options.imap</target>
      </trans-unit>
      <trans-unit id="59210">
        <source>**imap.host:** `string` 服务器地址</source>
        <target state="needs-translation">**imap.host:** `string` 服务器地址</target>
      </trans-unit>
      <trans-unit id="59212">
        <source>**imap.port:** `number` 服务器端口</source>
        <target state="needs-translation">**imap.port:** `number` 服务器端口</target>
      </trans-unit>
      <trans-unit id="59214">
        <source>**imap.tls:** `boolean` 是否开启 TLS 加密</source>
        <target state="needs-translation">**imap.tls:** `boolean` 是否开启 TLS 加密</target>
      </trans-unit>
      <trans-unit id="59216">
        <source>接收服务器配置。</source>
        <target state="needs-translation">接收服务器配置。</target>
      </trans-unit>
      <trans-unit id="59218">
        <source>options.smtp</source>
        <target state="needs-translation">options.smtp</target>
      </trans-unit>
      <trans-unit id="59220">
        <source>**smtp.host:** `string` 服务器地址</source>
        <target state="needs-translation">**smtp.host:** `string` 服务器地址</target>
      </trans-unit>
      <trans-unit id="59222">
        <source>**smtp.port:** `number` 服务器端口</source>
        <target state="needs-translation">**smtp.port:** `number` 服务器端口</target>
      </trans-unit>
      <trans-unit id="59224">
        <source>**smtp.tls:** `boolean` 是否开启 TLS 加密</source>
        <target state="needs-translation">**smtp.tls:** `boolean` 是否开启 TLS 加密</target>
      </trans-unit>
      <trans-unit id="59226">
        <source>发送服务器配置。</source>
        <target state="needs-translation">发送服务器配置。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1656" original="/[koishijs.docs] main/zh-CN/plugins/adapter/matrix.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="59228">
        <source>@koishijs/plugin-adapter-matrix</source>
        <target state="needs-translation">@koishijs/plugin-adapter-matrix</target>
      </trans-unit>
      <trans-unit id="63692">
        <source>在接入之前，你需要准备一个带有 SSL 证书的公网域名，并将 Koishi [部署到公网](../../manual/recipe/server.md)。</source>
        <target state="needs-translation">在接入之前，你需要准备一个带有 SSL 证书的公网域名，并将 Koishi [部署到公网](../../manual/recipe/server.md)。</target>
      </trans-unit>
      <trans-unit id="59230">
        <source>接入方式</source>
        <target state="needs-translation">接入方式</target>
      </trans-unit>
      <trans-unit id="59232">
        <source>参考 [此链接](https://spec.matrix.org/unstable/application-service-api/#registration) 编写 `registry.yaml` 文件：</source>
        <target state="needs-translation">参考 [此链接](https://spec.matrix.org/unstable/application-service-api/#registration) 编写 `registry.yaml` 文件：</target>
      </trans-unit>
      <trans-unit id="59234">
        <source>id: koishi                    # Application Service 的 ID
hs_token:                     # 填入任意内容，与配置文件相对应，请确保不会泄漏
as_token:                     # 填入任意内容，与配置文件相对应，请确保不会泄漏
url:                          # 你的机器人地址，通常是 {selfUrl}/matrix
sender_localpart: koishi      # 不能与机器人的 ID 相同
namespaces:
  users:
  - exclusive: true
    # 这里填入你的机器人的 userId
    # 如果需要同时接入多个 matrix 机器人，请使用正则表达式
    regex: '@koishi:matrix.example.com'</source>
        <target state="needs-translation">id: koishi                    # Application Service 的 ID
hs_token:                     # 填入任意内容，与配置文件相对应，请确保不会泄漏
as_token:                     # 填入任意内容，与配置文件相对应，请确保不会泄漏
url:                          # 你的机器人地址，通常是 {selfUrl}/matrix
sender_localpart: koishi      # 不能与机器人的 ID 相同
namespaces:
  users:
  - exclusive: true
    # 这里填入你的机器人的 userId
    # 如果需要同时接入多个 matrix 机器人，请使用正则表达式
    regex: '@koishi:matrix.example.com'</target>
      </trans-unit>
      <trans-unit id="59236">
        <source>将 `registry.yaml` 添加进你的服务器 (如 synapse 则使用 `app_service_config_files` 配置项来指向 `registry.yaml` 并重启服务器)</source>
        <target state="needs-translation">将 `registry.yaml` 添加进你的服务器 (如 synapse 则使用 `app_service_config_files` 配置项来指向 `registry.yaml` 并重启服务器)</target>
      </trans-unit>
      <trans-unit id="59238">
        <source>在控制台中配置本插件，`host` 填入你的 Homeserver 域名，`hs_token`, `as_token` 上述文件中的对应值，`id` 填入任意值 (需要与 `sender_localpart` 不同)</source>
        <target state="needs-translation">在控制台中配置本插件，`host` 填入你的 Homeserver 域名，`hs_token`, `as_token` 上述文件中的对应值，`id` 填入任意值 (需要与 `sender_localpart` 不同)</target>
      </trans-unit>
      <trans-unit id="59240">
        <source>安装 [koishi-plugin-verifier](https://common.koishi.chat/plugins/verifier.html) (或其他自助通过群组邀请的插件)</source>
        <target state="needs-translation">安装 [koishi-plugin-verifier](https://common.koishi.chat/plugins/verifier.html) (或其他自助通过群组邀请的插件)</target>
      </trans-unit>
      <trans-unit id="59242">
        <source>在房间中邀请机器人 (机器人的 ID 为 `@${id}:${host}`)</source>
        <target state="needs-translation">在房间中邀请机器人 (机器人的 ID 为 `@${id}:${host}`)</target>
      </trans-unit>
      <trans-unit id="59244">
        <source>配置项</source>
        <target state="needs-translation">配置项</target>
      </trans-unit>
      <trans-unit id="59246">
        <source>options.id</source>
        <target state="needs-translation">options.id</target>
      </trans-unit>
      <trans-unit id="59248">
        <source>类型: `string`</source>
        <target state="needs-translation">类型: `string`</target>
      </trans-unit>
      <trans-unit id="59250">
        <source>必需参数</source>
        <target state="needs-translation">必需参数</target>
      </trans-unit>
      <trans-unit id="59252">
        <source>机器人的 ID。</source>
        <target state="needs-translation">机器人的 ID。</target>
      </trans-unit>
      <trans-unit id="59254">
        <source>机器人最后的用户名将会是 `@{id}:{host}`。</source>
        <target state="needs-translation">机器人最后的用户名将会是 `@{id}:{host}`。</target>
      </trans-unit>
      <trans-unit id="59256">
        <source>请注意不能与上面的 `sender_localpart` 相同。</source>
        <target state="needs-translation">请注意不能与上面的 `sender_localpart` 相同。</target>
      </trans-unit>
      <trans-unit id="59258">
        <source>options.host</source>
        <target state="needs-translation">options.host</target>
      </trans-unit>
      <trans-unit id="59260">
        <source>类型: `string`</source>
        <target state="needs-translation">类型: `string`</target>
      </trans-unit>
      <trans-unit id="59262">
        <source>必需参数</source>
        <target state="needs-translation">必需参数</target>
      </trans-unit>
      <trans-unit id="59264">
        <source>Matrix Homeserver 域名。</source>
        <target state="needs-translation">Matrix Homeserver 域名。</target>
      </trans-unit>
      <trans-unit id="59266">
        <source>options.hsToken</source>
        <target state="needs-translation">options.hsToken</target>
      </trans-unit>
      <trans-unit id="59268">
        <source>类型: `string`</source>
        <target state="needs-translation">类型: `string`</target>
      </trans-unit>
      <trans-unit id="59270">
        <source>必需参数</source>
        <target state="needs-translation">必需参数</target>
      </trans-unit>
      <trans-unit id="59272">
        <source>与上述文件中的 `hs_token` 对应。</source>
        <target state="needs-translation">与上述文件中的 `hs_token` 对应。</target>
      </trans-unit>
      <trans-unit id="59274">
        <source>options.asToken</source>
        <target state="needs-translation">options.asToken</target>
      </trans-unit>
      <trans-unit id="59276">
        <source>类型: `string`</source>
        <target state="needs-translation">类型: `string`</target>
      </trans-unit>
      <trans-unit id="59278">
        <source>必需参数</source>
        <target state="needs-translation">必需参数</target>
      </trans-unit>
      <trans-unit id="59280">
        <source>与上述文件中的 `as_token` 对应。</source>
        <target state="needs-translation">与上述文件中的 `as_token` 对应。</target>
      </trans-unit>
      <trans-unit id="59282">
        <source>options.endpoint</source>
        <target state="needs-translation">options.endpoint</target>
      </trans-unit>
      <trans-unit id="59284">
        <source>类型: `string`</source>
        <target state="needs-translation">类型: `string`</target>
      </trans-unit>
      <trans-unit id="59286">
        <source>Matrix Homeserver 地址。</source>
        <target state="needs-translation">Matrix Homeserver 地址。</target>
      </trans-unit>
      <trans-unit id="59288">
        <source>默认为 `https://{host}`。</source>
        <target state="needs-translation">默认为 `https://{host}`。</target>
      </trans-unit>
      <trans-unit id="59290">
        <source>options.name</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">options.name</target>
      </trans-unit>
      <trans-unit id="59292">
        <source>类型: `string`</source>
        <target state="needs-translation">类型: `string`</target>
      </trans-unit>
      <trans-unit id="59294">
        <source>机器人的名称，如果设置了将会在启动时为机器人更改。</source>
        <target state="needs-translation">机器人的名称，如果设置了将会在启动时为机器人更改。</target>
      </trans-unit>
      <trans-unit id="59296">
        <source>options.avatar</source>
        <target state="needs-translation">options.avatar</target>
      </trans-unit>
      <trans-unit id="59298">
        <source>类型: `string`</source>
        <target state="needs-translation">类型: `string`</target>
      </trans-unit>
      <trans-unit id="59300">
        <source>机器人的头像地址，如果设置了将会在启动时为机器人更改。</source>
        <target state="needs-translation">机器人的头像地址，如果设置了将会在启动时为机器人更改。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1658" original="/[koishijs.docs] main/zh-CN/plugins/adapter/qq.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="59302">
        <source>@koishijs/plugin-adapter-qq</source>
        <target state="needs-translation">@koishijs/plugin-adapter-qq</target>
      </trans-unit>
      <trans-unit id="63698">
        <source>QQ 和 QQ 频道官方机器人适配器。</source>
        <target state="needs-translation">QQ 和 QQ 频道官方机器人适配器。</target>
      </trans-unit>
      <trans-unit id="59306">
        <source>接入方法</source>
        <target state="needs-translation">接入方法</target>
      </trans-unit>
      <trans-unit id="59308">
        <source>前往 [QQ 开放平台](https://q.qq.com) 注册账号</source>
        <target state="needs-translation">前往 [QQ 开放平台](https://q.qq.com) 注册账号</target>
      </trans-unit>
      <trans-unit id="59310">
        <source>登陆进入 [机器人管理后台](https://q.qq.com/#/app/bot) 并创建官方机器人</source>
        <target state="needs-translation">登陆进入 [机器人管理后台](https://q.qq.com/#/app/bot) 并创建官方机器人</target>
      </trans-unit>
      <trans-unit id="59312">
        <source>创建完成后，在「开发设置」界面获取机器人三项基本数据 [id, token, key]</source>
        <target state="needs-translation">创建完成后，在「开发设置」界面获取机器人三项基本数据 [id, token, key]</target>
      </trans-unit>
      <trans-unit id="59314">
        <source>将上面的基本数据作为机器人配置项即可使用</source>
        <target state="needs-translation">将上面的基本数据作为机器人配置项即可使用</target>
      </trans-unit>
      <trans-unit id="59316">
        <source>机器人选项</source>
        <target state="needs-translation">机器人选项</target>
      </trans-unit>
      <trans-unit id="59318">
        <source>config.id</source>
        <target state="needs-translation">config.id</target>
      </trans-unit>
      <trans-unit id="59320">
        <source>类型: `string`</source>
        <target state="needs-translation">类型: `string`</target>
      </trans-unit>
      <trans-unit id="59322">
        <source>机器人 id。</source>
        <target state="needs-translation">机器人 id。</target>
      </trans-unit>
      <trans-unit id="59324">
        <source>config.key</source>
        <target state="needs-translation">config.key</target>
      </trans-unit>
      <trans-unit id="59326">
        <source>类型: `string`</source>
        <target state="needs-translation">类型: `string`</target>
      </trans-unit>
      <trans-unit id="59328">
        <source>机器人密钥，管理端又称呼为 secret。</source>
        <target state="needs-translation">机器人密钥，管理端又称呼为 secret。</target>
      </trans-unit>
      <trans-unit id="59330">
        <source>config.token</source>
        <target state="needs-translation">config.token</target>
      </trans-unit>
      <trans-unit id="59332">
        <source>类型: `string`</source>
        <target state="needs-translation">类型: `string`</target>
      </trans-unit>
      <trans-unit id="59334">
        <source>机器人 token。</source>
        <target state="needs-translation">机器人 token。</target>
      </trans-unit>
      <trans-unit id="59336">
        <source>config.type</source>
        <target state="needs-translation">config.type</target>
      </trans-unit>
      <trans-unit id="59338">
        <source>类型: `'private' | 'public'`</source>
        <target state="needs-translation">类型: `'private' | 'public'`</target>
      </trans-unit>
      <trans-unit id="59340">
        <source>是否为公域机器人。</source>
        <target state="needs-translation">是否为公域机器人。</target>
      </trans-unit>
      <trans-unit id="59342">
        <source>config.sandbox</source>
        <target state="needs-translation">config.sandbox</target>
      </trans-unit>
      <trans-unit id="59344">
        <source>类型: `boolean`</source>
        <target state="needs-translation">类型: `boolean`</target>
      </trans-unit>
      <trans-unit id="59346">
        <source>默认值: `true`</source>
        <target state="needs-translation">默认值: `true`</target>
      </trans-unit>
      <trans-unit id="59348">
        <source>是否开启沙盒。</source>
        <target state="needs-translation">是否开启沙盒。</target>
      </trans-unit>
      <trans-unit id="59350">
        <source>config.endpoint</source>
        <target state="needs-translation">config.endpoint</target>
      </trans-unit>
      <trans-unit id="59352">
        <source>类型: `string`</source>
        <target state="needs-translation">类型: `string`</target>
      </trans-unit>
      <trans-unit id="59354">
        <source>默认值: `'https://api.sgroup.qq.com/'`</source>
        <target state="needs-translation">默认值: `'https://api.sgroup.qq.com/'`</target>
      </trans-unit>
      <trans-unit id="59356">
        <source>要请求的 API 网址。</source>
        <target state="needs-translation">要请求的 API 网址。</target>
      </trans-unit>
      <trans-unit id="59358">
        <source>config.authType</source>
        <target state="needs-translation">config.authType</target>
      </trans-unit>
      <trans-unit id="59360">
        <source>类型: `'bot' | 'bearer'`</source>
        <target state="needs-translation">类型: `'bot' | 'bearer'`</target>
      </trans-unit>
      <trans-unit id="59362">
        <source>默认值: `'bot'`</source>
        <target state="needs-translation">默认值: `'bot'`</target>
      </trans-unit>
      <trans-unit id="59364">
        <source>验证方式。</source>
        <target state="needs-translation">验证方式。</target>
      </trans-unit>
      <trans-unit id="63784">
        <source>内部接口</source>
        <target state="needs-translation">内部接口</target>
      </trans-unit>
      <trans-unit id="63966">
        <source>关于内部接口的使用方式，请参见 [访问内部接口](../../guide/adapter/bot.md#access-from-plugin)。</source>
        <target state="needs-translation">关于内部接口的使用方式，请参见 [访问内部接口](../../guide/adapter/bot.md#access-from-plugin)。</target>
      </trans-unit>
      <trans-unit id="63788">
        <source>QQ 群和频道有着不同的机器人接口，因此我们提供了两套内部 API。</source>
        <target state="needs-translation">QQ 群和频道有着不同的机器人接口，因此我们提供了两套内部 API。</target>
      </trans-unit>
      <trans-unit id="63790">
        <source>群 (含私聊)</source>
        <target state="needs-translation">群 (含私聊)</target>
      </trans-unit>
      <trans-unit id="63792">
        <source>对应的平台名称为 `qq`。</source>
        <target state="needs-translation">对应的平台名称为 `qq`。</target>
      </trans-unit>
      <trans-unit id="63794">
        <source>`internal.acknowledgeInteraction()`</source>
        <target state="needs-translation">`internal.acknowledgeInteraction()`</target>
      </trans-unit>
      <trans-unit id="63796">
        <source>`internal.sendFileGuild()`</source>
        <target state="needs-translation">`internal.sendFileGuild()`</target>
      </trans-unit>
      <trans-unit id="63798">
        <source>`internal.sendFilePrivate()`</source>
        <target state="needs-translation">`internal.sendFilePrivate()`</target>
      </trans-unit>
      <trans-unit id="63800">
        <source>`internal.sendMessage()`</source>
        <target state="needs-translation">`internal.sendMessage()`</target>
      </trans-unit>
      <trans-unit id="63802">
        <source>`internal.sendPrivateMessage()`</source>
        <target state="needs-translation">`internal.sendPrivateMessage()`</target>
      </trans-unit>
      <trans-unit id="63804">
        <source>频道 (含私聊)</source>
        <target state="needs-translation">频道 (含私聊)</target>
      </trans-unit>
      <trans-unit id="63806">
        <source>对应的平台名称为 `qqguild`。</source>
        <target state="needs-translation">对应的平台名称为 `qqguild`。</target>
      </trans-unit>
      <trans-unit id="63808">
        <source>`internal.addGuildMemberRole()`</source>
        <target state="needs-translation">`internal.addGuildMemberRole()`</target>
      </trans-unit>
      <trans-unit id="63810">
        <source>`internal.createDMS()`</source>
        <target state="needs-translation">`internal.createDMS()`</target>
      </trans-unit>
      <trans-unit id="63812">
        <source>`internal.createGuildApiPermissionDemand()`</source>
        <target state="needs-translation">`internal.createGuildApiPermissionDemand()`</target>
      </trans-unit>
      <trans-unit id="63814">
        <source>`internal.createGuildAnnounce()`</source>
        <target state="needs-translation">`internal.createGuildAnnounce()`</target>
      </trans-unit>
      <trans-unit id="63816">
        <source>`internal.createGuildChannel()`</source>
        <target state="needs-translation">`internal.createGuildChannel()`</target>
      </trans-unit>
      <trans-unit id="63818">
        <source>`internal.createGuildRole()`</source>
        <target state="needs-translation">`internal.createGuildRole()`</target>
      </trans-unit>
      <trans-unit id="63820">
        <source>`internal.createPinsMessage()`</source>
        <target state="needs-translation">`internal.createPinsMessage()`</target>
      </trans-unit>
      <trans-unit id="63822">
        <source>`internal.createPost()`</source>
        <target state="needs-translation">`internal.createPost()`</target>
      </trans-unit>
      <trans-unit id="63824">
        <source>`internal.createSchedule()`</source>
        <target state="needs-translation">`internal.createSchedule()`</target>
      </trans-unit>
      <trans-unit id="63826">
        <source>`internal.createReaction()`</source>
        <target state="needs-translation">`internal.createReaction()`</target>
      </trans-unit>
      <trans-unit id="63828">
        <source>`internal.deleteChannel()`</source>
        <target state="needs-translation">`internal.deleteChannel()`</target>
      </trans-unit>
      <trans-unit id="63830">
        <source>`internal.deleteDM()`</source>
        <target state="needs-translation">`internal.deleteDM()`</target>
      </trans-unit>
      <trans-unit id="63832">
        <source>`internal.deleteMessage()`</source>
        <target state="needs-translation">`internal.deleteMessage()`</target>
      </trans-unit>
      <trans-unit id="63834">
        <source>`internal.deleteReaction()`</source>
        <target state="needs-translation">`internal.deleteReaction()`</target>
      </trans-unit>
      <trans-unit id="63836">
        <source>`internal.getChannel()`</source>
        <target state="needs-translation">`internal.getChannel()`</target>
      </trans-unit>
      <trans-unit id="63838">
        <source>`internal.getChannelMemberPermissions()`</source>
        <target state="needs-translation">`internal.getChannelMemberPermissions()`</target>
      </trans-unit>
      <trans-unit id="63840">
        <source>`internal.getChannelOnlineNums()`</source>
        <target state="needs-translation">`internal.getChannelOnlineNums()`</target>
      </trans-unit>
      <trans-unit id="63842">
        <source>`internal.getChannelRole()`</source>
        <target state="needs-translation">`internal.getChannelRole()`</target>
      </trans-unit>
      <trans-unit id="63844">
        <source>`internal.getChannels()`</source>
        <target state="needs-translation">`internal.getChannels()`</target>
      </trans-unit>
      <trans-unit id="63846">
        <source>`internal.getGuild()`</source>
        <target state="needs-translation">`internal.getGuild()`</target>
      </trans-unit>
      <trans-unit id="63848">
        <source>`internal.getGuildApiPermissions()`</source>
        <target state="needs-translation">`internal.getGuildApiPermissions()`</target>
      </trans-unit>
      <trans-unit id="63850">
        <source>`internal.getGuildMember()`</source>
        <target state="needs-translation">`internal.getGuildMember()`</target>
      </trans-unit>
      <trans-unit id="63852">
        <source>`internal.getGuildMembers()`</source>
        <target state="needs-translation">`internal.getGuildMembers()`</target>
      </trans-unit>
      <trans-unit id="63854">
        <source>`internal.getGuildRoleMembers()`</source>
        <target state="needs-translation">`internal.getGuildRoleMembers()`</target>
      </trans-unit>
      <trans-unit id="63856">
        <source>`internal.getGuildRoles()`</source>
        <target state="needs-translation">`internal.getGuildRoles()`</target>
      </trans-unit>
      <trans-unit id="63858">
        <source>`internal.getGuilds()`</source>
        <target state="needs-translation">`internal.getGuilds()`</target>
      </trans-unit>
      <trans-unit id="63860">
        <source>`internal.getMe()`</source>
        <target state="needs-translation">`internal.getMe()`</target>
      </trans-unit>
      <trans-unit id="63862">
        <source>`internal.getMessage()`</source>
        <target state="needs-translation">`internal.getMessage()`</target>
      </trans-unit>
      <trans-unit id="63864">
        <source>`internal.getMessageSetting()`</source>
        <target state="needs-translation">`internal.getMessageSetting()`</target>
      </trans-unit>
      <trans-unit id="63866">
        <source>`internal.getPinsMessage()`</source>
        <target state="needs-translation">`internal.getPinsMessage()`</target>
      </trans-unit>
      <trans-unit id="63868">
        <source>`internal.getSchedule()`</source>
        <target state="needs-translation">`internal.getSchedule()`</target>
      </trans-unit>
      <trans-unit id="63870">
        <source>`internal.getSchedules()`</source>
        <target state="needs-translation">`internal.getSchedules()`</target>
      </trans-unit>
      <trans-unit id="63872">
        <source>`internal.getReactions()`</source>
        <target state="needs-translation">`internal.getReactions()`</target>
      </trans-unit>
      <trans-unit id="63874">
        <source>`internal.getThread()`</source>
        <target state="needs-translation">`internal.getThread()`</target>
      </trans-unit>
      <trans-unit id="63876">
        <source>`internal.listThreads()`</source>
        <target state="needs-translation">`internal.listThreads()`</target>
      </trans-unit>
      <trans-unit id="63878">
        <source>`internal.modifyChannel()`</source>
        <target state="needs-translation">`internal.modifyChannel()`</target>
      </trans-unit>
      <trans-unit id="63880">
        <source>`internal.modifyChannelMemberPermissions()`</source>
        <target state="needs-translation">`internal.modifyChannelMemberPermissions()`</target>
      </trans-unit>
      <trans-unit id="63882">
        <source>`internal.modifyChannelRole()`</source>
        <target state="needs-translation">`internal.modifyChannelRole()`</target>
      </trans-unit>
      <trans-unit id="63884">
        <source>`internal.modifyGuildRole()`</source>
        <target state="needs-translation">`internal.modifyGuildRole()`</target>
      </trans-unit>
      <trans-unit id="63886">
        <source>`internal.modifySchedule()`</source>
        <target state="needs-translation">`internal.modifySchedule()`</target>
      </trans-unit>
      <trans-unit id="63888">
        <source>`internal.muteGuild()`</source>
        <target state="needs-translation">`internal.muteGuild()`</target>
      </trans-unit>
      <trans-unit id="63890">
        <source>`internal.muteGuildMember()`</source>
        <target state="needs-translation">`internal.muteGuildMember()`</target>
      </trans-unit>
      <trans-unit id="63892">
        <source>`internal.muteGuildMembers()`</source>
        <target state="needs-translation">`internal.muteGuildMembers()`</target>
      </trans-unit>
      <trans-unit id="63894">
        <source>`internal.removeGuildAnnounce()`</source>
        <target state="needs-translation">`internal.removeGuildAnnounce()`</target>
      </trans-unit>
      <trans-unit id="63896">
        <source>`internal.removeGuildMember()`</source>
        <target state="needs-translation">`internal.removeGuildMember()`</target>
      </trans-unit>
      <trans-unit id="63898">
        <source>`internal.removeGuildMemberRole()`</source>
        <target state="needs-translation">`internal.removeGuildMemberRole()`</target>
      </trans-unit>
      <trans-unit id="63900">
        <source>`internal.removeGuildRole()`</source>
        <target state="needs-translation">`internal.removeGuildRole()`</target>
      </trans-unit>
      <trans-unit id="63902">
        <source>`internal.removePinsMessage()`</source>
        <target state="needs-translation">`internal.removePinsMessage()`</target>
      </trans-unit>
      <trans-unit id="63904">
        <source>`internal.removePost()`</source>
        <target state="needs-translation">`internal.removePost()`</target>
      </trans-unit>
      <trans-unit id="63906">
        <source>`internal.removeSchedule()`</source>
        <target state="needs-translation">`internal.removeSchedule()`</target>
      </trans-unit>
      <trans-unit id="63908">
        <source>`internal.sendDM()`</source>
        <target state="needs-translation">`internal.sendDM()`</target>
      </trans-unit>
      <trans-unit id="63910">
        <source>`internal.sendMessage()`</source>
        <target state="needs-translation">`internal.sendMessage()`</target>
      </trans-unit>
    </body>
  </file>
  <file id="1660" original="/[koishijs.docs] main/zh-CN/plugins/adapter/satori.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="59366">
        <source>@koishijs/plugin-adapter-satori</source>
        <target state="needs-translation">@koishijs/plugin-adapter-satori</target>
      </trans-unit>
      <trans-unit id="59368">
        <source>另见：[@koishijs/plugin-server-satori](../develop/server-satori.md)。</source>
        <target state="needs-translation">另见：[@koishijs/plugin-server-satori](../develop/server-satori.md)。</target>
      </trans-unit>
      <trans-unit id="59370">
        <source>接入方式</source>
        <target state="needs-translation">接入方式</target>
      </trans-unit>
      <trans-unit id="59372">
        <source>填写下方的配置项即可。</source>
        <target state="needs-translation">填写下方的配置项即可。</target>
      </trans-unit>
      <trans-unit id="59374">
        <source>配置项</source>
        <target state="needs-translation">配置项</target>
      </trans-unit>
      <trans-unit id="59376">
        <source>config.endpoint</source>
        <target state="needs-translation">config.endpoint</target>
      </trans-unit>
      <trans-unit id="59378">
        <source>类型: `string`</source>
        <target state="needs-translation">类型: `string`</target>
      </trans-unit>
      <trans-unit id="59380">
        <source>必需参数</source>
        <target state="needs-translation">必需参数</target>
      </trans-unit>
      <trans-unit id="59382">
        <source>Satori 服务器的地址。</source>
        <target state="needs-translation">Satori 服务器的地址。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1662" original="/[koishijs.docs] main/zh-CN/plugins/adapter/slack.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="59384">
        <source>@koishijs/plugin-adapter-slack</source>
        <target state="needs-translation">@koishijs/plugin-adapter-slack</target>
      </trans-unit>
      <trans-unit id="63700">
        <source>如果选择通信方式为 `http`，那么你需要准备一个带有 SSL 证书的公网域名，并将 Koishi [部署到公网](../../manual/recipe/server.md)。</source>
        <target state="needs-translation">如果选择通信方式为 `http`，那么你需要准备一个带有 SSL 证书的公网域名，并将 Koishi [部署到公网](../../manual/recipe/server.md)。</target>
      </trans-unit>
      <trans-unit id="59386">
        <source>接入方式</source>
        <target state="needs-translation">接入方式</target>
      </trans-unit>
      <trans-unit id="59388">
        <source>Slack 适配器提供了两种接入方式：`http` 和 `ws` (推荐)。</source>
        <target state="needs-translation">Slack 适配器提供了两种接入方式：`http` 和 `ws` (推荐)。</target>
      </trans-unit>
      <trans-unit id="59390">
        <source>其中，`http` 连接方式需要一个公网可访问的地址。</source>
        <target state="needs-translation">其中，`http` 连接方式需要一个公网可访问的地址。</target>
      </trans-unit>
      <trans-unit id="59392">
        <source>在接入之前，请根据使用需求填写插件的 [`protocol`](#config-protocol) 字段。</source>
        <target state="needs-translation">在接入之前，请根据使用需求填写插件的 [`protocol`](#config-protocol) 字段。</target>
      </trans-unit>
      <trans-unit id="59394">
        <source>准备一个 [Slack](https://slack.com/signin) 账号和工作区。</source>
        <target state="needs-translation">准备一个 [Slack](https://slack.com/signin) 账号和工作区。</target>
      </trans-unit>
      <trans-unit id="59396">
        <source>前往 [应用后台](https://api.slack.com/apps)，点击「Create New App」&gt;「From Scratch」，填入应用名称和所添加的工作区 (目前适配器只支持一个应用处理一个工作区的事件)，点击「Create App」。</source>
        <target state="needs-translation">前往 [应用后台](https://api.slack.com/apps)，点击「Create New App」&gt;「From Scratch」，填入应用名称和所添加的工作区 (目前适配器只支持一个应用处理一个工作区的事件)，点击「Create App」。</target>
      </trans-unit>
      <trans-unit id="59398">
        <source>![app-1](/adapter/slack/app-1.webp)</source>
        <target state="needs-translation">![app-1](/adapter/slack/app-1.webp)</target>
      </trans-unit>
      <trans-unit id="59400">
        <source>仅限 `http` 连接方式：在跳转至的应用信息页面，在底部复制 `Signing Secret`，填入插件的 [`signing`](#config-signing) 字段。</source>
        <target state="needs-translation">仅限 `http` 连接方式：在跳转至的应用信息页面，在底部复制 `Signing Secret`，填入插件的 [`signing`](#config-signing) 字段。</target>
      </trans-unit>
      <trans-unit id="59402">
        <source>![secret-1](/adapter/slack/secret-1.webp)</source>
        <target state="needs-translation">![secret-1](/adapter/slack/secret-1.webp)</target>
      </trans-unit>
      <trans-unit id="59404">
        <source>在「App-Level Tokens」一栏，点击带有 Generate 字样的按钮，填写 Token 名称，在下方下拉框中选择 `connections:write`，点击绿色 Generate 按钮，在弹出的对话框中点击 Copy 按钮，填入插件的 [`token`](#config-token) 字段。</source>
        <target state="needs-translation">在「App-Level Tokens」一栏，点击带有 Generate 字样的按钮，填写 Token 名称，在下方下拉框中选择 `connections:write`，点击绿色 Generate 按钮，在弹出的对话框中点击 Copy 按钮，填入插件的 [`token`](#config-token) 字段。</target>
      </trans-unit>
      <trans-unit id="59406">
        <source>![secret-2](/adapter/slack/secret-2.webp)</source>
        <target state="needs-translation">![secret-2](/adapter/slack/secret-2.webp)</target>
      </trans-unit>
      <trans-unit id="59408">
        <source>仅限 `http` 连接方式：在左侧打开「Event Subscriptions」页面，勾选「Enable Events」。</source>
        <target state="needs-translation">仅限 `http` 连接方式：在左侧打开「Event Subscriptions」页面，勾选「Enable Events」。</target>
      </trans-unit>
      <trans-unit id="59410">
        <source>将机器人的 `selfUrl` 值后连接 `/slack` (如 `https://example.com/slack`)，填入「Request URL」中。</source>
        <target state="needs-translation">将机器人的 `selfUrl` 值后连接 `/slack` (如 `https://example.com/slack`)，填入「Request URL」中。</target>
      </trans-unit>
      <trans-unit id="59412">
        <source>![webhook](/adapter/slack/webhook.webp)</source>
        <target state="needs-translation">![webhook](/adapter/slack/webhook.webp)</target>
      </trans-unit>
      <trans-unit id="59414">
        <source>仅限 `ws` 连接方式：在左侧打开「Socket Mode」页面，勾选「Enable Socket Mode」；再打开「Event Subscriptions」页面，勾选「Enable Events」。</source>
        <target state="needs-translation">仅限 `ws` 连接方式：在左侧打开「Socket Mode」页面，勾选「Enable Socket Mode」；再打开「Event Subscriptions」页面，勾选「Enable Events」。</target>
      </trans-unit>
      <trans-unit id="59416">
        <source>![websocket](/adapter/slack/websocket.webp)</source>
        <target state="needs-translation">![websocket](/adapter/slack/websocket.webp)</target>
      </trans-unit>
      <trans-unit id="59418">
        <source>前往「Event Subscriptions」页面，在「Subscribe to bot events」下方勾选事件 (参见 [推荐的事件列表](#推荐的事件列表))，填写完整后点击右下角的绿色「Save Changes」按钮保存。</source>
        <target state="needs-translation">前往「Event Subscriptions」页面，在「Subscribe to bot events」下方勾选事件 (参见 [推荐的事件列表](#推荐的事件列表))，填写完整后点击右下角的绿色「Save Changes」按钮保存。</target>
      </trans-unit>
      <trans-unit id="59420">
        <source>![events](/adapter/slack/events.webp)</source>
        <target state="needs-translation">![events](/adapter/slack/events.webp)</target>
      </trans-unit>
      <trans-unit id="59422">
        <source>前往「OAuth &amp; Permissions」页面，在「Bot Token Scopes」下方添加权限 (参见 [推荐的权限列表](#推荐的权限列表))。</source>
        <target state="needs-translation">前往「OAuth &amp; Permissions」页面，在「Bot Token Scopes」下方添加权限 (参见 [推荐的权限列表](#推荐的权限列表))。</target>
      </trans-unit>
      <trans-unit id="59424">
        <source>![scopes](/adapter/slack/scopes.webp)</source>
        <target state="needs-translation">![scopes](/adapter/slack/scopes.webp)</target>
      </trans-unit>
      <trans-unit id="59426">
        <source>返回页面上方，点击「Install to Workspace」，点击 Allow 授权，复制「Bot User OAuth Token」，填入插件的 [`botToken`](#config-bottoken) 字段。</source>
        <target state="needs-translation">返回页面上方，点击「Install to Workspace」，点击 Allow 授权，复制「Bot User OAuth Token」，填入插件的 [`botToken`](#config-bottoken) 字段。</target>
      </trans-unit>
      <trans-unit id="59428">
        <source>![workspace](/adapter/slack/workspace.webp)</source>
        <target state="needs-translation">![workspace](/adapter/slack/workspace.webp)</target>
      </trans-unit>
      <trans-unit id="59430">
        <source>在相应工作区 @ 机器人名称或右键频道详情，选择 集成-添加应用 添加机器人到频道中。</source>
        <target state="needs-translation">在相应工作区 @ 机器人名称或右键频道详情，选择 集成-添加应用 添加机器人到频道中。</target>
      </trans-unit>
      <trans-unit id="59432">
        <source>推荐的事件列表</source>
        <target state="needs-translation">推荐的事件列表</target>
      </trans-unit>
      <trans-unit id="59434">
        <source>channel_archive</source>
        <target state="needs-translation">channel_archive</target>
      </trans-unit>
      <trans-unit id="59436">
        <source>channel_created</source>
        <target state="needs-translation">channel_created</target>
      </trans-unit>
      <trans-unit id="59438">
        <source>channel_deleted</source>
        <target state="needs-translation">channel_deleted</target>
      </trans-unit>
      <trans-unit id="59440">
        <source>channel_left</source>
        <target state="needs-translation">channel_left</target>
      </trans-unit>
      <trans-unit id="59442">
        <source>channel_rename</source>
        <target state="needs-translation">channel_rename</target>
      </trans-unit>
      <trans-unit id="59444">
        <source>member_joined_channel</source>
        <target state="needs-translation">member_joined_channel</target>
      </trans-unit>
      <trans-unit id="59446">
        <source>member_left_channel</source>
        <target state="needs-translation">member_left_channel</target>
      </trans-unit>
      <trans-unit id="59448">
        <source>message.channels</source>
        <target state="needs-translation">message.channels</target>
      </trans-unit>
      <trans-unit id="59450">
        <source>message.groups</source>
        <target state="needs-translation">message.groups</target>
      </trans-unit>
      <trans-unit id="59452">
        <source>message.im</source>
        <target state="needs-translation">message.im</target>
      </trans-unit>
      <trans-unit id="59454">
        <source>reaction_added</source>
        <target state="needs-translation">reaction_added</target>
      </trans-unit>
      <trans-unit id="59456">
        <source>reaction_removed</source>
        <target state="needs-translation">reaction_removed</target>
      </trans-unit>
      <trans-unit id="59458">
        <source>team_join</source>
        <target state="needs-translation">team_join</target>
      </trans-unit>
      <trans-unit id="59460">
        <source>推荐的权限列表</source>
        <target state="needs-translation">推荐的权限列表</target>
      </trans-unit>
      <trans-unit id="59462">
        <source>channels:history</source>
        <target state="needs-translation">channels:history</target>
      </trans-unit>
      <trans-unit id="59464">
        <source>channels:read</source>
        <target state="needs-translation">channels:read</target>
      </trans-unit>
      <trans-unit id="59466">
        <source>channels:write.invites</source>
        <target state="needs-translation">channels:write.invites</target>
      </trans-unit>
      <trans-unit id="59468">
        <source>chat:write</source>
        <target state="needs-translation">chat:write</target>
      </trans-unit>
      <trans-unit id="59470">
        <source>chat:write.customize</source>
        <target state="needs-translation">chat:write.customize</target>
      </trans-unit>
      <trans-unit id="59472">
        <source>chat:write.public</source>
        <target state="needs-translation">chat:write.public</target>
      </trans-unit>
      <trans-unit id="59474">
        <source>files:read</source>
        <target state="needs-translation">files:read</target>
      </trans-unit>
      <trans-unit id="59476">
        <source>files:write</source>
        <target state="needs-translation">files:write</target>
      </trans-unit>
      <trans-unit id="59478">
        <source>groups:history</source>
        <target state="needs-translation">groups:history</target>
      </trans-unit>
      <trans-unit id="59480">
        <source>groups:read</source>
        <target state="needs-translation">groups:read</target>
      </trans-unit>
      <trans-unit id="59482">
        <source>groups:write</source>
        <target state="needs-translation">groups:write</target>
      </trans-unit>
      <trans-unit id="59484">
        <source>im:history</source>
        <target state="needs-translation">im:history</target>
      </trans-unit>
      <trans-unit id="59486">
        <source>im:write</source>
        <target state="needs-translation">im:write</target>
      </trans-unit>
      <trans-unit id="59488">
        <source>reactions:read</source>
        <target state="needs-translation">reactions:read</target>
      </trans-unit>
      <trans-unit id="59490">
        <source>reactions:write</source>
        <target state="needs-translation">reactions:write</target>
      </trans-unit>
      <trans-unit id="59492">
        <source>users:read</source>
        <target state="needs-translation">users:read</target>
      </trans-unit>
      <trans-unit id="59494">
        <source>配置项</source>
        <target state="needs-translation">配置项</target>
      </trans-unit>
      <trans-unit id="59496">
        <source>config.protocol</source>
        <target state="needs-translation">config.protocol</target>
      </trans-unit>
      <trans-unit id="59498">
        <source>可选值: http, ws</source>
        <target state="needs-translation">可选值: http, ws</target>
      </trans-unit>
      <trans-unit id="59500">
        <source>要使用的协议类型。</source>
        <target state="needs-translation">要使用的协议类型。</target>
      </trans-unit>
      <trans-unit id="59502">
        <source>config.token</source>
        <target state="needs-translation">config.token</target>
      </trans-unit>
      <trans-unit id="59504">
        <source>类型: `string`</source>
        <target state="needs-translation">类型: `string`</target>
      </trans-unit>
      <trans-unit id="59506">
        <source>必需选项</source>
        <target state="needs-translation">必需选项</target>
      </trans-unit>
      <trans-unit id="59508">
        <source>应用令牌。</source>
        <target state="needs-translation">应用令牌。</target>
      </trans-unit>
      <trans-unit id="59510">
        <source>config.botToken</source>
        <target state="needs-translation">config.botToken</target>
      </trans-unit>
      <trans-unit id="59512">
        <source>类型: `string`</source>
        <target state="needs-translation">类型: `string`</target>
      </trans-unit>
      <trans-unit id="59514">
        <source>必需选项</source>
        <target state="needs-translation">必需选项</target>
      </trans-unit>
      <trans-unit id="59516">
        <source>机器人令牌。</source>
        <target state="needs-translation">机器人令牌。</target>
      </trans-unit>
      <trans-unit id="59518">
        <source>HTTP 配置项</source>
        <target state="needs-translation">HTTP 配置项</target>
      </trans-unit>
      <trans-unit id="59520">
        <source>config.signing</source>
        <target state="needs-translation">config.signing</target>
      </trans-unit>
      <trans-unit id="59522">
        <source>类型: `string`</source>
        <target state="needs-translation">类型: `string`</target>
      </trans-unit>
      <trans-unit id="59524">
        <source>必需选项</source>
        <target state="needs-translation">必需选项</target>
      </trans-unit>
      <trans-unit id="59526">
        <source>用于验证请求来源的签名密钥。</source>
        <target state="needs-translation">用于验证请求来源的签名密钥。</target>
      </trans-unit>
      <trans-unit id="59528">
        <source>WS 配置项</source>
        <target state="needs-translation">WS 配置项</target>
      </trans-unit>
      <trans-unit id="59530">
        <source>包括全部的 [`WsClient`](../../api/core/adapter.md#类-adapter-wsclient) 选项。</source>
        <target state="needs-translation">包括全部的 [`WsClient`](../../api/core/adapter.md#类-adapter-wsclient) 选项。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1664" original="/[koishijs.docs] main/zh-CN/plugins/adapter/telegram.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="59532">
        <source>@koishijs/plugin-adapter-telegram</source>
        <target state="needs-translation">@koishijs/plugin-adapter-telegram</target>
      </trans-unit>
      <trans-unit id="63702">
        <source>如果选择通信方式为 `http`，那么你需要准备一个带有 SSL 证书的公网域名，并将 Koishi [部署到公网](../../manual/recipe/server.md)。</source>
        <target state="needs-translation">如果选择通信方式为 `http`，那么你需要准备一个带有 SSL 证书的公网域名，并将 Koishi [部署到公网](../../manual/recipe/server.md)。</target>
      </trans-unit>
      <trans-unit id="59534">
        <source>接入方法</source>
        <target state="needs-translation">接入方法</target>
      </trans-unit>
      <trans-unit id="59536">
        <source>搜索 @botfather（有个官方认证的符号）并进入聊天界面</source>
        <target state="needs-translation">搜索 @botfather（有个官方认证的符号）并进入聊天界面</target>
      </trans-unit>
      <trans-unit id="59538">
        <source>输入 `/start` 后，会出现一个使用菜单，你可以使用这里指令对你的机器人进行配置</source>
        <target state="needs-translation">输入 `/start` 后，会出现一个使用菜单，你可以使用这里指令对你的机器人进行配置</target>
      </trans-unit>
      <trans-unit id="59540">
        <source>要创建一个机器人，请点击 `/newbot`，并根据系统提示完成创建流程</source>
        <target state="needs-translation">要创建一个机器人，请点击 `/newbot`，并根据系统提示完成创建流程</target>
      </trans-unit>
      <trans-unit id="59542">
        <source>使用 `/setprivacy` 关闭 Privacy Mode（设置为 DISABLED，不然机器人只能收到特定消息）</source>
        <target state="needs-translation">使用 `/setprivacy` 关闭 Privacy Mode（设置为 DISABLED，不然机器人只能收到特定消息）</target>
      </trans-unit>
      <trans-unit id="59544">
        <source>创建完毕后，你会获得一个 token（请注意不要泄露），将其作为机器人配置项即可使用</source>
        <target state="needs-translation">创建完毕后，你会获得一个 token（请注意不要泄露），将其作为机器人配置项即可使用</target>
      </trans-unit>
      <trans-unit id="59546">
        <source>参考文档：&lt;https://core.telegram.org/bots&gt;</source>
        <target state="needs-translation">参考文档：&lt;https://core.telegram.org/bots&gt;</target>
      </trans-unit>
      <trans-unit id="59548">
        <source>如果启动机器人后发现收不到不带 `/` 的消息，这很可能是由于 Privacy Mode 未开启。</source>
        <target state="needs-translation">如果启动机器人后发现收不到不带 `/` 的消息，这很可能是由于 Privacy Mode 未开启。</target>
      </trans-unit>
      <trans-unit id="59550">
        <source>如果开启后仍然收不到消息，请尝试将机器人从群组中移除后重新加入。</source>
        <target state="needs-translation">如果开启后仍然收不到消息，请尝试将机器人从群组中移除后重新加入。</target>
      </trans-unit>
      <trans-unit id="59552">
        <source>机器人选项</source>
        <target state="needs-translation">机器人选项</target>
      </trans-unit>
      <trans-unit id="59554">
        <source>options.protocol</source>
        <target state="needs-translation">options.protocol</target>
      </trans-unit>
      <trans-unit id="59556">
        <source>可选值: server, polling</source>
        <target state="needs-translation">可选值: server, polling</target>
      </trans-unit>
      <trans-unit id="59558">
        <source>要使用的协议类型。</source>
        <target state="needs-translation">要使用的协议类型。</target>
      </trans-unit>
      <trans-unit id="59560">
        <source>options.token</source>
        <target state="needs-translation">options.token</target>
      </trans-unit>
      <trans-unit id="59562">
        <source>类型: `string`</source>
        <target state="needs-translation">类型: `string`</target>
      </trans-unit>
      <trans-unit id="59564">
        <source>机器人账户的令牌。</source>
        <target state="needs-translation">机器人账户的令牌。</target>
      </trans-unit>
      <trans-unit id="59566">
        <source>options.endpoint</source>
        <target state="needs-translation">options.endpoint</target>
      </trans-unit>
      <trans-unit id="59568">
        <source>类型: `string`</source>
        <target state="needs-translation">类型: `string`</target>
      </trans-unit>
      <trans-unit id="59570">
        <source>默认值: `'https://api.telegram.org'`</source>
        <target state="needs-translation">默认值: `'https://api.telegram.org'`</target>
      </trans-unit>
      <trans-unit id="59572">
        <source>要连接的服务器地址。</source>
        <target state="needs-translation">要连接的服务器地址。</target>
      </trans-unit>
      <trans-unit id="59574">
        <source>options.proxyAgent</source>
        <target state="needs-translation">options.proxyAgent</target>
      </trans-unit>
      <trans-unit id="59576">
        <source>类型: `string`</source>
        <target state="needs-translation">类型: `string`</target>
      </trans-unit>
      <trans-unit id="59578">
        <source>默认值: [`app.config.request.proxyAgent`](../../api/core/app.md#options-request-proxyagent)</source>
        <target state="needs-translation">默认值: [`app.config.request.proxyAgent`](../../api/core/app.md#options-request-proxyagent)</target>
      </trans-unit>
      <trans-unit id="59580">
        <source>请求时默认使用的网络代理。</source>
        <target state="needs-translation">请求时默认使用的网络代理。</target>
      </trans-unit>
      <trans-unit id="59582">
        <source>options.files.endpoint</source>
        <target state="needs-translation">options.files.endpoint</target>
      </trans-unit>
      <trans-unit id="59584">
        <source>类型: `string`</source>
        <target state="needs-translation">类型: `string`</target>
      </trans-unit>
      <trans-unit id="59586">
        <source>默认值: [`options.endpoint`](#options-bots-endpoint)</source>
        <target state="needs-translation">默认值: [`options.endpoint`](#options-bots-endpoint)</target>
      </trans-unit>
      <trans-unit id="59588">
        <source>文件请求的终结点。</source>
        <target state="needs-translation">文件请求的终结点。</target>
      </trans-unit>
      <trans-unit id="59590">
        <source>options.files.local</source>
        <target state="needs-translation">options.files.local</target>
      </trans-unit>
      <trans-unit id="59592">
        <source>类型: `boolean`</source>
        <target state="needs-translation">类型: `boolean`</target>
      </trans-unit>
      <trans-unit id="59594">
        <source>默认值: `false`</source>
        <target state="needs-translation">默认值: `false`</target>
      </trans-unit>
      <trans-unit id="59596">
        <source>是否启用 [Telegram Bot API](https://github.com/tdlib/telegram-bot-api) 本地模式。</source>
        <target state="needs-translation">是否启用 [Telegram Bot API](https://github.com/tdlib/telegram-bot-api) 本地模式。</target>
      </trans-unit>
      <trans-unit id="59598">
        <source>适配器选项</source>
        <target state="needs-translation">适配器选项</target>
      </trans-unit>
      <trans-unit id="59600">
        <source>options.path</source>
        <target state="needs-translation">options.path</target>
      </trans-unit>
      <trans-unit id="59602">
        <source>类型：`string`</source>
        <target state="needs-translation">类型：`string`</target>
      </trans-unit>
      <trans-unit id="59604">
        <source>默认值：`'/telegram'`</source>
        <target state="needs-translation">默认值：`'/telegram'`</target>
      </trans-unit>
      <trans-unit id="59606">
        <source>服务器监听的路径。</source>
        <target state="needs-translation">服务器监听的路径。</target>
      </trans-unit>
      <trans-unit id="59608">
        <source>options.selfUrl</source>
        <target state="needs-translation">options.selfUrl</target>
      </trans-unit>
      <trans-unit id="59610">
        <source>类型：`string`</source>
        <target state="needs-translation">类型：`string`</target>
      </trans-unit>
      <trans-unit id="59612">
        <source>Koishi 服务暴露在公网的地址，会覆盖 [`app.config.selfUrl`](../../api/core/app.md#options-selfurl) 的值。</source>
        <target state="needs-translation">Koishi 服务暴露在公网的地址，会覆盖 [`app.config.selfUrl`](../../api/core/app.md#options-selfurl) 的值。</target>
      </trans-unit>
      <trans-unit id="63776">
        <source>内部接口</source>
        <target state="needs-translation">内部接口</target>
      </trans-unit>
      <trans-unit id="63968">
        <source>关于内部接口的使用方式，请参见 [访问内部接口](../../guide/adapter/bot.md#access-from-plugin)。</source>
        <target state="needs-translation">关于内部接口的使用方式，请参见 [访问内部接口](../../guide/adapter/bot.md#access-from-plugin)。</target>
      </trans-unit>
      <trans-unit id="59616" translate="no">
        <source>[`internal.addStickerToSet()`](https://core.telegram.org/bots/api#addstickertoset)</source>
        <target>[`internal.addStickerToSet()`](https://core.telegram.org/bots/api#addstickertoset)</target>
      </trans-unit>
      <trans-unit id="59618" translate="no">
        <source>[`internal.answerCallbackQuery()`](https://core.telegram.org/bots/api#answercallbackquery)</source>
        <target>[`internal.answerCallbackQuery()`](https://core.telegram.org/bots/api#answercallbackquery)</target>
      </trans-unit>
      <trans-unit id="59620" translate="no">
        <source>[`internal.answerInlineQuery()`](https://core.telegram.org/bots/api#answerinlinequery)</source>
        <target>[`internal.answerInlineQuery()`](https://core.telegram.org/bots/api#answerinlinequery)</target>
      </trans-unit>
      <trans-unit id="59622" translate="no">
        <source>[`internal.answerPreCheckoutQuery()`](https://core.telegram.org/bots/api#answerprecheckoutquery)</source>
        <target>[`internal.answerPreCheckoutQuery()`](https://core.telegram.org/bots/api#answerprecheckoutquery)</target>
      </trans-unit>
      <trans-unit id="59624" translate="no">
        <source>[`internal.answerShippingQuery()`](https://core.telegram.org/bots/api#answershippingquery)</source>
        <target>[`internal.answerShippingQuery()`](https://core.telegram.org/bots/api#answershippingquery)</target>
      </trans-unit>
      <trans-unit id="59626" translate="no">
        <source>[`internal.answerWebAppQuery()`](https://core.telegram.org/bots/api#answerwebappquery)</source>
        <target>[`internal.answerWebAppQuery()`](https://core.telegram.org/bots/api#answerwebappquery)</target>
      </trans-unit>
      <trans-unit id="59628" translate="no">
        <source>[`internal.approveChatJoinRequest()`](https://core.telegram.org/bots/api#approvechatjoinrequest)</source>
        <target>[`internal.approveChatJoinRequest()`](https://core.telegram.org/bots/api#approvechatjoinrequest)</target>
      </trans-unit>
      <trans-unit id="59630" translate="no">
        <source>[`internal.banChatMember()`](https://core.telegram.org/bots/api#banchatmember)</source>
        <target>[`internal.banChatMember()`](https://core.telegram.org/bots/api#banchatmember)</target>
      </trans-unit>
      <trans-unit id="59632" translate="no">
        <source>[`internal.banChatSenderChat()`](https://core.telegram.org/bots/api#banchatsenderchat)</source>
        <target>[`internal.banChatSenderChat()`](https://core.telegram.org/bots/api#banchatsenderchat)</target>
      </trans-unit>
      <trans-unit id="59634" translate="no">
        <source>[`internal.close()`](https://core.telegram.org/bots/api#close)</source>
        <target>[`internal.close()`](https://core.telegram.org/bots/api#close)</target>
      </trans-unit>
      <trans-unit id="59636" translate="no">
        <source>[`internal.closeForumTopic()`](https://core.telegram.org/bots/api#closeforumtopic)</source>
        <target>[`internal.closeForumTopic()`](https://core.telegram.org/bots/api#closeforumtopic)</target>
      </trans-unit>
      <trans-unit id="59638" translate="no">
        <source>[`internal.closeGeneralForumTopic()`](https://core.telegram.org/bots/api#closegeneralforumtopic)</source>
        <target>[`internal.closeGeneralForumTopic()`](https://core.telegram.org/bots/api#closegeneralforumtopic)</target>
      </trans-unit>
      <trans-unit id="59640" translate="no">
        <source>[`internal.copyMessage()`](https://core.telegram.org/bots/api#copymessage)</source>
        <target>[`internal.copyMessage()`](https://core.telegram.org/bots/api#copymessage)</target>
      </trans-unit>
      <trans-unit id="59642" translate="no">
        <source>[`internal.createChatInviteLink()`](https://core.telegram.org/bots/api#createchatinvitelink)</source>
        <target>[`internal.createChatInviteLink()`](https://core.telegram.org/bots/api#createchatinvitelink)</target>
      </trans-unit>
      <trans-unit id="59644" translate="no">
        <source>[`internal.createForumTopic()`](https://core.telegram.org/bots/api#createforumtopic)</source>
        <target>[`internal.createForumTopic()`](https://core.telegram.org/bots/api#createforumtopic)</target>
      </trans-unit>
      <trans-unit id="59646" translate="no">
        <source>[`internal.createInvoiceLink()`](https://core.telegram.org/bots/api#createinvoicelink)</source>
        <target>[`internal.createInvoiceLink()`](https://core.telegram.org/bots/api#createinvoicelink)</target>
      </trans-unit>
      <trans-unit id="59648" translate="no">
        <source>[`internal.createNewStickerSet()`](https://core.telegram.org/bots/api#createnewstickerset)</source>
        <target>[`internal.createNewStickerSet()`](https://core.telegram.org/bots/api#createnewstickerset)</target>
      </trans-unit>
      <trans-unit id="59650" translate="no">
        <source>[`internal.declineChatJoinRequest()`](https://core.telegram.org/bots/api#declinechatjoinrequest)</source>
        <target>[`internal.declineChatJoinRequest()`](https://core.telegram.org/bots/api#declinechatjoinrequest)</target>
      </trans-unit>
      <trans-unit id="59652" translate="no">
        <source>[`internal.deleteChatPhoto()`](https://core.telegram.org/bots/api#deletechatphoto)</source>
        <target>[`internal.deleteChatPhoto()`](https://core.telegram.org/bots/api#deletechatphoto)</target>
      </trans-unit>
      <trans-unit id="59654" translate="no">
        <source>[`internal.deleteChatStickerSet()`](https://core.telegram.org/bots/api#deletechatstickerset)</source>
        <target>[`internal.deleteChatStickerSet()`](https://core.telegram.org/bots/api#deletechatstickerset)</target>
      </trans-unit>
      <trans-unit id="59656" translate="no">
        <source>[`internal.deleteForumTopic()`](https://core.telegram.org/bots/api#deleteforumtopic)</source>
        <target>[`internal.deleteForumTopic()`](https://core.telegram.org/bots/api#deleteforumtopic)</target>
      </trans-unit>
      <trans-unit id="59658" translate="no">
        <source>[`internal.deleteMessage()`](https://core.telegram.org/bots/api#deletemessage)</source>
        <target>[`internal.deleteMessage()`](https://core.telegram.org/bots/api#deletemessage)</target>
      </trans-unit>
      <trans-unit id="59660" translate="no">
        <source>[`internal.deleteMyCommands()`](https://core.telegram.org/bots/api#deletemycommands)</source>
        <target>[`internal.deleteMyCommands()`](https://core.telegram.org/bots/api#deletemycommands)</target>
      </trans-unit>
      <trans-unit id="59662" translate="no">
        <source>[`internal.deleteStickerFromSet()`](https://core.telegram.org/bots/api#deletestickerfromset)</source>
        <target>[`internal.deleteStickerFromSet()`](https://core.telegram.org/bots/api#deletestickerfromset)</target>
      </trans-unit>
      <trans-unit id="59664" translate="no">
        <source>[`internal.deleteWebhook()`](https://core.telegram.org/bots/api#deletewebhook)</source>
        <target>[`internal.deleteWebhook()`](https://core.telegram.org/bots/api#deletewebhook)</target>
      </trans-unit>
      <trans-unit id="59666" translate="no">
        <source>[`internal.editChatInviteLink()`](https://core.telegram.org/bots/api#editchatinvitelink)</source>
        <target>[`internal.editChatInviteLink()`](https://core.telegram.org/bots/api#editchatinvitelink)</target>
      </trans-unit>
      <trans-unit id="59668" translate="no">
        <source>[`internal.editForumTopic()`](https://core.telegram.org/bots/api#editforumtopic)</source>
        <target>[`internal.editForumTopic()`](https://core.telegram.org/bots/api#editforumtopic)</target>
      </trans-unit>
      <trans-unit id="59670" translate="no">
        <source>[`internal.editGeneralForumTopic()`](https://core.telegram.org/bots/api#editgeneralforumtopic)</source>
        <target>[`internal.editGeneralForumTopic()`](https://core.telegram.org/bots/api#editgeneralforumtopic)</target>
      </trans-unit>
      <trans-unit id="59672" translate="no">
        <source>[`internal.editMessageCaption()`](https://core.telegram.org/bots/api#editmessagecaption)</source>
        <target>[`internal.editMessageCaption()`](https://core.telegram.org/bots/api#editmessagecaption)</target>
      </trans-unit>
      <trans-unit id="59674" translate="no">
        <source>[`internal.editMessageLiveLocation()`](https://core.telegram.org/bots/api#editmessagelivelocation)</source>
        <target>[`internal.editMessageLiveLocation()`](https://core.telegram.org/bots/api#editmessagelivelocation)</target>
      </trans-unit>
      <trans-unit id="59676" translate="no">
        <source>[`internal.editMessageMedia()`](https://core.telegram.org/bots/api#editmessagemedia)</source>
        <target>[`internal.editMessageMedia()`](https://core.telegram.org/bots/api#editmessagemedia)</target>
      </trans-unit>
      <trans-unit id="59678" translate="no">
        <source>[`internal.editMessageReplyMarkup()`](https://core.telegram.org/bots/api#editmessagereplymarkup)</source>
        <target>[`internal.editMessageReplyMarkup()`](https://core.telegram.org/bots/api#editmessagereplymarkup)</target>
      </trans-unit>
      <trans-unit id="59680" translate="no">
        <source>[`internal.editMessageText()`](https://core.telegram.org/bots/api#editmessagetext)</source>
        <target>[`internal.editMessageText()`](https://core.telegram.org/bots/api#editmessagetext)</target>
      </trans-unit>
      <trans-unit id="59682" translate="no">
        <source>[`internal.exportChatInviteLink()`](https://core.telegram.org/bots/api#exportchatinvitelink)</source>
        <target>[`internal.exportChatInviteLink()`](https://core.telegram.org/bots/api#exportchatinvitelink)</target>
      </trans-unit>
      <trans-unit id="59684" translate="no">
        <source>[`internal.forwardMessage()`](https://core.telegram.org/bots/api#forwardmessage)</source>
        <target>[`internal.forwardMessage()`](https://core.telegram.org/bots/api#forwardmessage)</target>
      </trans-unit>
      <trans-unit id="59686" translate="no">
        <source>[`internal.getChat()`](https://core.telegram.org/bots/api#getchat)</source>
        <target>[`internal.getChat()`](https://core.telegram.org/bots/api#getchat)</target>
      </trans-unit>
      <trans-unit id="59688" translate="no">
        <source>[`internal.getChatAdministrators()`](https://core.telegram.org/bots/api#getchatadministrators)</source>
        <target>[`internal.getChatAdministrators()`](https://core.telegram.org/bots/api#getchatadministrators)</target>
      </trans-unit>
      <trans-unit id="59690" translate="no">
        <source>[`internal.getChatMember()`](https://core.telegram.org/bots/api#getchatmember)</source>
        <target>[`internal.getChatMember()`](https://core.telegram.org/bots/api#getchatmember)</target>
      </trans-unit>
      <trans-unit id="59692" translate="no">
        <source>[`internal.getChatMemberCount()`](https://core.telegram.org/bots/api#getchatmembercount)</source>
        <target>[`internal.getChatMemberCount()`](https://core.telegram.org/bots/api#getchatmembercount)</target>
      </trans-unit>
      <trans-unit id="59694" translate="no">
        <source>[`internal.getChatMenuButton()`](https://core.telegram.org/bots/api#getchatmenubutton)</source>
        <target>[`internal.getChatMenuButton()`](https://core.telegram.org/bots/api#getchatmenubutton)</target>
      </trans-unit>
      <trans-unit id="59696" translate="no">
        <source>[`internal.getCustomEmojiStickers()`](https://core.telegram.org/bots/api#getcustomemojistickers)</source>
        <target>[`internal.getCustomEmojiStickers()`](https://core.telegram.org/bots/api#getcustomemojistickers)</target>
      </trans-unit>
      <trans-unit id="59698" translate="no">
        <source>[`internal.getFile()`](https://core.telegram.org/bots/api#getfile)</source>
        <target>[`internal.getFile()`](https://core.telegram.org/bots/api#getfile)</target>
      </trans-unit>
      <trans-unit id="59700" translate="no">
        <source>[`internal.getForumTopicIconStickers()`](https://core.telegram.org/bots/api#getforumtopiciconstickers)</source>
        <target>[`internal.getForumTopicIconStickers()`](https://core.telegram.org/bots/api#getforumtopiciconstickers)</target>
      </trans-unit>
      <trans-unit id="59702" translate="no">
        <source>[`internal.getGameHighScores()`](https://core.telegram.org/bots/api#getgamehighscores)</source>
        <target>[`internal.getGameHighScores()`](https://core.telegram.org/bots/api#getgamehighscores)</target>
      </trans-unit>
      <trans-unit id="59704" translate="no">
        <source>[`internal.getMe()`](https://core.telegram.org/bots/api#getme)</source>
        <target>[`internal.getMe()`](https://core.telegram.org/bots/api#getme)</target>
      </trans-unit>
      <trans-unit id="59706" translate="no">
        <source>[`internal.getMyCommands()`](https://core.telegram.org/bots/api#getmycommands)</source>
        <target>[`internal.getMyCommands()`](https://core.telegram.org/bots/api#getmycommands)</target>
      </trans-unit>
      <trans-unit id="59708" translate="no">
        <source>[`internal.getMyDefaultAdministratorRights()`](https://core.telegram.org/bots/api#getmydefaultadministratorrights)</source>
        <target>[`internal.getMyDefaultAdministratorRights()`](https://core.telegram.org/bots/api#getmydefaultadministratorrights)</target>
      </trans-unit>
      <trans-unit id="59710" translate="no">
        <source>[`internal.getStickerSet()`](https://core.telegram.org/bots/api#getstickerset)</source>
        <target>[`internal.getStickerSet()`](https://core.telegram.org/bots/api#getstickerset)</target>
      </trans-unit>
      <trans-unit id="59712" translate="no">
        <source>[`internal.getUpdates()`](https://core.telegram.org/bots/api#getupdates)</source>
        <target>[`internal.getUpdates()`](https://core.telegram.org/bots/api#getupdates)</target>
      </trans-unit>
      <trans-unit id="59714" translate="no">
        <source>[`internal.getUserProfilePhotos()`](https://core.telegram.org/bots/api#getuserprofilephotos)</source>
        <target>[`internal.getUserProfilePhotos()`](https://core.telegram.org/bots/api#getuserprofilephotos)</target>
      </trans-unit>
      <trans-unit id="59716" translate="no">
        <source>[`internal.getWebhookInfo()`](https://core.telegram.org/bots/api#getwebhookinfo)</source>
        <target>[`internal.getWebhookInfo()`](https://core.telegram.org/bots/api#getwebhookinfo)</target>
      </trans-unit>
      <trans-unit id="59718" translate="no">
        <source>[`internal.hideGeneralForumTopic()`](https://core.telegram.org/bots/api#hidegeneralforumtopic)</source>
        <target>[`internal.hideGeneralForumTopic()`](https://core.telegram.org/bots/api#hidegeneralforumtopic)</target>
      </trans-unit>
      <trans-unit id="59720" translate="no">
        <source>[`internal.leaveChat()`](https://core.telegram.org/bots/api#leavechat)</source>
        <target>[`internal.leaveChat()`](https://core.telegram.org/bots/api#leavechat)</target>
      </trans-unit>
      <trans-unit id="59722" translate="no">
        <source>[`internal.logOut()`](https://core.telegram.org/bots/api#logout)</source>
        <target>[`internal.logOut()`](https://core.telegram.org/bots/api#logout)</target>
      </trans-unit>
      <trans-unit id="59724" translate="no">
        <source>[`internal.pinChatMessage()`](https://core.telegram.org/bots/api#pinchatmessage)</source>
        <target>[`internal.pinChatMessage()`](https://core.telegram.org/bots/api#pinchatmessage)</target>
      </trans-unit>
      <trans-unit id="59726" translate="no">
        <source>[`internal.promoteChatMember()`](https://core.telegram.org/bots/api#promotechatmember)</source>
        <target>[`internal.promoteChatMember()`](https://core.telegram.org/bots/api#promotechatmember)</target>
      </trans-unit>
      <trans-unit id="59728" translate="no">
        <source>[`internal.reopenForumTopic()`](https://core.telegram.org/bots/api#reopenforumtopic)</source>
        <target>[`internal.reopenForumTopic()`](https://core.telegram.org/bots/api#reopenforumtopic)</target>
      </trans-unit>
      <trans-unit id="59730" translate="no">
        <source>[`internal.reopenGeneralForumTopic()`](https://core.telegram.org/bots/api#reopengeneralforumtopic)</source>
        <target>[`internal.reopenGeneralForumTopic()`](https://core.telegram.org/bots/api#reopengeneralforumtopic)</target>
      </trans-unit>
      <trans-unit id="59732" translate="no">
        <source>[`internal.restrictChatMember()`](https://core.telegram.org/bots/api#restrictchatmember)</source>
        <target>[`internal.restrictChatMember()`](https://core.telegram.org/bots/api#restrictchatmember)</target>
      </trans-unit>
      <trans-unit id="59734" translate="no">
        <source>[`internal.revokeChatInviteLink()`](https://core.telegram.org/bots/api#revokechatinvitelink)</source>
        <target>[`internal.revokeChatInviteLink()`](https://core.telegram.org/bots/api#revokechatinvitelink)</target>
      </trans-unit>
      <trans-unit id="59736" translate="no">
        <source>[`internal.sendAnimation()`](https://core.telegram.org/bots/api#sendanimation)</source>
        <target>[`internal.sendAnimation()`](https://core.telegram.org/bots/api#sendanimation)</target>
      </trans-unit>
      <trans-unit id="59738" translate="no">
        <source>[`internal.sendAudio()`](https://core.telegram.org/bots/api#sendaudio)</source>
        <target>[`internal.sendAudio()`](https://core.telegram.org/bots/api#sendaudio)</target>
      </trans-unit>
      <trans-unit id="59740" translate="no">
        <source>[`internal.sendChatAction()`](https://core.telegram.org/bots/api#sendchataction)</source>
        <target>[`internal.sendChatAction()`](https://core.telegram.org/bots/api#sendchataction)</target>
      </trans-unit>
      <trans-unit id="59742" translate="no">
        <source>[`internal.sendContact()`](https://core.telegram.org/bots/api#sendcontact)</source>
        <target>[`internal.sendContact()`](https://core.telegram.org/bots/api#sendcontact)</target>
      </trans-unit>
      <trans-unit id="59744" translate="no">
        <source>[`internal.sendDice()`](https://core.telegram.org/bots/api#senddice)</source>
        <target>[`internal.sendDice()`](https://core.telegram.org/bots/api#senddice)</target>
      </trans-unit>
      <trans-unit id="59746" translate="no">
        <source>[`internal.sendDocument()`](https://core.telegram.org/bots/api#senddocument)</source>
        <target>[`internal.sendDocument()`](https://core.telegram.org/bots/api#senddocument)</target>
      </trans-unit>
      <trans-unit id="59748" translate="no">
        <source>[`internal.sendGame()`](https://core.telegram.org/bots/api#sendgame)</source>
        <target>[`internal.sendGame()`](https://core.telegram.org/bots/api#sendgame)</target>
      </trans-unit>
      <trans-unit id="59750" translate="no">
        <source>[`internal.sendInvoice()`](https://core.telegram.org/bots/api#sendinvoice)</source>
        <target>[`internal.sendInvoice()`](https://core.telegram.org/bots/api#sendinvoice)</target>
      </trans-unit>
      <trans-unit id="59752" translate="no">
        <source>[`internal.sendLocation()`](https://core.telegram.org/bots/api#sendlocation)</source>
        <target>[`internal.sendLocation()`](https://core.telegram.org/bots/api#sendlocation)</target>
      </trans-unit>
      <trans-unit id="59754" translate="no">
        <source>[`internal.sendMediaGroup()`](https://core.telegram.org/bots/api#sendmediagroup)</source>
        <target>[`internal.sendMediaGroup()`](https://core.telegram.org/bots/api#sendmediagroup)</target>
      </trans-unit>
      <trans-unit id="59756" translate="no">
        <source>[`internal.sendMessage()`](https://core.telegram.org/bots/api#sendmessage)</source>
        <target>[`internal.sendMessage()`](https://core.telegram.org/bots/api#sendmessage)</target>
      </trans-unit>
      <trans-unit id="59758" translate="no">
        <source>[`internal.sendPhoto()`](https://core.telegram.org/bots/api#sendphoto)</source>
        <target>[`internal.sendPhoto()`](https://core.telegram.org/bots/api#sendphoto)</target>
      </trans-unit>
      <trans-unit id="59760" translate="no">
        <source>[`internal.sendPoll()`](https://core.telegram.org/bots/api#sendpoll)</source>
        <target>[`internal.sendPoll()`](https://core.telegram.org/bots/api#sendpoll)</target>
      </trans-unit>
      <trans-unit id="59762" translate="no">
        <source>[`internal.sendSticker()`](https://core.telegram.org/bots/api#sendsticker)</source>
        <target>[`internal.sendSticker()`](https://core.telegram.org/bots/api#sendsticker)</target>
      </trans-unit>
      <trans-unit id="59764" translate="no">
        <source>[`internal.sendVenue()`](https://core.telegram.org/bots/api#sendvenue)</source>
        <target>[`internal.sendVenue()`](https://core.telegram.org/bots/api#sendvenue)</target>
      </trans-unit>
      <trans-unit id="59766" translate="no">
        <source>[`internal.sendVideo()`](https://core.telegram.org/bots/api#sendvideo)</source>
        <target>[`internal.sendVideo()`](https://core.telegram.org/bots/api#sendvideo)</target>
      </trans-unit>
      <trans-unit id="59768" translate="no">
        <source>[`internal.sendVideoNote()`](https://core.telegram.org/bots/api#sendvideonote)</source>
        <target>[`internal.sendVideoNote()`](https://core.telegram.org/bots/api#sendvideonote)</target>
      </trans-unit>
      <trans-unit id="59770" translate="no">
        <source>[`internal.sendVoice()`](https://core.telegram.org/bots/api#sendvoice)</source>
        <target>[`internal.sendVoice()`](https://core.telegram.org/bots/api#sendvoice)</target>
      </trans-unit>
      <trans-unit id="59772" translate="no">
        <source>[`internal.setChatAdministratorCustomTitle()`](https://core.telegram.org/bots/api#setchatadministratorcustomtitle)</source>
        <target>[`internal.setChatAdministratorCustomTitle()`](https://core.telegram.org/bots/api#setchatadministratorcustomtitle)</target>
      </trans-unit>
      <trans-unit id="59774" translate="no">
        <source>[`internal.setChatDescription()`](https://core.telegram.org/bots/api#setchatdescription)</source>
        <target>[`internal.setChatDescription()`](https://core.telegram.org/bots/api#setchatdescription)</target>
      </trans-unit>
      <trans-unit id="59776" translate="no">
        <source>[`internal.setChatMenuButton()`](https://core.telegram.org/bots/api#setchatmenubutton)</source>
        <target>[`internal.setChatMenuButton()`](https://core.telegram.org/bots/api#setchatmenubutton)</target>
      </trans-unit>
      <trans-unit id="59778" translate="no">
        <source>[`internal.setChatPermissions()`](https://core.telegram.org/bots/api#setchatpermissions)</source>
        <target>[`internal.setChatPermissions()`](https://core.telegram.org/bots/api#setchatpermissions)</target>
      </trans-unit>
      <trans-unit id="59780" translate="no">
        <source>[`internal.setChatPhoto()`](https://core.telegram.org/bots/api#setchatphoto)</source>
        <target>[`internal.setChatPhoto()`](https://core.telegram.org/bots/api#setchatphoto)</target>
      </trans-unit>
      <trans-unit id="59782" translate="no">
        <source>[`internal.setChatStickerSet()`](https://core.telegram.org/bots/api#setchatstickerset)</source>
        <target>[`internal.setChatStickerSet()`](https://core.telegram.org/bots/api#setchatstickerset)</target>
      </trans-unit>
      <trans-unit id="59784" translate="no">
        <source>[`internal.setChatTitle()`](https://core.telegram.org/bots/api#setchattitle)</source>
        <target>[`internal.setChatTitle()`](https://core.telegram.org/bots/api#setchattitle)</target>
      </trans-unit>
      <trans-unit id="59786" translate="no">
        <source>[`internal.setGameScore()`](https://core.telegram.org/bots/api#setgamescore)</source>
        <target>[`internal.setGameScore()`](https://core.telegram.org/bots/api#setgamescore)</target>
      </trans-unit>
      <trans-unit id="59788" translate="no">
        <source>[`internal.setMyCommands()`](https://core.telegram.org/bots/api#setmycommands)</source>
        <target>[`internal.setMyCommands()`](https://core.telegram.org/bots/api#setmycommands)</target>
      </trans-unit>
      <trans-unit id="59790" translate="no">
        <source>[`internal.setMyDefaultAdministratorRights()`](https://core.telegram.org/bots/api#setmydefaultadministratorrights)</source>
        <target>[`internal.setMyDefaultAdministratorRights()`](https://core.telegram.org/bots/api#setmydefaultadministratorrights)</target>
      </trans-unit>
      <trans-unit id="59792" translate="no">
        <source>[`internal.setPassportDataErrors()`](https://core.telegram.org/bots/api#setpassportdataerrors)</source>
        <target>[`internal.setPassportDataErrors()`](https://core.telegram.org/bots/api#setpassportdataerrors)</target>
      </trans-unit>
      <trans-unit id="59794" translate="no">
        <source>[`internal.setStickerPositionInSet()`](https://core.telegram.org/bots/api#setstickerpositioninset)</source>
        <target>[`internal.setStickerPositionInSet()`](https://core.telegram.org/bots/api#setstickerpositioninset)</target>
      </trans-unit>
      <trans-unit id="59796" translate="no">
        <source>[`internal.setStickerSetThumb()`](https://core.telegram.org/bots/api#setstickersetthumb)</source>
        <target>[`internal.setStickerSetThumb()`](https://core.telegram.org/bots/api#setstickersetthumb)</target>
      </trans-unit>
      <trans-unit id="59798" translate="no">
        <source>[`internal.setWebhook()`](https://core.telegram.org/bots/api#setwebhook)</source>
        <target>[`internal.setWebhook()`](https://core.telegram.org/bots/api#setwebhook)</target>
      </trans-unit>
      <trans-unit id="59800" translate="no">
        <source>[`internal.stopMessageLiveLocation()`](https://core.telegram.org/bots/api#stopmessagelivelocation)</source>
        <target>[`internal.stopMessageLiveLocation()`](https://core.telegram.org/bots/api#stopmessagelivelocation)</target>
      </trans-unit>
      <trans-unit id="59802" translate="no">
        <source>[`internal.stopPoll()`](https://core.telegram.org/bots/api#stoppoll)</source>
        <target>[`internal.stopPoll()`](https://core.telegram.org/bots/api#stoppoll)</target>
      </trans-unit>
      <trans-unit id="59804" translate="no">
        <source>[`internal.unbanChatMember()`](https://core.telegram.org/bots/api#unbanchatmember)</source>
        <target>[`internal.unbanChatMember()`](https://core.telegram.org/bots/api#unbanchatmember)</target>
      </trans-unit>
      <trans-unit id="59806" translate="no">
        <source>[`internal.unbanChatSenderChat()`](https://core.telegram.org/bots/api#unbanchatsenderchat)</source>
        <target>[`internal.unbanChatSenderChat()`](https://core.telegram.org/bots/api#unbanchatsenderchat)</target>
      </trans-unit>
      <trans-unit id="59808" translate="no">
        <source>[`internal.unhideGeneralForumTopic()`](https://core.telegram.org/bots/api#unhidegeneralforumtopic)</source>
        <target>[`internal.unhideGeneralForumTopic()`](https://core.telegram.org/bots/api#unhidegeneralforumtopic)</target>
      </trans-unit>
      <trans-unit id="59810" translate="no">
        <source>[`internal.unpinAllChatMessages()`](https://core.telegram.org/bots/api#unpinallchatmessages)</source>
        <target>[`internal.unpinAllChatMessages()`](https://core.telegram.org/bots/api#unpinallchatmessages)</target>
      </trans-unit>
      <trans-unit id="59812" translate="no">
        <source>[`internal.unpinAllForumTopicMessages()`](https://core.telegram.org/bots/api#unpinallforumtopicmessages)</source>
        <target>[`internal.unpinAllForumTopicMessages()`](https://core.telegram.org/bots/api#unpinallforumtopicmessages)</target>
      </trans-unit>
      <trans-unit id="59814" translate="no">
        <source>[`internal.unpinChatMessage()`](https://core.telegram.org/bots/api#unpinchatmessage)</source>
        <target>[`internal.unpinChatMessage()`](https://core.telegram.org/bots/api#unpinchatmessage)</target>
      </trans-unit>
      <trans-unit id="59816" translate="no">
        <source>[`internal.uploadStickerFile()`](https://core.telegram.org/bots/api#uploadstickerfile)</source>
        <target>[`internal.uploadStickerFile()`](https://core.telegram.org/bots/api#uploadstickerfile)</target>
      </trans-unit>
      <trans-unit id="59818">
        <source>内部事件</source>
        <target state="needs-translation">内部事件</target>
      </trans-unit>
      <trans-unit id="59820">
        <source>[`telegram/callback-query`](https://core.telegram.org/bots/api#update)</source>
        <target state="needs-translation">[`telegram/callback-query`](https://core.telegram.org/bots/api#update)</target>
      </trans-unit>
      <trans-unit id="59822">
        <source>[`telegram/channel-post`](https://core.telegram.org/bots/api#update)</source>
        <target state="needs-translation">[`telegram/channel-post`](https://core.telegram.org/bots/api#update)</target>
      </trans-unit>
      <trans-unit id="59824">
        <source>[`telegram/chat-join-request`](https://core.telegram.org/bots/api#update)</source>
        <target state="needs-translation">[`telegram/chat-join-request`](https://core.telegram.org/bots/api#update)</target>
      </trans-unit>
      <trans-unit id="59826">
        <source>[`telegram/chat-member`](https://core.telegram.org/bots/api#update)</source>
        <target state="needs-translation">[`telegram/chat-member`](https://core.telegram.org/bots/api#update)</target>
      </trans-unit>
      <trans-unit id="59828">
        <source>[`telegram/chosen-inline-result`](https://core.telegram.org/bots/api#update)</source>
        <target state="needs-translation">[`telegram/chosen-inline-result`](https://core.telegram.org/bots/api#update)</target>
      </trans-unit>
      <trans-unit id="59830">
        <source>[`telegram/edited-channel-post`](https://core.telegram.org/bots/api#update)</source>
        <target state="needs-translation">[`telegram/edited-channel-post`](https://core.telegram.org/bots/api#update)</target>
      </trans-unit>
      <trans-unit id="59832">
        <source>[`telegram/edited-message`](https://core.telegram.org/bots/api#update)</source>
        <target state="needs-translation">[`telegram/edited-message`](https://core.telegram.org/bots/api#update)</target>
      </trans-unit>
      <trans-unit id="59834">
        <source>[`telegram/inline-query`](https://core.telegram.org/bots/api#update)</source>
        <target state="needs-translation">[`telegram/inline-query`](https://core.telegram.org/bots/api#update)</target>
      </trans-unit>
      <trans-unit id="59836">
        <source>[`telegram/message`](https://core.telegram.org/bots/api#update)</source>
        <target state="needs-translation">[`telegram/message`](https://core.telegram.org/bots/api#update)</target>
      </trans-unit>
      <trans-unit id="59838">
        <source>[`telegram/my-chat-member`](https://core.telegram.org/bots/api#update)</source>
        <target state="needs-translation">[`telegram/my-chat-member`](https://core.telegram.org/bots/api#update)</target>
      </trans-unit>
      <trans-unit id="59840">
        <source>[`telegram/poll-answer`](https://core.telegram.org/bots/api#update)</source>
        <target state="needs-translation">[`telegram/poll-answer`](https://core.telegram.org/bots/api#update)</target>
      </trans-unit>
      <trans-unit id="59842">
        <source>[`telegram/poll`](https://core.telegram.org/bots/api#update)</source>
        <target state="needs-translation">[`telegram/poll`](https://core.telegram.org/bots/api#update)</target>
      </trans-unit>
      <trans-unit id="59844">
        <source>[`telegram/pre-checkout-query`](https://core.telegram.org/bots/api#update)</source>
        <target state="needs-translation">[`telegram/pre-checkout-query`](https://core.telegram.org/bots/api#update)</target>
      </trans-unit>
      <trans-unit id="59846">
        <source>[`telegram/shipping-query`](https://core.telegram.org/bots/api#update)</source>
        <target state="needs-translation">[`telegram/shipping-query`](https://core.telegram.org/bots/api#update)</target>
      </trans-unit>
    </body>
  </file>
  <file id="1666" original="/[koishijs.docs] main/zh-CN/plugins/adapter/wechat-official.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="59848">
        <source>@koishijs/plugin-adapter-wechat-official</source>
        <target state="needs-translation">@koishijs/plugin-adapter-wechat-official</target>
      </trans-unit>
      <trans-unit id="63704">
        <source>在接入之前，你需要准备一个带有 SSL 证书的公网域名，并将 Koishi [部署到公网](../../manual/recipe/server.md)。</source>
        <target state="needs-translation">在接入之前，你需要准备一个带有 SSL 证书的公网域名，并将 Koishi [部署到公网](../../manual/recipe/server.md)。</target>
      </trans-unit>
      <trans-unit id="59850">
        <source>接入方法</source>
        <target state="needs-translation">接入方法</target>
      </trans-unit>
      <trans-unit id="59852">
        <source>根据 [注册流程指引](https://kf.qq.com/product/weixinmp.html#hid=87) 注册公众平台。</source>
        <target state="needs-translation">根据 [注册流程指引](https://kf.qq.com/product/weixinmp.html#hid=87) 注册公众平台。</target>
      </trans-unit>
      <trans-unit id="59854">
        <source>在微信公众平台登录后，页面左侧展开「设置与开发」，进入「公众号设置」，翻至页面底部，复制 `原始 ID` 填入插件的 account 字段。</source>
        <target state="needs-translation">在微信公众平台登录后，页面左侧展开「设置与开发」，进入「公众号设置」，翻至页面底部，复制 `原始 ID` 填入插件的 account 字段。</target>
      </trans-unit>
      <trans-unit id="59856">
        <source>页面左侧进入「基本配置」，复制 `开发者ID` 填入插件的 appId 字段，在网页上获取开发者密码填入插件的 secret 字段，设置白名单 IP。</source>
        <target state="needs-translation">页面左侧进入「基本配置」，复制 `开发者ID` 填入插件的 appId 字段，在网页上获取开发者密码填入插件的 secret 字段，设置白名单 IP。</target>
      </trans-unit>
      <trans-unit id="59858">
        <source>页面下方启用服务器配置，将机器人的 `selfUrl` 值后连接 `/wechat-official` (如 `https://example.com/wechat-official`)，在 URL 一栏中填写；在插件配置和公众平台上填入相同的 Token；在公众平台上生成 EncodingAESKey 并填入插件的 aesKey 字段；三种消息加解密方式均可选择。</source>
        <target state="needs-translation">页面下方启用服务器配置，将机器人的 `selfUrl` 值后连接 `/wechat-official` (如 `https://example.com/wechat-official`)，在 URL 一栏中填写；在插件配置和公众平台上填入相同的 Token；在公众平台上生成 EncodingAESKey 并填入插件的 aesKey 字段；三种消息加解密方式均可选择。</target>
      </trans-unit>
      <trans-unit id="59860">
        <source>如果公众号为企业主体，且通过了微信认证，可在插件配置中启用 customerService。</source>
        <target state="needs-translation">如果公众号为企业主体，且通过了微信认证，可在插件配置中启用 customerService。</target>
      </trans-unit>
      <trans-unit id="59862">
        <source>客服接口提供了更宽松的消息回复能力。</source>
        <target state="needs-translation">客服接口提供了更宽松的消息回复能力。</target>
      </trans-unit>
      <trans-unit id="59864">
        <source>参考文档：&lt;https://developers.weixin.qq.com/doc/offiaccount/Basic_Information/Access_Overview.html&gt;</source>
        <target state="needs-translation">参考文档：&lt;https://developers.weixin.qq.com/doc/offiaccount/Basic_Information/Access_Overview.html&gt;</target>
      </trans-unit>
      <trans-unit id="59866">
        <source>配置项</source>
        <target state="needs-translation">配置项</target>
      </trans-unit>
      <trans-unit id="59868">
        <source>config.account</source>
        <target state="needs-translation">config.account</target>
      </trans-unit>
      <trans-unit id="59870">
        <source>类型: `string`</source>
        <target state="needs-translation">类型: `string`</target>
      </trans-unit>
      <trans-unit id="59872">
        <source>公众号原始 ID。</source>
        <target state="needs-translation">公众号原始 ID。</target>
      </trans-unit>
      <trans-unit id="59874">
        <source>config.appId</source>
        <target state="needs-translation">config.appId</target>
      </trans-unit>
      <trans-unit id="59876">
        <source>类型: `string`</source>
        <target state="needs-translation">类型: `string`</target>
      </trans-unit>
      <trans-unit id="59878">
        <source>AppID。</source>
        <target state="needs-translation">AppID。</target>
      </trans-unit>
      <trans-unit id="59880">
        <source>config.secret</source>
        <target state="needs-translation">config.secret</target>
      </trans-unit>
      <trans-unit id="59882">
        <source>类型: `string`</source>
        <target state="needs-translation">类型: `string`</target>
      </trans-unit>
      <trans-unit id="59884">
        <source>AppSecret。</source>
        <target state="needs-translation">AppSecret。</target>
      </trans-unit>
      <trans-unit id="59886">
        <source>config.token</source>
        <target state="needs-translation">config.token</target>
      </trans-unit>
      <trans-unit id="59888">
        <source>类型: `string`</source>
        <target state="needs-translation">类型: `string`</target>
      </trans-unit>
      <trans-unit id="59890">
        <source>Webhook Token。</source>
        <target state="needs-translation">Webhook Token。</target>
      </trans-unit>
      <trans-unit id="59892">
        <source>config.aesKey</source>
        <target state="needs-translation">config.aesKey</target>
      </trans-unit>
      <trans-unit id="59894">
        <source>类型: `string`</source>
        <target state="needs-translation">类型: `string`</target>
      </trans-unit>
      <trans-unit id="59896">
        <source>EncodingAESKey。</source>
        <target state="needs-translation">EncodingAESKey。</target>
      </trans-unit>
      <trans-unit id="59898">
        <source>config.customerService</source>
        <target state="needs-translation">config.customerService</target>
      </trans-unit>
      <trans-unit id="59900">
        <source>类型: `boolean`</source>
        <target state="needs-translation">类型: `boolean`</target>
      </trans-unit>
      <trans-unit id="59902">
        <source>启用客服消息回复。</source>
        <target state="needs-translation">启用客服消息回复。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1668" original="/[koishijs.docs] main/zh-CN/plugins/adapter/wecom.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="59904">
        <source>@koishijs/plugin-adapter-wecom</source>
        <target state="needs-translation">@koishijs/plugin-adapter-wecom</target>
      </trans-unit>
      <trans-unit id="63706">
        <source>在接入之前，你需要准备一个带有 SSL 证书的公网域名，并将 Koishi [部署到公网](../../manual/recipe/server.md)。</source>
        <target state="needs-translation">在接入之前，你需要准备一个带有 SSL 证书的公网域名，并将 Koishi [部署到公网](../../manual/recipe/server.md)。</target>
      </trans-unit>
      <trans-unit id="59906">
        <source>接入方法</source>
        <target state="needs-translation">接入方法</target>
      </trans-unit>
      <trans-unit id="59908">
        <source>前往 [我的企业](https://work.weixin.qq.com/wework_admin/frame#profile)，复制页面下方企业 ID，填入插件的 corpId。</source>
        <target state="needs-translation">前往 [我的企业](https://work.weixin.qq.com/wework_admin/frame#profile)，复制页面下方企业 ID，填入插件的 corpId。</target>
      </trans-unit>
      <trans-unit id="59910">
        <source>前往 [应用管理](https://work.weixin.qq.com/wework_admin/frame#apps) 页面下方点击创建应用，填写应用信息。</source>
        <target state="needs-translation">前往 [应用管理](https://work.weixin.qq.com/wework_admin/frame#apps) 页面下方点击创建应用，填写应用信息。</target>
      </trans-unit>
      <trans-unit id="59912">
        <source>复制 `AgentId` 填入插件的 agentId 字段，查看 Secret 填入插件的 `secret` 字段。</source>
        <target state="needs-translation">复制 `AgentId` 填入插件的 agentId 字段，查看 Secret 填入插件的 `secret` 字段。</target>
      </trans-unit>
      <trans-unit id="59914">
        <source>在下方功能板块点击「设置 API 接收」，URL 填写机器人的 selfUrl 值后连接 `/wecom`，Token 和 EncodingAESKey 点击随机获取，分别填入插件的 `token` 和 `aesKey` 字段。</source>
        <target state="needs-translation">在下方功能板块点击「设置 API 接收」，URL 填写机器人的 selfUrl 值后连接 `/wecom`，Token 和 EncodingAESKey 点击随机获取，分别填入插件的 `token` 和 `aesKey` 字段。</target>
      </trans-unit>
      <trans-unit id="59916">
        <source>先启用插件，再在「API 接收消息」页面点击保存.</source>
        <target state="needs-translation">先启用插件，再在「API 接收消息」页面点击保存.</target>
      </trans-unit>
      <trans-unit id="59918">
        <source>于页面左上角返回应用页面，在下方开发者接口板块点击「企业可信 IP」的「配置」，设置白名单 IP，确定后稍等几分钟即可使用插件。</source>
        <target state="needs-translation">于页面左上角返回应用页面，在下方开发者接口板块点击「企业可信 IP」的「配置」，设置白名单 IP，确定后稍等几分钟即可使用插件。</target>
      </trans-unit>
      <trans-unit id="59920">
        <source>推荐在几分钟后停用并启用一次插件，以便加载出平台信息呈现在控制台内。</source>
        <target state="needs-translation">推荐在几分钟后停用并启用一次插件，以便加载出平台信息呈现在控制台内。</target>
      </trans-unit>
      <trans-unit id="59922">
        <source>参考文档：&lt;https://developer.work.weixin.qq.com/document/path/90487&gt;</source>
        <target state="needs-translation">参考文档：&lt;https://developer.work.weixin.qq.com/document/path/90487&gt;</target>
      </trans-unit>
      <trans-unit id="59924">
        <source>配置项</source>
        <target state="needs-translation">配置项</target>
      </trans-unit>
      <trans-unit id="59926">
        <source>config.corpId</source>
        <target state="needs-translation">config.corpId</target>
      </trans-unit>
      <trans-unit id="59928">
        <source>类型: `string`</source>
        <target state="needs-translation">类型: `string`</target>
      </trans-unit>
      <trans-unit id="59930">
        <source>企业 ID。</source>
        <target state="needs-translation">企业 ID。</target>
      </trans-unit>
      <trans-unit id="59932">
        <source>config.agentId</source>
        <target state="needs-translation">config.agentId</target>
      </trans-unit>
      <trans-unit id="59934">
        <source>类型: `string`</source>
        <target state="needs-translation">类型: `string`</target>
      </trans-unit>
      <trans-unit id="59936">
        <source>AgentID。</source>
        <target state="needs-translation">AgentID。</target>
      </trans-unit>
      <trans-unit id="59938">
        <source>config.secret</source>
        <target state="needs-translation">config.secret</target>
      </trans-unit>
      <trans-unit id="59940">
        <source>类型: `string`</source>
        <target state="needs-translation">类型: `string`</target>
      </trans-unit>
      <trans-unit id="59942">
        <source>AppSecret。</source>
        <target state="needs-translation">AppSecret。</target>
      </trans-unit>
      <trans-unit id="59944">
        <source>config.token</source>
        <target state="needs-translation">config.token</target>
      </trans-unit>
      <trans-unit id="59946">
        <source>类型: `string`</source>
        <target state="needs-translation">类型: `string`</target>
      </trans-unit>
      <trans-unit id="59948">
        <source>Webhook Token。</source>
        <target state="needs-translation">Webhook Token。</target>
      </trans-unit>
      <trans-unit id="59950">
        <source>config.aesKey</source>
        <target state="needs-translation">config.aesKey</target>
      </trans-unit>
      <trans-unit id="59952">
        <source>类型: `string`</source>
        <target state="needs-translation">类型: `string`</target>
      </trans-unit>
      <trans-unit id="59954">
        <source>EncodingAESKey。</source>
        <target state="needs-translation">EncodingAESKey。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1670" original="/[koishijs.docs] main/zh-CN/plugins/adapter/whatsapp.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="59956">
        <source>@koishijs/plugin-adapter-whatsapp</source>
        <target state="needs-translation">@koishijs/plugin-adapter-whatsapp</target>
      </trans-unit>
      <trans-unit id="63708">
        <source>在接入之前，你需要准备一个带有 SSL 证书的公网域名，并将 Koishi [部署到公网](../../manual/recipe/server.md)。</source>
        <target state="needs-translation">在接入之前，你需要准备一个带有 SSL 证书的公网域名，并将 Koishi [部署到公网](../../manual/recipe/server.md)。</target>
      </trans-unit>
      <trans-unit id="59958">
        <source>接入方式</source>
        <target state="needs-translation">接入方式</target>
      </trans-unit>
      <trans-unit id="59960">
        <source>前往 [商务平台](https://business.facebook.com/) 创建业务账户，并在 [业务设置](https://business.facebook.com/settings/security) 完成组织验证</source>
        <target state="needs-translation">前往 [商务平台](https://business.facebook.com/) 创建业务账户，并在 [业务设置](https://business.facebook.com/settings/security) 完成组织验证</target>
      </trans-unit>
      <trans-unit id="59962">
        <source>参照 [官方入门指南](https://developers.facebook.com/docs/whatsapp/cloud-api/get-started) 进行操作</source>
        <target state="needs-translation">参照 [官方入门指南](https://developers.facebook.com/docs/whatsapp/cloud-api/get-started) 进行操作</target>
      </trans-unit>
      <trans-unit id="59964">
        <source>阅读 [Business API 概览](https://developers.facebook.com/docs/whatsapp/business-management-api/get-started)，创建系统用户访问口令，在 Available Permissions 中勾选 `whatsapp_business_messaging` 和 `whatsapp_business_management`，填入插件的 `systemToken` 字段。</source>
        <target state="needs-translation">阅读 [Business API 概览](https://developers.facebook.com/docs/whatsapp/business-management-api/get-started)，创建系统用户访问口令，在 Available Permissions 中勾选 `whatsapp_business_messaging` 和 `whatsapp_business_management`，填入插件的 `systemToken` 字段。</target>
      </trans-unit>
      <trans-unit id="59966">
        <source>在当前页面，点击 Add assets，在左侧 Apps 菜单选中创建的 App，勾选 Develop app，点击 Save changes</source>
        <target state="needs-translation">在当前页面，点击 Add assets，在左侧 Apps 菜单选中创建的 App，勾选 Develop app，点击 Save changes</target>
      </trans-unit>
      <trans-unit id="59968">
        <source>在 [应用面板](https://developers.facebook.com)，左侧切换至 设置-基本 页面，点击应用密钥右侧的显示按钮，复制密钥填入插件的 `systemToken` 字段。</source>
        <target state="needs-translation">在 [应用面板](https://developers.facebook.com)，左侧切换至 设置-基本 页面，点击应用密钥右侧的显示按钮，复制密钥填入插件的 `systemToken` 字段。</target>
      </trans-unit>
      <trans-unit id="59970">
        <source>在 [商业账号](https://business.facebook.com/settings/whatsapp-business-accounts/) 页面选择生产或开发环境的账号集合，复制页面上方高亮的 ID，填入插件的 `id` 字段</source>
        <target state="needs-translation">在 [商业账号](https://business.facebook.com/settings/whatsapp-business-accounts/) 页面选择生产或开发环境的账号集合，复制页面上方高亮的 ID，填入插件的 `id` 字段</target>
      </trans-unit>
      <trans-unit id="59972">
        <source>在官方入门指南第三步配置 Webhooks 中，Callback URL 填写机器人的 `selfUrl` 值后连接 `/whatsapp`，Verify token 可填写随机的字符串，与插件的 verifyToken 配置保持一致，启用插件后点击 Verify and save</source>
        <target state="needs-translation">在官方入门指南第三步配置 Webhooks 中，Callback URL 填写机器人的 `selfUrl` 值后连接 `/whatsapp`，Verify token 可填写随机的字符串，与插件的 verifyToken 配置保持一致，启用插件后点击 Verify and save</target>
      </trans-unit>
      <trans-unit id="59974">
        <source>点击 Webhook 字段右侧的管理，在 messages 一行打勾</source>
        <target state="needs-translation">点击 Webhook 字段右侧的管理，在 messages 一行打勾</target>
      </trans-unit>
      <trans-unit id="59976">
        <source>配置项</source>
        <target state="needs-translation">配置项</target>
      </trans-unit>
      <trans-unit id="59978">
        <source>config.id</source>
        <target state="needs-translation">config.id</target>
      </trans-unit>
      <trans-unit id="59980">
        <source>类型：`string`</source>
        <target state="needs-translation">类型：`string`</target>
      </trans-unit>
      <trans-unit id="59982">
        <source>必需选项</source>
        <target state="needs-translation">必需选项</target>
      </trans-unit>
      <trans-unit id="59984">
        <source>商户 ID。</source>
        <target state="needs-translation">商户 ID。</target>
      </trans-unit>
      <trans-unit id="59986">
        <source>config.secret</source>
        <target state="needs-translation">config.secret</target>
      </trans-unit>
      <trans-unit id="59988">
        <source>类型：`string`</source>
        <target state="needs-translation">类型：`string`</target>
      </trans-unit>
      <trans-unit id="59990">
        <source>必需选项</source>
        <target state="needs-translation">必需选项</target>
      </trans-unit>
      <trans-unit id="59992">
        <source>应用密钥。</source>
        <target state="needs-translation">应用密钥。</target>
      </trans-unit>
      <trans-unit id="59994">
        <source>config.systemToken</source>
        <target state="needs-translation">config.systemToken</target>
      </trans-unit>
      <trans-unit id="59996">
        <source>类型：`string`</source>
        <target state="needs-translation">类型：`string`</target>
      </trans-unit>
      <trans-unit id="59998">
        <source>必需选项</source>
        <target state="needs-translation">必需选项</target>
      </trans-unit>
      <trans-unit id="60000">
        <source>系统用户访问令牌。</source>
        <target state="needs-translation">系统用户访问令牌。</target>
      </trans-unit>
      <trans-unit id="60002">
        <source>config.verifyToken</source>
        <target state="needs-translation">config.verifyToken</target>
      </trans-unit>
      <trans-unit id="60004">
        <source>类型：`string`</source>
        <target state="needs-translation">类型：`string`</target>
      </trans-unit>
      <trans-unit id="60006">
        <source>必需选项</source>
        <target state="needs-translation">必需选项</target>
      </trans-unit>
      <trans-unit id="60008">
        <source>Webhook 验证令牌。</source>
        <target state="needs-translation">Webhook 验证令牌。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1672" original="/[koishijs.docs] main/zh-CN/plugins/adapter/zulip.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="60010">
        <source>@koishijs/plugin-adapter-zulip</source>
        <target state="needs-translation">@koishijs/plugin-adapter-zulip</target>
      </trans-unit>
      <trans-unit id="60012">
        <source>接入指南</source>
        <target state="needs-translation">接入指南</target>
      </trans-unit>
      <trans-unit id="60014">
        <source>登录自己的 Zulip 社群，右上角设置按钮选择「个人设置」，在弹窗左侧进入「机器人」，点击「新增机器人」输入相关信息后点击新增。</source>
        <target state="needs-translation">登录自己的 Zulip 社群，右上角设置按钮选择「个人设置」，在弹窗左侧进入「机器人」，点击「新增机器人」输入相关信息后点击新增。</target>
      </trans-unit>
      <trans-unit id="60016">
        <source>在界面中找到新创建的机器人，复制机器人邮箱填入插件的 `email` 字段，复制 API KEY 填入插件的 `key` 字段。</source>
        <target state="needs-translation">在界面中找到新创建的机器人，复制机器人邮箱填入插件的 `email` 字段，复制 API KEY 填入插件的 `key` 字段。</target>
      </trans-unit>
      <trans-unit id="60018">
        <source>配置项</source>
        <target state="needs-translation">配置项</target>
      </trans-unit>
      <trans-unit id="60020">
        <source>config.email</source>
        <target state="needs-translation">config.email</target>
      </trans-unit>
      <trans-unit id="60022">
        <source>类型: `string`</source>
        <target state="needs-translation">类型: `string`</target>
      </trans-unit>
      <trans-unit id="60024">
        <source>必需字段</source>
        <target state="needs-translation">必需字段</target>
      </trans-unit>
      <trans-unit id="60026">
        <source>机器人邮箱。</source>
        <target state="needs-translation">机器人邮箱。</target>
      </trans-unit>
      <trans-unit id="60028">
        <source>config.key</source>
        <target state="needs-translation">config.key</target>
      </trans-unit>
      <trans-unit id="60030">
        <source>类型: `string`</source>
        <target state="needs-translation">类型: `string`</target>
      </trans-unit>
      <trans-unit id="60032">
        <source>必需字段</source>
        <target state="needs-translation">必需字段</target>
      </trans-unit>
      <trans-unit id="60034">
        <source>机器人 API 密钥。</source>
        <target state="needs-translation">机器人 API 密钥。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1674" original="/[koishijs.docs] main/zh-CN/plugins/common/admin.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="60036">
        <source>数据管理 (Admin)</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">資料管理 (Admin)</target>
      </trans-unit>
      <trans-unit id="60038">
        <source>要使用本插件，你需要安装数据库支持。</source>
        <target state="needs-translation">要使用本插件，你需要安装数据库支持。</target>
      </trans-unit>
      <trans-unit id="60040">
        <source>建议配合阅读 [入门 &gt; 权限管理](../../manual/usage/customize.md#权限管理) 章节。</source>
        <target state="needs-translation">建议配合阅读 [入门 &gt; 权限管理](../../manual/usage/customize.md#权限管理) 章节。</target>
      </trans-unit>
      <trans-unit id="60042">
        <source>指令：authorize</source>
        <target state="needs-translation">指令：authorize</target>
      </trans-unit>
      <trans-unit id="60044">
        <source>别名：auth</source>
        <target state="needs-translation">别名：auth</target>
      </trans-unit>
      <trans-unit id="60046">
        <source>基本语法：`authorize &lt;value&gt; -u &lt;user&gt;`</source>
        <target state="needs-translation">基本语法：`authorize &lt;value&gt; -u &lt;user&gt;`</target>
      </trans-unit>
      <trans-unit id="60048">
        <source>最低权限：4</source>
        <target state="needs-translation">最低权限：4</target>
      </trans-unit>
      <trans-unit id="60050">
        <source>authorize 指令用于设置用户的权限等级。</source>
        <target state="needs-translation">authorize 指令用于设置用户的权限等级。</target>
      </trans-unit>
      <trans-unit id="60052">
        <source>该指令 4 级权限才能调用，且需要满足目标用户的权限和要设定的权限都严格小于自己的权限等级，否则无法设置。</source>
        <target state="needs-translation">该指令 4 级权限才能调用，且需要满足目标用户的权限和要设定的权限都严格小于自己的权限等级，否则无法设置。</target>
      </trans-unit>
      <trans-unit id="60054">
        <source>指定用户语法</source>
        <target state="needs-translation">指定用户语法</target>
      </trans-unit>
      <trans-unit id="60056">
        <source>可以通过三种方式指定用户</source>
        <target state="needs-translation">可以通过三种方式指定用户</target>
      </trans-unit>
      <trans-unit id="60058">
        <source>`@user`: 通过直接 @ 人的方式指定（不能是纯文本，需要用各平台的 @ 人方式）</source>
        <target state="needs-translation">`@user`: 通过直接 @ 人的方式指定（不能是纯文本，需要用各平台的 @ 人方式）</target>
      </trans-unit>
      <trans-unit id="60060">
        <source>`@&lt;userId&gt;`: @ 符号后面接用户名（必须是纯文本）</source>
        <target state="needs-translation">`@&lt;userId&gt;`: @ 符号后面接用户名（必须是纯文本）</target>
      </trans-unit>
      <trans-unit id="60062">
        <source>`@&lt;platform&gt;:&lt;userId&gt;`: @ 符号后指定具体的平台和用户名（必须是纯文本）</source>
        <target state="needs-translation">`@&lt;platform&gt;:&lt;userId&gt;`: @ 符号后指定具体的平台和用户名（必须是纯文本）</target>
      </trans-unit>
      <trans-unit id="60064">
        <source>例子</source>
        <target state="needs-translation">例子</target>
      </trans-unit>
      <trans-unit id="60066">
        <source>authorize 3 -u @Koishi              # 通过 @ 人的方式
authorize 3 -u @123456789           # 通过指定用户名方式
authorize 3 -u @telegram:123456789    # 指定具体的平台和用户名</source>
        <target state="needs-translation">authorize 3 -u @Koishi              # 通过 @ 人的方式
authorize 3 -u @123456789           # 通过指定用户名方式
authorize 3 -u @telegram:123456789    # 指定具体的平台和用户名</target>
      </trans-unit>
      <trans-unit id="60068">
        <source>指令：assign</source>
        <target state="needs-translation">指令：assign</target>
      </trans-unit>
      <trans-unit id="60070">
        <source>基本语法：`assign [bot]`</source>
        <target state="needs-translation">基本语法：`assign [bot]`</target>
      </trans-unit>
      <trans-unit id="60072">
        <source>最低权限：4</source>
        <target state="needs-translation">最低权限：4</target>
      </trans-unit>
      <trans-unit id="60074">
        <source>选项：</source>
        <target state="needs-translation">选项：</target>
      </trans-unit>
      <trans-unit id="60076">
        <source>`-c, --channel` 指定目标频道（不在群组内使用时必须指定）</source>
        <target state="needs-translation">`-c, --channel` 指定目标频道（不在群组内使用时必须指定）</target>
      </trans-unit>
      <trans-unit id="60078">
        <source>`-r, --remove` 重置设置</source>
        <target state="needs-translation">`-r, --remove` 重置设置</target>
      </trans-unit>
      <trans-unit id="60080">
        <source>assign 指令可用于设置频道的 [受理人](../../manual/usage/customize.md#受理人机制)。</source>
        <target state="needs-translation">assign 指令可用于设置频道的 [受理人](../../manual/usage/customize.md#受理人机制)。</target>
      </trans-unit>
      <trans-unit id="60082">
        <source>该指令 4 级权限才能调用。</source>
        <target state="needs-translation">该指令 4 级权限才能调用。</target>
      </trans-unit>
      <trans-unit id="60084">
        <source>如果 `-c [channel]` 缺省，则表示目标频道为当前频道（因此私聊状态下不能缺省）；如果 `bot` 缺省，则表示当前接收消息的机器人账号。</source>
        <target state="needs-translation">如果 `-c [channel]` 缺省，则表示目标频道为当前频道（因此私聊状态下不能缺省）；如果 `bot` 缺省，则表示当前接收消息的机器人账号。</target>
      </trans-unit>
      <trans-unit id="60086">
        <source>举个例子，如果要设定一个频道 A 的代理者为 B，下面的两种做法是等价的：</source>
        <target state="needs-translation">举个例子，如果要设定一个频道 A 的代理者为 B，下面的两种做法是等价的：</target>
      </trans-unit>
      <trans-unit id="60088">
        <source>私聊机器人 B，发送 `assign -c #A`</source>
        <target state="needs-translation">私聊机器人 B，发送 `assign -c #A`</target>
      </trans-unit>
      <trans-unit id="60090">
        <source>在频道 A 中发送 `assign @B`（假设 B 能收到此消息）</source>
        <target state="needs-translation">在频道 A 中发送 `assign @B`（假设 B 能收到此消息）</target>
      </trans-unit>
      <trans-unit id="60092">
        <source>指令：user.flag &lt;badge type=&quot;danger&quot;&gt;废弃&lt;/badge&gt;</source>
        <target state="needs-translation">指令：user.flag &lt;badge type=&quot;danger&quot;&gt;废弃&lt;/badge&gt;</target>
      </trans-unit>
      <trans-unit id="60094">
        <source>指令：channel.flag &lt;badge type=&quot;danger&quot;&gt;废弃&lt;/badge&gt;</source>
        <target state="needs-translation">指令：channel.flag &lt;badge type=&quot;danger&quot;&gt;废弃&lt;/badge&gt;</target>
      </trans-unit>
      <trans-unit id="60096">
        <source>基本语法：`xxx.flag [...names]`</source>
        <target state="needs-translation">基本语法：`xxx.flag [...names]`</target>
      </trans-unit>
      <trans-unit id="60098">
        <source>选项：</source>
        <target state="needs-translation">选项：</target>
      </trans-unit>
      <trans-unit id="60100">
        <source>`-l, --list` 标记列表</source>
        <target state="needs-translation">`-l, --list` 标记列表</target>
      </trans-unit>
      <trans-unit id="60102">
        <source>`-s, --set` 添加标记（需要 4 级权限）</source>
        <target state="needs-translation">`-s, --set` 添加标记（需要 4 级权限）</target>
      </trans-unit>
      <trans-unit id="60104">
        <source>`-S, --unset` 删除标记（需要 4 级权限）</source>
        <target state="needs-translation">`-S, --unset` 删除标记（需要 4 级权限）</target>
      </trans-unit>
      <trans-unit id="60106">
        <source>`-u, --user [@user]` 目标用户（仅限 user.flag 指令，需要 3 级权限）</source>
        <target state="needs-translation">`-u, --user [@user]` 目标用户（仅限 user.flag 指令，需要 3 级权限）</target>
      </trans-unit>
      <trans-unit id="60108">
        <source>`-c, --channel [#channel]` 目标频道（仅限 channel.flag 指令，需要 3 级权限）</source>
        <target state="needs-translation">`-c, --channel [#channel]` 目标频道（仅限 channel.flag 指令，需要 3 级权限）</target>
      </trans-unit>
      <trans-unit id="60110">
        <source>这两个指令用于查看和修改用户或频道的状态标签。</source>
        <target state="needs-translation">这两个指令用于查看和修改用户或频道的状态标签。</target>
      </trans-unit>
      <trans-unit id="60112">
        <source>如果不提供选项，则会显示当前的状态标签。</source>
        <target state="needs-translation">如果不提供选项，则会显示当前的状态标签。</target>
      </trans-unit>
      <trans-unit id="60114">
        <source>如果使用了 `-l`，就会列出所有可用的状态标签。</source>
        <target state="needs-translation">如果使用了 `-l`，就会列出所有可用的状态标签。</target>
      </trans-unit>
      <trans-unit id="60116">
        <source>如果使用了 `-s` 或 `-S`，则会添加 / 删除 `names` 中的每一个状态标签。</source>
        <target state="needs-translation">如果使用了 `-s` 或 `-S`，则会添加 / 删除 `names` 中的每一个状态标签。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1676" original="/[koishijs.docs] main/zh-CN/plugins/common/bind.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="60118">
        <source>账号绑定 (Bind)</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">賬號繫結 (Bind)</target>
      </trans-unit>
      <trans-unit id="60120">
        <source>要使用本插件，你需要安装数据库支持。</source>
        <target state="needs-translation">要使用本插件，你需要安装数据库支持。</target>
      </trans-unit>
      <trans-unit id="60122">
        <source>建议配合阅读 [入门 &gt; 账号系统 &gt; 账号绑定](../../manual/usage/platform.md#通过指令绑定) 章节。</source>
        <target state="needs-translation">建议配合阅读 [入门 &gt; 账号系统 &gt; 账号绑定](../../manual/usage/platform.md#通过指令绑定) 章节。</target>
      </trans-unit>
      <trans-unit id="60124">
        <source>@koishijs/plugin-bind 提供了一个指令，允许用户进行账号绑定。</source>
        <target state="needs-translation">@koishijs/plugin-bind 提供了一个指令，允许用户进行账号绑定。</target>
      </trans-unit>
      <trans-unit id="60126">
        <source>指令：bind</source>
        <target state="needs-translation">指令：bind</target>
      </trans-unit>
      <trans-unit id="60128">
        <source>基本语法：`bind`</source>
        <target state="needs-translation">基本语法：`bind`</target>
      </trans-unit>
      <trans-unit id="60130">
        <source>最低权限：0</source>
        <target state="needs-translation">最低权限：0</target>
      </trans-unit>
      <trans-unit id="60132">
        <source>bind 指令用于跨平台绑定账号。</source>
        <target state="needs-translation">bind 指令用于跨平台绑定账号。</target>
      </trans-unit>
      <trans-unit id="60134">
        <source>该指令 0 级权限即可调用。</source>
        <target state="needs-translation">该指令 0 级权限即可调用。</target>
      </trans-unit>
      <trans-unit id="60136">
        <source>如果此指令在私聊环境下被调用，则 Koishi 会生成一串随机码。</source>
        <target state="needs-translation">如果此指令在私聊环境下被调用，则 Koishi 会生成一串随机码。</target>
      </trans-unit>
      <trans-unit id="60138">
        <source>你只需在 5 分钟内使用你的其他账号在要绑定的平台内向机器人发送这串随机码，即可完成绑定。</source>
        <target state="needs-translation">你只需在 5 分钟内使用你的其他账号在要绑定的平台内向机器人发送这串随机码，即可完成绑定。</target>
      </trans-unit>
      <trans-unit id="60140">
        <source>如果此指令在群聊环境下被调用，由于此时生成的随机码是公开的，你需要首先按照上述流程发送一次随机码。</source>
        <target state="needs-translation">如果此指令在群聊环境下被调用，由于此时生成的随机码是公开的，你需要首先按照上述流程发送一次随机码。</target>
      </trans-unit>
      <trans-unit id="60142">
        <source>接着，收到并核验过随机码的机器人将再向你发送一串新的随机码。</source>
        <target state="needs-translation">接着，收到并核验过随机码的机器人将再向你发送一串新的随机码。</target>
      </trans-unit>
      <trans-unit id="60144">
        <source>你仍需要在 5 分钟内使用你一开始的账号在之前的平台内向机器人发送这串随机码，即可完成绑定。</source>
        <target state="needs-translation">你仍需要在 5 分钟内使用你一开始的账号在之前的平台内向机器人发送这串随机码，即可完成绑定。</target>
      </trans-unit>
      <trans-unit id="60146">
        <source>配置项</source>
        <target state="needs-translation">配置项</target>
      </trans-unit>
      <trans-unit id="60148">
        <source>tokenPrefix</source>
        <target state="needs-translation">tokenPrefix</target>
      </trans-unit>
      <trans-unit id="60150">
        <source>类型: `string`</source>
        <target state="needs-translation">类型: `string`</target>
      </trans-unit>
      <trans-unit id="60152">
        <source>默认值: `'koishi/'`</source>
        <target state="needs-translation">默认值: `'koishi/'`</target>
      </trans-unit>
      <trans-unit id="60154">
        <source>生成的随机码的前缀。</source>
        <target state="needs-translation">生成的随机码的前缀。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1678" original="/[koishijs.docs] main/zh-CN/plugins/common/broadcast.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="60156">
        <source>发送广播 (Broadcast)</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">傳送廣播 (Broadcast)</target>
      </trans-unit>
      <trans-unit id="60158">
        <source>要使用本插件，你需要安装数据库支持。</source>
        <target state="needs-translation">要使用本插件，你需要安装数据库支持。</target>
      </trans-unit>
      <trans-unit id="60160">
        <source>指令：broadcast</source>
        <target state="needs-translation">指令：broadcast</target>
      </trans-unit>
      <trans-unit id="60162">
        <source>基本语法：`broadcast &lt;message&gt;`</source>
        <target state="needs-translation">基本语法：`broadcast &lt;message&gt;`</target>
      </trans-unit>
      <trans-unit id="60164">
        <source>最低权限：4</source>
        <target state="needs-translation">最低权限：4</target>
      </trans-unit>
      <trans-unit id="60166">
        <source>选项：</source>
        <target state="needs-translation">选项：</target>
      </trans-unit>
      <trans-unit id="60168">
        <source>`-o, --only` 仅向当前账号负责的群进行广播</source>
        <target state="needs-translation">`-o, --only` 仅向当前账号负责的群进行广播</target>
      </trans-unit>
      <trans-unit id="60170">
        <source>`-f, --forced` 无视 silent 标签进行广播</source>
        <target state="needs-translation">`-f, --forced` 无视 silent 标签进行广播</target>
      </trans-unit>
      <trans-unit id="60172">
        <source>broadcast 指令用于按照 [受理人](../../manual/usage/customize.md#受理人机制) 向所有机器人所负责的频道发送一段文本（默认情况下有 silent 标签的群不发送）。</source>
        <target state="needs-translation">broadcast 指令用于按照 [受理人](../../manual/usage/customize.md#受理人机制) 向所有机器人所负责的频道发送一段文本（默认情况下有 silent 标签的群不发送）。</target>
      </trans-unit>
      <trans-unit id="60174">
        <source>你可以这样调用它：</source>
        <target state="needs-translation">你可以这样调用它：</target>
      </trans-unit>
      <trans-unit id="60176">
        <source>broadcast foo bar baz     # 向所有频道发送 foo bar baz</source>
        <target state="needs-translation">broadcast foo bar baz     # 向所有频道发送 foo bar baz</target>
      </trans-unit>
      <trans-unit id="60178">
        <source>当一个机器人账号同时向多个频道发送广播消息时，为了避免风控，Koishi 会给每条消息发送后添加一段延迟，可以通过 [`delay.broadcast`](../../api/core/app.md#options-delay) 进行配置。</source>
        <target state="needs-translation">当一个机器人账号同时向多个频道发送广播消息时，为了避免风控，Koishi 会给每条消息发送后添加一段延迟，可以通过 [`delay.broadcast`](../../api/core/app.md#options-delay) 进行配置。</target>
      </trans-unit>
      <trans-unit id="60182">
        <source>broadcast 指令的 message 参数是一个 [变长参数](../../manual/usage/command.md#参数和选项)，因此你应该把所有的选项写到消息前面，否则会被认为是消息的一部分。</source>
        <target state="needs-translation">broadcast 指令的 message 参数是一个 [变长参数](../../manual/usage/command.md#参数和选项)，因此你应该把所有的选项写到消息前面，否则会被认为是消息的一部分。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1680" original="/[koishijs.docs] main/zh-CN/plugins/common/callme.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="60184">
        <source>设置昵称 (Callme)</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">設定暱稱 (Callme)</target>
      </trans-unit>
      <trans-unit id="60186">
        <source>要使用本插件，你需要安装数据库支持。</source>
        <target state="needs-translation">要使用本插件，你需要安装数据库支持。</target>
      </trans-unit>
      <trans-unit id="60188">
        <source>指令：callme</source>
        <target state="needs-translation">指令：callme</target>
      </trans-unit>
      <trans-unit id="60190">
        <source>基本语法：`callme [name]`</source>
        <target state="needs-translation">基本语法：`callme [name]`</target>
      </trans-unit>
      <trans-unit id="60192">
        <source>callme 指令用于修改用户的昵称。</source>
        <target state="needs-translation">callme 指令用于修改用户的昵称。</target>
      </trans-unit>
      <trans-unit id="60194">
        <source>如果不传入参数，则机器人会返回你当前的昵称。</source>
        <target state="needs-translation">如果不传入参数，则机器人会返回你当前的昵称。</target>
      </trans-unit>
      <trans-unit id="60196">
        <source>重复的昵称、空昵称和含有消息段的昵称是不被接受的。</source>
        <target state="needs-translation">重复的昵称、空昵称和含有消息段的昵称是不被接受的。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1682" original="/[koishijs.docs] main/zh-CN/plugins/common/echo.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="60198">
        <source>发送消息 (Echo)</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">傳送訊息 (Echo)</target>
      </trans-unit>
      <trans-unit id="60200">
        <source>指令：echo</source>
        <target state="needs-translation">指令：echo</target>
      </trans-unit>
      <trans-unit id="60202">
        <source>基本语法：`echo &lt;message&gt;`</source>
        <target state="needs-translation">基本语法：`echo &lt;message&gt;`</target>
      </trans-unit>
      <trans-unit id="60204">
        <source>最低权限：2</source>
        <target state="needs-translation">最低权限：2</target>
      </trans-unit>
      <trans-unit id="60206">
        <source>选项：</source>
        <target state="needs-translation">选项：</target>
      </trans-unit>
      <trans-unit id="60208">
        <source>`-e, --escape`  发送转义消息 (需要 3 级权限)</source>
        <target state="needs-translation">`-e, --escape`  发送转义消息 (需要 3 级权限)</target>
      </trans-unit>
      <trans-unit id="60210">
        <source>`-E, --unescape`  发送反转义消息 (需要 3 级权限)</source>
        <target state="needs-translation">`-E, --unescape`  发送反转义消息 (需要 3 级权限)</target>
      </trans-unit>
      <trans-unit id="60212">
        <source>`-u, --user [user]`  发送到用户 (需要 3 级权限)</source>
        <target state="needs-translation">`-u, --user [user]`  发送到用户 (需要 3 级权限)</target>
      </trans-unit>
      <trans-unit id="60214">
        <source>`-c, --channel [channel]`  发送到频道 (需要 3 级权限)</source>
        <target state="needs-translation">`-c, --channel [channel]`  发送到频道 (需要 3 级权限)</target>
      </trans-unit>
      <trans-unit id="60216">
        <source>`-g, --guild [guild]`  指定群组编号 (需要 3 级权限)</source>
        <target state="needs-translation">`-g, --guild [guild]`  指定群组编号 (需要 3 级权限)</target>
      </trans-unit>
      <trans-unit id="60218">
        <source>你可以使用 echo 指令发送消息到特定的上下文：</source>
        <target state="needs-translation">你可以使用 echo 指令发送消息到特定的上下文：</target>
      </trans-unit>
      <trans-unit id="60220">
        <source>echo foo bar              # 向当前上下文发送 foo bar
echo -u @foo foo bar      # 向用户 foo 私聊发送 foo bar
echo -c #bar foo bar      # 向频道 bar 发送 foo bar</source>
        <target state="needs-translation">echo foo bar              # 向当前上下文发送 foo bar
echo -u @foo foo bar      # 向用户 foo 私聊发送 foo bar
echo -c #bar foo bar      # 向频道 bar 发送 foo bar</target>
      </trans-unit>
      <trans-unit id="60224">
        <source>echo 指令的 message 参数是一个 [变长参数](../../manual/usage/command.md#参数和选项)，因此你应该把所有的选项写到消息前面，否则会被认为是消息的一部分。</source>
        <target state="needs-translation">echo 指令的 message 参数是一个 [变长参数](../../manual/usage/command.md#参数和选项)，因此你应该把所有的选项写到消息前面，否则会被认为是消息的一部分。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1684" original="/[koishijs.docs] main/zh-CN/plugins/common/help.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="60226">
        <source>查看帮助 (Help)</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">檢視幫助 (Help)</target>
      </trans-unit>
      <trans-unit id="60228">
        <source>使用方法请参见 [入门 &gt; 指令系统 &gt; 查看帮助](../../manual/usage/command.md#查看帮助) 章节。</source>
        <target state="needs-translation">使用方法请参见 [入门 &gt; 指令系统 &gt; 查看帮助](../../manual/usage/command.md#查看帮助) 章节。</target>
      </trans-unit>
      <trans-unit id="60230">
        <source>配置项</source>
        <target state="needs-translation">配置项</target>
      </trans-unit>
      <trans-unit id="60232">
        <source>如果你在开发用于特定目的的机器人，你可能不希望用户使用全局的 help 指令查看指令列表。</source>
        <target state="needs-translation">如果你在开发用于特定目的的机器人，你可能不希望用户使用全局的 help 指令查看指令列表。</target>
      </trans-unit>
      <trans-unit id="60234">
        <source>options</source>
        <target state="needs-translation">options</target>
      </trans-unit>
      <trans-unit id="60236">
        <source>类型：`boolean`</source>
        <target state="needs-translation">类型：`boolean`</target>
      </trans-unit>
      <trans-unit id="60238">
        <source>默认值：`true`</source>
        <target state="needs-translation">默认值：`true`</target>
      </trans-unit>
      <trans-unit id="60240">
        <source>是否允许通过 `-h` 参数触发帮助指令。</source>
        <target state="needs-translation">是否允许通过 `-h` 参数触发帮助指令。</target>
      </trans-unit>
      <trans-unit id="60242">
        <source>shortcut</source>
        <target state="needs-translation">shortcut</target>
      </trans-unit>
      <trans-unit id="60244">
        <source>类型：`boolean`</source>
        <target state="needs-translation">类型：`boolean`</target>
      </trans-unit>
      <trans-unit id="60246">
        <source>默认值：`true`</source>
        <target state="needs-translation">默认值：`true`</target>
      </trans-unit>
      <trans-unit id="60248">
        <source>是否允许通过「帮助」快捷调用触发帮助指令。</source>
        <target state="needs-translation">是否允许通过「帮助」快捷调用触发帮助指令。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1686" original="/[koishijs.docs] main/zh-CN/plugins/common/inspect.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="60250">
        <source>会话信息 (Inspect)</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">會話資訊 (Inspect)</target>
      </trans-unit>
      <trans-unit id="60252">
        <source>使用方法请参见 [入门 &gt; 账号系统 &gt; 获取账号信息](../../manual/usage/platform.md#获取账号信息) 章节。</source>
        <target state="needs-translation">使用方法请参见 [入门 &gt; 账号系统 &gt; 获取账号信息](../../manual/usage/platform.md#获取账号信息) 章节。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1688" original="/[koishijs.docs] main/zh-CN/plugins/console/analytics.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="60254">
        <source>数据统计 (Analytics)</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">資料統計 (Analytics)</target>
      </trans-unit>
    </body>
  </file>
  <file id="1690" original="/[koishijs.docs] main/zh-CN/plugins/console/auth.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="60256">
        <source>用户登录 (Auth)</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">使用者登入 (Auth)</target>
      </trans-unit>
      <trans-unit id="60258">
        <source>配置项</source>
        <target state="needs-translation">配置项</target>
      </trans-unit>
      <trans-unit id="60260">
        <source>authTokenExpire</source>
        <target state="needs-translation">authTokenExpire</target>
      </trans-unit>
      <trans-unit id="60262">
        <source>类型: `number`</source>
        <target state="needs-translation">类型: `number`</target>
      </trans-unit>
      <trans-unit id="60264">
        <source>默认值: `Time.week`</source>
        <target state="needs-translation">默认值: `Time.week`</target>
      </trans-unit>
      <trans-unit id="60266">
        <source>访问控制台的令牌生效时间。</source>
        <target state="needs-translation">访问控制台的令牌生效时间。</target>
      </trans-unit>
      <trans-unit id="60268">
        <source>loginTokenExpire</source>
        <target state="needs-translation">loginTokenExpire</target>
      </trans-unit>
      <trans-unit id="60270">
        <source>类型: `number`</source>
        <target state="needs-translation">类型: `number`</target>
      </trans-unit>
      <trans-unit id="60272">
        <source>默认值: `Time.minute * 10`</source>
        <target state="needs-translation">默认值: `Time.minute * 10`</target>
      </trans-unit>
      <trans-unit id="60274">
        <source>使用平台账号登录时，验证码的生效时间。</source>
        <target state="needs-translation">使用平台账号登录时，验证码的生效时间。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1692" original="/[koishijs.docs] main/zh-CN/plugins/console/commands.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="60276">
        <source>指令管理 (Commands)</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">指令管理 (Commands)</target>
      </trans-unit>
      <trans-unit id="60278">
        <source>使用方法请参见 [入门 &gt; 指令系统 &gt; 指令管理](../../manual/usage/command.md#指令管理) 一节。</source>
        <target state="needs-translation">使用方法请参见 [入门 &gt; 指令系统 &gt; 指令管理](../../manual/usage/command.md#指令管理) 一节。</target>
      </trans-unit>
      <trans-unit id="60280">
        <source>指令：command</source>
        <target state="needs-translation">指令：command</target>
      </trans-unit>
      <trans-unit id="60282">
        <source>基本语法：`command &lt;name&gt;`</source>
        <target state="needs-translation">基本语法：`command &lt;name&gt;`</target>
      </trans-unit>
      <trans-unit id="60284">
        <source>最低权限：3</source>
        <target state="needs-translation">最低权限：3</target>
      </trans-unit>
      <trans-unit id="60286">
        <source>选项：</source>
        <target state="needs-translation">选项：</target>
      </trans-unit>
      <trans-unit id="60288">
        <source>`-c, --create` 创建指令</source>
        <target state="needs-translation">`-c, --create` 创建指令</target>
      </trans-unit>
      <trans-unit id="60290">
        <source>`-a, --alias` 添加指令别名</source>
        <target state="needs-translation">`-a, --alias` 添加指令别名</target>
      </trans-unit>
      <trans-unit id="60292">
        <source>`-A, --unalias` 移除指令别名</source>
        <target state="needs-translation">`-A, --unalias` 移除指令别名</target>
      </trans-unit>
      <trans-unit id="60294">
        <source>`-n, --name` 修改显示名称</source>
        <target state="needs-translation">`-n, --name` 修改显示名称</target>
      </trans-unit>
      <trans-unit id="60296">
        <source>`-p, --parent` 修改父指令</source>
        <target state="needs-translation">`-p, --parent` 修改父指令</target>
      </trans-unit>
      <trans-unit id="60298">
        <source>`-P, --no-parent` 移除父指令</source>
        <target state="needs-translation">`-P, --no-parent` 移除父指令</target>
      </trans-unit>
      <trans-unit id="60300">
        <source>command 指令可用于对指令进行管理，包括创建、修改、删除等操作。</source>
        <target state="needs-translation">command 指令可用于对指令进行管理，包括创建、修改、删除等操作。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1694" original="/[koishijs.docs] main/zh-CN/plugins/console/config.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="60302">
        <source>插件配置 (Config)</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">外掛配置 (Config)</target>
      </trans-unit>
    </body>
  </file>
  <file id="1696" original="/[koishijs.docs] main/zh-CN/plugins/console/explorer.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="60304">
        <source>资源管理器 (Explorer)</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">資源管理器 (Explorer)</target>
      </trans-unit>
    </body>
  </file>
  <file id="1698" original="/[koishijs.docs] main/zh-CN/plugins/console/index.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="60306">
        <source>控制台 (Console)</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">控制檯 (Console)</target>
      </trans-unit>
      <trans-unit id="60308">
        <source>配置项</source>
        <target state="needs-translation">配置项</target>
      </trans-unit>
      <trans-unit id="60310">
        <source>uiPath</source>
        <target state="needs-translation">uiPath</target>
      </trans-unit>
      <trans-unit id="60312">
        <source>类型: `string`</source>
        <target state="needs-translation">类型: `string`</target>
      </trans-unit>
      <trans-unit id="60314">
        <source>默认值: `/console`</source>
        <target state="needs-translation">默认值: `/console`</target>
      </trans-unit>
      <trans-unit id="60316">
        <source>前端页面呈现的路径。</source>
        <target state="translated">前端頁面呈現的路徑。</target>
      </trans-unit>
      <trans-unit id="60318">
        <source>apiPath</source>
        <target state="needs-translation">apiPath</target>
      </trans-unit>
      <trans-unit id="60320">
        <source>类型: `string`</source>
        <target state="needs-translation">类型: `string`</target>
      </trans-unit>
      <trans-unit id="60322">
        <source>默认值: `/status`</source>
        <target state="needs-translation">默认值: `/status`</target>
      </trans-unit>
      <trans-unit id="60324">
        <source>后端 API 服务的路径。</source>
        <target state="translated">後端 API 服務的路徑。</target>
      </trans-unit>
      <trans-unit id="60326">
        <source>selfUrl</source>
        <target state="needs-translation">selfUrl</target>
      </trans-unit>
      <trans-unit id="60328">
        <source>类型: `string`</source>
        <target state="needs-translation">类型: `string`</target>
      </trans-unit>
      <trans-unit id="60330">
        <source>默认值: `''`</source>
        <target state="needs-translation">默认值: `''`</target>
      </trans-unit>
      <trans-unit id="60332">
        <source>Koishi 服务暴露在公网的地址。</source>
        <target state="translated">Koishi 服務暴露在公網的地址。</target>
      </trans-unit>
      <trans-unit id="60334">
        <source>只有你将 `uiPath` 和 `apiPath` 分别部署到了不同的端口或域名时，这个选项才建议使用。</source>
        <target state="needs-translation">只有你将 `uiPath` 和 `apiPath` 分别部署到了不同的端口或域名时，这个选项才建议使用。</target>
      </trans-unit>
      <trans-unit id="60336">
        <source>:::</source>
        <target state="needs-translation">:::</target>
      </trans-unit>
      <trans-unit id="60338">
        <source>open</source>
        <target state="needs-translation">open</target>
      </trans-unit>
      <trans-unit id="60340">
        <source>类型: `boolean`</source>
        <target state="needs-translation">类型: `boolean`</target>
      </trans-unit>
      <trans-unit id="60342">
        <source>默认值: `false`</source>
        <target state="needs-translation">默认值: `false`</target>
      </trans-unit>
      <trans-unit id="60344">
        <source>应用启动后自动打开网页。</source>
        <target state="needs-translation">应用启动后自动打开网页。</target>
      </trans-unit>
      <trans-unit id="60346">
        <source>devMode</source>
        <target state="needs-translation">devMode</target>
      </trans-unit>
      <trans-unit id="60348">
        <source>类型: `boolean`</source>
        <target state="needs-translation">类型: `boolean`</target>
      </trans-unit>
      <trans-unit id="60350">
        <source>默认值: `false`</source>
        <target state="needs-translation">默认值: `false`</target>
      </trans-unit>
      <trans-unit id="60352">
        <source>启用[调试模式](#调试模式)。</source>
        <target state="needs-translation">启用[调试模式](#调试模式)。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1700" original="/[koishijs.docs] main/zh-CN/plugins/console/insight.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="60354">
        <source>插件依赖图 (Insight)</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">外掛依賴圖 (Insight)</target>
      </trans-unit>
    </body>
  </file>
  <file id="1702" original="/[koishijs.docs] main/zh-CN/plugins/console/locales.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="60356">
        <source>本地翻译 (Locales)</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">本地翻譯 (Locales)</target>
      </trans-unit>
      <trans-unit id="60358">
        <source>使用方法请参见 [入门 &gt; 国际化](../../manual/usage/customize.md#本地化文本) 一节。</source>
        <target state="needs-translation">使用方法请参见 [入门 &gt; 国际化](../../manual/usage/customize.md#本地化文本) 一节。</target>
      </trans-unit>
      <trans-unit id="60360">
        <source>@koishijs/plugin-locales 允许你在本地覆盖和扩展 Koishi 本体和其他插件的翻译文本。</source>
        <target state="needs-translation">@koishijs/plugin-locales 允许你在本地覆盖和扩展 Koishi 本体和其他插件的翻译文本。</target>
      </trans-unit>
      <trans-unit id="60362">
        <source>配置项</source>
        <target state="needs-translation">配置项</target>
      </trans-unit>
      <trans-unit id="60364">
        <source>root</source>
        <target state="needs-translation">root</target>
      </trans-unit>
      <trans-unit id="60366">
        <source>类型: `string`</source>
        <target state="needs-translation">类型: `string`</target>
      </trans-unit>
      <trans-unit id="60368">
        <source>默认值: `'locales'`</source>
        <target state="needs-translation">默认值: `'locales'`</target>
      </trans-unit>
      <trans-unit id="60370">
        <source>存储翻译文件的路径。</source>
        <target state="needs-translation">存储翻译文件的路径。</target>
      </trans-unit>
      <trans-unit id="60372">
        <source>如果填入相对路径则会被解析为相对于 [baseDir](../../api/core/context.md#ctx-basedir) 的路径。</source>
        <target state="needs-translation">如果填入相对路径则会被解析为相对于 [baseDir](../../api/core/context.md#ctx-basedir) 的路径。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1704" original="/[koishijs.docs] main/zh-CN/plugins/console/logger.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="60374">
        <source>日志管理 (Logger)</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">日誌管理 (Logger)</target>
      </trans-unit>
    </body>
  </file>
  <file id="1706" original="/[koishijs.docs] main/zh-CN/plugins/console/market.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="60376">
        <source>插件市场 (Market)</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">外掛市場 (Market)</target>
      </trans-unit>
      <trans-unit id="60378">
        <source>配置项</source>
        <target state="needs-translation">配置项</target>
      </trans-unit>
      <trans-unit id="60380">
        <source>search.endpoint</source>
        <target state="needs-translation">search.endpoint</target>
      </trans-unit>
      <trans-unit id="60382">
        <source>类型: `string`</source>
        <target state="needs-translation">类型: `string`</target>
      </trans-unit>
      <trans-unit id="60384">
        <source>用于搜索插件市场的网址。</source>
        <target state="needs-translation">用于搜索插件市场的网址。</target>
      </trans-unit>
      <trans-unit id="60386">
        <source>默认跟随当前的 npm registry。</source>
        <target state="needs-translation">默认跟随当前的 npm registry。</target>
      </trans-unit>
      <trans-unit id="60388">
        <source>你可以填入我们的官方镜像：&lt;https://registry.koishi.chat/index.json&gt;。</source>
        <target state="needs-translation">你可以填入我们的官方镜像：&lt;https://registry.koishi.chat/index.json&gt;。</target>
      </trans-unit>
      <trans-unit id="60390">
        <source>:::</source>
        <target state="needs-translation">:::</target>
      </trans-unit>
      <trans-unit id="60392">
        <source>search.timeout</source>
        <target state="needs-translation">search.timeout</target>
      </trans-unit>
      <trans-unit id="60394">
        <source>类型: `number`</source>
        <target state="needs-translation">类型: `number`</target>
      </trans-unit>
      <trans-unit id="60396">
        <source>默认值: `30000`</source>
        <target state="needs-translation">默认值: `30000`</target>
      </trans-unit>
      <trans-unit id="60398">
        <source>搜索插件市场的最长时间，单位为毫秒。</source>
        <target state="needs-translation">搜索插件市场的最长时间，单位为毫秒。</target>
      </trans-unit>
      <trans-unit id="60400">
        <source>registry.endpoint</source>
        <target state="needs-translation">registry.endpoint</target>
      </trans-unit>
      <trans-unit id="60402">
        <source>类型: `string`</source>
        <target state="needs-translation">类型: `string`</target>
      </trans-unit>
      <trans-unit id="60404">
        <source>用于搜索版本信息的网址。</source>
        <target state="needs-translation">用于搜索版本信息的网址。</target>
      </trans-unit>
      <trans-unit id="60406">
        <source>默认跟随当前的 npm registry。</source>
        <target state="needs-translation">默认跟随当前的 npm registry。</target>
      </trans-unit>
      <trans-unit id="60408">
        <source>registry.timeout</source>
        <target state="needs-translation">registry.timeout</target>
      </trans-unit>
      <trans-unit id="60410">
        <source>类型: `string`</source>
        <target state="needs-translation">类型: `string`</target>
      </trans-unit>
      <trans-unit id="60412">
        <source>搜索版本信息的最长时间，单位为毫秒。</source>
        <target state="needs-translation">搜索版本信息的最长时间，单位为毫秒。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1708" original="/[koishijs.docs] main/zh-CN/plugins/console/sandbox.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="60414">
        <source>沙盒调试 (Sandbox)</source>
        <target state="needs-translation">沙盒调试 (Sandbox)</target>
      </trans-unit>
      <trans-unit id="60416">
        <source>使用方法请参见 [入门 &gt; 第一次聊天](../../manual/usage/adapter.md#在沙盒中模拟对话) 一节。</source>
        <target state="needs-translation">使用方法请参见 [入门 &gt; 第一次聊天](../../manual/usage/adapter.md#在沙盒中模拟对话) 一节。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1710" original="/[koishijs.docs] main/zh-CN/plugins/console/status.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="60418">
        <source>运行状态 (Status)</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">執行狀態 (Status)</target>
      </trans-unit>
      <trans-unit id="60420">
        <source>指令：status</source>
        <target state="needs-translation">指令：status</target>
      </trans-unit>
      <trans-unit id="60422">
        <source>快捷调用：你的状态，查看状态，运行情况，运行状态</source>
        <target state="needs-translation">快捷调用：你的状态，查看状态，运行情况，运行状态</target>
      </trans-unit>
      <trans-unit id="60424">
        <source>status 指令可以用于查看机器人的运行状态。</source>
        <target state="needs-translation">status 指令可以用于查看机器人的运行状态。</target>
      </trans-unit>
      <trans-unit id="60426">
        <source>你的状态</source>
        <target state="needs-translation">你的状态</target>
      </trans-unit>
      <trans-unit id="60428">
        <source>5 名四季酱正在为 20 个群和 2409 名用户提供服务。</source>
        <target state="needs-translation">5 名四季酱正在为 20 个群和 2409 名用户提供服务。</target>
      </trans-unit>
      <trans-unit id="60430">
        <source>四季酱 2 号：工作中（2/min）</source>
        <target state="needs-translation">四季酱 2 号：工作中（2/min）</target>
      </trans-unit>
      <trans-unit id="60432">
        <source>四季酱 3 号：工作中（3/min）</source>
        <target state="needs-translation">四季酱 3 号：工作中（3/min）</target>
      </trans-unit>
      <trans-unit id="60434">
        <source>四季酱 4 号：工作中（3/min）</source>
        <target state="needs-translation">四季酱 4 号：工作中（3/min）</target>
      </trans-unit>
      <trans-unit id="60436">
        <source>四季酱 5 号：工作中（0/min）</source>
        <target state="needs-translation">四季酱 5 号：工作中（0/min）</target>
      </trans-unit>
      <trans-unit id="60438">
        <source>四季酱 9 号：工作中（5/min）</source>
        <target state="needs-translation">四季酱 9 号：工作中（5/min）</target>
      </trans-unit>
      <trans-unit id="60440">
        <source>==========</source>
        <target state="needs-translation">==========</target>
      </trans-unit>
      <trans-unit id="60442">
        <source>更新时间：2019-12-8 14:41:15</source>
        <target state="needs-translation">更新时间：2019-12-8 14:41:15</target>
      </trans-unit>
      <trans-unit id="60444">
        <source>启动时间：2019-12-8 14:52:12</source>
        <target state="needs-translation">启动时间：2019-12-8 14:52:12</target>
      </trans-unit>
      <trans-unit id="60446">
        <source>已运行 43 天 10 小时 22 分钟</source>
        <target state="needs-translation">已运行 43 天 10 小时 22 分钟</target>
      </trans-unit>
      <trans-unit id="60448">
        <source>已载入指令：105</source>
        <target state="needs-translation">已载入指令：105</target>
      </trans-unit>
      <trans-unit id="60450">
        <source>已载入中间件：8</source>
        <target state="needs-translation">已载入中间件：8</target>
      </trans-unit>
      <trans-unit id="60452">
        <source>CPU 使用率：1% / 2%</source>
        <target state="needs-translation">CPU 使用率：1% / 2%</target>
      </trans-unit>
      <trans-unit id="60454">
        <source>内存使用率：34% / 91%</source>
        <target state="needs-translation">内存使用率：34% / 91%</target>
      </trans-unit>
      <trans-unit id="60456">
        <source>修改指令输出</source>
        <target state="needs-translation">修改指令输出</target>
      </trans-unit>
      <trans-unit id="60458">
        <source>可以使用模板语法修改 status 指令的输出。</source>
        <target state="needs-translation">可以使用模板语法修改 status 指令的输出。</target>
      </trans-unit>
      <trans-unit id="60460">
        <source>默认的代码实现如下：</source>
        <target state="needs-translation">默认的代码实现如下：</target>
      </trans-unit>
      <trans-unit id="60462">
        <source>template.set('status', {
  bot: '{{ username }}：{{ code ? `无法连接` : `工作中（${currentRate[0]}/min）` }}',
  output: [
    '{{ bots }}',
    '==========',
    '活跃用户数量：{{ activeUsers }}',
    '活跃群数量：{{ activeGuilds }}',
    'CPU 使用率：{{ (cpu[0] * 100).toFixed() }}% / {{ (cpu[1] * 100).toFixed() }}%',
    '内存使用率：{{ (memory[0] * 100).toFixed() }}% / {{ (memory[1] * 100).toFixed() }}%',
  ].join('\n'),
})</source>
        <target state="needs-translation">template.set('status', {
  bot: '{{ username }}：{{ code ? `无法连接` : `工作中（${currentRate[0]}/min）` }}',
  output: [
    '{{ bots }}',
    '==========',
    '活跃用户数量：{{ activeUsers }}',
    '活跃群数量：{{ activeGuilds }}',
    'CPU 使用率：{{ (cpu[0] * 100).toFixed() }}% / {{ (cpu[1] * 100).toFixed() }}%',
    '内存使用率：{{ (memory[0] * 100).toFixed() }}% / {{ (memory[1] * 100).toFixed() }}%',
  ].join('\n'),
})</target>
      </trans-unit>
      <trans-unit id="60464">
        <source>配置项</source>
        <target state="needs-translation">配置项</target>
      </trans-unit>
      <trans-unit id="60466">
        <source>tickInterval</source>
        <target state="needs-translation">tickInterval</target>
      </trans-unit>
      <trans-unit id="60468">
        <source>类型: `number`</source>
        <target state="needs-translation">类型: `number`</target>
      </trans-unit>
      <trans-unit id="60470">
        <source>默认值: `Time.second * 5`</source>
        <target state="needs-translation">默认值: `Time.second * 5`</target>
      </trans-unit>
      <trans-unit id="60472">
        <source>页面同步 profile 数据的时间。</source>
        <target state="needs-translation">页面同步 profile 数据的时间。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1712" original="/[koishijs.docs] main/zh-CN/plugins/database/memory.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="60474">
        <source>@koishijs/plugin-database-memory</source>
        <target state="needs-translation">@koishijs/plugin-database-memory</target>
      </trans-unit>
      <trans-unit id="60476">
        <source>配置项</source>
        <target state="needs-translation">配置项</target>
      </trans-unit>
      <trans-unit id="60478">
        <source>此插件暂无配置项。</source>
        <target state="needs-translation">此插件暂无配置项。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1714" original="/[koishijs.docs] main/zh-CN/plugins/database/mongo.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="60480">
        <source>@koishijs/plugin-database-mongo</source>
        <target state="needs-translation">@koishijs/plugin-database-mongo</target>
      </trans-unit>
      <trans-unit id="60482">
        <source>配置项</source>
        <target state="needs-translation">配置项</target>
      </trans-unit>
      <trans-unit id="60484">
        <source>config.protocol</source>
        <target state="needs-translation">config.protocol</target>
      </trans-unit>
      <trans-unit id="60486">
        <source>类型: `string`</source>
        <target state="needs-translation">类型: `string`</target>
      </trans-unit>
      <trans-unit id="60488">
        <source>默认值: `'mongodb'`</source>
        <target state="needs-translation">默认值: `'mongodb'`</target>
      </trans-unit>
      <trans-unit id="60490">
        <source>要使用的协议。</source>
        <target state="needs-translation">要使用的协议。</target>
      </trans-unit>
      <trans-unit id="60492">
        <source>config.host</source>
        <target state="needs-translation">config.host</target>
      </trans-unit>
      <trans-unit id="60494">
        <source>类型: `string`</source>
        <target state="needs-translation">类型: `string`</target>
      </trans-unit>
      <trans-unit id="60496">
        <source>默认值: `'localhost'`</source>
        <target state="needs-translation">默认值: `'localhost'`</target>
      </trans-unit>
      <trans-unit id="60498">
        <source>要连接的主机地址。</source>
        <target state="needs-translation">要连接的主机地址。</target>
      </trans-unit>
      <trans-unit id="60500">
        <source>config.port</source>
        <target state="needs-translation">config.port</target>
      </trans-unit>
      <trans-unit id="60502">
        <source>类型: `number`</source>
        <target state="needs-translation">类型: `number`</target>
      </trans-unit>
      <trans-unit id="60504">
        <source>默认值: `27017`</source>
        <target state="needs-translation">默认值: `27017`</target>
      </trans-unit>
      <trans-unit id="60506">
        <source>要连接的端口号。</source>
        <target state="needs-translation">要连接的端口号。</target>
      </trans-unit>
      <trans-unit id="60508">
        <source>config.username</source>
        <target state="needs-translation">config.username</target>
      </trans-unit>
      <trans-unit id="60510">
        <source>类型: `string`</source>
        <target state="needs-translation">类型: `string`</target>
      </trans-unit>
      <trans-unit id="60512">
        <source>要使用的用户名。</source>
        <target state="translated">要使用的使用者名。</target>
      </trans-unit>
      <trans-unit id="60514">
        <source>config.password</source>
        <target state="needs-translation">config.password</target>
      </trans-unit>
      <trans-unit id="60516">
        <source>类型: `string`</source>
        <target state="needs-translation">类型: `string`</target>
      </trans-unit>
      <trans-unit id="60518">
        <source>要使用的密码。</source>
        <target state="translated">要使用的密碼。</target>
      </trans-unit>
      <trans-unit id="60520">
        <source>config.database</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">config.database</target>
      </trans-unit>
      <trans-unit id="60522">
        <source>类型: `string`</source>
        <target state="needs-translation">类型: `string`</target>
      </trans-unit>
      <trans-unit id="60524">
        <source>默认值: `'koishi'`</source>
        <target state="needs-translation">默认值: `'koishi'`</target>
      </trans-unit>
      <trans-unit id="60526">
        <source>要访问的数据库名称。</source>
        <target state="needs-translation">要访问的数据库名称。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1716" original="/[koishijs.docs] main/zh-CN/plugins/database/mysql.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="60528">
        <source>@koishijs/plugin-database-mysql</source>
        <target state="needs-translation">@koishijs/plugin-database-mysql</target>
      </trans-unit>
      <trans-unit id="60532">
        <source>需要的最低版本是 MySQL 5.7 / 8.0 或 MariaDB 10.5。</source>
        <target state="needs-translation">需要的最低版本是 MySQL 5.7 / 8.0 或 MariaDB 10.5。</target>
      </trans-unit>
      <trans-unit id="60534">
        <source>配置项</source>
        <target state="needs-translation">配置项</target>
      </trans-unit>
      <trans-unit id="60536">
        <source>config.host</source>
        <target state="needs-translation">config.host</target>
      </trans-unit>
      <trans-unit id="60538">
        <source>类型: `string`</source>
        <target state="needs-translation">类型: `string`</target>
      </trans-unit>
      <trans-unit id="60540">
        <source>默认值: `'localhost'`</source>
        <target state="needs-translation">默认值: `'localhost'`</target>
      </trans-unit>
      <trans-unit id="60542">
        <source>要连接的主机名。</source>
        <target state="needs-translation">要连接的主机名。</target>
      </trans-unit>
      <trans-unit id="60544">
        <source>config.port</source>
        <target state="needs-translation">config.port</target>
      </trans-unit>
      <trans-unit id="60546">
        <source>类型: `number`</source>
        <target state="needs-translation">类型: `number`</target>
      </trans-unit>
      <trans-unit id="60548">
        <source>默认值: `3306`</source>
        <target state="needs-translation">默认值: `3306`</target>
      </trans-unit>
      <trans-unit id="60550">
        <source>要连接的端口号。</source>
        <target state="needs-translation">要连接的端口号。</target>
      </trans-unit>
      <trans-unit id="60552">
        <source>config.username</source>
        <target state="needs-translation">config.username</target>
      </trans-unit>
      <trans-unit id="60554">
        <source>类型: `string`</source>
        <target state="needs-translation">类型: `string`</target>
      </trans-unit>
      <trans-unit id="60556">
        <source>默认值: `'root'`</source>
        <target state="needs-translation">默认值: `'root'`</target>
      </trans-unit>
      <trans-unit id="60558">
        <source>要使用的用户名。</source>
        <target state="translated">要使用的使用者名。</target>
      </trans-unit>
      <trans-unit id="60560">
        <source>config.password</source>
        <target state="needs-translation">config.password</target>
      </trans-unit>
      <trans-unit id="60562">
        <source>类型: `string`</source>
        <target state="needs-translation">类型: `string`</target>
      </trans-unit>
      <trans-unit id="60564">
        <source>要使用的密码。</source>
        <target state="translated">要使用的密碼。</target>
      </trans-unit>
      <trans-unit id="60566">
        <source>config.database</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">config.database</target>
      </trans-unit>
      <trans-unit id="60568">
        <source>类型: `string`</source>
        <target state="needs-translation">类型: `string`</target>
      </trans-unit>
      <trans-unit id="60570">
        <source>默认值: `'koishi'`</source>
        <target state="needs-translation">默认值: `'koishi'`</target>
      </trans-unit>
      <trans-unit id="60572">
        <source>要访问的数据库名称。</source>
        <target state="needs-translation">要访问的数据库名称。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1718" original="/[koishijs.docs] main/zh-CN/plugins/database/postgres.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="60574">
        <source>@koishijs/plugin-database-postgres</source>
        <target state="needs-translation">@koishijs/plugin-database-postgres</target>
      </trans-unit>
      <trans-unit id="60576">
        <source>配置项</source>
        <target state="needs-translation">配置项</target>
      </trans-unit>
      <trans-unit id="60578">
        <source>config.host</source>
        <target state="needs-translation">config.host</target>
      </trans-unit>
      <trans-unit id="60580">
        <source>类型: `string`</source>
        <target state="needs-translation">类型: `string`</target>
      </trans-unit>
      <trans-unit id="60582">
        <source>默认值: `'localhost'`</source>
        <target state="needs-translation">默认值: `'localhost'`</target>
      </trans-unit>
      <trans-unit id="60584">
        <source>要连接的主机名。</source>
        <target state="needs-translation">要连接的主机名。</target>
      </trans-unit>
      <trans-unit id="60586">
        <source>config.port</source>
        <target state="needs-translation">config.port</target>
      </trans-unit>
      <trans-unit id="60588">
        <source>类型: `number`</source>
        <target state="needs-translation">类型: `number`</target>
      </trans-unit>
      <trans-unit id="60590">
        <source>默认值: `5432`</source>
        <target state="needs-translation">默认值: `5432`</target>
      </trans-unit>
      <trans-unit id="60592">
        <source>要连接的端口号。</source>
        <target state="needs-translation">要连接的端口号。</target>
      </trans-unit>
      <trans-unit id="60594">
        <source>config.username</source>
        <target state="needs-translation">config.username</target>
      </trans-unit>
      <trans-unit id="60596">
        <source>类型: `string`</source>
        <target state="needs-translation">类型: `string`</target>
      </trans-unit>
      <trans-unit id="60598">
        <source>默认值: `'root'`</source>
        <target state="needs-translation">默认值: `'root'`</target>
      </trans-unit>
      <trans-unit id="60600">
        <source>要使用的用户名。</source>
        <target state="translated">要使用的使用者名。</target>
      </trans-unit>
      <trans-unit id="60602">
        <source>config.password</source>
        <target state="needs-translation">config.password</target>
      </trans-unit>
      <trans-unit id="60604">
        <source>类型: `string`</source>
        <target state="needs-translation">类型: `string`</target>
      </trans-unit>
      <trans-unit id="60606">
        <source>要使用的密码。</source>
        <target state="translated">要使用的密碼。</target>
      </trans-unit>
      <trans-unit id="60608">
        <source>config.database</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">config.database</target>
      </trans-unit>
      <trans-unit id="60610">
        <source>类型: `string`</source>
        <target state="needs-translation">类型: `string`</target>
      </trans-unit>
      <trans-unit id="60612">
        <source>默认值: `'koishi'`</source>
        <target state="needs-translation">默认值: `'koishi'`</target>
      </trans-unit>
      <trans-unit id="60614">
        <source>要访问的数据库名称。</source>
        <target state="needs-translation">要访问的数据库名称。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1720" original="/[koishijs.docs] main/zh-CN/plugins/database/sqlite.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="60616">
        <source>@koishijs/plugin-database-sqlite</source>
        <target state="needs-translation">@koishijs/plugin-database-sqlite</target>
      </trans-unit>
      <trans-unit id="60618">
        <source>配置项</source>
        <target state="needs-translation">配置项</target>
      </trans-unit>
      <trans-unit id="60620">
        <source>config.path</source>
        <target state="needs-translation">config.path</target>
      </trans-unit>
      <trans-unit id="60622">
        <source>类型: `string`</source>
        <target state="needs-translation">类型: `string`</target>
      </trans-unit>
      <trans-unit id="60624">
        <source>默认值: `'data/koishi.db'`</source>
        <target state="needs-translation">默认值: `'data/koishi.db'`</target>
      </trans-unit>
      <trans-unit id="60626">
        <source>数据库文件的路径。</source>
        <target state="needs-translation">数据库文件的路径。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1722" original="/[koishijs.docs] main/zh-CN/plugins/develop/hmr.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="60628">
        <source>@koishijs/plugin-hmr</source>
        <target state="needs-translation">@koishijs/plugin-hmr</target>
      </trans-unit>
      <trans-unit id="60630">
        <source>使用方法请参见 [开发 &gt; 开发起步 &gt; 启动脚本](../../guide/develop/script.md#模块热替换) 章节。</source>
        <target state="needs-translation">使用方法请参见 [开发 &gt; 开发起步 &gt; 启动脚本](../../guide/develop/script.md#模块热替换) 章节。</target>
      </trans-unit>
      <trans-unit id="60632">
        <source>配置项</source>
        <target state="needs-translation">配置项</target>
      </trans-unit>
      <trans-unit id="60634">
        <source>base</source>
        <target state="needs-translation">base</target>
      </trans-unit>
      <trans-unit id="60636">
        <source>类型：`string`</source>
        <target state="needs-translation">类型：`string`</target>
      </trans-unit>
      <trans-unit id="60638">
        <source>默认值：`process.cwd()`</source>
        <target state="needs-translation">默认值：`process.cwd()`</target>
      </trans-unit>
      <trans-unit id="60640">
        <source>用于监听和显示的基础目录。</source>
        <target state="needs-translation">用于监听和显示的基础目录。</target>
      </trans-unit>
      <trans-unit id="60642">
        <source>检测到的文件路径会被转换为相对 `base` 的路径输出。</source>
        <target state="needs-translation">检测到的文件路径会被转换为相对 `base` 的路径输出。</target>
      </trans-unit>
      <trans-unit id="60644">
        <source>root</source>
        <target state="needs-translation">root</target>
      </trans-unit>
      <trans-unit id="60646">
        <source>类型：`string | string[]`</source>
        <target state="needs-translation">类型：`string | string[]`</target>
      </trans-unit>
      <trans-unit id="60648">
        <source>默认值：`['.']`</source>
        <target state="needs-translation">默认值：`['.']`</target>
      </trans-unit>
      <trans-unit id="60650">
        <source>用于监听的文件或目录列表。</source>
        <target state="needs-translation">用于监听的文件或目录列表。</target>
      </trans-unit>
      <trans-unit id="60652">
        <source>支持填写绝对路径或是相对 `base` 的路径。</source>
        <target state="needs-translation">支持填写绝对路径或是相对 `base` 的路径。</target>
      </trans-unit>
      <trans-unit id="60654">
        <source>ignore</source>
        <target state="needs-translation">ignore</target>
      </trans-unit>
      <trans-unit id="60656">
        <source>类型：`string | string[]`</source>
        <target state="needs-translation">类型：`string | string[]`</target>
      </trans-unit>
      <trans-unit id="60658">
        <source>默认值：`['**/node_modules/**', '**/.git/**', '**/logs/**']`</source>
        <target state="needs-translation">默认值：`['**/node_modules/**', '**/.git/**', '**/logs/**']`</target>
      </trans-unit>
      <trans-unit id="60660">
        <source>要忽略的文件或目录。</source>
        <target state="needs-translation">要忽略的文件或目录。</target>
      </trans-unit>
      <trans-unit id="60662">
        <source>支持 [Glob Patterns](https://github.com/micromatch/micromatch) 语法。</source>
        <target state="needs-translation">支持 [Glob Patterns](https://github.com/micromatch/micromatch) 语法。</target>
      </trans-unit>
      <trans-unit id="60664">
        <source>debounce</source>
        <target state="needs-translation">debounce</target>
      </trans-unit>
      <trans-unit id="60666">
        <source>类型：`number`</source>
        <target state="needs-translation">类型：`number`</target>
      </trans-unit>
      <trans-unit id="60668">
        <source>默认值：`100`</source>
        <target state="needs-translation">默认值：`100`</target>
      </trans-unit>
      <trans-unit id="60670">
        <source>延迟触发更新的等待时间。</source>
        <target state="translated">延遲觸發更新的等待時間。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1724" original="/[koishijs.docs] main/zh-CN/plugins/develop/mock.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="60672">
        <source>@koishijs/plugin-mock</source>
        <target state="needs-translation">@koishijs/plugin-mock</target>
      </trans-unit>
      <trans-unit id="60674">
        <source>使用方法请参见 [开发 &gt; 单元测试](../../cookbook/practice/testing.md) 章节。</source>
        <target state="needs-translation">使用方法请参见 [开发 &gt; 单元测试](../../cookbook/practice/testing.md) 章节。</target>
      </trans-unit>
      <trans-unit id="60676">
        <source>@koishijs/plugin-mock 包含了被 Koishi 使用的测试工具。</source>
        <target state="needs-translation">@koishijs/plugin-mock 包含了被 Koishi 使用的测试工具。</target>
      </trans-unit>
      <trans-unit id="60678">
        <source>它提供了一个名为 `mock` 的服务，可用于模拟事件上报、网络请求等等。</source>
        <target state="needs-translation">它提供了一个名为 `mock` 的服务，可用于模拟事件上报、网络请求等等。</target>
      </trans-unit>
      <trans-unit id="60680">
        <source>类：Mock</source>
        <target state="needs-translation">类：Mock</target>
      </trans-unit>
      <trans-unit id="60682">
        <source>mock.webhook</source>
        <target state="needs-translation">mock.webhook</target>
      </trans-unit>
      <trans-unit id="60684">
        <source>类型: [`Webhook`](#类-webhook)</source>
        <target state="needs-translation">类型: [`Webhook`](#类-webhook)</target>
      </trans-unit>
      <trans-unit id="60686">
        <source>用于模拟网络请求。</source>
        <target state="needs-translation">用于模拟网络请求。</target>
      </trans-unit>
      <trans-unit id="60688">
        <source>mock.client(userId, channelId?)</source>
        <target state="needs-translation">mock.client(userId, channelId?)</target>
      </trans-unit>
      <trans-unit id="60690">
        <source>**userId:** `string` 用户 ID</source>
        <target state="needs-translation">**userId:** `string` 用户 ID</target>
      </trans-unit>
      <trans-unit id="60692">
        <source>**channelId:** `string` 频道 ID</source>
        <target state="needs-translation">**channelId:** `string` 频道 ID</target>
      </trans-unit>
      <trans-unit id="60694">
        <source>返回值: [`Client`](#类-client)</source>
        <target state="needs-translation">返回值: [`Client`](#类-client)</target>
      </trans-unit>
      <trans-unit id="60696">
        <source>创建一个客户端。</source>
        <target state="needs-translation">创建一个客户端。</target>
      </trans-unit>
      <trans-unit id="60698">
        <source>mock.receive(event)</source>
        <target state="needs-translation">mock.receive(event)</target>
      </trans-unit>
      <trans-unit id="60700">
        <source>**event:** [`Event`](../../api/core/session.md#session-event) 事件体</source>
        <target state="needs-translation">**event:** [`Event`](../../api/core/session.md#session-event) 事件体</target>
      </trans-unit>
      <trans-unit id="60702">
        <source>返回值: `string`</source>
        <target state="needs-translation">返回值: `string`</target>
      </trans-unit>
      <trans-unit id="60704">
        <source>触发会话事件。</source>
        <target state="needs-translation">触发会话事件。</target>
      </trans-unit>
      <trans-unit id="60706">
        <source>mock.initUser(id, authority?, data?)</source>
        <target state="needs-translation">mock.initUser(id, authority?, data?)</target>
      </trans-unit>
      <trans-unit id="60708">
        <source>**id:** `string` 用户 ID</source>
        <target state="needs-translation">**id:** `string` 用户 ID</target>
      </trans-unit>
      <trans-unit id="60710">
        <source>**authority:** `number` 权限等级</source>
        <target state="needs-translation">**authority:** `number` 权限等级</target>
      </trans-unit>
      <trans-unit id="60712">
        <source>**data:** `Partial&lt;User&gt;` 其他用户数据</source>
        <target state="needs-translation">**data:** `Partial&lt;User&gt;` 其他用户数据</target>
      </trans-unit>
      <trans-unit id="60714">
        <source>在数据库中初始化一个用户。</source>
        <target state="needs-translation">在数据库中初始化一个用户。</target>
      </trans-unit>
      <trans-unit id="60716">
        <source>等价于 `database.create('user', { mock: id, authority, ...data })`。</source>
        <target state="needs-translation">等价于 `database.create('user', { mock: id, authority, ...data })`。</target>
      </trans-unit>
      <trans-unit id="60718">
        <source>mock.initChannel(id, assignee?, data?)</source>
        <target state="needs-translation">mock.initChannel(id, assignee?, data?)</target>
      </trans-unit>
      <trans-unit id="60720">
        <source>**id:** `string` 频道 ID</source>
        <target state="needs-translation">**id:** `string` 频道 ID</target>
      </trans-unit>
      <trans-unit id="60722">
        <source>**assignee:** `string` 频道代理人</source>
        <target state="needs-translation">**assignee:** `string` 频道代理人</target>
      </trans-unit>
      <trans-unit id="60724">
        <source>**data:** `Partial&lt;Channel&gt;` 其他频道数据</source>
        <target state="needs-translation">**data:** `Partial&lt;Channel&gt;` 其他频道数据</target>
      </trans-unit>
      <trans-unit id="60726">
        <source>在数据库中初始化一个频道。</source>
        <target state="needs-translation">在数据库中初始化一个频道。</target>
      </trans-unit>
      <trans-unit id="60728">
        <source>等价于 `database.create('channel', { platform: 'mock', id, assignee, ...data })`。</source>
        <target state="needs-translation">等价于 `database.create('channel', { platform: 'mock', id, assignee, ...data })`。</target>
      </trans-unit>
      <trans-unit id="60730">
        <source>类：Client</source>
        <target state="needs-translation">类：Client</target>
      </trans-unit>
      <trans-unit id="60732">
        <source>**客户端 (Client)** 是对发往同一上下文的多次消息的一个抽象。</source>
        <target state="needs-translation">**客户端 (Client)** 是对发往同一上下文的多次消息的一个抽象。</target>
      </trans-unit>
      <trans-unit id="60734">
        <source>它使用 `mock.client()` 方法创建，并借助 `mock.receive()` 实现其功能。</source>
        <target state="needs-translation">它使用 `mock.client()` 方法创建，并借助 `mock.receive()` 实现其功能。</target>
      </trans-unit>
      <trans-unit id="60736">
        <source>使用了异步的 message 事件监听器</source>
        <target state="needs-translation">使用了异步的 message 事件监听器</target>
      </trans-unit>
      <trans-unit id="60738">
        <source>中间件和指令中可能存在未阻塞的异步操作</source>
        <target state="needs-translation">中间件和指令中可能存在未阻塞的异步操作</target>
      </trans-unit>
      <trans-unit id="60740">
        <source>直接调用 Bot API 而非 session.send</source>
        <target state="needs-translation">直接调用 Bot API 而非 session.send</target>
      </trans-unit>
      <trans-unit id="60742">
        <source>这个类的方法可能会返回预料之外的结果。</source>
        <target state="needs-translation">这个类的方法可能会返回预料之外的结果。</target>
      </trans-unit>
      <trans-unit id="60744">
        <source>当然，如果要测试这些特殊情况，我们也有其他的解决方案。</source>
        <target state="needs-translation">当然，如果要测试这些特殊情况，我们也有其他的解决方案。</target>
      </trans-unit>
      <trans-unit id="60746">
        <source>:::</source>
        <target state="needs-translation">:::</target>
      </trans-unit>
      <trans-unit id="60748">
        <source>client.receive(content)</source>
        <target state="needs-translation">client.receive(content)</target>
      </trans-unit>
      <trans-unit id="60750">
        <source>**content:** `string` 要发送的信息</source>
        <target state="needs-translation">**content:** `string` 要发送的信息</target>
      </trans-unit>
      <trans-unit id="60752">
        <source>返回值: `Promise&lt;string[]&gt;` 收到的回复列表</source>
        <target state="needs-translation">返回值: `Promise&lt;string[]&gt;` 收到的回复列表</target>
      </trans-unit>
      <trans-unit id="60754">
        <source>模拟发送一条消息。</source>
        <target state="needs-translation">模拟发送一条消息。</target>
      </trans-unit>
      <trans-unit id="60756">
        <source>client.shouldReply(content, reply?)</source>
        <target state="needs-translation">client.shouldReply(content, reply?)</target>
      </trans-unit>
      <trans-unit id="60758">
        <source>**content:** `string` 要发送给机器人的信息</source>
        <target state="needs-translation">**content:** `string` 要发送给机器人的信息</target>
      </trans-unit>
      <trans-unit id="60760">
        <source>**reply:** `string | RegExp | (string | RegExp)[]` 应有的回复，如果略去则不会进行比较</source>
        <target state="needs-translation">**reply:** `string | RegExp | (string | RegExp)[]` 应有的回复，如果略去则不会进行比较</target>
      </trans-unit>
      <trans-unit id="60762">
        <source>返回值: `Promise&lt;void&gt;`</source>
        <target state="needs-translation">返回值: `Promise&lt;void&gt;`</target>
      </trans-unit>
      <trans-unit id="60764">
        <source>断言某条信息应存在某些回复。</source>
        <target state="needs-translation">断言某条信息应存在某些回复。</target>
      </trans-unit>
      <trans-unit id="60766">
        <source>client.shouldNotReply(content)</source>
        <target state="needs-translation">client.shouldNotReply(content)</target>
      </trans-unit>
      <trans-unit id="60768">
        <source>**content:** `string` 要发送给机器人的信息</source>
        <target state="needs-translation">**content:** `string` 要发送给机器人的信息</target>
      </trans-unit>
      <trans-unit id="60770">
        <source>返回值: `Promise&lt;void&gt;`</source>
        <target state="needs-translation">返回值: `Promise&lt;void&gt;`</target>
      </trans-unit>
      <trans-unit id="60772">
        <source>断言某条信息不应存在任何回复。</source>
        <target state="needs-translation">断言某条信息不应存在任何回复。</target>
      </trans-unit>
      <trans-unit id="60774">
        <source>类：Webhook</source>
        <target state="needs-translation">类：Webhook</target>
      </trans-unit>
      <trans-unit id="60776">
        <source>**网络钩子 (Webhook)** 可用于模拟到 Koishi 服务器的网络请求。</source>
        <target state="needs-translation">**网络钩子 (Webhook)** 可用于模拟到 Koishi 服务器的网络请求。</target>
      </trans-unit>
      <trans-unit id="60778">
        <source>webhook.get(path, headers?)</source>
        <target state="needs-translation">webhook.get(path, headers?)</target>
      </trans-unit>
      <trans-unit id="60780">
        <source>**path:** `string` 请求路径</source>
        <target state="needs-translation">**path:** `string` 请求路径</target>
      </trans-unit>
      <trans-unit id="60782">
        <source>**headers:** `object` 请求头</source>
        <target state="needs-translation">**headers:** `object` 请求头</target>
      </trans-unit>
      <trans-unit id="60784">
        <source>模拟 GET 请求。</source>
        <target state="needs-translation">模拟 GET 请求。</target>
      </trans-unit>
      <trans-unit id="60786">
        <source>webhook.post(path, body, headers?)</source>
        <target state="needs-translation">webhook.post(path, body, headers?)</target>
      </trans-unit>
      <trans-unit id="60788">
        <source>**path:** `string` 请求路径</source>
        <target state="needs-translation">**path:** `string` 请求路径</target>
      </trans-unit>
      <trans-unit id="60790">
        <source>**body:** `string` 请求正文</source>
        <target state="needs-translation">**body:** `string` 请求正文</target>
      </trans-unit>
      <trans-unit id="60792">
        <source>**headers:** `object` 请求头</source>
        <target state="needs-translation">**headers:** `object` 请求头</target>
      </trans-unit>
      <trans-unit id="60794">
        <source>模拟 POST 请求。</source>
        <target state="needs-translation">模拟 POST 请求。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1726" original="/[koishijs.docs] main/zh-CN/plugins/develop/server-proxy.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="60796">
        <source>@koishijs/plugin-server-proxy</source>
        <target state="needs-translation">@koishijs/plugin-server-proxy</target>
      </trans-unit>
      <trans-unit id="60798">
        <source>@koishijs/plugin-server-proxy 实现了一个代理服务器。</source>
        <target state="needs-translation">@koishijs/plugin-server-proxy 实现了一个代理服务器。</target>
      </trans-unit>
      <trans-unit id="60800">
        <source>它可用于解决控制台跨域问题。</source>
        <target state="needs-translation">它可用于解决控制台跨域问题。</target>
      </trans-unit>
      <trans-unit id="60802">
        <source>配置项</source>
        <target state="needs-translation">配置项</target>
      </trans-unit>
      <trans-unit id="60804">
        <source>config.path</source>
        <target state="needs-translation">config.path</target>
      </trans-unit>
      <trans-unit id="60806">
        <source>类型: `string`</source>
        <target state="needs-translation">类型: `string`</target>
      </trans-unit>
      <trans-unit id="60808">
        <source>默认值: `'/proxy'`</source>
        <target state="needs-translation">默认值: `'/proxy'`</target>
      </trans-unit>
      <trans-unit id="60810">
        <source>服务器监听的路径。</source>
        <target state="needs-translation">服务器监听的路径。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1728" original="/[koishijs.docs] main/zh-CN/plugins/develop/server-satori.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="60812">
        <source>@koishijs/plugin-server-satori</source>
        <target state="needs-translation">@koishijs/plugin-server-satori</target>
      </trans-unit>
      <trans-unit id="60814">
        <source>@koishijs/plugin-server-satori 实现了一个 [Satori 协议](https://satori.chat/) 的服务器。</source>
        <target state="needs-translation">@koishijs/plugin-server-satori 实现了一个 [Satori 协议](https://satori.chat/) 的服务器。</target>
      </trans-unit>
      <trans-unit id="60816">
        <source>这个插件将允许你：</source>
        <target state="needs-translation">这个插件将允许你：</target>
      </trans-unit>
      <trans-unit id="60818">
        <source>通过 HTTP / WebSocket 访问当前 Koishi 实例中的机器人</source>
        <target state="needs-translation">通过 HTTP / WebSocket 访问当前 Koishi 实例中的机器人</target>
      </trans-unit>
      <trans-unit id="60820">
        <source>配合 [Satori 适配器](../adapter/satori.md)，在另一个 Koishi 实例中完全控制当前实例中的机器人</source>
        <target state="needs-translation">配合 [Satori 适配器](../adapter/satori.md)，在另一个 Koishi 实例中完全控制当前实例中的机器人</target>
      </trans-unit>
      <trans-unit id="60822">
        <source>配置项</source>
        <target state="needs-translation">配置项</target>
      </trans-unit>
      <trans-unit id="60824">
        <source>config.path</source>
        <target state="needs-translation">config.path</target>
      </trans-unit>
      <trans-unit id="60826">
        <source>类型: `string`</source>
        <target state="needs-translation">类型: `string`</target>
      </trans-unit>
      <trans-unit id="60828">
        <source>默认值: `''`</source>
        <target state="needs-translation">默认值: `''`</target>
      </trans-unit>
      <trans-unit id="60830">
        <source>服务器监听的路径。</source>
        <target state="needs-translation">服务器监听的路径。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1730" original="/[koishijs.docs] main/zh-CN/plugins/develop/server-temp.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="60832">
        <source>@koishijs/plugin-server-temp</source>
        <target state="needs-translation">@koishijs/plugin-server-temp</target>
      </trans-unit>
      <trans-unit id="63710">
        <source>使用此插件需要你将 Koishi [部署到公网](../../manual/recipe/server.md) (通常你还需要准备一个公网域名)。</source>
        <target state="needs-translation">使用此插件需要你将 Koishi [部署到公网](../../manual/recipe/server.md) (通常你还需要准备一个公网域名)。</target>
      </trans-unit>
      <trans-unit id="60834">
        <source>@koishijs/plugin-server-temp 实现了一个临时文件服务。</source>
        <target state="needs-translation">@koishijs/plugin-server-temp 实现了一个临时文件服务。</target>
      </trans-unit>
      <trans-unit id="60836">
        <source>配置项</source>
        <target state="needs-translation">配置项</target>
      </trans-unit>
      <trans-unit id="60838">
        <source>config.path</source>
        <target state="needs-translation">config.path</target>
      </trans-unit>
      <trans-unit id="60840">
        <source>类型: `string`</source>
        <target state="needs-translation">类型: `string`</target>
      </trans-unit>
      <trans-unit id="60842">
        <source>默认值: `'/temp'`</source>
        <target state="needs-translation">默认值: `'/temp'`</target>
      </trans-unit>
      <trans-unit id="60844">
        <source>服务器监听的路径。</source>
        <target state="needs-translation">服务器监听的路径。</target>
      </trans-unit>
      <trans-unit id="63712">
        <source>config.selfUrl</source>
        <target state="needs-translation">config.selfUrl</target>
      </trans-unit>
      <trans-unit id="63714">
        <source>类型: `string`</source>
        <target state="needs-translation">类型: `string`</target>
      </trans-unit>
      <trans-unit id="63716">
        <source>默认值: [`ctx.server.config.selfUrl`](./server.md#config-selfurl)</source>
        <target state="needs-translation">默认值: [`ctx.server.config.selfUrl`](./server.md#config-selfurl)</target>
      </trans-unit>
      <trans-unit id="63718">
        <source>服务暴露在公网的地址。</source>
        <target state="needs-translation">服务暴露在公网的地址。</target>
      </trans-unit>
      <trans-unit id="60846">
        <source>config.maxAge</source>
        <target state="needs-translation">config.maxAge</target>
      </trans-unit>
      <trans-unit id="60848">
        <source>类型: `number`</source>
        <target state="needs-translation">类型: `number`</target>
      </trans-unit>
      <trans-unit id="60850">
        <source>默认值: `Time.minute * 5`</source>
        <target state="needs-translation">默认值: `Time.minute * 5`</target>
      </trans-unit>
      <trans-unit id="60852">
        <source>文件的最大有效时间。</source>
        <target state="needs-translation">文件的最大有效时间。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1732" original="/[koishijs.docs] main/zh-CN/plugins/index.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="60854">
        <source>官方插件</source>
        <target state="needs-translation">官方插件</target>
      </trans-unit>
      <trans-unit id="60856">
        <source>Koishi 官方提供了许多插件。</source>
        <target state="needs-translation">Koishi 官方提供了许多插件。</target>
      </trans-unit>
      <trans-unit id="60858">
        <source>为了更好地模块化开发，它们被分散在了多个仓库中。</source>
        <target state="needs-translation">为了更好地模块化开发，它们被分散在了多个仓库中。</target>
      </trans-unit>
      <trans-unit id="60860">
        <source>适配器支持</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">配接器支援</target>
      </trans-unit>
      <trans-unit id="60862">
        <source>[@koishijs/plugin-adapter-dingtalk](./adapter/dingtalk.md)</source>
        <target state="needs-translation">[@koishijs/plugin-adapter-dingtalk](./adapter/dingtalk.md)</target>
      </trans-unit>
      <trans-unit id="60864">
        <source>[@koishijs/plugin-adapter-discord](./adapter/discord.md)</source>
        <target state="needs-translation">[@koishijs/plugin-adapter-discord](./adapter/discord.md)</target>
      </trans-unit>
      <trans-unit id="60866">
        <source>[@koishijs/plugin-adapter-kook](./adapter/kook.md)</source>
        <target state="needs-translation">[@koishijs/plugin-adapter-kook](./adapter/kook.md)</target>
      </trans-unit>
      <trans-unit id="60868">
        <source>[@koishijs/plugin-adapter-lark](./adapter/lark.md)</source>
        <target state="needs-translation">[@koishijs/plugin-adapter-lark](./adapter/lark.md)</target>
      </trans-unit>
      <trans-unit id="60870">
        <source>[@koishijs/plugin-adapter-line](./adapter/line.md)</source>
        <target state="needs-translation">[@koishijs/plugin-adapter-line](./adapter/line.md)</target>
      </trans-unit>
      <trans-unit id="60872">
        <source>[@koishijs/plugin-adapter-mail](./adapter/mail.md)</source>
        <target state="needs-translation">[@koishijs/plugin-adapter-mail](./adapter/mail.md)</target>
      </trans-unit>
      <trans-unit id="60874">
        <source>[@koishijs/plugin-adapter-matrix](./adapter/matrix.md)</source>
        <target state="needs-translation">[@koishijs/plugin-adapter-matrix](./adapter/matrix.md)</target>
      </trans-unit>
      <trans-unit id="60876">
        <source>[@koishijs/plugin-adapter-qq](./adapter/qq.md)</source>
        <target state="needs-translation">[@koishijs/plugin-adapter-qq](./adapter/qq.md)</target>
      </trans-unit>
      <trans-unit id="60878">
        <source>[@koishijs/plugin-adapter-satori](./adapter/satori.md)</source>
        <target state="needs-translation">[@koishijs/plugin-adapter-satori](./adapter/satori.md)</target>
      </trans-unit>
      <trans-unit id="60880">
        <source>[@koishijs/plugin-adapter-slack](./adapter/slack.md)</source>
        <target state="needs-translation">[@koishijs/plugin-adapter-slack](./adapter/slack.md)</target>
      </trans-unit>
      <trans-unit id="60882">
        <source>[@koishijs/plugin-adapter-telegram](./adapter/telegram.md)</source>
        <target state="needs-translation">[@koishijs/plugin-adapter-telegram](./adapter/telegram.md)</target>
      </trans-unit>
      <trans-unit id="60884">
        <source>[@koishijs/plugin-adapter-wechat-official](./adapter/wechat-official.md)</source>
        <target state="needs-translation">[@koishijs/plugin-adapter-wechat-official](./adapter/wechat-official.md)</target>
      </trans-unit>
      <trans-unit id="60886">
        <source>[@koishijs/plugin-adapter-wecom](./adapter/wecom.md)</source>
        <target state="needs-translation">[@koishijs/plugin-adapter-wecom](./adapter/wecom.md)</target>
      </trans-unit>
      <trans-unit id="60888">
        <source>[@koishijs/plugin-adapter-whatsapp](./adapter/whatsapp.md)</source>
        <target state="needs-translation">[@koishijs/plugin-adapter-whatsapp](./adapter/whatsapp.md)</target>
      </trans-unit>
      <trans-unit id="63740">
        <source>[@koishijs/plugin-adapter-zulip](./adapter/zulip.md)</source>
        <target state="needs-translation">[@koishijs/plugin-adapter-zulip](./adapter/zulip.md)</target>
      </trans-unit>
      <trans-unit id="60890">
        <source>数据库支持</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">資料庫支援</target>
      </trans-unit>
      <trans-unit id="60892">
        <source>[@koishijs/plugin-database-memory](./database/memory.md)</source>
        <target state="needs-translation">[@koishijs/plugin-database-memory](./database/memory.md)</target>
      </trans-unit>
      <trans-unit id="60894">
        <source>[@koishijs/plugin-database-mongo](./database/mongo.md)</source>
        <target state="needs-translation">[@koishijs/plugin-database-mongo](./database/mongo.md)</target>
      </trans-unit>
      <trans-unit id="60896">
        <source>[@koishijs/plugin-database-mysql](./database/mysql.md)</source>
        <target state="needs-translation">[@koishijs/plugin-database-mysql](./database/mysql.md)</target>
      </trans-unit>
      <trans-unit id="60898">
        <source>[@koishijs/plugin-database-sqlite](./database/sqlite.md)</source>
        <target state="needs-translation">[@koishijs/plugin-database-sqlite](./database/sqlite.md)</target>
      </trans-unit>
      <trans-unit id="60900">
        <source>常用功能</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">常用功能</target>
      </trans-unit>
      <trans-unit id="60902">
        <source>[@koishijs/plugin-admin](./common/admin.md)：数据管理</source>
        <target state="needs-translation">[@koishijs/plugin-admin](./common/admin.md)：数据管理</target>
      </trans-unit>
      <trans-unit id="60904">
        <source>[@koishijs/plugin-bind](./common/bind.md)：账号绑定</source>
        <target state="needs-translation">[@koishijs/plugin-bind](./common/bind.md)：账号绑定</target>
      </trans-unit>
      <trans-unit id="60906">
        <source>[@koishijs/plugin-broadcast](./common/broadcast.md)：发送广播</source>
        <target state="needs-translation">[@koishijs/plugin-broadcast](./common/broadcast.md)：发送广播</target>
      </trans-unit>
      <trans-unit id="60908">
        <source>[@koishijs/plugin-callme](./common/callme.md)：设置昵称</source>
        <target state="needs-translation">[@koishijs/plugin-callme](./common/callme.md)：设置昵称</target>
      </trans-unit>
      <trans-unit id="60910">
        <source>[@koishijs/plugin-echo](./common/echo.md)：发送消息</source>
        <target state="needs-translation">[@koishijs/plugin-echo](./common/echo.md)：发送消息</target>
      </trans-unit>
      <trans-unit id="60912">
        <source>[@koishijs/plugin-help](./common/help.md)：查看帮助</source>
        <target state="needs-translation">[@koishijs/plugin-help](./common/help.md)：查看帮助</target>
      </trans-unit>
      <trans-unit id="60914">
        <source>[@koishijs/plugin-inspect](./common/inspect.md)：会话信息</source>
        <target state="needs-translation">[@koishijs/plugin-inspect](./common/inspect.md)：会话信息</target>
      </trans-unit>
      <trans-unit id="60916">
        <source>控制台功能</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">控制檯功能</target>
      </trans-unit>
      <trans-unit id="60918">
        <source>[@koishijs/plugin-analytics](./console/analytics.md)：数据统计</source>
        <target state="needs-translation">[@koishijs/plugin-analytics](./console/analytics.md)：数据统计</target>
      </trans-unit>
      <trans-unit id="60920">
        <source>[@koishijs/plugin-auth](./console/auth.md)：用户登录</source>
        <target state="needs-translation">[@koishijs/plugin-auth](./console/auth.md)：用户登录</target>
      </trans-unit>
      <trans-unit id="60922">
        <source>[@koishijs/plugin-commands](./console/commands.md)：指令管理</source>
        <target state="needs-translation">[@koishijs/plugin-commands](./console/commands.md)：指令管理</target>
      </trans-unit>
      <trans-unit id="60924">
        <source>[@koishijs/plugin-config](./console/config.md)：插件配置</source>
        <target state="needs-translation">[@koishijs/plugin-config](./console/config.md)：插件配置</target>
      </trans-unit>
      <trans-unit id="60926">
        <source>[@koishijs/plugin-console](./console/index.md)：控制台</source>
        <target state="needs-translation">[@koishijs/plugin-console](./console/index.md)：控制台</target>
      </trans-unit>
      <trans-unit id="60928">
        <source>[@koishijs/plugin-explorer](./console/explorer.md)：资源管理器</source>
        <target state="needs-translation">[@koishijs/plugin-explorer](./console/explorer.md)：资源管理器</target>
      </trans-unit>
      <trans-unit id="60930">
        <source>[@koishijs/plugin-insight](./console/insight.md)：插件依赖图</source>
        <target state="needs-translation">[@koishijs/plugin-insight](./console/insight.md)：插件依赖图</target>
      </trans-unit>
      <trans-unit id="60932">
        <source>[@koishijs/plugin-locales](./console/locales.md)：本地翻译</source>
        <target state="needs-translation">[@koishijs/plugin-locales](./console/locales.md)：本地翻译</target>
      </trans-unit>
      <trans-unit id="60934">
        <source>[@koishijs/plugin-logger](./console/logger.md)：日志管理</source>
        <target state="needs-translation">[@koishijs/plugin-logger](./console/logger.md)：日志管理</target>
      </trans-unit>
      <trans-unit id="60936">
        <source>[@koishijs/plugin-market](./console/market.md)：插件市场</source>
        <target state="needs-translation">[@koishijs/plugin-market](./console/market.md)：插件市场</target>
      </trans-unit>
      <trans-unit id="60938">
        <source>[@koishijs/plugin-sandbox](./console/sandbox.md)：沙盒调试</source>
        <target state="needs-translation">[@koishijs/plugin-sandbox](./console/sandbox.md)：沙盒调试</target>
      </trans-unit>
      <trans-unit id="60940">
        <source>[@koishijs/plugin-status](./console/status.md)：运行状态</source>
        <target state="needs-translation">[@koishijs/plugin-status](./console/status.md)：运行状态</target>
      </trans-unit>
      <trans-unit id="60942">
        <source>开发工具</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">開發工具</target>
      </trans-unit>
      <trans-unit id="60944">
        <source>[@koishijs/plugin-hmr](./develop/hmr.md)：模块热替换</source>
        <target state="needs-translation">[@koishijs/plugin-hmr](./develop/hmr.md)：模块热替换</target>
      </trans-unit>
      <trans-unit id="60946">
        <source>[@koishijs/plugin-mock](./develop/mock.md)：测试工具</source>
        <target state="needs-translation">[@koishijs/plugin-mock](./develop/mock.md)：测试工具</target>
      </trans-unit>
      <trans-unit id="64322">
        <source>[@koishijs/plugin-notifier](./develop/notifier.md)：通知服务</source>
        <target state="needs-translation">[@koishijs/plugin-notifier](./develop/notifier.md)：通知服务</target>
      </trans-unit>
      <trans-unit id="64352">
        <source>[@koishijs/plugin-server](./develop/server.md)：服务器</source>
        <target state="needs-translation">[@koishijs/plugin-server](./develop/server.md)：服务器</target>
      </trans-unit>
      <trans-unit id="60950">
        <source>[@koishijs/plugin-server-satori](./develop/server-satori.md)：API 服务器</source>
        <target state="needs-translation">[@koishijs/plugin-server-satori](./develop/server-satori.md)：API 服务器</target>
      </trans-unit>
      <trans-unit id="60952">
        <source>[@koishijs/plugin-server-temp](./develop/server-temp.md)：临时服务器</source>
        <target state="needs-translation">[@koishijs/plugin-server-temp](./develop/server-temp.md)：临时服务器</target>
      </trans-unit>
    </body>
  </file>
  <file id="1734" original="/[koishijs.docs] main/zh-CN/releases/index.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="60954">
        <source>各版本介绍</source>
        <target state="needs-translation">各版本介绍</target>
      </trans-unit>
    </body>
  </file>
  <file id="1736" original="/[koishijs.docs] main/zh-CN/releases/v4.1.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="60956">
        <source>v4.1 版本介绍</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">v4.1 版本介紹</target>
      </trans-unit>
      <trans-unit id="60958">
        <source>[Roadmap](https://github.com/koishijs/koishi/issues/472)</source>
        <target state="needs-translation">[Roadmap](https://github.com/koishijs/koishi/issues/472)</target>
      </trans-unit>
      <trans-unit id="60960" translate="no">
        <source>[v4.0.1](https://github.com/koishijs/koishi/releases/tag/4.0.1)</source>
        <target>[v4.0.1](https://github.com/koishijs/koishi/releases/tag/4.0.1)</target>
      </trans-unit>
      <trans-unit id="60962" translate="no">
        <source>[v4.1.0](https://github.com/koishijs/koishi/releases/tag/4.1.0)</source>
        <target>[v4.1.0](https://github.com/koishijs/koishi/releases/tag/4.1.0)</target>
      </trans-unit>
      <trans-unit id="60964">
        <source>插件与热重载优化</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">插件與熱重載優化</target>
      </trans-unit>
      <trans-unit id="60966">
        <source>在这个版本中我们优化了插件的加载方式。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">在這個版本中我們優化了插件的加載方式。</target>
      </trans-unit>
      <trans-unit id="60968">
        <source>一方面我们缓解了 service 监听器数量很容易超过限制导致内存泄漏警告的问题，另一方面热重载导致的内存泄漏和加载错误的问题也得到了修复。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">一方面我們緩解了 service 監聽器數量很容易超過限製導致內存泄漏警告的問題，另一方面熱重載導致的內存泄漏和加載錯誤的問題也得到了修復。</target>
      </trans-unit>
      <trans-unit id="60970">
        <source>除此以外，我们还要隆重介绍 Koishi v4 的热重载功能。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">除此以外，我們還要隆重介紹 Koishi v4 的熱重載功能。</target>
      </trans-unit>
      <trans-unit id="60972">
        <source>它将拥有许多全新的特性：</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">它將擁有許多全新的特性：</target>
      </trans-unit>
      <trans-unit id="60974">
        <source>细粒度的模块依赖分析</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">細粒度的模塊依賴分析</target>
      </trans-unit>
      <trans-unit id="60976">
        <source>过去的热重载功能会将任何文件变动都扩展到根插件 (即配置文件中声明的插件)，并重载扩散路径上的每一个文件。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">過去的熱重載功能會將任何文件變動都擴展到根插件 (即配置文件中聲明的插件)，並重載擴散路徑上的每一個文件。</target>
      </trans-unit>
      <trans-unit id="60978">
        <source>而新的依赖分析工具能够将文件变动引发的副作用具体计算到每一个模块，因此部分变动在到达某个子插件时就会停止扩散，从而在大型插件中获得更好的开发体验。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">而新的依賴分析工具能夠將文件變動引發的副作用具體計算到每一個模塊，因此部分變動在到達某個子插件時就會停止擴散，從而在大型插件中獲得更好的開發體驗。</target>
      </trans-unit>
      <trans-unit id="60980">
        <source>为了实现这种优化，我们假设每个插件模块的导出都是原子的。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">為了實現這種優化，我們假設每個插件模塊的導出都是原子的。</target>
      </trans-unit>
      <trans-unit id="60982">
        <source>换言之，如果一个模块的导出恰好是正在运行的插件，那么这个插件将是模块导出的唯一用途，在插件被加载以外的任何地方不会用到这个模块的导出。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">換言之，如果一個模塊的導出恰好是正在運行的插件，那麽這個插件將是模塊導出的唯一用途，在插件被加載以外的任何地方不會用到這個模塊的導出。</target>
      </trans-unit>
      <trans-unit id="60984">
        <source>对于正确使用模块化进行开发的项目，达成这个约定并不困难。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">對於正確使用模塊化進行開發的項目，達成這個約定並不困難。</target>
      </trans-unit>
      <trans-unit id="60986">
        <source>事实上，插件如果有任何其他需要提供的功能，也都可以通过 Service API 实现。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">事實上，插件如果有任何其他需要提供的功能，也都可以通過 Service API 實現。</target>
      </trans-unit>
      <trans-unit id="60988">
        <source>如果某些插件实在难以满足这个约定，我们也提供了额外的方案。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">如果某些插件實在難以滿足這個約定，我們也提供了額外的方案。</target>
      </trans-unit>
      <trans-unit id="60990">
        <source>开发者要么不将插件作为模块的导出 (比如作为导出的一部分)，要么在插件中手动声明 `sideEffect`。</source>
        <target state="needs-translation">开发者要么不将插件作为模块的导出 (比如作为导出的一部分)，要么在插件中手动声明 `sideEffect`。</target>
      </trans-unit>
      <trans-unit id="60992">
        <source>两种方法都能规避依赖分析工具的优化，从而实行保守的热重载策略。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">兩種方法都能規避依賴分析工具的優化，從而實行保守的熱重載策略。</target>
      </trans-unit>
      <trans-unit id="60994">
        <source>热重载与配置管理的联动</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">熱重載與配置管理的聯動</target>
      </trans-unit>
      <trans-unit id="60996">
        <source>在过去，插件热重载与插件管理 (@koishijs/plugin-manager) 是作为独立的功能开发的。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">在過去，插件熱重載與插件管理 (@koishijs/plugin-manager) 是作為獨立的功能開發的。</target>
      </trans-unit>
      <trans-unit id="60998">
        <source>当它们同时启用时可能会遇到一些问题。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">當它們同時啟用時可能會遇到一些問題。</target>
      </trans-unit>
      <trans-unit id="61000">
        <source>当插件管理器修改了静态的配置文件 (例如 koishi.config.yml) 时，热重载机制可能检测不到变动；但当我们将静态配置文件纳入依赖分析，又会导致配置管理器明明只修改了一个插件的配置，却会导致整个应用被重新启动 (因为配置文件的依赖优先级是最高的)。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">當插件管理器修改了靜態的配置文件 (例如 koishi.config.yml) 時，熱重載機製可能檢測不到變動；但當我們將靜態配置文件納入依賴分析，又會導致配置管理器明明只修改了一個插件的配置，卻會導致整個應用被重新啟動 (因為配置文件的依賴優先級是最高的)。</target>
      </trans-unit>
      <trans-unit id="61002">
        <source>这次更新我们针对这个问题提供了统一的解决方案。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">這次更新我們針對這個問題提供了統一的解決方案。</target>
      </trans-unit>
      <trans-unit id="61004">
        <source>首先插件管理器将只针对静态配置文件的场景生效，其次当启用了热重载功能时，一旦需要修改配置文件，插件管理器将不再触发插件变动，交由依赖分析工具处理改动过的配置文件。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">首先插件管理器將只針對靜態配置文件的場景生效，其次當啟用了熱重載功能時，一旦需要修改配置文件，插件管理器將不再觸發插件變動，交由依賴分析工具處理改動過的配置文件。</target>
      </trans-unit>
      <trans-unit id="61006">
        <source>开发者得以同时使用插件管理器和热重载功能，获得更好的开发体验。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">開發者得以同時使用插件管理器和熱重載功能，獲得更好的開發體驗。</target>
      </trans-unit>
      <trans-unit id="61008">
        <source>更多细节优化</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">更多細節優化</target>
      </trans-unit>
      <trans-unit id="61010">
        <source>新版本中我们还支持了新的配置项 `config.watch.debounce`，用于控制热重载的触发频率。</source>
        <target state="needs-translation">新版本中我们还支持了新的配置项 `config.watch.debounce`，用于控制热重载的触发频率。</target>
      </trans-unit>
      <trans-unit id="61012">
        <source>默认情况下文件变动 100ms 之后才会触发热重载，解决了强迫症程序员频繁保存带来的高频率热重载问题。</source>
        <target state="needs-translation">默认情况下文件变动 100ms 之后才会触发热重载，解决了强迫症程序员频繁保存带来的高频率热重载问题。</target>
      </trans-unit>
      <trans-unit id="61014">
        <source>以及我们还加入了对 json 配置文件的写入支持 (不过有了 yaml 真的会有人用 json 吗)。</source>
        <target state="needs-translation">以及我们还加入了对 json 配置文件的写入支持 (不过有了 yaml 真的会有人用 json 吗)。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1738" original="/[koishijs.docs] main/zh-CN/releases/v4.10.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="61016">
        <source>v4.10 版本介绍</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">v4.10 版本介紹</target>
      </trans-unit>
      <trans-unit id="61018">
        <source>[Roadmap](https://github.com/koishijs/koishi/issues/839)</source>
        <target state="needs-translation">[Roadmap](https://github.com/koishijs/koishi/issues/839)</target>
      </trans-unit>
      <trans-unit id="61020" translate="no">
        <source>[v4.10.0](https://github.com/koishijs/koishi/releases/tag/4.10.0)</source>
        <target>[v4.10.0](https://github.com/koishijs/koishi/releases/tag/4.10.0)</target>
      </trans-unit>
      <trans-unit id="61022" translate="no">
        <source>[v4.10.1](https://github.com/koishijs/koishi/releases/tag/4.10.1)</source>
        <target>[v4.10.1](https://github.com/koishijs/koishi/releases/tag/4.10.1)</target>
      </trans-unit>
      <trans-unit id="61024" translate="no">
        <source>[v4.10.2](https://github.com/koishijs/koishi/releases/tag/4.10.2)</source>
        <target>[v4.10.2](https://github.com/koishijs/koishi/releases/tag/4.10.2)</target>
      </trans-unit>
      <trans-unit id="61026" translate="no">
        <source>[v4.10.3](https://github.com/koishijs/koishi/releases/tag/4.10.3)</source>
        <target>[v4.10.3](https://github.com/koishijs/koishi/releases/tag/4.10.3)</target>
      </trans-unit>
      <trans-unit id="61028" translate="no">
        <source>[v4.10.4](https://github.com/koishijs/koishi/releases/tag/4.10.4)</source>
        <target>[v4.10.4](https://github.com/koishijs/koishi/releases/tag/4.10.4)</target>
      </trans-unit>
      <trans-unit id="61030" translate="no">
        <source>[v4.10.5](https://github.com/koishijs/koishi/releases/tag/4.10.5)</source>
        <target>[v4.10.5](https://github.com/koishijs/koishi/releases/tag/4.10.5)</target>
      </trans-unit>
      <trans-unit id="61032" translate="no">
        <source>[v4.10.6](https://github.com/koishijs/koishi/releases/tag/4.10.6)</source>
        <target>[v4.10.6](https://github.com/koishijs/koishi/releases/tag/4.10.6)</target>
      </trans-unit>
      <trans-unit id="61034" translate="no">
        <source>[v4.10.7](https://github.com/koishijs/koishi/releases/tag/4.10.7)</source>
        <target>[v4.10.7](https://github.com/koishijs/koishi/releases/tag/4.10.7)</target>
      </trans-unit>
      <trans-unit id="61036">
        <source>ORM 更新</source>
        <target state="needs-translation">ORM 更新</target>
      </trans-unit>
      <trans-unit id="61038">
        <source>此版本中，我们对 Koishi 背后的 ORM 框架进行了优化，极大地扩展了数据库 API 的表达能力：</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">此版本中，我們對 Koishi 背後的 ORM 框架進行了最佳化，極大地擴充套件了資料庫 API 的表達能力：</target>
      </trans-unit>
      <trans-unit id="61040">
        <source>使用 WASM 重新实现了 @koishijs/plugin-database-sqlite，从而规避了用户安装失败的问题</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">使用 WASM 重新實現了 @koishijs/plugin-database-sqlite，從而規避了使用者安裝失敗的問題</target>
      </trans-unit>
      <trans-unit id="61042">
        <source>支持了所有数据库统一的 `autoInc` 行为</source>
        <target state="needs-translation">支持了所有数据库统一的 `autoInc` 行为</target>
      </trans-unit>
      <trans-unit id="61044">
        <source>`sel.orderBy()` 和 `sel.project()` 支持了传入表达式</source>
        <target state="needs-translation">`sel.orderBy()` 和 `sel.project()` 支持了传入表达式</target>
      </trans-unit>
      <trans-unit id="61046">
        <source>全面支持了 `sel.groupBy()` 的使用以及上述语法的多次链式调用</source>
        <target state="needs-translation">全面支持了 `sel.groupBy()` 的使用以及上述语法的多次链式调用</target>
      </trans-unit>
      <trans-unit id="61048">
        <source>消息组件</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">訊息元件</target>
      </trans-unit>
      <trans-unit id="61050">
        <source>本次更新我们为消息元素加入了更多特性，包括组件、插值、注释、模板元素、JSX 支持等，同时也支持了消息组件在会话和本地化文件中的使用。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">本次更新我們為訊息元素加入了更多特性，包括元件、插值、註釋、模板元素、JSX 支援等，同時也支援了訊息元件在會話和本地化檔案中的使用。</target>
      </trans-unit>
      <trans-unit id="61052">
        <source>这意味着用户可以直接在插件中编写 JSX 来发送消息，而不再需要使用 XML 字符串了。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">這意味著使用者可以直接在外掛中編寫 JSX 來發送訊息，而不再需要使用 XML 字串了。</target>
      </trans-unit>
      <trans-unit id="61054">
        <source>飞书适配器</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">飛書介面卡</target>
      </trans-unit>
      <trans-unit id="61056">
        <source>经过了长达 7 个月的努力，我们终于完成了飞书适配器，让我们感谢 [@MaikoTan](https://github.com/maikotan)！</source>
        <target state="needs-translation">经过了长达 7 个月的努力，我们终于完成了飞书适配器，让我们感谢 [@MaikoTan](https://github.com/maikotan)！</target>
      </trans-unit>
      <trans-unit id="61058">
        <source>本地化编辑</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">本地化編輯</target>
      </trans-unit>
      <trans-unit id="61060">
        <source>发布了全新的 @koishijs/plugin-locales 插件，它提供了一个控制台页面，允许用户在线编辑任意本地化文本。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">釋出了全新的 @koishijs/plugin-locales 外掛，它提供了一個控制檯頁面，允許使用者線上編輯任意本地化文字。</target>
      </trans-unit>
      <trans-unit id="61062">
        <source>配置文件插值</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">配置檔案插值</target>
      </trans-unit>
      <trans-unit id="61064">
        <source>在这个版本中，我们还支持了使用插值语法配置非字符串的配置项。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">在這個版本中，我們還支援了使用插值語法配置非字串的配置項。</target>
      </trans-unit>
      <trans-unit id="61066">
        <source>这允许你更好地利用环境变量进行配置，比如将 `port` 设置为 `${{ +env.BASE_PORT }}` 等等。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">這允許你更好地利用環境變數進行配置，比如將 `port` 設定為 `${{ +env.BASE_PORT }}` 等等。</target>
      </trans-unit>
      <trans-unit id="61068">
        <source>这也意味着你现在甚至可以在配置文件中使用函数了！</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">這也意味著你現在甚至可以在配置檔案中使用函數了！</target>
      </trans-unit>
    </body>
  </file>
  <file id="1740" original="/[koishijs.docs] main/zh-CN/releases/v4.11.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="61070">
        <source>v4.11 版本介绍</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">v4.11 版本介紹</target>
      </trans-unit>
      <trans-unit id="61072">
        <source>[Roadmap](https://github.com/koishijs/koishi/issues/892)</source>
        <target state="needs-translation">[Roadmap](https://github.com/koishijs/koishi/issues/892)</target>
      </trans-unit>
      <trans-unit id="61074" translate="no">
        <source>[v4.11.0](https://github.com/koishijs/koishi/releases/tag/4.11.0)</source>
        <target>[v4.11.0](https://github.com/koishijs/koishi/releases/tag/4.11.0)</target>
      </trans-unit>
      <trans-unit id="61076" translate="no">
        <source>[v4.11.1](https://github.com/koishijs/koishi/releases/tag/4.11.1)</source>
        <target>[v4.11.1](https://github.com/koishijs/koishi/releases/tag/4.11.1)</target>
      </trans-unit>
      <trans-unit id="61078" translate="no">
        <source>[v4.11.2](https://github.com/koishijs/koishi/releases/tag/4.11.2)</source>
        <target>[v4.11.2](https://github.com/koishijs/koishi/releases/tag/4.11.2)</target>
      </trans-unit>
      <trans-unit id="61080" translate="no">
        <source>[v4.11.3](https://github.com/koishijs/koishi/releases/tag/4.11.3)</source>
        <target>[v4.11.3](https://github.com/koishijs/koishi/releases/tag/4.11.3)</target>
      </trans-unit>
      <trans-unit id="61082" translate="no">
        <source>[v4.11.4](https://github.com/koishijs/koishi/releases/tag/4.11.4)</source>
        <target>[v4.11.4](https://github.com/koishijs/koishi/releases/tag/4.11.4)</target>
      </trans-unit>
      <trans-unit id="61084" translate="no">
        <source>[v4.11.5](https://github.com/koishijs/koishi/releases/tag/4.11.5)</source>
        <target>[v4.11.5](https://github.com/koishijs/koishi/releases/tag/4.11.5)</target>
      </trans-unit>
      <trans-unit id="61086" translate="no">
        <source>[v4.11.6](https://github.com/koishijs/koishi/releases/tag/4.11.6)</source>
        <target>[v4.11.6](https://github.com/koishijs/koishi/releases/tag/4.11.6)</target>
      </trans-unit>
      <trans-unit id="61088" translate="no">
        <source>[v4.11.7](https://github.com/koishijs/koishi/releases/tag/4.11.7)</source>
        <target>[v4.11.7](https://github.com/koishijs/koishi/releases/tag/4.11.7)</target>
      </trans-unit>
      <trans-unit id="61090" translate="no">
        <source>[v4.11.8](https://github.com/koishijs/koishi/releases/tag/4.11.8)</source>
        <target>[v4.11.8](https://github.com/koishijs/koishi/releases/tag/4.11.8)</target>
      </trans-unit>
      <trans-unit id="61092" translate="no">
        <source>[v4.11.9](https://github.com/koishijs/koishi/releases/tag/4.11.9)</source>
        <target>[v4.11.9](https://github.com/koishijs/koishi/releases/tag/4.11.9)</target>
      </trans-unit>
      <trans-unit id="61094">
        <source>过滤器与动态配置</source>
        <target state="needs-translation">过滤器与动态配置</target>
      </trans-unit>
      <trans-unit id="61096">
        <source>在这个版本中，我们首先支持了使用 minato 的表达式语法作为 `$filter` 过滤会话上下文。</source>
        <target state="needs-translation">在这个版本中，我们首先支持了使用 minato 的表达式语法作为 `$filter` 过滤会话上下文。</target>
      </trans-unit>
      <trans-unit id="61098">
        <source>在此基础上我们又提供了 `Schema.computed()` 类型，它可用于定义根据会话动态取值的配置项。</source>
        <target state="needs-translation">在此基础上我们又提供了 `Schema.computed()` 类型，它可用于定义根据会话动态取值的配置项。</target>
      </trans-unit>
      <trans-unit id="61100">
        <source>这两个特性意味着用户真正获得了根据会话细粒度控制插件的能力。</source>
        <target state="needs-translation">这两个特性意味着用户真正获得了根据会话细粒度控制插件的能力。</target>
      </trans-unit>
      <trans-unit id="61102">
        <source>指令管理器</source>
        <target state="needs-translation">指令管理器</target>
      </trans-unit>
      <trans-unit id="61104">
        <source>发布了全新的 @koishijs/plugin-commands 插件，它提供了一个控制台页面，允许用户在线管理指令的各项配置和层级关系。</source>
        <target state="needs-translation">发布了全新的 @koishijs/plugin-commands 插件，它提供了一个控制台页面，允许用户在线管理指令的各项配置和层级关系。</target>
      </trans-unit>
      <trans-unit id="61106">
        <source>得益于过滤器机制，现在指令也可以在不同的平台和群组内拥有不同的行为了。</source>
        <target state="needs-translation">得益于过滤器机制，现在指令也可以在不同的平台和群组内拥有不同的行为了。</target>
      </trans-unit>
      <trans-unit id="61108">
        <source>插件市场优化</source>
        <target state="needs-translation">插件市场优化</target>
      </trans-unit>
      <trans-unit id="61110">
        <source>这个版本中我们对 @koishijs/plugin-market 的功能做了全面的优化：</source>
        <target state="needs-translation">这个版本中我们对 @koishijs/plugin-market 的功能做了全面的优化：</target>
      </trans-unit>
      <trans-unit id="61112">
        <source>现在能显示 `peerDependencies` 是否可选了</source>
        <target state="needs-translation">现在能显示 `peerDependencies` 是否可选了</target>
      </trans-unit>
      <trans-unit id="61114">
        <source>当打开插件选择对话框时自动聚焦输入框</source>
        <target state="needs-translation">当打开插件选择对话框时自动聚焦输入框</target>
      </trans-unit>
      <trans-unit id="61116">
        <source>支持了导出 `usage` 以提供插件的配置说明</source>
        <target state="needs-translation">支持了导出 `usage` 以提供插件的配置说明</target>
      </trans-unit>
      <trans-unit id="61118">
        <source>优化了搜索框下方插件数量的显示</source>
        <target state="needs-translation">优化了搜索框下方插件数量的显示</target>
      </trans-unit>
      <trans-unit id="61120">
        <source>支持了更多标识和搜索语法，包括不安全、预览版本和近期新增</source>
        <target state="needs-translation">支持了更多标识和搜索语法，包括不安全、预览版本和近期新增</target>
      </trans-unit>
      <trans-unit id="61122">
        <source>插件配置界面顶部增加了了链接导航栏</source>
        <target state="needs-translation">插件配置界面顶部增加了了链接导航栏</target>
      </trans-unit>
      <trans-unit id="61124">
        <source>当更新插件主版本时将显示兼容性提示</source>
        <target state="needs-translation">当更新插件主版本时将显示兼容性提示</target>
      </trans-unit>
      <trans-unit id="61126">
        <source>不再显示「所有插件」分组，优化了插件配置体验</source>
        <target state="needs-translation">不再显示「所有插件」分组，优化了插件配置体验</target>
      </trans-unit>
      <trans-unit id="61128">
        <source>当移除插件或插件组时将弹窗进行确认，同时禁止停用部分核心插件</source>
        <target state="needs-translation">当移除插件或插件组时将弹窗进行确认，同时禁止停用部分核心插件</target>
      </trans-unit>
      <trans-unit id="61130">
        <source>当检测到新的连接时，根据上一次刷新的时间自动刷新插件市场</source>
        <target state="needs-translation">当检测到新的连接时，根据上一次刷新的时间自动刷新插件市场</target>
      </trans-unit>
      <trans-unit id="61132">
        <source>新增了左侧栏用于过滤和排序功能，并全面完善了分类系统</source>
        <target state="needs-translation">新增了左侧栏用于过滤和排序功能，并全面完善了分类系统</target>
      </trans-unit>
      <trans-unit id="61134">
        <source>优化了插件卡片的悬浮和点击效果</source>
        <target state="needs-translation">优化了插件卡片的悬浮和点击效果</target>
      </trans-unit>
      <trans-unit id="61136">
        <source>修复了十余个 bug，这里就不一一介绍了</source>
        <target state="needs-translation">修复了十余个 bug，这里就不一一介绍了</target>
      </trans-unit>
      <trans-unit id="61138">
        <source>状态栏更新</source>
        <target state="needs-translation">状态栏更新</target>
      </trans-unit>
      <trans-unit id="61140">
        <source>此外，我们还将 status 插件拆分为 status 和 analytics 两个插件，后者承担了数据统计和图标渲染的功能。</source>
        <target state="needs-translation">此外，我们还将 status 插件拆分为 status 和 analytics 两个插件，后者承担了数据统计和图标渲染的功能。</target>
      </trans-unit>
      <trans-unit id="61142">
        <source>对于前者，我们还引入了 envinfo 插件的功能：在控制台的左下角显示环境信息和版本号。</source>
        <target state="needs-translation">对于前者，我们还引入了 envinfo 插件的功能：在控制台的左下角显示环境信息和版本号。</target>
      </trans-unit>
      <trans-unit id="61144">
        <source>在 status 插件之外，我们还内置了前端插件加载的进度条，已获得更好的初始加载体验。</source>
        <target state="needs-translation">在 status 插件之外，我们还内置了前端插件加载的进度条，已获得更好的初始加载体验。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1742" original="/[koishijs.docs] main/zh-CN/releases/v4.12.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="61146">
        <source>v4.12 版本介绍</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">v4.12 版本介紹</target>
      </trans-unit>
      <trans-unit id="61148">
        <source>[Roadmap](https://github.com/koishijs/koishi/issues/1000)</source>
        <target state="needs-translation">[Roadmap](https://github.com/koishijs/koishi/issues/1000)</target>
      </trans-unit>
      <trans-unit id="61150" translate="no">
        <source>[v4.12.0](https://github.com/koishijs/koishi/releases/tag/4.12.0)</source>
        <target>[v4.12.0](https://github.com/koishijs/koishi/releases/tag/4.12.0)</target>
      </trans-unit>
      <trans-unit id="61152" translate="no">
        <source>[v4.12.1](https://github.com/koishijs/koishi/releases/tag/4.12.1)</source>
        <target>[v4.12.1](https://github.com/koishijs/koishi/releases/tag/4.12.1)</target>
      </trans-unit>
      <trans-unit id="61154" translate="no">
        <source>[v4.12.2](https://github.com/koishijs/koishi/releases/tag/4.12.2)</source>
        <target>[v4.12.2](https://github.com/koishijs/koishi/releases/tag/4.12.2)</target>
      </trans-unit>
      <trans-unit id="61156" translate="no">
        <source>[v4.12.3](https://github.com/koishijs/koishi/releases/tag/4.12.3)</source>
        <target>[v4.12.3](https://github.com/koishijs/koishi/releases/tag/4.12.3)</target>
      </trans-unit>
      <trans-unit id="61158" translate="no">
        <source>[v4.12.4](https://github.com/koishijs/koishi/releases/tag/4.12.4)</source>
        <target>[v4.12.4](https://github.com/koishijs/koishi/releases/tag/4.12.4)</target>
      </trans-unit>
      <trans-unit id="61160" translate="no">
        <source>[v4.12.5](https://github.com/koishijs/koishi/releases/tag/4.12.5)</source>
        <target>[v4.12.5](https://github.com/koishijs/koishi/releases/tag/4.12.5)</target>
      </trans-unit>
      <trans-unit id="61162" translate="no">
        <source>[v4.12.6](https://github.com/koishijs/koishi/releases/tag/4.12.6)</source>
        <target>[v4.12.6](https://github.com/koishijs/koishi/releases/tag/4.12.6)</target>
      </trans-unit>
      <trans-unit id="61164" translate="no">
        <source>[v4.12.7](https://github.com/koishijs/koishi/releases/tag/4.12.7)</source>
        <target>[v4.12.7](https://github.com/koishijs/koishi/releases/tag/4.12.7)</target>
      </trans-unit>
      <trans-unit id="61166" translate="no">
        <source>[v4.12.8](https://github.com/koishijs/koishi/releases/tag/4.12.8)</source>
        <target>[v4.12.8](https://github.com/koishijs/koishi/releases/tag/4.12.8)</target>
      </trans-unit>
      <trans-unit id="61168" translate="no">
        <source>[v4.12.9](https://github.com/koishijs/koishi/releases/tag/4.12.9)</source>
        <target>[v4.12.9](https://github.com/koishijs/koishi/releases/tag/4.12.9)</target>
      </trans-unit>
      <trans-unit id="61170">
        <source>用户绑定</source>
        <target state="needs-translation">用户绑定</target>
      </trans-unit>
      <trans-unit id="61172">
        <source>在这个版本中，我们引入了新的内置数据表 `binding`，用于存储账号绑定信息。</source>
        <target state="needs-translation">在这个版本中，我们引入了新的内置数据表 `binding`，用于存储账号绑定信息。</target>
      </trans-unit>
      <trans-unit id="61174">
        <source>在新的架构下，我们更新了 `auth` 和 `bind` 插件，支持了同平台的用户绑定和解绑等功能。</source>
        <target state="needs-translation">在新的架构下，我们更新了 `auth` 和 `bind` 插件，支持了同平台的用户绑定和解绑等功能。</target>
      </trans-unit>
      <trans-unit id="61176">
        <source>为了能让旧版本的用户平滑升级，我们还引入了数据库迁移技术，支持插件在升级时将已有的数据迁移到新的表中。</source>
        <target state="needs-translation">为了能让旧版本的用户平滑升级，我们还引入了数据库迁移技术，支持插件在升级时将已有的数据迁移到新的表中。</target>
      </trans-unit>
      <trans-unit id="61178">
        <source>资源管理器</source>
        <target state="needs-translation">资源管理器</target>
      </trans-unit>
      <trans-unit id="61180">
        <source>新增了官方插件 @koishijs/plugin-explorer，可用于在控制台中查看和编辑实例目录内的文件。</source>
        <target state="needs-translation">新增了官方插件 @koishijs/plugin-explorer，可用于在控制台中查看和编辑实例目录内的文件。</target>
      </trans-unit>
      <trans-unit id="61182">
        <source>该插件除了能够方便云端部署的用户进行文件管理外，还为路径类型的配置项提供了便捷的选择界面。</source>
        <target state="needs-translation">该插件除了能够方便云端部署的用户进行文件管理外，还为路径类型的配置项提供了便捷的选择界面。</target>
      </trans-unit>
      <trans-unit id="61184">
        <source>至此，Koishi 的控制台生态已经趋于完善。</source>
        <target state="needs-translation">至此，Koishi 的控制台生态已经趋于完善。</target>
      </trans-unit>
      <trans-unit id="61186">
        <source>配置界面优化</source>
        <target state="needs-translation">配置界面优化</target>
      </trans-unit>
      <trans-unit id="61188">
        <source>v4.12 版本期间，我们对配置 UI 库 schemastery-vue 进行了全面的重构：</source>
        <target state="needs-translation">v4.12 版本期间，我们对配置 UI 库 schemastery-vue 进行了全面的重构：</target>
      </trans-unit>
      <trans-unit id="61190">
        <source>提供了更好的扩展性</source>
        <target state="needs-translation">提供了更好的扩展性</target>
      </trans-unit>
      <trans-unit id="61192">
        <source>修复了一些边界情况下的已知问题，同时提高了性能</source>
        <target state="needs-translation">修复了一些边界情况下的已知问题，同时提高了性能</target>
      </trans-unit>
      <trans-unit id="61194">
        <source>对于 `array` 和 `dict` 等类型支持了折叠</source>
        <target state="needs-translation">对于 `array` 和 `dict` 等类型支持了折叠</target>
      </trans-unit>
      <trans-unit id="61196">
        <source>支持了配置项国际化</source>
        <target state="needs-translation">支持了配置项国际化</target>
      </trans-unit>
      <trans-unit id="61198">
        <source>适配器更新</source>
        <target state="needs-translation">适配器更新</target>
      </trans-unit>
      <trans-unit id="61200">
        <source>优化了多个适配器的消息元素支持，包括 Telegram, KOOK 等</source>
        <target state="needs-translation">优化了多个适配器的消息元素支持，包括 Telegram, KOOK 等</target>
      </trans-unit>
      <trans-unit id="61202">
        <source>将 Feishu 适配器更名为 Lark，并同时支持了飞书的国内与国际版本</source>
        <target state="needs-translation">将 Feishu 适配器更名为 Lark，并同时支持了飞书的国内与国际版本</target>
      </trans-unit>
      <trans-unit id="61204">
        <source>新增了 Mail 适配器，允许用户通过邮件与机器人交互</source>
        <target state="needs-translation">新增了 Mail 适配器，允许用户通过邮件与机器人交互</target>
      </trans-unit>
      <trans-unit id="61206">
        <source>热重载优化</source>
        <target state="needs-translation">热重载优化</target>
      </trans-unit>
      <trans-unit id="61208">
        <source>将热重载相关逻辑从 CLI 内置迁移到了独立的插件 @koishijs/plugin-hmr 中，并提供了更多的配置项与功能。</source>
        <target state="needs-translation">将热重载相关逻辑从 CLI 内置迁移到了独立的插件 @koishijs/plugin-hmr 中，并提供了更多的配置项与功能。</target>
      </trans-unit>
      <trans-unit id="61210">
        <source>例如，如果当前保存的文件存在编译错误，将会显示色彩丰富的提示信息。</source>
        <target state="needs-translation">例如，如果当前保存的文件存在编译错误，将会显示色彩丰富的提示信息。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1744" original="/[koishijs.docs] main/zh-CN/releases/v4.13.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="61212">
        <source>v4.13 版本介绍</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">v4.13 版本介紹</target>
      </trans-unit>
      <trans-unit id="61214">
        <source>[Roadmap](https://github.com/koishijs/koishi/issues/1085)</source>
        <target state="needs-translation">[Roadmap](https://github.com/koishijs/koishi/issues/1085)</target>
      </trans-unit>
      <trans-unit id="61216" translate="no">
        <source>[v4.13.0](https://github.com/koishijs/koishi/releases/tag/4.13.0)</source>
        <target>[v4.13.0](https://github.com/koishijs/koishi/releases/tag/4.13.0)</target>
      </trans-unit>
      <trans-unit id="61218" translate="no">
        <source>[v4.13.1](https://github.com/koishijs/koishi/releases/tag/4.13.1)</source>
        <target>[v4.13.1](https://github.com/koishijs/koishi/releases/tag/4.13.1)</target>
      </trans-unit>
      <trans-unit id="61220" translate="no">
        <source>[v4.13.2](https://github.com/koishijs/koishi/releases/tag/4.13.2)</source>
        <target>[v4.13.2](https://github.com/koishijs/koishi/releases/tag/4.13.2)</target>
      </trans-unit>
      <trans-unit id="61222" translate="no">
        <source>[v4.13.3](https://github.com/koishijs/koishi/releases/tag/4.13.3)</source>
        <target>[v4.13.3](https://github.com/koishijs/koishi/releases/tag/4.13.3)</target>
      </trans-unit>
      <trans-unit id="61224" translate="no">
        <source>[v4.13.4](https://github.com/koishijs/koishi/releases/tag/4.13.4)</source>
        <target>[v4.13.4](https://github.com/koishijs/koishi/releases/tag/4.13.4)</target>
      </trans-unit>
      <trans-unit id="61226" translate="no">
        <source>[v4.13.5](https://github.com/koishijs/koishi/releases/tag/4.13.5)</source>
        <target>[v4.13.5](https://github.com/koishijs/koishi/releases/tag/4.13.5)</target>
      </trans-unit>
      <trans-unit id="61228" translate="no">
        <source>[v4.13.6](https://github.com/koishijs/koishi/releases/tag/4.13.6)</source>
        <target>[v4.13.6](https://github.com/koishijs/koishi/releases/tag/4.13.6)</target>
      </trans-unit>
      <trans-unit id="61230" translate="no">
        <source>[v4.13.7](https://github.com/koishijs/koishi/releases/tag/4.13.7)</source>
        <target>[v4.13.7](https://github.com/koishijs/koishi/releases/tag/4.13.7)</target>
      </trans-unit>
      <trans-unit id="61232" translate="no">
        <source>[v4.13.8](https://github.com/koishijs/koishi/releases/tag/4.13.8)</source>
        <target>[v4.13.8](https://github.com/koishijs/koishi/releases/tag/4.13.8)</target>
      </trans-unit>
      <trans-unit id="61234" translate="no">
        <source>[v4.13.9](https://github.com/koishijs/koishi/releases/tag/4.13.9)</source>
        <target>[v4.13.9](https://github.com/koishijs/koishi/releases/tag/4.13.9)</target>
      </trans-unit>
      <trans-unit id="61236">
        <source>控制台优化</source>
        <target state="needs-translation">控制台优化</target>
      </trans-unit>
      <trans-unit id="61238">
        <source>v4.13 版本的主要改动是新增了一批控制台 API：</source>
        <target state="needs-translation">v4.13 版本的主要改动是新增了一批控制台 API：</target>
      </trans-unit>
      <trans-unit id="61240">
        <source>引入了主题系统，允许插件定义新的主题</source>
        <target state="needs-translation">引入了主题系统，允许插件定义新的主题</target>
      </trans-unit>
      <trans-unit id="61242">
        <source>引入了用户配置 API，并允许插件扩展配置项</source>
        <target state="needs-translation">引入了用户配置 API，并允许插件扩展配置项</target>
      </trans-unit>
      <trans-unit id="61244">
        <source>引入了菜单 API，允许插件定义和触发上下文菜单</source>
        <target state="needs-translation">引入了菜单 API，允许插件定义和触发上下文菜单</target>
      </trans-unit>
      <trans-unit id="61246">
        <source>支持了配置漫游功能，用户可以在多个客户端同步配置</source>
        <target state="needs-translation">支持了配置漫游功能，用户可以在多个客户端同步配置</target>
      </trans-unit>
      <trans-unit id="61248">
        <source>伴随着新的 API，已有的控制台插件也迎来了各种优化，这里就不一一列举了。</source>
        <target state="needs-translation">伴随着新的 API，已有的控制台插件也迎来了各种优化，这里就不一一列举了。</target>
      </trans-unit>
      <trans-unit id="61250">
        <source>插件配置优化</source>
        <target state="needs-translation">插件配置优化</target>
      </trans-unit>
      <trans-unit id="61252">
        <source>在这个版本中，我们进一步将 @koishijs/plugin-market 拆分为了 market 和 config 两个独立的插件。</source>
        <target state="needs-translation">在这个版本中，我们进一步将 @koishijs/plugin-market 拆分为了 market 和 config 两个独立的插件。</target>
      </trans-unit>
      <trans-unit id="61254">
        <source>前者负责插件的安装和更新，后者负责插件的配置。</source>
        <target state="needs-translation">前者负责插件的安装和更新，后者负责插件的配置。</target>
      </trans-unit>
      <trans-unit id="61256">
        <source>同时，我们支持了插件信息的按需读取，大幅提高了启动速度和插件市场加载速度。</source>
        <target state="needs-translation">同时，我们支持了插件信息的按需读取，大幅提高了启动速度和插件市场加载速度。</target>
      </trans-unit>
      <trans-unit id="61258">
        <source>新版本的 market 和 config 插件也带来了一些新功能：</source>
        <target state="needs-translation">新版本的 market 和 config 插件也带来了一些新功能：</target>
      </trans-unit>
      <trans-unit id="61260">
        <source>支持了启用、停用、重载插件分组</source>
        <target state="needs-translation">支持了启用、停用、重载插件分组</target>
      </trans-unit>
      <trans-unit id="61262">
        <source>支持了插件的快速预览功能</source>
        <target state="needs-translation">支持了插件的快速预览功能</target>
      </trans-unit>
      <trans-unit id="61264">
        <source>支持了对插件配置项的热重载</source>
        <target state="needs-translation">支持了对插件配置项的热重载</target>
      </trans-unit>
      <trans-unit id="61266">
        <source>支持了以指令形式安装、卸载、更新插件</source>
        <target state="needs-translation">支持了以指令形式安装、卸载、更新插件</target>
      </trans-unit>
      <trans-unit id="61268">
        <source>适配器更新</source>
        <target state="needs-translation">适配器更新</target>
      </trans-unit>
      <trans-unit id="61270">
        <source>支持了更多标准消息元素</source>
        <target state="needs-translation">支持了更多标准消息元素</target>
      </trans-unit>
      <trans-unit id="61272">
        <source>支持了斜线指令，允许用户快速与机器人交互</source>
        <target state="needs-translation">支持了斜线指令，允许用户快速与机器人交互</target>
      </trans-unit>
      <trans-unit id="61274">
        <source>新增了与表态和角色相关的 Bot API</source>
        <target state="needs-translation">新增了与表态和角色相关的 Bot API</target>
      </trans-unit>
      <trans-unit id="61276">
        <source>新增了 matrix 和 line 适配器</source>
        <target state="needs-translation">新增了 matrix 和 line 适配器</target>
      </trans-unit>
    </body>
  </file>
  <file id="1746" original="/[koishijs.docs] main/zh-CN/releases/v4.14.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="61278">
        <source>v4.14 版本介绍</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">v4.14 版本介紹</target>
      </trans-unit>
      <trans-unit id="61280">
        <source>[Roadmap](https://github.com/koishijs/koishi/issues/1138)</source>
        <target state="needs-translation">[Roadmap](https://github.com/koishijs/koishi/issues/1138)</target>
      </trans-unit>
      <trans-unit id="61282" translate="no">
        <source>[v4.14.0](https://github.com/koishijs/koishi/releases/tag/4.14.0)</source>
        <target>[v4.14.0](https://github.com/koishijs/koishi/releases/tag/4.14.0)</target>
      </trans-unit>
      <trans-unit id="61284" translate="no">
        <source>[v4.14.1](https://github.com/koishijs/koishi/releases/tag/4.14.1)</source>
        <target>[v4.14.1](https://github.com/koishijs/koishi/releases/tag/4.14.1)</target>
      </trans-unit>
      <trans-unit id="61286" translate="no">
        <source>[v4.14.2](https://github.com/koishijs/koishi/releases/tag/4.14.2)</source>
        <target>[v4.14.2](https://github.com/koishijs/koishi/releases/tag/4.14.2)</target>
      </trans-unit>
      <trans-unit id="61288" translate="no">
        <source>[v4.14.3](https://github.com/koishijs/koishi/releases/tag/4.14.3)</source>
        <target>[v4.14.3](https://github.com/koishijs/koishi/releases/tag/4.14.3)</target>
      </trans-unit>
      <trans-unit id="61290" translate="no">
        <source>[v4.14.4](https://github.com/koishijs/koishi/releases/tag/4.14.4)</source>
        <target>[v4.14.4](https://github.com/koishijs/koishi/releases/tag/4.14.4)</target>
      </trans-unit>
      <trans-unit id="61292" translate="no">
        <source>[v4.14.5](https://github.com/koishijs/koishi/releases/tag/4.14.5)</source>
        <target>[v4.14.5](https://github.com/koishijs/koishi/releases/tag/4.14.5)</target>
      </trans-unit>
      <trans-unit id="61294" translate="no">
        <source>[v4.14.6](https://github.com/koishijs/koishi/releases/tag/4.14.6)</source>
        <target>[v4.14.6](https://github.com/koishijs/koishi/releases/tag/4.14.6)</target>
      </trans-unit>
      <trans-unit id="61296">
        <source>权限系统</source>
        <target state="needs-translation">权限系统</target>
      </trans-unit>
      <trans-unit id="61298">
        <source>v4.14 版本中，我们引入了新的权限系统。</source>
        <target state="needs-translation">v4.14 版本中，我们引入了新的权限系统。</target>
      </trans-unit>
      <trans-unit id="61300">
        <source>相比过去用数字来表示用户的权限等级，新的权限系统将提供一套更加灵活的权限管理方案，包括：</source>
        <target state="needs-translation">相比过去用数字来表示用户的权限等级，新的权限系统将提供一套更加灵活的权限管理方案，包括：</target>
      </trans-unit>
      <trans-unit id="61302">
        <source>支持细粒度的权限控制</source>
        <target state="needs-translation">支持细粒度的权限控制</target>
      </trans-unit>
      <trans-unit id="61304">
        <source>支持权限组和用户组等概念</source>
        <target state="needs-translation">支持权限组和用户组等概念</target>
      </trans-unit>
      <trans-unit id="61306">
        <source>允许插件自定义权限</source>
        <target state="needs-translation">允许插件自定义权限</target>
      </trans-unit>
      <trans-unit id="61308">
        <source>能够与平台原生的权限进行对接</source>
        <target state="needs-translation">能够与平台原生的权限进行对接</target>
      </trans-unit>
      <trans-unit id="61310">
        <source>新的权限系统未来还会与控制台、sudo 插件等进行整合，将权限管理的边界扩展到更多的场景。</source>
        <target state="needs-translation">新的权限系统未来还会与控制台、sudo 插件等进行整合，将权限管理的边界扩展到更多的场景。</target>
      </trans-unit>
      <trans-unit id="61312">
        <source>配置界面优化</source>
        <target state="needs-translation">配置界面优化</target>
      </trans-unit>
      <trans-unit id="61314">
        <source>配置项库 schemastery-vue 升级到了 v7 版本，包含以下更新：</source>
        <target state="needs-translation">配置项库 schemastery-vue 升级到了 v7 版本，包含以下更新：</target>
      </trans-unit>
      <trans-unit id="61316">
        <source>重新设计了 UI，将菜单置于配置项右侧按钮处，并为菜单项增加了图标</source>
        <target state="needs-translation">重新设计了 UI，将菜单置于配置项右侧按钮处，并为菜单项增加了图标</target>
      </trans-unit>
      <trans-unit id="61318">
        <source>支持了 `transform` 类型中回调函数的序列化</source>
        <target state="needs-translation">支持了 `transform` 类型中回调函数的序列化</target>
      </trans-unit>
      <trans-unit id="61320">
        <source>支持了 `.collapse()` 方法，允许显式声明一个配置项可折叠</source>
        <target state="needs-translation">支持了 `.collapse()` 方法，允许显式声明一个配置项可折叠</target>
      </trans-unit>
      <trans-unit id="61322">
        <source>支持了 `.experimental()` 和 `.deprecated()` 方法，用于声明配置项的实验性或已废弃状态</source>
        <target state="needs-translation">支持了 `.experimental()` 和 `.deprecated()` 方法，用于声明配置项的实验性或已废弃状态</target>
      </trans-unit>
      <trans-unit id="61324">
        <source>部分类型支持了「在上方插入」「在下方插入」菜单项</source>
        <target state="needs-translation">部分类型支持了「在上方插入」「在下方插入」菜单项</target>
      </trans-unit>
      <trans-unit id="61326">
        <source>`bitset` 类型支持了「全部选中」「清空选择」菜单项</source>
        <target state="needs-translation">`bitset` 类型支持了「全部选中」「清空选择」菜单项</target>
      </trans-unit>
      <trans-unit id="61328">
        <source>支持了 `.extra()` 方法和类型扩展</source>
        <target state="needs-translation">支持了 `.extra()` 方法和类型扩展</target>
      </trans-unit>
      <trans-unit id="61330">
        <source>适配器更新</source>
        <target state="needs-translation">适配器更新</target>
      </trans-unit>
      <trans-unit id="61332">
        <source>这个版本中我们增加了大量官方适配器，可用于以下平台：</source>
        <target state="needs-translation">这个版本中我们增加了大量官方适配器，可用于以下平台：</target>
      </trans-unit>
      <trans-unit id="61334">
        <source>钉钉</source>
        <target state="needs-translation">钉钉</target>
      </trans-unit>
      <trans-unit id="61336">
        <source>微信公众号</source>
        <target state="needs-translation">微信公众号</target>
      </trans-unit>
      <trans-unit id="61338">
        <source>企业微信</source>
        <target state="needs-translation">企业微信</target>
      </trans-unit>
      <trans-unit id="61340">
        <source>Slack</source>
        <target state="needs-translation">Slack</target>
      </trans-unit>
      <trans-unit id="61342">
        <source>WhatsApp</source>
        <target state="needs-translation">WhatsApp</target>
      </trans-unit>
      <trans-unit id="61344">
        <source>同时也为现有的适配器增加了新的功能：</source>
        <target state="needs-translation">同时也为现有的适配器增加了新的功能：</target>
      </trans-unit>
      <trans-unit id="61346">
        <source>支持了斜线指令 (Discord, Telegram)</source>
        <target state="needs-translation">支持了斜线指令 (Discord, Telegram)</target>
      </trans-unit>
      <trans-unit id="61348">
        <source>协议升级</source>
        <target state="needs-translation">协议升级</target>
      </trans-unit>
      <trans-unit id="61350">
        <source>最后，我们也将 Satori 更新到了 v3 alpha 版本。</source>
        <target state="needs-translation">最后，我们也将 Satori 更新到了 v3 alpha 版本。</target>
      </trans-unit>
      <trans-unit id="61352">
        <source>新版本引入了一些实验性功能，并将在 Koishi v4.15 中进入稳定版本。</source>
        <target state="needs-translation">新版本引入了一些实验性功能，并将在 Koishi v4.15 中进入稳定版本。</target>
      </trans-unit>
      <trans-unit id="61354">
        <source>关于这些新功能就留到下个版本介绍吧。</source>
        <target state="needs-translation">关于这些新功能就留到下个版本介绍吧。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1748" original="/[koishijs.docs] main/zh-CN/releases/v4.15.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="61356">
        <source>v4.15 版本介绍</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">v4.15 版本介紹</target>
      </trans-unit>
      <trans-unit id="61358">
        <source>[Roadmap](https://github.com/koishijs/koishi/issues/1208)</source>
        <target state="needs-translation">[Roadmap](https://github.com/koishijs/koishi/issues/1208)</target>
      </trans-unit>
      <trans-unit id="61360" translate="no">
        <source>[v4.15.0](https://github.com/koishijs/koishi/releases/tag/4.15.0)</source>
        <target>[v4.15.0](https://github.com/koishijs/koishi/releases/tag/4.15.0)</target>
      </trans-unit>
      <trans-unit id="61362" translate="no">
        <source>[v4.15.1](https://github.com/koishijs/koishi/releases/tag/4.15.1)</source>
        <target>[v4.15.1](https://github.com/koishijs/koishi/releases/tag/4.15.1)</target>
      </trans-unit>
      <trans-unit id="61364" translate="no">
        <source>[v4.15.2](https://github.com/koishijs/koishi/releases/tag/4.15.2)</source>
        <target>[v4.15.2](https://github.com/koishijs/koishi/releases/tag/4.15.2)</target>
      </trans-unit>
      <trans-unit id="61366" translate="no">
        <source>[v4.15.3](https://github.com/koishijs/koishi/releases/tag/4.15.3)</source>
        <target>[v4.15.3](https://github.com/koishijs/koishi/releases/tag/4.15.3)</target>
      </trans-unit>
      <trans-unit id="61368" translate="no">
        <source>[v4.15.4](https://github.com/koishijs/koishi/releases/tag/4.15.4)</source>
        <target>[v4.15.4](https://github.com/koishijs/koishi/releases/tag/4.15.4)</target>
      </trans-unit>
      <trans-unit id="61370" translate="no">
        <source>[v4.15.5](https://github.com/koishijs/koishi/releases/tag/4.15.5)</source>
        <target>[v4.15.5](https://github.com/koishijs/koishi/releases/tag/4.15.5)</target>
      </trans-unit>
      <trans-unit id="61372" translate="no">
        <source>[v4.15.6](https://github.com/koishijs/koishi/releases/tag/4.15.6)</source>
        <target>[v4.15.6](https://github.com/koishijs/koishi/releases/tag/4.15.6)</target>
      </trans-unit>
      <trans-unit id="61374">
        <source>Satori v3</source>
        <target state="needs-translation">Satori v3</target>
      </trans-unit>
      <trans-unit id="61376">
        <source>v4.15 版本最重要的特性就是将 Satori 更新到了 v3 版本。</source>
        <target state="needs-translation">v4.15 版本最重要的特性就是将 Satori 更新到了 v3 版本。</target>
      </trans-unit>
      <trans-unit id="61378">
        <source>新版本对现有 API 进行了一些重构，并从中总结出了一个通用的跨平台聊天协议，名为 Satori Protocol。</source>
        <target state="needs-translation">新版本对现有 API 进行了一些重构，并从中总结出了一个通用的跨平台聊天协议，名为 Satori Protocol。</target>
      </trans-unit>
      <trans-unit id="61380">
        <source>你可以在 [Satori 官网](https://satori.chat/) 上查看完整的协议文档。</source>
        <target state="needs-translation">你可以在 [Satori 官网](https://satori.chat/) 上查看完整的协议文档。</target>
      </trans-unit>
      <trans-unit id="61382">
        <source>与此同时，我们也发布了一些与适配器与网络相关的插件：</source>
        <target state="needs-translation">与此同时，我们也发布了一些与适配器与网络相关的插件：</target>
      </trans-unit>
      <trans-unit id="61384">
        <source>[adapter-satori](../plugins/adapter/satori.md)：适用于 Satori 协议的适配器</source>
        <target state="needs-translation">[adapter-satori](../plugins/adapter/satori.md)：适用于 Satori 协议的适配器</target>
      </trans-unit>
      <trans-unit id="61386">
        <source>[server-satori](../plugins/develop/server-satori.md)：支持 Satori 协议的 API 服务器</source>
        <target state="needs-translation">[server-satori](../plugins/develop/server-satori.md)：支持 Satori 协议的 API 服务器</target>
      </trans-unit>
      <trans-unit id="61388">
        <source>[server-proxy](../plugins/develop/server-proxy.md)：代理服务器，可用于解决前端跨域问题</source>
        <target state="needs-translation">[server-proxy](../plugins/develop/server-proxy.md)：代理服务器，可用于解决前端跨域问题</target>
      </trans-unit>
      <trans-unit id="61390">
        <source>[server-temp](../plugins/develop/server-temp.md)：临时服务器，可用于本地图片发送等场景</source>
        <target state="needs-translation">[server-temp](../plugins/develop/server-temp.md)：临时服务器，可用于本地图片发送等场景</target>
      </trans-unit>
      <trans-unit id="61392">
        <source>这些插件同步发布在 Satori 和 Koishi 侧。</source>
        <target state="needs-translation">这些插件同步发布在 Satori 和 Koishi 侧。</target>
      </trans-unit>
      <trans-unit id="61394">
        <source>为此，我们发布了 [upstream](https://github.com/koishijs/upstream) 仓库，用于同步上游生态中的插件。</source>
        <target state="needs-translation">为此，我们发布了 [upstream](https://github.com/koishijs/upstream) 仓库，用于同步上游生态中的插件。</target>
      </trans-unit>
      <trans-unit id="61396">
        <source>未来我们将提供让 Koishi 能够直接加载上游插件的能力，敬请期待。</source>
        <target state="needs-translation">未来我们将提供让 Koishi 能够直接加载上游插件的能力，敬请期待。</target>
      </trans-unit>
      <trans-unit id="61398">
        <source>此外，Satori v3 也引入了更多原生交互能力，包括按钮元素、交互事件等。</source>
        <target state="needs-translation">此外，Satori v3 也引入了更多原生交互能力，包括按钮元素、交互事件等。</target>
      </trans-unit>
      <trans-unit id="61400">
        <source>相关的能力已经在全部支持按钮的平台 (KOOK, Discord, LINE, QQ, Telegram, WhatsApp) 上实现。</source>
        <target state="needs-translation">相关的能力已经在全部支持按钮的平台 (KOOK, Discord, LINE, QQ, Telegram, WhatsApp) 上实现。</target>
      </trans-unit>
      <trans-unit id="61402">
        <source>Cordis v3</source>
        <target state="needs-translation">Cordis v3</target>
      </trans-unit>
      <trans-unit id="61404">
        <source>另一个重要程度不亚于 Satori v3 的更新则是 Cordis v3。</source>
        <target state="needs-translation">另一个重要程度不亚于 Satori v3 的更新则是 Cordis v3。</target>
      </trans-unit>
      <trans-unit id="61406">
        <source>新版本基于 `Proxy` 重新实现了整套的服务 API，相比旧版本具有更强的可追溯性、可靠性和扩展性。</source>
        <target state="needs-translation">新版本基于 `Proxy` 重新实现了整套的服务 API，相比旧版本具有更强的可追溯性、可靠性和扩展性。</target>
      </trans-unit>
      <trans-unit id="61408">
        <source>同时，新版本的所有 API 都是无副作用的，这意味着困扰用户的多例问题将大幅减少。</source>
        <target state="needs-translation">同时，新版本的所有 API 都是无副作用的，这意味着困扰用户的多例问题将大幅减少。</target>
      </trans-unit>
      <trans-unit id="61410">
        <source>由于这些优化处于底层，对于开发者比较难以察觉，因此这里举出一个直接的应用。</source>
        <target state="needs-translation">由于这些优化处于底层，对于开发者比较难以察觉，因此这里举出一个直接的应用。</target>
      </trans-unit>
      <trans-unit id="61412">
        <source>在插件内部使用 `ctx.logger()` 发送日志时，将基于上下文进行追踪，在控制台的插件详情页面中将展示该插件产生的日志。</source>
        <target state="needs-translation">在插件内部使用 `ctx.logger()` 发送日志时，将基于上下文进行追踪，在控制台的插件详情页面中将展示该插件产生的日志。</target>
      </trans-unit>
      <trans-unit id="61414">
        <source>同时，现有的日志界面也支持了对日志进行跳转，以便于开发者快速定位问题。</source>
        <target state="needs-translation">同时，现有的日志界面也支持了对日志进行跳转，以便于开发者快速定位问题。</target>
      </trans-unit>
      <trans-unit id="61416">
        <source>数据库更新</source>
        <target state="needs-translation">数据库更新</target>
      </trans-unit>
      <trans-unit id="61418">
        <source>在这个版本中，我们还对 ORM 能力进行了大幅优化：</source>
        <target state="needs-translation">在这个版本中，我们还对 ORM 能力进行了大幅优化：</target>
      </trans-unit>
      <trans-unit id="61420">
        <source>修复了 `join`, `groupBy`, `project` 在若干边界情况下的问题</source>
        <target state="needs-translation">修复了 `join`, `groupBy`, `project` 在若干边界情况下的问题</target>
      </trans-unit>
      <trans-unit id="61422">
        <source>支持了 `$.array()` 和 `$.object()` 等用于操作结构化数据的 API</source>
        <target state="needs-translation">支持了 `$.array()` 和 `$.object()` 等用于操作结构化数据的 API</target>
      </trans-unit>
      <trans-unit id="61424">
        <source>对数据库进行 `set`, `upsert`, `remove` 操作时将返回修改条目相关信息了</source>
        <target state="needs-translation">对数据库进行 `set`, `upsert`, `remove` 操作时将返回修改条目相关信息了</target>
      </trans-unit>
      <trans-unit id="61426">
        <source>修复了 SQL 对 JSON 中嵌套属性访问异常的问题</source>
        <target state="needs-translation">修复了 SQL 对 JSON 中嵌套属性访问异常的问题</target>
      </trans-unit>
      <trans-unit id="61428">
        <source>优化了 SQLite 的访问性能，解决了数据库体积过大时无法使用的问题</source>
        <target state="needs-translation">优化了 SQLite 的访问性能，解决了数据库体积过大时无法使用的问题</target>
      </trans-unit>
      <trans-unit id="61430">
        <source>新增了 PostgreSQL 数据库支持</source>
        <target state="needs-translation">新增了 PostgreSQL 数据库支持</target>
      </trans-unit>
      <trans-unit id="61432">
        <source>控制台更新</source>
        <target state="needs-translation">控制台更新</target>
      </trans-unit>
      <trans-unit id="61434">
        <source>这个版本也优化了控制台的使用体验：</source>
        <target state="needs-translation">这个版本也优化了控制台的使用体验：</target>
      </trans-unit>
      <trans-unit id="61436">
        <source>使用统一的菜单 API 显示布局菜单和上下文菜单，为多个插件提供了更多的菜单项</source>
        <target state="needs-translation">使用统一的菜单 API 显示布局菜单和上下文菜单，为多个插件提供了更多的菜单项</target>
      </trans-unit>
      <trans-unit id="61438">
        <source>支持了快捷键绑定 (例如，在插件配置界面键入 ⌘S 将会保存配置)</source>
        <target state="needs-translation">支持了快捷键绑定 (例如，在插件配置界面键入 ⌘S 将会保存配置)</target>
      </trans-unit>
      <trans-unit id="61440">
        <source>config 插件支持了插件和插件组在侧边栏的重命名</source>
        <target state="needs-translation">config 插件支持了插件和插件组在侧边栏的重命名</target>
      </trans-unit>
      <trans-unit id="61442">
        <source>config 插件支持在启用、重载插件时将对配置项进行检查</source>
        <target state="needs-translation">config 插件支持在启用、重载插件时将对配置项进行检查</target>
      </trans-unit>
      <trans-unit id="61444">
        <source>explorer 插件支持了符号链接的解析与显示</source>
        <target state="needs-translation">explorer 插件支持了符号链接的解析与显示</target>
      </trans-unit>
      <trans-unit id="61446">
        <source>优化了可访问性，修复了若干无法显示某些文本的问题</source>
        <target state="needs-translation">优化了可访问性，修复了若干无法显示某些文本的问题</target>
      </trans-unit>
      <trans-unit id="61448">
        <source>QQ 适配器</source>
        <target state="needs-translation">QQ 适配器</target>
      </trans-unit>
      <trans-unit id="61450">
        <source>随着腾讯开放平台的的推出，开发者现在可以直接接入官方机器人 API，而无需使用第三方登录方案。</source>
        <target state="needs-translation">随着腾讯开放平台的的推出，开发者现在可以直接接入官方机器人 API，而无需使用第三方登录方案。</target>
      </trans-unit>
      <trans-unit id="61452">
        <source>因此，我们发布了 QQ 适配器 (能够同时支持 QQ 群和 QQ 频道机器人的使用)，同时废弃了过时的 QQGuild 适配器。</source>
        <target state="needs-translation">因此，我们发布了 QQ 适配器 (能够同时支持 QQ 群和 QQ 频道机器人的使用)，同时废弃了过时的 QQGuild 适配器。</target>
      </trans-unit>
      <trans-unit id="61454">
        <source>此外 OneBot 适配器也转移到社区维护。</source>
        <target state="needs-translation">此外 OneBot 适配器也转移到社区维护。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1750" original="/[koishijs.docs] main/zh-CN/releases/v4.2.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="61456">
        <source>v4.2 版本介绍</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">v4.2 版本介紹</target>
      </trans-unit>
      <trans-unit id="61458">
        <source>[Roadmap](https://github.com/koishijs/koishi/issues/482)</source>
        <target state="needs-translation">[Roadmap](https://github.com/koishijs/koishi/issues/482)</target>
      </trans-unit>
      <trans-unit id="61460" translate="no">
        <source>[v4.1.1](https://github.com/koishijs/koishi/releases/tag/4.1.1)</source>
        <target>[v4.1.1](https://github.com/koishijs/koishi/releases/tag/4.1.1)</target>
      </trans-unit>
      <trans-unit id="61462" translate="no">
        <source>[v4.1.2](https://github.com/koishijs/koishi/releases/tag/4.1.2)</source>
        <target>[v4.1.2](https://github.com/koishijs/koishi/releases/tag/4.1.2)</target>
      </trans-unit>
      <trans-unit id="61464" translate="no">
        <source>[v4.2.0](https://github.com/koishijs/koishi/releases/tag/4.2.0)</source>
        <target>[v4.2.0](https://github.com/koishijs/koishi/releases/tag/4.2.0)</target>
      </trans-unit>
      <trans-unit id="61466">
        <source>指令系统优化</source>
        <target state="needs-translation">指令系统优化</target>
      </trans-unit>
      <trans-unit id="61468">
        <source>Git 风格的指令调用</source>
        <target state="needs-translation">Git 风格的指令调用</target>
      </trans-unit>
      <trans-unit id="61470">
        <source>Koishi 将子指令分为两类：**层级式** 和 **派生式**。</source>
        <target state="needs-translation">Koishi 将子指令分为两类：**层级式** 和 **派生式**。</target>
      </trans-unit>
      <trans-unit id="61472">
        <source>前者从形式上将指令组织起来方便查看和管理，而后者则从行为上限制了指定的调用方式。</source>
        <target state="needs-translation">前者从形式上将指令组织起来方便查看和管理，而后者则从行为上限制了指定的调用方式。</target>
      </trans-unit>
      <trans-unit id="61474">
        <source>说白了层级式子指令 `foo/bar` 仍然可以使用 `bar` 进行调用，而派生式子指令 `foo.bar` 则必须完整写全整个指令路径。</source>
        <target state="needs-translation">说白了层级式子指令 `foo/bar` 仍然可以使用 `bar` 进行调用，而派生式子指令 `foo.bar` 则必须完整写全整个指令路径。</target>
      </trans-unit>
      <trans-unit id="61476">
        <source>从这个版本起我们内置支持了 Git 风格的指令调用，即当父指令 `foo` 没有实现时，`foo bar` 将自动视为 `foo.bar` 的调用，其参数和选项也会被保留。</source>
        <target state="needs-translation">从这个版本起我们内置支持了 Git 风格的指令调用，即当父指令 `foo` 没有实现时，`foo bar` 将自动视为 `foo.bar` 的调用，其参数和选项也会被保留。</target>
      </trans-unit>
      <trans-unit id="61478">
        <source>@koishijs/plugin-forward</source>
        <target state="needs-translation">@koishijs/plugin-forward</target>
      </trans-unit>
      <trans-unit id="61480">
        <source>作为官方的第一个实例，最新版本的 @koishijs/plugin-forward 提供了在运行时通过指令查看、添加、删除转发规则的功能：</source>
        <target state="needs-translation">作为官方的第一个实例，最新版本的 @koishijs/plugin-forward 提供了在运行时通过指令查看、添加、删除转发规则的功能：</target>
      </trans-unit>
      <trans-unit id="61482">
        <source>forward add #123                // 添加目标频道
forward list                    // 查看全部目标频道
fwd clear                       // 移除全部目标频道
fwd rm #123                     // 移除特定目标频道</source>
        <target state="needs-translation">forward add #123                // 添加目标频道
forward list                    // 查看全部目标频道
fwd clear                       // 移除全部目标频道
fwd rm #123                     // 移除特定目标频道</target>
      </trans-unit>
      <trans-unit id="61484">
        <source>无论是父指令还是子指令，我们都支持使用别名书写。</source>
        <target state="needs-translation">无论是父指令还是子指令，我们都支持使用别名书写。</target>
      </trans-unit>
      <trans-unit id="61486">
        <source>在上面的例子里，`fwd rm` 与 `forward remove` 的效果是完全一致的。</source>
        <target state="needs-translation">在上面的例子里，`fwd rm` 与 `forward remove` 的效果是完全一致的。</target>
      </trans-unit>
      <trans-unit id="61488">
        <source>控制台优化</source>
        <target state="needs-translation">控制台优化</target>
      </trans-unit>
      <trans-unit id="61490">
        <source>我们引入了全新的客户端 API，以实现控制台插件在客户端的可插拔性。</source>
        <target state="needs-translation">我们引入了全新的客户端 API，以实现控制台插件在客户端的可插拔性。</target>
      </trans-unit>
      <trans-unit id="61492">
        <source>这些改动也让我们得以提供全面的控制台体验。</source>
        <target state="needs-translation">这些改动也让我们得以提供全面的控制台体验。</target>
      </trans-unit>
      <trans-unit id="61494">
        <source>更多的控制台插件</source>
        <target state="needs-translation">更多的控制台插件</target>
      </trans-unit>
      <trans-unit id="61496">
        <source>在这个版本中我们优化了控制台系统，并将部分功能单独发布为新的插件。</source>
        <target state="needs-translation">在这个版本中我们优化了控制台系统，并将部分功能单独发布为新的插件。</target>
      </trans-unit>
      <trans-unit id="61498">
        <source>它们包括：</source>
        <target state="needs-translation">它们包括：</target>
      </trans-unit>
      <trans-unit id="61500">
        <source>[@koishijs/plugin-dataview](https://github.com/koishijs/koishi-plugin-dataview) (来自 status 插件)</source>
        <target state="needs-translation">[@koishijs/plugin-dataview](https://github.com/koishijs/koishi-plugin-dataview) (来自 status 插件)</target>
      </trans-unit>
      <trans-unit id="61502">
        <source>[@koishijs/plugin-insight](../plugins/console/insight.md) (来自 manager 插件)</source>
        <target state="needs-translation">[@koishijs/plugin-insight](../plugins/console/insight.md) (来自 manager 插件)</target>
      </trans-unit>
      <trans-unit id="61504">
        <source>[@koishijs/plugin-logger](../plugins/console/logger.md) (来自 status 插件)</source>
        <target state="needs-translation">[@koishijs/plugin-logger](../plugins/console/logger.md) (来自 status 插件)</target>
      </trans-unit>
      <trans-unit id="61506">
        <source>@koishijs/plugin-manager</source>
        <target state="needs-translation">@koishijs/plugin-manager</target>
      </trans-unit>
      <trans-unit id="61508">
        <source>@koishijs/plugin-manager 作为新人可能接触到的第一个插件，我们也大幅优化了它的能力，包括：</source>
        <target state="needs-translation">@koishijs/plugin-manager 作为新人可能接触到的第一个插件，我们也大幅优化了它的能力，包括：</target>
      </trans-unit>
      <trans-unit id="61510">
        <source>优化了暗色主题的配色方案</source>
        <target state="needs-translation">优化了暗色主题的配色方案</target>
      </trans-unit>
      <trans-unit id="61512">
        <source>表单支持了更多类型的 Schemastery 类型，基本完成了对常见表单类型的覆盖</source>
        <target state="needs-translation">表单支持了更多类型的 Schemastery 类型，基本完成了对常见表单类型的覆盖</target>
      </trans-unit>
      <trans-unit id="61514">
        <source>重构了插件市场的界面，使用卡片进行展示，并辅以搜索和标签功能</source>
        <target state="needs-translation">重构了插件市场的界面，使用卡片进行展示，并辅以搜索和标签功能</target>
      </trans-unit>
      <trans-unit id="61516">
        <source>新增了依赖管理界面，允许批量安装 / 更新 / 删除依赖</source>
        <target state="needs-translation">新增了依赖管理界面，允许批量安装 / 更新 / 删除依赖</target>
      </trans-unit>
      <trans-unit id="61518">
        <source>新增了机器人配置页面，支持了登录 / 下线 / 移除等操作</source>
        <target state="needs-translation">新增了机器人配置页面，支持了登录 / 下线 / 移除等操作</target>
      </trans-unit>
    </body>
  </file>
  <file id="1752" original="/[koishijs.docs] main/zh-CN/releases/v4.3.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="61520">
        <source>v4.3 版本介绍</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">v4.3 版本介紹</target>
      </trans-unit>
      <trans-unit id="61522">
        <source>[Roadmap](https://github.com/koishijs/koishi/issues/501)</source>
        <target state="needs-translation">[Roadmap](https://github.com/koishijs/koishi/issues/501)</target>
      </trans-unit>
      <trans-unit id="61524" translate="no">
        <source>[v4.2.1](https://github.com/koishijs/koishi/releases/tag/4.2.1)</source>
        <target>[v4.2.1](https://github.com/koishijs/koishi/releases/tag/4.2.1)</target>
      </trans-unit>
      <trans-unit id="61526" translate="no">
        <source>[v4.2.2](https://github.com/koishijs/koishi/releases/tag/4.2.2)</source>
        <target>[v4.2.2](https://github.com/koishijs/koishi/releases/tag/4.2.2)</target>
      </trans-unit>
      <trans-unit id="61528" translate="no">
        <source>[v4.3.0](https://github.com/koishijs/koishi/releases/tag/4.3.0)</source>
        <target>[v4.3.0](https://github.com/koishijs/koishi/releases/tag/4.3.0)</target>
      </trans-unit>
      <trans-unit id="61530" translate="no">
        <source>[v4.3.1](https://github.com/koishijs/koishi/releases/tag/4.3.1)</source>
        <target>[v4.3.1](https://github.com/koishijs/koishi/releases/tag/4.3.1)</target>
      </trans-unit>
      <trans-unit id="61532">
        <source>更好的群组支持</source>
        <target state="needs-translation">更好的群组支持</target>
      </trans-unit>
      <trans-unit id="61534">
        <source>部分插件需要访问群组数据而非频道数据 (例如 status 插件的发言统计功能)。</source>
        <target state="needs-translation">部分插件需要访问群组数据而非频道数据 (例如 status 插件的发言统计功能)。</target>
      </trans-unit>
      <trans-unit id="61536">
        <source>对于 Telegram 这类群组与频道统一的平台，我们只需要访问 `session.channel` 就可以，但是对于 Discord 这类群组与频道分离的平台，过去并没有很好的处理群组数据的办法。</source>
        <target state="needs-translation">对于 Telegram 这类群组与频道统一的平台，我们只需要访问 `session.channel` 就可以，但是对于 Discord 这类群组与频道分离的平台，过去并没有很好的处理群组数据的办法。</target>
      </trans-unit>
      <trans-unit id="61538">
        <source>为此，我们引入了 `session.guild` 属性。</source>
        <target state="needs-translation">为此，我们引入了 `session.guild` 属性。</target>
      </trans-unit>
      <trans-unit id="61540">
        <source>群组数据采用 Channel 的数据结构，并且也存储于同一张表中。</source>
        <target state="needs-translation">群组数据采用 Channel 的数据结构，并且也存储于同一张表中。</target>
      </trans-unit>
      <trans-unit id="61542">
        <source>我们为每一个 Channel 添加 `guildId` 属性，表示一个频道所在的群组。</source>
        <target state="needs-translation">我们为每一个 Channel 添加 `guildId` 属性，表示一个频道所在的群组。</target>
      </trans-unit>
      <trans-unit id="61544">
        <source>如果一个 Channel 实例的 `guildId` 属性等于自身 `id`，则其视为一个群组。</source>
        <target state="needs-translation">如果一个 Channel 实例的 `guildId` 属性等于自身 `id`，则其视为一个群组。</target>
      </trans-unit>
      <trans-unit id="61546">
        <source>如果某个平台的群组和频道概念重合，则对应的 `session.guild` 与 `session.channel` 一致。</source>
        <target state="needs-translation">如果某个平台的群组和频道概念重合，则对应的 `session.guild` 与 `session.channel` 一致。</target>
      </trans-unit>
      <trans-unit id="61548">
        <source>这种做法不仅解决了上文中所述的问题，实际上也修复了部分平台发送广播失败的问题。</source>
        <target state="needs-translation">这种做法不仅解决了上文中所述的问题，实际上也修复了部分平台发送广播失败的问题。</target>
      </trans-unit>
      <trans-unit id="61550">
        <source>在 QQ 频道中，发送频道消息不仅需要提供频道 ID，也需要同时提供群组 ID。</source>
        <target state="needs-translation">在 QQ 频道中，发送频道消息不仅需要提供频道 ID，也需要同时提供群组 ID。</target>
      </trans-unit>
      <trans-unit id="61552">
        <source>在过去的版本中，当发送广播时无法获得一个频道所在的群组，因此发送会失败。</source>
        <target state="needs-translation">在过去的版本中，当发送广播时无法获得一个频道所在的群组，因此发送会失败。</target>
      </trans-unit>
      <trans-unit id="61554">
        <source>经过这次的更新，此问题也被成功解决。</source>
        <target state="needs-translation">经过这次的更新，此问题也被成功解决。</target>
      </trans-unit>
      <trans-unit id="61556">
        <source>全新的控制台插件</source>
        <target state="needs-translation">全新的控制台插件</target>
      </trans-unit>
      <trans-unit id="61558">
        <source>在这个版本中，我们同样迎来了两个全新的控制台插件。</source>
        <target state="needs-translation">在这个版本中，我们同样迎来了两个全新的控制台插件。</target>
      </trans-unit>
      <trans-unit id="61560">
        <source>@koishijs/plugin-auth</source>
        <target state="needs-translation">@koishijs/plugin-auth</target>
      </trans-unit>
      <trans-unit id="61562">
        <source>用过 v3 控制台的用户一定熟悉账户功能。</source>
        <target state="needs-translation">用过 v3 控制台的用户一定熟悉账户功能。</target>
      </trans-unit>
      <trans-unit id="61564">
        <source>用户可以以密码或者验证码两种方式登录，并且所有的控制台功能都会受到权限等级的限制。</source>
        <target state="needs-translation">用户可以以密码或者验证码两种方式登录，并且所有的控制台功能都会受到权限等级的限制。</target>
      </trans-unit>
      <trans-unit id="61566">
        <source>虽然这种方式为可以让更多用户安全地接触到控制台，但是本身也为控制台的使用者带来了一定的门槛。</source>
        <target state="needs-translation">虽然这种方式为可以让更多用户安全地接触到控制台，但是本身也为控制台的使用者带来了一定的门槛。</target>
      </trans-unit>
      <trans-unit id="61568">
        <source>这是因为，要使用账户系统，就意味着用户已经安装了数据库服务，并且将自己设置为了管理员。</source>
        <target state="needs-translation">这是因为，要使用账户系统，就意味着用户已经安装了数据库服务，并且将自己设置为了管理员。</target>
      </trans-unit>
      <trans-unit id="61570">
        <source>然而 v4 中的控制台被设计成许多核心功能的桥梁，自然不应该有各种限制。</source>
        <target state="needs-translation">然而 v4 中的控制台被设计成许多核心功能的桥梁，自然不应该有各种限制。</target>
      </trans-unit>
      <trans-unit id="61572">
        <source>出于上述考虑，v4 的控制台默认情况下是没有账户系统的。</source>
        <target state="needs-translation">出于上述考虑，v4 的控制台默认情况下是没有账户系统的。</target>
      </trans-unit>
      <trans-unit id="61574">
        <source>但是我们也必须承认，账户功能和权限管理对于想要公开展示控制台的人来说是非常必要的功能。</source>
        <target state="needs-translation">但是我们也必须承认，账户功能和权限管理对于想要公开展示控制台的人来说是非常必要的功能。</target>
      </trans-unit>
      <trans-unit id="61576">
        <source>因此我们在新版本中也提供了 @koishijs/plugin-auth 插件，它作为一个控制台扩展支持了这套账户系统。</source>
        <target state="needs-translation">因此我们在新版本中也提供了 @koishijs/plugin-auth 插件，它作为一个控制台扩展支持了这套账户系统。</target>
      </trans-unit>
      <trans-unit id="61578">
        <source>安装了该插件的用户可以放心地将自己的控制台发布在公网中。</source>
        <target state="needs-translation">安装了该插件的用户可以放心地将自己的控制台发布在公网中。</target>
      </trans-unit>
      <trans-unit id="61580">
        <source>@koishijs/plugin-sandbox</source>
        <target state="needs-translation">@koishijs/plugin-sandbox</target>
      </trans-unit>
      <trans-unit id="61582">
        <source>与 auth 插件类似，近期加入的 sandbox 插件也对应着 v3 控制台中的内置功能。</source>
        <target state="needs-translation">与 auth 插件类似，近期加入的 sandbox 插件也对应着 v3 控制台中的内置功能。</target>
      </trans-unit>
      <trans-unit id="61584">
        <source>它提供了一个虚拟平台，使用者可以在这个平台中创建账户与机器人对话，以此调试机器人的各项功能。</source>
        <target state="needs-translation">它提供了一个虚拟平台，使用者可以在这个平台中创建账户与机器人对话，以此调试机器人的各项功能。</target>
      </trans-unit>
      <trans-unit id="61586">
        <source>不过在 v3 的基础上，我们加入了大量的新特性，不仅允许同时创建多个账户，也支持在群聊模式下进行对话。</source>
        <target state="needs-translation">不过在 v3 的基础上，我们加入了大量的新特性，不仅允许同时创建多个账户，也支持在群聊模式下进行对话。</target>
      </trans-unit>
      <trans-unit id="61588">
        <source>可以说基本覆盖了绝大部分被动型插件的使用场景。</source>
        <target state="needs-translation">可以说基本覆盖了绝大部分被动型插件的使用场景。</target>
      </trans-unit>
      <trans-unit id="61590">
        <source>v4 的新用户可能会对这个插件的功能感到有些迷惑，因为似乎已经有与这个插件类似的官方插件存在了。</source>
        <target state="needs-translation">v4 的新用户可能会对这个插件的功能感到有些迷惑，因为似乎已经有与这个插件类似的官方插件存在了。</target>
      </trans-unit>
      <trans-unit id="61592">
        <source>这里我们正好做一个对比：</source>
        <target state="needs-translation">这里我们正好做一个对比：</target>
      </trans-unit>
      <trans-unit id="61594">
        <source>sandbox 与 chat 的区别：</source>
        <target state="needs-translation">sandbox 与 chat 的区别：</target>
      </trans-unit>
      <trans-unit id="61596">
        <source>前者提供一个虚拟平台，使用者扮演平台用户与机器人对话</source>
        <target state="needs-translation">前者提供一个虚拟平台，使用者扮演平台用户与机器人对话</target>
      </trans-unit>
      <trans-unit id="61598">
        <source>后者则在真实平台中，使用者扮演的是实际的机器人账号</source>
        <target state="needs-translation">后者则在真实平台中，使用者扮演的是实际的机器人账号</target>
      </trans-unit>
      <trans-unit id="61600">
        <source>sandbox 与 mock 的区别：</source>
        <target state="needs-translation">sandbox 与 mock 的区别：</target>
      </trans-unit>
      <trans-unit id="61602">
        <source>前者是一个控制台插件，适合用 GUI 快速调试插件的功能，只适合调试被动型插件</source>
        <target state="needs-translation">前者是一个控制台插件，适合用 GUI 快速调试插件的功能，只适合调试被动型插件</target>
      </trans-unit>
      <trans-unit id="61604">
        <source>后者则更加强大和复杂，所有场景都能够胜任，一般结合单元测试框架在 CI 中使用</source>
        <target state="needs-translation">后者则更加强大和复杂，所有场景都能够胜任，一般结合单元测试框架在 CI 中使用</target>
      </trans-unit>
    </body>
  </file>
  <file id="1754" original="/[koishijs.docs] main/zh-CN/releases/v4.4.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="61606">
        <source>v4.4 版本介绍</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">v4.4 版本介紹</target>
      </trans-unit>
      <trans-unit id="61608">
        <source>[Roadmap](https://github.com/koishijs/koishi/issues/522)</source>
        <target state="needs-translation">[Roadmap](https://github.com/koishijs/koishi/issues/522)</target>
      </trans-unit>
      <trans-unit id="61610" translate="no">
        <source>[v4.3.2](https://github.com/koishijs/koishi/releases/tag/4.3.2)</source>
        <target>[v4.3.2](https://github.com/koishijs/koishi/releases/tag/4.3.2)</target>
      </trans-unit>
      <trans-unit id="61612" translate="no">
        <source>[v4.3.3](https://github.com/koishijs/koishi/releases/tag/4.3.3)</source>
        <target>[v4.3.3](https://github.com/koishijs/koishi/releases/tag/4.3.3)</target>
      </trans-unit>
      <trans-unit id="61614" translate="no">
        <source>[v4.4.0](https://github.com/koishijs/koishi/releases/tag/4.4.0)</source>
        <target>[v4.4.0](https://github.com/koishijs/koishi/releases/tag/4.4.0)</target>
      </trans-unit>
      <trans-unit id="61616">
        <source>命令行工具链</source>
        <target state="needs-translation">命令行工具链</target>
      </trans-unit>
      <trans-unit id="61618">
        <source>v4.3 到 v4.4 期间我们完善了整套命令行工具链，它们包括：</source>
        <target state="needs-translation">v4.3 到 v4.4 期间我们完善了整套命令行工具链，它们包括：</target>
      </trans-unit>
      <trans-unit id="61620">
        <source>create-koishi: 快速搭建模板项目，包含 Koishi 的大部分特性</source>
        <target state="needs-translation">create-koishi: 快速搭建模板项目，包含 Koishi 的大部分特性</target>
      </trans-unit>
      <trans-unit id="61622">
        <source>@koishijs/cli: Koishi 启动工具，提供了监视进程、热重载、环境变量等功能</source>
        <target state="needs-translation">@koishijs/cli: Koishi 启动工具，提供了监视进程、热重载、环境变量等功能</target>
      </trans-unit>
      <trans-unit id="61624">
        <source>@koishijs/scripts: 开发环境工具包，为插件开发与发布提供了一套便利指令</source>
        <target state="needs-translation">@koishijs/scripts: 开发环境工具包，为插件开发与发布提供了一套便利指令</target>
      </trans-unit>
      <trans-unit id="61626">
        <source>@koishijs/bootstrap: 快速创建生产环境，适用于 Docker 等云端部署场景</source>
        <target state="needs-translation">@koishijs/bootstrap: 快速创建生产环境，适用于 Docker 等云端部署场景</target>
      </trans-unit>
      <trans-unit id="61628">
        <source>参见：[工作区开发](../guide/develop/workspace.md)</source>
        <target state="needs-translation">参见：[工作区开发](../guide/develop/workspace.md)</target>
      </trans-unit>
      <trans-unit id="61630">
        <source>Schema 能力提升</source>
        <target state="needs-translation">Schema 能力提升</target>
      </trans-unit>
      <trans-unit id="61632">
        <source>同时，在近期的版本我们也大幅提升了 Schema 在网页控制台的表达能力。</source>
        <target state="needs-translation">同时，在近期的版本我们也大幅提升了 Schema 在网页控制台的表达能力。</target>
      </trans-unit>
      <trans-unit id="61634">
        <source>现在网页控制台的配置面板中已经可以正常显示 array, dict 和 object 类型的任意多级嵌套了</source>
        <target state="needs-translation">现在网页控制台的配置面板中已经可以正常显示 array, dict 和 object 类型的任意多级嵌套了</target>
      </trans-unit>
      <trans-unit id="61636">
        <source>我们还支持了 Schema 的递归表达，并且确保递归表达的 Schema 也能正常序列化和反序列化</source>
        <target state="needs-translation">我们还支持了 Schema 的递归表达，并且确保递归表达的 Schema 也能正常序列化和反序列化</target>
      </trans-unit>
      <trans-unit id="61638">
        <source>参见：[配置构型](../guide/plugin/schema.md)</source>
        <target state="needs-translation">参见：[配置构型](../guide/plugin/schema.md)</target>
      </trans-unit>
    </body>
  </file>
  <file id="1756" original="/[koishijs.docs] main/zh-CN/releases/v4.5.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="61640">
        <source>v4.5 版本介绍</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">v4.5 版本介紹</target>
      </trans-unit>
      <trans-unit id="61642">
        <source>[Roadmap](https://github.com/koishijs/koishi/issues/552)</source>
        <target state="needs-translation">[Roadmap](https://github.com/koishijs/koishi/issues/552)</target>
      </trans-unit>
      <trans-unit id="61644" translate="no">
        <source>[v4.4.1](https://github.com/koishijs/koishi/releases/tag/4.4.1)</source>
        <target>[v4.4.1](https://github.com/koishijs/koishi/releases/tag/4.4.1)</target>
      </trans-unit>
      <trans-unit id="61646" translate="no">
        <source>[v4.4.2](https://github.com/koishijs/koishi/releases/tag/4.4.2)</source>
        <target>[v4.4.2](https://github.com/koishijs/koishi/releases/tag/4.4.2)</target>
      </trans-unit>
      <trans-unit id="61648" translate="no">
        <source>[v4.5.0](https://github.com/koishijs/koishi/releases/tag/4.5.0)</source>
        <target>[v4.5.0](https://github.com/koishijs/koishi/releases/tag/4.5.0)</target>
      </trans-unit>
      <trans-unit id="61650">
        <source>多语言支持</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">多語言支援</target>
      </trans-unit>
      <trans-unit id="61652">
        <source>如果你在运营一个大型社区，那么你可能会遇到这种场景：群组内设立了许多不同语言的频道，每个频道分别供不同地区的用户进行交流。</source>
        <target state="needs-translation">如果你在运营一个大型社区，那么你可能会遇到这种场景：群组内设立了许多不同语言的频道，每个频道分别供不同地区的用户进行交流。</target>
      </trans-unit>
      <trans-unit id="61654">
        <source>在这种情况下，最合适的做法是让你的机器人在不同的频道下使用不同的语言进行回复。</source>
        <target state="needs-translation">在这种情况下，最合适的做法是让你的机器人在不同的频道下使用不同的语言进行回复。</target>
      </trans-unit>
      <trans-unit id="61656">
        <source>本质上，这不会改变机器人的运行逻辑，因此最好的做法是将涉及的每一段文本都抽离出来，通过统一的方式进行管理，并在发送前进行本地化渲染。</source>
        <target state="needs-translation">本质上，这不会改变机器人的运行逻辑，因此最好的做法是将涉及的每一段文本都抽离出来，通过统一的方式进行管理，并在发送前进行本地化渲染。</target>
      </trans-unit>
      <trans-unit id="61658">
        <source>为此，Koishi 提供了一套新的 API：你可以使用 `ctx.i18n.define()` 定义多语言翻译，并通过 `session.text()` 渲染本地化文本。</source>
        <target state="needs-translation">为此，Koishi 提供了一套新的 API：你可以使用 `ctx.i18n.define()` 定义多语言翻译，并通过 `session.text()` 渲染本地化文本。</target>
      </trans-unit>
      <trans-unit id="61660">
        <source>这套系统默认会依次读取频道语言、群组语言、用户语言和默认配置，并执行一套回退机制。</source>
        <target state="needs-translation">这套系统默认会依次读取频道语言、群组语言、用户语言和默认配置，并执行一套回退机制。</target>
      </trans-unit>
      <trans-unit id="61662">
        <source>在渲染方面，这套系统不仅将继承过去 Template API 的插值语法，而且在此基础上加入了渲染预设机制，能够帮助处理单复数、列表渲染、随机渲染等更多复杂场景。</source>
        <target state="needs-translation">在渲染方面，这套系统不仅将继承过去 Template API 的插值语法，而且在此基础上加入了渲染预设机制，能够帮助处理单复数、列表渲染、随机渲染等更多复杂场景。</target>
      </trans-unit>
      <trans-unit id="61664">
        <source>为了更好地实现代码解耦，我们还加入了本地翻译文件的支持。</source>
        <target state="needs-translation">为了更好地实现代码解耦，我们还加入了本地翻译文件的支持。</target>
      </trans-unit>
      <trans-unit id="61666">
        <source>你可以创建一个 locales 目录并在其中按语言名称建立相应的文件，随后只需在插件中引入他们即可。</source>
        <target state="needs-translation">你可以创建一个 locales 目录并在其中按语言名称建立相应的文件，随后只需在插件中引入他们即可。</target>
      </trans-unit>
      <trans-unit id="61668">
        <source>同时，我们也提供了一套多语言指令帮助的编写规范，这样一来不仅所有的翻译文本都不需要写在源代码中，而且用户也可以更加方便地覆盖插件内置的文本。</source>
        <target state="needs-translation">同时，我们也提供了一套多语言指令帮助的编写规范，这样一来不仅所有的翻译文本都不需要写在源代码中，而且用户也可以更加方便地覆盖插件内置的文本。</target>
      </trans-unit>
      <trans-unit id="61670">
        <source>参见：[多语言支持](../guide/i18n/index.md)</source>
        <target state="needs-translation">参见：[多语言支持](../guide/i18n/index.md)</target>
      </trans-unit>
      <trans-unit id="61672">
        <source>数据模型支持嵌套属性</source>
        <target state="needs-translation">数据模型支持嵌套属性</target>
      </trans-unit>
      <trans-unit id="61674">
        <source>许多插件都会通过扩展数据模型的方式来实现自己所需的功能。</source>
        <target state="needs-translation">许多插件都会通过扩展数据模型的方式来实现自己所需的功能。</target>
      </trans-unit>
      <trans-unit id="61676">
        <source>除了创建新的表外，一部分插件也会选择扩展已有数据表中的字段。</source>
        <target state="needs-translation">除了创建新的表外，一部分插件也会选择扩展已有数据表中的字段。</target>
      </trans-unit>
      <trans-unit id="61678">
        <source>如果插件提供了多个字段，就需要考虑扩展字段的冲突问题。</source>
        <target state="needs-translation">如果插件提供了多个字段，就需要考虑扩展字段的冲突问题。</target>
      </trans-unit>
      <trans-unit id="61680">
        <source>在过去的版本中，插件开发者只能通过将这些字段名起长一些来规避冲突，但这同样也会让开发变得有些麻烦。</source>
        <target state="needs-translation">在过去的版本中，插件开发者只能通过将这些字段名起长一些来规避冲突，但这同样也会让开发变得有些麻烦。</target>
      </trans-unit>
      <trans-unit id="61682">
        <source>在这次的新版本中，我们支持了数据模型的嵌套属性来解决这个问题。</source>
        <target state="needs-translation">在这次的新版本中，我们支持了数据模型的嵌套属性来解决这个问题。</target>
      </trans-unit>
      <trans-unit id="61684">
        <source>下面是一个简单的例子：</source>
        <target state="needs-translation">下面是一个简单的例子：</target>
      </trans-unit>
      <trans-unit id="61686">
        <source>ctx.model.extend('user', {
  'github.accessToken': 'string',
  'github.refreshToken': 'string',
})

const user = await ctx.database.get('user', ['github'])
user.github.accessToken // string</source>
        <target state="needs-translation">ctx.model.extend('user', {
  'github.accessToken': 'string',
  'github.refreshToken': 'string',
})

const user = await ctx.database.get('user', ['github'])
user.github.accessToken // string</target>
      </trans-unit>
      <trans-unit id="61688">
        <source>可以看到，我们在 `user` 数据模型中扩展了两个字段，它们都有一个公共的 `github.` 前缀。</source>
        <target state="needs-translation">可以看到，我们在 `user` 数据模型中扩展了两个字段，它们都有一个公共的 `github.` 前缀。</target>
      </trans-unit>
      <trans-unit id="61690">
        <source>尽管它们在存储上依旧可以有独立的类型和默认值，但是开发者只需通过一个简单的 github 属性便可访问它们。</source>
        <target state="needs-translation">尽管它们在存储上依旧可以有独立的类型和默认值，但是开发者只需通过一个简单的 github 属性便可访问它们。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1758" original="/[koishijs.docs] main/zh-CN/releases/v4.6.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="61692">
        <source>v4.6 版本介绍</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">v4.6 版本介紹</target>
      </trans-unit>
      <trans-unit id="61694">
        <source>[Roadmap (Part 1)](https://github.com/koishijs/koishi/issues/578)</source>
        <target state="needs-translation">[Roadmap (Part 1)](https://github.com/koishijs/koishi/issues/578)</target>
      </trans-unit>
      <trans-unit id="61696" translate="no">
        <source>[v4.5.1](https://github.com/koishijs/koishi/releases/tag/4.5.1)</source>
        <target>[v4.5.1](https://github.com/koishijs/koishi/releases/tag/4.5.1)</target>
      </trans-unit>
      <trans-unit id="61698" translate="no">
        <source>[v4.5.2](https://github.com/koishijs/koishi/releases/tag/4.5.2)</source>
        <target>[v4.5.2](https://github.com/koishijs/koishi/releases/tag/4.5.2)</target>
      </trans-unit>
      <trans-unit id="61700" translate="no">
        <source>[v4.6.0](https://github.com/koishijs/koishi/releases/tag/4.6.0)</source>
        <target>[v4.6.0](https://github.com/koishijs/koishi/releases/tag/4.6.0)</target>
      </trans-unit>
      <trans-unit id="61702">
        <source>[Roadmap (Part 2)](https://github.com/koishijs/koishi/issues/615)</source>
        <target state="needs-translation">[Roadmap (Part 2)](https://github.com/koishijs/koishi/issues/615)</target>
      </trans-unit>
      <trans-unit id="61704" translate="no">
        <source>[v4.6.1](https://github.com/koishijs/koishi/releases/tag/4.6.1)</source>
        <target>[v4.6.1](https://github.com/koishijs/koishi/releases/tag/4.6.1)</target>
      </trans-unit>
      <trans-unit id="61706" translate="no">
        <source>[v4.6.2](https://github.com/koishijs/koishi/releases/tag/4.6.2)</source>
        <target>[v4.6.2](https://github.com/koishijs/koishi/releases/tag/4.6.2)</target>
      </trans-unit>
      <trans-unit id="61708" translate="no">
        <source>[v4.6.3](https://github.com/koishijs/koishi/releases/tag/4.6.3)</source>
        <target>[v4.6.3](https://github.com/koishijs/koishi/releases/tag/4.6.3)</target>
      </trans-unit>
      <trans-unit id="61710">
        <source>版本规划调整</source>
        <target state="needs-translation">版本规划调整</target>
      </trans-unit>
      <trans-unit id="61712">
        <source>如你所见，我们调整了 minor 版本的规划。</source>
        <target state="needs-translation">如你所见，我们调整了 minor 版本的规划。</target>
      </trans-unit>
      <trans-unit id="61714">
        <source>在此之前，每个 minor 版本的规划是从前一个 minor 版本发布后开始计算的；而从 v4.6 开始，每个 minor 版本的规划将会计算到下一个 minor 版本发布之前。</source>
        <target state="needs-translation">在此之前，每个 minor 版本的规划是从前一个 minor 版本发布后开始计算的；而从 v4.6 开始，每个 minor 版本的规划将会计算到下一个 minor 版本发布之前。</target>
      </trans-unit>
      <trans-unit id="61716">
        <source>同时，未来的每个 minor 版本也将会包含更多的 patch 版本，每个 patch 版本的发布周期暂定为一周。</source>
        <target state="needs-translation">同时，未来的每个 minor 版本也将会包含更多的 patch 版本，每个 patch 版本的发布周期暂定为一周。</target>
      </trans-unit>
      <trans-unit id="61718">
        <source>更强大的 ORM</source>
        <target state="needs-translation">更强大的 ORM</target>
      </trans-unit>
      <trans-unit id="61720">
        <source>在这个版本中，我们将 ORM 相关功能移至了一个新仓库 cosmotype (后更名为 minato) 中。</source>
        <target state="needs-translation">在这个版本中，我们将 ORM 相关功能移至了一个新仓库 cosmotype (后更名为 minato) 中。</target>
      </trans-unit>
      <trans-unit id="61722">
        <source>在完成与 Koishi 的解耦的同时，我们也引入了全新的 Selection API 和 Evaluation Callback。</source>
        <target state="needs-translation">在完成与 Koishi 的解耦的同时，我们也引入了全新的 Selection API 和 Evaluation Callback。</target>
      </trans-unit>
      <trans-unit id="61724">
        <source>这些新功能将允许包括连接在内的更多高级数据库操作。</source>
        <target state="needs-translation">这些新功能将允许包括连接在内的更多高级数据库操作。</target>
      </trans-unit>
      <trans-unit id="61726">
        <source>与此同时，我们也增加和细化了许多单元测试，并完善了初始化和空值判断相关的各项功能。</source>
        <target state="needs-translation">与此同时，我们也增加和细化了许多单元测试，并完善了初始化和空值判断相关的各项功能。</target>
      </trans-unit>
      <trans-unit id="61728">
        <source>参见：[Query Builder Roadmap](https://github.com/koishijs/koishi/issues/595)</source>
        <target state="needs-translation">参见：[Query Builder Roadmap](https://github.com/koishijs/koishi/issues/595)</target>
      </trans-unit>
      <trans-unit id="61730">
        <source>功能解耦</source>
        <target state="needs-translation">功能解耦</target>
      </trans-unit>
      <trans-unit id="61732">
        <source>在两年多的开发过程中，Koishi 已经成长为一个综合性框架了，其中的许多功能完全可以独立成库。</source>
        <target state="needs-translation">在两年多的开发过程中，Koishi 已经成长为一个综合性框架了，其中的许多功能完全可以独立成库。</target>
      </trans-unit>
      <trans-unit id="61734">
        <source>而实际上 Koishi 中的很多模块都可以或已经被用于其他项目中。</source>
        <target state="needs-translation">而实际上 Koishi 中的很多模块都可以或已经被用于其他项目中。</target>
      </trans-unit>
      <trans-unit id="61736">
        <source>正是考虑到这些情况，除了 ORM 以外，我们也解耦了其他一些功能，例如 [reggol](https://github.com/shigma/reggol)，[ns-require](https://github.com/shigma/ns-require) 和 [yakumo](https://github.com/shigma/yakumo) 等。</source>
        <target state="needs-translation">正是考虑到这些情况，除了 ORM 以外，我们也解耦了其他一些功能，例如 [reggol](https://github.com/shigma/reggol)，[ns-require](https://github.com/shigma/ns-require) 和 [yakumo](https://github.com/shigma/yakumo) 等。</target>
      </trans-unit>
      <trans-unit id="61738">
        <source>在未来的版本中，我们也将对 Koishi 的核心功能进行拆分，以便满足更多开发者的需求，敬请期待。</source>
        <target state="needs-translation">在未来的版本中，我们也将对 Koishi 的核心功能进行拆分，以便满足更多开发者的需求，敬请期待。</target>
      </trans-unit>
      <trans-unit id="61740">
        <source>除此以外，部分大型官方插件也被拆分至独立的仓库，例如 [eval](https://github.com/koishijs/koishi-plugin-eval), [github](https://github.com/koishijs/koishi-plugin-github) 和 [teach](https://github.com/koishijs/koishi-plugin-dialogue) 等。</source>
        <target state="needs-translation">除此以外，部分大型官方插件也被拆分至独立的仓库，例如 [eval](https://github.com/koishijs/koishi-plugin-eval), [github](https://github.com/koishijs/koishi-plugin-github) 和 [teach](https://github.com/koishijs/koishi-plugin-dialogue) 等。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1760" original="/[koishijs.docs] main/zh-CN/releases/v4.7.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="61742">
        <source>v4.7 版本介绍</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">v4.7 版本介紹</target>
      </trans-unit>
      <trans-unit id="61744">
        <source>[Roadmap](https://github.com/koishijs/koishi/issues/662)</source>
        <target state="needs-translation">[Roadmap](https://github.com/koishijs/koishi/issues/662)</target>
      </trans-unit>
      <trans-unit id="61746" translate="no">
        <source>[v4.7.0](https://github.com/koishijs/koishi/releases/tag/4.7.0)</source>
        <target>[v4.7.0](https://github.com/koishijs/koishi/releases/tag/4.7.0)</target>
      </trans-unit>
      <trans-unit id="61748" translate="no">
        <source>[v4.7.1](https://github.com/koishijs/koishi/releases/tag/4.7.1)</source>
        <target>[v4.7.1](https://github.com/koishijs/koishi/releases/tag/4.7.1)</target>
      </trans-unit>
      <trans-unit id="61750" translate="no">
        <source>[v4.7.2](https://github.com/koishijs/koishi/releases/tag/4.7.2)</source>
        <target>[v4.7.2](https://github.com/koishijs/koishi/releases/tag/4.7.2)</target>
      </trans-unit>
      <trans-unit id="61752" translate="no">
        <source>[v4.7.3](https://github.com/koishijs/koishi/releases/tag/4.7.3)</source>
        <target>[v4.7.3](https://github.com/koishijs/koishi/releases/tag/4.7.3)</target>
      </trans-unit>
      <trans-unit id="61754" translate="no">
        <source>[v4.7.4](https://github.com/koishijs/koishi/releases/tag/4.7.4)</source>
        <target>[v4.7.4](https://github.com/koishijs/koishi/releases/tag/4.7.4)</target>
      </trans-unit>
      <trans-unit id="61756" translate="no">
        <source>[v4.7.5](https://github.com/koishijs/koishi/releases/tag/4.7.5)</source>
        <target>[v4.7.5](https://github.com/koishijs/koishi/releases/tag/4.7.5)</target>
      </trans-unit>
      <trans-unit id="61758" translate="no">
        <source>[v4.7.6](https://github.com/koishijs/koishi/releases/tag/4.7.6)</source>
        <target>[v4.7.6](https://github.com/koishijs/koishi/releases/tag/4.7.6)</target>
      </trans-unit>
      <trans-unit id="61760">
        <source>可重用插件</source>
        <target state="needs-translation">可重用插件</target>
      </trans-unit>
      <trans-unit id="61762">
        <source>在这个版本中，我们将 Koishi 的核心框架迁命名为 [Cordis](https://github.com/shigma/cordis)，并迁移到了新的仓库。</source>
        <target state="needs-translation">在这个版本中，我们将 Koishi 的核心框架迁命名为 [Cordis](https://github.com/shigma/cordis)，并迁移到了新的仓库。</target>
      </trans-unit>
      <trans-unit id="61764">
        <source>这个框架包含了 Koishi 的诸多核心功能，包括上下文、插件系统、事件模型等等。</source>
        <target state="needs-translation">这个框架包含了 Koishi 的诸多核心功能，包括上下文、插件系统、事件模型等等。</target>
      </trans-unit>
      <trans-unit id="61766">
        <source>同时，我们也提供了一套方案用于解决插件的多次加载问题。</source>
        <target state="needs-translation">同时，我们也提供了一套方案用于解决插件的多次加载问题。</target>
      </trans-unit>
      <trans-unit id="61768">
        <source>在过去，一个插件同时只有一次加载是有效的。</source>
        <target state="needs-translation">在过去，一个插件同时只有一次加载是有效的。</target>
      </trans-unit>
      <trans-unit id="61770">
        <source>当一个插件已处于运行状态时，再次加载将没有任何效果。</source>
        <target state="needs-translation">当一个插件已处于运行状态时，再次加载将没有任何效果。</target>
      </trans-unit>
      <trans-unit id="61772">
        <source>然而部分插件确实存在多次加载的需求，比如适配器插件。</source>
        <target state="needs-translation">然而部分插件确实存在多次加载的需求，比如适配器插件。</target>
      </trans-unit>
      <trans-unit id="61774">
        <source>为此，我们提出了插件作用域的概念。</source>
        <target state="needs-translation">为此，我们提出了插件作用域的概念。</target>
      </trans-unit>
      <trans-unit id="61776">
        <source>每个上下文都有自己所绑定的作用域，当作用域被卸载时，对应的上下文上的副作用也会被一并清除。</source>
        <target state="needs-translation">每个上下文都有自己所绑定的作用域，当作用域被卸载时，对应的上下文上的副作用也会被一并清除。</target>
      </trans-unit>
      <trans-unit id="61778">
        <source>同时，我们引入了一个新的生命周期事件 `fork`。</source>
        <target state="needs-translation">同时，我们引入了一个新的生命周期事件 `fork`。</target>
      </trans-unit>
      <trans-unit id="61780">
        <source>它将在一个插件每一次加载时出发。</source>
        <target state="needs-translation">它将在一个插件每一次加载时出发。</target>
      </trans-unit>
      <trans-unit id="61782">
        <source>由此便可以实现插件的重用，同时无需担心影响过去的插件行为。</source>
        <target state="needs-translation">由此便可以实现插件的重用，同时无需担心影响过去的插件行为。</target>
      </trans-unit>
      <trans-unit id="61784">
        <source>新版插件市场</source>
        <target state="needs-translation">新版插件市场</target>
      </trans-unit>
      <trans-unit id="61786">
        <source>与此同时，我们也编写了全新的 market 和 insight 插件，提供了更好的插件安装和配置体验。</source>
        <target state="needs-translation">与此同时，我们也编写了全新的 market 和 insight 插件，提供了更好的插件安装和配置体验。</target>
      </trans-unit>
      <trans-unit id="61788">
        <source>首先，与过去扁平化的管理机制不同，我们推出了插件组的概念。</source>
        <target state="needs-translation">首先，与过去扁平化的管理机制不同，我们推出了插件组的概念。</target>
      </trans-unit>
      <trans-unit id="61790">
        <source>在配置界面中，我们也使用树形结构显示每一个插件和插件组。</source>
        <target state="needs-translation">在配置界面中，我们也使用树形结构显示每一个插件和插件组。</target>
      </trans-unit>
      <trans-unit id="61792">
        <source>用户可以根据自己的需要对插件组进行更名、折叠和展开。</source>
        <target state="needs-translation">用户可以根据自己的需要对插件组进行更名、折叠和展开。</target>
      </trans-unit>
      <trans-unit id="61794">
        <source>在依赖图方面，我们也重构了 UI，改为使用力导向图展示插件之间的依赖关系。</source>
        <target state="needs-translation">在依赖图方面，我们也重构了 UI，改为使用力导向图展示插件之间的依赖关系。</target>
      </trans-unit>
      <trans-unit id="61796">
        <source>此外，我们允许插件开发在在 `package.json` 中提供 `koishi` 属性以声明插件的元信息。</source>
        <target state="needs-translation">此外，我们允许插件开发在在 `package.json` 中提供 `koishi` 属性以声明插件的元信息。</target>
      </trans-unit>
      <trans-unit id="61798">
        <source>这些信息将被插件市场自动读取，并提供更好的安装提示。</source>
        <target state="needs-translation">这些信息将被插件市场自动读取，并提供更好的安装提示。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1762" original="/[koishijs.docs] main/zh-CN/releases/v4.8.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="61800">
        <source>v4.8 版本介绍</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">v4.8 版本介紹</target>
      </trans-unit>
      <trans-unit id="61802">
        <source>[Roadmap](https://github.com/koishijs/koishi/issues/725)</source>
        <target state="needs-translation">[Roadmap](https://github.com/koishijs/koishi/issues/725)</target>
      </trans-unit>
      <trans-unit id="61804" translate="no">
        <source>[v4.8.0](https://github.com/koishijs/koishi/releases/tag/4.8.0)</source>
        <target>[v4.8.0](https://github.com/koishijs/koishi/releases/tag/4.8.0)</target>
      </trans-unit>
      <trans-unit id="61806" translate="no">
        <source>[v4.8.1](https://github.com/koishijs/koishi/releases/tag/4.8.1)</source>
        <target>[v4.8.1](https://github.com/koishijs/koishi/releases/tag/4.8.1)</target>
      </trans-unit>
      <trans-unit id="61808" translate="no">
        <source>[v4.8.2](https://github.com/koishijs/koishi/releases/tag/4.8.2)</source>
        <target>[v4.8.2](https://github.com/koishijs/koishi/releases/tag/4.8.2)</target>
      </trans-unit>
      <trans-unit id="61810" translate="no">
        <source>[v4.8.3](https://github.com/koishijs/koishi/releases/tag/4.8.3)</source>
        <target>[v4.8.3](https://github.com/koishijs/koishi/releases/tag/4.8.3)</target>
      </trans-unit>
      <trans-unit id="61812" translate="no">
        <source>[v4.8.4](https://github.com/koishijs/koishi/releases/tag/4.8.4)</source>
        <target>[v4.8.4](https://github.com/koishijs/koishi/releases/tag/4.8.4)</target>
      </trans-unit>
      <trans-unit id="61814" translate="no">
        <source>[v4.8.5](https://github.com/koishijs/koishi/releases/tag/4.8.5)</source>
        <target>[v4.8.5](https://github.com/koishijs/koishi/releases/tag/4.8.5)</target>
      </trans-unit>
      <trans-unit id="61816" translate="no">
        <source>[v4.8.6](https://github.com/koishijs/koishi/releases/tag/4.8.6)</source>
        <target>[v4.8.6](https://github.com/koishijs/koishi/releases/tag/4.8.6)</target>
      </trans-unit>
      <trans-unit id="61818" translate="no">
        <source>[v4.8.7](https://github.com/koishijs/koishi/releases/tag/4.8.7)</source>
        <target>[v4.8.7](https://github.com/koishijs/koishi/releases/tag/4.8.7)</target>
      </trans-unit>
      <trans-unit id="61820">
        <source>通用适配器协议</source>
        <target state="needs-translation">通用适配器协议</target>
      </trans-unit>
      <trans-unit id="61822">
        <source>这个版本中，我们引入了全新的通用聊天协议 Satori，并将现有的适配器插件迁移到了新的组织下。</source>
        <target state="needs-translation">这个版本中，我们引入了全新的通用聊天协议 Satori，并将现有的适配器插件迁移到了新的组织下。</target>
      </trans-unit>
      <trans-unit id="61824">
        <source>与现有的通用聊天协议相比，Satori 有以下优势：</source>
        <target state="needs-translation">与现有的通用聊天协议相比，Satori 有以下优势：</target>
      </trans-unit>
      <trans-unit id="61826">
        <source>抛弃历史包袱，设计了更加通用的接口，并不与任何特定平台绑定</source>
        <target state="needs-translation">抛弃历史包袱，设计了更加通用的接口，并不与任何特定平台绑定</target>
      </trans-unit>
      <trans-unit id="61828">
        <source>将自身定位为聊天协议而非机器人框架，因而更加轻量，也有更多的应用场景</source>
        <target state="needs-translation">将自身定位为聊天协议而非机器人框架，因而更加轻量，也有更多的应用场景</target>
      </trans-unit>
      <trans-unit id="61830">
        <source>同时，我们也调整了适配器 / 机器人的 API，使每一个适配器插件都成为可重用的插件，再次优化了交互体验。</source>
        <target state="needs-translation">同时，我们也调整了适配器 / 机器人的 API，使每一个适配器插件都成为可重用的插件，再次优化了交互体验。</target>
      </trans-unit>
      <trans-unit id="61832">
        <source>全新的控制台界面</source>
        <target state="needs-translation">全新的控制台界面</target>
      </trans-unit>
      <trans-unit id="61834">
        <source>我们为控制台相关插件创建了一个新仓库 [koishijs/webui](https://github.com/koishijs/webui) 中，并且为这些插件都发布了新的大版本，主要包含以下变更：</source>
        <target state="needs-translation">我们为控制台相关插件创建了一个新仓库 [koishijs/webui](https://github.com/koishijs/webui) 中，并且为这些插件都发布了新的大版本，主要包含以下变更：</target>
      </trans-unit>
      <trans-unit id="61836">
        <source>设计了全新的 UI，能够更好地承载多样化的功能，并且更加适配原生应用</source>
        <target state="needs-translation">设计了全新的 UI，能够更好地承载多样化的功能，并且更加适配原生应用</target>
      </trans-unit>
      <trans-unit id="61838">
        <source>新增了屏幕底部的状态栏，可用于显示登录信息、负载状态、版本信息等</source>
        <target state="needs-translation">新增了屏幕底部的状态栏，可用于显示登录信息、负载状态、版本信息等</target>
      </trans-unit>
      <trans-unit id="61840">
        <source>提供了专门的欢迎界面，并为大部分功能提供了移动端适配</source>
        <target state="needs-translation">提供了专门的欢迎界面，并为大部分功能提供了移动端适配</target>
      </trans-unit>
    </body>
  </file>
  <file id="1764" original="/[koishijs.docs] main/zh-CN/releases/v4.9.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="61842">
        <source>v4.9 版本介绍</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">v4.9 版本介紹</target>
      </trans-unit>
      <trans-unit id="61844">
        <source>[Roadmap](https://github.com/koishijs/koishi/issues/790)</source>
        <target state="needs-translation">[Roadmap](https://github.com/koishijs/koishi/issues/790)</target>
      </trans-unit>
      <trans-unit id="61846" translate="no">
        <source>[v4.9.0](https://github.com/koishijs/koishi/releases/tag/4.9.0)</source>
        <target>[v4.9.0](https://github.com/koishijs/koishi/releases/tag/4.9.0)</target>
      </trans-unit>
      <trans-unit id="61848" translate="no">
        <source>[v4.9.1](https://github.com/koishijs/koishi/releases/tag/4.9.1)</source>
        <target>[v4.9.1](https://github.com/koishijs/koishi/releases/tag/4.9.1)</target>
      </trans-unit>
      <trans-unit id="61850" translate="no">
        <source>[v4.9.2](https://github.com/koishijs/koishi/releases/tag/4.9.2)</source>
        <target>[v4.9.2](https://github.com/koishijs/koishi/releases/tag/4.9.2)</target>
      </trans-unit>
      <trans-unit id="61852" translate="no">
        <source>[v4.9.3](https://github.com/koishijs/koishi/releases/tag/4.9.3)</source>
        <target>[v4.9.3](https://github.com/koishijs/koishi/releases/tag/4.9.3)</target>
      </trans-unit>
      <trans-unit id="61854" translate="no">
        <source>[v4.9.4](https://github.com/koishijs/koishi/releases/tag/4.9.4)</source>
        <target>[v4.9.4](https://github.com/koishijs/koishi/releases/tag/4.9.4)</target>
      </trans-unit>
      <trans-unit id="61856" translate="no">
        <source>[v4.9.5](https://github.com/koishijs/koishi/releases/tag/4.9.5)</source>
        <target>[v4.9.5](https://github.com/koishijs/koishi/releases/tag/4.9.5)</target>
      </trans-unit>
      <trans-unit id="61858" translate="no">
        <source>[v4.9.6](https://github.com/koishijs/koishi/releases/tag/4.9.6)</source>
        <target>[v4.9.6](https://github.com/koishijs/koishi/releases/tag/4.9.6)</target>
      </trans-unit>
      <trans-unit id="61860" translate="no">
        <source>[v4.9.7](https://github.com/koishijs/koishi/releases/tag/4.9.7)</source>
        <target>[v4.9.7](https://github.com/koishijs/koishi/releases/tag/4.9.7)</target>
      </trans-unit>
      <trans-unit id="61862">
        <source>消息元素</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">訊息元素</target>
      </trans-unit>
      <trans-unit id="61864">
        <source>在这个版本中，我们引入了消息元素，作为 Satori 的新的消息格式。</source>
        <target state="needs-translation">在这个版本中，我们引入了消息元素，作为 Satori 的新的消息格式。</target>
      </trans-unit>
      <trans-unit id="61866">
        <source>消息元素是拥有类似 XML 的结构，由标签、属性和内容组成。</source>
        <target state="needs-translation">消息元素是拥有类似 XML 的结构，由标签、属性和内容组成。</target>
      </trans-unit>
      <trans-unit id="61868">
        <source>与过去所使用的 CQ 码相比，消息元素有以下优势：</source>
        <target state="needs-translation">与过去所使用的 CQ 码相比，消息元素有以下优势：</target>
      </trans-unit>
      <trans-unit id="61870">
        <source>更加通用，不与任何特定平台耦合，编码规范也与主流实践相符</source>
        <target state="needs-translation">更加通用，不与任何特定平台耦合，编码规范也与主流实践相符</target>
      </trans-unit>
      <trans-unit id="61872">
        <source>可以表达多层的结构，从而适配了 Matrix 等支持富文本的平台</source>
        <target state="needs-translation">可以表达多层的结构，从而适配了 Matrix 等支持富文本的平台</target>
      </trans-unit>
      <trans-unit id="61874">
        <source>具有更强的扩展性，未来还可以支持模板渲染等高级特性</source>
        <target state="needs-translation">具有更强的扩展性，未来还可以支持模板渲染等高级特性</target>
      </trans-unit>
      <trans-unit id="61876">
        <source>细粒度的热重载</source>
        <target state="needs-translation">细粒度的热重载</target>
      </trans-unit>
      <trans-unit id="61878">
        <source>我们还引入了更细粒度的热重载功能：当你在运行时通过配置文件或控制台，修改某个插件或全局的部分配置时，会根据这个配置的具体功能决定是否需要重载插件或整个应用。</source>
        <target state="needs-translation">我们还引入了更细粒度的热重载功能：当你在运行时通过配置文件或控制台，修改某个插件或全局的部分配置时，会根据这个配置的具体功能决定是否需要重载插件或整个应用。</target>
      </trans-unit>
      <trans-unit id="61880">
        <source>开发者可以声明自己插件的具体哪些配置项应该触发重载，以及不触发重载的配置项被修改时的回调函数。</source>
        <target state="needs-translation">开发者可以声明自己插件的具体哪些配置项应该触发重载，以及不触发重载的配置项被修改时的回调函数。</target>
      </trans-unit>
      <trans-unit id="61882">
        <source>基于这个特性，我们也大幅优化了 @koishijs/loader 的加载逻辑，使得插件组本身也成为了真正的插件。</source>
        <target state="needs-translation">基于这个特性，我们也大幅优化了 @koishijs/loader 的加载逻辑，使得插件组本身也成为了真正的插件。</target>
      </trans-unit>
      <trans-unit id="61884">
        <source>用户登录优化</source>
        <target state="needs-translation">用户登录优化</target>
      </trans-unit>
      <trans-unit id="61886">
        <source>这个版本也同样迎来了 auth 插件的一些更新：</source>
        <target state="needs-translation">这个版本也同样迎来了 auth 插件的一些更新：</target>
      </trans-unit>
      <trans-unit id="61888">
        <source>优化了个人信息界面，支持了跨平台用户绑定功能</source>
        <target state="needs-translation">优化了个人信息界面，支持了跨平台用户绑定功能</target>
      </trans-unit>
      <trans-unit id="61890">
        <source>支持自动创建初始管理员用户，一定程度上避免了盲目启用插件而导致无法登录的问题</source>
        <target state="needs-translation">支持自动创建初始管理员用户，一定程度上避免了盲目启用插件而导致无法登录的问题</target>
      </trans-unit>
    </body>
  </file>
  <file id="1766" original="/[koishijs.docs] main/zh-CN/schema/advanced/computed.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="61892">
        <source>schema</source>
        <target state="needs-translation">schema</target>
      </trans-unit>
      <trans-unit id="61894">
        <source>Schema.object({
  foo: Schema.computed(Number).description('这是一个属性。</source>
        <target state="needs-translation">Schema.object({
  foo: Schema.computed(Number).description('这是一个属性。</target>
      </trans-unit>
      <trans-unit id="61896">
        <source>'),
}).description('配置项')</source>
        <target state="needs-translation">'),
}).description('配置项')</target>
      </trans-unit>
      <trans-unit id="61898">
        <source>Computed：条件求值</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">Computed：條件求值</target>
      </trans-unit>
      <trans-unit id="61900">
        <source>此类型只能在 Koishi 中使用。</source>
        <target state="needs-translation">此类型只能在 Koishi 中使用。</target>
      </trans-unit>
      <trans-unit id="61902">
        <source>`Schema.computed()` 类型可用于合并多个类型。</source>
        <target state="needs-translation">`Schema.computed()` 类型可用于合并多个类型。</target>
      </trans-unit>
      <trans-unit id="61904">
        <source>一种最常见的用法是将配置项分为多组显示。</source>
        <target state="needs-translation">一种最常见的用法是将配置项分为多组显示。</target>
      </trans-unit>
      <trans-unit id="61906">
        <source>export default Schema.object({
  foo: Schema.computed(Number),
}).description('配置项')</source>
        <target state="needs-translation">export default Schema.object({
  foo: Schema.computed(Number),
}).description('配置项')</target>
      </trans-unit>
    </body>
  </file>
  <file id="1768" original="/[koishijs.docs] main/zh-CN/schema/advanced/dynamic.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="61908">
        <source>schema</source>
        <target state="needs-translation">schema</target>
      </trans-unit>
      <trans-unit id="61910">
        <source>Schema.object({
  value: Schema.union(['foo', 'bar']).description('选择一个值。</source>
        <target state="needs-translation">Schema.object({
  value: Schema.union(['foo', 'bar']).description('选择一个值。</target>
      </trans-unit>
      <trans-unit id="61912">
        <source>'),
}).description('配置项')</source>
        <target state="needs-translation">'),
}).description('配置项')</target>
      </trans-unit>
      <trans-unit id="61914">
        <source>Dynamic：动态类型</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">Dynamic：動態型別</target>
      </trans-unit>
      <trans-unit id="61916">
        <source>此类型只能在 Koishi 中使用。</source>
        <target state="needs-translation">此类型只能在 Koishi 中使用。</target>
      </trans-unit>
      <trans-unit id="61918">
        <source>此特性为实验性功能，未来可能会有改动。</source>
        <target state="needs-translation">此特性为实验性功能，未来可能会有改动。</target>
      </trans-unit>
      <trans-unit id="61920">
        <source>`Schema.dynamic()` 用于使用动态类型。</source>
        <target state="needs-translation">`Schema.dynamic()` 用于使用动态类型。</target>
      </trans-unit>
      <trans-unit id="61922">
        <source>例如某个服务需要在运行时才能获取某个配置项的可能取值，而基于此服务的其他插件的配置又需要从这些值中选择一个。</source>
        <target state="needs-translation">例如某个服务需要在运行时才能获取某个配置项的可能取值，而基于此服务的其他插件的配置又需要从这些值中选择一个。</target>
      </trans-unit>
      <trans-unit id="61924">
        <source>这个时候，实现服务的插件可以使用 `ctx.schema.set()` 来定义动态的类型，使用服务的插件则可以使用 `Schema.dynamic()` 来引用该类型。</source>
        <target state="needs-translation">这个时候，实现服务的插件可以使用 `ctx.schema.set()` 来定义动态的类型，使用服务的插件则可以使用 `Schema.dynamic()` 来引用该类型。</target>
      </trans-unit>
      <trans-unit id="61926">
        <source>// 提供服务的插件
// getChoices() 返回一个数组，假设为 ['foo', 'bar']
ctx.schema.set('choices', Schema.union(getChoices()))</source>
        <target state="needs-translation">// 提供服务的插件
// getChoices() 返回一个数组，假设为 ['foo', 'bar']
ctx.schema.set('choices', Schema.union(getChoices()))</target>
      </trans-unit>
      <trans-unit id="61928">
        <source>// 使用服务的插件
export default Schema.object({
  value: Schema.dynamic('choices').description('选择一个值。'),
}).description('配置项')</source>
        <target state="needs-translation">// 使用服务的插件
export default Schema.object({
  value: Schema.dynamic('choices').description('选择一个值。'),
}).description('配置项')</target>
      </trans-unit>
    </body>
  </file>
  <file id="1770" original="/[koishijs.docs] main/zh-CN/schema/advanced/intersect.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="61930">
        <source>schema</source>
        <target state="needs-translation">schema</target>
      </trans-unit>
      <trans-unit id="61932">
        <source>Schema.intersect([
  Schema.object({
    foo: Schema.number().description('这是一个属性。</source>
        <target state="needs-translation">Schema.intersect([
  Schema.object({
    foo: Schema.number().description('这是一个属性。</target>
      </trans-unit>
      <trans-unit id="61934">
        <source>'),
    bar: Schema.string().description('这是另一个属性。</source>
        <target state="needs-translation">'),
    bar: Schema.string().description('这是另一个属性。</target>
      </trans-unit>
      <trans-unit id="61936">
        <source>'),
  }).description('分组 1'),
  Schema.object({
    baz: Schema.string().description('这是又一个属性。</source>
        <target state="needs-translation">'),
  }).description('分组 1'),
  Schema.object({
    baz: Schema.string().description('这是又一个属性。</target>
      </trans-unit>
      <trans-unit id="61938">
        <source>'),
    qux: Schema.boolean().description('这是最后一个属性。</source>
        <target state="needs-translation">'),
    qux: Schema.boolean().description('这是最后一个属性。</target>
      </trans-unit>
      <trans-unit id="61940">
        <source>'),
  }).description('分组 2'),
])</source>
        <target state="needs-translation">'),
  }).description('分组 2'),
])</target>
      </trans-unit>
      <trans-unit id="61942">
        <source>Intersect：分组</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">Intersect：分組</target>
      </trans-unit>
      <trans-unit id="61944">
        <source>Intersect 类型可用于合并多个类型。</source>
        <target state="needs-translation">Intersect 类型可用于合并多个类型。</target>
      </trans-unit>
      <trans-unit id="61946">
        <source>一种最常见的用法是将配置项分为多组显示。</source>
        <target state="needs-translation">一种最常见的用法是将配置项分为多组显示。</target>
      </trans-unit>
      <trans-unit id="61948">
        <source>使用 `.collapse()` 可以将分组默认折叠为一个单独的配置项。</source>
        <target state="needs-translation">使用 `.collapse()` 可以将分组默认折叠为一个单独的配置项。</target>
      </trans-unit>
      <trans-unit id="61950">
        <source>export default Schema.intersect([
  Schema.object({
    foo: Schema.number(),
    bar: Schema.string(),
  }).description('分组 1'),
  Schema.object({
    baz: Schema.string(),
    qux: Schema.boolean(),
  }).description('分组 2'),
])</source>
        <target state="needs-translation">export default Schema.intersect([
  Schema.object({
    foo: Schema.number(),
    bar: Schema.string(),
  }).description('分组 1'),
  Schema.object({
    baz: Schema.string(),
    qux: Schema.boolean(),
  }).description('分组 2'),
])</target>
      </trans-unit>
    </body>
  </file>
  <file id="1772" original="/[koishijs.docs] main/zh-CN/schema/advanced/transform.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="61952">
        <source>schema</source>
        <target state="needs-translation">schema</target>
      </trans-unit>
      <trans-unit id="61954">
        <source>Schema.object({
  value: Schema.union([
    Schema.array(String),
    Schema.transform(String, value =&gt; [value]),
  ]).default([]).description('点击右侧的按钮添加元素。</source>
        <target state="needs-translation">Schema.object({
  value: Schema.union([
    Schema.array(String),
    Schema.transform(String, value =&gt; [value]),
  ]).default([]).description('点击右侧的按钮添加元素。</target>
      </trans-unit>
      <trans-unit id="61956">
        <source>'),
}).description('配置项')</source>
        <target state="needs-translation">'),
}).description('配置项')</target>
      </trans-unit>
      <trans-unit id="61958">
        <source>Transform：输入转换</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">Transform：輸入轉換</target>
      </trans-unit>
      <trans-unit id="61960">
        <source>Transform 用于定义一个转换类型，通常与 Union 一同使用。</source>
        <target state="needs-translation">Transform 用于定义一个转换类型，通常与 Union 一同使用。</target>
      </trans-unit>
      <trans-unit id="61962">
        <source>当输入满足一参数类型时，将调用二参数转换输入作为输出。</source>
        <target state="needs-translation">当输入满足一参数类型时，将调用二参数转换输入作为输出。</target>
      </trans-unit>
      <trans-unit id="61964">
        <source>此次转换将直接修改输入的对象，以确保类型满足输出类型。</source>
        <target state="needs-translation">此次转换将直接修改输入的对象，以确保类型满足输出类型。</target>
      </trans-unit>
      <trans-unit id="61966">
        <source>在网页表单中，将只会显示输出类型。</source>
        <target state="needs-translation">在网页表单中，将只会显示输出类型。</target>
      </trans-unit>
      <trans-unit id="61968">
        <source>export default Schema.object({
  value: Schema.union([
    Schema.array(String),
    Schema.transform(String, value =&gt; [value]),
  ]).default([]),
})</source>
        <target state="needs-translation">export default Schema.object({
  value: Schema.union([
    Schema.array(String),
    Schema.transform(String, value =&gt; [value]),
  ]).default([]),
})</target>
      </trans-unit>
    </body>
  </file>
  <file id="1774" original="/[koishijs.docs] main/zh-CN/schema/advanced/union-arbitrary.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="61970">
        <source>schema</source>
        <target state="needs-translation">schema</target>
      </trans-unit>
      <trans-unit id="61972">
        <source>Schema.object({
  value: Schema.union([
    Schema.const().description('unset'),
    Schema.number().description('number'),
    Schema.string().description('string'),
    Schema.const(true).description('true'),
    Schema.const(false).description('false'),
    Schema.object({
      foo: Schema.string().description('对象的一个属性。</source>
        <target state="needs-translation">Schema.object({
  value: Schema.union([
    Schema.const().description('unset'),
    Schema.number().description('number'),
    Schema.string().description('string'),
    Schema.const(true).description('true'),
    Schema.const(false).description('false'),
    Schema.object({
      foo: Schema.string().description('对象的一个属性。</target>
      </trans-unit>
      <trans-unit id="61974">
        <source>'),
      bar: Schema.number().description('对象的另一个属性。</source>
        <target state="needs-translation">'),
      bar: Schema.number().description('对象的另一个属性。</target>
      </trans-unit>
      <trans-unit id="61976">
        <source>'),
    }).description('object'),
  ]).description('从六种可能情况中选择一个。</source>
        <target state="needs-translation">'),
    }).description('object'),
  ]).description('从六种可能情况中选择一个。</target>
      </trans-unit>
      <trans-unit id="61978">
        <source>'),
}).description('配置项')</source>
        <target state="needs-translation">'),
}).description('配置项')</target>
      </trans-unit>
      <trans-unit id="61980">
        <source>Union：联合类型</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">Union：聯合型別</target>
      </trans-unit>
      <trans-unit id="61982">
        <source>Union 同样支持多种不同类型的联合。</source>
        <target state="needs-translation">Union 同样支持多种不同类型的联合。</target>
      </trans-unit>
      <trans-unit id="61984">
        <source>你需要给每个子类型提供一个 description，它们会作为表单中呈现的选项。</source>
        <target state="needs-translation">你需要给每个子类型提供一个 description，它们会作为表单中呈现的选项。</target>
      </trans-unit>
      <trans-unit id="61986">
        <source>export default Schema.object({
  value: Schema.union([
    Schema.const().description('unset'),
    Schema.number().description('number'),
    Schema.string().description('string'),
    Schema.const(true).description('true'),
    Schema.const(false).description('false'),
    Schema.object({
      foo: Schema.string(),
      bar: Schema.number(),
    }).description('object'),
  ]),
})</source>
        <target state="needs-translation">export default Schema.object({
  value: Schema.union([
    Schema.const().description('unset'),
    Schema.number().description('number'),
    Schema.string().description('string'),
    Schema.const(true).description('true'),
    Schema.const(false).description('false'),
    Schema.object({
      foo: Schema.string(),
      bar: Schema.number(),
    }).description('object'),
  ]),
})</target>
      </trans-unit>
    </body>
  </file>
  <file id="1776" original="/[koishijs.docs] main/zh-CN/schema/advanced/union-select.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="61988">
        <source>schema</source>
        <target state="needs-translation">schema</target>
      </trans-unit>
      <trans-unit id="61990">
        <source>Schema.object({
  value1: Schema.union(['foo', 'bar', 'qux']).description('从三个值中选择一个。</source>
        <target state="needs-translation">Schema.object({
  value1: Schema.union(['foo', 'bar', 'qux']).description('从三个值中选择一个。</target>
      </trans-unit>
      <trans-unit id="61992">
        <source>'),
  value2: Schema.union([
    Schema.const('foo').description('选项 1'),
    Schema.const('bar').description('选项 2'),
    Schema.const('baz').description('选项 3'),
  ]).role('radio').description('从三个值中选择一个。</source>
        <target state="needs-translation">'),
  value2: Schema.union([
    Schema.const('foo').description('选项 1'),
    Schema.const('bar').description('选项 2'),
    Schema.const('baz').description('选项 3'),
  ]).role('radio').description('从三个值中选择一个。</target>
      </trans-unit>
      <trans-unit id="61994">
        <source>'),
}).description('配置项')</source>
        <target state="needs-translation">'),
}).description('配置项')</target>
      </trans-unit>
      <trans-unit id="61996">
        <source>Union：单选框</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">Union：單選框</target>
      </trans-unit>
      <trans-unit id="61998">
        <source>Union 描述了多个子类型的联合。</source>
        <target state="needs-translation">Union 描述了多个子类型的联合。</target>
      </trans-unit>
      <trans-unit id="62000">
        <source>它的最基础形式是从多个固定值中选择一个。</source>
        <target state="needs-translation">它的最基础形式是从多个固定值中选择一个。</target>
      </trans-unit>
      <trans-unit id="62002">
        <source>这里的每一个字符串是 `Schema.const()` 的简写形式。</source>
        <target state="needs-translation">这里的每一个字符串是 `Schema.const()` 的简写形式。</target>
      </trans-unit>
      <trans-unit id="62004">
        <source>如果每个可选值有较长的描述文本，你可以进一步将 `role` 设置为 `radio`，这样一来所有的选项将显示在下方而不是右侧。</source>
        <target state="needs-translation">如果每个可选值有较长的描述文本，你可以进一步将 `role` 设置为 `radio`，这样一来所有的选项将显示在下方而不是右侧。</target>
      </trans-unit>
      <trans-unit id="62006">
        <source>export default Schema.object({
  value1: Schema.union(['foo', 'bar', 'qux']),
  value2: Schema.union([
    Schema.const('foo').description('选项 1'),
    Schema.const('bar').description('选项 2'),
    Schema.const('baz').description('选项 3'),
  ]).role('radio'),
})</source>
        <target state="needs-translation">export default Schema.object({
  value1: Schema.union(['foo', 'bar', 'qux']),
  value2: Schema.union([
    Schema.const('foo').description('选项 1'),
    Schema.const('bar').description('选项 2'),
    Schema.const('baz').description('选项 3'),
  ]).role('radio'),
})</target>
      </trans-unit>
    </body>
  </file>
  <file id="1778" original="/[koishijs.docs] main/zh-CN/schema/advanced/union-tagged-1.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="62008">
        <source>schema</source>
        <target state="needs-translation">schema</target>
      </trans-unit>
      <trans-unit id="62010">
        <source>Schema.intersect([
  Schema.object({
    enabled: Schema.boolean().default(false).description('是否开启功能'),
  }).description('基础配置'),
  Schema.union([
    Schema.object({
      enabled: Schema.const(true).required(),
      foo: Schema.number().description('请输入一个数值。</source>
        <target state="needs-translation">Schema.intersect([
  Schema.object({
    enabled: Schema.boolean().default(false).description('是否开启功能'),
  }).description('基础配置'),
  Schema.union([
    Schema.object({
      enabled: Schema.const(true).required(),
      foo: Schema.number().description('请输入一个数值。</target>
      </trans-unit>
      <trans-unit id="62012">
        <source>'),
      bar: Schema.string().description('请输入一个字符串。</source>
        <target state="needs-translation">'),
      bar: Schema.string().description('请输入一个字符串。</target>
      </trans-unit>
      <trans-unit id="62014">
        <source>'),
    }),
    Schema.object({}),
  ]),
])</source>
        <target state="needs-translation">'),
    }),
    Schema.object({}),
  ]),
])</target>
      </trans-unit>
      <trans-unit id="64324">
        <source>Intersect + Union：配置联动 1</source>
        <target state="needs-translation">Intersect + Union：配置联动 1</target>
      </trans-unit>
      <trans-unit id="62018">
        <source>一种比较复杂的场景是以对象的某个属性值确定对象的其他属性的类型。</source>
        <target state="needs-translation">一种比较复杂的场景是以对象的某个属性值确定对象的其他属性的类型。</target>
      </trans-unit>
      <trans-unit id="62020">
        <source>善用 Intersect 和 Union，我们就可以轻松实现表单项的联动效果！</source>
        <target state="needs-translation">善用 Intersect 和 Union，我们就可以轻松实现表单项的联动效果！</target>
      </trans-unit>
      <trans-unit id="62022">
        <source>试着切换 `enabled` 的取值，并观察下方表单项的变化吧。</source>
        <target state="needs-translation">试着切换 `enabled` 的取值，并观察下方表单项的变化吧。</target>
      </trans-unit>
      <trans-unit id="62024">
        <source>export default Schema.intersect([
  Schema.object({
    enabled: Schema.boolean().default(false),
  }).description('基础配置'),
  Schema.union([
    Schema.object({
      enabled: Schema.const(true).required(),
      foo: Schema.number().description('请输入一个数值。'),
      bar: Schema.string().description('请输入一个字符串。'),
    }),
    Schema.object({}),
  ])
])</source>
        <target state="needs-translation">export default Schema.intersect([
  Schema.object({
    enabled: Schema.boolean().default(false),
  }).description('基础配置'),
  Schema.union([
    Schema.object({
      enabled: Schema.const(true).required(),
      foo: Schema.number().description('请输入一个数值。'),
      bar: Schema.string().description('请输入一个字符串。'),
    }),
    Schema.object({}),
  ])
])</target>
      </trans-unit>
      <trans-unit id="62026">
        <source>请注意这个例子中对于 `default()` 和 `required()` 的使用。</source>
        <target state="needs-translation">请注意这个例子中对于 `default()` 和 `required()` 的使用。</target>
      </trans-unit>
      <trans-unit id="62028">
        <source>由于配置项默认情况下都是可选的，所以下方的 `enabled` 如果类型与上方的默认值不同，就必须加上 `required()`；反过来，如果相同，你就不应该加上 `required()` (你甚至可以缺省不写，这就是为什么最下面出现了一个空白的 `object({})`)。</source>
        <target state="needs-translation">由于配置项默认情况下都是可选的，所以下方的 `enabled` 如果类型与上方的默认值不同，就必须加上 `required()`；反过来，如果相同，你就不应该加上 `required()` (你甚至可以缺省不写，这就是为什么最下面出现了一个空白的 `object({})`)。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1780" original="/[koishijs.docs] main/zh-CN/schema/advanced/union-tagged-2.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="62030">
        <source>schema</source>
        <target state="needs-translation">schema</target>
      </trans-unit>
      <trans-unit id="62032">
        <source>Schema.intersect([
  Schema.object({
    shared: Schema.string().description('公用的配置项。</source>
        <target state="needs-translation">Schema.intersect([
  Schema.object({
    shared: Schema.string().description('公用的配置项。</target>
      </trans-unit>
      <trans-unit id="62034">
        <source>'),
    type: Schema.union(['foo', 'bar']).required().description('选择一个类型。</source>
        <target state="needs-translation">'),
    type: Schema.union(['foo', 'bar']).required().description('选择一个类型。</target>
      </trans-unit>
      <trans-unit id="62036">
        <source>'),
  }).description('基础配置'),
  Schema.union([
    Schema.object({
      type: Schema.const('foo').required(),
      value: Schema.number().default(114514).description('请输入一个数值。</source>
        <target state="needs-translation">'),
  }).description('基础配置'),
  Schema.union([
    Schema.object({
      type: Schema.const('foo').required(),
      value: Schema.number().default(114514).description('请输入一个数值。</target>
      </trans-unit>
      <trans-unit id="62038">
        <source>'),
    }).description('特殊配置 1'),
    Schema.object({
      type: Schema.const('bar').required(),
      text: Schema.string().description('请输入一个字符串。</source>
        <target state="needs-translation">'),
    }).description('特殊配置 1'),
    Schema.object({
      type: Schema.const('bar').required(),
      text: Schema.string().description('请输入一个字符串。</target>
      </trans-unit>
      <trans-unit id="62040">
        <source>'),
    }).description('特殊配置 2'),
  ]),
])</source>
        <target state="needs-translation">'),
    }).description('特殊配置 2'),
  ]),
])</target>
      </trans-unit>
      <trans-unit id="64326">
        <source>Intersect + Union：配置联动 2</source>
        <target state="needs-translation">Intersect + Union：配置联动 2</target>
      </trans-unit>
      <trans-unit id="62044">
        <source>一种比较复杂的场景是以对象的某个属性值确定对象的其他属性的类型。</source>
        <target state="needs-translation">一种比较复杂的场景是以对象的某个属性值确定对象的其他属性的类型。</target>
      </trans-unit>
      <trans-unit id="62046">
        <source>善用 Intersect 和 Union，我们就可以轻松实现表单项的联动效果！</source>
        <target state="needs-translation">善用 Intersect 和 Union，我们就可以轻松实现表单项的联动效果！</target>
      </trans-unit>
      <trans-unit id="62048">
        <source>试着切换 `type` 的取值，并观察下方表单项的变化吧。</source>
        <target state="needs-translation">试着切换 `type` 的取值，并观察下方表单项的变化吧。</target>
      </trans-unit>
      <trans-unit id="62050">
        <source>export default Schema.intersect([
  Schema.object({
    shared: Schema.string(),
    type: Schema.union(['foo', 'bar']).required(),
  }).description('基础配置'),
  Schema.union([
    Schema.object({
      type: Schema.const('foo').required(),
      value: Schema.number().default(114514),
    }).description('特殊配置 1'),
    Schema.object({
      type: Schema.const('bar').required(),
      text: Schema.string(),
    }).description('特殊配置 2'),
  ]),
])</source>
        <target state="needs-translation">export default Schema.intersect([
  Schema.object({
    shared: Schema.string(),
    type: Schema.union(['foo', 'bar']).required(),
  }).description('基础配置'),
  Schema.union([
    Schema.object({
      type: Schema.const('foo').required(),
      value: Schema.number().default(114514),
    }).description('特殊配置 1'),
    Schema.object({
      type: Schema.const('bar').required(),
      text: Schema.string(),
    }).description('特殊配置 2'),
  ]),
])</target>
      </trans-unit>
      <trans-unit id="62052">
        <source>请注意这个例子中对于 `default()` 和 `required()` 的使用。</source>
        <target state="needs-translation">请注意这个例子中对于 `default()` 和 `required()` 的使用。</target>
      </trans-unit>
      <trans-unit id="62054">
        <source>由于配置项默认情况下都是可选的，所以下方的 `type` 配置项如果类型与上方的默认值不同，就必须加上 `required()`。</source>
        <target state="needs-translation">由于配置项默认情况下都是可选的，所以下方的 `type` 配置项如果类型与上方的默认值不同，就必须加上 `required()`。</target>
      </trans-unit>
      <trans-unit id="62056">
        <source>在这个例子中，`type` 本来就是一个必需属性，所以下方的每一个 `type` 都必须加上 `required()`。</source>
        <target state="needs-translation">在这个例子中，`type` 本来就是一个必需属性，所以下方的每一个 `type` 都必须加上 `required()`。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1782" original="/[koishijs.docs] main/zh-CN/schema/basic/array.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="62058">
        <source>schema</source>
        <target state="needs-translation">schema</target>
      </trans-unit>
      <trans-unit id="62060">
        <source>Schema.object({
  array: Schema.array(Number).description('这是一个数组，点击右侧的按钮添加元素。</source>
        <target state="needs-translation">Schema.object({
  array: Schema.array(Number).description('这是一个数组，点击右侧的按钮添加元素。</target>
      </trans-unit>
      <trans-unit id="63464">
        <source>'),
  table1: Schema.array(String).role('table').description('以表格形式显示的数组。</source>
        <target state="needs-translation">'),
  table1: Schema.array(String).role('table').description('以表格形式显示的数组。</target>
      </trans-unit>
      <trans-unit id="64614">
        <source>'),
  table2: Schema.array(Schema.object({
    foo: Schema.string(),
    bar: Schema.number().experimental(),
    qux: Schema.bitset({ FOO: 1, BAR: 2, QUX: 4 }).default(5),
  })).role('table').description('以表格形式显示的由对象构成的数组。</source>
        <target state="needs-translation">'),
  table2: Schema.array(Schema.object({
    foo: Schema.string(),
    bar: Schema.number().experimental(),
    qux: Schema.bitset({ FOO: 1, BAR: 2, QUX: 4 }).default(5),
  })).role('table').description('以表格形式显示的由对象构成的数组。</target>
      </trans-unit>
      <trans-unit id="62066">
        <source>'),
}).description('配置项')</source>
        <target state="needs-translation">'),
}).description('配置项')</target>
      </trans-unit>
      <trans-unit id="62068">
        <source>数组 (Array)</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">陣列 (Array)</target>
      </trans-unit>
      <trans-unit id="62070">
        <source>`Schema.array()` 描述了一个数组，其中的元素满足给定的类型。</source>
        <target state="needs-translation">`Schema.array()` 描述了一个数组，其中的元素满足给定的类型。</target>
      </trans-unit>
      <trans-unit id="63468">
        <source>使用 `.collapse()` 可以将配置项设置为默认折叠。</source>
        <target state="needs-translation">使用 `.collapse()` 可以将配置项设置为默认折叠。</target>
      </trans-unit>
      <trans-unit id="62072">
        <source>使用 `.role('table')` 可以将数组以表格形式显示。</source>
        <target state="needs-translation">使用 `.role('table')` 可以将数组以表格形式显示。</target>
      </trans-unit>
      <trans-unit id="63470">
        <source>例子里的 `Number` 是 `Schema.number().required()` 的简写。</source>
        <target state="needs-translation">例子里的 `Number` 是 `Schema.number().required()` 的简写。</target>
      </trans-unit>
      <trans-unit id="63472">
        <source>特别地，对于已知字符串构成的数组，还可以使用 [`.role('checkbox')`](./bitset.md) 或 [`.role('select')`](./bitset.md)，将它们以复选框或复选菜单的形式显示。</source>
        <target state="needs-translation">特别地，对于已知字符串构成的数组，还可以使用 [`.role('checkbox')`](./bitset.md) 或 [`.role('select')`](./bitset.md)，将它们以复选框或复选菜单的形式显示。</target>
      </trans-unit>
      <trans-unit id="64616">
        <source>export default Schema.object({
  array: Schema.array(Number),
  table1: Schema.array(String).role('table'),
  table2: Schema.array(Schema.object({
    foo: Schema.string(),
    bar: Schema.number().experimental(),
    qux: Schema.bitset({ FOO: 1, BAR: 2, QUX: 4 }).default(5),
  })).role('table'),
})</source>
        <target state="needs-translation">export default Schema.object({
  array: Schema.array(Number),
  table1: Schema.array(String).role('table'),
  table2: Schema.array(Schema.object({
    foo: Schema.string(),
    bar: Schema.number().experimental(),
    qux: Schema.bitset({ FOO: 1, BAR: 2, QUX: 4 }).default(5),
  })).role('table'),
})</target>
      </trans-unit>
    </body>
  </file>
  <file id="1784" original="/[koishijs.docs] main/zh-CN/schema/basic/bitset.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="62080">
        <source>schema</source>
        <target state="needs-translation">schema</target>
      </trans-unit>
      <trans-unit id="63476">
        <source>Schema.intersect([
  Schema.object({
    bitset: Schema
      .bitset({ FOO: 1, BAR: 2, QUX: 4 })
      .default(5)
      .description('选择要启用的功能。</source>
        <target state="needs-translation">Schema.intersect([
  Schema.object({
    bitset: Schema
      .bitset({ FOO: 1, BAR: 2, QUX: 4 })
      .default(5)
      .description('选择要启用的功能。</target>
      </trans-unit>
      <trans-unit id="63478">
        <source>'),
    array: Schema
      .array(Schema.union(['FOO', 'BAR', 'QUX']))
      .default(['FOO', 'QUX'])
      .role('checkbox')
      .description('以复选框形式呈现。</source>
        <target state="needs-translation">'),
    array: Schema
      .array(Schema.union(['FOO', 'BAR', 'QUX']))
      .default(['FOO', 'QUX'])
      .role('checkbox')
      .description('以复选框形式呈现。</target>
      </trans-unit>
      <trans-unit id="63480">
        <source>'),
  }).description('复选框'),
  Schema.object({
    bitset: Schema
      .bitset({ FOO: 1, BAR: 2, QUX: 4 })
      .default(5)
      .role('select')
      .description('选择要启用的功能。</source>
        <target state="needs-translation">'),
  }).description('复选框'),
  Schema.object({
    bitset: Schema
      .bitset({ FOO: 1, BAR: 2, QUX: 4 })
      .default(5)
      .role('select')
      .description('选择要启用的功能。</target>
      </trans-unit>
      <trans-unit id="63482">
        <source>'),
    array: Schema
      .array(Schema.union(['FOO', 'BAR', 'QUX']))
      .default(['FOO', 'QUX'])
      .role('select')
      .description('以复选菜单形式呈现。</source>
        <target state="needs-translation">'),
    array: Schema
      .array(Schema.union(['FOO', 'BAR', 'QUX']))
      .default(['FOO', 'QUX'])
      .role('select')
      .description('以复选菜单形式呈现。</target>
      </trans-unit>
      <trans-unit id="63484">
        <source>'),
  }).description('复选菜单'),
])</source>
        <target state="needs-translation">'),
  }).description('复选菜单'),
])</target>
      </trans-unit>
      <trans-unit id="62088">
        <source>位集 (Bitset)</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">位集 (Bitset)</target>
      </trans-unit>
      <trans-unit id="63486">
        <source>`Schema.bitset()` 以复选框的形式描述了一个整数，通常每一位表达某种特征。</source>
        <target state="needs-translation">`Schema.bitset()` 以复选框的形式描述了一个整数，通常每一位表达某种特征。</target>
      </trans-unit>
      <trans-unit id="62092">
        <source>它的输出是一个整数，输入可以是一个整数或者一个字符串数组。</source>
        <target state="needs-translation">它的输出是一个整数，输入可以是一个整数或者一个字符串数组。</target>
      </trans-unit>
      <trans-unit id="63488">
        <source>如果希望输出的也是字符串数组，可以配合使用 `Schema.array()` 和 `Schema.union()`，并设置 `.role('checkbox')`。</source>
        <target state="needs-translation">如果希望输出的也是字符串数组，可以配合使用 `Schema.array()` 和 `Schema.union()`，并设置 `.role('checkbox')`。</target>
      </trans-unit>
      <trans-unit id="63490">
        <source>此外，我们还提供了 `.role('select')`，它将以复选菜单的形式呈现。</source>
        <target state="needs-translation">此外，我们还提供了 `.role('select')`，它将以复选菜单的形式呈现。</target>
      </trans-unit>
      <trans-unit id="63492">
        <source>const enum Intents {
  FOO = 1,
  BAR = 2,
  QUX = 4,
}

export default Schema.object({
  bitset: Schema.bitset(Intents)
    .default(Intents.FOO | Intents.QUX),
  array: Schema
    .array(Schema.union(['FOO', 'BAR', 'QUX']))
    .default(['FOO', 'QUX'])
    .role('checkbox'),
})</source>
        <target state="needs-translation">const enum Intents {
  FOO = 1,
  BAR = 2,
  QUX = 4,
}

export default Schema.object({
  bitset: Schema.bitset(Intents)
    .default(Intents.FOO | Intents.QUX),
  array: Schema
    .array(Schema.union(['FOO', 'BAR', 'QUX']))
    .default(['FOO', 'QUX'])
    .role('checkbox'),
})</target>
      </trans-unit>
    </body>
  </file>
  <file id="1786" original="/[koishijs.docs] main/zh-CN/schema/basic/boolean.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="62098">
        <source>schema</source>
        <target state="needs-translation">schema</target>
      </trans-unit>
      <trans-unit id="62100">
        <source>Schema.object({
  enable: Schema.boolean().description('这是一个开关。</source>
        <target state="needs-translation">Schema.object({
  enable: Schema.boolean().description('这是一个开关。</target>
      </trans-unit>
      <trans-unit id="62102">
        <source>'),
}).description('配置项')</source>
        <target state="needs-translation">'),
}).description('配置项')</target>
      </trans-unit>
      <trans-unit id="62104">
        <source>布尔值 (Boolean)</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">布林值 (Boolean)</target>
      </trans-unit>
      <trans-unit id="62106">
        <source>`Schema.boolean()` 以开关的形式描述了一个布尔值。</source>
        <target state="needs-translation">`Schema.boolean()` 以开关的形式描述了一个布尔值。</target>
      </trans-unit>
      <trans-unit id="62108">
        <source>export default Schema.object({
  enable: Schema.boolean(),
})</source>
        <target state="needs-translation">export default Schema.object({
  enable: Schema.boolean(),
})</target>
      </trans-unit>
    </body>
  </file>
  <file id="1788" original="/[koishijs.docs] main/zh-CN/schema/basic/date.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="62110">
        <source>schema</source>
        <target state="needs-translation">schema</target>
      </trans-unit>
      <trans-unit id="62112">
        <source>Schema.object({
  value: Schema.date().description('选择日期与时间 (对象)。</source>
        <target state="needs-translation">Schema.object({
  value: Schema.date().description('选择日期与时间 (对象)。</target>
      </trans-unit>
      <trans-unit id="62114">
        <source>'),
  datetime: Schema.string().role('datetime').description('选择日期与时间 (字符串)。</source>
        <target state="needs-translation">'),
  datetime: Schema.string().role('datetime').description('选择日期与时间 (字符串)。</target>
      </trans-unit>
      <trans-unit id="62116">
        <source>'),
  date: Schema.string().role('date').description('选择日期 (字符串)。</source>
        <target state="needs-translation">'),
  date: Schema.string().role('date').description('选择日期 (字符串)。</target>
      </trans-unit>
      <trans-unit id="62118">
        <source>'),
  time: Schema.string().role('time').description('选择时间 (字符串)。</source>
        <target state="needs-translation">'),
  time: Schema.string().role('time').description('选择时间 (字符串)。</target>
      </trans-unit>
      <trans-unit id="62120">
        <source>'),
}).description('配置项')</source>
        <target state="needs-translation">'),
}).description('配置项')</target>
      </trans-unit>
      <trans-unit id="62122">
        <source>Date</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">Date</target>
      </trans-unit>
      <trans-unit id="62124">
        <source>由于 Date 不便于序列化，我们提供了两套描述 Date 的方式：</source>
        <target state="needs-translation">由于 Date 不便于序列化，我们提供了两套描述 Date 的方式：</target>
      </trans-unit>
      <trans-unit id="62126">
        <source>使用 Date 类型：输入字符串，输出 Date 实例</source>
        <target state="needs-translation">使用 Date 类型：输入字符串，输出 Date 实例</target>
      </trans-unit>
      <trans-unit id="62128">
        <source>使用 String 类型与三种可选的 `role` 属性</source>
        <target state="needs-translation">使用 String 类型与三种可选的 `role` 属性</target>
      </trans-unit>
      <trans-unit id="62130">
        <source>其中，Date 类型与 `datetime` 的前端体验是完全一致的，唯一区别在于输出的格式不同。</source>
        <target state="needs-translation">其中，Date 类型与 `datetime` 的前端体验是完全一致的，唯一区别在于输出的格式不同。</target>
      </trans-unit>
      <trans-unit id="62132">
        <source>字符串额外多出 `date` 和 `time` 两种格式，用于表达纯日期和纯时间字符串。</source>
        <target state="needs-translation">字符串额外多出 `date` 和 `time` 两种格式，用于表达纯日期和纯时间字符串。</target>
      </trans-unit>
      <trans-unit id="62134">
        <source>export default Schema.object({
  value: Schema.date(),
  datetime: Schema.string().role('datetime'),
  date: Schema.string().role('date'),
  time: Schema.string().role('time'),
})</source>
        <target state="needs-translation">export default Schema.object({
  value: Schema.date(),
  datetime: Schema.string().role('datetime'),
  date: Schema.string().role('date'),
  time: Schema.string().role('time'),
})</target>
      </trans-unit>
    </body>
  </file>
  <file id="1790" original="/[koishijs.docs] main/zh-CN/schema/basic/dict.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="62136">
        <source>schema</source>
        <target state="needs-translation">schema</target>
      </trans-unit>
      <trans-unit id="62138">
        <source>Schema.object({
  dict: Schema.dict(Boolean).description('这是一个字典，点击右侧的按钮添加属性。</source>
        <target state="needs-translation">Schema.object({
  dict: Schema.dict(Boolean).description('这是一个字典，点击右侧的按钮添加属性。</target>
      </trans-unit>
      <trans-unit id="63494">
        <source>'),
  table1: Schema.dict(String).role('table').description('以表格形式显示的字典。</source>
        <target state="needs-translation">'),
  table1: Schema.dict(String).role('table').description('以表格形式显示的字典。</target>
      </trans-unit>
      <trans-unit id="63782">
        <source>'),
  table2: Schema.dict(Schema.object({
    foo: Schema.string(),
    bar: Schema.number(),
  })).role('table').description('以表格形式显示的由对象构成的字典。</source>
        <target state="needs-translation">'),
  table2: Schema.dict(Schema.object({
    foo: Schema.string(),
    bar: Schema.number(),
  })).role('table').description('以表格形式显示的由对象构成的字典。</target>
      </trans-unit>
      <trans-unit id="62144">
        <source>'),
}).description('配置项')</source>
        <target state="needs-translation">'),
}).description('配置项')</target>
      </trans-unit>
      <trans-unit id="62146">
        <source>字典 (Dict)</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">字典 (Dict)</target>
      </trans-unit>
      <trans-unit id="62148">
        <source>`Schema.dict()` 类型描述了一个字典，其中的键是任意字符串，而值是给定的类型。</source>
        <target state="needs-translation">`Schema.dict()` 类型描述了一个字典，其中的键是任意字符串，而值是给定的类型。</target>
      </trans-unit>
      <trans-unit id="63496">
        <source>使用 `.collapse()` 可以将配置项设置为默认折叠。</source>
        <target state="needs-translation">使用 `.collapse()` 可以将配置项设置为默认折叠。</target>
      </trans-unit>
      <trans-unit id="62150">
        <source>使用 `.role('table')` 可以将字典以表格形式显示。</source>
        <target state="needs-translation">使用 `.role('table')` 可以将字典以表格形式显示。</target>
      </trans-unit>
      <trans-unit id="63498">
        <source>例子里的 `Boolean` 是 `Schema.boolean().required()` 的简写。</source>
        <target state="needs-translation">例子里的 `Boolean` 是 `Schema.boolean().required()` 的简写。</target>
      </trans-unit>
      <trans-unit id="63500">
        <source>export default Schema.object({
  dict: Schema.dict(Boolean),
  table1: Schema.dict(String).role('table'),
  table2: Schema.dict(Schema.object({
    foo: Schema.string(),
    bar: Schema.number(),
  })).role('table'),
})</source>
        <target state="needs-translation">export default Schema.object({
  dict: Schema.dict(Boolean),
  table1: Schema.dict(String).role('table'),
  table2: Schema.dict(Schema.object({
    foo: Schema.string(),
    bar: Schema.number(),
  })).role('table'),
})</target>
      </trans-unit>
    </body>
  </file>
  <file id="1792" original="/[koishijs.docs] main/zh-CN/schema/basic/number.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="62158">
        <source>schema</source>
        <target state="needs-translation">schema</target>
      </trans-unit>
      <trans-unit id="62160">
        <source>Schema.object({
  foo: Schema.number().description('一个普通的数值。</source>
        <target state="needs-translation">Schema.object({
  foo: Schema.number().description('一个普通的数值。</target>
      </trans-unit>
      <trans-unit id="62162">
        <source>'),
  bar: Schema.number().role('slider').min(0).max(100).step(1).default(30).description('一个 0 到 100 之间的整数。</source>
        <target state="needs-translation">'),
  bar: Schema.number().role('slider').min(0).max(100).step(1).default(30).description('一个 0 到 100 之间的整数。</target>
      </trans-unit>
      <trans-unit id="62164">
        <source>'),
}).description('配置项')</source>
        <target state="needs-translation">'),
}).description('配置项')</target>
      </trans-unit>
      <trans-unit id="62166">
        <source>数值 (Number)</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">數值 (Number)</target>
      </trans-unit>
      <trans-unit id="62168">
        <source>`Schema.number()` 描述了一个数值，支持输入框和滑块。</source>
        <target state="needs-translation">`Schema.number()` 描述了一个数值，支持输入框和滑块。</target>
      </trans-unit>
      <trans-unit id="62170">
        <source>export default Schema.object({
  foo: Schema.number(),
  bar: Schema.number().role('slider')
    .min(0).max(100).step(1).default(30),
})</source>
        <target state="needs-translation">export default Schema.object({
  foo: Schema.number(),
  bar: Schema.number().role('slider')
    .min(0).max(100).step(1).default(30),
})</target>
      </trans-unit>
    </body>
  </file>
  <file id="1794" original="/[koishijs.docs] main/zh-CN/schema/basic/object.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="62172">
        <source>schema</source>
        <target state="needs-translation">schema</target>
      </trans-unit>
      <trans-unit id="62174">
        <source>Schema.object({
  foo: Schema.string().required().description('这是一个必需属性。</source>
        <target state="needs-translation">Schema.object({
  foo: Schema.string().required().description('这是一个必需属性。</target>
      </trans-unit>
      <trans-unit id="62176">
        <source>'),
  bar: Schema.number().description('这是一个可选属性。</source>
        <target state="needs-translation">'),
  bar: Schema.number().description('这是一个可选属性。</target>
      </trans-unit>
      <trans-unit id="62178">
        <source>'),
  baz: Schema.object({
    qux: Schema.boolean().description('这是一个嵌套属性。</source>
        <target state="needs-translation">'),
  baz: Schema.object({
    qux: Schema.boolean().description('这是一个嵌套属性。</target>
      </trans-unit>
      <trans-unit id="62180">
        <source>'),
  }),
  collapse: Schema.object({
    inner: Schema.string().description('现在你看到我了！</source>
        <target state="needs-translation">'),
  }),
  collapse: Schema.object({
    inner: Schema.string().description('现在你看到我了！</target>
      </trans-unit>
      <trans-unit id="62182">
        <source>'),
  }).description('点击右侧按钮查看嵌套属性。</source>
        <target state="needs-translation">'),
  }).description('点击右侧按钮查看嵌套属性。</target>
      </trans-unit>
      <trans-unit id="62184">
        <source>').collapse(),
}).description('配置项')</source>
        <target state="needs-translation">').collapse(),
}).description('配置项')</target>
      </trans-unit>
      <trans-unit id="62186">
        <source>对象 (Object)</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">物件 (Object)</target>
      </trans-unit>
      <trans-unit id="62188">
        <source>`Schema.object()` 描述了一个具有给定属性的对象。</source>
        <target state="needs-translation">`Schema.object()` 描述了一个具有给定属性的对象。</target>
      </trans-unit>
      <trans-unit id="62190">
        <source>默认情况下所有属性都是可选的，可以通过 `.required()` 来声明一个必需属性。</source>
        <target state="needs-translation">默认情况下所有属性都是可选的，可以通过 `.required()` 来声明一个必需属性。</target>
      </trans-unit>
      <trans-unit id="62192">
        <source>使用 `.collapse()` 可以将对象默认折叠为一个单独的配置项。</source>
        <target state="needs-translation">使用 `.collapse()` 可以将对象默认折叠为一个单独的配置项。</target>
      </trans-unit>
      <trans-unit id="62194">
        <source>export default Schema.object({
  foo: Schema.string().required(),
  bar: Schema.number(),
  baz: Schema.object({
    qux: Schema.boolean(),
  }),
  nested: Schema.object({
    inner: Schema.string(),
  }).collapse(),
})</source>
        <target state="needs-translation">export default Schema.object({
  foo: Schema.string().required(),
  bar: Schema.number(),
  baz: Schema.object({
    qux: Schema.boolean(),
  }),
  nested: Schema.object({
    inner: Schema.string(),
  }).collapse(),
})</target>
      </trans-unit>
    </body>
  </file>
  <file id="1796" original="/[koishijs.docs] main/zh-CN/schema/basic/path.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="62196">
        <source>schema</source>
        <target state="needs-translation">schema</target>
      </trans-unit>
      <trans-unit id="62198">
        <source>Schema.object({
  path1: Schema.string().description('假装右边是一个文件选择器。</source>
        <target state="needs-translation">Schema.object({
  path1: Schema.string().description('假装右边是一个文件选择器。</target>
      </trans-unit>
      <trans-unit id="62200">
        <source>'),
  path2: Schema.string().description('假装右边是一个文件选择器。</source>
        <target state="needs-translation">'),
  path2: Schema.string().description('假装右边是一个文件选择器。</target>
      </trans-unit>
      <trans-unit id="62202">
        <source>'),
}).description('配置项')</source>
        <target state="needs-translation">'),
}).description('配置项')</target>
      </trans-unit>
      <trans-unit id="62204">
        <source>路径 (Path)</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">路徑 (Path)</target>
      </trans-unit>
      <trans-unit id="62206">
        <source>此类型基于 @koishijs/plugin-explorer，仅在加载该插件时可用。</source>
        <target state="needs-translation">此类型基于 @koishijs/plugin-explorer，仅在加载该插件时可用。</target>
      </trans-unit>
      <trans-unit id="62208">
        <source>未加载该插件时，类型只会表现为普通的字符串 (比如现在就是这样)。</source>
        <target state="needs-translation">未加载该插件时，类型只会表现为普通的字符串 (比如现在就是这样)。</target>
      </trans-unit>
      <trans-unit id="62210">
        <source>`Schema.path()` 描述了一个路径。</source>
        <target state="needs-translation">`Schema.path()` 描述了一个路径。</target>
      </trans-unit>
      <trans-unit id="62212">
        <source>如果是相对路径，则会基于 `ctx.baseDir` 进行解析。</source>
        <target state="needs-translation">如果是相对路径，则会基于 `ctx.baseDir` 进行解析。</target>
      </trans-unit>
      <trans-unit id="62214">
        <source>该配置项会显示成一个能够打开文件选择器的按钮。</source>
        <target state="needs-translation">该配置项会显示成一个能够打开文件选择器的按钮。</target>
      </trans-unit>
      <trans-unit id="62216">
        <source>支持传入一些额外的选项：</source>
        <target state="needs-translation">支持传入一些额外的选项：</target>
      </trans-unit>
      <trans-unit id="62218">
        <source>`allowCreate`：是否允许创建目录和上传文件</source>
        <target state="needs-translation">`allowCreate`：是否允许创建目录和上传文件</target>
      </trans-unit>
      <trans-unit id="64628">
        <source>`filters`：可选的文件的扩展名列表，扩展名全需要以 `.` 开头；特别地其中如果包含 `directory` 则表示可以选择文件夹</source>
        <target state="needs-translation">`filters`：可选的文件的扩展名列表，扩展名全需要以 `.` 开头；特别地其中如果包含 `directory` 则表示可以选择文件夹</target>
      </trans-unit>
      <trans-unit id="64630">
        <source>export default Schema.object({
  path1: Schema.path(),
  path2: Schema.path({
    filters: ['.png', '.jpg', 'directory'],
  }),
})</source>
        <target state="needs-translation">export default Schema.object({
  path1: Schema.path(),
  path2: Schema.path({
    filters: ['.png', '.jpg', 'directory'],
  }),
})</target>
      </trans-unit>
    </body>
  </file>
  <file id="1798" original="/[koishijs.docs] main/zh-CN/schema/basic/string.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="62224">
        <source>schema</source>
        <target state="needs-translation">schema</target>
      </trans-unit>
      <trans-unit id="62226">
        <source>Schema.object({
  text: Schema.string().pattern(/^fff$/i).description('一段普通的文本。</source>
        <target state="needs-translation">Schema.object({
  text: Schema.string().pattern(/^fff$/i).description('一段普通的文本。</target>
      </trans-unit>
      <trans-unit id="62228">
        <source>'),
  secret: Schema.string().role('secret').default('password').description('请输入密码。</source>
        <target state="needs-translation">'),
  secret: Schema.string().role('secret').default('password').description('请输入密码。</target>
      </trans-unit>
      <trans-unit id="62230">
        <source>'),
  link: Schema.string().role('link').default('https://github.com').description('点击访问链接。</source>
        <target state="needs-translation">'),
  link: Schema.string().role('link').default('https://github.com').description('点击访问链接。</target>
      </trans-unit>
      <trans-unit id="62232">
        <source>'),
  area: Schema.string().role('textarea', { rows: [2, 4] }).description('在下方输入多行文本。</source>
        <target state="needs-translation">'),
  area: Schema.string().role('textarea', { rows: [2, 4] }).description('在下方输入多行文本。</target>
      </trans-unit>
      <trans-unit id="62234">
        <source>'),
  color: Schema.string().role('color').description('选择一个颜色。</source>
        <target state="needs-translation">'),
  color: Schema.string().role('color').description('选择一个颜色。</target>
      </trans-unit>
      <trans-unit id="62236">
        <source>'),
  custom: Schema.string().pattern(/^custom$/i).description('这里只能输入 `custom`。</source>
        <target state="needs-translation">'),
  custom: Schema.string().pattern(/^custom$/i).description('这里只能输入 `custom`。</target>
      </trans-unit>
      <trans-unit id="62238">
        <source>'),
}).description('配置项')</source>
        <target state="needs-translation">'),
}).description('配置项')</target>
      </trans-unit>
      <trans-unit id="62240">
        <source>字符串 (String)</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">字串 (String)</target>
      </trans-unit>
      <trans-unit id="62242">
        <source>`Schema.string()` 描述了一个字符串，支持多种特殊外观。</source>
        <target state="needs-translation">`Schema.string()` 描述了一个字符串，支持多种特殊外观。</target>
      </trans-unit>
      <trans-unit id="62244">
        <source>secret：默认情况下不显示输入框中的内容，可点击按钮切换</source>
        <target state="needs-translation">secret：默认情况下不显示输入框中的内容，可点击按钮切换</target>
      </trans-unit>
      <trans-unit id="62246">
        <source>link：点击可访问输入框中的链接 (同时输入框也会稍长一些)</source>
        <target state="needs-translation">link：点击可访问输入框中的链接 (同时输入框也会稍长一些)</target>
      </trans-unit>
      <trans-unit id="62248">
        <source>textarea：输入框显示在配置项下侧，为自适应高度的多行文本域</source>
        <target state="needs-translation">textarea：输入框显示在配置项下侧，为自适应高度的多行文本域</target>
      </trans-unit>
      <trans-unit id="62250">
        <source>可以通过 `rows` 属性来限制文本域的最小和最大行数</source>
        <target state="needs-translation">可以通过 `rows` 属性来限制文本域的最小和最大行数</target>
      </trans-unit>
      <trans-unit id="62252">
        <source>color：输入框显示为颜色选择器</source>
        <target state="needs-translation">color：输入框显示为颜色选择器</target>
      </trans-unit>
      <trans-unit id="62254">
        <source>可以使用 `.pattern()` 限制输入的内容符合某个正则表达式。</source>
        <target state="needs-translation">可以使用 `.pattern()` 限制输入的内容符合某个正则表达式。</target>
      </trans-unit>
      <trans-unit id="62256">
        <source>export default Schema.object({
  text: Schema.string(),
  secret: Schema.string().role('secret').default('password'),
  link: Schema.string().role('link').default('https://github.com'),
  area: Schema.string().role('textarea', { rows: [2, 4] }),
  color: Schema.string().role('color'),
  custom: Schema.string().pattern(/^custom$/i),
})</source>
        <target state="needs-translation">export default Schema.object({
  text: Schema.string(),
  secret: Schema.string().role('secret').default('password'),
  link: Schema.string().role('link').default('https://github.com'),
  area: Schema.string().role('textarea', { rows: [2, 4] }),
  color: Schema.string().role('color'),
  custom: Schema.string().pattern(/^custom$/i),
})</target>
      </trans-unit>
    </body>
  </file>
  <file id="1800" original="/[koishijs.docs] main/zh-CN/schema/basic/tuple.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="62258">
        <source>schema</source>
        <target state="needs-translation">schema</target>
      </trans-unit>
      <trans-unit id="62260">
        <source>Schema.object({
  point: Schema.tuple([Number, Number]).description('请输入点的坐标。</source>
        <target state="needs-translation">Schema.object({
  point: Schema.tuple([Number, Number]).description('请输入点的坐标。</target>
      </trans-unit>
      <trans-unit id="62262">
        <source>'),
}).description('配置项')</source>
        <target state="needs-translation">'),
}).description('配置项')</target>
      </trans-unit>
      <trans-unit id="62264">
        <source>元组 (Tuple)</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">元組 (Tuple)</target>
      </trans-unit>
      <trans-unit id="62266">
        <source>目前我们只支持元组内部元素是原始类型 ([String](./string.md), [Number](./number.md), [Boolean](./boolean.md)) 的情况。</source>
        <target state="needs-translation">目前我们只支持元组内部元素是原始类型 ([String](./string.md), [Number](./number.md), [Boolean](./boolean.md)) 的情况。</target>
      </trans-unit>
      <trans-unit id="62268">
        <source>如果你要描述比较复杂的类型，请使用 [Object](./object.md) 或 [Array](./array.md) 替代。</source>
        <target state="needs-translation">如果你要描述比较复杂的类型，请使用 [Object](./object.md) 或 [Array](./array.md) 替代。</target>
      </trans-unit>
      <trans-unit id="62270">
        <source>`Schema.tuple()` 描述了一个元组，它的长度是固定的，你需要分别给出其中每个元素的类型。</source>
        <target state="needs-translation">`Schema.tuple()` 描述了一个元组，它的长度是固定的，你需要分别给出其中每个元素的类型。</target>
      </trans-unit>
      <trans-unit id="62272">
        <source>它们会被显示在同一行中。</source>
        <target state="needs-translation">它们会被显示在同一行中。</target>
      </trans-unit>
      <trans-unit id="62274">
        <source>export default Schema.object({
  point: Schema.tuple([Number, Number]),
})</source>
        <target state="needs-translation">export default Schema.object({
  point: Schema.tuple([Number, Number]),
})</target>
      </trans-unit>
    </body>
  </file>
  <file id="1802" original="/[koishijs.docs] main/zh-CN/schema/index.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="62276">
        <source>配置构型</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">配置構型</target>
      </trans-unit>
    </body>
  </file>
  <file id="1804" original="/[koishijs.docs] main/zh-CN/schema/meta/default.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="62278">
        <source>schema</source>
        <target state="needs-translation">schema</target>
      </trans-unit>
      <trans-unit id="62280">
        <source>Schema.object({
  foo: Schema.string().description('默认值为 `lol` 的属性。</source>
        <target state="needs-translation">Schema.object({
  foo: Schema.string().description('默认值为 `lol` 的属性。</target>
      </trans-unit>
      <trans-unit id="62282">
        <source>').default('lol'),
  bar: Schema.number().description('默认值为 `2333` 的属性。</source>
        <target state="needs-translation">').default('lol'),
  bar: Schema.number().description('默认值为 `2333` 的属性。</target>
      </trans-unit>
      <trans-unit id="62284">
        <source>').default(2333),
  baz: Schema.boolean().description('默认值为 `true` 的属性。</source>
        <target state="needs-translation">').default(2333),
  baz: Schema.boolean().description('默认值为 `true` 的属性。</target>
      </trans-unit>
      <trans-unit id="62286">
        <source>').default(true),
}).description('配置项')</source>
        <target state="needs-translation">').default(true),
}).description('配置项')</target>
      </trans-unit>
      <trans-unit id="62288">
        <source>默认值</source>
        <target state="translated">預設值</target>
      </trans-unit>
      <trans-unit id="62290">
        <source>请注意：`.required()` 与 `.default()` 不能同时使用。</source>
        <target state="needs-translation">请注意：`.required()` 与 `.default()` 不能同时使用。</target>
      </trans-unit>
      <trans-unit id="62292">
        <source>`.default()` 用于设置某个配置项的默认值。</source>
        <target state="needs-translation">`.default()` 用于设置某个配置项的默认值。</target>
      </trans-unit>
      <trans-unit id="62294">
        <source>如果你传入了值，那么默认值将不会有任何行为；如果没有传入值，则默认值会作为初始状态呈现在表单中。</source>
        <target state="needs-translation">如果你传入了值，那么默认值将不会有任何行为；如果没有传入值，则默认值会作为初始状态呈现在表单中。</target>
      </trans-unit>
      <trans-unit id="62296">
        <source>在配置项菜单中可以选择将配置项恢复为默认值。</source>
        <target state="needs-translation">在配置项菜单中可以选择将配置项恢复为默认值。</target>
      </trans-unit>
      <trans-unit id="62298">
        <source>如果你将某个配置项修改为了默认值，则该配置项实际上会被清除，以确保配置文件的简洁性。</source>
        <target state="needs-translation">如果你将某个配置项修改为了默认值，则该配置项实际上会被清除，以确保配置文件的简洁性。</target>
      </trans-unit>
      <trans-unit id="62300">
        <source>export default Schema.object({
  foo: Schema.string().default('lol'),
  bar: Schema.number().default(2333),
  baz: Schema.boolean().default(true),
})</source>
        <target state="needs-translation">export default Schema.object({
  foo: Schema.string().default('lol'),
  bar: Schema.number().default(2333),
  baz: Schema.boolean().default(true),
})</target>
      </trans-unit>
    </body>
  </file>
  <file id="1806" original="/[koishijs.docs] main/zh-CN/schema/meta/description.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="62302">
        <source>schema</source>
        <target state="needs-translation">schema</target>
      </trans-unit>
      <trans-unit id="62304">
        <source>Schema.object({
  foo: Schema.boolean().description('*斜体*的属性描述。</source>
        <target state="needs-translation">Schema.object({
  foo: Schema.boolean().description('*斜体*的属性描述。</target>
      </trans-unit>
      <trans-unit id="62306">
        <source>'),
  bar: Schema.string().description('**粗体**的属性描述。</source>
        <target state="needs-translation">'),
  bar: Schema.string().description('**粗体**的属性描述。</target>
      </trans-unit>
      <trans-unit id="62308">
        <source>'),
}).description('配置标题')</source>
        <target state="needs-translation">'),
}).description('配置标题')</target>
      </trans-unit>
      <trans-unit id="62310">
        <source>标题与描述</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">標題與描述</target>
      </trans-unit>
      <trans-unit id="62312">
        <source>`.description()` 用于设置某个配置项的描述文本。</source>
        <target state="needs-translation">`.description()` 用于设置某个配置项的描述文本。</target>
      </trans-unit>
      <trans-unit id="62314">
        <source>当添加在属性上时会显示在名称下方，当添加在对象上时则会表现为小标题。</source>
        <target state="needs-translation">当添加在属性上时会显示在名称下方，当添加在对象上时则会表现为小标题。</target>
      </trans-unit>
      <trans-unit id="62316">
        <source>我们还支持了基本的行内 Markdown 语法。</source>
        <target state="needs-translation">我们还支持了基本的行内 Markdown 语法。</target>
      </trans-unit>
      <trans-unit id="62318">
        <source>export default Schema.object({
  foo: Schema.boolean().description('*斜体*的属性描述。'),
  bar: Schema.string().description('**粗体**的属性描述。'),
}).description('配置标题')</source>
        <target state="needs-translation">export default Schema.object({
  foo: Schema.boolean().description('*斜体*的属性描述。'),
  bar: Schema.string().description('**粗体**的属性描述。'),
}).description('配置标题')</target>
      </trans-unit>
    </body>
  </file>
  <file id="1808" original="/[koishijs.docs] main/zh-CN/schema/meta/disabled.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="62320">
        <source>schema</source>
        <target state="needs-translation">schema</target>
      </trans-unit>
      <trans-unit id="62322">
        <source>Schema.object({
  foo: Schema.number().disabled().description('这是一个禁用配置项。</source>
        <target state="needs-translation">Schema.object({
  foo: Schema.number().disabled().description('这是一个禁用配置项。</target>
      </trans-unit>
      <trans-unit id="62324">
        <source>'),
  bar: Schema.number().hidden().description('这是一个隐藏配置项。</source>
        <target state="needs-translation">'),
  bar: Schema.number().hidden().description('这是一个隐藏配置项。</target>
      </trans-unit>
      <trans-unit id="62326">
        <source>'),
  baz: Schema.string().deprecated().description('这是一个已废弃配置项。</source>
        <target state="needs-translation">'),
  baz: Schema.string().deprecated().description('这是一个已废弃配置项。</target>
      </trans-unit>
      <trans-unit id="62328">
        <source>'),
  qux: Schema.string().experimental().description('这是一个实验性配置项。</source>
        <target state="needs-translation">'),
  qux: Schema.string().experimental().description('这是一个实验性配置项。</target>
      </trans-unit>
      <trans-unit id="62330">
        <source>'),
  choice: Schema.union([
    Schema.const('foo').disabled(),
    Schema.const('bar').hidden(),
    Schema.const('baz').deprecated(),
    Schema.const('qux').experimental(),
  ]).description('这些功能在 select 中也可以使用。</source>
        <target state="needs-translation">'),
  choice: Schema.union([
    Schema.const('foo').disabled(),
    Schema.const('bar').hidden(),
    Schema.const('baz').deprecated(),
    Schema.const('qux').experimental(),
  ]).description('这些功能在 select 中也可以使用。</target>
      </trans-unit>
      <trans-unit id="62332">
        <source>'),
}).description('配置项')</source>
        <target state="needs-translation">'),
}).description('配置项')</target>
      </trans-unit>
      <trans-unit id="62334">
        <source>禁用与隐藏</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">禁用與隱藏</target>
      </trans-unit>
      <trans-unit id="62336">
        <source>`.disabled()` 用于禁用某个配置项。</source>
        <target state="needs-translation">`.disabled()` 用于禁用某个配置项。</target>
      </trans-unit>
      <trans-unit id="62338">
        <source>禁用的配置项无法被用户编辑。</source>
        <target state="needs-translation">禁用的配置项无法被用户编辑。</target>
      </trans-unit>
      <trans-unit id="62340">
        <source>`.hidden()` 用于隐藏某个配置项。</source>
        <target state="needs-translation">`.hidden()` 用于隐藏某个配置项。</target>
      </trans-unit>
      <trans-unit id="62342">
        <source>隐藏的配置项不会呈现在表单中。</source>
        <target state="needs-translation">隐藏的配置项不会呈现在表单中。</target>
      </trans-unit>
      <trans-unit id="62344">
        <source>但是它们仍然会参与类型检查。</source>
        <target state="needs-translation">但是它们仍然会参与类型检查。</target>
      </trans-unit>
      <trans-unit id="62346">
        <source>许多应用会同时提供 API 和网页表单，而开发者可能不希望将全部配置项都提供给表单的填写者 (例如复杂的底层配置或者实验性设置)。</source>
        <target state="needs-translation">许多应用会同时提供 API 和网页表单，而开发者可能不希望将全部配置项都提供给表单的填写者 (例如复杂的底层配置或者实验性设置)。</target>
      </trans-unit>
      <trans-unit id="62348">
        <source>在这种情况下，禁用或隐藏部分配置项将会是一个不错的选择。</source>
        <target state="needs-translation">在这种情况下，禁用或隐藏部分配置项将会是一个不错的选择。</target>
      </trans-unit>
      <trans-unit id="62350">
        <source>除此以外，我们还提供了 `.deprecated()` 和 `.experimental()` 方法，它们分别用于标记已废弃和实验性的配置项。</source>
        <target state="needs-translation">除此以外，我们还提供了 `.deprecated()` 和 `.experimental()` 方法，它们分别用于标记已废弃和实验性的配置项。</target>
      </trans-unit>
      <trans-unit id="62352">
        <source>export default Schema.object({
  foo: Schema.number().disabled(),
  bar: Schema.number().hidden(),
  baz: Schema.string().deprecated(),
  qux: Schema.string().experimental(),
  choice: Schema.union([
    Schema.const('foo').disabled(),
    Schema.const('bar').hidden(),
    Schema.const('baz').deprecated(),
    Schema.const('qux').experimental(),
  ]),
})</source>
        <target state="needs-translation">export default Schema.object({
  foo: Schema.number().disabled(),
  bar: Schema.number().hidden(),
  baz: Schema.string().deprecated(),
  qux: Schema.string().experimental(),
  choice: Schema.union([
    Schema.const('foo').disabled(),
    Schema.const('bar').hidden(),
    Schema.const('baz').deprecated(),
    Schema.const('qux').experimental(),
  ]),
})</target>
      </trans-unit>
    </body>
  </file>
  <file id="1810" original="/[koishijs.docs] main/zh-CN/schema/meta/nested.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="62354">
        <source>schema</source>
        <target state="needs-translation">schema</target>
      </trans-unit>
      <trans-unit id="62356">
        <source>Schema.object({
  foo: Schema.object({
    bar: Schema.array(
      Schema.object({
        baz: Schema.number().required().description('在右侧填写数值。</source>
        <target state="needs-translation">Schema.object({
  foo: Schema.object({
    bar: Schema.array(
      Schema.object({
        baz: Schema.number().required().description('在右侧填写数值。</target>
      </trans-unit>
      <trans-unit id="62358">
        <source>'),
      }).description('这是数组的元素，它本身又是一个对象。</source>
        <target state="needs-translation">'),
      }).description('这是数组的元素，它本身又是一个对象。</target>
      </trans-unit>
      <trans-unit id="62360">
        <source>'),
    ).default([{ baz: 114514 }]).description('这是一个嵌套属性，类型为数组。</source>
        <target state="needs-translation">'),
    ).default([{ baz: 114514 }]).description('这是一个嵌套属性，类型为数组。</target>
      </trans-unit>
      <trans-unit id="62362">
        <source>'),
    qux: Schema.dict(
      Schema.string().required().description('在右侧填写字符串。</source>
        <target state="needs-translation">'),
    qux: Schema.dict(
      Schema.string().required().description('在右侧填写字符串。</target>
      </trans-unit>
      <trans-unit id="62364">
        <source>'),
    ).default({ welcome: 'Hello World' }).description('这是一个嵌套属性，类型为字典。</source>
        <target state="needs-translation">'),
    ).default({ welcome: 'Hello World' }).description('这是一个嵌套属性，类型为字典。</target>
      </trans-unit>
      <trans-unit id="62366">
        <source>'),
  }),
}).description('配置项')</source>
        <target state="needs-translation">'),
  }),
}).description('配置项')</target>
      </trans-unit>
      <trans-unit id="62368">
        <source>嵌套类型</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">巢狀型別</target>
      </trans-unit>
      <trans-unit id="62370">
        <source>一些类型 (例如 [Object](../basic/object.md) 和 [Array](../basic/array.md)) 允许将其他类型作为参数传入，形成新的组合类型。</source>
        <target state="needs-translation">一些类型 (例如 [Object](../basic/object.md) 和 [Array](../basic/array.md)) 允许将其他类型作为参数传入，形成新的组合类型。</target>
      </trans-unit>
      <trans-unit id="62372">
        <source>你可以任意嵌套这些类型，以满足更复杂的需求。</source>
        <target state="needs-translation">你可以任意嵌套这些类型，以满足更复杂的需求。</target>
      </trans-unit>
      <trans-unit id="62374">
        <source>例子里的 `String` 是 `Schema.string().required()` 的简写形式。</source>
        <target state="needs-translation">例子里的 `String` 是 `Schema.string().required()` 的简写形式。</target>
      </trans-unit>
      <trans-unit id="62376">
        <source>类似的写法对于 `Number` 和 `Boolean` 也是成立的。</source>
        <target state="needs-translation">类似的写法对于 `Number` 和 `Boolean` 也是成立的。</target>
      </trans-unit>
      <trans-unit id="62378">
        <source>Schema.object({
  foo: Schema.object({
    bar: Schema
      .array(Schema.object({
        baz: Schema.number().required(),
      }))
      .default([{ baz: 114514 }]),
    qux: Schema
      .dict(String)
      .default({ welcome: 'Hello World' }),
  }),
})</source>
        <target state="needs-translation">Schema.object({
  foo: Schema.object({
    bar: Schema
      .array(Schema.object({
        baz: Schema.number().required(),
      }))
      .default([{ baz: 114514 }]),
    qux: Schema
      .dict(String)
      .default({ welcome: 'Hello World' }),
  }),
})</target>
      </trans-unit>
    </body>
  </file>
  <file id="1812" original="/[koishijs.docs] main/zh-CN/schema/meta/required.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="62380">
        <source>schema</source>
        <target state="needs-translation">schema</target>
      </trans-unit>
      <trans-unit id="62382">
        <source>Schema.object({
  foo: Schema.boolean().description('这是一个可选属性。</source>
        <target state="needs-translation">Schema.object({
  foo: Schema.boolean().description('这是一个可选属性。</target>
      </trans-unit>
      <trans-unit id="62384">
        <source>'),
  bar: Schema.string().required().description('这是一个必需属性。</source>
        <target state="needs-translation">'),
  bar: Schema.string().required().description('这是一个必需属性。</target>
      </trans-unit>
      <trans-unit id="62386">
        <source>'),
}).description('配置项')</source>
        <target state="needs-translation">'),
}).description('配置项')</target>
      </trans-unit>
      <trans-unit id="62388">
        <source>必需与可选</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">必需與可選</target>
      </trans-unit>
      <trans-unit id="62390">
        <source>默认情况下，所有配置项都是可选的。</source>
        <target state="needs-translation">默认情况下，所有配置项都是可选的。</target>
      </trans-unit>
      <trans-unit id="62392">
        <source>你可以通过 `.required()` 来声明一个必需的配置项。</source>
        <target state="needs-translation">你可以通过 `.required()` 来声明一个必需的配置项。</target>
      </trans-unit>
      <trans-unit id="62394">
        <source>未配置的必需配置项的左侧会出现红色的提示线。</source>
        <target state="needs-translation">未配置的必需配置项的左侧会出现红色的提示线。</target>
      </trans-unit>
      <trans-unit id="62396">
        <source>请注意：对于字符串等原始类型，空串和未配置是两个不同的概念。</source>
        <target state="needs-translation">请注意：对于字符串等原始类型，空串和未配置是两个不同的概念。</target>
      </trans-unit>
      <trans-unit id="62398">
        <source>你可以通过控件中央的水平线来进行区分。</source>
        <target state="needs-translation">你可以通过控件中央的水平线来进行区分。</target>
      </trans-unit>
      <trans-unit id="62400">
        <source>export default Schema.object({
  foo: Schema.boolean(),
  bar: Schema.string().required(),
})</source>
        <target state="needs-translation">export default Schema.object({
  foo: Schema.boolean(),
  bar: Schema.string().required(),
})</target>
      </trans-unit>
    </body>
  </file>
  <file id="1814" original="/[koishijs.docs] main/zh-CN/schema/meta/role.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="62402">
        <source>schema</source>
        <target state="needs-translation">schema</target>
      </trans-unit>
      <trans-unit id="62404">
        <source>Schema.intersect([
  Schema.object({
    number: Schema.percent().role('').default(0.5).description('点击按钮修改数值。</source>
        <target state="needs-translation">Schema.intersect([
  Schema.object({
    number: Schema.percent().role('').default(0.5).description('点击按钮修改数值。</target>
      </trans-unit>
      <trans-unit id="62406">
        <source>'),
    string: Schema.string().default('password').description('可见的输入框。</source>
        <target state="needs-translation">'),
    string: Schema.string().default('password').description('可见的输入框。</target>
      </trans-unit>
      <trans-unit id="62408">
        <source>'),
    choice: Schema.union(['foo', 'bar', 'qux']).default('foo').description('从选择器中取值。</source>
        <target state="needs-translation">'),
    choice: Schema.union(['foo', 'bar', 'qux']).default('foo').description('从选择器中取值。</target>
      </trans-unit>
      <trans-unit id="62410">
        <source>'),
  }).description('配置项 1'),
  Schema.object({
    number: Schema.percent().role('slider').default(0.5).description('拖动滑块修改数值。</source>
        <target state="needs-translation">'),
  }).description('配置项 1'),
  Schema.object({
    number: Schema.percent().role('slider').default(0.5).description('拖动滑块修改数值。</target>
      </trans-unit>
      <trans-unit id="62412">
        <source>'),
    string: Schema.string().role('secret').default('password').description('隐藏的密码框。</source>
        <target state="needs-translation">'),
    string: Schema.string().role('secret').default('password').description('隐藏的密码框。</target>
      </trans-unit>
      <trans-unit id="62414">
        <source>'),
    choice: Schema.union(['foo', 'bar', 'qux']).default('foo').role('radio').description('从单选框中取值。</source>
        <target state="needs-translation">'),
    choice: Schema.union(['foo', 'bar', 'qux']).default('foo').role('radio').description('从单选框中取值。</target>
      </trans-unit>
      <trans-unit id="62416">
        <source>'),
  }).description('配置项 2'),
])</source>
        <target state="needs-translation">'),
  }).description('配置项 2'),
])</target>
      </trans-unit>
      <trans-unit id="62418">
        <source>配置项外观</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">配置項外觀</target>
      </trans-unit>
      <trans-unit id="62420">
        <source>`.role()` 描述了一个配置项的外观，而不会影响该类型的实际行为。</source>
        <target state="needs-translation">`.role()` 描述了一个配置项的外观，而不会影响该类型的实际行为。</target>
      </trans-unit>
      <trans-unit id="62422">
        <source>不同类型的可选外观各有不同，我们将在每种类型的示例中分别介绍。</source>
        <target state="needs-translation">不同类型的可选外观各有不同，我们将在每种类型的示例中分别介绍。</target>
      </trans-unit>
      <trans-unit id="62424">
        <source>export default Schema.object({
  number: Schema.percent().role(''),
  string: Schema.string().role(''),
  choice: Schema
    .union(['foo', 'bar', 'qux'])
    .role(''),
})</source>
        <target state="needs-translation">export default Schema.object({
  number: Schema.percent().role(''),
  string: Schema.string().role(''),
  choice: Schema
    .union(['foo', 'bar', 'qux'])
    .role(''),
})</target>
      </trans-unit>
      <trans-unit id="62426">
        <source>export default Schema.object({
  number: Schema.percent().role('slider'),
  string: Schema.string().role('secret'),
  choice: Schema
    .union(['foo', 'bar', 'qux'])
    .role('radio'),
})</source>
        <target state="needs-translation">export default Schema.object({
  number: Schema.percent().role('slider'),
  string: Schema.string().role('secret'),
  choice: Schema
    .union(['foo', 'bar', 'qux'])
    .role('radio'),
})</target>
      </trans-unit>
    </body>
  </file>
  <file id="1816" original="/[koishijs.docs] main/.vitepress/config/zh-CN.json" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="62428" resname="description">
        <source>创建跨平台、可扩展、高性能的机器人</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">建立跨平臺、可擴充套件、高效能的機器人</target>
        <context-group purpose="information">
          <context context-type="source"> -&gt; description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62430" resname="head.0.0" translate="no">
        <source>link</source>
        <target>link</target>
        <context-group purpose="information">
          <context context-type="source">head -&gt; 0 -&gt; 0</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62432" resname="head.0.1.rel" translate="no">
        <source>icon</source>
        <target>icon</target>
        <context-group purpose="information">
          <context context-type="source">head -&gt; 0 -&gt; 1 -&gt; rel</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62434" resname="head.0.1.href" translate="no">
        <source>/logo.png</source>
        <target>/logo.png</target>
        <context-group purpose="information">
          <context context-type="source">head -&gt; 0 -&gt; 1 -&gt; href</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62436" resname="head.1.0" translate="no">
        <source>link</source>
        <target>link</target>
        <context-group purpose="information">
          <context context-type="source">head -&gt; 1 -&gt; 0</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62438" resname="head.1.1.rel" translate="no">
        <source>manifest</source>
        <target>manifest</target>
        <context-group purpose="information">
          <context context-type="source">head -&gt; 1 -&gt; 1 -&gt; rel</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62440" resname="head.1.1.href" approved="yes">
        <source>/manifest/zh-CN.json</source>
        <target state="final">/manifest/zh-TW.json</target>
        <context-group purpose="information">
          <context context-type="source">head -&gt; 1 -&gt; 1 -&gt; href</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62442" resname="head.2.0" translate="no">
        <source>meta</source>
        <target>meta</target>
        <context-group purpose="information">
          <context context-type="source">head -&gt; 2 -&gt; 0</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62444" resname="head.2.1.name" translate="no">
        <source>theme-color</source>
        <target>theme-color</target>
        <context-group purpose="information">
          <context context-type="source">head -&gt; 2 -&gt; 1 -&gt; name</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62446" resname="head.2.1.content" translate="no">
        <source>#5546a3</source>
        <target>#5546a3</target>
        <context-group purpose="information">
          <context context-type="source">head -&gt; 2 -&gt; 1 -&gt; content</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62448" resname="themeConfig.editLink.text">
        <source>在 GitHub 编辑此页面</source>
        <target state="translated">在 Crowdin 上翻譯此頁面</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; editLink -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62450" resname="themeConfig.editLink.pattern" approved="yes">
        <source>https://github.com/koishijs/docs/edit/main/:path</source>
        <target state="final">https://crowdin.com/translate/koishi/:id/zhcn-zhtw</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; editLink -&gt; pattern</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62452" resname="themeConfig.navText">
        <source>导航</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">導覽</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; navText</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62454" resname="themeConfig.nav.0.text">
        <source>入门</source>
        <target state="translated">入門</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; nav -&gt; 0 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62456" resname="themeConfig.nav.0.link" translate="no">
        <source>/manual/introduction.md</source>
        <target>/manual/introduction.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; nav -&gt; 0 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62458" resname="themeConfig.nav.0.activeMatch" translate="no">
        <source>/manual/</source>
        <target>/manual/</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; nav -&gt; 0 -&gt; activeMatch</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62460" resname="themeConfig.nav.1.text">
        <source>开发</source>
        <target state="translated">開發</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; nav -&gt; 1 -&gt; text</context>
          <context context-type="x-crowdin-screenshot">https://crowdin.com/s/wrap/b3d383g3i4a3v6c3k5f605p485r4v443l405p4e4u46535r4l646a6l4i443k4i615n4?t=62460</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62462" resname="themeConfig.nav.1.items.0.text">
        <source>开发指南</source>
        <target state="needs-translation">开发指南</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; nav -&gt; 1 -&gt; items -&gt; 0 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62464" resname="themeConfig.nav.1.items.0.link" translate="no">
        <source>/guide/</source>
        <target>/guide/</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; nav -&gt; 1 -&gt; items -&gt; 0 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62466" resname="themeConfig.nav.1.items.1.text">
        <source>进阶指南</source>
        <target state="needs-translation">进阶指南</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; nav -&gt; 1 -&gt; items -&gt; 1 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62468" resname="themeConfig.nav.1.items.1.link" translate="no">
        <source>/cookbook/</source>
        <target>/cookbook/</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; nav -&gt; 1 -&gt; items -&gt; 1 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62470" resname="themeConfig.nav.1.items.2.text">
        <source>API 参考</source>
        <target state="needs-translation">API 参考</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; nav -&gt; 1 -&gt; items -&gt; 2 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62472" resname="themeConfig.nav.1.items.2.link" translate="no">
        <source>/api/</source>
        <target>/api/</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; nav -&gt; 1 -&gt; items -&gt; 2 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62474" resname="themeConfig.nav.1.items.3.text">
        <source>演练场：配置构型</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">演練場：配置構型</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; nav -&gt; 1 -&gt; items -&gt; 3 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62476" resname="themeConfig.nav.1.items.3.link" translate="no">
        <source>/schema/</source>
        <target>/schema/</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; nav -&gt; 1 -&gt; items -&gt; 3 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62478" resname="themeConfig.nav.1.activeMatch" translate="no">
        <source>/(guide|api|schema|cookbook)/</source>
        <target>/(guide|api|schema|cookbook)/</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; nav -&gt; 1 -&gt; activeMatch</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62480" resname="themeConfig.nav.2.text">
        <source>插件</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">外掛</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; nav -&gt; 2 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62482" resname="themeConfig.nav.2.items.0.text">
        <source>插件市场</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">外掛市場</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; nav -&gt; 2 -&gt; items -&gt; 0 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62484" resname="themeConfig.nav.2.items.0.link" translate="no">
        <source>/market/</source>
        <target>/market/</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; nav -&gt; 2 -&gt; items -&gt; 0 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62486" resname="themeConfig.nav.2.items.1.text">
        <source>官方插件一览</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">官方外掛一覽</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; nav -&gt; 2 -&gt; items -&gt; 1 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62488" resname="themeConfig.nav.2.items.1.link" translate="no">
        <source>/plugins/</source>
        <target>/plugins/</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; nav -&gt; 2 -&gt; items -&gt; 1 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62490" resname="themeConfig.nav.2.activeMatch" translate="no">
        <source>/(plugins|market)/</source>
        <target>/(plugins|market)/</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; nav -&gt; 2 -&gt; activeMatch</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62492" resname="themeConfig.nav.3.text">
        <source>更多</source>
        <target state="translated">更多</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; nav -&gt; 3 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62494" resname="themeConfig.nav.3.items.0.text">
        <source>参与讨论</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">參與討論</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; nav -&gt; 3 -&gt; items -&gt; 0 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62496" resname="themeConfig.nav.3.items.0.link" translate="no">
        <source>/about/contact.md</source>
        <target>/about/contact.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; nav -&gt; 3 -&gt; items -&gt; 0 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63924" resname="themeConfig.nav.3.items.1.text">
        <source>社区资源</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">社區資源</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; nav -&gt; 3 -&gt; items -&gt; 1 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63926" resname="themeConfig.nav.3.items.1.link" translate="no">
        <source>/about/community.md</source>
        <target>/about/community.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; nav -&gt; 3 -&gt; items -&gt; 1 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63928" resname="themeConfig.nav.3.items.2.text">
        <source>各版本介绍</source>
        <target state="needs-translation">各版本介绍</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; nav -&gt; 3 -&gt; items -&gt; 2 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63930" resname="themeConfig.nav.3.items.2.link" translate="no">
        <source>/releases/index.md</source>
        <target>/releases/index.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; nav -&gt; 3 -&gt; items -&gt; 2 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62502" resname="themeConfig.nav.3.activeMatch" translate="no">
        <source>/(about|releases)/</source>
        <target>/(about|releases)/</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; nav -&gt; 3 -&gt; activeMatch</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62504" resname="themeConfig.sidebar./manual/.0.text" translate="no">
        <source></source>
        <target></target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /manual/ -&gt; 0 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62506" resname="themeConfig.sidebar./manual/.0.items.0.text">
        <source>介绍</source>
        <target state="translated">介紹</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /manual/ -&gt; 0 -&gt; items -&gt; 0 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62508" resname="themeConfig.sidebar./manual/.0.items.0.link" translate="no">
        <source>/manual/introduction.md</source>
        <target>/manual/introduction.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /manual/ -&gt; 0 -&gt; items -&gt; 0 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62510" resname="themeConfig.sidebar./manual/.1.text" translate="no">
        <source></source>
        <target></target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /manual/ -&gt; 1 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62512" resname="themeConfig.sidebar./manual/.1.items.0.text">
        <source>安装</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">安裝</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /manual/ -&gt; 1 -&gt; items -&gt; 0 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62514" resname="themeConfig.sidebar./manual/.1.items.0.link" translate="no">
        <source>/manual/starter/</source>
        <target>/manual/starter/</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /manual/ -&gt; 1 -&gt; items -&gt; 0 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62516" resname="themeConfig.sidebar./manual/.1.items.1.text">
        <source>为 Windows 安装</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">為 Windows 安裝</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /manual/ -&gt; 1 -&gt; items -&gt; 1 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62518" resname="themeConfig.sidebar./manual/.1.items.1.link" translate="no">
        <source>/manual/starter/windows.md</source>
        <target>/manual/starter/windows.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /manual/ -&gt; 1 -&gt; items -&gt; 1 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62520" resname="themeConfig.sidebar./manual/.1.items.2.text">
        <source>为 macOS 安装</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">為 macOS 安裝</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /manual/ -&gt; 1 -&gt; items -&gt; 2 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62522" resname="themeConfig.sidebar./manual/.1.items.2.link" translate="no">
        <source>/manual/starter/macos.md</source>
        <target>/manual/starter/macos.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /manual/ -&gt; 1 -&gt; items -&gt; 2 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62524" resname="themeConfig.sidebar./manual/.1.items.3.text">
        <source>为 Linux 安装</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">為 Linux 安裝</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /manual/ -&gt; 1 -&gt; items -&gt; 3 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62526" resname="themeConfig.sidebar./manual/.1.items.3.link" translate="no">
        <source>/manual/starter/linux.md</source>
        <target>/manual/starter/linux.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /manual/ -&gt; 1 -&gt; items -&gt; 3 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62528" resname="themeConfig.sidebar./manual/.1.items.4.text">
        <source>为 Android 安装</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">為 Android 安裝</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /manual/ -&gt; 1 -&gt; items -&gt; 4 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62530" resname="themeConfig.sidebar./manual/.1.items.4.link" translate="no">
        <source>/manual/starter/android.md</source>
        <target>/manual/starter/android.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /manual/ -&gt; 1 -&gt; items -&gt; 4 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62532" resname="themeConfig.sidebar./manual/.1.items.5.text">
        <source>在容器中使用</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">在容器中使用</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /manual/ -&gt; 1 -&gt; items -&gt; 5 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62534" resname="themeConfig.sidebar./manual/.1.items.5.link" translate="no">
        <source>/manual/starter/docker.md</source>
        <target>/manual/starter/docker.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /manual/ -&gt; 1 -&gt; items -&gt; 5 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62536" resname="themeConfig.sidebar./manual/.1.items.6.text">
        <source>创建模板项目</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">建立模板專案</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /manual/ -&gt; 1 -&gt; items -&gt; 6 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62538" resname="themeConfig.sidebar./manual/.1.items.6.link" translate="no">
        <source>/manual/starter/boilerplate.md</source>
        <target>/manual/starter/boilerplate.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /manual/ -&gt; 1 -&gt; items -&gt; 6 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62540" resname="themeConfig.sidebar./manual/.1.items.7.text">
        <source>作为依赖调用</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">作為依賴呼叫</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /manual/ -&gt; 1 -&gt; items -&gt; 7 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62542" resname="themeConfig.sidebar./manual/.1.items.7.link" translate="no">
        <source>/manual/starter/direct.md</source>
        <target>/manual/starter/direct.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /manual/ -&gt; 1 -&gt; items -&gt; 7 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62544" resname="themeConfig.sidebar./manual/.2.text">
        <source>使用</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">使用</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /manual/ -&gt; 2 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62546" resname="themeConfig.sidebar./manual/.2.items.0.text">
        <source>安装和配置插件</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">安裝和配置外掛</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /manual/ -&gt; 2 -&gt; items -&gt; 0 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62548" resname="themeConfig.sidebar./manual/.2.items.0.link" translate="no">
        <source>/manual/usage/market.md</source>
        <target>/manual/usage/market.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /manual/ -&gt; 2 -&gt; items -&gt; 0 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62550" resname="themeConfig.sidebar./manual/.2.items.1.text">
        <source>第一次对话</source>
        <target state="needs-translation">第一次对话</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /manual/ -&gt; 2 -&gt; items -&gt; 1 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62552" resname="themeConfig.sidebar./manual/.2.items.1.link" translate="no">
        <source>/manual/usage/adapter.md</source>
        <target>/manual/usage/adapter.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /manual/ -&gt; 2 -&gt; items -&gt; 1 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62554" resname="themeConfig.sidebar./manual/.2.items.2.text">
        <source>指令系统</source>
        <target state="translated">指令系統</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /manual/ -&gt; 2 -&gt; items -&gt; 2 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62556" resname="themeConfig.sidebar./manual/.2.items.2.link" translate="no">
        <source>/manual/usage/command.md</source>
        <target>/manual/usage/command.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /manual/ -&gt; 2 -&gt; items -&gt; 2 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62558" resname="themeConfig.sidebar./manual/.2.items.3.text">
        <source>账号登录与绑定</source>
        <target state="needs-translation">账号登录与绑定</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /manual/ -&gt; 2 -&gt; items -&gt; 3 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62560" resname="themeConfig.sidebar./manual/.2.items.3.link" translate="no">
        <source>/manual/usage/platform.md</source>
        <target>/manual/usage/platform.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /manual/ -&gt; 2 -&gt; items -&gt; 3 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62562" resname="themeConfig.sidebar./manual/.2.items.4.text">
        <source>深入定制机器人</source>
        <target state="needs-translation">深入定制机器人</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /manual/ -&gt; 2 -&gt; items -&gt; 4 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62564" resname="themeConfig.sidebar./manual/.2.items.4.link" translate="no">
        <source>/manual/usage/customize.md</source>
        <target>/manual/usage/customize.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /manual/ -&gt; 2 -&gt; items -&gt; 4 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62566" resname="themeConfig.sidebar./manual/.3.text">
        <source>配方</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">配方</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /manual/ -&gt; 3 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62568" resname="themeConfig.sidebar./manual/.3.items.0.text">
        <source>指令进阶技巧</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">指令進階技巧</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /manual/ -&gt; 3 -&gt; items -&gt; 0 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62570" resname="themeConfig.sidebar./manual/.3.items.0.link" translate="no">
        <source>/manual/recipe/execution.md</source>
        <target>/manual/recipe/execution.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /manual/ -&gt; 3 -&gt; items -&gt; 0 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62572" resname="themeConfig.sidebar./manual/.3.items.1.text">
        <source>维护多份配置</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">維護多份配置</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /manual/ -&gt; 3 -&gt; items -&gt; 1 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62574" resname="themeConfig.sidebar./manual/.3.items.1.link" translate="no">
        <source>/manual/recipe/multiple.md</source>
        <target>/manual/recipe/multiple.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /manual/ -&gt; 3 -&gt; items -&gt; 1 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62576" resname="themeConfig.sidebar./manual/.3.items.2.text">
        <source>搜索插件市场</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">搜尋外掛市場</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /manual/ -&gt; 3 -&gt; items -&gt; 2 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62578" resname="themeConfig.sidebar./manual/.3.items.2.link" translate="no">
        <source>/manual/recipe/search.md</source>
        <target>/manual/recipe/search.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /manual/ -&gt; 3 -&gt; items -&gt; 2 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62580" resname="themeConfig.sidebar./manual/.3.items.3.text">
        <source>公网部署</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">公網部署</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /manual/ -&gt; 3 -&gt; items -&gt; 3 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62582" resname="themeConfig.sidebar./manual/.3.items.3.link" translate="no">
        <source>/manual/recipe/server.md</source>
        <target>/manual/recipe/server.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /manual/ -&gt; 3 -&gt; items -&gt; 3 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62584" resname="themeConfig.sidebar./manual/.4.text">
        <source>启动器</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">啟動器</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /manual/ -&gt; 4 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62586" resname="themeConfig.sidebar./manual/.4.items.0.text">
        <source>系统要求</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">系統要求</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /manual/ -&gt; 4 -&gt; items -&gt; 0 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62588" resname="themeConfig.sidebar./manual/.4.items.0.link" translate="no">
        <source>/manual/launcher/system.md</source>
        <target>/manual/launcher/system.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /manual/ -&gt; 4 -&gt; items -&gt; 0 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62590" resname="themeConfig.sidebar./manual/.4.items.1.text">
        <source>命令行工具</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">命令列工具</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /manual/ -&gt; 4 -&gt; items -&gt; 1 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62592" resname="themeConfig.sidebar./manual/.4.items.1.link" translate="no">
        <source>/manual/launcher/cli.md</source>
        <target>/manual/launcher/cli.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /manual/ -&gt; 4 -&gt; items -&gt; 1 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62594" resname="themeConfig.sidebar./guide/.0.text" translate="no">
        <source></source>
        <target></target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /guide/ -&gt; 0 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62596" resname="themeConfig.sidebar./guide/.0.items.0.text">
        <source>总览</source>
        <target state="translated">總覽</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /guide/ -&gt; 0 -&gt; items -&gt; 0 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62598" resname="themeConfig.sidebar./guide/.0.items.0.link" translate="no">
        <source>/guide/</source>
        <target>/guide/</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /guide/ -&gt; 0 -&gt; items -&gt; 0 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62600" resname="themeConfig.sidebar./guide/.1.text">
        <source>开发起步</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">開發起步</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /guide/ -&gt; 1 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62602" resname="themeConfig.sidebar./guide/.1.items.0.text">
        <source>环境搭建</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">環境搭建</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /guide/ -&gt; 1 -&gt; items -&gt; 0 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62604" resname="themeConfig.sidebar./guide/.1.items.0.link" translate="no">
        <source>/guide/develop/setup.md</source>
        <target>/guide/develop/setup.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /guide/ -&gt; 1 -&gt; items -&gt; 0 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62606" resname="themeConfig.sidebar./guide/.1.items.1.text">
        <source>配置文件</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">配置檔案</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /guide/ -&gt; 1 -&gt; items -&gt; 1 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62608" resname="themeConfig.sidebar./guide/.1.items.1.link" translate="no">
        <source>/guide/develop/config.md</source>
        <target>/guide/develop/config.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /guide/ -&gt; 1 -&gt; items -&gt; 1 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62610" resname="themeConfig.sidebar./guide/.1.items.2.text">
        <source>启动脚本</source>
        <target state="translated">啟動指令碼</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /guide/ -&gt; 1 -&gt; items -&gt; 2 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62612" resname="themeConfig.sidebar./guide/.1.items.2.link" translate="no">
        <source>/guide/develop/script.md</source>
        <target>/guide/develop/script.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /guide/ -&gt; 1 -&gt; items -&gt; 2 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62614" resname="themeConfig.sidebar./guide/.1.items.3.text">
        <source>工作区开发</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">工作區開發</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /guide/ -&gt; 1 -&gt; items -&gt; 3 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62616" resname="themeConfig.sidebar./guide/.1.items.3.link" translate="no">
        <source>/guide/develop/workspace.md</source>
        <target>/guide/develop/workspace.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /guide/ -&gt; 1 -&gt; items -&gt; 3 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62618" resname="themeConfig.sidebar./guide/.1.items.4.text">
        <source>发布插件</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">釋出外掛</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /guide/ -&gt; 1 -&gt; items -&gt; 4 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62620" resname="themeConfig.sidebar./guide/.1.items.4.link" translate="no">
        <source>/guide/develop/publish.md</source>
        <target>/guide/develop/publish.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /guide/ -&gt; 1 -&gt; items -&gt; 4 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62622" resname="themeConfig.sidebar./guide/.2.text">
        <source>交互基础</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">互動基礎</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /guide/ -&gt; 2 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62624" resname="themeConfig.sidebar./guide/.2.items.0.text">
        <source>指令开发</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">指令開發</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /guide/ -&gt; 2 -&gt; items -&gt; 0 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62626" resname="themeConfig.sidebar./guide/.2.items.0.link" translate="no">
        <source>/guide/basic/command.md</source>
        <target>/guide/basic/command.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /guide/ -&gt; 2 -&gt; items -&gt; 0 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62628" resname="themeConfig.sidebar./guide/.2.items.1.text">
        <source>事件系统</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">事件系統</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /guide/ -&gt; 2 -&gt; items -&gt; 1 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62630" resname="themeConfig.sidebar./guide/.2.items.1.link" translate="no">
        <source>/guide/basic/events.md</source>
        <target>/guide/basic/events.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /guide/ -&gt; 2 -&gt; items -&gt; 1 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62632" resname="themeConfig.sidebar./guide/.2.items.2.text">
        <source>中间件</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">中介軟體</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /guide/ -&gt; 2 -&gt; items -&gt; 2 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62634" resname="themeConfig.sidebar./guide/.2.items.2.link" translate="no">
        <source>/guide/basic/middleware.md</source>
        <target>/guide/basic/middleware.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /guide/ -&gt; 2 -&gt; items -&gt; 2 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62636" resname="themeConfig.sidebar./guide/.2.items.3.text">
        <source>消息元素</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">訊息元素</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /guide/ -&gt; 2 -&gt; items -&gt; 3 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62638" resname="themeConfig.sidebar./guide/.2.items.3.link" translate="no">
        <source>/guide/basic/element.md</source>
        <target>/guide/basic/element.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /guide/ -&gt; 2 -&gt; items -&gt; 3 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62640" resname="themeConfig.sidebar./guide/.2.items.4.text">
        <source>进阶用法</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">進階用法</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /guide/ -&gt; 2 -&gt; items -&gt; 4 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62642" resname="themeConfig.sidebar./guide/.2.items.4.link" translate="no">
        <source>/guide/basic/advanced.md</source>
        <target>/guide/basic/advanced.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /guide/ -&gt; 2 -&gt; items -&gt; 4 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62644" resname="themeConfig.sidebar./guide/.3.text">
        <source>模块化</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">模組化</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /guide/ -&gt; 3 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62646" resname="themeConfig.sidebar./guide/.3.items.0.text">
        <source>认识插件</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">認識外掛</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /guide/ -&gt; 3 -&gt; items -&gt; 0 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62648" resname="themeConfig.sidebar./guide/.3.items.0.link" translate="no">
        <source>/guide/plugin/</source>
        <target>/guide/plugin/</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /guide/ -&gt; 3 -&gt; items -&gt; 0 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62650" resname="themeConfig.sidebar./guide/.3.items.1.text">
        <source>配置构型</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">配置構型</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /guide/ -&gt; 3 -&gt; items -&gt; 1 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62652" resname="themeConfig.sidebar./guide/.3.items.1.link" translate="no">
        <source>/guide/plugin/schema.md</source>
        <target>/guide/plugin/schema.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /guide/ -&gt; 3 -&gt; items -&gt; 1 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62654" resname="themeConfig.sidebar./guide/.3.items.2.text">
        <source>生命周期</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">生命週期</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /guide/ -&gt; 3 -&gt; items -&gt; 2 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62656" resname="themeConfig.sidebar./guide/.3.items.2.link" translate="no">
        <source>/guide/plugin/lifecycle.md</source>
        <target>/guide/plugin/lifecycle.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /guide/ -&gt; 3 -&gt; items -&gt; 2 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62658" resname="themeConfig.sidebar./guide/.3.items.3.text">
        <source>服务与依赖</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">服務與依賴</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /guide/ -&gt; 3 -&gt; items -&gt; 3 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62660" resname="themeConfig.sidebar./guide/.3.items.3.link" translate="no">
        <source>/guide/plugin/service.md</source>
        <target>/guide/plugin/service.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /guide/ -&gt; 3 -&gt; items -&gt; 3 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62662" resname="themeConfig.sidebar./guide/.3.items.4.text">
        <source>过滤器</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">過濾器</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /guide/ -&gt; 3 -&gt; items -&gt; 4 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62664" resname="themeConfig.sidebar./guide/.3.items.4.link" translate="no">
        <source>/guide/plugin/filter.md</source>
        <target>/guide/plugin/filter.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /guide/ -&gt; 3 -&gt; items -&gt; 4 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62666" resname="themeConfig.sidebar./guide/.4.text">
        <source>数据库</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">資料庫</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /guide/ -&gt; 4 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62668" resname="themeConfig.sidebar./guide/.4.items.0.text">
        <source>基本用法</source>
        <target state="needs-translation">基本用法</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /guide/ -&gt; 4 -&gt; items -&gt; 0 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62670" resname="themeConfig.sidebar./guide/.4.items.0.link" translate="no">
        <source>/guide/database/</source>
        <target>/guide/database/</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /guide/ -&gt; 4 -&gt; items -&gt; 0 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62672" resname="themeConfig.sidebar./guide/.4.items.1.text">
        <source>数据模型</source>
        <target state="needs-translation">数据模型</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /guide/ -&gt; 4 -&gt; items -&gt; 1 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62674" resname="themeConfig.sidebar./guide/.4.items.1.link" translate="no">
        <source>/guide/database/model.md</source>
        <target>/guide/database/model.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /guide/ -&gt; 4 -&gt; items -&gt; 1 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62676" resname="themeConfig.sidebar./guide/.4.items.2.text">
        <source>进阶查询技巧</source>
        <target state="needs-translation">进阶查询技巧</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /guide/ -&gt; 4 -&gt; items -&gt; 2 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62678" resname="themeConfig.sidebar./guide/.4.items.2.link" translate="no">
        <source>/guide/database/selection.md</source>
        <target>/guide/database/selection.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /guide/ -&gt; 4 -&gt; items -&gt; 2 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62680" resname="themeConfig.sidebar./guide/.4.items.3.text">
        <source>内置数据结构</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">內建資料結構</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /guide/ -&gt; 4 -&gt; items -&gt; 3 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62682" resname="themeConfig.sidebar./guide/.4.items.3.link" translate="no">
        <source>/guide/database/builtin.md</source>
        <target>/guide/database/builtin.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /guide/ -&gt; 4 -&gt; items -&gt; 3 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62684" resname="themeConfig.sidebar./guide/.4.items.4.text">
        <source>权限管理</source>
        <target state="translated">權限管理</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /guide/ -&gt; 4 -&gt; items -&gt; 4 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62686" resname="themeConfig.sidebar./guide/.4.items.4.link" translate="no">
        <source>/guide/database/permission.md</source>
        <target>/guide/database/permission.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /guide/ -&gt; 4 -&gt; items -&gt; 4 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62688" resname="themeConfig.sidebar./guide/.5.text">
        <source>跨平台</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">跨平臺</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /guide/ -&gt; 5 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62690" resname="themeConfig.sidebar./guide/.5.items.0.text">
        <source>基础知识</source>
        <target state="needs-translation">基础知识</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /guide/ -&gt; 5 -&gt; items -&gt; 0 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62692" resname="themeConfig.sidebar./guide/.5.items.0.link" translate="no">
        <source>/guide/adapter/index.md</source>
        <target>/guide/adapter/index.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /guide/ -&gt; 5 -&gt; items -&gt; 0 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62694" resname="themeConfig.sidebar./guide/.5.items.1.text">
        <source>实现机器人</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">實作機器人</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /guide/ -&gt; 5 -&gt; items -&gt; 1 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62696" resname="themeConfig.sidebar./guide/.5.items.1.link" translate="no">
        <source>/guide/adapter/bot.md</source>
        <target>/guide/adapter/bot.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /guide/ -&gt; 5 -&gt; items -&gt; 1 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62698" resname="themeConfig.sidebar./guide/.5.items.2.text">
        <source>实现适配器</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">實作配接器</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /guide/ -&gt; 5 -&gt; items -&gt; 2 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62700" resname="themeConfig.sidebar./guide/.5.items.2.link" translate="no">
        <source>/guide/adapter/adapter.md</source>
        <target>/guide/adapter/adapter.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /guide/ -&gt; 5 -&gt; items -&gt; 2 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62702" resname="themeConfig.sidebar./guide/.5.items.3.text">
        <source>消息编码</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">訊息編碼</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /guide/ -&gt; 5 -&gt; items -&gt; 3 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62704" resname="themeConfig.sidebar./guide/.5.items.3.link" translate="no">
        <source>/guide/adapter/message.md</source>
        <target>/guide/adapter/message.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /guide/ -&gt; 5 -&gt; items -&gt; 3 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62706" resname="themeConfig.sidebar./guide/.5.items.4.text">
        <source>平台集成</source>
        <target state="needs-translation">平台集成</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /guide/ -&gt; 5 -&gt; items -&gt; 4 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62708" resname="themeConfig.sidebar./guide/.5.items.4.link" translate="no">
        <source>/guide/adapter/integration.md</source>
        <target>/guide/adapter/integration.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /guide/ -&gt; 5 -&gt; items -&gt; 4 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62710" resname="themeConfig.sidebar./guide/.6.text">
        <source>控制台</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">控制檯</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /guide/ -&gt; 6 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62712" resname="themeConfig.sidebar./guide/.6.items.0.text">
        <source>扩展控制台</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">擴充套件控制檯</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /guide/ -&gt; 6 -&gt; items -&gt; 0 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62714" resname="themeConfig.sidebar./guide/.6.items.0.link" translate="no">
        <source>/guide/console/index.md</source>
        <target>/guide/console/index.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /guide/ -&gt; 6 -&gt; items -&gt; 0 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62716" resname="themeConfig.sidebar./guide/.6.items.1.text">
        <source>数据交互</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">資料互動</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /guide/ -&gt; 6 -&gt; items -&gt; 1 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62718" resname="themeConfig.sidebar./guide/.6.items.1.link" translate="no">
        <source>/guide/console/data.md</source>
        <target>/guide/console/data.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /guide/ -&gt; 6 -&gt; items -&gt; 1 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62720" resname="themeConfig.sidebar./guide/.6.items.2.text">
        <source>客户端开发</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">客戶端開發</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /guide/ -&gt; 6 -&gt; items -&gt; 2 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62722" resname="themeConfig.sidebar./guide/.6.items.2.link" translate="no">
        <source>/guide/console/client.md</source>
        <target>/guide/console/client.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /guide/ -&gt; 6 -&gt; items -&gt; 2 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62724" resname="themeConfig.sidebar./guide/.6.items.3.text">
        <source>主题开发</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">主題開發</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /guide/ -&gt; 6 -&gt; items -&gt; 3 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62726" resname="themeConfig.sidebar./guide/.6.items.3.link" translate="no">
        <source>/guide/console/theme.md</source>
        <target>/guide/console/theme.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /guide/ -&gt; 6 -&gt; items -&gt; 3 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62728" resname="themeConfig.sidebar./guide/.7.text">
        <source>国际化</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">國際化</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /guide/ -&gt; 7 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62730" resname="themeConfig.sidebar./guide/.7.items.0.text">
        <source>基本用法</source>
        <target state="needs-translation">基本用法</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /guide/ -&gt; 7 -&gt; items -&gt; 0 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62732" resname="themeConfig.sidebar./guide/.7.items.0.link" translate="no">
        <source>/guide/i18n/index.md</source>
        <target>/guide/i18n/index.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /guide/ -&gt; 7 -&gt; items -&gt; 0 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62734" resname="themeConfig.sidebar./guide/.7.items.1.text">
        <source>本地化文件</source>
        <target state="needs-translation">本地化文件</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /guide/ -&gt; 7 -&gt; items -&gt; 1 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62736" resname="themeConfig.sidebar./guide/.7.items.1.link" translate="no">
        <source>/guide/i18n/translation.md</source>
        <target>/guide/i18n/translation.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /guide/ -&gt; 7 -&gt; items -&gt; 1 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62738" resname="themeConfig.sidebar./guide/.7.items.2.text">
        <source>语言包开发</source>
        <target state="needs-translation">语言包开发</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /guide/ -&gt; 7 -&gt; items -&gt; 2 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62740" resname="themeConfig.sidebar./guide/.7.items.2.link" translate="no">
        <source>/guide/i18n/lang-pack.md</source>
        <target>/guide/i18n/lang-pack.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /guide/ -&gt; 7 -&gt; items -&gt; 2 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62742" resname="themeConfig.sidebar./guide/.7.items.3.text">
        <source>接入 Crowdin</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">接入 Crowdin</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /guide/ -&gt; 7 -&gt; items -&gt; 3 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62744" resname="themeConfig.sidebar./guide/.7.items.3.link" translate="no">
        <source>/guide/i18n/crowdin.md</source>
        <target>/guide/i18n/crowdin.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /guide/ -&gt; 7 -&gt; items -&gt; 3 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62746" resname="themeConfig.sidebar./guide/.8.items.0.text">
        <source>→ 进阶指南</source>
        <target state="needs-translation">→ 进阶指南</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /guide/ -&gt; 8 -&gt; items -&gt; 0 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62748" resname="themeConfig.sidebar./guide/.8.items.0.link" translate="no">
        <source>/cookbook/</source>
        <target>/cookbook/</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /guide/ -&gt; 8 -&gt; items -&gt; 0 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62750" resname="themeConfig.sidebar./api/.0.text" translate="no">
        <source></source>
        <target></target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /api/ -&gt; 0 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62752" resname="themeConfig.sidebar./api/.0.items.0.text">
        <source>总览</source>
        <target state="translated">總覽</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /api/ -&gt; 0 -&gt; items -&gt; 0 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62754" resname="themeConfig.sidebar./api/.0.items.0.link" translate="no">
        <source>/api/</source>
        <target>/api/</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /api/ -&gt; 0 -&gt; items -&gt; 0 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62756" resname="themeConfig.sidebar./api/.0.items.1.text">
        <source>术语表</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">術語表</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /api/ -&gt; 0 -&gt; items -&gt; 1 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62758" resname="themeConfig.sidebar./api/.0.items.1.link" translate="no">
        <source>/api/glossary.md</source>
        <target>/api/glossary.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /api/ -&gt; 0 -&gt; items -&gt; 1 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62760" resname="themeConfig.sidebar./api/.1.text">
        <source>演练场</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">演練場</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /api/ -&gt; 1 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62762" resname="themeConfig.sidebar./api/.1.desc">
        <source>我们专门为一些 API 提供了交互式的演练场。</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">我們專門為一些 API 提供了互動式的演練場。</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /api/ -&gt; 1 -&gt; desc</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62764" resname="themeConfig.sidebar./api/.1.items.0.text">
        <source>配置构型</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">配置構型</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /api/ -&gt; 1 -&gt; items -&gt; 0 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62766" resname="themeConfig.sidebar./api/.1.items.0.link" translate="no">
        <source>/schema/</source>
        <target>/schema/</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /api/ -&gt; 1 -&gt; items -&gt; 0 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62768" resname="themeConfig.sidebar./api/.2.text">
        <source>核心模块</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">核心模組</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /api/ -&gt; 2 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62770" resname="themeConfig.sidebar./api/.2.items.0.text">
        <source>适配器 (Adapter)</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">配接器 (Adapter)</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /api/ -&gt; 2 -&gt; items -&gt; 0 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62772" resname="themeConfig.sidebar./api/.2.items.0.link" translate="no">
        <source>/api/core/adapter.md</source>
        <target>/api/core/adapter.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /api/ -&gt; 2 -&gt; items -&gt; 0 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62774" resname="themeConfig.sidebar./api/.2.items.1.text">
        <source>应用 (App)</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">應用 (App)</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /api/ -&gt; 2 -&gt; items -&gt; 1 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62776" resname="themeConfig.sidebar./api/.2.items.1.link" translate="no">
        <source>/api/core/app.md</source>
        <target>/api/core/app.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /api/ -&gt; 2 -&gt; items -&gt; 1 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62778" resname="themeConfig.sidebar./api/.2.items.2.text">
        <source>机器人 (Bot)</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">機器人 (Bot)</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /api/ -&gt; 2 -&gt; items -&gt; 2 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62780" resname="themeConfig.sidebar./api/.2.items.2.link" translate="no">
        <source>/api/core/bot.md</source>
        <target>/api/core/bot.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /api/ -&gt; 2 -&gt; items -&gt; 2 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62782" resname="themeConfig.sidebar./api/.2.items.3.text">
        <source>指令 (Command)</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">指令 (Command)</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /api/ -&gt; 2 -&gt; items -&gt; 3 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62784" resname="themeConfig.sidebar./api/.2.items.3.link" translate="no">
        <source>/api/core/command.md</source>
        <target>/api/core/command.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /api/ -&gt; 2 -&gt; items -&gt; 3 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62786" resname="themeConfig.sidebar./api/.2.items.4.text">
        <source>上下文 (Context)</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">上下文 (Context)</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /api/ -&gt; 2 -&gt; items -&gt; 4 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62788" resname="themeConfig.sidebar./api/.2.items.4.link" translate="no">
        <source>/api/core/context.md</source>
        <target>/api/core/context.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /api/ -&gt; 2 -&gt; items -&gt; 4 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62790" resname="themeConfig.sidebar./api/.2.items.5.text">
        <source>事件 (Events)</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">事件 (Events)</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /api/ -&gt; 2 -&gt; items -&gt; 5 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62792" resname="themeConfig.sidebar./api/.2.items.5.link" translate="no">
        <source>/api/core/events.md</source>
        <target>/api/core/events.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /api/ -&gt; 2 -&gt; items -&gt; 5 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62794" resname="themeConfig.sidebar./api/.2.items.6.text">
        <source>会话 (Session)</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">會話 (Session)</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /api/ -&gt; 2 -&gt; items -&gt; 6 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62796" resname="themeConfig.sidebar./api/.2.items.6.link" translate="no">
        <source>/api/core/session.md</source>
        <target>/api/core/session.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /api/ -&gt; 2 -&gt; items -&gt; 6 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62798" resname="themeConfig.sidebar./api/.3.text">
        <source>内置服务</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">內建服務</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /api/ -&gt; 3 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62800" resname="themeConfig.sidebar./api/.3.items.0.text">
        <source>事件系统 (Events)</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">事件系統 (Events)</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /api/ -&gt; 3 -&gt; items -&gt; 0 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62802" resname="themeConfig.sidebar./api/.3.items.0.link" translate="no">
        <source>/api/service/events.md</source>
        <target>/api/service/events.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /api/ -&gt; 3 -&gt; items -&gt; 0 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62804" resname="themeConfig.sidebar./api/.3.items.1.text">
        <source>过滤器 (Filter)</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">過濾器 (Filter)</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /api/ -&gt; 3 -&gt; items -&gt; 1 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62806" resname="themeConfig.sidebar./api/.3.items.1.link" translate="no">
        <source>/api/service/filter.md</source>
        <target>/api/service/filter.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /api/ -&gt; 3 -&gt; items -&gt; 1 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62808" resname="themeConfig.sidebar./api/.3.items.2.text">
        <source>网络请求 (HTTP)</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">網路請求 (HTTP)</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /api/ -&gt; 3 -&gt; items -&gt; 2 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62810" resname="themeConfig.sidebar./api/.3.items.2.link" translate="no">
        <source>/api/service/http.md</source>
        <target>/api/service/http.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /api/ -&gt; 3 -&gt; items -&gt; 2 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62812" resname="themeConfig.sidebar./api/.3.items.3.text">
        <source>国际化 (I18n)</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">國際化 (I18n)</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /api/ -&gt; 3 -&gt; items -&gt; 3 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62814" resname="themeConfig.sidebar./api/.3.items.3.link" translate="no">
        <source>/api/service/i18n.md</source>
        <target>/api/service/i18n.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /api/ -&gt; 3 -&gt; items -&gt; 3 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62816" resname="themeConfig.sidebar./api/.3.items.4.text">
        <source>加载器 (Loader)</source>
        <target state="needs-translation">加载器 (Loader)</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /api/ -&gt; 3 -&gt; items -&gt; 4 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62818" resname="themeConfig.sidebar./api/.3.items.4.link" translate="no">
        <source>/api/service/loader.md</source>
        <target>/api/service/loader.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /api/ -&gt; 3 -&gt; items -&gt; 4 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62820" resname="themeConfig.sidebar./api/.3.items.5.text">
        <source>权限管理 (Permissions)</source>
        <target state="needs-translation">权限管理 (Permissions)</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /api/ -&gt; 3 -&gt; items -&gt; 5 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62822" resname="themeConfig.sidebar./api/.3.items.5.link" translate="no">
        <source>/api/service/permissions.md</source>
        <target>/api/service/permissions.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /api/ -&gt; 3 -&gt; items -&gt; 5 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62824" resname="themeConfig.sidebar./api/.3.items.6.text">
        <source>插件系统 (Registry)</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">外掛系統 (Registry)</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /api/ -&gt; 3 -&gt; items -&gt; 6 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62826" resname="themeConfig.sidebar./api/.3.items.6.link" translate="no">
        <source>/api/service/registry.md</source>
        <target>/api/service/registry.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /api/ -&gt; 3 -&gt; items -&gt; 6 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65262" resname="themeConfig.sidebar./api/.3.items.7.text">
        <source>服务器 (Server)</source>
        <target state="needs-translation">服务器 (Server)</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /api/ -&gt; 3 -&gt; items -&gt; 7 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65264" resname="themeConfig.sidebar./api/.3.items.7.link" translate="no">
        <source>/api/service/server.md</source>
        <target>/api/service/server.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /api/ -&gt; 3 -&gt; items -&gt; 7 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65266" resname="themeConfig.sidebar./api/.3.items.8.text">
        <source>计时器 (Timer)</source>
        <target state="needs-translation">计时器 (Timer)</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /api/ -&gt; 3 -&gt; items -&gt; 8 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65268" resname="themeConfig.sidebar./api/.3.items.8.link" translate="no">
        <source>/api/service/timer.md</source>
        <target>/api/service/timer.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /api/ -&gt; 3 -&gt; items -&gt; 8 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62832" resname="themeConfig.sidebar./api/.4.text">
        <source>平台资源</source>
        <target state="needs-translation">平台资源</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /api/ -&gt; 4 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62834" resname="themeConfig.sidebar./api/.4.items.0.text">
        <source>频道 (Channel)</source>
        <target state="needs-translation">频道 (Channel)</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /api/ -&gt; 4 -&gt; items -&gt; 0 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62836" resname="themeConfig.sidebar./api/.4.items.0.link" translate="no">
        <source>/api/resources/channel.md</source>
        <target>/api/resources/channel.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /api/ -&gt; 4 -&gt; items -&gt; 0 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62838" resname="themeConfig.sidebar./api/.4.items.1.text">
        <source>群组 (Guild)</source>
        <target state="needs-translation">群组 (Guild)</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /api/ -&gt; 4 -&gt; items -&gt; 1 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62840" resname="themeConfig.sidebar./api/.4.items.1.link" translate="no">
        <source>/api/resources/guild.md</source>
        <target>/api/resources/guild.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /api/ -&gt; 4 -&gt; items -&gt; 1 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62842" resname="themeConfig.sidebar./api/.4.items.2.text">
        <source>群组成员 (GuildMember)</source>
        <target state="needs-translation">群组成员 (GuildMember)</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /api/ -&gt; 4 -&gt; items -&gt; 2 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62844" resname="themeConfig.sidebar./api/.4.items.2.link" translate="no">
        <source>/api/resources/member.md</source>
        <target>/api/resources/member.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /api/ -&gt; 4 -&gt; items -&gt; 2 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62846" resname="themeConfig.sidebar./api/.4.items.3.text">
        <source>群组角色 (GuildRole)</source>
        <target state="needs-translation">群组角色 (GuildRole)</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /api/ -&gt; 4 -&gt; items -&gt; 3 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62848" resname="themeConfig.sidebar./api/.4.items.3.link" translate="no">
        <source>/api/resources/role.md</source>
        <target>/api/resources/role.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /api/ -&gt; 4 -&gt; items -&gt; 3 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62850" resname="themeConfig.sidebar./api/.4.items.4.text">
        <source>交互 (Interaction)</source>
        <target state="needs-translation">交互 (Interaction)</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /api/ -&gt; 4 -&gt; items -&gt; 4 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62852" resname="themeConfig.sidebar./api/.4.items.4.link" translate="no">
        <source>/api/resources/interaction.md</source>
        <target>/api/resources/interaction.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /api/ -&gt; 4 -&gt; items -&gt; 4 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62854" resname="themeConfig.sidebar./api/.4.items.5.text">
        <source>登录状态 (Login)</source>
        <target state="needs-translation">登录状态 (Login)</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /api/ -&gt; 4 -&gt; items -&gt; 5 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62856" resname="themeConfig.sidebar./api/.4.items.5.link" translate="no">
        <source>/api/resources/login.md</source>
        <target>/api/resources/login.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /api/ -&gt; 4 -&gt; items -&gt; 5 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62858" resname="themeConfig.sidebar./api/.4.items.6.text">
        <source>消息 (Message)</source>
        <target state="needs-translation">消息 (Message)</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /api/ -&gt; 4 -&gt; items -&gt; 6 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62860" resname="themeConfig.sidebar./api/.4.items.6.link" translate="no">
        <source>/api/resources/message.md</source>
        <target>/api/resources/message.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /api/ -&gt; 4 -&gt; items -&gt; 6 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62862" resname="themeConfig.sidebar./api/.4.items.7.text">
        <source>表态 (Reaction)</source>
        <target state="needs-translation">表态 (Reaction)</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /api/ -&gt; 4 -&gt; items -&gt; 7 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62864" resname="themeConfig.sidebar./api/.4.items.7.link" translate="no">
        <source>/api/resources/reaction.md</source>
        <target>/api/resources/reaction.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /api/ -&gt; 4 -&gt; items -&gt; 7 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62866" resname="themeConfig.sidebar./api/.4.items.8.text">
        <source>用户 (User)</source>
        <target state="needs-translation">用户 (User)</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /api/ -&gt; 4 -&gt; items -&gt; 8 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62868" resname="themeConfig.sidebar./api/.4.items.8.link" translate="no">
        <source>/api/resources/user.md</source>
        <target>/api/resources/user.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /api/ -&gt; 4 -&gt; items -&gt; 8 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62870" resname="themeConfig.sidebar./api/.5.text">
        <source>消息元素</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">訊息元素</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /api/ -&gt; 5 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62872" resname="themeConfig.sidebar./api/.5.items.0.text">
        <source>语法规范</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">語法規範</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /api/ -&gt; 5 -&gt; items -&gt; 0 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62874" resname="themeConfig.sidebar./api/.5.items.0.link" translate="no">
        <source>/api/message/syntax.md</source>
        <target>/api/message/syntax.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /api/ -&gt; 5 -&gt; items -&gt; 0 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62876" resname="themeConfig.sidebar./api/.5.items.1.text">
        <source>标准元素</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">標準元素</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /api/ -&gt; 5 -&gt; items -&gt; 1 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62878" resname="themeConfig.sidebar./api/.5.items.1.link" translate="no">
        <source>/api/message/elements.md</source>
        <target>/api/message/elements.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /api/ -&gt; 5 -&gt; items -&gt; 1 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62880" resname="themeConfig.sidebar./api/.5.items.2.text">
        <source>内置组件</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">內建元件</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /api/ -&gt; 5 -&gt; items -&gt; 2 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62882" resname="themeConfig.sidebar./api/.5.items.2.link" translate="no">
        <source>/api/message/components.md</source>
        <target>/api/message/components.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /api/ -&gt; 5 -&gt; items -&gt; 2 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62884" resname="themeConfig.sidebar./api/.5.items.3.text">
        <source>渲染函数</source>
        <target state="needs-translation">渲染函数</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /api/ -&gt; 5 -&gt; items -&gt; 3 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62886" resname="themeConfig.sidebar./api/.5.items.3.link" translate="no">
        <source>/api/message/api.md</source>
        <target>/api/message/api.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /api/ -&gt; 5 -&gt; items -&gt; 3 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62888" resname="themeConfig.sidebar./api/.5.items.4.text">
        <source>消息编码器</source>
        <target state="needs-translation">消息编码器</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /api/ -&gt; 5 -&gt; items -&gt; 4 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62890" resname="themeConfig.sidebar./api/.5.items.4.link" translate="no">
        <source>/api/message/encoder.md</source>
        <target>/api/message/encoder.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /api/ -&gt; 5 -&gt; items -&gt; 4 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62892" resname="themeConfig.sidebar./api/.6.text">
        <source>数据库</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">資料庫</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /api/ -&gt; 6 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62894" resname="themeConfig.sidebar./api/.6.items.0.text">
        <source>数据模型 (Model)</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">資料模型 (Model)</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /api/ -&gt; 6 -&gt; items -&gt; 0 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62896" resname="themeConfig.sidebar./api/.6.items.0.link" translate="no">
        <source>/api/database/model.md</source>
        <target>/api/database/model.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /api/ -&gt; 6 -&gt; items -&gt; 0 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62898" resname="themeConfig.sidebar./api/.6.items.1.text">
        <source>数据库操作 (Database)</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">資料庫操作 (Database)</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /api/ -&gt; 6 -&gt; items -&gt; 1 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62900" resname="themeConfig.sidebar./api/.6.items.1.link" translate="no">
        <source>/api/database/database.md</source>
        <target>/api/database/database.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /api/ -&gt; 6 -&gt; items -&gt; 1 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62902" resname="themeConfig.sidebar./api/.6.items.2.text">
        <source>查询表达式 (Query)</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">查詢運算式 (Query)</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /api/ -&gt; 6 -&gt; items -&gt; 2 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62904" resname="themeConfig.sidebar./api/.6.items.2.link" translate="no">
        <source>/api/database/query.md</source>
        <target>/api/database/query.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /api/ -&gt; 6 -&gt; items -&gt; 2 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62906" resname="themeConfig.sidebar./api/.6.items.3.text">
        <source>求值表达式 (Eval)</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">求值表示式 (Eval)</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /api/ -&gt; 6 -&gt; items -&gt; 3 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62908" resname="themeConfig.sidebar./api/.6.items.3.link" translate="no">
        <source>/api/database/evaluation.md</source>
        <target>/api/database/evaluation.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /api/ -&gt; 6 -&gt; items -&gt; 3 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62910" resname="themeConfig.sidebar./api/.6.items.4.text">
        <source>查询构造器 (Selection)</source>
        <target state="needs-translation">查询构造器 (Selection)</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /api/ -&gt; 6 -&gt; items -&gt; 4 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62912" resname="themeConfig.sidebar./api/.6.items.4.link" translate="no">
        <source>/api/database/selection.md</source>
        <target>/api/database/selection.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /api/ -&gt; 6 -&gt; items -&gt; 4 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62914" resname="themeConfig.sidebar./api/.6.items.5.text">
        <source>内置数据结构</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">內建資料結構</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /api/ -&gt; 6 -&gt; items -&gt; 5 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62916" resname="themeConfig.sidebar./api/.6.items.5.link" translate="no">
        <source>/api/database/built-in.md</source>
        <target>/api/database/built-in.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /api/ -&gt; 6 -&gt; items -&gt; 5 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62918" resname="themeConfig.sidebar./api/.7.text">
        <source>控制台</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">控制檯</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /api/ -&gt; 7 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62920" resname="themeConfig.sidebar./api/.7.items.0.text">
        <source>服务端 API</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">服務端 API</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /api/ -&gt; 7 -&gt; items -&gt; 0 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62922" resname="themeConfig.sidebar./api/.7.items.0.link" translate="no">
        <source>/api/console/server.md</source>
        <target>/api/console/server.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /api/ -&gt; 7 -&gt; items -&gt; 0 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62924" resname="themeConfig.sidebar./api/.7.items.1.text">
        <source>上下文 API</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">上下文 API</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /api/ -&gt; 7 -&gt; items -&gt; 1 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62926" resname="themeConfig.sidebar./api/.7.items.1.link" translate="no">
        <source>/api/console/context.md</source>
        <target>/api/console/context.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /api/ -&gt; 7 -&gt; items -&gt; 1 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62928" resname="themeConfig.sidebar./api/.7.items.2.text">
        <source>组合式 API</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">組合式 API</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /api/ -&gt; 7 -&gt; items -&gt; 2 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62930" resname="themeConfig.sidebar./api/.7.items.2.link" translate="no">
        <source>/api/console/composition.md</source>
        <target>/api/console/composition.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /api/ -&gt; 7 -&gt; items -&gt; 2 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62932" resname="themeConfig.sidebar./api/.7.items.3.text">
        <source>内置组件</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">內建元件</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /api/ -&gt; 7 -&gt; items -&gt; 3 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62934" resname="themeConfig.sidebar./api/.7.items.3.link" translate="no">
        <source>/api/console/component.md</source>
        <target>/api/console/component.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /api/ -&gt; 7 -&gt; items -&gt; 3 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62936" resname="themeConfig.sidebar./api/.8.text">
        <source>其他功能</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">其他功能</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /api/ -&gt; 8 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62938" resname="themeConfig.sidebar./api/.8.items.0.text">
        <source>观察者 (Observer)</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">觀察者 (Observer)</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /api/ -&gt; 8 -&gt; items -&gt; 0 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62940" resname="themeConfig.sidebar./api/.8.items.0.link" translate="no">
        <source>/api/utils/observer.md</source>
        <target>/api/utils/observer.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /api/ -&gt; 8 -&gt; items -&gt; 0 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62942" resname="themeConfig.sidebar./api/.8.items.1.text">
        <source>输出日志 (Logger)</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">輸出日誌 (Logger)</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /api/ -&gt; 8 -&gt; items -&gt; 1 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62944" resname="themeConfig.sidebar./api/.8.items.1.link" translate="no">
        <source>/api/utils/logger.md</source>
        <target>/api/utils/logger.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /api/ -&gt; 8 -&gt; items -&gt; 1 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62946" resname="themeConfig.sidebar./api/.8.items.2.text">
        <source>随机操作 (Random)</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">隨機操作 (Random)</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /api/ -&gt; 8 -&gt; items -&gt; 2 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62948" resname="themeConfig.sidebar./api/.8.items.2.link" translate="no">
        <source>/api/utils/random.md</source>
        <target>/api/utils/random.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /api/ -&gt; 8 -&gt; items -&gt; 2 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62950" resname="themeConfig.sidebar./api/.8.items.3.text">
        <source>其他工具 (Misc)</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">其他工具 (Misc)</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /api/ -&gt; 8 -&gt; items -&gt; 3 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62952" resname="themeConfig.sidebar./api/.8.items.3.link" translate="no">
        <source>/api/utils/misc.md</source>
        <target>/api/utils/misc.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /api/ -&gt; 8 -&gt; items -&gt; 3 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62954" resname="themeConfig.sidebar./cookbook/.0.items.0.text">
        <source>总览</source>
        <target state="translated">總覽</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /cookbook/ -&gt; 0 -&gt; items -&gt; 0 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62956" resname="themeConfig.sidebar./cookbook/.0.items.0.link" translate="no">
        <source>/cookbook/</source>
        <target>/cookbook/</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /cookbook/ -&gt; 0 -&gt; items -&gt; 0 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62958" resname="themeConfig.sidebar./cookbook/.1.text">
        <source>设计原理</source>
        <target state="needs-translation">设计原理</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /cookbook/ -&gt; 1 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62960" resname="themeConfig.sidebar./cookbook/.1.items.0.text">
        <source>项目架构</source>
        <target state="needs-translation">项目架构</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /cookbook/ -&gt; 1 -&gt; items -&gt; 0 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62962" resname="themeConfig.sidebar./cookbook/.1.items.0.link" translate="no">
        <source>/cookbook/design/structure.md</source>
        <target>/cookbook/design/structure.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /cookbook/ -&gt; 1 -&gt; items -&gt; 0 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62964" resname="themeConfig.sidebar./cookbook/.1.items.1.text">
        <source>可逆的插件系统</source>
        <target state="needs-translation">可逆的插件系统</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /cookbook/ -&gt; 1 -&gt; items -&gt; 1 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62966" resname="themeConfig.sidebar./cookbook/.1.items.1.link" translate="no">
        <source>/cookbook/design/disposable.md</source>
        <target>/cookbook/design/disposable.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /cookbook/ -&gt; 1 -&gt; items -&gt; 1 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62968" resname="themeConfig.sidebar./cookbook/.1.items.2.text">
        <source>从元框架到框架</source>
        <target state="needs-translation">从元框架到框架</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /cookbook/ -&gt; 1 -&gt; items -&gt; 2 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62970" resname="themeConfig.sidebar./cookbook/.1.items.2.link" translate="no">
        <source>/cookbook/design/framework.md</source>
        <target>/cookbook/design/framework.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /cookbook/ -&gt; 1 -&gt; items -&gt; 2 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62972" resname="themeConfig.sidebar./cookbook/.1.items.3.text">
        <source>零占用的存储</source>
        <target state="needs-translation">零占用的存储</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /cookbook/ -&gt; 1 -&gt; items -&gt; 3 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62974" resname="themeConfig.sidebar./cookbook/.1.items.3.link" translate="no">
        <source>/cookbook/design/storage.md</source>
        <target>/cookbook/design/storage.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /cookbook/ -&gt; 1 -&gt; items -&gt; 3 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62976" resname="themeConfig.sidebar./cookbook/.1.items.4.text">
        <source>深入工作区</source>
        <target state="needs-translation">深入工作区</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /cookbook/ -&gt; 1 -&gt; items -&gt; 4 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62978" resname="themeConfig.sidebar./cookbook/.1.items.4.link" translate="no">
        <source>/cookbook/design/workspace.md</source>
        <target>/cookbook/design/workspace.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /cookbook/ -&gt; 1 -&gt; items -&gt; 4 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62980" resname="themeConfig.sidebar./cookbook/.2.text">
        <source>最佳实践</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">最佳實作</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /cookbook/ -&gt; 2 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62982" resname="themeConfig.sidebar./cookbook/.2.items.0.text">
        <source>资源转存</source>
        <target state="needs-translation">资源转存</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /cookbook/ -&gt; 2 -&gt; items -&gt; 0 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62984" resname="themeConfig.sidebar./cookbook/.2.items.0.link" translate="no">
        <source>/cookbook/practice/assets.md</source>
        <target>/cookbook/practice/assets.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /cookbook/ -&gt; 2 -&gt; items -&gt; 0 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62986" resname="themeConfig.sidebar./cookbook/.2.items.1.text">
        <source>图片渲染</source>
        <target state="needs-translation">图片渲染</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /cookbook/ -&gt; 2 -&gt; items -&gt; 1 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62988" resname="themeConfig.sidebar./cookbook/.2.items.1.link" translate="no">
        <source>/cookbook/practice/render.md</source>
        <target>/cookbook/practice/render.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /cookbook/ -&gt; 2 -&gt; items -&gt; 1 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62990" resname="themeConfig.sidebar./cookbook/.2.items.2.text">
        <source>部署到 k-on!</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">部署到 k-on!</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /cookbook/ -&gt; 2 -&gt; items -&gt; 2 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62992" resname="themeConfig.sidebar./cookbook/.2.items.2.link" translate="no">
        <source>/cookbook/practice/online.md</source>
        <target>/cookbook/practice/online.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /cookbook/ -&gt; 2 -&gt; items -&gt; 2 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62994" resname="themeConfig.sidebar./cookbook/.2.items.3.text">
        <source>整合包开发</source>
        <target state="needs-translation">整合包开发</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /cookbook/ -&gt; 2 -&gt; items -&gt; 3 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62996" resname="themeConfig.sidebar./cookbook/.2.items.3.link" translate="no">
        <source>/cookbook/practice/bundle.md</source>
        <target>/cookbook/practice/bundle.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /cookbook/ -&gt; 2 -&gt; items -&gt; 3 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="62998" resname="themeConfig.sidebar./cookbook/.2.items.4.text">
        <source>编写测试</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">編寫測試</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /cookbook/ -&gt; 2 -&gt; items -&gt; 4 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63000" resname="themeConfig.sidebar./cookbook/.2.items.4.link" translate="no">
        <source>/cookbook/practice/testing.md</source>
        <target>/cookbook/practice/testing.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /cookbook/ -&gt; 2 -&gt; items -&gt; 4 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63002" resname="themeConfig.sidebar./cookbook/.3.text">
        <source>案例分析</source>
        <target state="needs-translation">案例分析</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /cookbook/ -&gt; 3 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63004" resname="themeConfig.sidebar./cookbook/.3.items.0.text">
        <source>指令管理</source>
        <target state="needs-translation">指令管理</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /cookbook/ -&gt; 3 -&gt; items -&gt; 0 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63006" resname="themeConfig.sidebar./cookbook/.3.items.0.link" translate="no">
        <source>/cookbook/appendix/commands.md</source>
        <target>/cookbook/appendix/commands.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /cookbook/ -&gt; 3 -&gt; items -&gt; 0 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63008" resname="themeConfig.sidebar./plugins/.0.text">
        <source>插件</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">外掛</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /plugins/ -&gt; 0 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63010" resname="themeConfig.sidebar./plugins/.0.items.0.text">
        <source>插件市场</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">外掛市場</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /plugins/ -&gt; 0 -&gt; items -&gt; 0 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63012" resname="themeConfig.sidebar./plugins/.0.items.0.link" translate="no">
        <source>/market/</source>
        <target>/market/</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /plugins/ -&gt; 0 -&gt; items -&gt; 0 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63014" resname="themeConfig.sidebar./plugins/.0.items.1.text">
        <source>官方插件一览</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">官方外掛一覽</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /plugins/ -&gt; 0 -&gt; items -&gt; 1 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63016" resname="themeConfig.sidebar./plugins/.0.items.1.link" translate="no">
        <source>/plugins/</source>
        <target>/plugins/</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /plugins/ -&gt; 0 -&gt; items -&gt; 1 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63018" resname="themeConfig.sidebar./plugins/.1.text">
        <source>适配器支持</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">配接器支援</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /plugins/ -&gt; 1 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63020" resname="themeConfig.sidebar./plugins/.1.items.0.text">
        <source>钉钉</source>
        <target state="needs-translation">钉钉</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /plugins/ -&gt; 1 -&gt; items -&gt; 0 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63022" resname="themeConfig.sidebar./plugins/.1.items.0.link" translate="no">
        <source>/plugins/adapter/dingtalk.md</source>
        <target>/plugins/adapter/dingtalk.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /plugins/ -&gt; 1 -&gt; items -&gt; 0 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63024" resname="themeConfig.sidebar./plugins/.1.items.1.text">
        <source>Discord</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">Discord</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /plugins/ -&gt; 1 -&gt; items -&gt; 1 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63026" resname="themeConfig.sidebar./plugins/.1.items.1.link" translate="no">
        <source>/plugins/adapter/discord.md</source>
        <target>/plugins/adapter/discord.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /plugins/ -&gt; 1 -&gt; items -&gt; 1 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63028" resname="themeConfig.sidebar./plugins/.1.items.2.text">
        <source>Kook</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">Kook</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /plugins/ -&gt; 1 -&gt; items -&gt; 2 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63030" resname="themeConfig.sidebar./plugins/.1.items.2.link" translate="no">
        <source>/plugins/adapter/kook.md</source>
        <target>/plugins/adapter/kook.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /plugins/ -&gt; 1 -&gt; items -&gt; 2 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63032" resname="themeConfig.sidebar./plugins/.1.items.3.text">
        <source>飞书</source>
        <target state="needs-translation">飞书</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /plugins/ -&gt; 1 -&gt; items -&gt; 3 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63034" resname="themeConfig.sidebar./plugins/.1.items.3.link" translate="no">
        <source>/plugins/adapter/lark.md</source>
        <target>/plugins/adapter/lark.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /plugins/ -&gt; 1 -&gt; items -&gt; 3 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63036" resname="themeConfig.sidebar./plugins/.1.items.4.text">
        <source>LINE</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">LINE</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /plugins/ -&gt; 1 -&gt; items -&gt; 4 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63038" resname="themeConfig.sidebar./plugins/.1.items.4.link" translate="no">
        <source>/plugins/adapter/line.md</source>
        <target>/plugins/adapter/line.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /plugins/ -&gt; 1 -&gt; items -&gt; 4 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63040" resname="themeConfig.sidebar./plugins/.1.items.5.text">
        <source>邮件</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">郵件</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /plugins/ -&gt; 1 -&gt; items -&gt; 5 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63042" resname="themeConfig.sidebar./plugins/.1.items.5.link" translate="no">
        <source>/plugins/adapter/mail.md</source>
        <target>/plugins/adapter/mail.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /plugins/ -&gt; 1 -&gt; items -&gt; 5 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63044" resname="themeConfig.sidebar./plugins/.1.items.6.text">
        <source>Matrix</source>
        <target state="needs-translation">Matrix</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /plugins/ -&gt; 1 -&gt; items -&gt; 6 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63046" resname="themeConfig.sidebar./plugins/.1.items.6.link" translate="no">
        <source>/plugins/adapter/matrix.md</source>
        <target>/plugins/adapter/matrix.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /plugins/ -&gt; 1 -&gt; items -&gt; 6 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63048" resname="themeConfig.sidebar./plugins/.1.items.7.text">
        <source>QQ</source>
        <target state="needs-translation">QQ</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /plugins/ -&gt; 1 -&gt; items -&gt; 7 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63050" resname="themeConfig.sidebar./plugins/.1.items.7.link" translate="no">
        <source>/plugins/adapter/qq.md</source>
        <target>/plugins/adapter/qq.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /plugins/ -&gt; 1 -&gt; items -&gt; 7 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63052" resname="themeConfig.sidebar./plugins/.1.items.8.text">
        <source>Satori</source>
        <target state="needs-translation">Satori</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /plugins/ -&gt; 1 -&gt; items -&gt; 8 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63054" resname="themeConfig.sidebar./plugins/.1.items.8.link" translate="no">
        <source>/plugins/adapter/satori.md</source>
        <target>/plugins/adapter/satori.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /plugins/ -&gt; 1 -&gt; items -&gt; 8 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63056" resname="themeConfig.sidebar./plugins/.1.items.9.text">
        <source>Slack</source>
        <target state="needs-translation">Slack</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /plugins/ -&gt; 1 -&gt; items -&gt; 9 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63058" resname="themeConfig.sidebar./plugins/.1.items.9.link" translate="no">
        <source>/plugins/adapter/slack.md</source>
        <target>/plugins/adapter/slack.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /plugins/ -&gt; 1 -&gt; items -&gt; 9 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63060" resname="themeConfig.sidebar./plugins/.1.items.10.text">
        <source>Telegram</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">Telegram</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /plugins/ -&gt; 1 -&gt; items -&gt; 10 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63062" resname="themeConfig.sidebar./plugins/.1.items.10.link" translate="no">
        <source>/plugins/adapter/telegram.md</source>
        <target>/plugins/adapter/telegram.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /plugins/ -&gt; 1 -&gt; items -&gt; 10 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63064" resname="themeConfig.sidebar./plugins/.1.items.11.text">
        <source>微信公众号</source>
        <target state="needs-translation">微信公众号</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /plugins/ -&gt; 1 -&gt; items -&gt; 11 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63066" resname="themeConfig.sidebar./plugins/.1.items.11.link" translate="no">
        <source>/plugins/adapter/wechat-official.md</source>
        <target>/plugins/adapter/wechat-official.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /plugins/ -&gt; 1 -&gt; items -&gt; 11 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63068" resname="themeConfig.sidebar./plugins/.1.items.12.text">
        <source>企业微信</source>
        <target state="needs-translation">企业微信</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /plugins/ -&gt; 1 -&gt; items -&gt; 12 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63070" resname="themeConfig.sidebar./plugins/.1.items.12.link" translate="no">
        <source>/plugins/adapter/wecom.md</source>
        <target>/plugins/adapter/wecom.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /plugins/ -&gt; 1 -&gt; items -&gt; 12 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63072" resname="themeConfig.sidebar./plugins/.1.items.13.text">
        <source>WhatsApp</source>
        <target state="needs-translation">WhatsApp</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /plugins/ -&gt; 1 -&gt; items -&gt; 13 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63074" resname="themeConfig.sidebar./plugins/.1.items.13.link" translate="no">
        <source>/plugins/adapter/whatsapp.md</source>
        <target>/plugins/adapter/whatsapp.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /plugins/ -&gt; 1 -&gt; items -&gt; 13 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63076" resname="themeConfig.sidebar./plugins/.1.items.14.text">
        <source>Zulip</source>
        <target state="needs-translation">Zulip</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /plugins/ -&gt; 1 -&gt; items -&gt; 14 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63078" resname="themeConfig.sidebar./plugins/.1.items.14.link" translate="no">
        <source>/plugins/adapter/zulip.md</source>
        <target>/plugins/adapter/zulip.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /plugins/ -&gt; 1 -&gt; items -&gt; 14 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63080" resname="themeConfig.sidebar./plugins/.2.text">
        <source>数据库支持</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">資料庫支援</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /plugins/ -&gt; 2 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63082" resname="themeConfig.sidebar./plugins/.2.items.0.text">
        <source>Memory</source>
        <target state="translated">Memory</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /plugins/ -&gt; 2 -&gt; items -&gt; 0 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63084" resname="themeConfig.sidebar./plugins/.2.items.0.link" translate="no">
        <source>/plugins/database/memory.md</source>
        <target>/plugins/database/memory.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /plugins/ -&gt; 2 -&gt; items -&gt; 0 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63086" resname="themeConfig.sidebar./plugins/.2.items.1.text">
        <source>MongoDB</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">MongoDB</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /plugins/ -&gt; 2 -&gt; items -&gt; 1 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63088" resname="themeConfig.sidebar./plugins/.2.items.1.link" translate="no">
        <source>/plugins/database/mongo.md</source>
        <target>/plugins/database/mongo.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /plugins/ -&gt; 2 -&gt; items -&gt; 1 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63090" resname="themeConfig.sidebar./plugins/.2.items.2.text">
        <source>MySQL / MariaDB</source>
        <target state="needs-translation">MySQL / MariaDB</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /plugins/ -&gt; 2 -&gt; items -&gt; 2 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63092" resname="themeConfig.sidebar./plugins/.2.items.2.link" translate="no">
        <source>/plugins/database/mysql.md</source>
        <target>/plugins/database/mysql.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /plugins/ -&gt; 2 -&gt; items -&gt; 2 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63094" resname="themeConfig.sidebar./plugins/.2.items.3.text">
        <source>PostgreSQL</source>
        <target state="needs-translation">PostgreSQL</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /plugins/ -&gt; 2 -&gt; items -&gt; 3 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63096" resname="themeConfig.sidebar./plugins/.2.items.3.link" translate="no">
        <source>/plugins/database/postgres.md</source>
        <target>/plugins/database/postgres.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /plugins/ -&gt; 2 -&gt; items -&gt; 3 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63098" resname="themeConfig.sidebar./plugins/.2.items.4.text">
        <source>SQLite</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">SQLite</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /plugins/ -&gt; 2 -&gt; items -&gt; 4 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63100" resname="themeConfig.sidebar./plugins/.2.items.4.link" translate="no">
        <source>/plugins/database/sqlite.md</source>
        <target>/plugins/database/sqlite.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /plugins/ -&gt; 2 -&gt; items -&gt; 4 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63102" resname="themeConfig.sidebar./plugins/.3.text">
        <source>常用功能</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">常用功能</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /plugins/ -&gt; 3 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63104" resname="themeConfig.sidebar./plugins/.3.items.0.text">
        <source>数据管理 (Admin)</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">資料管理 (Admin)</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /plugins/ -&gt; 3 -&gt; items -&gt; 0 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63106" resname="themeConfig.sidebar./plugins/.3.items.0.link" translate="no">
        <source>/plugins/common/admin.md</source>
        <target>/plugins/common/admin.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /plugins/ -&gt; 3 -&gt; items -&gt; 0 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63108" resname="themeConfig.sidebar./plugins/.3.items.1.text">
        <source>账号绑定 (Bind)</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">賬號繫結 (Bind)</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /plugins/ -&gt; 3 -&gt; items -&gt; 1 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63110" resname="themeConfig.sidebar./plugins/.3.items.1.link" translate="no">
        <source>/plugins/common/bind.md</source>
        <target>/plugins/common/bind.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /plugins/ -&gt; 3 -&gt; items -&gt; 1 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63112" resname="themeConfig.sidebar./plugins/.3.items.2.text">
        <source>发送广播 (Broadcast)</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">傳送廣播 (Broadcast)</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /plugins/ -&gt; 3 -&gt; items -&gt; 2 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63114" resname="themeConfig.sidebar./plugins/.3.items.2.link" translate="no">
        <source>/plugins/common/broadcast.md</source>
        <target>/plugins/common/broadcast.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /plugins/ -&gt; 3 -&gt; items -&gt; 2 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63116" resname="themeConfig.sidebar./plugins/.3.items.3.text">
        <source>设置昵称 (Callme)</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">設定暱稱 (Callme)</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /plugins/ -&gt; 3 -&gt; items -&gt; 3 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63118" resname="themeConfig.sidebar./plugins/.3.items.3.link" translate="no">
        <source>/plugins/common/callme.md</source>
        <target>/plugins/common/callme.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /plugins/ -&gt; 3 -&gt; items -&gt; 3 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63120" resname="themeConfig.sidebar./plugins/.3.items.4.text">
        <source>发送消息 (Echo)</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">傳送訊息 (Echo)</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /plugins/ -&gt; 3 -&gt; items -&gt; 4 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63122" resname="themeConfig.sidebar./plugins/.3.items.4.link" translate="no">
        <source>/plugins/common/echo.md</source>
        <target>/plugins/common/echo.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /plugins/ -&gt; 3 -&gt; items -&gt; 4 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63124" resname="themeConfig.sidebar./plugins/.3.items.5.text">
        <source>查看帮助 (Help)</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">檢視幫助 (Help)</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /plugins/ -&gt; 3 -&gt; items -&gt; 5 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63126" resname="themeConfig.sidebar./plugins/.3.items.5.link" translate="no">
        <source>/plugins/common/help.md</source>
        <target>/plugins/common/help.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /plugins/ -&gt; 3 -&gt; items -&gt; 5 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63128" resname="themeConfig.sidebar./plugins/.3.items.6.text">
        <source>会话信息 (Inspect)</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">會話資訊 (Inspect)</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /plugins/ -&gt; 3 -&gt; items -&gt; 6 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63130" resname="themeConfig.sidebar./plugins/.3.items.6.link" translate="no">
        <source>/plugins/common/inspect.md</source>
        <target>/plugins/common/inspect.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /plugins/ -&gt; 3 -&gt; items -&gt; 6 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63132" resname="themeConfig.sidebar./plugins/.4.text">
        <source>控制台功能</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">控制檯功能</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /plugins/ -&gt; 4 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63134" resname="themeConfig.sidebar./plugins/.4.items.0.text">
        <source>数据统计 (Analytics)</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">資料統計 (Analytics)</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /plugins/ -&gt; 4 -&gt; items -&gt; 0 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63136" resname="themeConfig.sidebar./plugins/.4.items.0.link" translate="no">
        <source>/plugins/console/analytics.md</source>
        <target>/plugins/console/analytics.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /plugins/ -&gt; 4 -&gt; items -&gt; 0 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63138" resname="themeConfig.sidebar./plugins/.4.items.1.text">
        <source>用户登录 (Auth)</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">使用者登入 (Auth)</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /plugins/ -&gt; 4 -&gt; items -&gt; 1 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63140" resname="themeConfig.sidebar./plugins/.4.items.1.link" translate="no">
        <source>/plugins/console/auth.md</source>
        <target>/plugins/console/auth.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /plugins/ -&gt; 4 -&gt; items -&gt; 1 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63142" resname="themeConfig.sidebar./plugins/.4.items.2.text">
        <source>指令管理 (Commands)</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">指令管理 (Commands)</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /plugins/ -&gt; 4 -&gt; items -&gt; 2 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63144" resname="themeConfig.sidebar./plugins/.4.items.2.link" translate="no">
        <source>/plugins/console/commands.md</source>
        <target>/plugins/console/commands.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /plugins/ -&gt; 4 -&gt; items -&gt; 2 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63146" resname="themeConfig.sidebar./plugins/.4.items.3.text">
        <source>插件配置 (Config)</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">外掛配置 (Config)</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /plugins/ -&gt; 4 -&gt; items -&gt; 3 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63148" resname="themeConfig.sidebar./plugins/.4.items.3.link" translate="no">
        <source>/plugins/console/config.md</source>
        <target>/plugins/console/config.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /plugins/ -&gt; 4 -&gt; items -&gt; 3 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63150" resname="themeConfig.sidebar./plugins/.4.items.4.text">
        <source>控制台 (Console)</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">控制檯 (Console)</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /plugins/ -&gt; 4 -&gt; items -&gt; 4 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63152" resname="themeConfig.sidebar./plugins/.4.items.4.link" translate="no">
        <source>/plugins/console/index.md</source>
        <target>/plugins/console/index.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /plugins/ -&gt; 4 -&gt; items -&gt; 4 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63154" resname="themeConfig.sidebar./plugins/.4.items.5.text">
        <source>资源管理器 (Explorer)</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">資源管理器 (Explorer)</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /plugins/ -&gt; 4 -&gt; items -&gt; 5 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63156" resname="themeConfig.sidebar./plugins/.4.items.5.link" translate="no">
        <source>/plugins/console/explorer.md</source>
        <target>/plugins/console/explorer.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /plugins/ -&gt; 4 -&gt; items -&gt; 5 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63158" resname="themeConfig.sidebar./plugins/.4.items.6.text">
        <source>插件依赖图 (Insight)</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">外掛依賴圖 (Insight)</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /plugins/ -&gt; 4 -&gt; items -&gt; 6 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63160" resname="themeConfig.sidebar./plugins/.4.items.6.link" translate="no">
        <source>/plugins/console/insight.md</source>
        <target>/plugins/console/insight.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /plugins/ -&gt; 4 -&gt; items -&gt; 6 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63162" resname="themeConfig.sidebar./plugins/.4.items.7.text">
        <source>本地翻译 (Locales)</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">本地翻譯 (Locales)</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /plugins/ -&gt; 4 -&gt; items -&gt; 7 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63164" resname="themeConfig.sidebar./plugins/.4.items.7.link" translate="no">
        <source>/plugins/console/locales.md</source>
        <target>/plugins/console/locales.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /plugins/ -&gt; 4 -&gt; items -&gt; 7 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63166" resname="themeConfig.sidebar./plugins/.4.items.8.text">
        <source>日志管理 (Logger)</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">日誌管理 (Logger)</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /plugins/ -&gt; 4 -&gt; items -&gt; 8 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63168" resname="themeConfig.sidebar./plugins/.4.items.8.link" translate="no">
        <source>/plugins/console/logger.md</source>
        <target>/plugins/console/logger.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /plugins/ -&gt; 4 -&gt; items -&gt; 8 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63170" resname="themeConfig.sidebar./plugins/.4.items.9.text">
        <source>插件市场 (Market)</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">外掛市場 (Market)</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /plugins/ -&gt; 4 -&gt; items -&gt; 9 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63172" resname="themeConfig.sidebar./plugins/.4.items.9.link" translate="no">
        <source>/plugins/console/market.md</source>
        <target>/plugins/console/market.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /plugins/ -&gt; 4 -&gt; items -&gt; 9 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63174" resname="themeConfig.sidebar./plugins/.4.items.10.text">
        <source>沙箱调试 (Sandbox)</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">沙箱除錯 (Sandbox)</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /plugins/ -&gt; 4 -&gt; items -&gt; 10 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63176" resname="themeConfig.sidebar./plugins/.4.items.10.link" translate="no">
        <source>/plugins/console/sandbox.md</source>
        <target>/plugins/console/sandbox.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /plugins/ -&gt; 4 -&gt; items -&gt; 10 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63178" resname="themeConfig.sidebar./plugins/.4.items.11.text">
        <source>运行状态 (Status)</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">執行狀態 (Status)</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /plugins/ -&gt; 4 -&gt; items -&gt; 11 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63180" resname="themeConfig.sidebar./plugins/.4.items.11.link" translate="no">
        <source>/plugins/console/status.md</source>
        <target>/plugins/console/status.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /plugins/ -&gt; 4 -&gt; items -&gt; 11 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63182" resname="themeConfig.sidebar./plugins/.5.text">
        <source>开发工具</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">開發工具</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /plugins/ -&gt; 5 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63184" resname="themeConfig.sidebar./plugins/.5.items.0.text">
        <source>模块热替换 (HMR)</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">模組熱替換 (HMR)</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /plugins/ -&gt; 5 -&gt; items -&gt; 0 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63186" resname="themeConfig.sidebar./plugins/.5.items.0.link" translate="no">
        <source>/plugins/develop/hmr.md</source>
        <target>/plugins/develop/hmr.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /plugins/ -&gt; 5 -&gt; items -&gt; 0 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65270" resname="themeConfig.sidebar./plugins/.5.items.1.text">
        <source>网络请求 (HTTP)</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">網路請求 (HTTP)</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /plugins/ -&gt; 5 -&gt; items -&gt; 1 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65272" resname="themeConfig.sidebar./plugins/.5.items.1.link" translate="no">
        <source>/plugins/develop/http.md</source>
        <target>/plugins/develop/http.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /plugins/ -&gt; 5 -&gt; items -&gt; 1 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65274" resname="themeConfig.sidebar./plugins/.5.items.2.text">
        <source>测试工具 (Mock)</source>
        <target state="needs-translation">测试工具 (Mock)</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /plugins/ -&gt; 5 -&gt; items -&gt; 2 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65276" resname="themeConfig.sidebar./plugins/.5.items.2.link" translate="no">
        <source>/plugins/develop/mock.md</source>
        <target>/plugins/develop/mock.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /plugins/ -&gt; 5 -&gt; items -&gt; 2 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65278" resname="themeConfig.sidebar./plugins/.5.items.3.text">
        <source>通知服务 (Notifier)</source>
        <target state="needs-translation">通知服务 (Notifier)</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /plugins/ -&gt; 5 -&gt; items -&gt; 3 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65280" resname="themeConfig.sidebar./plugins/.5.items.3.link" translate="no">
        <source>/plugins/develop/notifier.md</source>
        <target>/plugins/develop/notifier.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /plugins/ -&gt; 5 -&gt; items -&gt; 3 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65282" resname="themeConfig.sidebar./plugins/.5.items.4.text">
        <source>网络代理 (Proxy Agent)</source>
        <target state="needs-translation">网络代理 (Proxy Agent)</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /plugins/ -&gt; 5 -&gt; items -&gt; 4 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65284" resname="themeConfig.sidebar./plugins/.5.items.4.link" translate="no">
        <source>/plugins/develop/proxy-agent.md</source>
        <target>/plugins/develop/proxy-agent.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /plugins/ -&gt; 5 -&gt; items -&gt; 4 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65286" resname="themeConfig.sidebar./plugins/.5.items.5.text">
        <source>服务器 (Server)</source>
        <target state="needs-translation">服务器 (Server)</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /plugins/ -&gt; 5 -&gt; items -&gt; 5 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65288" resname="themeConfig.sidebar./plugins/.5.items.5.link" translate="no">
        <source>/plugins/develop/server.md</source>
        <target>/plugins/develop/server.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /plugins/ -&gt; 5 -&gt; items -&gt; 5 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65290" resname="themeConfig.sidebar./plugins/.5.items.6.text">
        <source>API 服务器 (Server Satori)</source>
        <target state="needs-translation">API 服务器 (Server Satori)</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /plugins/ -&gt; 5 -&gt; items -&gt; 6 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65292" resname="themeConfig.sidebar./plugins/.5.items.6.link" translate="no">
        <source>/plugins/develop/server-satori.md</source>
        <target>/plugins/develop/server-satori.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /plugins/ -&gt; 5 -&gt; items -&gt; 6 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65294" resname="themeConfig.sidebar./plugins/.5.items.7.text">
        <source>临时服务器 (Server Temp)</source>
        <target state="needs-translation">临时服务器 (Server Temp)</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /plugins/ -&gt; 5 -&gt; items -&gt; 7 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65296" resname="themeConfig.sidebar./plugins/.5.items.7.link" translate="no">
        <source>/plugins/develop/server-temp.md</source>
        <target>/plugins/develop/server-temp.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /plugins/ -&gt; 5 -&gt; items -&gt; 7 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63204" resname="themeConfig.sidebar./market/.0.text">
        <source>插件</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">插件</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /market/ -&gt; 0 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63206" resname="themeConfig.sidebar./market/.0.items.0.text">
        <source>插件市场</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">外掛市場</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /market/ -&gt; 0 -&gt; items -&gt; 0 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63208" resname="themeConfig.sidebar./market/.0.items.0.link" translate="no">
        <source>/market/</source>
        <target>/market/</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /market/ -&gt; 0 -&gt; items -&gt; 0 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63210" resname="themeConfig.sidebar./market/.0.items.1.text">
        <source>官方插件一览</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">官方外掛一覽</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /market/ -&gt; 0 -&gt; items -&gt; 1 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63212" resname="themeConfig.sidebar./market/.0.items.1.link" translate="no">
        <source>/plugins/</source>
        <target>/plugins/</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /market/ -&gt; 0 -&gt; items -&gt; 1 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63214" resname="themeConfig.sidebar./schema/.0.text">
        <source>演练场</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">演練場</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /schema/ -&gt; 0 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63216" resname="themeConfig.sidebar./schema/.0.items.0.text">
        <source>配置构型</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">配置構型</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /schema/ -&gt; 0 -&gt; items -&gt; 0 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63218" resname="themeConfig.sidebar./schema/.0.items.0.link" translate="no">
        <source>/schema/index.md</source>
        <target>/schema/index.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /schema/ -&gt; 0 -&gt; items -&gt; 0 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63220" resname="themeConfig.sidebar./schema/.1.text">
        <source>核心概念</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">核心概念</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /schema/ -&gt; 1 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63222" resname="themeConfig.sidebar./schema/.1.items.0.text">
        <source>必需与可选</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">必需與可選</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /schema/ -&gt; 1 -&gt; items -&gt; 0 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63224" resname="themeConfig.sidebar./schema/.1.items.0.link" translate="no">
        <source>/schema/meta/required.md</source>
        <target>/schema/meta/required.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /schema/ -&gt; 1 -&gt; items -&gt; 0 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63226" resname="themeConfig.sidebar./schema/.1.items.1.text">
        <source>默认值</source>
        <target state="translated">預設值</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /schema/ -&gt; 1 -&gt; items -&gt; 1 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63228" resname="themeConfig.sidebar./schema/.1.items.1.link" translate="no">
        <source>/schema/meta/default.md</source>
        <target>/schema/meta/default.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /schema/ -&gt; 1 -&gt; items -&gt; 1 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63230" resname="themeConfig.sidebar./schema/.1.items.2.text">
        <source>标题与描述</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">標題與描述</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /schema/ -&gt; 1 -&gt; items -&gt; 2 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63232" resname="themeConfig.sidebar./schema/.1.items.2.link" translate="no">
        <source>/schema/meta/description.md</source>
        <target>/schema/meta/description.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /schema/ -&gt; 1 -&gt; items -&gt; 2 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63234" resname="themeConfig.sidebar./schema/.1.items.3.text">
        <source>禁用与隐藏</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">禁用與隱藏</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /schema/ -&gt; 1 -&gt; items -&gt; 3 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63236" resname="themeConfig.sidebar./schema/.1.items.3.link" translate="no">
        <source>/schema/meta/disabled.md</source>
        <target>/schema/meta/disabled.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /schema/ -&gt; 1 -&gt; items -&gt; 3 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63238" resname="themeConfig.sidebar./schema/.1.items.4.text">
        <source>配置项外观</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">配置項外觀</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /schema/ -&gt; 1 -&gt; items -&gt; 4 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63240" resname="themeConfig.sidebar./schema/.1.items.4.link" translate="no">
        <source>/schema/meta/role.md</source>
        <target>/schema/meta/role.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /schema/ -&gt; 1 -&gt; items -&gt; 4 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63242" resname="themeConfig.sidebar./schema/.1.items.5.text">
        <source>嵌套类型</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">巢狀型別</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /schema/ -&gt; 1 -&gt; items -&gt; 5 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63244" resname="themeConfig.sidebar./schema/.1.items.5.link" translate="no">
        <source>/schema/meta/nested.md</source>
        <target>/schema/meta/nested.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /schema/ -&gt; 1 -&gt; items -&gt; 5 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63246" resname="themeConfig.sidebar./schema/.2.text">
        <source>基础类型</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">基礎型別</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /schema/ -&gt; 2 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63248" resname="themeConfig.sidebar./schema/.2.items.0.text">
        <source>数值 (Number)</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">數值 (Number)</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /schema/ -&gt; 2 -&gt; items -&gt; 0 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63250" resname="themeConfig.sidebar./schema/.2.items.0.link" translate="no">
        <source>/schema/basic/number.md</source>
        <target>/schema/basic/number.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /schema/ -&gt; 2 -&gt; items -&gt; 0 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63252" resname="themeConfig.sidebar./schema/.2.items.1.text">
        <source>字符串 (String)</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">字串 (String)</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /schema/ -&gt; 2 -&gt; items -&gt; 1 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63254" resname="themeConfig.sidebar./schema/.2.items.1.link" translate="no">
        <source>/schema/basic/string.md</source>
        <target>/schema/basic/string.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /schema/ -&gt; 2 -&gt; items -&gt; 1 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63256" resname="themeConfig.sidebar./schema/.2.items.2.text">
        <source>布尔值 (Boolean)</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">布林值 (Boolean)</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /schema/ -&gt; 2 -&gt; items -&gt; 2 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63258" resname="themeConfig.sidebar./schema/.2.items.2.link" translate="no">
        <source>/schema/basic/boolean.md</source>
        <target>/schema/basic/boolean.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /schema/ -&gt; 2 -&gt; items -&gt; 2 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63260" resname="themeConfig.sidebar./schema/.2.items.3.text">
        <source>位集 (Bitset)</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">位集 (Bitset)</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /schema/ -&gt; 2 -&gt; items -&gt; 3 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63262" resname="themeConfig.sidebar./schema/.2.items.3.link" translate="no">
        <source>/schema/basic/bitset.md</source>
        <target>/schema/basic/bitset.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /schema/ -&gt; 2 -&gt; items -&gt; 3 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63264" resname="themeConfig.sidebar./schema/.2.items.4.text">
        <source>对象 (Object)</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">物件 (Object)</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /schema/ -&gt; 2 -&gt; items -&gt; 4 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63266" resname="themeConfig.sidebar./schema/.2.items.4.link" translate="no">
        <source>/schema/basic/object.md</source>
        <target>/schema/basic/object.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /schema/ -&gt; 2 -&gt; items -&gt; 4 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63268" resname="themeConfig.sidebar./schema/.2.items.5.text">
        <source>元组 (Tuple)</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">元組 (Tuple)</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /schema/ -&gt; 2 -&gt; items -&gt; 5 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63270" resname="themeConfig.sidebar./schema/.2.items.5.link" translate="no">
        <source>/schema/basic/tuple.md</source>
        <target>/schema/basic/tuple.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /schema/ -&gt; 2 -&gt; items -&gt; 5 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63272" resname="themeConfig.sidebar./schema/.2.items.6.text">
        <source>字典 (Dict)</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">字典 (Dict)</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /schema/ -&gt; 2 -&gt; items -&gt; 6 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63274" resname="themeConfig.sidebar./schema/.2.items.6.link" translate="no">
        <source>/schema/basic/dict.md</source>
        <target>/schema/basic/dict.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /schema/ -&gt; 2 -&gt; items -&gt; 6 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63276" resname="themeConfig.sidebar./schema/.2.items.7.text">
        <source>数组 (Array)</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">陣列 (Array)</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /schema/ -&gt; 2 -&gt; items -&gt; 7 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63278" resname="themeConfig.sidebar./schema/.2.items.7.link" translate="no">
        <source>/schema/basic/array.md</source>
        <target>/schema/basic/array.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /schema/ -&gt; 2 -&gt; items -&gt; 7 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63280" resname="themeConfig.sidebar./schema/.2.items.8.text">
        <source>路径 (Path)</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">路徑 (Path)</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /schema/ -&gt; 2 -&gt; items -&gt; 8 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63282" resname="themeConfig.sidebar./schema/.2.items.8.link" translate="no">
        <source>/schema/basic/path.md</source>
        <target>/schema/basic/path.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /schema/ -&gt; 2 -&gt; items -&gt; 8 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63284" resname="themeConfig.sidebar./schema/.3.text">
        <source>高级类型</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">高階型別</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /schema/ -&gt; 3 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63286" resname="themeConfig.sidebar./schema/.3.items.0.text">
        <source>Intersect：分组</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">Intersect：分組</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /schema/ -&gt; 3 -&gt; items -&gt; 0 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63288" resname="themeConfig.sidebar./schema/.3.items.0.link" translate="no">
        <source>/schema/advanced/intersect.md</source>
        <target>/schema/advanced/intersect.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /schema/ -&gt; 3 -&gt; items -&gt; 0 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63290" resname="themeConfig.sidebar./schema/.3.items.1.text">
        <source>Union：单选框</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">Union：單選框</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /schema/ -&gt; 3 -&gt; items -&gt; 1 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63292" resname="themeConfig.sidebar./schema/.3.items.1.link" translate="no">
        <source>/schema/advanced/union-select.md</source>
        <target>/schema/advanced/union-select.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /schema/ -&gt; 3 -&gt; items -&gt; 1 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63294" resname="themeConfig.sidebar./schema/.3.items.2.text">
        <source>Union：联合类型</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">Union：聯合型別</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /schema/ -&gt; 3 -&gt; items -&gt; 2 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63296" resname="themeConfig.sidebar./schema/.3.items.2.link" translate="no">
        <source>/schema/advanced/union-arbitrary.md</source>
        <target>/schema/advanced/union-arbitrary.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /schema/ -&gt; 3 -&gt; items -&gt; 2 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="64300" resname="themeConfig.sidebar./schema/.3.items.3.text">
        <source>Intersect + Union：配置联动 1</source>
        <target state="needs-translation">Intersect + Union：配置联动 1</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /schema/ -&gt; 3 -&gt; items -&gt; 3 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63300" resname="themeConfig.sidebar./schema/.3.items.3.link" translate="no">
        <source>/schema/advanced/union-tagged-1.md</source>
        <target>/schema/advanced/union-tagged-1.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /schema/ -&gt; 3 -&gt; items -&gt; 3 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="64302" resname="themeConfig.sidebar./schema/.3.items.4.text">
        <source>Intersect + Union：配置联动 2</source>
        <target state="needs-translation">Intersect + Union：配置联动 2</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /schema/ -&gt; 3 -&gt; items -&gt; 4 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63304" resname="themeConfig.sidebar./schema/.3.items.4.link" translate="no">
        <source>/schema/advanced/union-tagged-2.md</source>
        <target>/schema/advanced/union-tagged-2.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /schema/ -&gt; 3 -&gt; items -&gt; 4 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63306" resname="themeConfig.sidebar./schema/.3.items.5.text">
        <source>Transform：输入转换</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">Transform：輸入轉換</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /schema/ -&gt; 3 -&gt; items -&gt; 5 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63308" resname="themeConfig.sidebar./schema/.3.items.5.link" translate="no">
        <source>/schema/advanced/transform.md</source>
        <target>/schema/advanced/transform.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /schema/ -&gt; 3 -&gt; items -&gt; 5 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63310" resname="themeConfig.sidebar./schema/.3.items.6.text">
        <source>Computed：条件求值</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">Computed：條件求值</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /schema/ -&gt; 3 -&gt; items -&gt; 6 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63312" resname="themeConfig.sidebar./schema/.3.items.6.link" translate="no">
        <source>/schema/advanced/computed.md</source>
        <target>/schema/advanced/computed.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /schema/ -&gt; 3 -&gt; items -&gt; 6 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63314" resname="themeConfig.sidebar./about/.0.text">
        <source>关于</source>
        <target state="needs-translation">关于</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /about/ -&gt; 0 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63316" resname="themeConfig.sidebar./about/.0.items.0.text">
        <source>许可证</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">許可證</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /about/ -&gt; 0 -&gt; items -&gt; 0 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63318" resname="themeConfig.sidebar./about/.0.items.0.link" translate="no">
        <source>/about/license.md</source>
        <target>/about/license.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /about/ -&gt; 0 -&gt; items -&gt; 0 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63320" resname="themeConfig.sidebar./about/.0.items.1.text">
        <source>参与讨论</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">參與討論</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /about/ -&gt; 0 -&gt; items -&gt; 1 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63322" resname="themeConfig.sidebar./about/.0.items.1.link" translate="no">
        <source>/about/contact.md</source>
        <target>/about/contact.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /about/ -&gt; 0 -&gt; items -&gt; 1 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63324" resname="themeConfig.sidebar./about/.0.items.2.text">
        <source>认识团队</source>
        <target state="needs-translation">认识团队</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /about/ -&gt; 0 -&gt; items -&gt; 2 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63326" resname="themeConfig.sidebar./about/.0.items.2.link" translate="no">
        <source>/about/team.md</source>
        <target>/about/team.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /about/ -&gt; 0 -&gt; items -&gt; 2 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63328" resname="themeConfig.sidebar./about/.0.items.3.text">
        <source>常见问题</source>
        <target state="needs-translation">常见问题</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /about/ -&gt; 0 -&gt; items -&gt; 3 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63330" resname="themeConfig.sidebar./about/.0.items.3.link" translate="no">
        <source>/about/faq.md</source>
        <target>/about/faq.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /about/ -&gt; 0 -&gt; items -&gt; 3 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63332" resname="themeConfig.sidebar./about/.0.items.4.text">
        <source>社区资源</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">社區資源</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /about/ -&gt; 0 -&gt; items -&gt; 4 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63334" resname="themeConfig.sidebar./about/.0.items.4.link" translate="no">
        <source>/about/community.md</source>
        <target>/about/community.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /about/ -&gt; 0 -&gt; items -&gt; 4 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63336" resname="themeConfig.sidebar./about/.0.items.5.text">
        <source>大事件</source>
        <target state="needs-translation">大事件</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /about/ -&gt; 0 -&gt; items -&gt; 5 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63338" resname="themeConfig.sidebar./about/.0.items.5.link" translate="no">
        <source>/about/events.md</source>
        <target>/about/events.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /about/ -&gt; 0 -&gt; items -&gt; 5 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63340" resname="themeConfig.sidebar./about/.1.text">
        <source>更新</source>
        <target state="needs-translation">更新</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /about/ -&gt; 1 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63342" resname="themeConfig.sidebar./about/.1.items.0.text">
        <source>发展史</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">發展史</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /about/ -&gt; 1 -&gt; items -&gt; 0 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63344" resname="themeConfig.sidebar./about/.1.items.0.link" translate="no">
        <source>/about/history.md</source>
        <target>/about/history.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /about/ -&gt; 1 -&gt; items -&gt; 0 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63346" resname="themeConfig.sidebar./about/.1.items.1.text">
        <source>更新计划</source>
        <target state="needs-translation">更新计划</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /about/ -&gt; 1 -&gt; items -&gt; 1 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63348" resname="themeConfig.sidebar./about/.1.items.1.link" translate="no">
        <source>/about/releases.md</source>
        <target>/about/releases.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /about/ -&gt; 1 -&gt; items -&gt; 1 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63350" resname="themeConfig.sidebar./about/.1.items.2.text">
        <source>从低版本迁移</source>
        <target state="needs-translation">从低版本迁移</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /about/ -&gt; 1 -&gt; items -&gt; 2 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63352" resname="themeConfig.sidebar./about/.1.items.2.link" translate="no">
        <source>/about/upgrade.md</source>
        <target>/about/upgrade.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /about/ -&gt; 1 -&gt; items -&gt; 2 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63354" resname="themeConfig.sidebar./about/.1.items.3.text">
        <source>各版本介绍</source>
        <target state="needs-translation">各版本介绍</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /about/ -&gt; 1 -&gt; items -&gt; 3 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63356" resname="themeConfig.sidebar./about/.1.items.3.link" translate="no">
        <source>/releases/index.md</source>
        <target>/releases/index.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /about/ -&gt; 1 -&gt; items -&gt; 3 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63358" resname="themeConfig.sidebar./about/.1.items.4.text">
        <source>更新日志</source>
        <target state="needs-translation">更新日志</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /about/ -&gt; 1 -&gt; items -&gt; 4 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63360" resname="themeConfig.sidebar./about/.1.items.4.link" translate="no">
        <source>https://github.com/koishijs/koishi/releases</source>
        <target>https://github.com/koishijs/koishi/releases</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /about/ -&gt; 1 -&gt; items -&gt; 4 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63362" resname="themeConfig.sidebar./about/.2.text">
        <source>贡献</source>
        <target state="needs-translation">贡献</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /about/ -&gt; 2 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63364" resname="themeConfig.sidebar./about/.2.items.0.text">
        <source>项目结构</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">專案結構</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /about/ -&gt; 2 -&gt; items -&gt; 0 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63366" resname="themeConfig.sidebar./about/.2.items.0.link" translate="no">
        <source>/about/contribute/structure.md</source>
        <target>/about/contribute/structure.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /about/ -&gt; 2 -&gt; items -&gt; 0 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63368" resname="themeConfig.sidebar./about/.2.items.1.text">
        <source>文档贡献指南</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">文件貢獻指南</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /about/ -&gt; 2 -&gt; items -&gt; 1 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63370" resname="themeConfig.sidebar./about/.2.items.1.link" translate="no">
        <source>/about/contribute/docs.md</source>
        <target>/about/contribute/docs.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /about/ -&gt; 2 -&gt; items -&gt; 1 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63372" resname="themeConfig.sidebar./releases.0.text" translate="no">
        <source></source>
        <target></target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /releases -&gt; 0 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63374" resname="themeConfig.sidebar./releases.0.items.0.text">
        <source>各版本介绍</source>
        <target state="needs-translation">各版本介绍</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /releases -&gt; 0 -&gt; items -&gt; 0 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63376" resname="themeConfig.sidebar./releases.0.items.0.link" translate="no">
        <source>/releases/index.md</source>
        <target>/releases/index.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /releases -&gt; 0 -&gt; items -&gt; 0 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63378" resname="themeConfig.sidebar./releases.0.items.1.text">
        <source>v4.1 版本介绍</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">v4.1 版本介紹</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /releases -&gt; 0 -&gt; items -&gt; 1 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63380" resname="themeConfig.sidebar./releases.0.items.1.link" translate="no">
        <source>/releases/v4.1.md</source>
        <target>/releases/v4.1.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /releases -&gt; 0 -&gt; items -&gt; 1 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63382" resname="themeConfig.sidebar./releases.0.items.2.text">
        <source>v4.2 版本介绍</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">v4.2 版本介紹</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /releases -&gt; 0 -&gt; items -&gt; 2 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63384" resname="themeConfig.sidebar./releases.0.items.2.link" translate="no">
        <source>/releases/v4.2.md</source>
        <target>/releases/v4.2.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /releases -&gt; 0 -&gt; items -&gt; 2 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63386" resname="themeConfig.sidebar./releases.0.items.3.text">
        <source>v4.3 版本介绍</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">v4.3 版本介紹</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /releases -&gt; 0 -&gt; items -&gt; 3 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63388" resname="themeConfig.sidebar./releases.0.items.3.link" translate="no">
        <source>/releases/v4.3.md</source>
        <target>/releases/v4.3.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /releases -&gt; 0 -&gt; items -&gt; 3 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63390" resname="themeConfig.sidebar./releases.0.items.4.text">
        <source>v4.4 版本介绍</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">v4.4 版本介紹</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /releases -&gt; 0 -&gt; items -&gt; 4 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63392" resname="themeConfig.sidebar./releases.0.items.4.link" translate="no">
        <source>/releases/v4.4.md</source>
        <target>/releases/v4.4.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /releases -&gt; 0 -&gt; items -&gt; 4 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63394" resname="themeConfig.sidebar./releases.0.items.5.text">
        <source>v4.5 版本介绍</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">v4.5 版本介紹</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /releases -&gt; 0 -&gt; items -&gt; 5 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63396" resname="themeConfig.sidebar./releases.0.items.5.link" translate="no">
        <source>/releases/v4.5.md</source>
        <target>/releases/v4.5.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /releases -&gt; 0 -&gt; items -&gt; 5 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63398" resname="themeConfig.sidebar./releases.0.items.6.text">
        <source>v4.6 版本介绍</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">v4.6 版本介紹</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /releases -&gt; 0 -&gt; items -&gt; 6 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63400" resname="themeConfig.sidebar./releases.0.items.6.link" translate="no">
        <source>/releases/v4.6.md</source>
        <target>/releases/v4.6.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /releases -&gt; 0 -&gt; items -&gt; 6 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63402" resname="themeConfig.sidebar./releases.0.items.7.text">
        <source>v4.7 版本介绍</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">v4.7 版本介紹</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /releases -&gt; 0 -&gt; items -&gt; 7 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63404" resname="themeConfig.sidebar./releases.0.items.7.link" translate="no">
        <source>/releases/v4.7.md</source>
        <target>/releases/v4.7.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /releases -&gt; 0 -&gt; items -&gt; 7 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63406" resname="themeConfig.sidebar./releases.0.items.8.text">
        <source>v4.8 版本介绍</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">v4.8 版本介紹</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /releases -&gt; 0 -&gt; items -&gt; 8 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63408" resname="themeConfig.sidebar./releases.0.items.8.link" translate="no">
        <source>/releases/v4.8.md</source>
        <target>/releases/v4.8.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /releases -&gt; 0 -&gt; items -&gt; 8 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63410" resname="themeConfig.sidebar./releases.0.items.9.text">
        <source>v4.9 版本介绍</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">v4.9 版本介紹</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /releases -&gt; 0 -&gt; items -&gt; 9 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63412" resname="themeConfig.sidebar./releases.0.items.9.link" translate="no">
        <source>/releases/v4.9.md</source>
        <target>/releases/v4.9.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /releases -&gt; 0 -&gt; items -&gt; 9 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63414" resname="themeConfig.sidebar./releases.0.items.10.text">
        <source>v4.10 版本介绍</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">v4.10 版本介紹</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /releases -&gt; 0 -&gt; items -&gt; 10 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63416" resname="themeConfig.sidebar./releases.0.items.10.link" translate="no">
        <source>/releases/v4.10.md</source>
        <target>/releases/v4.10.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /releases -&gt; 0 -&gt; items -&gt; 10 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63418" resname="themeConfig.sidebar./releases.0.items.11.text">
        <source>v4.11 版本介绍</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">v4.11 版本介紹</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /releases -&gt; 0 -&gt; items -&gt; 11 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63420" resname="themeConfig.sidebar./releases.0.items.11.link" translate="no">
        <source>/releases/v4.11.md</source>
        <target>/releases/v4.11.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /releases -&gt; 0 -&gt; items -&gt; 11 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63422" resname="themeConfig.sidebar./releases.0.items.12.text">
        <source>v4.12 版本介绍</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">v4.12 版本介紹</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /releases -&gt; 0 -&gt; items -&gt; 12 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63424" resname="themeConfig.sidebar./releases.0.items.12.link" translate="no">
        <source>/releases/v4.12.md</source>
        <target>/releases/v4.12.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /releases -&gt; 0 -&gt; items -&gt; 12 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63426" resname="themeConfig.sidebar./releases.0.items.13.text">
        <source>v4.13 版本介绍</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">v4.13 版本介紹</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /releases -&gt; 0 -&gt; items -&gt; 13 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63428" resname="themeConfig.sidebar./releases.0.items.13.link" translate="no">
        <source>/releases/v4.13.md</source>
        <target>/releases/v4.13.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /releases -&gt; 0 -&gt; items -&gt; 13 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63430" resname="themeConfig.sidebar./releases.0.items.14.text">
        <source>v4.14 版本介绍</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">v4.14 版本介紹</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /releases -&gt; 0 -&gt; items -&gt; 14 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63432" resname="themeConfig.sidebar./releases.0.items.14.link" translate="no">
        <source>/releases/v4.14.md</source>
        <target>/releases/v4.14.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /releases -&gt; 0 -&gt; items -&gt; 14 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63434" resname="themeConfig.sidebar./releases.0.items.15.text">
        <source>v4.15 版本介绍</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">v4.15 版本介紹</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /releases -&gt; 0 -&gt; items -&gt; 15 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63436" resname="themeConfig.sidebar./releases.0.items.15.link" translate="no">
        <source>/releases/v4.15.md</source>
        <target>/releases/v4.15.md</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /releases -&gt; 0 -&gt; items -&gt; 15 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63438" resname="themeConfig.sidebar./releases.1.text" translate="no">
        <source></source>
        <target></target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /releases -&gt; 1 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63440" resname="themeConfig.sidebar./releases.1.items.0.text">
        <source>更新日志</source>
        <target state="needs-translation">更新日志</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /releases -&gt; 1 -&gt; items -&gt; 0 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63442" resname="themeConfig.sidebar./releases.1.items.0.link" translate="no">
        <source>https://github.com/koishijs/koishi/releases</source>
        <target>https://github.com/koishijs/koishi/releases</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; /releases -&gt; 1 -&gt; items -&gt; 0 -&gt; link</context>
        </context-group>
      </trans-unit>
    </body>
  </file>
  <file id="1818" original="/[koishijs.docs] main/public/manifest/zh-CN.json" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="63444" resname="name">
        <source>Koishi</source>
        <target state="translated">Koishi</target>
        <context-group purpose="information">
          <context context-type="source"> -&gt; name</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63446" resname="short_name">
        <source>Koishi</source>
        <target state="translated">Koishi</target>
        <context-group purpose="information">
          <context context-type="source"> -&gt; short_name</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63448" resname="description">
        <source>跨平台、可扩展、高性能的机器人框架</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">跨平臺、可擴展、高性能的機器人框架</target>
        <context-group purpose="information">
          <context context-type="source"> -&gt; description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63450" resname="start_url">
        <source>/zh-CN/</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">/zh-TW/</target>
        <context-group purpose="information">
          <context context-type="source"> -&gt; start_url</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63452" resname="display" translate="no">
        <source>standalone</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">standalone</target>
        <context-group purpose="information">
          <context context-type="source"> -&gt; display</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63454" resname="background_color" translate="no">
        <source>#ffffff</source>
        <target>#ffffff</target>
        <context-group purpose="information">
          <context context-type="source"> -&gt; background_color</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63456" resname="theme_color" translate="no">
        <source>#5546a3</source>
        <target>#5546a3</target>
        <context-group purpose="information">
          <context context-type="source"> -&gt; theme_color</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63458" resname="icons.0.src" translate="no">
        <source>/logo.png</source>
        <target>/logo.png</target>
        <context-group purpose="information">
          <context context-type="source">icons -&gt; 0 -&gt; src</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63460" resname="icons.0.sizes" translate="no">
        <source>384x384</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">384x384</target>
        <context-group purpose="information">
          <context context-type="source">icons -&gt; 0 -&gt; sizes</context>
        </context-group>
      </trans-unit>
      <trans-unit id="63462" resname="icons.0.type" translate="no">
        <source>image/png</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">image/png</target>
        <context-group purpose="information">
          <context context-type="source">icons -&gt; 0 -&gt; type</context>
        </context-group>
      </trans-unit>
    </body>
  </file>
  <file id="1820" original="/[koishijs.docs] main/zh-CN/api/service/timer.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="64148">
        <source>计时器 (Timer)</source>
        <target state="needs-translation">计时器 (Timer)</target>
      </trans-unit>
      <trans-unit id="64150">
        <source>实例方法</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">實體方法</target>
      </trans-unit>
      <trans-unit id="64152">
        <source>ctx.setTimeout(callback, delay)</source>
        <target state="needs-translation">ctx.setTimeout(callback, delay)</target>
      </trans-unit>
      <trans-unit id="64154">
        <source>**callback:** `Function` 回调函数</source>
        <target state="needs-translation">**callback:** `Function` 回调函数</target>
      </trans-unit>
      <trans-unit id="64156">
        <source>**delay:** `number` 延迟时间 (毫秒)</source>
        <target state="needs-translation">**delay:** `number` 延迟时间 (毫秒)</target>
      </trans-unit>
      <trans-unit id="64158">
        <source>返回值: `() =&gt; void`</source>
        <target state="needs-translation">返回值: `() =&gt; void`</target>
      </trans-unit>
      <trans-unit id="64160">
        <source>在指定的延迟时间后执行回调函数。</source>
        <target state="needs-translation">在指定的延迟时间后执行回调函数。</target>
      </trans-unit>
      <trans-unit id="64162">
        <source>返回的函数可以用于取消此计时器。</source>
        <target state="needs-translation">返回的函数可以用于取消此计时器。</target>
      </trans-unit>
      <trans-unit id="64164">
        <source>ctx.setInterval(callback, delay)</source>
        <target state="needs-translation">ctx.setInterval(callback, delay)</target>
      </trans-unit>
      <trans-unit id="64166">
        <source>**callback:** `Function` 回调函数</source>
        <target state="needs-translation">**callback:** `Function` 回调函数</target>
      </trans-unit>
      <trans-unit id="64168">
        <source>**delay:** `number` 延迟时间 (毫秒)</source>
        <target state="needs-translation">**delay:** `number` 延迟时间 (毫秒)</target>
      </trans-unit>
      <trans-unit id="64170">
        <source>返回值: `() =&gt; void`</source>
        <target state="needs-translation">返回值: `() =&gt; void`</target>
      </trans-unit>
      <trans-unit id="64172">
        <source>在指定的延迟时间后执行回调函数，然后每隔指定的延迟时间重复执行。</source>
        <target state="needs-translation">在指定的延迟时间后执行回调函数，然后每隔指定的延迟时间重复执行。</target>
      </trans-unit>
      <trans-unit id="64174">
        <source>返回的函数可以用于取消此计时器。</source>
        <target state="needs-translation">返回的函数可以用于取消此计时器。</target>
      </trans-unit>
      <trans-unit id="64176">
        <source>ctx.sleep(delay)</source>
        <target state="needs-translation">ctx.sleep(delay)</target>
      </trans-unit>
      <trans-unit id="64178">
        <source>**delay:** `number` 延迟时间 (毫秒)</source>
        <target state="needs-translation">**delay:** `number` 延迟时间 (毫秒)</target>
      </trans-unit>
      <trans-unit id="64180">
        <source>返回值: `Promise&lt;void&gt;`</source>
        <target state="needs-translation">返回值: `Promise&lt;void&gt;`</target>
      </trans-unit>
      <trans-unit id="64182">
        <source>等待指定的延迟时间。</source>
        <target state="needs-translation">等待指定的延迟时间。</target>
      </trans-unit>
      <trans-unit id="64184">
        <source>如果在此期间插件被停用，将会抛出一个错误。</source>
        <target state="needs-translation">如果在此期间插件被停用，将会抛出一个错误。</target>
      </trans-unit>
      <trans-unit id="64186">
        <source>ctx.throttle(callback, delay, noTrailing?)</source>
        <target state="needs-translation">ctx.throttle(callback, delay, noTrailing?)</target>
      </trans-unit>
      <trans-unit id="64188">
        <source>**callback:** `F extends (...args: any[]) =&gt; void` 回调函数</source>
        <target state="needs-translation">**callback:** `F extends (...args: any[]) =&gt; void` 回调函数</target>
      </trans-unit>
      <trans-unit id="64190">
        <source>**delay:** `number` 延迟时间 (毫秒)</source>
        <target state="needs-translation">**delay:** `number` 延迟时间 (毫秒)</target>
      </trans-unit>
      <trans-unit id="64192">
        <source>**noTrailing:** `boolean` 是否禁用尾随调用</source>
        <target state="needs-translation">**noTrailing:** `boolean` 是否禁用尾随调用</target>
      </trans-unit>
      <trans-unit id="64194">
        <source>返回值: `WithDispose&lt;F&gt;`</source>
        <target state="needs-translation">返回值: `WithDispose&lt;F&gt;`</target>
      </trans-unit>
      <trans-unit id="64196">
        <source>返回一个函数，该函数在指定的周期内最多执行一次。</source>
        <target state="needs-translation">返回一个函数，该函数在指定的周期内最多执行一次。</target>
      </trans-unit>
      <trans-unit id="64198">
        <source>具体表现为，此函数被调用后会立即执行，并在接下来的 `delay` 毫秒内忽略所有调用。</source>
        <target state="needs-translation">具体表现为，此函数被调用后会立即执行，并在接下来的 `delay` 毫秒内忽略所有调用。</target>
      </trans-unit>
      <trans-unit id="64200">
        <source>默认情况下，如果在最后一次实际执行后的一个延迟周期内再次调用返回的函数，则会在此延迟周期结束时再次执行 (即尾随调用)。</source>
        <target state="needs-translation">默认情况下，如果在最后一次实际执行后的一个延迟周期内再次调用返回的函数，则会在此延迟周期结束时再次执行 (即尾随调用)。</target>
      </trans-unit>
      <trans-unit id="64202">
        <source>将 `noTrailing` 设置为 `true` 可禁用此行为。</source>
        <target state="needs-translation">将 `noTrailing` 设置为 `true` 可禁用此行为。</target>
      </trans-unit>
      <trans-unit id="64204">
        <source>返回函数的 `dispose()` 方法可用于取消此计时器。</source>
        <target state="needs-translation">返回函数的 `dispose()` 方法可用于取消此计时器。</target>
      </trans-unit>
      <trans-unit id="64206">
        <source>此后所有调用都将被忽略。</source>
        <target state="needs-translation">此后所有调用都将被忽略。</target>
      </trans-unit>
      <trans-unit id="64208">
        <source>ctx.debounce(callback, delay)</source>
        <target state="needs-translation">ctx.debounce(callback, delay)</target>
      </trans-unit>
      <trans-unit id="64210">
        <source>**callback:** `F extends (...args: any[]) =&gt; void` 回调函数</source>
        <target state="needs-translation">**callback:** `F extends (...args: any[]) =&gt; void` 回调函数</target>
      </trans-unit>
      <trans-unit id="64212">
        <source>**delay:** `number` 延迟时间 (毫秒)</source>
        <target state="needs-translation">**delay:** `number` 延迟时间 (毫秒)</target>
      </trans-unit>
      <trans-unit id="64214">
        <source>返回值: `WithDispose&lt;F&gt;`</source>
        <target state="needs-translation">返回值: `WithDispose&lt;F&gt;`</target>
      </trans-unit>
      <trans-unit id="64216">
        <source>返回一个函数，该函数会忽略小于指定间隔的所有高频调用。</source>
        <target state="needs-translation">返回一个函数，该函数会忽略小于指定间隔的所有高频调用。</target>
      </trans-unit>
      <trans-unit id="64218">
        <source>具体表现为，此函数被调用后，不会立即执行，而是会等待 `delay` 毫秒。</source>
        <target state="needs-translation">具体表现为，此函数被调用后，不会立即执行，而是会等待 `delay` 毫秒。</target>
      </trans-unit>
      <trans-unit id="64220">
        <source>如果在此期间再次调用返回的函数，则会重新计时。</source>
        <target state="needs-translation">如果在此期间再次调用返回的函数，则会重新计时。</target>
      </trans-unit>
      <trans-unit id="64222">
        <source>直到 `delay` 毫秒内没有调用，此函数才会执行。</source>
        <target state="needs-translation">直到 `delay` 毫秒内没有调用，此函数才会执行。</target>
      </trans-unit>
      <trans-unit id="64224">
        <source>返回函数的 `dispose()` 方法可用于取消此计时器。</source>
        <target state="needs-translation">返回函数的 `dispose()` 方法可用于取消此计时器。</target>
      </trans-unit>
      <trans-unit id="64226">
        <source>此后所有调用都将被忽略。</source>
        <target state="needs-translation">此后所有调用都将被忽略。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1822" original="/[koishijs.docs] main/zh-CN/plugins/develop/notifier.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="65378">
        <source>@koishi/plugin-notifier</source>
        <target state="needs-translation">@koishi/plugin-notifier</target>
      </trans-unit>
      <trans-unit id="64248">
        <source>上下文 API</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">上下文 API</target>
      </trans-unit>
      <trans-unit id="64250">
        <source>ctx.notifier.create(options?)</source>
        <target state="needs-translation">ctx.notifier.create(options?)</target>
      </trans-unit>
      <trans-unit id="64468">
        <source>**options:** &lt;code&gt;Fragment | [Options](#options)&lt;/code&gt; 通知选项</source>
        <target state="needs-translation">**options:** &lt;code&gt;Fragment | [Options](#options)&lt;/code&gt; 通知选项</target>
      </trans-unit>
      <trans-unit id="64254">
        <source>返回值: [`Notifier`](#notifier)</source>
        <target state="needs-translation">返回值: [`Notifier`](#notifier)</target>
      </trans-unit>
      <trans-unit id="64256">
        <source>创建一个通知。</source>
        <target state="needs-translation">创建一个通知。</target>
      </trans-unit>
      <trans-unit id="64470">
        <source>如果传入的是字符串或 JSX，则会视为 [`options.content`](#options-content)。</source>
        <target state="needs-translation">如果传入的是字符串或 JSX，则会视为 [`options.content`](#options-content)。</target>
      </trans-unit>
      <trans-unit id="64260">
        <source>通知选项 {#options}</source>
        <target state="needs-translation">通知选项 {#options}</target>
      </trans-unit>
      <trans-unit id="64262">
        <source>options.type</source>
        <target state="needs-translation">options.type</target>
      </trans-unit>
      <trans-unit id="64264">
        <source>类型: `'primary' | 'success' | 'warning' | 'danger'`</source>
        <target state="needs-translation">类型: `'primary' | 'success' | 'warning' | 'danger'`</target>
      </trans-unit>
      <trans-unit id="64266">
        <source>默认值: `'primary'`</source>
        <target state="needs-translation">默认值: `'primary'`</target>
      </trans-unit>
      <trans-unit id="64268">
        <source>通知类型。</source>
        <target state="needs-translation">通知类型。</target>
      </trans-unit>
      <trans-unit id="64270">
        <source>options.content</source>
        <target state="needs-translation">options.content</target>
      </trans-unit>
      <trans-unit id="64472">
        <source>类型: `Fragment`</source>
        <target state="needs-translation">类型: `Fragment`</target>
      </trans-unit>
      <trans-unit id="64274">
        <source>默认值: `''`</source>
        <target state="needs-translation">默认值: `''`</target>
      </trans-unit>
      <trans-unit id="64276">
        <source>通知内容。</source>
        <target state="needs-translation">通知内容。</target>
      </trans-unit>
      <trans-unit id="64278">
        <source>类：Notifier {#notifier}</source>
        <target state="needs-translation">类：Notifier {#notifier}</target>
      </trans-unit>
      <trans-unit id="64280">
        <source>notifier.update(options?)</source>
        <target state="needs-translation">notifier.update(options?)</target>
      </trans-unit>
      <trans-unit id="64474">
        <source>**options:** &lt;code&gt;Fragment | [Options](#options)&lt;/code&gt; 通知选项</source>
        <target state="needs-translation">**options:** &lt;code&gt;Fragment | [Options](#options)&lt;/code&gt; 通知选项</target>
      </trans-unit>
      <trans-unit id="64284">
        <source>更新此通知。</source>
        <target state="needs-translation">更新此通知。</target>
      </trans-unit>
      <trans-unit id="64286">
        <source>如果传入的是字符串，则会视为 [`options.content`](#options-content)。</source>
        <target state="needs-translation">如果传入的是字符串，则会视为 [`options.content`](#options-content)。</target>
      </trans-unit>
      <trans-unit id="64288">
        <source>notifier.dispose()</source>
        <target state="needs-translation">notifier.dispose()</target>
      </trans-unit>
      <trans-unit id="64290">
        <source>移除此通知。</source>
        <target state="needs-translation">移除此通知。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1826" original="/[koishijs.docs] main/zh-CN/plugins/develop/http.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="65222">
        <source>@koishijs/plugin-http</source>
        <target state="needs-translation">@koishijs/plugin-http</target>
      </trans-unit>
      <trans-unit id="65318">
        <source>如果想要使用代理，可以使用 [@koishijs/plugin-proxy-agent](./proxy-agent.md) 插件。</source>
        <target state="needs-translation">如果想要使用代理，可以使用 [@koishijs/plugin-proxy-agent](./proxy-agent.md) 插件。</target>
      </trans-unit>
      <trans-unit id="65320">
        <source>@koishijs/plugin-http 提供了 `ctx.http` 基础服务，其上封装了一套基于 [fetch](https://developer.mozilla.org/zh-CN/docs/Web/API/Fetch_API) 的网络请求 API。</source>
        <target state="needs-translation">@koishijs/plugin-http 提供了 `ctx.http` 基础服务，其上封装了一套基于 [fetch](https://developer.mozilla.org/zh-CN/docs/Web/API/Fetch_API) 的网络请求 API。</target>
      </trans-unit>
      <trans-unit id="65322">
        <source>你可能会有这样的疑问：为什么不直接使用 fetch，而是使用 `ctx.http`？</source>
        <target state="needs-translation">你可能会有这样的疑问：为什么不直接使用 fetch，而是使用 `ctx.http`？</target>
      </trans-unit>
      <trans-unit id="65324">
        <source>这是因为许多插件都需要发起网络请求，而诸如代理、超时等配置又通常是插件无关的。</source>
        <target state="needs-translation">这是因为许多插件都需要发起网络请求，而诸如代理、超时等配置又通常是插件无关的。</target>
      </trans-unit>
      <trans-unit id="65326">
        <source>因此我们为这些通用需求提供了统一的配置，各个插件则只需要调用 `ctx.http` 即可，不用关心复杂多变的用户需求。</source>
        <target state="needs-translation">因此我们为这些通用需求提供了统一的配置，各个插件则只需要调用 `ctx.http` 即可，不用关心复杂多变的用户需求。</target>
      </trans-unit>
      <trans-unit id="65328">
        <source>实例方法</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">實體方法</target>
      </trans-unit>
      <trans-unit id="65330">
        <source>ctx.http(method, url, config)</source>
        <target state="needs-translation">ctx.http(method, url, config)</target>
      </trans-unit>
      <trans-unit id="65332">
        <source>**method:** `string` 请求方法</source>
        <target state="needs-translation">**method:** `string` 请求方法</target>
      </trans-unit>
      <trans-unit id="65334">
        <source>**url:** `string` 请求地址</source>
        <target state="needs-translation">**url:** `string` 请求地址</target>
      </trans-unit>
      <trans-unit id="65336">
        <source>**config:** `RequestConfig` 配置项</source>
        <target state="needs-translation">**config:** `RequestConfig` 配置项</target>
      </trans-unit>
      <trans-unit id="65338">
        <source>返回值: `Promise&lt;any&gt;`</source>
        <target state="needs-translation">返回值: `Promise&lt;any&gt;`</target>
      </trans-unit>
      <trans-unit id="65340">
        <source>ctx.http.head(url, config)</source>
        <target state="needs-translation">ctx.http.head(url, config)</target>
      </trans-unit>
      <trans-unit id="65342">
        <source>ctx.http.get(url, config)</source>
        <target state="needs-translation">ctx.http.get(url, config)</target>
      </trans-unit>
      <trans-unit id="65344">
        <source>ctx.http.delete(url, config)</source>
        <target state="needs-translation">ctx.http.delete(url, config)</target>
      </trans-unit>
      <trans-unit id="65346">
        <source>**url:** `string` 请求地址</source>
        <target state="needs-translation">**url:** `string` 请求地址</target>
      </trans-unit>
      <trans-unit id="65348">
        <source>**config:** `RequestConfig` 配置项</source>
        <target state="needs-translation">**config:** `RequestConfig` 配置项</target>
      </trans-unit>
      <trans-unit id="65350">
        <source>返回值: `Promise&lt;any&gt;`</source>
        <target state="needs-translation">返回值: `Promise&lt;any&gt;`</target>
      </trans-unit>
      <trans-unit id="65352">
        <source>发送 HEAD / GET / DELETE 请求。</source>
        <target state="needs-translation">发送 HEAD / GET / DELETE 请求。</target>
      </trans-unit>
      <trans-unit id="65354">
        <source>ctx.http.post(url, data, config)</source>
        <target state="needs-translation">ctx.http.post(url, data, config)</target>
      </trans-unit>
      <trans-unit id="65356">
        <source>ctx.http.put(url, data, config)</source>
        <target state="needs-translation">ctx.http.put(url, data, config)</target>
      </trans-unit>
      <trans-unit id="65358">
        <source>ctx.http.patch(url, data, config)</source>
        <target state="needs-translation">ctx.http.patch(url, data, config)</target>
      </trans-unit>
      <trans-unit id="65360">
        <source>**url:** `string` 请求地址</source>
        <target state="needs-translation">**url:** `string` 请求地址</target>
      </trans-unit>
      <trans-unit id="65362">
        <source>**data:** `any` 请求数据</source>
        <target state="needs-translation">**data:** `any` 请求数据</target>
      </trans-unit>
      <trans-unit id="65364">
        <source>**config:** `RequestConfig` 配置项</source>
        <target state="needs-translation">**config:** `RequestConfig` 配置项</target>
      </trans-unit>
      <trans-unit id="65366">
        <source>返回值: `Promise&lt;any&gt;`</source>
        <target state="needs-translation">返回值: `Promise&lt;any&gt;`</target>
      </trans-unit>
      <trans-unit id="65368">
        <source>发送 POST / PUT / PATCH 请求。</source>
        <target state="needs-translation">发送 POST / PUT / PATCH 请求。</target>
      </trans-unit>
      <trans-unit id="65370">
        <source>ctx.http\.ws(url)</source>
        <target state="needs-translation">ctx.http\.ws(url)</target>
      </trans-unit>
      <trans-unit id="65372">
        <source>**url:** `string` 请求地址</source>
        <target state="needs-translation">**url:** `string` 请求地址</target>
      </trans-unit>
      <trans-unit id="65374">
        <source>返回值: `WebSocket`</source>
        <target state="needs-translation">返回值: `WebSocket`</target>
      </trans-unit>
      <trans-unit id="65376">
        <source>创建一个 WebSocket 连接。</source>
        <target state="needs-translation">创建一个 WebSocket 连接。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1828" original="/[koishijs.docs] main/zh-CN/plugins/develop/proxy-agent.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="65224">
        <source>@koishijs/plugin-proxy-agent</source>
        <target state="needs-translation">@koishijs/plugin-proxy-agent</target>
      </trans-unit>
      <trans-unit id="65380">
        <source>@koishijs/plugin-proxy-agent 为 [`http`](./http.md) 服务提供了额外的网络代理能力，支持 HTTP(S), SOCKS 系列协议。</source>
        <target state="needs-translation">@koishijs/plugin-proxy-agent 为 [`http`](./http.md) 服务提供了额外的网络代理能力，支持 HTTP(S), SOCKS 系列协议。</target>
      </trans-unit>
      <trans-unit id="65382">
        <source>配置项</source>
        <target state="needs-translation">配置项</target>
      </trans-unit>
      <trans-unit id="65384">
        <source>config.proxyAgent</source>
        <target state="needs-translation">config.proxyAgent</target>
      </trans-unit>
      <trans-unit id="65386">
        <source>类型: `string`</source>
        <target state="needs-translation">类型: `string`</target>
      </trans-unit>
      <trans-unit id="65388">
        <source>请求时默认使用的网络代理。</source>
        <target state="needs-translation">请求时默认使用的网络代理。</target>
      </trans-unit>
    </body>
  </file>
  <file id="1830" original="/[koishijs.docs] main/zh-CN/api/service/server.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="65258">
        <source>服务器 (Server)</source>
        <target state="needs-translation">服务器 (Server)</target>
      </trans-unit>
      <trans-unit id="65260">
        <source>参见 [`@koishijs/plugin-server`](../../plugins/develop/server.md) 插件文档。</source>
        <target state="needs-translation">参见 [`@koishijs/plugin-server`](../../plugins/develop/server.md) 插件文档。</target>
      </trans-unit>
    </body>
  </file>
  <file id="2030" original="/[koishijs.koishi-plugin-booru] main/packages/core/src/locales/zh-CN.yml" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="65670" resname="commands.booru.description">
        <source>搜索图片</source>
        <target state="needs-translation">搜索图片</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; booru -&gt; description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65672" resname="commands.booru.options.label">
        <source>指定图源标签</source>
        <target state="needs-translation">指定图源标签</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; booru -&gt; options -&gt; label</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65674" resname="commands.booru.messages.no-source">
        <source>当前未找到可用图源。请从插件市场添加 booru 系图源插件并启用 (插件名通常以 booru- 开头)。</source>
        <target state="needs-translation">当前未找到可用图源。请从插件市场添加 booru 系图源插件并启用 (插件名通常以 booru- 开头)。</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; booru -&gt; messages -&gt; no-source</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65676" resname="commands.booru.messages.no-result">
        <source>没有找到符合条件的图片</source>
        <target state="needs-translation">没有找到符合条件的图片</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; booru -&gt; messages -&gt; no-result</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65678" resname="commands.booru.messages.no-image">
        <source>获取图片失败</source>
        <target state="needs-translation">获取图片失败</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; booru -&gt; messages -&gt; no-image</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65680" resname="commands.booru.messages.output.desc">
        <source>{0}</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">{0}</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; booru -&gt; messages -&gt; output -&gt; desc</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65682" resname="commands.booru.messages.output.author">
        <source>作者: {0}</source>
        <target state="needs-translation">作者: {0}</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; booru -&gt; messages -&gt; output -&gt; author</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65684" resname="commands.booru.messages.output.homepage">
        <source>作者主页: {0}</source>
        <target state="needs-translation">作者主页: {0}</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; booru -&gt; messages -&gt; output -&gt; homepage</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65686" resname="commands.booru.messages.output.link">
        <source>页面地址: {0}</source>
        <target state="needs-translation">页面地址: {0}</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; booru -&gt; messages -&gt; output -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65688" resname="commands.booru.messages.output.source">
        <source>图源: {0}</source>
        <target state="needs-translation">图源: {0}</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; booru -&gt; messages -&gt; output -&gt; source</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65690" resname="commands.booru.messages.output.tags">
        <source>标签: {0}</source>
        <target state="needs-translation">标签: {0}</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; booru -&gt; messages -&gt; output -&gt; tags</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65692" resname="commands.booru.messages.booru.tips.general.2">
        <source>&lt;b&gt;提示：&lt;/b&gt;{0}</source>
        <target state="needs-translation">&lt;b&gt;提示：&lt;/b&gt;{0}</target>
        <context-group purpose="information">
          <context context-type="source">commands -&gt; booru -&gt; messages -&gt; booru.tips.general.2</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65694" resname="booru.booru.tips.general.2.general.0">
        <source>不带参数调用此命令将会随机返回一张图片</source>
        <target state="needs-translation">不带参数调用此命令将会随机返回一张图片</target>
        <context-group purpose="information">
          <context context-type="source">booru -&gt; booru.tips.general.2 -&gt; general -&gt; 0</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65696" resname="booru.booru.tips.general.2.general.1">
        <source>可以使用 &lt;code&gt;-l &amp;lt;label&amp;gt;&lt;/code&gt; 或 &lt;code&gt;--label &amp;lt;label&amp;gt;&lt;/code&gt; 参数指定图源标签</source>
        <target state="needs-translation">可以使用 &lt;code&gt;-l &amp;lt;label&amp;gt;&lt;/code&gt; 或 &lt;code&gt;--label &amp;lt;label&amp;gt;&lt;/code&gt; 参数指定图源标签</target>
        <context-group purpose="information">
          <context context-type="source">booru -&gt; tips -&gt; general -&gt; 1</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65698" resname="booru.tips.general.2">
        <source>可以使用 &lt;code&gt;-c &amp;lt;count&amp;gt;&lt;/code&gt; 或 &lt;code&gt;--count &amp;lt;count&amp;gt;&lt;/code&gt; 参数指定返回图片数量</source>
        <target state="needs-translation">可以使用 &lt;code&gt;-c &amp;lt;count&amp;gt;&lt;/code&gt; 或 &lt;code&gt;--count &amp;lt;count&amp;gt;&lt;/code&gt; 参数指定返回图片数量</target>
        <context-group purpose="information">
          <context context-type="source">booru -&gt; tips -&gt; general -&gt; 2</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65700" resname="booru.tips.general.3">
        <source>使用 &lt;code&gt;{0} -c 3&lt;/code&gt; 可以返回 3 张图片</source>
        <target state="needs-translation">使用 &lt;code&gt;{0} -c 3&lt;/code&gt; 可以返回 3 张图片</target>
        <context-group purpose="information">
          <context context-type="source">booru -&gt; tips -&gt; general -&gt; 3</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65702" resname="booru.tips.general.4">
        <source>指定的图片数量与实际返回的图片数量可能有所不同</source>
        <target state="needs-translation">指定的图片数量与实际返回的图片数量可能有所不同</target>
        <context-group purpose="information">
          <context context-type="source">booru -&gt; tips -&gt; general -&gt; 4</context>
        </context-group>
      </trans-unit>
    </body>
  </file>
  <file id="2032" original="/[koishijs.koishi-plugin-booru] main/packages/core/src/locales/zh-CN.schema.yml" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="65704" resname="$inner.0.$description">
        <source>搜索设置</source>
        <target state="translated">搜尋設定</target>
        <context-group purpose="information">
          <context context-type="source">$inner -&gt; 0 -&gt; $description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65706" resname="$inner.0.detectLanguage">
        <source>自动检测输入语言并选择语言匹配的图源。</source>
        <target state="needs-translation">自动检测输入语言并选择语言匹配的图源。</target>
        <context-group purpose="information">
          <context context-type="source">$inner -&gt; 0 -&gt; detectLanguage</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65708" resname="$inner.0.confidence">
        <source>语言检测的置信度。</source>
        <target state="needs-translation">语言检测的置信度。</target>
        <context-group purpose="information">
          <context context-type="source">$inner -&gt; 0 -&gt; confidence</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65710" resname="$inner.0.maxCount">
        <source>每次搜索的最大数量。</source>
        <target state="needs-translation">每次搜索的最大数量。</target>
        <context-group purpose="information">
          <context context-type="source">$inner -&gt; 0 -&gt; maxCount</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65712" resname="$inner.0.nsfw">
        <source>是否允许输出 NSFW 内容。</source>
        <target state="needs-translation">是否允许输出 NSFW 内容。</target>
        <context-group purpose="information">
          <context context-type="source">$inner -&gt; 0 -&gt; nsfw</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65714" resname="$inner.1.$description">
        <source>输出设置</source>
        <target state="needs-translation">输出设置</target>
        <context-group purpose="information">
          <context context-type="source">$inner -&gt; 1 -&gt; $description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65716" resname="$inner.1.output.$description">
        <source>输出方式。</source>
        <target state="needs-translation">输出方式。</target>
        <context-group purpose="information">
          <context context-type="source">$inner -&gt; 1 -&gt; output -&gt; $description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65718" resname="$inner.1.output.$inner.0">
        <source>仅发送图片</source>
        <target state="needs-translation">仅发送图片</target>
        <context-group purpose="information">
          <context context-type="source">$inner -&gt; 1 -&gt; output -&gt; $inner -&gt; 0</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65720" resname="$inner.1.output.$inner.1">
        <source>发送图片和相关信息</source>
        <target state="needs-translation">发送图片和相关信息</target>
        <context-group purpose="information">
          <context context-type="source">$inner -&gt; 1 -&gt; output -&gt; $inner -&gt; 1</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65722" resname="$inner.1.output.$inner.2">
        <source>发送图片、相关信息和链接</source>
        <target state="needs-translation">发送图片、相关信息和链接</target>
        <context-group purpose="information">
          <context context-type="source">$inner -&gt; 1 -&gt; output -&gt; $inner -&gt; 2</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65724" resname="$inner.1.output.$inner.3">
        <source>发送全部信息</source>
        <target state="needs-translation">发送全部信息</target>
        <context-group purpose="information">
          <context context-type="source">$inner -&gt; 1 -&gt; output -&gt; $inner -&gt; 3</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65726" resname="$inner.1.outputMethod.$description">
        <source>发送方式。</source>
        <target state="needs-translation">发送方式。</target>
        <context-group purpose="information">
          <context context-type="source">$inner -&gt; 1 -&gt; outputMethod -&gt; $description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65728" resname="$inner.1.outputMethod.$inner.0">
        <source>逐条发送每张图片</source>
        <target state="needs-translation">逐条发送每张图片</target>
        <context-group purpose="information">
          <context context-type="source">$inner -&gt; 1 -&gt; outputMethod -&gt; $inner -&gt; 0</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65730" resname="$inner.1.outputMethod.$inner.1">
        <source>合并多条发送 (部分平台可能不支持)</source>
        <target state="needs-translation">合并多条发送 (部分平台可能不支持)</target>
        <context-group purpose="information">
          <context context-type="source">$inner -&gt; 1 -&gt; outputMethod -&gt; $inner -&gt; 1</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65732" resname="$inner.1.outputMethod.$inner.2">
        <source>合并为子话题发送所有图片 (部分平台需求较高权限)</source>
        <target state="needs-translation">合并为子话题发送所有图片 (部分平台需求较高权限)</target>
        <context-group purpose="information">
          <context context-type="source">$inner -&gt; 1 -&gt; outputMethod -&gt; $inner -&gt; 2</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65734" resname="$inner.1.outputMethod.$inner.3">
        <source>仅当多于一张图片使用合并为子话题发送 (部分平台需求较高权限)</source>
        <target state="needs-translation">仅当多于一张图片使用合并为子话题发送 (部分平台需求较高权限)</target>
        <context-group purpose="information">
          <context context-type="source">$inner -&gt; 1 -&gt; outputMethod -&gt; $inner -&gt; 3</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65736" resname="$inner.1.preferSize.$description">
        <source>优先使用图片的最大尺寸。</source>
        <target state="needs-translation">优先使用图片的最大尺寸。</target>
        <context-group purpose="information">
          <context context-type="source">$inner -&gt; 1 -&gt; preferSize -&gt; $description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65738" resname="$inner.1.preferSize.$inner.0">
        <source>原始尺寸</source>
        <target state="needs-translation">原始尺寸</target>
        <context-group purpose="information">
          <context context-type="source">$inner -&gt; 1 -&gt; preferSize -&gt; $inner -&gt; 0</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65740" resname="$inner.1.preferSize.$inner.1">
        <source>较大尺寸 (通常为约 1200px)</source>
        <target state="needs-translation">较大尺寸 (通常为约 1200px)</target>
        <context-group purpose="information">
          <context context-type="source">$inner -&gt; 1 -&gt; preferSize -&gt; $inner -&gt; 1</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65742" resname="$inner.1.preferSize.$inner.2">
        <source>中等尺寸 (通常为约 600px)</source>
        <target state="needs-translation">中等尺寸 (通常为约 600px)</target>
        <context-group purpose="information">
          <context context-type="source">$inner -&gt; 1 -&gt; preferSize -&gt; $inner -&gt; 2</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65744" resname="$inner.1.preferSize.$inner.3">
        <source>较小尺寸 (通常为约 300px)</source>
        <target state="needs-translation">较小尺寸 (通常为约 300px)</target>
        <context-group purpose="information">
          <context context-type="source">$inner -&gt; 1 -&gt; preferSize -&gt; $inner -&gt; 3</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65746" resname="$inner.1.preferSize.$inner.4">
        <source>缩略图</source>
        <target state="needs-translation">缩略图</target>
        <context-group purpose="information">
          <context context-type="source">$inner -&gt; 1 -&gt; preferSize -&gt; $inner -&gt; 4</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65748" resname="$inner.1.autoResize.$description">
        <source>根据 preferSize 自动缩小过大的图片。 **需要安装提供 canvas 服务的插件**</source>
        <target state="needs-translation">根据 preferSize 自动缩小过大的图片。 **需要安装提供 canvas 服务的插件**</target>
        <context-group purpose="information">
          <context context-type="source">$inner -&gt; 1 -&gt; autoResize -&gt; $description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65750" resname="$inner.1.asset">
        <source>优先使用 [assets服务](https://assets.koishi.chat/) 转存图片。</source>
        <target state="needs-translation">优先使用 [assets服务](https://assets.koishi.chat/) 转存图片。</target>
        <context-group purpose="information">
          <context context-type="source">$inner -&gt; 1 -&gt; asset</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65752" resname="$inner.1.base64">
        <source>使用 base64 发送图片。</source>
        <target state="needs-translation">使用 base64 发送图片。</target>
        <context-group purpose="information">
          <context context-type="source">$inner -&gt; 1 -&gt; base64</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65754" resname="$inner.1.spoiler.$description">
        <source>发送为隐藏图片，单击后显示（在 QQ 平台中以「合并转发」发送）。</source>
        <target state="needs-translation">发送为隐藏图片，单击后显示（在 QQ 平台中以「合并转发」发送）。</target>
        <context-group purpose="information">
          <context context-type="source">$inner -&gt; 1 -&gt; spoiler -&gt; $description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65756" resname="$inner.1.spoiler.$inner.0">
        <source>禁用</source>
        <target state="needs-translation">禁用</target>
        <context-group purpose="information">
          <context context-type="source">$inner -&gt; 1 -&gt; spoiler -&gt; $inner -&gt; 0</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65758" resname="$inner.1.spoiler.$inner.1">
        <source>所有图片</source>
        <target state="needs-translation">所有图片</target>
        <context-group purpose="information">
          <context context-type="source">$inner -&gt; 1 -&gt; spoiler -&gt; $inner -&gt; 1</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65760" resname="$inner.1.spoiler.$inner.2">
        <source>仅 NSFW 图片</source>
        <target state="needs-translation">仅 NSFW 图片</target>
        <context-group purpose="information">
          <context context-type="source">$inner -&gt; 1 -&gt; spoiler -&gt; $inner -&gt; 2</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65762" resname="$inner.1.showTips">
        <source>是否输出使用提示信息。</source>
        <target state="needs-translation">是否输出使用提示信息。</target>
        <context-group purpose="information">
          <context context-type="source">$inner -&gt; 1 -&gt; showTips</context>
        </context-group>
      </trans-unit>
    </body>
  </file>
  <file id="2034" original="/[koishijs.koishi-plugin-booru] main/packages/danbooru/src/locales/zh-CN.schema.yml" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="65764" resname="$description">
        <source>搜索设置</source>
        <target state="translated">搜尋設定</target>
        <context-group purpose="information">
          <context context-type="source"> -&gt; $description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65766" resname="endpoint">
        <source>Danbooru 的 URL。</source>
        <target state="needs-translation">Danbooru 的 URL。</target>
        <context-group purpose="information">
          <context context-type="source"> -&gt; endpoint</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65768" resname="keyPairs.$description">
        <source>Danbooru 的登录凭据。[点击前往获取及设置教程](https://booru.koishi.chat/zh-CN/plugins/danbooru.html#configure-credentials)</source>
        <target state="needs-translation">Danbooru 的登录凭据。[点击前往获取及设置教程](https://booru.koishi.chat/zh-CN/plugins/danbooru.html#configure-credentials)</target>
        <context-group purpose="information">
          <context context-type="source">keyPairs -&gt; $description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65770" resname="keyPairs.$inner.login">
        <source>用户名。</source>
        <target state="needs-translation">用户名。</target>
        <context-group purpose="information">
          <context context-type="source">keyPairs -&gt; $inner -&gt; login</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65772" resname="keyPairs.$inner.apiKey">
        <source>API 密钥。</source>
        <target state="needs-translation">API 密钥。</target>
        <context-group purpose="information">
          <context context-type="source">keyPairs -&gt; $inner -&gt; apiKey</context>
        </context-group>
      </trans-unit>
    </body>
  </file>
  <file id="2036" original="/[koishijs.koishi-plugin-booru] main/packages/e621/src/locales/zh-CN.schema.yml" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="65774" resname="$description">
        <source>搜索设置</source>
        <target state="translated">搜尋設定</target>
        <context-group purpose="information">
          <context context-type="source"> -&gt; $description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65776" resname="endpoint">
        <source>e621/e926 的 URL。</source>
        <target state="needs-translation">e621/e926 的 URL。</target>
        <context-group purpose="information">
          <context context-type="source"> -&gt; endpoint</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65778" resname="keyPairs.$description">
        <source>e621/e926 的登录凭据。[点击前往获取及设置教程](https://booru.koishi.chat/zh-CN/plugins/e621.html#configure-credentials)</source>
        <target state="needs-translation">e621/e926 的登录凭据。[点击前往获取及设置教程](https://booru.koishi.chat/zh-CN/plugins/e621.html#configure-credentials)</target>
        <context-group purpose="information">
          <context context-type="source">keyPairs -&gt; $description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65780" resname="keyPairs.$inner.login">
        <source>e621/e926 的用户名。</source>
        <target state="needs-translation">e621/e926 的用户名。</target>
        <context-group purpose="information">
          <context context-type="source">keyPairs -&gt; $inner -&gt; login</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65782" resname="keyPairs.$inner.apiKey">
        <source>e621/e926 的 API Key。</source>
        <target state="needs-translation">e621/e926 的 API Key。</target>
        <context-group purpose="information">
          <context context-type="source">keyPairs -&gt; $inner -&gt; apiKey</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65784" resname="userAgent">
        <source>设置请求的 User Agent。</source>
        <target state="needs-translation">设置请求的 User Agent。</target>
        <context-group purpose="information">
          <context context-type="source"> -&gt; userAgent</context>
        </context-group>
      </trans-unit>
    </body>
  </file>
  <file id="2038" original="/[koishijs.koishi-plugin-booru] main/packages/gelbooru/src/locales/zh-CN.schema.yml" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="65786" resname="$description">
        <source>搜索设置</source>
        <target state="translated">搜尋設定</target>
        <context-group purpose="information">
          <context context-type="source"> -&gt; $description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65788" resname="endpoint">
        <source>Gelbooru 的 URL。</source>
        <target state="needs-translation">Gelbooru 的 URL。</target>
        <context-group purpose="information">
          <context context-type="source"> -&gt; endpoint</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65790" resname="keyPairs.$description">
        <source>Gelbooru 的登录凭据。[点击前往获取及设置教程](https://booru.koishi.chat/zh-CN/plugins/gelbooru.html#configure-credentials)</source>
        <target state="needs-translation">Gelbooru 的登录凭据。[点击前往获取及设置教程](https://booru.koishi.chat/zh-CN/plugins/gelbooru.html#configure-credentials)</target>
        <context-group purpose="information">
          <context context-type="source">keyPairs -&gt; $description</context>
        </context-group>
      </trans-unit>
    </body>
  </file>
  <file id="2040" original="/[koishijs.koishi-plugin-booru] main/packages/konachan/src/locales/zh-CN.schema.yml" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="65792" resname="$description">
        <source>搜索设置</source>
        <target state="translated">搜尋設定</target>
        <context-group purpose="information">
          <context context-type="source"> -&gt; $description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65794" resname="endpoint.$description">
        <source>Konachan 的 URL。</source>
        <target state="needs-translation">Konachan 的 URL。</target>
        <context-group purpose="information">
          <context context-type="source">endpoint -&gt; $description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65796" resname="endpoint.$inner.0">
        <source>Konachan.com (NSFW)</source>
        <target state="needs-translation">Konachan.com (NSFW)</target>
        <context-group purpose="information">
          <context context-type="source">endpoint -&gt; $inner -&gt; 0</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65798" resname="endpoint.$inner.1">
        <source>Konachan.net (SFW)</source>
        <target state="needs-translation">Konachan.net (SFW)</target>
        <context-group purpose="information">
          <context context-type="source">endpoint -&gt; $inner -&gt; 1</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65800" resname="keyPairs.$description">
        <source>Konachan 的登录凭据。</source>
        <target state="needs-translation">Konachan 的登录凭据。</target>
        <context-group purpose="information">
          <context context-type="source">keyPairs -&gt; $description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65802" resname="keyPairs.$inner.login">
        <source>用户名</source>
        <target state="needs-translation">用户名</target>
        <context-group purpose="information">
          <context context-type="source">keyPairs -&gt; $inner -&gt; login</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65804" resname="keyPairs.$inner.password">
        <source>密码</source>
        <target state="needs-translation">密码</target>
        <context-group purpose="information">
          <context context-type="source">keyPairs -&gt; $inner -&gt; password</context>
        </context-group>
      </trans-unit>
    </body>
  </file>
  <file id="2042" original="/[koishijs.koishi-plugin-booru] main/packages/local/src/locales/zh-CN.schema.yml" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="65806" resname="$inner.0.$description">
        <source>图源设置</source>
        <target state="needs-translation">图源设置</target>
        <context-group purpose="information">
          <context context-type="source">$inner -&gt; 0 -&gt; $description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65808" resname="$inner.0.$inner.endpoint">
        <source>图源文件夹，支持多个不同的文件夹</source>
        <target state="needs-translation">图源文件夹，支持多个不同的文件夹</target>
        <context-group purpose="information">
          <context context-type="source">$inner -&gt; 0 -&gt; $inner -&gt; endpoint</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65810" resname="$inner.0.$inner.storage">
        <source>图源数据保存方式</source>
        <target state="needs-translation">图源数据保存方式</target>
        <context-group purpose="information">
          <context context-type="source">$inner -&gt; 0 -&gt; $inner -&gt; storage</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65812" resname="$inner.0.$inner.reload">
        <source>每次启动时重新构建图源数据</source>
        <target state="needs-translation">每次启动时重新构建图源数据</target>
        <context-group purpose="information">
          <context context-type="source">$inner -&gt; 0 -&gt; $inner -&gt; reload</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65814" resname="$inner.0.$inner.languages">
        <source>支持的语言</source>
        <target state="needs-translation">支持的语言</target>
        <context-group purpose="information">
          <context context-type="source">$inner -&gt; 0 -&gt; $inner -&gt; languages</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65816" resname="$inner.1.$description">
        <source>文件设置</source>
        <target state="needs-translation">文件设置</target>
        <context-group purpose="information">
          <context context-type="source">$inner -&gt; 1 -&gt; $description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65818" resname="$inner.1.$inner.scraper">
        <source>文件名元信息生成格式，详见&lt;a herf=&quot;https://booru.koishi.chat/plugins/local.html&quot;&gt;文档&lt;/a&gt;</source>
        <target state="needs-translation">文件名元信息生成格式，详见&lt;a herf=&quot;https://booru.koishi.chat/plugins/local.html&quot;&gt;文档&lt;/a&gt;</target>
        <context-group purpose="information">
          <context context-type="source">$inner -&gt; 1 -&gt; $inner -&gt; scraper</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65820" resname="$inner.1.$inner.extension">
        <source>支持的扩展名</source>
        <target state="needs-translation">支持的扩展名</target>
        <context-group purpose="information">
          <context context-type="source">$inner -&gt; 1 -&gt; $inner -&gt; extension</context>
        </context-group>
      </trans-unit>
    </body>
  </file>
  <file id="2044" original="/[koishijs.koishi-plugin-booru] main/packages/lolibooru/src/locales/zh-CN.schema.yml" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="65822" resname="$description">
        <source>搜索设置</source>
        <target state="translated">搜尋設定</target>
        <context-group purpose="information">
          <context context-type="source"> -&gt; $description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65824" resname="endpoint">
        <source>Lolibooru 的 URL。</source>
        <target state="needs-translation">Lolibooru 的 URL。</target>
        <context-group purpose="information">
          <context context-type="source"> -&gt; endpoint</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65826" resname="keyPairs.$description">
        <source>Lolibooru 的登录凭据。</source>
        <target state="needs-translation">Lolibooru 的登录凭据。</target>
        <context-group purpose="information">
          <context context-type="source">keyPairs -&gt; $description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65828" resname="keyPairs.$inner.login">
        <source>用户名</source>
        <target state="needs-translation">用户名</target>
        <context-group purpose="information">
          <context context-type="source">keyPairs -&gt; $inner -&gt; login</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65830" resname="keyPairs.$inner.password">
        <source>密码</source>
        <target state="needs-translation">密码</target>
        <context-group purpose="information">
          <context context-type="source">keyPairs -&gt; $inner -&gt; password</context>
        </context-group>
      </trans-unit>
    </body>
  </file>
  <file id="2046" original="/[koishijs.koishi-plugin-booru] main/packages/lolicon/src/locales/zh-CN.schema.yml" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="65832" resname="$description">
        <source>搜索设置</source>
        <target state="translated">搜尋設定</target>
        <context-group purpose="information">
          <context context-type="source"> -&gt; $description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65834" resname="endpoint">
        <source>Lolicon API 的 URL。</source>
        <target state="needs-translation">Lolicon API 的 URL。</target>
        <context-group purpose="information">
          <context context-type="source"> -&gt; endpoint</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65836" resname="r18.$description">
        <source>是否检索 R18 图片。</source>
        <target state="needs-translation">是否检索 R18 图片。</target>
        <context-group purpose="information">
          <context context-type="source">r18 -&gt; $description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65838" resname="r18.$inner.0">
        <source>非 R18</source>
        <target state="needs-translation">非 R18</target>
        <context-group purpose="information">
          <context context-type="source">r18 -&gt; $inner -&gt; 0</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65840" resname="r18.$inner.1">
        <source>仅 R18</source>
        <target state="needs-translation">仅 R18</target>
        <context-group purpose="information">
          <context context-type="source">r18 -&gt; $inner -&gt; 1</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65842" resname="r18.$inner.2">
        <source>混合</source>
        <target state="needs-translation">混合</target>
        <context-group purpose="information">
          <context context-type="source">r18 -&gt; $inner -&gt; 2</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65844" resname="proxy.$description">
        <source>Pixiv 反代服务。</source>
        <target state="needs-translation">Pixiv 反代服务。</target>
        <context-group purpose="information">
          <context context-type="source">proxy -&gt; $description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65846" resname="proxy.$inner.0">
        <source>i.pixiv.re</source>
        <target state="needs-translation">i.pixiv.re</target>
        <context-group purpose="information">
          <context context-type="source">proxy -&gt; $inner -&gt; 0</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65848" resname="proxy.$inner.1">
        <source>i.pixiv.cat</source>
        <target state="needs-translation">i.pixiv.cat</target>
        <context-group purpose="information">
          <context context-type="source">proxy -&gt; $inner -&gt; 1</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65850" resname="proxy.$inner.2">
        <source>i.pixiv.nl</source>
        <target state="needs-translation">i.pixiv.nl</target>
        <context-group purpose="information">
          <context context-type="source">proxy -&gt; $inner -&gt; 2</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65852" resname="proxy.$inner.3.$description">
        <source>自定义</source>
        <target state="needs-translation">自定义</target>
        <context-group purpose="information">
          <context context-type="source">proxy -&gt; $inner -&gt; 3 -&gt; $description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65854" resname="proxy.$inner.3.$inner.endpoint">
        <source>反代服务的地址。</source>
        <target state="needs-translation">反代服务的地址。</target>
        <context-group purpose="information">
          <context context-type="source">proxy -&gt; $inner -&gt; 3 -&gt; $inner -&gt; endpoint</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65856" resname="excludeAI.$description">
        <source>是否排除 AI 作品。</source>
        <target state="needs-translation">是否排除 AI 作品。</target>
        <context-group purpose="information">
          <context context-type="source">excludeAI -&gt; $description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65858" resname="excludeAI.$inner.0">
        <source>排除AI作品</source>
        <target state="needs-translation">排除AI作品</target>
        <context-group purpose="information">
          <context context-type="source">excludeAI -&gt; $inner -&gt; 0</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65860" resname="excludeAI.$inner.1">
        <source>不排除AI作品</source>
        <target state="needs-translation">不排除AI作品</target>
        <context-group purpose="information">
          <context context-type="source">excludeAI -&gt; $inner -&gt; 1</context>
        </context-group>
      </trans-unit>
    </body>
  </file>
  <file id="2048" original="/[koishijs.koishi-plugin-booru] main/packages/moehu/src/locales/zh-CN.schema.yml" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="65862" resname="$description">
        <source>搜索设置</source>
        <target state="translated">搜尋設定</target>
        <context-group purpose="information">
          <context context-type="source"> -&gt; $description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65864" resname="endpoint">
        <source>Moehu 的 URL。</source>
        <target state="needs-translation">Moehu 的 URL。</target>
        <context-group purpose="information">
          <context context-type="source"> -&gt; endpoint</context>
        </context-group>
      </trans-unit>
    </body>
  </file>
  <file id="2050" original="/[koishijs.koishi-plugin-booru] main/packages/pixiv/src/locales/zh-CN.schema.yml" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="65866" resname="$description">
        <source>搜索设置</source>
        <target state="translated">搜尋設定</target>
        <context-group purpose="information">
          <context context-type="source"> -&gt; $description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65868" resname="$inner.0.endpoint">
        <source>Pixiv 的 API Root</source>
        <target state="needs-translation">Pixiv 的 API Root</target>
        <context-group purpose="information">
          <context context-type="source">$inner -&gt; 0 -&gt; endpoint</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65870" resname="$inner.0.token">
        <source>Pixiv 的 Refresh Token</source>
        <target state="needs-translation">Pixiv 的 Refresh Token</target>
        <context-group purpose="information">
          <context context-type="source">$inner -&gt; 0 -&gt; token</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65872" resname="$inner.0.minBookmarks">
        <source>最少收藏数，仅在设置了 Token 并有 Pixiv Premium 的情况下可用</source>
        <target state="needs-translation">最少收藏数，仅在设置了 Token 并有 Pixiv Premium 的情况下可用</target>
        <context-group purpose="information">
          <context context-type="source">$inner -&gt; 0 -&gt; minBookmarks</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65874" resname="$inner.0.rank.$description">
        <source>年龄分级</source>
        <target state="needs-translation">年龄分级</target>
        <context-group purpose="information">
          <context context-type="source">$inner -&gt; 0 -&gt; rank -&gt; $description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65876" resname="$inner.0.rank.$inner.0">
        <source>全年龄</source>
        <target state="needs-translation">全年龄</target>
        <context-group purpose="information">
          <context context-type="source">$inner -&gt; 0 -&gt; rank -&gt; $inner -&gt; 0</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65878" resname="$inner.0.rank.$inner.1">
        <source>R18</source>
        <target state="needs-translation">R18</target>
        <context-group purpose="information">
          <context context-type="source">$inner -&gt; 0 -&gt; rank -&gt; $inner -&gt; 1</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65880" resname="$inner.0.rank.$inner.2">
        <source>R18G</source>
        <target state="needs-translation">R18G</target>
        <context-group purpose="information">
          <context context-type="source">$inner -&gt; 0 -&gt; rank -&gt; $inner -&gt; 2</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65882" resname="$inner.0.ai.$description">
        <source>是否允许搜索AI作品</source>
        <target state="needs-translation">是否允许搜索AI作品</target>
        <context-group purpose="information">
          <context context-type="source">$inner -&gt; 0 -&gt; ai -&gt; $description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65884" resname="$inner.0.ai.$inner.0">
        <source>不允许AI作品</source>
        <target state="needs-translation">不允许AI作品</target>
        <context-group purpose="information">
          <context context-type="source">$inner -&gt; 0 -&gt; ai -&gt; $inner -&gt; 0</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65886" resname="$inner.0.ai.$inner.1">
        <source>允许AI作品</source>
        <target state="needs-translation">允许AI作品</target>
        <context-group purpose="information">
          <context context-type="source">$inner -&gt; 0 -&gt; ai -&gt; $inner -&gt; 1</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65888" resname="$inner.1.bypassMethod.$description">
        <source>突破 Pixiv 站点图片防外部引用检测的方式。[参考](https://booru.koishi.chat/zh-CN/plugins/pixiv.html#bypass-pixiv-detection)</source>
        <target state="needs-translation">突破 Pixiv 站点图片防外部引用检测的方式。[参考](https://booru.koishi.chat/zh-CN/plugins/pixiv.html#bypass-pixiv-detection)</target>
        <context-group purpose="information">
          <context context-type="source">$inner -&gt; 1 -&gt; bypassMethod -&gt; $description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65890" resname="$inner.1.bypassMethod.$inner.0">
        <source>使用现有反代服务</source>
        <target state="needs-translation">使用现有反代服务</target>
        <context-group purpose="information">
          <context context-type="source">$inner -&gt; 1 -&gt; bypassMethod -&gt; $inner -&gt; 0</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65892" resname="$inner.1.bypassMethod.$inner.1">
        <source>使用插件本地反代</source>
        <target state="needs-translation">使用插件本地反代</target>
        <context-group purpose="information">
          <context context-type="source">$inner -&gt; 1 -&gt; bypassMethod -&gt; $inner -&gt; 1</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65894" resname="$inner.1.bypassMethod.$inner.2">
        <source>下载到 assets 缓存</source>
        <target state="needs-translation">下载到 assets 缓存</target>
        <context-group purpose="information">
          <context context-type="source">$inner -&gt; 1 -&gt; bypassMethod -&gt; $inner -&gt; 2</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65896" resname="$inner.1.proxy.$description">
        <source>Pixiv 反代服务。</source>
        <target state="needs-translation">Pixiv 反代服务。</target>
        <context-group purpose="information">
          <context context-type="source">$inner -&gt; 1 -&gt; proxy -&gt; $description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65898" resname="$inner.1.proxy.$inner.0">
        <source>i.pixiv.re</source>
        <target state="needs-translation">i.pixiv.re</target>
        <context-group purpose="information">
          <context context-type="source">$inner -&gt; 1 -&gt; proxy -&gt; $inner -&gt; 0</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65900" resname="$inner.1.proxy.$inner.1">
        <source>i.pixiv.cat</source>
        <target state="needs-translation">i.pixiv.cat</target>
        <context-group purpose="information">
          <context context-type="source">$inner -&gt; 1 -&gt; proxy -&gt; $inner -&gt; 1</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65902" resname="$inner.1.proxy.$inner.2">
        <source>i.pixiv.nl</source>
        <target state="needs-translation">i.pixiv.nl</target>
        <context-group purpose="information">
          <context context-type="source">$inner -&gt; 1 -&gt; proxy -&gt; $inner -&gt; 2</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65904" resname="$inner.1.proxy.$inner.3.$description">
        <source>自定义</source>
        <target state="needs-translation">自定义</target>
        <context-group purpose="information">
          <context context-type="source">$inner -&gt; 1 -&gt; proxy -&gt; $inner -&gt; 3 -&gt; $description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65906" resname="$inner.1.proxy.$inner.3.endpoint">
        <source>反代服务的地址。</source>
        <target state="needs-translation">反代服务的地址。</target>
        <context-group purpose="information">
          <context context-type="source">$inner -&gt; 1 -&gt; proxy -&gt; $inner -&gt; 3 -&gt; endpoint</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65908" resname="$inner.1.route">
        <source>反代服务的路径（需在 server 插件配置中填写 `selfUrl`）。</source>
        <target state="needs-translation">反代服务的路径（需在 server 插件配置中填写 `selfUrl`）。</target>
        <context-group purpose="information">
          <context context-type="source">$inner -&gt; 1 -&gt; route</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65910" resname="$inner.1.aesKey">
        <source>AES 加密密钥</source>
        <target state="needs-translation">AES 加密密钥</target>
        <context-group purpose="information">
          <context context-type="source">$inner -&gt; 1 -&gt; aesKey</context>
        </context-group>
      </trans-unit>
    </body>
  </file>
  <file id="2052" original="/[koishijs.koishi-plugin-booru] main/packages/safebooru/src/locales/zh-CN.schema.yml" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="65912" resname="$description">
        <source>搜索设置</source>
        <target state="translated">搜尋設定</target>
        <context-group purpose="information">
          <context context-type="source"> -&gt; $description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65914" resname="endpoint">
        <source>Safebooru 的 URL。</source>
        <target state="needs-translation">Safebooru 的 URL。</target>
        <context-group purpose="information">
          <context context-type="source"> -&gt; endpoint</context>
        </context-group>
      </trans-unit>
    </body>
  </file>
  <file id="2054" original="/[koishijs.koishi-plugin-booru] main/packages/sankaku/src/locales/zh-CN.schema.yml" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="65916" resname="$description">
        <source>搜索设置</source>
        <target state="translated">搜尋設定</target>
        <context-group purpose="information">
          <context context-type="source"> -&gt; $description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65918" resname="keyPairs.$description">
        <source>SankakuComplex 的登录凭证</source>
        <target state="needs-translation">SankakuComplex 的登录凭证</target>
        <context-group purpose="information">
          <context context-type="source">keyPairs -&gt; $description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65920" resname="keyPairs.$inner.login">
        <source>SankakuComplex 用户名</source>
        <target state="needs-translation">SankakuComplex 用户名</target>
        <context-group purpose="information">
          <context context-type="source">keyPairs -&gt; $inner -&gt; login</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65922" resname="keyPairs.$inner.password">
        <source>SankakuComplex 密码</source>
        <target state="needs-translation">SankakuComplex 密码</target>
        <context-group purpose="information">
          <context context-type="source">keyPairs -&gt; $inner -&gt; password</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65924" resname="keyPairs.$inner.tokenType">
        <source>SankakuComplex 访问令牌类型</source>
        <target state="needs-translation">SankakuComplex 访问令牌类型</target>
        <context-group purpose="information">
          <context context-type="source">keyPairs -&gt; $inner -&gt; tokenType</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65926" resname="keyPairs.$inner.accessToken">
        <source>SankakuComplex 访问令牌</source>
        <target state="needs-translation">SankakuComplex 访问令牌</target>
        <context-group purpose="information">
          <context context-type="source">keyPairs -&gt; $inner -&gt; accessToken</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65928" resname="userAgent">
        <source>设置请求的 User Agent。</source>
        <target state="needs-translation">设置请求的 User Agent。</target>
        <context-group purpose="information">
          <context context-type="source"> -&gt; userAgent</context>
        </context-group>
      </trans-unit>
    </body>
  </file>
  <file id="2056" original="/[koishijs.koishi-plugin-booru] main/packages/yande/src/locales/zh-CN.schema.yml" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="65930" resname="$description">
        <source>搜索设置</source>
        <target state="translated">搜尋設定</target>
        <context-group purpose="information">
          <context context-type="source"> -&gt; $description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65932" resname="endpoint">
        <source>Yande.re 的 URL。</source>
        <target state="needs-translation">Yande.re 的 URL。</target>
        <context-group purpose="information">
          <context context-type="source"> -&gt; endpoint</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65934" resname="keyPairs.$description">
        <source>Yande.re 的登录凭据。</source>
        <target state="needs-translation">Yande.re 的登录凭据。</target>
        <context-group purpose="information">
          <context context-type="source">keyPairs -&gt; $description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65936" resname="keyPairs.$inner.login">
        <source>Yande.re 的用户名。</source>
        <target state="needs-translation">Yande.re 的用户名。</target>
        <context-group purpose="information">
          <context context-type="source">keyPairs -&gt; $inner -&gt; login</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65938" resname="keyPairs.$inner.password">
        <source>Yande.re 的密码。</source>
        <target state="needs-translation">Yande.re 的密码。</target>
        <context-group purpose="information">
          <context context-type="source">keyPairs -&gt; $inner -&gt; password</context>
        </context-group>
      </trans-unit>
    </body>
  </file>
  <file id="2058" original="/[koishijs.koishi-plugin-booru] main/packages/core/src/locales/zh-CN.source.schema.yml" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="65940" resname="$inner.0.$description">
        <source>全局设置</source>
        <target state="needs-translation">全局设置</target>
        <context-group purpose="information">
          <context context-type="source">$inner -&gt; 0 -&gt; $description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65942" resname="$inner.0.label">
        <source>图源标签，可用于在指令中手动指定图源。</source>
        <target state="needs-translation">图源标签，可用于在指令中手动指定图源。</target>
        <context-group purpose="information">
          <context context-type="source">$inner -&gt; 0 -&gt; label</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65944" resname="$inner.0.weight">
        <source>图源权重。在多个符合标签的图源中，将按照各自的权重随机选择。</source>
        <target state="needs-translation">图源权重。在多个符合标签的图源中，将按照各自的权重随机选择。</target>
        <context-group purpose="information">
          <context context-type="source">$inner -&gt; 0 -&gt; weight</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65946" resname="$inner.1.$description">
        <source>请求设置</source>
        <target state="needs-translation">请求设置</target>
        <context-group purpose="information">
          <context context-type="source">$inner -&gt; 1 -&gt; $description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="65948" resname="$inner.1.proxyAgent">
        <source>请求图片时使用代理服务器。</source>
        <target state="needs-translation">请求图片时使用代理服务器。</target>
        <context-group purpose="information">
          <context context-type="source">$inner -&gt; 1 -&gt; proxyAgent</context>
        </context-group>
      </trans-unit>
    </body>
  </file>
  <file id="2060" original="/[koishijs.koishi-plugin-booru] main/docs/zh-CN/config.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="65950">
        <source>配置项</source>
        <target state="needs-translation">配置项</target>
      </trans-unit>
      <trans-unit id="65952">
        <source>搜索设置</source>
        <target state="translated">搜尋設定</target>
      </trans-unit>
      <trans-unit id="65954">
        <source>detectLanguage</source>
        <target state="needs-translation">detectLanguage</target>
      </trans-unit>
      <trans-unit id="65956">
        <source>类型: `boolean`</source>
        <target state="needs-translation">类型: `boolean`</target>
      </trans-unit>
      <trans-unit id="65958">
        <source>默认值: `false`</source>
        <target state="needs-translation">默认值: `false`</target>
      </trans-unit>
      <trans-unit id="65960">
        <source>是否自动检测语言。</source>
        <target state="needs-translation">是否自动检测语言。</target>
      </trans-unit>
      <trans-unit id="65962">
        <source>当启用此选项时，插件会自动检测输入的 tag 的语言，并选择提供了相应语言支持的图源进行检索。</source>
        <target state="needs-translation">当启用此选项时，插件会自动检测输入的 tag 的语言，并选择提供了相应语言支持的图源进行检索。</target>
      </trans-unit>
      <trans-unit id="65964">
        <source>confidence</source>
        <target state="needs-translation">confidence</target>
      </trans-unit>
      <trans-unit id="65966">
        <source>类型: `number`</source>
        <target state="needs-translation">类型: `number`</target>
      </trans-unit>
      <trans-unit id="65968">
        <source>默认值: `0.5`</source>
        <target state="needs-translation">默认值: `0.5`</target>
      </trans-unit>
      <trans-unit id="65970">
        <source>当 `detectLanguage` 启用时，此选项用于设置语言检测的置信度阈值。</source>
        <target state="needs-translation">当 `detectLanguage` 启用时，此选项用于设置语言检测的置信度阈值。</target>
      </trans-unit>
      <trans-unit id="65972">
        <source>maxCount</source>
        <target state="needs-translation">maxCount</target>
      </trans-unit>
      <trans-unit id="65974">
        <source>类型: `number`</source>
        <target state="needs-translation">类型: `number`</target>
      </trans-unit>
      <trans-unit id="65976">
        <source>默认值: `10`</source>
        <target state="needs-translation">默认值: `10`</target>
      </trans-unit>
      <trans-unit id="65978">
        <source>设置全局检索允许的最大图片数量。</source>
        <target state="needs-translation">设置全局检索允许的最大图片数量。</target>
      </trans-unit>
      <trans-unit id="65980">
        <source>输出设置</source>
        <target state="needs-translation">输出设置</target>
      </trans-unit>
      <trans-unit id="65982">
        <source>output</source>
        <target state="needs-translation">output</target>
      </trans-unit>
      <trans-unit id="65984">
        <source>类型: `enum`</source>
        <target state="needs-translation">类型: `enum`</target>
      </trans-unit>
      <trans-unit id="65986">
        <source>可选值：`仅发送图片`、`发送图片和相关信息`、`发送图片、相关信息和链接`、`发送全部信息`</source>
        <target state="needs-translation">可选值：`仅发送图片`、`发送图片和相关信息`、`发送图片、相关信息和链接`、`发送全部信息`</target>
      </trans-unit>
      <trans-unit id="65988">
        <source>默认值: `发送图片和相关信息`</source>
        <target state="needs-translation">默认值: `发送图片和相关信息`</target>
      </trans-unit>
      <trans-unit id="65990">
        <source>设置输出的信息。</source>
        <target state="needs-translation">设置输出的信息。</target>
      </trans-unit>
      <trans-unit id="65992">
        <source>preferSize</source>
        <target state="needs-translation">preferSize</target>
      </trans-unit>
      <trans-unit id="65994">
        <source>类型: `enum`</source>
        <target state="needs-translation">类型: `enum`</target>
      </trans-unit>
      <trans-unit id="65996">
        <source>可选值：`原始尺寸`、`较大尺寸 (通常为约 1200px)`、`中等尺寸 (通常为约 600px)`、`较小尺寸 (通常为约 300px)`、`缩略图`</source>
        <target state="needs-translation">可选值：`原始尺寸`、`较大尺寸 (通常为约 1200px)`、`中等尺寸 (通常为约 600px)`、`较小尺寸 (通常为约 300px)`、`缩略图`</target>
      </trans-unit>
      <trans-unit id="65998">
        <source>默认值: `较大尺寸`</source>
        <target state="needs-translation">默认值: `较大尺寸`</target>
      </trans-unit>
      <trans-unit id="66000">
        <source>设置输出的图片尺寸。</source>
        <target state="needs-translation">设置输出的图片尺寸。</target>
      </trans-unit>
      <trans-unit id="66002">
        <source>autoResize</source>
        <target state="needs-translation">autoResize</target>
      </trans-unit>
      <trans-unit id="66004">
        <source>类型: `boolean`</source>
        <target state="needs-translation">类型: `boolean`</target>
      </trans-unit>
      <trans-unit id="66006">
        <source>默认值: `false`</source>
        <target state="needs-translation">默认值: `false`</target>
      </trans-unit>
      <trans-unit id="66008">
        <source>根据 preferSize 自动缩小过大的图片。</source>
        <target state="needs-translation">根据 preferSize 自动缩小过大的图片。</target>
      </trans-unit>
      <trans-unit id="66010">
        <source>需要安装提供 canvas 服务的插件</source>
        <target state="needs-translation">需要安装提供 canvas 服务的插件</target>
      </trans-unit>
      <trans-unit id="66012">
        <source>asset</source>
        <target state="needs-translation">asset</target>
      </trans-unit>
      <trans-unit id="66014">
        <source>类型: `boolean`</source>
        <target state="needs-translation">类型: `boolean`</target>
      </trans-unit>
      <trans-unit id="66016">
        <source>默认值: `false`</source>
        <target state="needs-translation">默认值: `false`</target>
      </trans-unit>
      <trans-unit id="66018">
        <source>优先使用 [assets服务](https://assets.koishi.chat/) 转存图片。</source>
        <target state="needs-translation">优先使用 [assets服务](https://assets.koishi.chat/) 转存图片。</target>
      </trans-unit>
      <trans-unit id="66020">
        <source>base64</source>
        <target state="needs-translation">base64</target>
      </trans-unit>
      <trans-unit id="66022">
        <source>类型: `boolean`</source>
        <target state="needs-translation">类型: `boolean`</target>
      </trans-unit>
      <trans-unit id="66024">
        <source>默认值: `false`</source>
        <target state="needs-translation">默认值: `false`</target>
      </trans-unit>
      <trans-unit id="66026">
        <source>使用 base64 格式发送图片。</source>
        <target state="needs-translation">使用 base64 格式发送图片。</target>
      </trans-unit>
      <trans-unit id="66028">
        <source>spoiler</source>
        <target state="needs-translation">spoiler</target>
      </trans-unit>
      <trans-unit id="66030">
        <source>类型: `enum`</source>
        <target state="needs-translation">类型: `enum`</target>
      </trans-unit>
      <trans-unit id="66032">
        <source>可选值：`禁用`、`所有图片`、`仅 NSFW 图片`</source>
        <target state="needs-translation">可选值：`禁用`、`所有图片`、`仅 NSFW 图片`</target>
      </trans-unit>
      <trans-unit id="66034">
        <source>发送为隐藏图片，单击后显示（在 QQ 平台中以「合并转发」发送）。</source>
        <target state="needs-translation">发送为隐藏图片，单击后显示（在 QQ 平台中以「合并转发」发送）。</target>
      </trans-unit>
      <trans-unit id="66036">
        <source>showTips</source>
        <target state="needs-translation">showTips</target>
      </trans-unit>
      <trans-unit id="66038">
        <source>类型: `boolean`</source>
        <target state="needs-translation">类型: `boolean`</target>
      </trans-unit>
      <trans-unit id="66040">
        <source>默认值: `true`</source>
        <target state="needs-translation">默认值: `true`</target>
      </trans-unit>
      <trans-unit id="66042">
        <source>是否输出使用提示信息。</source>
        <target state="needs-translation">是否输出使用提示信息。</target>
      </trans-unit>
      <trans-unit id="66044">
        <source>图源全局设置</source>
        <target state="needs-translation">图源全局设置</target>
      </trans-unit>
      <trans-unit id="66046">
        <source>此项设置存在于图源插件中而非全局设置里，因此可以针对不同的图源设置不同的配置。</source>
        <target state="needs-translation">此项设置存在于图源插件中而非全局设置里，因此可以针对不同的图源设置不同的配置。</target>
      </trans-unit>
      <trans-unit id="66048">
        <source>label</source>
        <target state="needs-translation">label</target>
      </trans-unit>
      <trans-unit id="66050">
        <source>类型: `string`</source>
        <target state="needs-translation">类型: `string`</target>
      </trans-unit>
      <trans-unit id="66052">
        <source>默认值: `图源名称`</source>
        <target state="needs-translation">默认值: `图源名称`</target>
      </trans-unit>
      <trans-unit id="66054">
        <source>图源标签，可用于在指令中手动指定图源。</source>
        <target state="needs-translation">图源标签，可用于在指令中手动指定图源。</target>
      </trans-unit>
      <trans-unit id="66056">
        <source>weight</source>
        <target state="needs-translation">weight</target>
      </trans-unit>
      <trans-unit id="66058">
        <source>类型: `number`</source>
        <target state="needs-translation">类型: `number`</target>
      </trans-unit>
      <trans-unit id="66060">
        <source>默认值: `1`</source>
        <target state="needs-translation">默认值: `1`</target>
      </trans-unit>
      <trans-unit id="66062">
        <source>图源权重。</source>
        <target state="needs-translation">图源权重。</target>
      </trans-unit>
      <trans-unit id="66064">
        <source>在多个符合标签的图源中，将按照各自的权重随机选择。</source>
        <target state="needs-translation">在多个符合标签的图源中，将按照各自的权重随机选择。</target>
      </trans-unit>
    </body>
  </file>
  <file id="2062" original="/[koishijs.koishi-plugin-booru] main/docs/zh-CN/develop/api.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="66066">
        <source>API</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">API</target>
      </trans-unit>
      <trans-unit id="66068">
        <source>服务方法</source>
        <target state="needs-translation">服务方法</target>
      </trans-unit>
      <trans-unit id="66070">
        <source>`ctx.booru.register()`</source>
        <target state="needs-translation">`ctx.booru.register()`</target>
      </trans-unit>
      <trans-unit id="66072">
        <source>ctx.booru.register(source: ImageSource): () =&gt; void</source>
        <target state="needs-translation">ctx.booru.register(source: ImageSource): () =&gt; void</target>
      </trans-unit>
      <trans-unit id="66074">
        <source>注册一个图源，返回一个 dispose 函数，调用此函数可以注销此图源。</source>
        <target state="needs-translation">注册一个图源，返回一个 dispose 函数，调用此函数可以注销此图源。</target>
      </trans-unit>
      <trans-unit id="66076">
        <source>`ctx.booru.hasSource()`</source>
        <target state="needs-translation">`ctx.booru.hasSource()`</target>
      </trans-unit>
      <trans-unit id="66078">
        <source>ctx.booru.hasSource(name?: string): boolean</source>
        <target state="needs-translation">ctx.booru.hasSource(name?: string): boolean</target>
      </trans-unit>
      <trans-unit id="66080">
        <source>当不传入参数时，判断是否存在激活的图源；当传入参数时，判断是否存在指定名称的图源。</source>
        <target state="needs-translation">当不传入参数时，判断是否存在激活的图源；当传入参数时，判断是否存在指定名称的图源。</target>
      </trans-unit>
      <trans-unit id="66082">
        <source>`ctx.booru.get()`</source>
        <target state="needs-translation">`ctx.booru.get()`</target>
      </trans-unit>
      <trans-unit id="66084">
        <source>ctx.booru.get(query: ImageService.Query): Promise&lt;ImageSource.Result[]&gt;</source>
        <target state="needs-translation">ctx.booru.get(query: ImageService.Query): Promise&lt;ImageSource.Result[]&gt;</target>
      </trans-unit>
      <trans-unit id="66086">
        <source>获取符合条件的图片，返回一个 Promise，resolve 时返回一个图片数组。</source>
        <target state="needs-translation">获取符合条件的图片，返回一个 Promise，resolve 时返回一个图片数组。</target>
      </trans-unit>
      <trans-unit id="66088">
        <source>当 `query.tags` 为空时，应当返回随机的图片。</source>
        <target state="needs-translation">当 `query.tags` 为空时，应当返回随机的图片。</target>
      </trans-unit>
      <trans-unit id="66090">
        <source>当获取不到图片时，应当返回 `undefined`。</source>
        <target state="needs-translation">当获取不到图片时，应当返回 `undefined`。</target>
      </trans-unit>
      <trans-unit id="66092">
        <source>类型定义</source>
        <target state="needs-translation">类型定义</target>
      </trans-unit>
      <trans-unit id="66094">
        <source>`ImageSource`</source>
        <target state="needs-translation">`ImageSource`</target>
      </trans-unit>
      <trans-unit id="66096">
        <source>export abstract class ImageSource&lt;Config extends ImageSource.Config = ImageSource.Config&gt; {
  languages: string[] = ['en'] // 图源支持的语言

  constructor(public ctx: Context, public config: Config) {
    this.ctx.booru.register(this)
  }

  // 对标签进行分词，返回一个标签数组
  tokenize(query: string): string[]

  // 获取图片
  abstract get(query: ImageSource.Query): Promise&lt;ImageSource.Result[]&gt;
}</source>
        <target state="needs-translation">export abstract class ImageSource&lt;Config extends ImageSource.Config = ImageSource.Config&gt; {
  languages: string[] = ['en'] // 图源支持的语言

  constructor(public ctx: Context, public config: Config) {
    this.ctx.booru.register(this)
  }

  // 对标签进行分词，返回一个标签数组
  tokenize(query: string): string[]

  // 获取图片
  abstract get(query: ImageSource.Query): Promise&lt;ImageSource.Result[]&gt;
}</target>
      </trans-unit>
      <trans-unit id="66098">
        <source>`ImageSource.Query`</source>
        <target state="needs-translation">`ImageSource.Query`</target>
      </trans-unit>
      <trans-unit id="66100">
        <source>export interface Query {
  tags: string[]
  /** raw query */
  raw: string
  count: number
}</source>
        <target state="needs-translation">export interface Query {
  tags: string[]
  /** raw query */
  raw: string
  count: number
}</target>
      </trans-unit>
      <trans-unit id="66102">
        <source>`ImageSource.Result`</source>
        <target state="needs-translation">`ImageSource.Result`</target>
      </trans-unit>
      <trans-unit id="66104">
        <source>export type NsfwType = 'furry' | 'guro' | 'shota' | 'bl'

export enum PreferSize {
  Original = 'original',
  Large = 'large',
  Medium = 'medium',
  Small = 'small',
  Thumbnail = 'thumbnail',
}

export interface Result {
  urls: Partial&lt;Record&lt;Exclude&lt;PreferSize, 'original'&gt;, string&gt;&gt; &amp; { original: string }
  pageUrl?: string
  author?: string
  authorUrl?: string
  title?: string
  desc?: string
  tags?: string[]
  nsfw?: boolean | NsfwType
}</source>
        <target state="needs-translation">export type NsfwType = 'furry' | 'guro' | 'shota' | 'bl'

export enum PreferSize {
  Original = 'original',
  Large = 'large',
  Medium = 'medium',
  Small = 'small',
  Thumbnail = 'thumbnail',
}

export interface Result {
  urls: Partial&lt;Record&lt;Exclude&lt;PreferSize, 'original'&gt;, string&gt;&gt; &amp; { original: string }
  pageUrl?: string
  author?: string
  authorUrl?: string
  title?: string
  desc?: string
  tags?: string[]
  nsfw?: boolean | NsfwType
}</target>
      </trans-unit>
    </body>
  </file>
  <file id="2064" original="/[koishijs.koishi-plugin-booru] main/docs/zh-CN/develop/service.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="66106">
        <source>服务</source>
        <target state="needs-translation">服务</target>
      </trans-unit>
      <trans-unit id="66108">
        <source>`booru` 插件会注册名为 `booru` 的服务，可以被其他插件调用。</source>
        <target state="needs-translation">`booru` 插件会注册名为 `booru` 的服务，可以被其他插件调用。</target>
      </trans-unit>
      <trans-unit id="66110">
        <source>检测图源</source>
        <target state="needs-translation">检测图源</target>
      </trans-unit>
      <trans-unit id="66112">
        <source>`booru` 服务提供了 `hasSource()` 方法，可以用于判断是否存在任意图源，或是否存在指定的图源。</source>
        <target state="needs-translation">`booru` 服务提供了 `hasSource()` 方法，可以用于判断是否存在任意图源，或是否存在指定的图源。</target>
      </trans-unit>
      <trans-unit id="66114">
        <source>import { Context } from 'koishi'

export function apply(ctx: Context) {
  ctx.booru.hasSource() // 是否存在任意图源
  ctx.boooru.hasSource('pixiv') // 是否存在 pixiv 图源
}</source>
        <target state="needs-translation">import { Context } from 'koishi'

export function apply(ctx: Context) {
  ctx.booru.hasSource() // 是否存在任意图源
  ctx.boooru.hasSource('pixiv') // 是否存在 pixiv 图源
}</target>
      </trans-unit>
      <trans-unit id="66116">
        <source>获取图片</source>
        <target state="needs-translation">获取图片</target>
      </trans-unit>
      <trans-unit id="66118">
        <source>`booru` 服务提供了 `get()` 方法，可以用于获取图片。</source>
        <target state="needs-translation">`booru` 服务提供了 `get()` 方法，可以用于获取图片。</target>
      </trans-unit>
      <trans-unit id="66120">
        <source>import { Context } from 'koishi'

export function apply(ctx: Context) {
  ctx.command('恋恋最可爱').action(async () =&gt; {
    const image = await ctx.booru.get({ tags: 'komeiji koishi', raw: 'komeiji koishi', count: 1 })
    return &lt;image url={image.url} /&gt;
  })
}</source>
        <target state="needs-translation">import { Context } from 'koishi'

export function apply(ctx: Context) {
  ctx.command('恋恋最可爱').action(async () =&gt; {
    const image = await ctx.booru.get({ tags: 'komeiji koishi', raw: 'komeiji koishi', count: 1 })
    return &lt;image url={image.url} /&gt;
  })
}</target>
      </trans-unit>
      <trans-unit id="66122">
        <source>恋恋最可爱</source>
        <target state="needs-translation">恋恋最可爱</target>
      </trans-unit>
      <trans-unit id="66124">
        <source>

I miss You &lt;br&gt;
作者: 京田スズカ &lt;br&gt;
页面地址: https://www.pixiv.net/artworks/101250949 &lt;br&gt;
作者主页: https://www.pixiv.net/users/3718340 &lt;br&gt;
图源: pixiv &lt;br&gt;
标签: 東方 東方Project 古明地こいし こいしちゃんうふふ こいしちゃんマジ天使 目がハート 東方Project1000users入り 白抜きまつ毛 &lt;br&gt;
</source>
        <target state="needs-translation">

I miss You &lt;br&gt;
作者: 京田スズカ &lt;br&gt;
页面地址: https://www.pixiv.net/artworks/101250949 &lt;br&gt;
作者主页: https://www.pixiv.net/users/3718340 &lt;br&gt;
图源: pixiv &lt;br&gt;
标签: 東方 東方Project 古明地こいし こいしちゃんうふふ こいしちゃんマジ天使 目がハート 東方Project1000users入り 白抜きまつ毛 &lt;br&gt;
</target>
      </trans-unit>
      <trans-unit id="66126">
        <source>注册图源</source>
        <target state="needs-translation">注册图源</target>
      </trans-unit>
      <trans-unit id="66128">
        <source>`booru` 服务提供了 `register()` 方法，可以用于注册图源。</source>
        <target state="needs-translation">`booru` 服务提供了 `register()` 方法，可以用于注册图源。</target>
      </trans-unit>
      <trans-unit id="66130">
        <source>如果你在开发图源插件，只需要继承 `ImageSource` 类，它会自动将自己注册到 `booru` 服务中。</source>
        <target state="needs-translation">如果你在开发图源插件，只需要继承 `ImageSource` 类，它会自动将自己注册到 `booru` 服务中。</target>
      </trans-unit>
      <trans-unit id="66132">
        <source>你也可以手动注册和注销图源，这在你需要动态注册图源时非常有用。</source>
        <target state="needs-translation">你也可以手动注册和注销图源，这在你需要动态注册图源时非常有用。</target>
      </trans-unit>
      <trans-unit id="66134">
        <source>import { Context } from 'koishi'

class PixivSource {
  name = 'pixiv'
  languages = ['zh-CN', 'ja']
  async get(query: ImageSource.Query): Promise&lt;ImageSource.Result[]&gt; {
    // ...
  }
}

export function apply(ctx: Context, config: Config) {
  // 注册图源
  const dispose = ctx.booru.register(new PixivSource(ctx, config))
  // 注销图源
  dispose()
}</source>
        <target state="needs-translation">import { Context } from 'koishi'

class PixivSource {
  name = 'pixiv'
  languages = ['zh-CN', 'ja']
  async get(query: ImageSource.Query): Promise&lt;ImageSource.Result[]&gt; {
    // ...
  }
}

export function apply(ctx: Context, config: Config) {
  // 注册图源
  const dispose = ctx.booru.register(new PixivSource(ctx, config))
  // 注销图源
  dispose()
}</target>
      </trans-unit>
    </body>
  </file>
  <file id="2066" original="/[koishijs.koishi-plugin-booru] main/docs/zh-CN/develop/source.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="66136">
        <source>图源</source>
        <target state="needs-translation">图源</target>
      </trans-unit>
      <trans-unit id="66138">
        <source>介绍</source>
        <target state="translated">介紹</target>
      </trans-unit>
      <trans-unit id="66140">
        <source>图源插件是用于获取图片的插件，它可以从网络、本地文件、剪贴板、数据库等地方获取图片。</source>
        <target state="needs-translation">图源插件是用于获取图片的插件，它可以从网络、本地文件、剪贴板、数据库等地方获取图片。</target>
      </trans-unit>
      <trans-unit id="66142">
        <source>由于图源插件本身也是一个标准的 [Koishi 插件](https://koishi.chat/zh-CN/guide/plugin/#%E6%8F%92%E4%BB%B6%E7%9A%84%E5%9F%BA%E6%9C%AC%E5%BD%A2%E5%BC%8F)，这意味着它必须导出一个函数，或者一个带有 `apply` 方法的对象。</source>
        <target state="needs-translation">由于图源插件本身也是一个标准的 [Koishi 插件](https://koishi.chat/zh-CN/guide/plugin/#%E6%8F%92%E4%BB%B6%E7%9A%84%E5%9F%BA%E6%9C%AC%E5%BD%A2%E5%BC%8F)，这意味着它必须导出一个函数，或者一个带有 `apply` 方法的对象。</target>
      </trans-unit>
      <trans-unit id="66144">
        <source>为了方便开发，我们提供了一个抽象类 `ImageSource`，当你继承它并实现相应方法后以默认方式导出，就可以作为 Koishi 插件被加载，这有助于插件作者快速开发图源插件。</source>
        <target state="needs-translation">为了方便开发，我们提供了一个抽象类 `ImageSource`，当你继承它并实现相应方法后以默认方式导出，就可以作为 Koishi 插件被加载，这有助于插件作者快速开发图源插件。</target>
      </trans-unit>
      <trans-unit id="66146">
        <source>准备工作</source>
        <target state="needs-translation">准备工作</target>
      </trans-unit>
      <trans-unit id="66148">
        <source>在此，我们将假设你已经阅读了[认识插件](https://koishi.chat/zh-CN/guide/plugin/)，并且配置好了 Koishi 插件的开发环境。</source>
        <target state="needs-translation">在此，我们将假设你已经阅读了[认识插件](https://koishi.chat/zh-CN/guide/plugin/)，并且配置好了 Koishi 插件的开发环境。</target>
      </trans-unit>
      <trans-unit id="66150">
        <source>图源插件需要继承的 `ImageSource` 类定义在 `koishi-plugin-booru` 包中，因此你需要将 `koishi-plugin-booru` 插件列为你的图源插件的对等依赖 (peerDependencies)。</source>
        <target state="needs-translation">图源插件需要继承的 `ImageSource` 类定义在 `koishi-plugin-booru` 包中，因此你需要将 `koishi-plugin-booru` 插件列为你的图源插件的对等依赖 (peerDependencies)。</target>
      </trans-unit>
      <trans-unit id="66152">
        <source>{
  &quot;peerDependencies&quot;: {
    &quot;booru&quot;: &quot;^1.2.0&quot;
  }
}</source>
        <target state="needs-translation">{
  &quot;peerDependencies&quot;: {
    &quot;booru&quot;: &quot;^1.2.0&quot;
  }
}</target>
      </trans-unit>
      <trans-unit id="66154">
        <source>**请根据你所需求的功能酌情升级对等依赖的 booru 插件的版本**</source>
        <target state="needs-translation">**请根据你所需求的功能酌情升级对等依赖的 booru 插件的版本**</target>
      </trans-unit>
      <trans-unit id="66156">
        <source>开发图源插件</source>
        <target state="needs-translation">开发图源插件</target>
      </trans-unit>
      <trans-unit id="66158">
        <source>此处以简化版的 `lolicon` 插件为例，可以从 `https://api.lolicon.net/` 的 API 获取图片及元信息。</source>
        <target state="needs-translation">此处以简化版的 `lolicon` 插件为例，可以从 `https://api.lolicon.net/` 的 API 获取图片及元信息。</target>
      </trans-unit>
      <trans-unit id="66160">
        <source>它的官方实现可以在 [这里](https://github.com/koishijs/koishi-plugin-booru/tree/main/packages/lolicon)。</source>
        <target state="needs-translation">它的官方实现可以在 [这里](https://github.com/koishijs/koishi-plugin-booru/tree/main/packages/lolicon)。</target>
      </trans-unit>
      <trans-unit id="66162">
        <source>import { Context, Schema } from 'koishi'
import { ImageSource } from 'koishi-plugin-booru'

class LoliconImageSource extends ImageSource&lt;LoliconImageSource.Config&gt; {
  // 定义图源支持的语言
  // 如 lolicon 支持日语、英语和汉语-简体中文等
  languages: string[] = ['en', 'zh-CN', 'ja']

  constructor(ctx: Context, config: LoliconImageSource.Config) {
    // 调用父类的拟构函数以注册图源
    super(ctx, config)
  }

  // `booru` 默认将标签转换为类 `danbooru` 的形式，即「空格分割标签，下划线替代空格」。
  // 而 lolicon 支持的标签不带空格，因此此处需要将其重载为空格分割。
  override tokenize(query: string): string[] {
    return query.split(/\s+/)
  }

  async get(query: ImageSource.Query): Promise&lt;ImageSource.Result[]&gt; {
    const param = {
      // `tags` 是一个字符串数组，根据 Lolicon API 的文档，传入数组等于「与」操作。
      tag: query.tags,
      // 指定获取数量
      num: query.count,
    }
    // 注：根据图源设计规范，当 `query.tags` 为空数组或空时，应当返回随机图片。
    // 由于 Lolicon API 默认对空标签会返回随机图，因此不需要做特别处理，
    // 但对于其他图源可能需要传入特别的参数才能使用随机图片功能。
    const resp = await this.http.post('https://api.lolicon.app/setu/v2', param)

    if (!Array.isArray(resp.data)) {
      return
    }

    // 返回类型为 `Result` 的数组，可用字段可参考类型提示。
    // 其中 `urls.*` 字段是图片的地址，也可以是 `base64` 编码。
    // 其中 `original` 是必须字段，应当是原图尺寸的 URL。
    // 另外还有 `large` (1200px) `medium` (600px) `small` (300px) `thumbnail` 等字段。
    // 括号中为该尺寸的参考大小，如果图源不提供对应尺寸，可以忽略此字段。
    return resp.data.map((setu) =&gt; {
      return {
        urls: {
          original: setu.urls.original,
          large: setu.urls.regular,
          medium: setu.urls.small,
          small: setu.urls.thumb,
          thumbnail: setu.urls.mini,
        },
        title: setu.title,
        author: setu.author,
        nsfw: setu.r18,
        tags: setu.tags,
        pageUrl: `https://pixiv.net/i/${setu.pid}`,
      }
    })
  }
}

// 图源插件还需要导出配置项，因此我们采用 TypeScript 的 namespace
// 将配置项 Config 与上面的 class 定义合并。
namespace LoliconImageSource {
  export interface Config extends ImageSource.Config {}

  export const Config: Schema&lt;Config&gt; = Schema.intersect([
    // 结合使用 `Svchema.intersect` 和 `createSchema` 辅助函数，
    // 向图源插件的配置项里添加全局的通用配置，`label` 一般为图源插件名。
    ImageSource.createSchema({ label: 'lolicon' }),
  ])
}

// 以默认导出方式导出整个命名空间
export default LoliconImageSource</source>
        <target state="needs-translation">import { Context, Schema } from 'koishi'
import { ImageSource } from 'koishi-plugin-booru'

class LoliconImageSource extends ImageSource&lt;LoliconImageSource.Config&gt; {
  // 定义图源支持的语言
  // 如 lolicon 支持日语、英语和汉语-简体中文等
  languages: string[] = ['en', 'zh-CN', 'ja']

  constructor(ctx: Context, config: LoliconImageSource.Config) {
    // 调用父类的拟构函数以注册图源
    super(ctx, config)
  }

  // `booru` 默认将标签转换为类 `danbooru` 的形式，即「空格分割标签，下划线替代空格」。
  // 而 lolicon 支持的标签不带空格，因此此处需要将其重载为空格分割。
  override tokenize(query: string): string[] {
    return query.split(/\s+/)
  }

  async get(query: ImageSource.Query): Promise&lt;ImageSource.Result[]&gt; {
    const param = {
      // `tags` 是一个字符串数组，根据 Lolicon API 的文档，传入数组等于「与」操作。
      tag: query.tags,
      // 指定获取数量
      num: query.count,
    }
    // 注：根据图源设计规范，当 `query.tags` 为空数组或空时，应当返回随机图片。
    // 由于 Lolicon API 默认对空标签会返回随机图，因此不需要做特别处理，
    // 但对于其他图源可能需要传入特别的参数才能使用随机图片功能。
    const resp = await this.http.post('https://api.lolicon.app/setu/v2', param)

    if (!Array.isArray(resp.data)) {
      return
    }

    // 返回类型为 `Result` 的数组，可用字段可参考类型提示。
    // 其中 `urls.*` 字段是图片的地址，也可以是 `base64` 编码。
    // 其中 `original` 是必须字段，应当是原图尺寸的 URL。
    // 另外还有 `large` (1200px) `medium` (600px) `small` (300px) `thumbnail` 等字段。
    // 括号中为该尺寸的参考大小，如果图源不提供对应尺寸，可以忽略此字段。
    return resp.data.map((setu) =&gt; {
      return {
        urls: {
          original: setu.urls.original,
          large: setu.urls.regular,
          medium: setu.urls.small,
          small: setu.urls.thumb,
          thumbnail: setu.urls.mini,
        },
        title: setu.title,
        author: setu.author,
        nsfw: setu.r18,
        tags: setu.tags,
        pageUrl: `https://pixiv.net/i/${setu.pid}`,
      }
    })
  }
}

// 图源插件还需要导出配置项，因此我们采用 TypeScript 的 namespace
// 将配置项 Config 与上面的 class 定义合并。
namespace LoliconImageSource {
  export interface Config extends ImageSource.Config {}

  export const Config: Schema&lt;Config&gt; = Schema.intersect([
    // 结合使用 `Svchema.intersect` 和 `createSchema` 辅助函数，
    // 向图源插件的配置项里添加全局的通用配置，`label` 一般为图源插件名。
    ImageSource.createSchema({ label: 'lolicon' }),
  ])
}

// 以默认导出方式导出整个命名空间
export default LoliconImageSource</target>
      </trans-unit>
      <trans-unit id="66164">
        <source>上述代码为介绍与解释 `booru` 图源的开发步骤有一定简化，你可以直接在 [GitHub](https://github.com/koishijs/koishi-plugin-booru/tree/main/packages/lolicon) 上阅读 lolicon 插件真正的源码。</source>
        <target state="needs-translation">上述代码为介绍与解释 `booru` 图源的开发步骤有一定简化，你可以直接在 [GitHub](https://github.com/koishijs/koishi-plugin-booru/tree/main/packages/lolicon) 上阅读 lolicon 插件真正的源码。</target>
      </trans-unit>
    </body>
  </file>
  <file id="2068" original="/[koishijs.koishi-plugin-booru] main/docs/zh-CN/index.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="66166">
        <source>介绍</source>
        <target state="translated">介紹</target>
      </trans-unit>
      <trans-unit id="66168">
        <source>「最好的涩图插件！」
   —— Shigma</source>
        <target state="needs-translation">「最好的涩图插件！」
   —— Shigma</target>
      </trans-unit>
      <trans-unit id="66170">
        <source>Booru 是一个基于 [Koishi](https://koishi.chat/) 的图片检索插件，支持多个图源站点。</source>
        <target state="needs-translation">Booru 是一个基于 [Koishi](https://koishi.chat/) 的图片检索插件，支持多个图源站点。</target>
      </trans-unit>
      <trans-unit id="66172">
        <source>你需要安装至少一个图源插件才能使用 Booru 插件。</source>
        <target state="needs-translation">你需要安装至少一个图源插件才能使用 Booru 插件。</target>
      </trans-unit>
      <trans-unit id="66174">
        <source>特性</source>
        <target state="needs-translation">特性</target>
      </trans-unit>
      <trans-unit id="66176">
        <source>支持多个[图源站点](#图源插件)</source>
        <target state="needs-translation">支持多个[图源站点](#图源插件)</target>
      </trans-unit>
      <trans-unit id="66178">
        <source>支持多种发送方式</source>
        <target state="needs-translation">支持多种发送方式</target>
      </trans-unit>
      <trans-unit id="66180">
        <source>支持随机检索</source>
        <target state="needs-translation">支持随机检索</target>
      </trans-unit>
      <trans-unit id="66182">
        <source>图源插件</source>
        <target state="needs-translation">图源插件</target>
      </trans-unit>
      <trans-unit id="66184">
        <source>Booru 插件支持多个图源站点，每个图源站点都有一个对应的插件。</source>
        <target state="needs-translation">Booru 插件支持多个图源站点，每个图源站点都有一个对应的插件。</target>
      </trans-unit>
      <trans-unit id="66186">
        <source>目前支持的图源站点有：</source>
        <target state="needs-translation">目前支持的图源站点有：</target>
      </trans-unit>
      <trans-unit id="66188">
        <source>图源</source>
        <target state="needs-translation">图源</target>
      </trans-unit>
      <trans-unit id="66190">
        <source>插件</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">外掛</target>
      </trans-unit>
      <trans-unit id="66192">
        <source>[Danbooru](https://danbooru.donmai.us/)</source>
        <target state="needs-translation">[Danbooru](https://danbooru.donmai.us/)</target>
      </trans-unit>
      <trans-unit id="66194">
        <source>[`koishi-plugin-booru-danbooru`](./plugins/danbooru.md)</source>
        <target state="needs-translation">[`koishi-plugin-booru-danbooru`](./plugins/danbooru.md)</target>
      </trans-unit>
      <trans-unit id="66196">
        <source>[e621](https://e621.net/)</source>
        <target state="needs-translation">[e621](https://e621.net/)</target>
      </trans-unit>
      <trans-unit id="66198">
        <source>[`koishi-plugin-booru-e621`](./plugins/e621.md)</source>
        <target state="needs-translation">[`koishi-plugin-booru-e621`](./plugins/e621.md)</target>
      </trans-unit>
      <trans-unit id="66200">
        <source>[e926](https://e926.net/)</source>
        <target state="needs-translation">[e926](https://e926.net/)</target>
      </trans-unit>
      <trans-unit id="66202">
        <source>[`koishi-plugin-booru-e621`](./plugins/e621.md)</source>
        <target state="needs-translation">[`koishi-plugin-booru-e621`](./plugins/e621.md)</target>
      </trans-unit>
      <trans-unit id="66204">
        <source>[Gelbooru](https://gelbooru.com/)</source>
        <target state="needs-translation">[Gelbooru](https://gelbooru.com/)</target>
      </trans-unit>
      <trans-unit id="66206">
        <source>[`koishi-plugin-booru-gelbooru`](./plugins/gelbooru.md)</source>
        <target state="needs-translation">[`koishi-plugin-booru-gelbooru`](./plugins/gelbooru.md)</target>
      </trans-unit>
      <trans-unit id="66208">
        <source>[Konachan](https://konachan.com/)</source>
        <target state="needs-translation">[Konachan](https://konachan.com/)</target>
      </trans-unit>
      <trans-unit id="66210">
        <source>[`koishi-plugin-booru-konachan`](./plugins/konachan.md)</source>
        <target state="needs-translation">[`koishi-plugin-booru-konachan`](./plugins/konachan.md)</target>
      </trans-unit>
      <trans-unit id="66212">
        <source>[Konachan.net](https://konachan.net/)</source>
        <target state="needs-translation">[Konachan.net](https://konachan.net/)</target>
      </trans-unit>
      <trans-unit id="66214">
        <source>[`koishi-plugin-booru-konachan`](./plugins/konachan.md)</source>
        <target state="needs-translation">[`koishi-plugin-booru-konachan`](./plugins/konachan.md)</target>
      </trans-unit>
      <trans-unit id="66216">
        <source>[Lolibooru](https://lolibooru.moe/)</source>
        <target state="needs-translation">[Lolibooru](https://lolibooru.moe/)</target>
      </trans-unit>
      <trans-unit id="66218">
        <source>[`koishi-plugin-booru-lolibooru`](./plugins/lolibooru.md)</source>
        <target state="needs-translation">[`koishi-plugin-booru-lolibooru`](./plugins/lolibooru.md)</target>
      </trans-unit>
      <trans-unit id="66220">
        <source>[Lolicon](https://lolicon.app/)</source>
        <target state="needs-translation">[Lolicon](https://lolicon.app/)</target>
      </trans-unit>
      <trans-unit id="66222">
        <source>[`koishi-plugin-booru-lolicon`](./plugins/lolicon.md)</source>
        <target state="needs-translation">[`koishi-plugin-booru-lolicon`](./plugins/lolicon.md)</target>
      </trans-unit>
      <trans-unit id="66224">
        <source>[萌虎](https://img.moehu.org/)</source>
        <target state="needs-translation">[萌虎](https://img.moehu.org/)</target>
      </trans-unit>
      <trans-unit id="66226">
        <source>[`koishi-plugin-booru-moehu`](./plugins/moehu.md)</source>
        <target state="needs-translation">[`koishi-plugin-booru-moehu`](./plugins/moehu.md)</target>
      </trans-unit>
      <trans-unit id="66228">
        <source>[Pixiv](https://www.pixiv.net/)</source>
        <target state="needs-translation">[Pixiv](https://www.pixiv.net/)</target>
      </trans-unit>
      <trans-unit id="66230">
        <source>[`koishi-plugin-booru-pixiv`](./plugins/pixiv.md)</source>
        <target state="needs-translation">[`koishi-plugin-booru-pixiv`](./plugins/pixiv.md)</target>
      </trans-unit>
      <trans-unit id="66232">
        <source>[Safebooru](https://safebooru.org/)</source>
        <target state="needs-translation">[Safebooru](https://safebooru.org/)</target>
      </trans-unit>
      <trans-unit id="66234">
        <source>[`koishi-plugin-booru-safebooru`](./plugins/safebooru.md)</source>
        <target state="needs-translation">[`koishi-plugin-booru-safebooru`](./plugins/safebooru.md)</target>
      </trans-unit>
      <trans-unit id="66236">
        <source>[SankakuComplex](https://chan.sankakucomplex.com/)</source>
        <target state="needs-translation">[SankakuComplex](https://chan.sankakucomplex.com/)</target>
      </trans-unit>
      <trans-unit id="66238">
        <source>[`koishi-plugin-booru-sankaku`](./plugins/sankaku.md)</source>
        <target state="needs-translation">[`koishi-plugin-booru-sankaku`](./plugins/sankaku.md)</target>
      </trans-unit>
      <trans-unit id="66240">
        <source>[Yande.re](https://yande.re/)</source>
        <target state="needs-translation">[Yande.re](https://yande.re/)</target>
      </trans-unit>
      <trans-unit id="66242">
        <source>[`koishi-plugin-booru-yande`](./plugins/yande.md)</source>
        <target state="needs-translation">[`koishi-plugin-booru-yande`](./plugins/yande.md)</target>
      </trans-unit>
      <trans-unit id="66244">
        <source>本地文件夹</source>
        <target state="needs-translation">本地文件夹</target>
      </trans-unit>
      <trans-unit id="66246">
        <source>[`koishi-plugin-booru-local`](./plugins/local.md)</source>
        <target state="needs-translation">[`koishi-plugin-booru-local`](./plugins/local.md)</target>
      </trans-unit>
    </body>
  </file>
  <file id="2070" original="/[koishijs.koishi-plugin-booru] main/docs/zh-CN/plugins/danbooru.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="66248">
        <source>koishi-plugin-booru-danbooru</source>
        <target state="needs-translation">koishi-plugin-booru-danbooru</target>
      </trans-unit>
      <trans-unit id="66250">
        <source>安装</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">安裝</target>
      </trans-unit>
      <trans-unit id="66252">
        <source>在 Koishi 中下载并安装本插件，若你还未安装 [Booru 插件](../index.md)，请先安装。</source>
        <target state="needs-translation">在 Koishi 中下载并安装本插件，若你还未安装 [Booru 插件](../index.md)，请先安装。</target>
      </trans-unit>
      <trans-unit id="66254">
        <source>配置项</source>
        <target state="needs-translation">配置项</target>
      </trans-unit>
      <trans-unit id="66256">
        <source>全局设置</source>
        <target state="needs-translation">全局设置</target>
      </trans-unit>
      <trans-unit id="66258">
        <source>此处的配置项可参考[图源全局设置](../config#图源全局设置)</source>
        <target state="needs-translation">此处的配置项可参考[图源全局设置](../config#图源全局设置)</target>
      </trans-unit>
      <trans-unit id="66260">
        <source>搜索设置</source>
        <target state="translated">搜尋設定</target>
      </trans-unit>
      <trans-unit id="66262">
        <source>&lt;br&gt;</source>
        <target state="needs-translation">&lt;br&gt;</target>
      </trans-unit>
      <trans-unit id="66264">
        <source>endpoint</source>
        <target state="needs-translation">endpoint</target>
      </trans-unit>
      <trans-unit id="66266">
        <source>类型：`string`</source>
        <target state="needs-translation">类型：`string`</target>
      </trans-unit>
      <trans-unit id="66268">
        <source>默认值：`https://danbooru.donmai.us`</source>
        <target state="needs-translation">默认值：`https://danbooru.donmai.us`</target>
      </trans-unit>
      <trans-unit id="66270">
        <source>Danbooru 的 API 地址。</source>
        <target state="needs-translation">Danbooru 的 API 地址。</target>
      </trans-unit>
      <trans-unit id="66272">
        <source>keyPairs</source>
        <target state="needs-translation">keyPairs</target>
      </trans-unit>
      <trans-unit id="66274">
        <source>类型：`Array&lt;{ login: string; apiKey: string }&gt;`</source>
        <target state="needs-translation">类型：`Array&lt;{ login: string; apiKey: string }&gt;`</target>
      </trans-unit>
      <trans-unit id="66276">
        <source>默认值：`[]`</source>
        <target state="needs-translation">默认值：`[]`</target>
      </trans-unit>
      <trans-unit id="66278">
        <source>Danbooru 的登录凭据。</source>
        <target state="needs-translation">Danbooru 的登录凭据。</target>
      </trans-unit>
      <trans-unit id="66280">
        <source>如该项为空，则使用匿名登录。</source>
        <target state="needs-translation">如该项为空，则使用匿名登录。</target>
      </trans-unit>
      <trans-unit id="66282">
        <source>由于 Danbooru 的 [API 限制](https://danbooru.donmai.us/wiki_pages/help%3Ausers)，匿名用户一次只能搜索 2 个标签，且极易触发 CloudFlare 防火墙限制（这表现为请求时无法获取图片，并返回 403 错误码）。</source>
        <target state="needs-translation">由于 Danbooru 的 [API 限制](https://danbooru.donmai.us/wiki_pages/help%3Ausers)，匿名用户一次只能搜索 2 个标签，且极易触发 CloudFlare 防火墙限制（这表现为请求时无法获取图片，并返回 403 错误码）。</target>
      </trans-unit>
      <trans-unit id="66284">
        <source>因此推荐设置至少一个登录凭据用于检索图片，当登录凭据设置为多个时，将会针对每个凭据的搜索次数进行平均分配。</source>
        <target state="needs-translation">因此推荐设置至少一个登录凭据用于检索图片，当登录凭据设置为多个时，将会针对每个凭据的搜索次数进行平均分配。</target>
      </trans-unit>
      <trans-unit id="66286">
        <source>获取与设置登录凭据 {#configure-credentials}</source>
        <target state="needs-translation">获取与设置登录凭据 {#configure-credentials}</target>
      </trans-unit>
      <trans-unit id="66288">
        <source>访问 [Danbooru](https://danbooru.donmai.us) 并登录。</source>
        <target state="needs-translation">访问 [Danbooru](https://danbooru.donmai.us) 并登录。</target>
      </trans-unit>
      <trans-unit id="66290">
        <source>如果你还没有账号，你需要先注册一个账号。</source>
        <target state="needs-translation">如果你还没有账号，你需要先注册一个账号。</target>
      </trans-unit>
      <trans-unit id="66292">
        <source>访问 [个人页面](https://danbooru.donmai.us/profile)，找到 `API Key` 字样并点击其右方的 `View` 按钮。</source>
        <target state="needs-translation">访问 [个人页面](https://danbooru.donmai.us/profile)，找到 `API Key` 字样并点击其右方的 `View` 按钮。</target>
      </trans-unit>
      <trans-unit id="66294">
        <source>在新的页面中，单击 `Add` 按钮添加一个新的 API 密钥，一般情况下只需要填写 `Name` 字段并点击 `Create` 按钮即可。</source>
        <target state="needs-translation">在新的页面中，单击 `Add` 按钮添加一个新的 API 密钥，一般情况下只需要填写 `Name` 字段并点击 `Create` 按钮即可。</target>
      </trans-unit>
      <trans-unit id="66296">
        <source>在列表中找到你刚刚创建的 API 密钥，复制 `Key` 字段的内容并粘贴到 Koishi 端的 `kayPairs` 配置项中的 `apiKey` 字段中。</source>
        <target state="needs-translation">在列表中找到你刚刚创建的 API 密钥，复制 `Key` 字段的内容并粘贴到 Koishi 端的 `kayPairs` 配置项中的 `apiKey` 字段中。</target>
      </trans-unit>
      <trans-unit id="66298">
        <source>在 `login` 字段中填写你的用户名，并保存配置。</source>
        <target state="needs-translation">在 `login` 字段中填写你的用户名，并保存配置。</target>
      </trans-unit>
    </body>
  </file>
  <file id="2072" original="/[koishijs.koishi-plugin-booru] main/docs/zh-CN/plugins/e621.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="66300">
        <source>koishi-plugin-booru-e621</source>
        <target state="needs-translation">koishi-plugin-booru-e621</target>
      </trans-unit>
      <trans-unit id="66302">
        <source>安装</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">安裝</target>
      </trans-unit>
      <trans-unit id="66304">
        <source>在 Koishi 中下载并安装本插件，若你还未安装 [Booru 插件](../index.md)，请先安装。</source>
        <target state="needs-translation">在 Koishi 中下载并安装本插件，若你还未安装 [Booru 插件](../index.md)，请先安装。</target>
      </trans-unit>
      <trans-unit id="66306">
        <source>配置项</source>
        <target state="needs-translation">配置项</target>
      </trans-unit>
      <trans-unit id="66308">
        <source>全局设置</source>
        <target state="needs-translation">全局设置</target>
      </trans-unit>
      <trans-unit id="66310">
        <source>此处的配置项可参考[图源全局设置](../config#图源全局设置)</source>
        <target state="needs-translation">此处的配置项可参考[图源全局设置](../config#图源全局设置)</target>
      </trans-unit>
      <trans-unit id="66312">
        <source>搜索设置</source>
        <target state="translated">搜尋設定</target>
      </trans-unit>
      <trans-unit id="66314">
        <source>&lt;br&gt;</source>
        <target state="needs-translation">&lt;br&gt;</target>
      </trans-unit>
      <trans-unit id="66316">
        <source>userAgent</source>
        <target state="needs-translation">userAgent</target>
      </trans-unit>
      <trans-unit id="66318">
        <source>类型：`string`</source>
        <target state="needs-translation">类型：`string`</target>
      </trans-unit>
      <trans-unit id="66320">
        <source>默认值：`Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36 Edg/114.0.1823.37`</source>
        <target state="needs-translation">默认值：`Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36 Edg/114.0.1823.37`</target>
      </trans-unit>
      <trans-unit id="66322">
        <source>请求时所使用的 User-Agent</source>
        <target state="needs-translation">请求时所使用的 User-Agent</target>
      </trans-unit>
      <trans-unit id="66324">
        <source>endpoint</source>
        <target state="needs-translation">endpoint</target>
      </trans-unit>
      <trans-unit id="66326">
        <source>类型：`string`</source>
        <target state="needs-translation">类型：`string`</target>
      </trans-unit>
      <trans-unit id="66328">
        <source>默认值：`https://e621.net`</source>
        <target state="needs-translation">默认值：`https://e621.net`</target>
      </trans-unit>
      <trans-unit id="66330">
        <source>e621/e926 的 API 地址。</source>
        <target state="needs-translation">e621/e926 的 API 地址。</target>
      </trans-unit>
      <trans-unit id="66332">
        <source>keyPairs</source>
        <target state="needs-translation">keyPairs</target>
      </trans-unit>
      <trans-unit id="66334">
        <source>类型：`Array&lt;{ login: string; apiKey: string }&gt;`</source>
        <target state="needs-translation">类型：`Array&lt;{ login: string; apiKey: string }&gt;`</target>
      </trans-unit>
      <trans-unit id="66336">
        <source>默认值：`[]`</source>
        <target state="needs-translation">默认值：`[]`</target>
      </trans-unit>
      <trans-unit id="66338">
        <source>e621/e926 的登录凭据。</source>
        <target state="needs-translation">e621/e926 的登录凭据。</target>
      </trans-unit>
      <trans-unit id="66340">
        <source>如该项为空，则使用匿名登录。</source>
        <target state="needs-translation">如该项为空，则使用匿名登录。</target>
      </trans-unit>
      <trans-unit id="66342">
        <source>由于 e621/e926 的 [API 限制](https://e621.net/help/api)，每个凭据一秒内只能搜索两次图片，因此推荐设置至少一个登录凭据用于检索图片，当登录凭据设置为多个时，将会针对每个凭据的搜索次数进行平均分配。</source>
        <target state="needs-translation">由于 e621/e926 的 [API 限制](https://e621.net/help/api)，每个凭据一秒内只能搜索两次图片，因此推荐设置至少一个登录凭据用于检索图片，当登录凭据设置为多个时，将会针对每个凭据的搜索次数进行平均分配。</target>
      </trans-unit>
      <trans-unit id="66344">
        <source>获取与设置登录凭据 {#configure-credentials}</source>
        <target state="needs-translation">获取与设置登录凭据 {#configure-credentials}</target>
      </trans-unit>
      <trans-unit id="66346">
        <source>访问 [e621](https://e621.net/) 或 [e926](https://e926.net/) 并登录。</source>
        <target state="needs-translation">访问 [e621](https://e621.net/) 或 [e926](https://e926.net/) 并登录。</target>
      </trans-unit>
      <trans-unit id="66348">
        <source>如果你还没有账号，你需要先注册一个账号。</source>
        <target state="needs-translation">如果你还没有账号，你需要先注册一个账号。</target>
      </trans-unit>
      <trans-unit id="66350">
        <source>访问 [e621 的个人页面](https://e621.net/users/home) 或 [e926 的个人页面](https://e926.net/users/home)，点击 `Manage API Access` 按钮。</source>
        <target state="needs-translation">访问 [e621 的个人页面](https://e621.net/users/home) 或 [e926 的个人页面](https://e926.net/users/home)，点击 `Manage API Access` 按钮。</target>
      </trans-unit>
      <trans-unit id="66352">
        <source>如果它要求你输入密码，请输入密码并确认。</source>
        <target state="needs-translation">如果它要求你输入密码，请输入密码并确认。</target>
      </trans-unit>
      <trans-unit id="66354">
        <source>在新的页面中，找到 `API Key` 字样，复制其下方的字符串的内容并粘贴到 Koishi 端的 `kayPairs` 配置项中的 `apiKey` 字段中。</source>
        <target state="needs-translation">在新的页面中，找到 `API Key` 字样，复制其下方的字符串的内容并粘贴到 Koishi 端的 `kayPairs` 配置项中的 `apiKey` 字段中。</target>
      </trans-unit>
      <trans-unit id="66356">
        <source>在 `login` 字段中填写你的用户名，并保存配置。</source>
        <target state="needs-translation">在 `login` 字段中填写你的用户名，并保存配置。</target>
      </trans-unit>
    </body>
  </file>
  <file id="2074" original="/[koishijs.koishi-plugin-booru] main/docs/zh-CN/plugins/gelbooru.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="66358">
        <source>koishi-plugin-booru-gelbooru</source>
        <target state="needs-translation">koishi-plugin-booru-gelbooru</target>
      </trans-unit>
      <trans-unit id="66360">
        <source>安装</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">安裝</target>
      </trans-unit>
      <trans-unit id="66362">
        <source>在 Koishi 中下载并安装本插件，若你还未安装 [Booru 插件](../index.md)，请先安装。</source>
        <target state="needs-translation">在 Koishi 中下载并安装本插件，若你还未安装 [Booru 插件](../index.md)，请先安装。</target>
      </trans-unit>
      <trans-unit id="66364">
        <source>配置项</source>
        <target state="needs-translation">配置项</target>
      </trans-unit>
      <trans-unit id="66366">
        <source>全局设置</source>
        <target state="needs-translation">全局设置</target>
      </trans-unit>
      <trans-unit id="66368">
        <source>此处的配置项可参考[图源全局设置](../config#图源全局设置)</source>
        <target state="needs-translation">此处的配置项可参考[图源全局设置](../config#图源全局设置)</target>
      </trans-unit>
      <trans-unit id="66370">
        <source>搜索设置</source>
        <target state="translated">搜尋設定</target>
      </trans-unit>
      <trans-unit id="66372">
        <source>&lt;br&gt;</source>
        <target state="needs-translation">&lt;br&gt;</target>
      </trans-unit>
      <trans-unit id="66374">
        <source>endpoint</source>
        <target state="needs-translation">endpoint</target>
      </trans-unit>
      <trans-unit id="66376">
        <source>类型：`string`</source>
        <target state="needs-translation">类型：`string`</target>
      </trans-unit>
      <trans-unit id="66378">
        <source>默认值：`https://gelbooru.com/index.php`</source>
        <target state="needs-translation">默认值：`https://gelbooru.com/index.php`</target>
      </trans-unit>
      <trans-unit id="66380">
        <source>Gelbooru 的 API 地址。</source>
        <target state="needs-translation">Gelbooru 的 API 地址。</target>
      </trans-unit>
      <trans-unit id="66382">
        <source>keyPairs</source>
        <target state="needs-translation">keyPairs</target>
      </trans-unit>
      <trans-unit id="66384">
        <source>类型：`string[]`</source>
        <target state="needs-translation">类型：`string[]`</target>
      </trans-unit>
      <trans-unit id="66386">
        <source>默认值：`[]`</source>
        <target state="needs-translation">默认值：`[]`</target>
      </trans-unit>
      <trans-unit id="66388">
        <source>Gelbooru 的登录凭据。</source>
        <target state="needs-translation">Gelbooru 的登录凭据。</target>
      </trans-unit>
      <trans-unit id="66390">
        <source>如该项为空，则使用匿名登录。</source>
        <target state="needs-translation">如该项为空，则使用匿名登录。</target>
      </trans-unit>
      <trans-unit id="66392">
        <source>由于 Gelbooru 的 API 限制，匿名用户极易触发防火墙限制（这表现为请求时无法获取图片，并返回 403 错误码）。</source>
        <target state="needs-translation">由于 Gelbooru 的 API 限制，匿名用户极易触发防火墙限制（这表现为请求时无法获取图片，并返回 403 错误码）。</target>
      </trans-unit>
      <trans-unit id="66394">
        <source>因此推荐设置至少一个登录凭据用于检索图片，当登录凭据设置为多个时，将会针对每个凭据的搜索次数进行平均分配。</source>
        <target state="needs-translation">因此推荐设置至少一个登录凭据用于检索图片，当登录凭据设置为多个时，将会针对每个凭据的搜索次数进行平均分配。</target>
      </trans-unit>
      <trans-unit id="66396">
        <source>获取与设置登录凭据 {#configure-credentials}</source>
        <target state="needs-translation">获取与设置登录凭据 {#configure-credentials}</target>
      </trans-unit>
      <trans-unit id="66398">
        <source>访问 [Gelbooru](https://gelbooru.com) 并登录。</source>
        <target state="needs-translation">访问 [Gelbooru](https://gelbooru.com) 并登录。</target>
      </trans-unit>
      <trans-unit id="66400">
        <source>如果你还没有账号，你需要先注册一个账号。</source>
        <target state="needs-translation">如果你还没有账号，你需要先注册一个账号。</target>
      </trans-unit>
      <trans-unit id="66402">
        <source>访问 [个人页面](https://gelbooru.com/index.php?page=account&amp;s=options) 并翻阅到页面底部找到 `API Access Credentials` 字样，复制其右侧的文本框的内容。</source>
        <target state="needs-translation">访问 [个人页面](https://gelbooru.com/index.php?page=account&amp;s=options) 并翻阅到页面底部找到 `API Access Credentials` 字样，复制其右侧的文本框的内容。</target>
      </trans-unit>
      <trans-unit id="66404">
        <source>在 Koishi 端的 `kayPairs` 配置项中添加项目，并粘贴刚刚复制的内容。</source>
        <target state="needs-translation">在 Koishi 端的 `kayPairs` 配置项中添加项目，并粘贴刚刚复制的内容。</target>
      </trans-unit>
      <trans-unit id="66406">
        <source>保存配置。</source>
        <target state="needs-translation">保存配置。</target>
      </trans-unit>
    </body>
  </file>
  <file id="2076" original="/[koishijs.koishi-plugin-booru] main/docs/zh-CN/plugins/konachan.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="66408">
        <source>koishi-plugin-booru-konachan</source>
        <target state="needs-translation">koishi-plugin-booru-konachan</target>
      </trans-unit>
      <trans-unit id="66410">
        <source>安装</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">安裝</target>
      </trans-unit>
      <trans-unit id="66412">
        <source>在 Koishi 中下载并安装本插件，若你还未安装 [Booru 插件](../index.md)，请先安装。</source>
        <target state="needs-translation">在 Koishi 中下载并安装本插件，若你还未安装 [Booru 插件](../index.md)，请先安装。</target>
      </trans-unit>
      <trans-unit id="66414">
        <source>配置项</source>
        <target state="needs-translation">配置项</target>
      </trans-unit>
      <trans-unit id="66416">
        <source>全局设置</source>
        <target state="needs-translation">全局设置</target>
      </trans-unit>
      <trans-unit id="66418">
        <source>此处的配置项可参考[图源全局设置](../config#图源全局设置)</source>
        <target state="needs-translation">此处的配置项可参考[图源全局设置](../config#图源全局设置)</target>
      </trans-unit>
      <trans-unit id="66420">
        <source>搜索设置</source>
        <target state="translated">搜尋設定</target>
      </trans-unit>
      <trans-unit id="66422">
        <source>&lt;br&gt;</source>
        <target state="needs-translation">&lt;br&gt;</target>
      </trans-unit>
      <trans-unit id="66424">
        <source>endpoint</source>
        <target state="needs-translation">endpoint</target>
      </trans-unit>
      <trans-unit id="66426">
        <source>类型：`string`</source>
        <target state="needs-translation">类型：`string`</target>
      </trans-unit>
      <trans-unit id="66428">
        <source>默认值：`https://konachan.com/`</source>
        <target state="needs-translation">默认值：`https://konachan.com/`</target>
      </trans-unit>
      <trans-unit id="66430">
        <source>Konachan 的 API 地址。</source>
        <target state="needs-translation">Konachan 的 API 地址。</target>
      </trans-unit>
      <trans-unit id="66432">
        <source>keyPairs</source>
        <target state="needs-translation">keyPairs</target>
      </trans-unit>
      <trans-unit id="66434">
        <source>类型：`Array&lt;{ login: string; password: string }&gt;`</source>
        <target state="needs-translation">类型：`Array&lt;{ login: string; password: string }&gt;`</target>
      </trans-unit>
      <trans-unit id="66436">
        <source>默认值：`[]`</source>
        <target state="needs-translation">默认值：`[]`</target>
      </trans-unit>
      <trans-unit id="66438">
        <source>Konachan 的登录凭据。</source>
        <target state="needs-translation">Konachan 的登录凭据。</target>
      </trans-unit>
      <trans-unit id="66440">
        <source>如该项为空，则使用匿名登录。</source>
        <target state="needs-translation">如该项为空，则使用匿名登录。</target>
      </trans-unit>
    </body>
  </file>
  <file id="2078" original="/[koishijs.koishi-plugin-booru] main/docs/zh-CN/plugins/local.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="66442">
        <source>koishi-plugin-booru-local</source>
        <target state="needs-translation">koishi-plugin-booru-local</target>
      </trans-unit>
      <trans-unit id="66444">
        <source>超快的本地图源支持</source>
        <target state="needs-translation">超快的本地图源支持</target>
      </trans-unit>
      <trans-unit id="66446">
        <source>安装</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">安裝</target>
      </trans-unit>
      <trans-unit id="66448">
        <source>在 Koishi 中下载并安装本插件，若你还未安装 [Booru 插件](../index.md)，请先安装。</source>
        <target state="needs-translation">在 Koishi 中下载并安装本插件，若你还未安装 [Booru 插件](../index.md)，请先安装。</target>
      </trans-unit>
      <trans-unit id="66450">
        <source>配置项</source>
        <target state="needs-translation">配置项</target>
      </trans-unit>
      <trans-unit id="66452">
        <source>全局设置</source>
        <target state="needs-translation">全局设置</target>
      </trans-unit>
      <trans-unit id="66454">
        <source>此处的配置项可参考[图源全局设置](../config#图源全局设置)</source>
        <target state="needs-translation">此处的配置项可参考[图源全局设置](../config#图源全局设置)</target>
      </trans-unit>
      <trans-unit id="66456">
        <source>图源设置</source>
        <target state="needs-translation">图源设置</target>
      </trans-unit>
      <trans-unit id="66458">
        <source>&lt;br&gt;</source>
        <target state="needs-translation">&lt;br&gt;</target>
      </trans-unit>
      <trans-unit id="66460">
        <source>endpoint</source>
        <target state="needs-translation">endpoint</target>
      </trans-unit>
      <trans-unit id="66462">
        <source>类型: `string[]`</source>
        <target state="needs-translation">类型: `string[]`</target>
      </trans-unit>
      <trans-unit id="66464">
        <source>图源文件夹，支持多个不同的文件夹</source>
        <target state="needs-translation">图源文件夹，支持多个不同的文件夹</target>
      </trans-unit>
      <trans-unit id="66466">
        <source>storage</source>
        <target state="needs-translation">storage</target>
      </trans-unit>
      <trans-unit id="66468">
        <source>类型: `ENUM`</source>
        <target state="needs-translation">类型: `ENUM`</target>
      </trans-unit>
      <trans-unit id="66470">
        <source>选项: `file | database`</source>
        <target state="needs-translation">选项: `file | database`</target>
      </trans-unit>
      <trans-unit id="66472">
        <source>默认值: `file`</source>
        <target state="needs-translation">默认值: `file`</target>
      </trans-unit>
      <trans-unit id="66474">
        <source>图源存数据存储方式，`file` 为文件存储，`database` 为数据库存储</source>
        <target state="needs-translation">图源存数据存储方式，`file` 为文件存储，`database` 为数据库存储</target>
      </trans-unit>
      <trans-unit id="66476">
        <source>reload</source>
        <target state="needs-translation">reload</target>
      </trans-unit>
      <trans-unit id="66478">
        <source>类型: `boolean`</source>
        <target state="needs-translation">类型: `boolean`</target>
      </trans-unit>
      <trans-unit id="66480">
        <source>默认值: `false`</source>
        <target state="needs-translation">默认值: `false`</target>
      </trans-unit>
      <trans-unit id="66482">
        <source>是否在每次启动时重新扫描图源文件夹</source>
        <target state="needs-translation">是否在每次启动时重新扫描图源文件夹</target>
      </trans-unit>
      <trans-unit id="66484">
        <source>languages</source>
        <target state="needs-translation">languages</target>
      </trans-unit>
      <trans-unit id="66486">
        <source>类型: `string[]`</source>
        <target state="needs-translation">类型: `string[]`</target>
      </trans-unit>
      <trans-unit id="66488">
        <source>默认值: `['zh-CN']`</source>
        <target state="needs-translation">默认值: `['zh-CN']`</target>
      </trans-unit>
      <trans-unit id="66490">
        <source>图源支持的语言</source>
        <target state="needs-translation">图源支持的语言</target>
      </trans-unit>
      <trans-unit id="66492">
        <source>文件设置</source>
        <target state="needs-translation">文件设置</target>
      </trans-unit>
      <trans-unit id="66494">
        <source>scraper</source>
        <target state="needs-translation">scraper</target>
      </trans-unit>
      <trans-unit id="66496">
        <source>类型: `string`</source>
        <target state="needs-translation">类型: `string`</target>
      </trans-unit>
      <trans-unit id="66498">
        <source>默认值: `{filename}-{tag}`</source>
        <target state="needs-translation">默认值: `{filename}-{tag}`</target>
      </trans-unit>
      <trans-unit id="66500">
        <source>文件元信息刮削器格式，详见 [刮削器](#刮削器)</source>
        <target state="needs-translation">文件元信息刮削器格式，详见 [刮削器](#刮削器)</target>
      </trans-unit>
      <trans-unit id="66502">
        <source>extension</source>
        <target state="needs-translation">extension</target>
      </trans-unit>
      <trans-unit id="66504">
        <source>类型: `string[]`</source>
        <target state="needs-translation">类型: `string[]`</target>
      </trans-unit>
      <trans-unit id="66506">
        <source>默认值: `['.jpg', '.png', '.jpeg', '.gif']`</source>
        <target state="needs-translation">默认值: `['.jpg', '.png', '.jpeg', '.gif']`</target>
      </trans-unit>
      <trans-unit id="66508">
        <source>支持的图片扩展名，请注意扩展名前的 `.` 是必须的</source>
        <target state="needs-translation">支持的图片扩展名，请注意扩展名前的 `.` 是必须的</target>
      </trans-unit>
      <trans-unit id="66510">
        <source>刮削器</source>
        <target state="needs-translation">刮削器</target>
      </trans-unit>
      <trans-unit id="66512">
        <source>该方式需要图片文件名是特定的格式，且为减少边界情况，仅支持使用 `-` 分割</source>
        <target state="needs-translation">该方式需要图片文件名是特定的格式，且为减少边界情况，仅支持使用 `-` 分割</target>
      </trans-unit>
      <trans-unit id="66514">
        <source>这是一个在文件名中指定该图片元信息的方式，以便于插件能够正确的搜索符合需求的图片。</source>
        <target state="needs-translation">这是一个在文件名中指定该图片元信息的方式，以便于插件能够正确的搜索符合需求的图片。</target>
      </trans-unit>
      <trans-unit id="66516">
        <source>使用</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">使用</target>
      </trans-unit>
      <trans-unit id="66518">
        <source>插件设置中 `scraper` 默认值可得出大致的使用方式：当 `scraper` 为 `{filename}-{tag}` 时，文件名为 `foo-[bar].jpg` 的图片将被刮削为 `{name: 'foo', tag: ['bar']， ...}`。</source>
        <target state="needs-translation">插件设置中 `scraper` 默认值可得出大致的使用方式：当 `scraper` 为 `{filename}-{tag}` 时，文件名为 `foo-[bar].jpg` 的图片将被刮削为 `{name: 'foo', tag: ['bar']， ...}`。</target>
      </trans-unit>
      <trans-unit id="66520">
        <source>即：文件名为 `foo` 的图片，其拥有 `bar` 这个 tags。</source>
        <target state="needs-translation">即：文件名为 `foo` 的图片，其拥有 `bar` 这个 tags。</target>
      </trans-unit>
      <trans-unit id="66522">
        <source>语法</source>
        <target state="needs-translation">语法</target>
      </trans-unit>
      <trans-unit id="66524">
        <source>`#...#`</source>
        <target state="needs-translation">`#...#`</target>
      </trans-unit>
      <trans-unit id="66526">
        <source>类型: `string`</source>
        <target state="needs-translation">类型: `string`</target>
      </trans-unit>
      <trans-unit id="66528">
        <source>默认值: `name`</source>
        <target state="needs-translation">默认值: `name`</target>
      </trans-unit>
      <trans-unit id="66530">
        <source>示例: `#name#{fliename}-{tag}`</source>
        <target state="needs-translation">示例: `#name#{fliename}-{tag}`</target>
      </trans-unit>
      <trans-unit id="66532">
        <source>该语法仅在 `scraper` 的第一个元素中有效，否则将被忽略</source>
        <target state="needs-translation">该语法仅在 `scraper` 的第一个元素中有效，否则将被忽略</target>
      </trans-unit>
      <trans-unit id="66534">
        <source>指定刮削器的工作方式，目前支持以下几种方式：</source>
        <target state="needs-translation">指定刮削器的工作方式，目前支持以下几种方式：</target>
      </trans-unit>
      <trans-unit id="66536">
        <source>`name`: 文件名模式</source>
        <target state="needs-translation">`name`: 文件名模式</target>
      </trans-unit>
      <trans-unit id="66538">
        <source>`meta`: 文件元信息模式（开发中）</source>
        <target state="needs-translation">`meta`: 文件元信息模式（开发中）</target>
      </trans-unit>
      <trans-unit id="66540">
        <source>`{filename}`</source>
        <target state="needs-translation">`{filename}`</target>
      </trans-unit>
      <trans-unit id="66542">
        <source>类型: `string`</source>
        <target state="needs-translation">类型: `string`</target>
      </trans-unit>
      <trans-unit id="66544">
        <source>当 `{filename}` 被放置在最后时，`+` 将失效（e.g. `{foo}-{filename}+`）</source>
        <target state="needs-translation">当 `{filename}` 被放置在最后时，`+` 将失效（e.g. `{foo}-{filename}+`）</target>
      </trans-unit>
      <trans-unit id="66546">
        <source>指示文件名所在的位置，文件名将被刮削为 `name`，并作为图片的 `name` 属性</source>
        <target state="needs-translation">指示文件名所在的位置，文件名将被刮削为 `name`，并作为图片的 `name` 属性</target>
      </trans-unit>
      <trans-unit id="66548">
        <source>`{tag}`</source>
        <target state="needs-translation">`{tag}`</target>
      </trans-unit>
      <trans-unit id="66550">
        <source>类型: `string[]`</source>
        <target state="needs-translation">类型: `string[]`</target>
      </trans-unit>
      <trans-unit id="66552">
        <source>指示标签所在的位置，标签将被刮削为 `tag`，并作为图片的 `tags` 属性</source>
        <target state="needs-translation">指示标签所在的位置，标签将被刮削为 `tag`，并作为图片的 `tags` 属性</target>
      </trans-unit>
      <trans-unit id="66554">
        <source>`{nsfw}`（WIP）</source>
        <target state="needs-translation">`{nsfw}`（WIP）</target>
      </trans-unit>
      <trans-unit id="66556">
        <source>类型: `boolean | 'furry' | 'guro' | 'shota' | 'bl'`</source>
        <target state="needs-translation">类型: `boolean | 'furry' | 'guro' | 'shota' | 'bl'`</target>
      </trans-unit>
      <trans-unit id="66558">
        <source>默认值: `nsfw=false`</source>
        <target state="needs-translation">默认值: `nsfw=false`</target>
      </trans-unit>
      <trans-unit id="66560">
        <source>指示图片是否为 nsfw，若为 `boolean` 类型，则直接将其作为 `nsfw` 属性，若为 `string` 类型，则将其作为 `nsfw` 属性的值</source>
        <target state="needs-translation">指示图片是否为 nsfw，若为 `boolean` 类型，则直接将其作为 `nsfw` 属性，若为 `string` 类型，则将其作为 `nsfw` 属性的值</target>
      </trans-unit>
      <trans-unit id="66562">
        <source>`+`</source>
        <target state="needs-translation">`+`</target>
      </trans-unit>
      <trans-unit id="66564">
        <source>忽略后续的内容不作为元信息处理</source>
        <target state="needs-translation">忽略后续的内容不作为元信息处理</target>
      </trans-unit>
      <trans-unit id="66566">
        <source>`.`</source>
        <target state="needs-translation">`.`</target>
      </trans-unit>
      <trans-unit id="66568">
        <source>匹配 `.` 开头的隐藏文件，不设置的情况下将忽略隐藏文件</source>
        <target state="needs-translation">匹配 `.` 开头的隐藏文件，不设置的情况下将忽略隐藏文件</target>
      </trans-unit>
    </body>
  </file>
  <file id="2080" original="/[koishijs.koishi-plugin-booru] main/docs/zh-CN/plugins/lolibooru.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="66570">
        <source>koishi-plugin-booru-lolibooru</source>
        <target state="needs-translation">koishi-plugin-booru-lolibooru</target>
      </trans-unit>
      <trans-unit id="66572">
        <source>安装</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">安裝</target>
      </trans-unit>
      <trans-unit id="66574">
        <source>在 Koishi 中下载并安装本插件，若你还未安装 [Booru 插件](../index.md)，请先安装。</source>
        <target state="needs-translation">在 Koishi 中下载并安装本插件，若你还未安装 [Booru 插件](../index.md)，请先安装。</target>
      </trans-unit>
      <trans-unit id="66576">
        <source>配置项</source>
        <target state="needs-translation">配置项</target>
      </trans-unit>
      <trans-unit id="66578">
        <source>全局设置</source>
        <target state="needs-translation">全局设置</target>
      </trans-unit>
      <trans-unit id="66580">
        <source>此处的配置项可参考[图源全局设置](../config#图源全局设置)</source>
        <target state="needs-translation">此处的配置项可参考[图源全局设置](../config#图源全局设置)</target>
      </trans-unit>
      <trans-unit id="66582">
        <source>搜索设置</source>
        <target state="translated">搜尋設定</target>
      </trans-unit>
      <trans-unit id="66584">
        <source>&lt;br&gt;</source>
        <target state="needs-translation">&lt;br&gt;</target>
      </trans-unit>
      <trans-unit id="66586">
        <source>endpoint</source>
        <target state="needs-translation">endpoint</target>
      </trans-unit>
      <trans-unit id="66588">
        <source>类型：`string`</source>
        <target state="needs-translation">类型：`string`</target>
      </trans-unit>
      <trans-unit id="66590">
        <source>默认值：`https://lolibooru.moe/`</source>
        <target state="needs-translation">默认值：`https://lolibooru.moe/`</target>
      </trans-unit>
      <trans-unit id="66592">
        <source>Lolibooru 的 API 地址。</source>
        <target state="needs-translation">Lolibooru 的 API 地址。</target>
      </trans-unit>
      <trans-unit id="66594">
        <source>keyPairs</source>
        <target state="needs-translation">keyPairs</target>
      </trans-unit>
      <trans-unit id="66596">
        <source>类型：`Array&lt;{ login: string; password: string }&gt;`</source>
        <target state="needs-translation">类型：`Array&lt;{ login: string; password: string }&gt;`</target>
      </trans-unit>
      <trans-unit id="66598">
        <source>默认值：`[]`</source>
        <target state="needs-translation">默认值：`[]`</target>
      </trans-unit>
      <trans-unit id="66600">
        <source>Lolibooru 的登录凭据。</source>
        <target state="needs-translation">Lolibooru 的登录凭据。</target>
      </trans-unit>
      <trans-unit id="66602">
        <source>如该项为空，则使用匿名登录。</source>
        <target state="needs-translation">如该项为空，则使用匿名登录。</target>
      </trans-unit>
    </body>
  </file>
  <file id="2082" original="/[koishijs.koishi-plugin-booru] main/docs/zh-CN/plugins/lolicon.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="66604">
        <source>koishi-plugin-booru-lolicon</source>
        <target state="needs-translation">koishi-plugin-booru-lolicon</target>
      </trans-unit>
      <trans-unit id="66606">
        <source>安装</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">安裝</target>
      </trans-unit>
      <trans-unit id="66608">
        <source>在 Koishi 中下载并安装本插件，若你还未安装 [Booru 插件](../index.md)，请先安装。</source>
        <target state="needs-translation">在 Koishi 中下载并安装本插件，若你还未安装 [Booru 插件](../index.md)，请先安装。</target>
      </trans-unit>
      <trans-unit id="66610">
        <source>配置项</source>
        <target state="needs-translation">配置项</target>
      </trans-unit>
      <trans-unit id="66612">
        <source>全局设置</source>
        <target state="needs-translation">全局设置</target>
      </trans-unit>
      <trans-unit id="66614">
        <source>此处的配置项可参考[图源全局设置](../config#图源全局设置)</source>
        <target state="needs-translation">此处的配置项可参考[图源全局设置](../config#图源全局设置)</target>
      </trans-unit>
      <trans-unit id="66616">
        <source>搜索设置</source>
        <target state="translated">搜尋設定</target>
      </trans-unit>
      <trans-unit id="66618">
        <source>&lt;br&gt;</source>
        <target state="needs-translation">&lt;br&gt;</target>
      </trans-unit>
      <trans-unit id="66620">
        <source>endpoint</source>
        <target state="needs-translation">endpoint</target>
      </trans-unit>
      <trans-unit id="66622">
        <source>类型: `string`</source>
        <target state="needs-translation">类型: `string`</target>
      </trans-unit>
      <trans-unit id="66624">
        <source>默认值: `https://api.lolicon.app/setu/v2`</source>
        <target state="needs-translation">默认值: `https://api.lolicon.app/setu/v2`</target>
      </trans-unit>
      <trans-unit id="66626">
        <source>r18</source>
        <target state="needs-translation">r18</target>
      </trans-unit>
      <trans-unit id="66628">
        <source>类型: `enum`</source>
        <target state="needs-translation">类型: `enum`</target>
      </trans-unit>
      <trans-unit id="66630">
        <source>可选值: `'非 R18' | '仅 R18' | '混合'`</source>
        <target state="needs-translation">可选值: `'非 R18' | '仅 R18' | '混合'`</target>
      </trans-unit>
      <trans-unit id="66632">
        <source>默认值: `'非 R18'`</source>
        <target state="needs-translation">默认值: `'非 R18'`</target>
      </trans-unit>
      <trans-unit id="66634">
        <source>proxy</source>
        <target state="needs-translation">proxy</target>
      </trans-unit>
      <trans-unit id="66636">
        <source>类型: `{ endpoint: string } | string`</source>
        <target state="needs-translation">类型: `{ endpoint: string } | string`</target>
      </trans-unit>
      <trans-unit id="66638">
        <source>可选值: `'i.pixiv.re' | 'i.pixiv.cat'`</source>
        <target state="needs-translation">可选值: `'i.pixiv.re' | 'i.pixiv.cat'`</target>
      </trans-unit>
      <trans-unit id="66640">
        <source>默认值: `'i.pixiv.re'`</source>
        <target state="needs-translation">默认值: `'i.pixiv.re'`</target>
      </trans-unit>
    </body>
  </file>
  <file id="2084" original="/[koishijs.koishi-plugin-booru] main/docs/zh-CN/plugins/moehu.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="66642">
        <source>koishi-plugin-booru-moehu</source>
        <target state="needs-translation">koishi-plugin-booru-moehu</target>
      </trans-unit>
      <trans-unit id="66644">
        <source>[萌虎](https://img.moehu.org/)图源支持</source>
        <target state="needs-translation">[萌虎](https://img.moehu.org/)图源支持</target>
      </trans-unit>
      <trans-unit id="66646">
        <source>安装</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">安裝</target>
      </trans-unit>
      <trans-unit id="66648">
        <source>在 Koishi 中下载并安装本插件，若你还未安装 [Booru 插件](../index.md)，请先安装。</source>
        <target state="needs-translation">在 Koishi 中下载并安装本插件，若你还未安装 [Booru 插件](../index.md)，请先安装。</target>
      </trans-unit>
    </body>
  </file>
  <file id="2086" original="/[koishijs.koishi-plugin-booru] main/docs/zh-CN/plugins/pixiv.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="66650">
        <source>koishi-plugin-booru-pixiv</source>
        <target state="needs-translation">koishi-plugin-booru-pixiv</target>
      </trans-unit>
      <trans-unit id="66652">
        <source>安装</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">安裝</target>
      </trans-unit>
      <trans-unit id="66654">
        <source>在 Koishi 中下载并安装本插件，若你还未安装 [Booru 插件](../index.md)，请先安装。</source>
        <target state="needs-translation">在 Koishi 中下载并安装本插件，若你还未安装 [Booru 插件](../index.md)，请先安装。</target>
      </trans-unit>
      <trans-unit id="66656">
        <source>在 [Pixiv](https://www.pixiv.net/) 注册账号并登录。</source>
        <target state="needs-translation">在 [Pixiv](https://www.pixiv.net/) 注册账号并登录。</target>
      </trans-unit>
      <trans-unit id="66658">
        <source>安装 [pixiv-auth](https://www.npmjs.com/package/koishi-plugin-pixiv-auth) 插件，根据其配置页面获取 `Refresh Token`，注意此插件需求图形界面。</source>
        <target state="needs-translation">安装 [pixiv-auth](https://www.npmjs.com/package/koishi-plugin-pixiv-auth) 插件，根据其配置页面获取 `Refresh Token`，注意此插件需求图形界面。</target>
      </trans-unit>
      <trans-unit id="66660">
        <source>如果你没有图形界面，也可以使用 [Pixiv OAuth Script](https://gist.github.com/ZipFile/c9ebedb224406f4f11845ab700124362) 脚本获取 `Refresh Token`。</source>
        <target state="needs-translation">如果你没有图形界面，也可以使用 [Pixiv OAuth Script](https://gist.github.com/ZipFile/c9ebedb224406f4f11845ab700124362) 脚本获取 `Refresh Token`。</target>
      </trans-unit>
      <trans-unit id="66662">
        <source>将 `Refresh Token` 填入配置项中的 `token` 项。</source>
        <target state="needs-translation">将 `Refresh Token` 填入配置项中的 `token` 项。</target>
      </trans-unit>
      <trans-unit id="66664">
        <source>配置项</source>
        <target state="needs-translation">配置项</target>
      </trans-unit>
      <trans-unit id="66666">
        <source>全局设置</source>
        <target state="needs-translation">全局设置</target>
      </trans-unit>
      <trans-unit id="66668">
        <source>此处的配置项可参考[图源全局设置](../config#图源全局设置)</source>
        <target state="needs-translation">此处的配置项可参考[图源全局设置](../config#图源全局设置)</target>
      </trans-unit>
      <trans-unit id="66670">
        <source>搜索设置</source>
        <target state="translated">搜尋設定</target>
      </trans-unit>
      <trans-unit id="66672">
        <source>&lt;br&gt;</source>
        <target state="needs-translation">&lt;br&gt;</target>
      </trans-unit>
      <trans-unit id="66674">
        <source>token</source>
        <target state="needs-translation">token</target>
      </trans-unit>
      <trans-unit id="66676">
        <source>类型：`string`</source>
        <target state="needs-translation">类型：`string`</target>
      </trans-unit>
      <trans-unit id="66678">
        <source>是否必填：是</source>
        <target state="needs-translation">是否必填：是</target>
      </trans-unit>
      <trans-unit id="66680">
        <source>Pixiv APP API 的 `Refresh Token`。</source>
        <target state="needs-translation">Pixiv APP API 的 `Refresh Token`。</target>
      </trans-unit>
      <trans-unit id="66682">
        <source>minBookmarks</source>
        <target state="needs-translation">minBookmarks</target>
      </trans-unit>
      <trans-unit id="66684">
        <source>类型: `number`</source>
        <target state="needs-translation">类型: `number`</target>
      </trans-unit>
      <trans-unit id="66686">
        <source>默认值: `0`</source>
        <target state="needs-translation">默认值: `0`</target>
      </trans-unit>
      <trans-unit id="66688">
        <source>最少收藏数</source>
        <target state="needs-translation">最少收藏数</target>
      </trans-unit>
      <trans-unit id="66690">
        <source>bypassMethod</source>
        <target state="needs-translation">bypassMethod</target>
      </trans-unit>
      <trans-unit id="66692">
        <source>类型: `'proxy' | 'route' | 'asset'`</source>
        <target state="needs-translation">类型: `'proxy' | 'route' | 'asset'`</target>
      </trans-unit>
      <trans-unit id="66694">
        <source>突破 Pixiv 站点图片防外部引用检测的方式。</source>
        <target state="needs-translation">突破 Pixiv 站点图片防外部引用检测的方式。</target>
      </trans-unit>
      <trans-unit id="66696">
        <source>具体[见下方说明](#突破-pixiv-检测)</source>
        <target state="needs-translation">具体[见下方说明](#突破-pixiv-检测)</target>
      </trans-unit>
      <trans-unit id="66698">
        <source>proxy</source>
        <target state="needs-translation">proxy</target>
      </trans-unit>
      <trans-unit id="66700">
        <source>类型: `{ endpoint: string } | string`</source>
        <target state="needs-translation">类型: `{ endpoint: string } | string`</target>
      </trans-unit>
      <trans-unit id="66702">
        <source>可选值: `'i.pixiv.re' | 'i.pixiv.cat'`</source>
        <target state="needs-translation">可选值: `'i.pixiv.re' | 'i.pixiv.cat'`</target>
      </trans-unit>
      <trans-unit id="66704">
        <source>默认值: `'i.pixiv.re'`</source>
        <target state="needs-translation">默认值: `'i.pixiv.re'`</target>
      </trans-unit>
      <trans-unit id="66706">
        <source>使用代理突破检测时的代理服务。</source>
        <target state="needs-translation">使用代理突破检测时的代理服务。</target>
      </trans-unit>
      <trans-unit id="66708">
        <source>如果是自定义代理服务，可以填写代理服务的地址。</source>
        <target state="needs-translation">如果是自定义代理服务，可以填写代理服务的地址。</target>
      </trans-unit>
      <trans-unit id="66710">
        <source>route</source>
        <target state="needs-translation">route</target>
      </trans-unit>
      <trans-unit id="66712">
        <source>类型: `string`</source>
        <target state="needs-translation">类型: `string`</target>
      </trans-unit>
      <trans-unit id="66714">
        <source>默认值: `'/booru/pixiv/proxy'`</source>
        <target state="needs-translation">默认值: `'/booru/pixiv/proxy'`</target>
      </trans-unit>
      <trans-unit id="66716">
        <source>使用 route 突破检测时的代理服务路径。</source>
        <target state="needs-translation">使用 route 突破检测时的代理服务路径。</target>
      </trans-unit>
      <trans-unit id="66718">
        <source>aesKey</source>
        <target state="needs-translation">aesKey</target>
      </trans-unit>
      <trans-unit id="66720">
        <source>类型: `string`</source>
        <target state="needs-translation">类型: `string`</target>
      </trans-unit>
      <trans-unit id="66722">
        <source>默认值: `''`</source>
        <target state="needs-translation">默认值: `''`</target>
      </trans-unit>
      <trans-unit id="66724">
        <source>使用 route 突破检测时的 AES 加密密钥。</source>
        <target state="needs-translation">使用 route 突破检测时的 AES 加密密钥。</target>
      </trans-unit>
      <trans-unit id="66726">
        <source>突破 Pixiv 检测 {#bypass-pixiv-detection}</source>
        <target state="needs-translation">突破 Pixiv 检测 {#bypass-pixiv-detection}</target>
      </trans-unit>
      <trans-unit id="66728">
        <source>Pixiv 站点全站引入了图片防外部引用检测，主要是检测 HTTP 请求的 Referer 头。</source>
        <target state="needs-translation">Pixiv 站点全站引入了图片防外部引用检测，主要是检测 HTTP 请求的 Referer 头。</target>
      </trans-unit>
      <trans-unit id="66730">
        <source>这个检测会阻止插件直接引用图片链接，导致部分适配器无法直接发送图片链接。</source>
        <target state="needs-translation">这个检测会阻止插件直接引用图片链接，导致部分适配器无法直接发送图片链接。</target>
      </trans-unit>
      <trans-unit id="66732">
        <source>为了解决这个问题，本插件提供了三种突破检测的方式。</source>
        <target state="needs-translation">为了解决这个问题，本插件提供了三种突破检测的方式。</target>
      </trans-unit>
      <trans-unit id="66734">
        <source>proxy</source>
        <target state="needs-translation">proxy</target>
      </trans-unit>
      <trans-unit id="66736">
        <source>使用 Pixiv 的图片代理服务，将图片链接转换为代理链接。</source>
        <target state="needs-translation">使用 Pixiv 的图片代理服务，将图片链接转换为代理链接。</target>
      </trans-unit>
      <trans-unit id="66738">
        <source>这通常使用公开的代理服务，如 [pixiv.cat](https://pixiv.cat) 等。</source>
        <target state="needs-translation">这通常使用公开的代理服务，如 [pixiv.cat](https://pixiv.cat) 等。</target>
      </trans-unit>
      <trans-unit id="66740">
        <source>route</source>
        <target state="needs-translation">route</target>
      </trans-unit>
      <trans-unit id="66742">
        <source>使用插件本身提供的图片代理服务，将图片链接转换到 Koishi 所在的服务器上。</source>
        <target state="needs-translation">使用插件本身提供的图片代理服务，将图片链接转换到 Koishi 所在的服务器上。</target>
      </trans-unit>
      <trans-unit id="66744">
        <source>这通常需要插件的服务器能够访问到 Pixiv 的图片链接。</source>
        <target state="needs-translation">这通常需要插件的服务器能够访问到 Pixiv 的图片链接。</target>
      </trans-unit>
      <trans-unit id="66746">
        <source>同时由于插件难以对访问来源进行可信检测，因此需要使用 AES 加密密钥对图片链接进行加密，以防止恶意访问。</source>
        <target state="needs-translation">同时由于插件难以对访问来源进行可信检测，因此需要使用 AES 加密密钥对图片链接进行加密，以防止恶意访问。</target>
      </trans-unit>
      <trans-unit id="66748">
        <source>密钥无法在配置中设置，在插件第一次启动时会自动生成一个随机的密钥。</source>
        <target state="needs-translation">密钥无法在配置中设置，在插件第一次启动时会自动生成一个随机的密钥。</target>
      </trans-unit>
      <trans-unit id="66750">
        <source>访问此路径时，只允许成功解密的请求通过，理论上只可能是插件本身提供的链接。</source>
        <target state="needs-translation">访问此路径时，只允许成功解密的请求通过，理论上只可能是插件本身提供的链接。</target>
      </trans-unit>
    </body>
  </file>
  <file id="2088" original="/[koishijs.koishi-plugin-booru] main/docs/zh-CN/plugins/safebooru.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="66752">
        <source>koishi-plugin-booru-safebooru</source>
        <target state="needs-translation">koishi-plugin-booru-safebooru</target>
      </trans-unit>
      <trans-unit id="66754">
        <source>安装</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">安裝</target>
      </trans-unit>
      <trans-unit id="66756">
        <source>在 Koishi 中下载并安装本插件，若你还未安装 [Booru 插件](../index.md)，请先安装。</source>
        <target state="needs-translation">在 Koishi 中下载并安装本插件，若你还未安装 [Booru 插件](../index.md)，请先安装。</target>
      </trans-unit>
      <trans-unit id="66758">
        <source>配置项</source>
        <target state="needs-translation">配置项</target>
      </trans-unit>
      <trans-unit id="66760">
        <source>全局设置</source>
        <target state="needs-translation">全局设置</target>
      </trans-unit>
      <trans-unit id="66762">
        <source>此处的配置项可参考[图源全局设置](../config#图源全局设置)</source>
        <target state="needs-translation">此处的配置项可参考[图源全局设置](../config#图源全局设置)</target>
      </trans-unit>
      <trans-unit id="66764">
        <source>搜索设置</source>
        <target state="translated">搜尋設定</target>
      </trans-unit>
      <trans-unit id="66766">
        <source>&lt;br&gt;</source>
        <target state="needs-translation">&lt;br&gt;</target>
      </trans-unit>
      <trans-unit id="66768">
        <source>endpoint</source>
        <target state="needs-translation">endpoint</target>
      </trans-unit>
      <trans-unit id="66770">
        <source>类型：`string`</source>
        <target state="needs-translation">类型：`string`</target>
      </trans-unit>
      <trans-unit id="66772">
        <source>默认值：`https://safebooru.org/index.php`</source>
        <target state="needs-translation">默认值：`https://safebooru.org/index.php`</target>
      </trans-unit>
      <trans-unit id="66774">
        <source>Safebooru 的 API 地址。</source>
        <target state="needs-translation">Safebooru 的 API 地址。</target>
      </trans-unit>
    </body>
  </file>
  <file id="2090" original="/[koishijs.koishi-plugin-booru] main/docs/zh-CN/plugins/sankaku.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="66776">
        <source>koishi-plugin-booru-sankaku</source>
        <target state="needs-translation">koishi-plugin-booru-sankaku</target>
      </trans-unit>
      <trans-unit id="66778">
        <source>安装</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">安裝</target>
      </trans-unit>
      <trans-unit id="66780">
        <source>在 Koishi 中下载并安装本插件，若你还未安装 [Booru 插件](../index.md)，请先安装。</source>
        <target state="needs-translation">在 Koishi 中下载并安装本插件，若你还未安装 [Booru 插件](../index.md)，请先安装。</target>
      </trans-unit>
      <trans-unit id="66782">
        <source>配置项</source>
        <target state="needs-translation">配置项</target>
      </trans-unit>
      <trans-unit id="66784">
        <source>全局设置</source>
        <target state="needs-translation">全局设置</target>
      </trans-unit>
      <trans-unit id="66786">
        <source>此处的配置项可参考[图源全局设置](../config#图源全局设置)</source>
        <target state="needs-translation">此处的配置项可参考[图源全局设置](../config#图源全局设置)</target>
      </trans-unit>
      <trans-unit id="66788">
        <source>搜索设置</source>
        <target state="translated">搜尋設定</target>
      </trans-unit>
      <trans-unit id="66790">
        <source>&lt;br&gt;</source>
        <target state="needs-translation">&lt;br&gt;</target>
      </trans-unit>
      <trans-unit id="66792">
        <source>keyPairs</source>
        <target state="needs-translation">keyPairs</target>
      </trans-unit>
      <trans-unit id="66794">
        <source>类型：`Array&lt;{ login: string; password: string }&gt;`</source>
        <target state="needs-translation">类型：`Array&lt;{ login: string; password: string }&gt;`</target>
      </trans-unit>
      <trans-unit id="66796">
        <source>默认值：`[]`</source>
        <target state="needs-translation">默认值：`[]`</target>
      </trans-unit>
      <trans-unit id="66798">
        <source>SankakuComplex 的登录凭据。</source>
        <target state="needs-translation">SankakuComplex 的登录凭据。</target>
      </trans-unit>
      <trans-unit id="66800">
        <source>如该项为空，则使用匿名登录。</source>
        <target state="needs-translation">如该项为空，则使用匿名登录。</target>
      </trans-unit>
    </body>
  </file>
  <file id="2092" original="/[koishijs.koishi-plugin-booru] main/docs/zh-CN/plugins/yande.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="66802">
        <source>koishi-plugin-booru-yande</source>
        <target state="needs-translation">koishi-plugin-booru-yande</target>
      </trans-unit>
      <trans-unit id="66804">
        <source>安装</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">安裝</target>
      </trans-unit>
      <trans-unit id="66806">
        <source>在 Koishi 中下载并安装本插件，若你还未安装 [Booru 插件](../index.md)，请先安装。</source>
        <target state="needs-translation">在 Koishi 中下载并安装本插件，若你还未安装 [Booru 插件](../index.md)，请先安装。</target>
      </trans-unit>
      <trans-unit id="66808">
        <source>配置项</source>
        <target state="needs-translation">配置项</target>
      </trans-unit>
      <trans-unit id="66810">
        <source>全局设置</source>
        <target state="needs-translation">全局设置</target>
      </trans-unit>
      <trans-unit id="66812">
        <source>此处的配置项可参考[图源全局设置](../config#图源全局设置)</source>
        <target state="needs-translation">此处的配置项可参考[图源全局设置](../config#图源全局设置)</target>
      </trans-unit>
      <trans-unit id="66814">
        <source>搜索设置</source>
        <target state="translated">搜尋設定</target>
      </trans-unit>
      <trans-unit id="66816">
        <source>&lt;br&gt;</source>
        <target state="needs-translation">&lt;br&gt;</target>
      </trans-unit>
      <trans-unit id="66818">
        <source>endpoint</source>
        <target state="needs-translation">endpoint</target>
      </trans-unit>
      <trans-unit id="66820">
        <source>类型：`string`</source>
        <target state="needs-translation">类型：`string`</target>
      </trans-unit>
      <trans-unit id="66822">
        <source>默认值：`https://yande.re/`</source>
        <target state="needs-translation">默认值：`https://yande.re/`</target>
      </trans-unit>
      <trans-unit id="66824">
        <source>Yande.re 的 API 地址。</source>
        <target state="needs-translation">Yande.re 的 API 地址。</target>
      </trans-unit>
      <trans-unit id="66826">
        <source>keyPairs</source>
        <target state="needs-translation">keyPairs</target>
      </trans-unit>
      <trans-unit id="66828">
        <source>类型：`Array&lt;{ login: string; password: string }&gt;`</source>
        <target state="needs-translation">类型：`Array&lt;{ login: string; password: string }&gt;`</target>
      </trans-unit>
      <trans-unit id="66830">
        <source>默认值：`[]`</source>
        <target state="needs-translation">默认值：`[]`</target>
      </trans-unit>
      <trans-unit id="66832">
        <source>Yande.re 的登录凭据。</source>
        <target state="needs-translation">Yande.re 的登录凭据。</target>
      </trans-unit>
      <trans-unit id="66834">
        <source>如该项为空，则使用匿名登录。</source>
        <target state="needs-translation">如该项为空，则使用匿名登录。</target>
      </trans-unit>
    </body>
  </file>
  <file id="2094" original="/[koishijs.koishi-plugin-booru] main/docs/zh-CN/usage.md" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="66836">
        <source>使用</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">使用</target>
      </trans-unit>
      <trans-unit id="66838">
        <source>指令</source>
        <target state="needs-translation">指令</target>
      </trans-unit>
      <trans-unit id="66840">
        <source>`booru` 插件会注册名为 `booru` 的指令，用于搜索图片，只需在指令后面跟上搜索关键词即可。</source>
        <target state="needs-translation">`booru` 插件会注册名为 `booru` 的指令，用于搜索图片，只需在指令后面跟上搜索关键词即可。</target>
      </trans-unit>
      <trans-unit id="66842">
        <source>当搜索关键词为空时，会返回随机图片。</source>
        <target state="needs-translation">当搜索关键词为空时，会返回随机图片。</target>
      </trans-unit>
      <trans-unit id="66844">
        <source>如 [`danbooru`](./plugins/danbooru.md), [`gelbooru`](./plugins/gelbooru.md) 等图源插件仅支持英语 (en)，而 [`pixiv`](./plugins/pixiv.md) 则支持日语 (ja)、英语 (en)、简体与繁体中文 (zh) 和韩语 (ko)，但大部分情况下日语 (ja) 会有更好的效果。</source>
        <target state="needs-translation">如 [`danbooru`](./plugins/danbooru.md), [`gelbooru`](./plugins/gelbooru.md) 等图源插件仅支持英语 (en)，而 [`pixiv`](./plugins/pixiv.md) 则支持日语 (ja)、英语 (en)、简体与繁体中文 (zh) 和韩语 (ko)，但大部分情况下日语 (ja) 会有更好的效果。</target>
      </trans-unit>
      <trans-unit id="66846">
        <source>:::</source>
        <target state="needs-translation">:::</target>
      </trans-unit>
      <trans-unit id="66848">
        <source>booru komeiji koishi</source>
        <target state="needs-translation">booru komeiji koishi</target>
      </trans-unit>
      <trans-unit id="66850">
        <source>

I miss You &lt;br&gt;
作者: 京田スズカ &lt;br&gt;
页面地址: https://www.pixiv.net/artworks/101250949 &lt;br&gt;
作者主页: https://www.pixiv.net/users/3718340 &lt;br&gt;
图源: pixiv &lt;br&gt;
标签: 東方 東方Project 古明地こいし こいしちゃんうふふ こいしちゃんマジ天使 目がハート 東方Project1000users入り 白抜きまつ毛 &lt;br&gt;
</source>
        <target state="needs-translation">

I miss You &lt;br&gt;
作者: 京田スズカ &lt;br&gt;
页面地址: https://www.pixiv.net/artworks/101250949 &lt;br&gt;
作者主页: https://www.pixiv.net/users/3718340 &lt;br&gt;
图源: pixiv &lt;br&gt;
标签: 東方 東方Project 古明地こいし こいしちゃんうふふ こいしちゃんマジ天使 目がハート 東方Project1000users入り 白抜きまつ毛 &lt;br&gt;
</target>
      </trans-unit>
    </body>
  </file>
  <file id="2096" original="/[koishijs.koishi-plugin-booru] main/docs/.vitepress/config/zh-CN.json" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="66852" resname="description">
        <source>最好的涩图插件！</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">最好的圖像檢索外掛程式！</target>
        <context-group purpose="information">
          <context context-type="source"> -&gt; description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="66854" resname="head.0.0">
        <source>link</source>
        <target state="needs-translation">link</target>
        <context-group purpose="information">
          <context context-type="source">head -&gt; 0 -&gt; 0</context>
        </context-group>
      </trans-unit>
      <trans-unit id="66856" resname="head.0.1.rel">
        <source>icon</source>
        <target state="needs-translation">icon</target>
        <context-group purpose="information">
          <context context-type="source">head -&gt; 0 -&gt; 1 -&gt; rel</context>
        </context-group>
      </trans-unit>
      <trans-unit id="66858" resname="head.0.1.href">
        <source>https://koishi.chat/logo.png</source>
        <target state="needs-translation">https://koishi.chat/logo.png</target>
        <context-group purpose="information">
          <context context-type="source">head -&gt; 0 -&gt; 1 -&gt; href</context>
        </context-group>
      </trans-unit>
      <trans-unit id="66860" resname="head.1.0">
        <source>link</source>
        <target state="needs-translation">link</target>
        <context-group purpose="information">
          <context context-type="source">head -&gt; 1 -&gt; 0</context>
        </context-group>
      </trans-unit>
      <trans-unit id="66862" resname="head.1.1.rel">
        <source>manifest</source>
        <target state="needs-translation">manifest</target>
        <context-group purpose="information">
          <context context-type="source">head -&gt; 1 -&gt; 1 -&gt; rel</context>
        </context-group>
      </trans-unit>
      <trans-unit id="66864" resname="head.1.1.href" approved="yes">
        <source>/manifest/zh-CN.json</source>
        <target state="final">/manifest/zh-TW.json</target>
        <context-group purpose="information">
          <context context-type="source">head -&gt; 1 -&gt; 1 -&gt; href</context>
        </context-group>
      </trans-unit>
      <trans-unit id="66866" resname="head.2.0">
        <source>meta</source>
        <target state="needs-translation">meta</target>
        <context-group purpose="information">
          <context context-type="source">head -&gt; 2 -&gt; 0</context>
        </context-group>
      </trans-unit>
      <trans-unit id="66868" resname="head.2.1.name">
        <source>theme-color</source>
        <target state="needs-translation">theme-color</target>
        <context-group purpose="information">
          <context context-type="source">head -&gt; 2 -&gt; 1 -&gt; name</context>
        </context-group>
      </trans-unit>
      <trans-unit id="66870" resname="head.2.1.content">
        <source>#5546a3</source>
        <target state="needs-translation">#5546a3</target>
        <context-group purpose="information">
          <context context-type="source">head -&gt; 2 -&gt; 1 -&gt; content</context>
        </context-group>
      </trans-unit>
      <trans-unit id="66872" resname="themeConfig.editLink.text">
        <source>在 GitHub 编辑此页面</source>
        <target state="translated">在 Crowdin 上翻譯此頁面</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; editLink -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="66874" resname="themeConfig.editLink.pattern" approved="yes">
        <source>https://github.com/koishijs/koishi-plugin-booru/edit/main/docs/:path</source>
        <target state="final">https://crowdin.com/translate/koishi/:id/zhcn-zhtw</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; editLink -&gt; pattern</context>
        </context-group>
      </trans-unit>
      <trans-unit id="66876" resname="themeConfig.sidebar./.0.text">
        <source>指南</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">指南</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; / -&gt; 0 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="66878" resname="themeConfig.sidebar./.0.items.0.text">
        <source>介绍</source>
        <target state="translated">介紹</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; / -&gt; 0 -&gt; items -&gt; 0 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="66880" resname="themeConfig.sidebar./.0.items.0.link">
        <source>/</source>
        <target state="needs-translation">/</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; / -&gt; 0 -&gt; items -&gt; 0 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="66882" resname="themeConfig.sidebar./.0.items.1.text">
        <source>使用</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">使用</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; / -&gt; 0 -&gt; items -&gt; 1 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="66884" resname="themeConfig.sidebar./.0.items.1.link">
        <source>/usage</source>
        <target state="needs-translation">/usage</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; / -&gt; 0 -&gt; items -&gt; 1 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="66886" resname="themeConfig.sidebar./.0.items.2.text">
        <source>配置项</source>
        <target state="needs-translation">配置项</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; / -&gt; 0 -&gt; items -&gt; 2 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="66888" resname="themeConfig.sidebar./.0.items.2.link">
        <source>/config</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">/config</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; / -&gt; 0 -&gt; items -&gt; 2 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="66890" resname="themeConfig.sidebar./.1.text">
        <source>插件</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">外掛</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; / -&gt; 1 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="66892" resname="themeConfig.sidebar./.1.items.0.text">
        <source>Danbooru</source>
        <target state="needs-translation">Danbooru</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; / -&gt; 1 -&gt; items -&gt; 0 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="66894" resname="themeConfig.sidebar./.1.items.0.link">
        <source>/plugins/danbooru</source>
        <target state="needs-translation">/plugins/danbooru</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; / -&gt; 1 -&gt; items -&gt; 0 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="66896" resname="themeConfig.sidebar./.1.items.1.text">
        <source>e621</source>
        <target state="needs-translation">e621</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; / -&gt; 1 -&gt; items -&gt; 1 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="66898" resname="themeConfig.sidebar./.1.items.1.link">
        <source>/plugins/e621</source>
        <target state="needs-translation">/plugins/e621</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; / -&gt; 1 -&gt; items -&gt; 1 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="66900" resname="themeConfig.sidebar./.1.items.2.text">
        <source>Gelbooru</source>
        <target state="needs-translation">Gelbooru</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; / -&gt; 1 -&gt; items -&gt; 2 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="66902" resname="themeConfig.sidebar./.1.items.2.link">
        <source>/plugins/gelbooru</source>
        <target state="needs-translation">/plugins/gelbooru</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; / -&gt; 1 -&gt; items -&gt; 2 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="66904" resname="themeConfig.sidebar./.1.items.3.text">
        <source>Konachan</source>
        <target state="needs-translation">Konachan</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; / -&gt; 1 -&gt; items -&gt; 3 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="66906" resname="themeConfig.sidebar./.1.items.3.link">
        <source>/plugins/konachan</source>
        <target state="needs-translation">/plugins/konachan</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; / -&gt; 1 -&gt; items -&gt; 3 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="66908" resname="themeConfig.sidebar./.1.items.4.text">
        <source>Lolibooru</source>
        <target state="needs-translation">Lolibooru</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; / -&gt; 1 -&gt; items -&gt; 4 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="66910" resname="themeConfig.sidebar./.1.items.4.link">
        <source>/plugins/lolibooru</source>
        <target state="needs-translation">/plugins/lolibooru</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; / -&gt; 1 -&gt; items -&gt; 4 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="66912" resname="themeConfig.sidebar./.1.items.5.text">
        <source>Lolicon</source>
        <target state="needs-translation">Lolicon</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; / -&gt; 1 -&gt; items -&gt; 5 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="66914" resname="themeConfig.sidebar./.1.items.5.link">
        <source>/plugins/lolicon</source>
        <target state="needs-translation">/plugins/lolicon</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; / -&gt; 1 -&gt; items -&gt; 5 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="66916" resname="themeConfig.sidebar./.1.items.6.text">
        <source>Local</source>
        <target state="needs-translation">Local</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; / -&gt; 1 -&gt; items -&gt; 6 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="66918" resname="themeConfig.sidebar./.1.items.6.link">
        <source>/plugins/local</source>
        <target state="needs-translation">/plugins/local</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; / -&gt; 1 -&gt; items -&gt; 6 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="66920" resname="themeConfig.sidebar./.1.items.7.text">
        <source>萌虎</source>
        <target state="needs-translation">萌虎</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; / -&gt; 1 -&gt; items -&gt; 7 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="66922" resname="themeConfig.sidebar./.1.items.7.link">
        <source>/plugins/moehu</source>
        <target state="needs-translation">/plugins/moehu</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; / -&gt; 1 -&gt; items -&gt; 7 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="66924" resname="themeConfig.sidebar./.1.items.8.text">
        <source>Pixiv</source>
        <target state="needs-translation">Pixiv</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; / -&gt; 1 -&gt; items -&gt; 8 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="66926" resname="themeConfig.sidebar./.1.items.8.link">
        <source>/plugins/pixiv</source>
        <target state="needs-translation">/plugins/pixiv</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; / -&gt; 1 -&gt; items -&gt; 8 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="66928" resname="themeConfig.sidebar./.1.items.9.text">
        <source>Safebooru</source>
        <target state="needs-translation">Safebooru</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; / -&gt; 1 -&gt; items -&gt; 9 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="66930" resname="themeConfig.sidebar./.1.items.9.link">
        <source>/plugins/safebooru</source>
        <target state="needs-translation">/plugins/safebooru</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; / -&gt; 1 -&gt; items -&gt; 9 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="66932" resname="themeConfig.sidebar./.1.items.10.text">
        <source>Sankaku</source>
        <target state="needs-translation">Sankaku</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; / -&gt; 1 -&gt; items -&gt; 10 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="66934" resname="themeConfig.sidebar./.1.items.10.link">
        <source>/plugins/sankaku</source>
        <target state="needs-translation">/plugins/sankaku</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; / -&gt; 1 -&gt; items -&gt; 10 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="66936" resname="themeConfig.sidebar./.1.items.11.text">
        <source>Yande</source>
        <target state="needs-translation">Yande</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; / -&gt; 1 -&gt; items -&gt; 11 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="66938" resname="themeConfig.sidebar./.1.items.11.link">
        <source>/plugins/yande</source>
        <target state="needs-translation">/plugins/yande</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; / -&gt; 1 -&gt; items -&gt; 11 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="66940" resname="themeConfig.sidebar./.2.text">
        <source>开发</source>
        <target state="translated">開發</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; / -&gt; 2 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="66942" resname="themeConfig.sidebar./.2.items.0.text">
        <source>图源</source>
        <target state="needs-translation">图源</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; / -&gt; 2 -&gt; items -&gt; 0 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="66944" resname="themeConfig.sidebar./.2.items.0.link">
        <source>/develop/source</source>
        <target state="needs-translation">/develop/source</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; / -&gt; 2 -&gt; items -&gt; 0 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="66946" resname="themeConfig.sidebar./.2.items.1.text">
        <source>服务</source>
        <target state="needs-translation">服务</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; / -&gt; 2 -&gt; items -&gt; 1 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="66948" resname="themeConfig.sidebar./.2.items.1.link">
        <source>/develop/service</source>
        <target state="needs-translation">/develop/service</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; / -&gt; 2 -&gt; items -&gt; 1 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="66950" resname="themeConfig.sidebar./.2.items.2.text">
        <source>API</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">API</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; / -&gt; 2 -&gt; items -&gt; 2 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="66952" resname="themeConfig.sidebar./.2.items.2.link">
        <source>/develop/api</source>
        <target state="needs-translation">/develop/api</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; / -&gt; 2 -&gt; items -&gt; 2 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="66954" resname="themeConfig.sidebar./.3.text">
        <source>更多</source>
        <target state="translated">更多</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; / -&gt; 3 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="66956" resname="themeConfig.sidebar./.3.items.0.text">
        <source>Koishi 官网</source>
        <target state="needs-translation">Koishi 官网</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; / -&gt; 3 -&gt; items -&gt; 0 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="66958" resname="themeConfig.sidebar./.3.items.0.link">
        <source>https://koishi.chat</source>
        <target state="needs-translation">https://koishi.chat</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; / -&gt; 3 -&gt; items -&gt; 0 -&gt; link</context>
        </context-group>
      </trans-unit>
      <trans-unit id="66960" resname="themeConfig.sidebar./.3.items.1.text">
        <source>爱发电：@迷子</source>
        <target state="needs-translation">爱发电：@迷子</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; / -&gt; 3 -&gt; items -&gt; 1 -&gt; text</context>
        </context-group>
      </trans-unit>
      <trans-unit id="66962" resname="themeConfig.sidebar./.3.items.1.link">
        <source>https://afdian.net/a/ff14_hamster</source>
        <target state="needs-translation">https://afdian.net/a/ff14_hamster</target>
        <context-group purpose="information">
          <context context-type="source">themeConfig -&gt; sidebar -&gt; / -&gt; 3 -&gt; items -&gt; 1 -&gt; link</context>
        </context-group>
      </trans-unit>
    </body>
  </file>
  <file id="2098" original="/[koishijs.koishi-plugin-booru] main/docs/public/manifest/zh-CN.json" source-language="zh-CN" target-language="zh-TW" datatype="plaintext" project-id="547913" tool-id="crowdin">
    <header>
      <tool tool-id="crowdin" tool-name="Crowdin" tool-version="1.1"/>
    </header>
    <body>
      <trans-unit id="66964" resname="name">
        <source>koishi-plugin-booru</source>
        <target state="needs-translation">koishi-plugin-booru</target>
        <context-group purpose="information">
          <context context-type="source"> -&gt; name</context>
        </context-group>
      </trans-unit>
      <trans-unit id="66966" resname="short_name">
        <source>Booru</source>
        <target state="needs-translation">Booru</target>
        <context-group purpose="information">
          <context context-type="source"> -&gt; short_name</context>
        </context-group>
      </trans-unit>
      <trans-unit id="66968" resname="description">
        <source>最好的涩图插件！</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">最好的圖像檢索外掛程式！</target>
        <context-group purpose="information">
          <context context-type="source"> -&gt; description</context>
        </context-group>
      </trans-unit>
      <trans-unit id="66970" resname="start_url">
        <source>/zh-CN/</source>
        <target state="needs-translation">/zh-CN/</target>
        <context-group purpose="information">
          <context context-type="source"> -&gt; start_url</context>
        </context-group>
      </trans-unit>
      <trans-unit id="66972" resname="display">
        <source>standalone</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">standalone</target>
        <context-group purpose="information">
          <context context-type="source"> -&gt; display</context>
        </context-group>
      </trans-unit>
      <trans-unit id="66974" resname="background_color">
        <source>#ffffff</source>
        <target state="needs-translation">#ffffff</target>
        <context-group purpose="information">
          <context context-type="source"> -&gt; background_color</context>
        </context-group>
      </trans-unit>
      <trans-unit id="66976" resname="theme_color">
        <source>#5546a3</source>
        <target state="needs-translation">#5546a3</target>
        <context-group purpose="information">
          <context context-type="source"> -&gt; theme_color</context>
        </context-group>
      </trans-unit>
      <trans-unit id="66978" resname="icons.0.src">
        <source>https://koishi.chat/logo.png</source>
        <target state="needs-translation">https://koishi.chat/logo.png</target>
        <context-group purpose="information">
          <context context-type="source">icons -&gt; 0 -&gt; src</context>
        </context-group>
      </trans-unit>
      <trans-unit id="66980" resname="icons.0.sizes">
        <source>384x384</source>
        <target state="needs-review-translation" state-qualifier="leveraged-tm">384x384</target>
        <context-group purpose="information">
          <context context-type="source">icons -&gt; 0 -&gt; sizes</context>
        </context-group>
      </trans-unit>
      <trans-unit id="66982" resname="icons.0.type">
        <source>image/png</source>
        <target state="needs-translation">image/png</target>
        <context-group purpose="information">
          <context context-type="source">icons -&gt; 0 -&gt; type</context>
        </context-group>
      </trans-unit>
    </body>
  </file>
</xliff>
